/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ADObjectRestoreParam struct for ADObjectRestoreParam
type ADObjectRestoreParam struct {
	Credentials *Credentials `json:"credentials,omitempty"`
	// Array of AD object guids to restore either from recycle bin or from AD snapshot. The guid should not exist in production AD. If it exits, then kDuplicate error is output in status.
	GuidVec []string `json:"guidVec,omitempty"`
	// Restore option flags of type ADObjectRestoreOptionFlags.
	OptionFlags NullableInt32 `json:"optionFlags,omitempty"`
	// Distinguished name(DN) of the target Organization Unit (OU) to restore non-OU object. This can be empty, in which case objects are restored to their original OU. The 'credential' specified must have privileges to add objects to this OU. Example: 'OU=SJC,OU=EngOU,DC=contoso,DC=com'. This parameter is ignored for OU objects.
	OuPath NullableString `json:"ouPath,omitempty"`
	// When restoring a GPO, need to know the absolute path for SYSVOL folder.
	SrcSysvolFolder NullableString `json:"srcSysvolFolder,omitempty"`
}

// NewADObjectRestoreParam instantiates a new ADObjectRestoreParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADObjectRestoreParam() *ADObjectRestoreParam {
	this := ADObjectRestoreParam{}
	return &this
}

// NewADObjectRestoreParamWithDefaults instantiates a new ADObjectRestoreParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADObjectRestoreParamWithDefaults() *ADObjectRestoreParam {
	this := ADObjectRestoreParam{}
	return &this
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *ADObjectRestoreParam) GetCredentials() Credentials {
	if o == nil || o.Credentials == nil {
		var ret Credentials
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADObjectRestoreParam) GetCredentialsOk() (*Credentials, bool) {
	if o == nil || o.Credentials == nil {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *ADObjectRestoreParam) HasCredentials() bool {
	if o != nil && o.Credentials != nil {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given Credentials and assigns it to the Credentials field.
func (o *ADObjectRestoreParam) SetCredentials(v Credentials) {
	o.Credentials = &v
}

// GetGuidVec returns the GuidVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ADObjectRestoreParam) GetGuidVec() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.GuidVec
}

// GetGuidVecOk returns a tuple with the GuidVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ADObjectRestoreParam) GetGuidVecOk() (*[]string, bool) {
	if o == nil || o.GuidVec == nil {
		return nil, false
	}
	return &o.GuidVec, true
}

// HasGuidVec returns a boolean if a field has been set.
func (o *ADObjectRestoreParam) HasGuidVec() bool {
	if o != nil && o.GuidVec != nil {
		return true
	}

	return false
}

// SetGuidVec gets a reference to the given []string and assigns it to the GuidVec field.
func (o *ADObjectRestoreParam) SetGuidVec(v []string) {
	o.GuidVec = v
}

// GetOptionFlags returns the OptionFlags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ADObjectRestoreParam) GetOptionFlags() int32 {
	if o == nil || o.OptionFlags.Get() == nil {
		var ret int32
		return ret
	}
	return *o.OptionFlags.Get()
}

// GetOptionFlagsOk returns a tuple with the OptionFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ADObjectRestoreParam) GetOptionFlagsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OptionFlags.Get(), o.OptionFlags.IsSet()
}

// HasOptionFlags returns a boolean if a field has been set.
func (o *ADObjectRestoreParam) HasOptionFlags() bool {
	if o != nil && o.OptionFlags.IsSet() {
		return true
	}

	return false
}

// SetOptionFlags gets a reference to the given NullableInt32 and assigns it to the OptionFlags field.
func (o *ADObjectRestoreParam) SetOptionFlags(v int32) {
	o.OptionFlags.Set(&v)
}
// SetOptionFlagsNil sets the value for OptionFlags to be an explicit nil
func (o *ADObjectRestoreParam) SetOptionFlagsNil() {
	o.OptionFlags.Set(nil)
}

// UnsetOptionFlags ensures that no value is present for OptionFlags, not even an explicit nil
func (o *ADObjectRestoreParam) UnsetOptionFlags() {
	o.OptionFlags.Unset()
}

// GetOuPath returns the OuPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ADObjectRestoreParam) GetOuPath() string {
	if o == nil || o.OuPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.OuPath.Get()
}

// GetOuPathOk returns a tuple with the OuPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ADObjectRestoreParam) GetOuPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OuPath.Get(), o.OuPath.IsSet()
}

// HasOuPath returns a boolean if a field has been set.
func (o *ADObjectRestoreParam) HasOuPath() bool {
	if o != nil && o.OuPath.IsSet() {
		return true
	}

	return false
}

// SetOuPath gets a reference to the given NullableString and assigns it to the OuPath field.
func (o *ADObjectRestoreParam) SetOuPath(v string) {
	o.OuPath.Set(&v)
}
// SetOuPathNil sets the value for OuPath to be an explicit nil
func (o *ADObjectRestoreParam) SetOuPathNil() {
	o.OuPath.Set(nil)
}

// UnsetOuPath ensures that no value is present for OuPath, not even an explicit nil
func (o *ADObjectRestoreParam) UnsetOuPath() {
	o.OuPath.Unset()
}

// GetSrcSysvolFolder returns the SrcSysvolFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ADObjectRestoreParam) GetSrcSysvolFolder() string {
	if o == nil || o.SrcSysvolFolder.Get() == nil {
		var ret string
		return ret
	}
	return *o.SrcSysvolFolder.Get()
}

// GetSrcSysvolFolderOk returns a tuple with the SrcSysvolFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ADObjectRestoreParam) GetSrcSysvolFolderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SrcSysvolFolder.Get(), o.SrcSysvolFolder.IsSet()
}

// HasSrcSysvolFolder returns a boolean if a field has been set.
func (o *ADObjectRestoreParam) HasSrcSysvolFolder() bool {
	if o != nil && o.SrcSysvolFolder.IsSet() {
		return true
	}

	return false
}

// SetSrcSysvolFolder gets a reference to the given NullableString and assigns it to the SrcSysvolFolder field.
func (o *ADObjectRestoreParam) SetSrcSysvolFolder(v string) {
	o.SrcSysvolFolder.Set(&v)
}
// SetSrcSysvolFolderNil sets the value for SrcSysvolFolder to be an explicit nil
func (o *ADObjectRestoreParam) SetSrcSysvolFolderNil() {
	o.SrcSysvolFolder.Set(nil)
}

// UnsetSrcSysvolFolder ensures that no value is present for SrcSysvolFolder, not even an explicit nil
func (o *ADObjectRestoreParam) UnsetSrcSysvolFolder() {
	o.SrcSysvolFolder.Unset()
}

func (o ADObjectRestoreParam) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Credentials != nil {
		toSerialize["credentials"] = o.Credentials
	}
	if o.GuidVec != nil {
		toSerialize["guidVec"] = o.GuidVec
	}
	if o.OptionFlags.IsSet() {
		toSerialize["optionFlags"] = o.OptionFlags.Get()
	}
	if o.OuPath.IsSet() {
		toSerialize["ouPath"] = o.OuPath.Get()
	}
	if o.SrcSysvolFolder.IsSet() {
		toSerialize["srcSysvolFolder"] = o.SrcSysvolFolder.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableADObjectRestoreParam struct {
	value *ADObjectRestoreParam
	isSet bool
}

func (v NullableADObjectRestoreParam) Get() *ADObjectRestoreParam {
	return v.value
}

func (v *NullableADObjectRestoreParam) Set(val *ADObjectRestoreParam) {
	v.value = val
	v.isSet = true
}

func (v NullableADObjectRestoreParam) IsSet() bool {
	return v.isSet
}

func (v *NullableADObjectRestoreParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADObjectRestoreParam(val *ADObjectRestoreParam) *NullableADObjectRestoreParam {
	return &NullableADObjectRestoreParam{value: val, isSet: true}
}

func (v NullableADObjectRestoreParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADObjectRestoreParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


