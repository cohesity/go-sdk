/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ProtectedObjectsSummary Specifies the statistics of the protected objects on the cluster.
type ProtectedObjectsSummary struct {
	// Specifies the total number of protected objects.
	NumObjectsProtected NullableInt64 `json:"numObjectsProtected,omitempty"`
	// Specifies the total number of unprotected objects.
	NumObjectsUnprotected NullableInt64 `json:"numObjectsUnprotected,omitempty"`
	// Specifies the total size of protected objects in bytes.
	ProtectedSizeBytes NullableInt64 `json:"protectedSizeBytes,omitempty"`
	// Specifies the stats of Protected objects by environment.
	StatsByEnv *[]ProtectedObjectsSummaryByEnv `json:"statsByEnv,omitempty"`
	// Specifies the total size of unprotected objects in bytes.
	UnprotectedSizeBytes NullableInt64 `json:"unprotectedSizeBytes,omitempty"`
}

// NewProtectedObjectsSummary instantiates a new ProtectedObjectsSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectedObjectsSummary() *ProtectedObjectsSummary {
	this := ProtectedObjectsSummary{}
	return &this
}

// NewProtectedObjectsSummaryWithDefaults instantiates a new ProtectedObjectsSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectedObjectsSummaryWithDefaults() *ProtectedObjectsSummary {
	this := ProtectedObjectsSummary{}
	return &this
}

// GetNumObjectsProtected returns the NumObjectsProtected field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectsSummary) GetNumObjectsProtected() int64 {
	if o == nil || o.NumObjectsProtected.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumObjectsProtected.Get()
}

// GetNumObjectsProtectedOk returns a tuple with the NumObjectsProtected field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectsSummary) GetNumObjectsProtectedOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumObjectsProtected.Get(), o.NumObjectsProtected.IsSet()
}

// HasNumObjectsProtected returns a boolean if a field has been set.
func (o *ProtectedObjectsSummary) HasNumObjectsProtected() bool {
	if o != nil && o.NumObjectsProtected.IsSet() {
		return true
	}

	return false
}

// SetNumObjectsProtected gets a reference to the given NullableInt64 and assigns it to the NumObjectsProtected field.
func (o *ProtectedObjectsSummary) SetNumObjectsProtected(v int64) {
	o.NumObjectsProtected.Set(&v)
}
// SetNumObjectsProtectedNil sets the value for NumObjectsProtected to be an explicit nil
func (o *ProtectedObjectsSummary) SetNumObjectsProtectedNil() {
	o.NumObjectsProtected.Set(nil)
}

// UnsetNumObjectsProtected ensures that no value is present for NumObjectsProtected, not even an explicit nil
func (o *ProtectedObjectsSummary) UnsetNumObjectsProtected() {
	o.NumObjectsProtected.Unset()
}

// GetNumObjectsUnprotected returns the NumObjectsUnprotected field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectsSummary) GetNumObjectsUnprotected() int64 {
	if o == nil || o.NumObjectsUnprotected.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumObjectsUnprotected.Get()
}

// GetNumObjectsUnprotectedOk returns a tuple with the NumObjectsUnprotected field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectsSummary) GetNumObjectsUnprotectedOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumObjectsUnprotected.Get(), o.NumObjectsUnprotected.IsSet()
}

// HasNumObjectsUnprotected returns a boolean if a field has been set.
func (o *ProtectedObjectsSummary) HasNumObjectsUnprotected() bool {
	if o != nil && o.NumObjectsUnprotected.IsSet() {
		return true
	}

	return false
}

// SetNumObjectsUnprotected gets a reference to the given NullableInt64 and assigns it to the NumObjectsUnprotected field.
func (o *ProtectedObjectsSummary) SetNumObjectsUnprotected(v int64) {
	o.NumObjectsUnprotected.Set(&v)
}
// SetNumObjectsUnprotectedNil sets the value for NumObjectsUnprotected to be an explicit nil
func (o *ProtectedObjectsSummary) SetNumObjectsUnprotectedNil() {
	o.NumObjectsUnprotected.Set(nil)
}

// UnsetNumObjectsUnprotected ensures that no value is present for NumObjectsUnprotected, not even an explicit nil
func (o *ProtectedObjectsSummary) UnsetNumObjectsUnprotected() {
	o.NumObjectsUnprotected.Unset()
}

// GetProtectedSizeBytes returns the ProtectedSizeBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectsSummary) GetProtectedSizeBytes() int64 {
	if o == nil || o.ProtectedSizeBytes.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ProtectedSizeBytes.Get()
}

// GetProtectedSizeBytesOk returns a tuple with the ProtectedSizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectsSummary) GetProtectedSizeBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectedSizeBytes.Get(), o.ProtectedSizeBytes.IsSet()
}

// HasProtectedSizeBytes returns a boolean if a field has been set.
func (o *ProtectedObjectsSummary) HasProtectedSizeBytes() bool {
	if o != nil && o.ProtectedSizeBytes.IsSet() {
		return true
	}

	return false
}

// SetProtectedSizeBytes gets a reference to the given NullableInt64 and assigns it to the ProtectedSizeBytes field.
func (o *ProtectedObjectsSummary) SetProtectedSizeBytes(v int64) {
	o.ProtectedSizeBytes.Set(&v)
}
// SetProtectedSizeBytesNil sets the value for ProtectedSizeBytes to be an explicit nil
func (o *ProtectedObjectsSummary) SetProtectedSizeBytesNil() {
	o.ProtectedSizeBytes.Set(nil)
}

// UnsetProtectedSizeBytes ensures that no value is present for ProtectedSizeBytes, not even an explicit nil
func (o *ProtectedObjectsSummary) UnsetProtectedSizeBytes() {
	o.ProtectedSizeBytes.Unset()
}

// GetStatsByEnv returns the StatsByEnv field value if set, zero value otherwise.
func (o *ProtectedObjectsSummary) GetStatsByEnv() []ProtectedObjectsSummaryByEnv {
	if o == nil || o.StatsByEnv == nil {
		var ret []ProtectedObjectsSummaryByEnv
		return ret
	}
	return *o.StatsByEnv
}

// GetStatsByEnvOk returns a tuple with the StatsByEnv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectsSummary) GetStatsByEnvOk() (*[]ProtectedObjectsSummaryByEnv, bool) {
	if o == nil || o.StatsByEnv == nil {
		return nil, false
	}
	return o.StatsByEnv, true
}

// HasStatsByEnv returns a boolean if a field has been set.
func (o *ProtectedObjectsSummary) HasStatsByEnv() bool {
	if o != nil && o.StatsByEnv != nil {
		return true
	}

	return false
}

// SetStatsByEnv gets a reference to the given []ProtectedObjectsSummaryByEnv and assigns it to the StatsByEnv field.
func (o *ProtectedObjectsSummary) SetStatsByEnv(v []ProtectedObjectsSummaryByEnv) {
	o.StatsByEnv = &v
}

// GetUnprotectedSizeBytes returns the UnprotectedSizeBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectsSummary) GetUnprotectedSizeBytes() int64 {
	if o == nil || o.UnprotectedSizeBytes.Get() == nil {
		var ret int64
		return ret
	}
	return *o.UnprotectedSizeBytes.Get()
}

// GetUnprotectedSizeBytesOk returns a tuple with the UnprotectedSizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectsSummary) GetUnprotectedSizeBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UnprotectedSizeBytes.Get(), o.UnprotectedSizeBytes.IsSet()
}

// HasUnprotectedSizeBytes returns a boolean if a field has been set.
func (o *ProtectedObjectsSummary) HasUnprotectedSizeBytes() bool {
	if o != nil && o.UnprotectedSizeBytes.IsSet() {
		return true
	}

	return false
}

// SetUnprotectedSizeBytes gets a reference to the given NullableInt64 and assigns it to the UnprotectedSizeBytes field.
func (o *ProtectedObjectsSummary) SetUnprotectedSizeBytes(v int64) {
	o.UnprotectedSizeBytes.Set(&v)
}
// SetUnprotectedSizeBytesNil sets the value for UnprotectedSizeBytes to be an explicit nil
func (o *ProtectedObjectsSummary) SetUnprotectedSizeBytesNil() {
	o.UnprotectedSizeBytes.Set(nil)
}

// UnsetUnprotectedSizeBytes ensures that no value is present for UnprotectedSizeBytes, not even an explicit nil
func (o *ProtectedObjectsSummary) UnsetUnprotectedSizeBytes() {
	o.UnprotectedSizeBytes.Unset()
}

func (o ProtectedObjectsSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NumObjectsProtected.IsSet() {
		toSerialize["numObjectsProtected"] = o.NumObjectsProtected.Get()
	}
	if o.NumObjectsUnprotected.IsSet() {
		toSerialize["numObjectsUnprotected"] = o.NumObjectsUnprotected.Get()
	}
	if o.ProtectedSizeBytes.IsSet() {
		toSerialize["protectedSizeBytes"] = o.ProtectedSizeBytes.Get()
	}
	if o.StatsByEnv != nil {
		toSerialize["statsByEnv"] = o.StatsByEnv
	}
	if o.UnprotectedSizeBytes.IsSet() {
		toSerialize["unprotectedSizeBytes"] = o.UnprotectedSizeBytes.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProtectedObjectsSummary struct {
	value *ProtectedObjectsSummary
	isSet bool
}

func (v NullableProtectedObjectsSummary) Get() *ProtectedObjectsSummary {
	return v.value
}

func (v *NullableProtectedObjectsSummary) Set(val *ProtectedObjectsSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectedObjectsSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectedObjectsSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectedObjectsSummary(val *ProtectedObjectsSummary) *NullableProtectedObjectsSummary {
	return &NullableProtectedObjectsSummary{value: val, isSet: true}
}

func (v NullableProtectedObjectsSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectedObjectsSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


