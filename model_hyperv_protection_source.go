/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// HypervProtectionSource Specifies a Protection Source in HyperV environment.
type HypervProtectionSource struct {
	// Array of Agents on the Physical Protection Source.  Specifiles the agents running on the HyperV Protection Source and the status information.
	Agents []AgentInformation `json:"agents,omitempty"`
	// Specifies the type of backup supported by the VM. 'kRctBackup', 'kVssBackup' Specifies the type of an HyperV datastore object. 'kRctBackup' indicates backup is done using RCT/checkpoints. 'kVssBackup' indicates backup is done using VSS.
	BackupType NullableString `json:"backupType,omitempty"`
	// Specifies the build number for HyperV SCVMM Servers.
	BuildNumber NullableString `json:"buildNumber,omitempty"`
	// Specifies the cluster name for 'kHostCluster' objects.
	ClusterName NullableString `json:"clusterName,omitempty"`
	DatastoreInfo *HypervDatastore `json:"datastoreInfo,omitempty"`
	// Specifies a description about the Protection Source.
	Description NullableString `json:"description,omitempty"`
	// Specifies host OS type for 'kVirtualMachine' objects. 'kLinux' indicates the Linux operating system. 'kWindows' indicates the Microsoft Windows operating system. 'kAix' indicates the IBM AIX operating system. 'kSolaris' indicates the Oracle Solaris operating system. 'kSapHana' indicates the Sap Hana database system developed by SAP SE. 'kOther' indicates the other types of operating system.
	HostType NullableString `json:"hostType,omitempty"`
	// Specifies the UUID for 'kVirtualMachine' HyperV objects.
	HypervUuid NullableString `json:"hypervUuid,omitempty"`
	// Specifies the name of the HyperV Object.
	Name NullableString `json:"name,omitempty"`
	// Specifies the list of VM Tag attributes associated with this Object.
	TagAttributes []TagAttribute `json:"tagAttributes,omitempty"`
	// Specifies the type of an HyperV Protection Source Object such as 'kSCVMMServer', 'kStandaloneHost', 'kNetwork', etc. overrideDescription: true Specifies the type of an HyperV Protection Source. 'kSCVMMServer' indicates a collection of root folders clusters. 'kStandaloneHost' indicates a single Nutanix cluster. 'kStandaloneCluster' indicates a single Nutanix cluster. 'kHostGroup' indicates a Nutanix cluster managed by a Prism Central. 'kHypervHost' indicates an HyperV host. 'kHostCluster' indicates a Nutanix cluster managed by a Prism Central. 'kVirtualMachine' indicates a Virtual Machine. 'kNetwork' indicates a Virtual Machine network object. 'kDatastore' represents a storage container object. 'kTag' indicates a tag type object. 'kCustomProperty' indicates a custom property including tag type.
	Type NullableString `json:"type,omitempty"`
	// Specifies the UUID of the Object. This is unique within the HyperV environment.
	Uuid NullableString `json:"uuid,omitempty"`
	VmInfo *HypervVirtualMachine `json:"vmInfo,omitempty"`
	// Specifies the windows version for HyperV hosts.
	WindowsVersion NullableString `json:"windowsVersion,omitempty"`
}

// NewHypervProtectionSource instantiates a new HypervProtectionSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHypervProtectionSource() *HypervProtectionSource {
	this := HypervProtectionSource{}
	return &this
}

// NewHypervProtectionSourceWithDefaults instantiates a new HypervProtectionSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHypervProtectionSourceWithDefaults() *HypervProtectionSource {
	this := HypervProtectionSource{}
	return &this
}

// GetAgents returns the Agents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervProtectionSource) GetAgents() []AgentInformation {
	if o == nil  {
		var ret []AgentInformation
		return ret
	}
	return o.Agents
}

// GetAgentsOk returns a tuple with the Agents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervProtectionSource) GetAgentsOk() (*[]AgentInformation, bool) {
	if o == nil || o.Agents == nil {
		return nil, false
	}
	return &o.Agents, true
}

// HasAgents returns a boolean if a field has been set.
func (o *HypervProtectionSource) HasAgents() bool {
	if o != nil && o.Agents != nil {
		return true
	}

	return false
}

// SetAgents gets a reference to the given []AgentInformation and assigns it to the Agents field.
func (o *HypervProtectionSource) SetAgents(v []AgentInformation) {
	o.Agents = v
}

// GetBackupType returns the BackupType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervProtectionSource) GetBackupType() string {
	if o == nil || o.BackupType.Get() == nil {
		var ret string
		return ret
	}
	return *o.BackupType.Get()
}

// GetBackupTypeOk returns a tuple with the BackupType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervProtectionSource) GetBackupTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BackupType.Get(), o.BackupType.IsSet()
}

// HasBackupType returns a boolean if a field has been set.
func (o *HypervProtectionSource) HasBackupType() bool {
	if o != nil && o.BackupType.IsSet() {
		return true
	}

	return false
}

// SetBackupType gets a reference to the given NullableString and assigns it to the BackupType field.
func (o *HypervProtectionSource) SetBackupType(v string) {
	o.BackupType.Set(&v)
}
// SetBackupTypeNil sets the value for BackupType to be an explicit nil
func (o *HypervProtectionSource) SetBackupTypeNil() {
	o.BackupType.Set(nil)
}

// UnsetBackupType ensures that no value is present for BackupType, not even an explicit nil
func (o *HypervProtectionSource) UnsetBackupType() {
	o.BackupType.Unset()
}

// GetBuildNumber returns the BuildNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervProtectionSource) GetBuildNumber() string {
	if o == nil || o.BuildNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.BuildNumber.Get()
}

// GetBuildNumberOk returns a tuple with the BuildNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervProtectionSource) GetBuildNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BuildNumber.Get(), o.BuildNumber.IsSet()
}

// HasBuildNumber returns a boolean if a field has been set.
func (o *HypervProtectionSource) HasBuildNumber() bool {
	if o != nil && o.BuildNumber.IsSet() {
		return true
	}

	return false
}

// SetBuildNumber gets a reference to the given NullableString and assigns it to the BuildNumber field.
func (o *HypervProtectionSource) SetBuildNumber(v string) {
	o.BuildNumber.Set(&v)
}
// SetBuildNumberNil sets the value for BuildNumber to be an explicit nil
func (o *HypervProtectionSource) SetBuildNumberNil() {
	o.BuildNumber.Set(nil)
}

// UnsetBuildNumber ensures that no value is present for BuildNumber, not even an explicit nil
func (o *HypervProtectionSource) UnsetBuildNumber() {
	o.BuildNumber.Unset()
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervProtectionSource) GetClusterName() string {
	if o == nil || o.ClusterName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClusterName.Get()
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervProtectionSource) GetClusterNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterName.Get(), o.ClusterName.IsSet()
}

// HasClusterName returns a boolean if a field has been set.
func (o *HypervProtectionSource) HasClusterName() bool {
	if o != nil && o.ClusterName.IsSet() {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given NullableString and assigns it to the ClusterName field.
func (o *HypervProtectionSource) SetClusterName(v string) {
	o.ClusterName.Set(&v)
}
// SetClusterNameNil sets the value for ClusterName to be an explicit nil
func (o *HypervProtectionSource) SetClusterNameNil() {
	o.ClusterName.Set(nil)
}

// UnsetClusterName ensures that no value is present for ClusterName, not even an explicit nil
func (o *HypervProtectionSource) UnsetClusterName() {
	o.ClusterName.Unset()
}

// GetDatastoreInfo returns the DatastoreInfo field value if set, zero value otherwise.
func (o *HypervProtectionSource) GetDatastoreInfo() HypervDatastore {
	if o == nil || o.DatastoreInfo == nil {
		var ret HypervDatastore
		return ret
	}
	return *o.DatastoreInfo
}

// GetDatastoreInfoOk returns a tuple with the DatastoreInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervProtectionSource) GetDatastoreInfoOk() (*HypervDatastore, bool) {
	if o == nil || o.DatastoreInfo == nil {
		return nil, false
	}
	return o.DatastoreInfo, true
}

// HasDatastoreInfo returns a boolean if a field has been set.
func (o *HypervProtectionSource) HasDatastoreInfo() bool {
	if o != nil && o.DatastoreInfo != nil {
		return true
	}

	return false
}

// SetDatastoreInfo gets a reference to the given HypervDatastore and assigns it to the DatastoreInfo field.
func (o *HypervProtectionSource) SetDatastoreInfo(v HypervDatastore) {
	o.DatastoreInfo = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervProtectionSource) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervProtectionSource) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *HypervProtectionSource) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *HypervProtectionSource) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *HypervProtectionSource) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *HypervProtectionSource) UnsetDescription() {
	o.Description.Unset()
}

// GetHostType returns the HostType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervProtectionSource) GetHostType() string {
	if o == nil || o.HostType.Get() == nil {
		var ret string
		return ret
	}
	return *o.HostType.Get()
}

// GetHostTypeOk returns a tuple with the HostType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervProtectionSource) GetHostTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HostType.Get(), o.HostType.IsSet()
}

// HasHostType returns a boolean if a field has been set.
func (o *HypervProtectionSource) HasHostType() bool {
	if o != nil && o.HostType.IsSet() {
		return true
	}

	return false
}

// SetHostType gets a reference to the given NullableString and assigns it to the HostType field.
func (o *HypervProtectionSource) SetHostType(v string) {
	o.HostType.Set(&v)
}
// SetHostTypeNil sets the value for HostType to be an explicit nil
func (o *HypervProtectionSource) SetHostTypeNil() {
	o.HostType.Set(nil)
}

// UnsetHostType ensures that no value is present for HostType, not even an explicit nil
func (o *HypervProtectionSource) UnsetHostType() {
	o.HostType.Unset()
}

// GetHypervUuid returns the HypervUuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervProtectionSource) GetHypervUuid() string {
	if o == nil || o.HypervUuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.HypervUuid.Get()
}

// GetHypervUuidOk returns a tuple with the HypervUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervProtectionSource) GetHypervUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HypervUuid.Get(), o.HypervUuid.IsSet()
}

// HasHypervUuid returns a boolean if a field has been set.
func (o *HypervProtectionSource) HasHypervUuid() bool {
	if o != nil && o.HypervUuid.IsSet() {
		return true
	}

	return false
}

// SetHypervUuid gets a reference to the given NullableString and assigns it to the HypervUuid field.
func (o *HypervProtectionSource) SetHypervUuid(v string) {
	o.HypervUuid.Set(&v)
}
// SetHypervUuidNil sets the value for HypervUuid to be an explicit nil
func (o *HypervProtectionSource) SetHypervUuidNil() {
	o.HypervUuid.Set(nil)
}

// UnsetHypervUuid ensures that no value is present for HypervUuid, not even an explicit nil
func (o *HypervProtectionSource) UnsetHypervUuid() {
	o.HypervUuid.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervProtectionSource) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervProtectionSource) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *HypervProtectionSource) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *HypervProtectionSource) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *HypervProtectionSource) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *HypervProtectionSource) UnsetName() {
	o.Name.Unset()
}

// GetTagAttributes returns the TagAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervProtectionSource) GetTagAttributes() []TagAttribute {
	if o == nil  {
		var ret []TagAttribute
		return ret
	}
	return o.TagAttributes
}

// GetTagAttributesOk returns a tuple with the TagAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervProtectionSource) GetTagAttributesOk() (*[]TagAttribute, bool) {
	if o == nil || o.TagAttributes == nil {
		return nil, false
	}
	return &o.TagAttributes, true
}

// HasTagAttributes returns a boolean if a field has been set.
func (o *HypervProtectionSource) HasTagAttributes() bool {
	if o != nil && o.TagAttributes != nil {
		return true
	}

	return false
}

// SetTagAttributes gets a reference to the given []TagAttribute and assigns it to the TagAttributes field.
func (o *HypervProtectionSource) SetTagAttributes(v []TagAttribute) {
	o.TagAttributes = v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervProtectionSource) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervProtectionSource) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *HypervProtectionSource) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *HypervProtectionSource) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *HypervProtectionSource) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *HypervProtectionSource) UnsetType() {
	o.Type.Unset()
}

// GetUuid returns the Uuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervProtectionSource) GetUuid() string {
	if o == nil || o.Uuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uuid.Get()
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervProtectionSource) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Uuid.Get(), o.Uuid.IsSet()
}

// HasUuid returns a boolean if a field has been set.
func (o *HypervProtectionSource) HasUuid() bool {
	if o != nil && o.Uuid.IsSet() {
		return true
	}

	return false
}

// SetUuid gets a reference to the given NullableString and assigns it to the Uuid field.
func (o *HypervProtectionSource) SetUuid(v string) {
	o.Uuid.Set(&v)
}
// SetUuidNil sets the value for Uuid to be an explicit nil
func (o *HypervProtectionSource) SetUuidNil() {
	o.Uuid.Set(nil)
}

// UnsetUuid ensures that no value is present for Uuid, not even an explicit nil
func (o *HypervProtectionSource) UnsetUuid() {
	o.Uuid.Unset()
}

// GetVmInfo returns the VmInfo field value if set, zero value otherwise.
func (o *HypervProtectionSource) GetVmInfo() HypervVirtualMachine {
	if o == nil || o.VmInfo == nil {
		var ret HypervVirtualMachine
		return ret
	}
	return *o.VmInfo
}

// GetVmInfoOk returns a tuple with the VmInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervProtectionSource) GetVmInfoOk() (*HypervVirtualMachine, bool) {
	if o == nil || o.VmInfo == nil {
		return nil, false
	}
	return o.VmInfo, true
}

// HasVmInfo returns a boolean if a field has been set.
func (o *HypervProtectionSource) HasVmInfo() bool {
	if o != nil && o.VmInfo != nil {
		return true
	}

	return false
}

// SetVmInfo gets a reference to the given HypervVirtualMachine and assigns it to the VmInfo field.
func (o *HypervProtectionSource) SetVmInfo(v HypervVirtualMachine) {
	o.VmInfo = &v
}

// GetWindowsVersion returns the WindowsVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervProtectionSource) GetWindowsVersion() string {
	if o == nil || o.WindowsVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.WindowsVersion.Get()
}

// GetWindowsVersionOk returns a tuple with the WindowsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervProtectionSource) GetWindowsVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WindowsVersion.Get(), o.WindowsVersion.IsSet()
}

// HasWindowsVersion returns a boolean if a field has been set.
func (o *HypervProtectionSource) HasWindowsVersion() bool {
	if o != nil && o.WindowsVersion.IsSet() {
		return true
	}

	return false
}

// SetWindowsVersion gets a reference to the given NullableString and assigns it to the WindowsVersion field.
func (o *HypervProtectionSource) SetWindowsVersion(v string) {
	o.WindowsVersion.Set(&v)
}
// SetWindowsVersionNil sets the value for WindowsVersion to be an explicit nil
func (o *HypervProtectionSource) SetWindowsVersionNil() {
	o.WindowsVersion.Set(nil)
}

// UnsetWindowsVersion ensures that no value is present for WindowsVersion, not even an explicit nil
func (o *HypervProtectionSource) UnsetWindowsVersion() {
	o.WindowsVersion.Unset()
}

func (o HypervProtectionSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Agents != nil {
		toSerialize["agents"] = o.Agents
	}
	if o.BackupType.IsSet() {
		toSerialize["backupType"] = o.BackupType.Get()
	}
	if o.BuildNumber.IsSet() {
		toSerialize["buildNumber"] = o.BuildNumber.Get()
	}
	if o.ClusterName.IsSet() {
		toSerialize["clusterName"] = o.ClusterName.Get()
	}
	if o.DatastoreInfo != nil {
		toSerialize["datastoreInfo"] = o.DatastoreInfo
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.HostType.IsSet() {
		toSerialize["hostType"] = o.HostType.Get()
	}
	if o.HypervUuid.IsSet() {
		toSerialize["hypervUuid"] = o.HypervUuid.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.TagAttributes != nil {
		toSerialize["tagAttributes"] = o.TagAttributes
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.Uuid.IsSet() {
		toSerialize["uuid"] = o.Uuid.Get()
	}
	if o.VmInfo != nil {
		toSerialize["vmInfo"] = o.VmInfo
	}
	if o.WindowsVersion.IsSet() {
		toSerialize["windowsVersion"] = o.WindowsVersion.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableHypervProtectionSource struct {
	value *HypervProtectionSource
	isSet bool
}

func (v NullableHypervProtectionSource) Get() *HypervProtectionSource {
	return v.value
}

func (v *NullableHypervProtectionSource) Set(val *HypervProtectionSource) {
	v.value = val
	v.isSet = true
}

func (v NullableHypervProtectionSource) IsSet() bool {
	return v.isSet
}

func (v *NullableHypervProtectionSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHypervProtectionSource(val *HypervProtectionSource) *NullableHypervProtectionSource {
	return &NullableHypervProtectionSource{value: val, isSet: true}
}

func (v NullableHypervProtectionSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHypervProtectionSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


