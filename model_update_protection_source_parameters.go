/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// UpdateProtectionSourceParameters UpdateProtectionSourceParameters defines a public data definition for updating protection source.
type UpdateProtectionSourceParameters struct {
	// Specifies the agent endpoint if it is different from the source endpoint.
	AgentEndpoint NullableString `json:"agentEndpoint,omitempty"`
	AwsCredentials *AwsCredentials `json:"awsCredentials,omitempty"`
	AwsFleetParams *AwsFleetParams `json:"awsFleetParams,omitempty"`
	AzureCredentials *AzureCredentials `json:"azureCredentials,omitempty"`
	// Specifies the list of IP Addresses on the registered source to be blacklisted for doing any type of IO operations.
	BlacklistedIpAddresses []string `json:"blacklistedIpAddresses,omitempty"`
	ClusterNetworkInfo *FleetNetworkParams `json:"clusterNetworkInfo,omitempty"`
	// Specifies the network endpoint of the Protection Source where it is reachable. It could be an URL or hostname or an IP address of the Protection Source.
	Endpoint NullableString `json:"endpoint,omitempty"`
	ExchangeDagProtectionPreference *ExchangeDAGProtectionPreference `json:"exchangeDagProtectionPreference,omitempty"`
	// ForceRegister is applicable to Physical Environment. By default, the agent running on a physical host will fail the registration, if it is already registered as part of another cluster. By setting this option to true, agent can be forced to register with the current cluster. This is a hidden parameter and should not be documented externally.
	ForceRegister NullableBool `json:"forceRegister,omitempty"`
	GcpCredentials *GcpCredentials `json:"gcpCredentials,omitempty"`
	// Specifies the optional OS type of the Protection Source (such as kWindows or kLinux). overrideDescription: true 'kLinux' indicates the Linux operating system. 'kWindows' indicates the Microsoft Windows operating system. 'kAix' indicates the IBM AIX operating system. 'kSolaris' indicates the Oracle Solaris operating system. 'kSapHana' indicates the Sap Hana database system developed by SAP SE. 'kOther' indicates the other types of operating system.
	HostType NullableString `json:"hostType,omitempty"`
	KubernetesCredentials *KubernetesCredentials `json:"kubernetesCredentials,omitempty"`
	// Specifies the minimum space in GB after which backup jobs will be canceled due to low space.
	MinimumFreeSpaceGB NullableInt64 `json:"minimumFreeSpaceGB,omitempty"`
	// Specifies the server credentials to connect to a NetApp server. This field is required for mounting SMB volumes on NetApp servers.
	NasMountCredentials NullableNasMountCredentialParams `json:"nasMountCredentials,omitempty"`
	// Office365 Source Credentials.  Specifies credentials needed to authenticate & authorize user for Office365 using MS Graph APIs.
	Office365CredentialsList []Office365Credentials `json:"office365CredentialsList,omitempty"`
	// Specifies the region for Office365.
	Office365Region NullableString `json:"office365Region,omitempty"`
	// Specifies password of the username to access the target source.
	Password NullableString `json:"password,omitempty"`
	// ReRegister is applicable to Physical Environment. By default, the agent running on a physical host will fail the registration, if it is already registered with the cluster. By setting this option to true, agent can be re-registered with the current cluster.
	ReRegister NullableBool `json:"reRegister,omitempty"`
	// This controls whether to use source side dedup on the source or not. This is only applicable to sources which support source side dedup (e.g., Linux physical servers).
	SourceSideDedupEnabled NullableBool `json:"sourceSideDedupEnabled,omitempty"`
	SslVerification *SslVerification `json:"sslVerification,omitempty"`
	// Specifies the list of subnet IP addresses and CIDR prefix for enabeling network data transfer. Currently, only Subnet IP and NetbaskBits are valid input fields. All other fields provided as input will be ignored.
	Subnets []Subnet `json:"subnets,omitempty"`
	// Specifies the throttling policy that should be applied to this Source.
	ThrottlingPolicy NullableThrottlingPolicyParameters `json:"throttlingPolicy,omitempty"`
	// Array of Throttling Policy Overrides for Datastores.  Specifies a list of Throttling Policy for datastores that override the common throttling policy specified for the registered Protection Source. For datastores not in this list, common policy will still apply.
	ThrottlingPolicyOverrides []ThrottlingPolicyOverride `json:"throttlingPolicyOverrides,omitempty"`
	// Specifies whether OAuth should be used for authentication in case of Exchange Online.
	UseOAuthForExchangeOnline NullableBool `json:"useOAuthForExchangeOnline,omitempty"`
	// Specifies username to access the target source.
	Username NullableString `json:"username,omitempty"`
	VlanParams *VlanParameters `json:"vlanParams,omitempty"`
}

// NewUpdateProtectionSourceParameters instantiates a new UpdateProtectionSourceParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProtectionSourceParameters() *UpdateProtectionSourceParameters {
	this := UpdateProtectionSourceParameters{}
	return &this
}

// NewUpdateProtectionSourceParametersWithDefaults instantiates a new UpdateProtectionSourceParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProtectionSourceParametersWithDefaults() *UpdateProtectionSourceParameters {
	this := UpdateProtectionSourceParameters{}
	return &this
}

// GetAgentEndpoint returns the AgentEndpoint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionSourceParameters) GetAgentEndpoint() string {
	if o == nil || o.AgentEndpoint.Get() == nil {
		var ret string
		return ret
	}
	return *o.AgentEndpoint.Get()
}

// GetAgentEndpointOk returns a tuple with the AgentEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionSourceParameters) GetAgentEndpointOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AgentEndpoint.Get(), o.AgentEndpoint.IsSet()
}

// HasAgentEndpoint returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasAgentEndpoint() bool {
	if o != nil && o.AgentEndpoint.IsSet() {
		return true
	}

	return false
}

// SetAgentEndpoint gets a reference to the given NullableString and assigns it to the AgentEndpoint field.
func (o *UpdateProtectionSourceParameters) SetAgentEndpoint(v string) {
	o.AgentEndpoint.Set(&v)
}
// SetAgentEndpointNil sets the value for AgentEndpoint to be an explicit nil
func (o *UpdateProtectionSourceParameters) SetAgentEndpointNil() {
	o.AgentEndpoint.Set(nil)
}

// UnsetAgentEndpoint ensures that no value is present for AgentEndpoint, not even an explicit nil
func (o *UpdateProtectionSourceParameters) UnsetAgentEndpoint() {
	o.AgentEndpoint.Unset()
}

// GetAwsCredentials returns the AwsCredentials field value if set, zero value otherwise.
func (o *UpdateProtectionSourceParameters) GetAwsCredentials() AwsCredentials {
	if o == nil || o.AwsCredentials == nil {
		var ret AwsCredentials
		return ret
	}
	return *o.AwsCredentials
}

// GetAwsCredentialsOk returns a tuple with the AwsCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectionSourceParameters) GetAwsCredentialsOk() (*AwsCredentials, bool) {
	if o == nil || o.AwsCredentials == nil {
		return nil, false
	}
	return o.AwsCredentials, true
}

// HasAwsCredentials returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasAwsCredentials() bool {
	if o != nil && o.AwsCredentials != nil {
		return true
	}

	return false
}

// SetAwsCredentials gets a reference to the given AwsCredentials and assigns it to the AwsCredentials field.
func (o *UpdateProtectionSourceParameters) SetAwsCredentials(v AwsCredentials) {
	o.AwsCredentials = &v
}

// GetAwsFleetParams returns the AwsFleetParams field value if set, zero value otherwise.
func (o *UpdateProtectionSourceParameters) GetAwsFleetParams() AwsFleetParams {
	if o == nil || o.AwsFleetParams == nil {
		var ret AwsFleetParams
		return ret
	}
	return *o.AwsFleetParams
}

// GetAwsFleetParamsOk returns a tuple with the AwsFleetParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectionSourceParameters) GetAwsFleetParamsOk() (*AwsFleetParams, bool) {
	if o == nil || o.AwsFleetParams == nil {
		return nil, false
	}
	return o.AwsFleetParams, true
}

// HasAwsFleetParams returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasAwsFleetParams() bool {
	if o != nil && o.AwsFleetParams != nil {
		return true
	}

	return false
}

// SetAwsFleetParams gets a reference to the given AwsFleetParams and assigns it to the AwsFleetParams field.
func (o *UpdateProtectionSourceParameters) SetAwsFleetParams(v AwsFleetParams) {
	o.AwsFleetParams = &v
}

// GetAzureCredentials returns the AzureCredentials field value if set, zero value otherwise.
func (o *UpdateProtectionSourceParameters) GetAzureCredentials() AzureCredentials {
	if o == nil || o.AzureCredentials == nil {
		var ret AzureCredentials
		return ret
	}
	return *o.AzureCredentials
}

// GetAzureCredentialsOk returns a tuple with the AzureCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectionSourceParameters) GetAzureCredentialsOk() (*AzureCredentials, bool) {
	if o == nil || o.AzureCredentials == nil {
		return nil, false
	}
	return o.AzureCredentials, true
}

// HasAzureCredentials returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasAzureCredentials() bool {
	if o != nil && o.AzureCredentials != nil {
		return true
	}

	return false
}

// SetAzureCredentials gets a reference to the given AzureCredentials and assigns it to the AzureCredentials field.
func (o *UpdateProtectionSourceParameters) SetAzureCredentials(v AzureCredentials) {
	o.AzureCredentials = &v
}

// GetBlacklistedIpAddresses returns the BlacklistedIpAddresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionSourceParameters) GetBlacklistedIpAddresses() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.BlacklistedIpAddresses
}

// GetBlacklistedIpAddressesOk returns a tuple with the BlacklistedIpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionSourceParameters) GetBlacklistedIpAddressesOk() (*[]string, bool) {
	if o == nil || o.BlacklistedIpAddresses == nil {
		return nil, false
	}
	return &o.BlacklistedIpAddresses, true
}

// HasBlacklistedIpAddresses returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasBlacklistedIpAddresses() bool {
	if o != nil && o.BlacklistedIpAddresses != nil {
		return true
	}

	return false
}

// SetBlacklistedIpAddresses gets a reference to the given []string and assigns it to the BlacklistedIpAddresses field.
func (o *UpdateProtectionSourceParameters) SetBlacklistedIpAddresses(v []string) {
	o.BlacklistedIpAddresses = v
}

// GetClusterNetworkInfo returns the ClusterNetworkInfo field value if set, zero value otherwise.
func (o *UpdateProtectionSourceParameters) GetClusterNetworkInfo() FleetNetworkParams {
	if o == nil || o.ClusterNetworkInfo == nil {
		var ret FleetNetworkParams
		return ret
	}
	return *o.ClusterNetworkInfo
}

// GetClusterNetworkInfoOk returns a tuple with the ClusterNetworkInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectionSourceParameters) GetClusterNetworkInfoOk() (*FleetNetworkParams, bool) {
	if o == nil || o.ClusterNetworkInfo == nil {
		return nil, false
	}
	return o.ClusterNetworkInfo, true
}

// HasClusterNetworkInfo returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasClusterNetworkInfo() bool {
	if o != nil && o.ClusterNetworkInfo != nil {
		return true
	}

	return false
}

// SetClusterNetworkInfo gets a reference to the given FleetNetworkParams and assigns it to the ClusterNetworkInfo field.
func (o *UpdateProtectionSourceParameters) SetClusterNetworkInfo(v FleetNetworkParams) {
	o.ClusterNetworkInfo = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionSourceParameters) GetEndpoint() string {
	if o == nil || o.Endpoint.Get() == nil {
		var ret string
		return ret
	}
	return *o.Endpoint.Get()
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionSourceParameters) GetEndpointOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Endpoint.Get(), o.Endpoint.IsSet()
}

// HasEndpoint returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasEndpoint() bool {
	if o != nil && o.Endpoint.IsSet() {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given NullableString and assigns it to the Endpoint field.
func (o *UpdateProtectionSourceParameters) SetEndpoint(v string) {
	o.Endpoint.Set(&v)
}
// SetEndpointNil sets the value for Endpoint to be an explicit nil
func (o *UpdateProtectionSourceParameters) SetEndpointNil() {
	o.Endpoint.Set(nil)
}

// UnsetEndpoint ensures that no value is present for Endpoint, not even an explicit nil
func (o *UpdateProtectionSourceParameters) UnsetEndpoint() {
	o.Endpoint.Unset()
}

// GetExchangeDagProtectionPreference returns the ExchangeDagProtectionPreference field value if set, zero value otherwise.
func (o *UpdateProtectionSourceParameters) GetExchangeDagProtectionPreference() ExchangeDAGProtectionPreference {
	if o == nil || o.ExchangeDagProtectionPreference == nil {
		var ret ExchangeDAGProtectionPreference
		return ret
	}
	return *o.ExchangeDagProtectionPreference
}

// GetExchangeDagProtectionPreferenceOk returns a tuple with the ExchangeDagProtectionPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectionSourceParameters) GetExchangeDagProtectionPreferenceOk() (*ExchangeDAGProtectionPreference, bool) {
	if o == nil || o.ExchangeDagProtectionPreference == nil {
		return nil, false
	}
	return o.ExchangeDagProtectionPreference, true
}

// HasExchangeDagProtectionPreference returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasExchangeDagProtectionPreference() bool {
	if o != nil && o.ExchangeDagProtectionPreference != nil {
		return true
	}

	return false
}

// SetExchangeDagProtectionPreference gets a reference to the given ExchangeDAGProtectionPreference and assigns it to the ExchangeDagProtectionPreference field.
func (o *UpdateProtectionSourceParameters) SetExchangeDagProtectionPreference(v ExchangeDAGProtectionPreference) {
	o.ExchangeDagProtectionPreference = &v
}

// GetForceRegister returns the ForceRegister field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionSourceParameters) GetForceRegister() bool {
	if o == nil || o.ForceRegister.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ForceRegister.Get()
}

// GetForceRegisterOk returns a tuple with the ForceRegister field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionSourceParameters) GetForceRegisterOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ForceRegister.Get(), o.ForceRegister.IsSet()
}

// HasForceRegister returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasForceRegister() bool {
	if o != nil && o.ForceRegister.IsSet() {
		return true
	}

	return false
}

// SetForceRegister gets a reference to the given NullableBool and assigns it to the ForceRegister field.
func (o *UpdateProtectionSourceParameters) SetForceRegister(v bool) {
	o.ForceRegister.Set(&v)
}
// SetForceRegisterNil sets the value for ForceRegister to be an explicit nil
func (o *UpdateProtectionSourceParameters) SetForceRegisterNil() {
	o.ForceRegister.Set(nil)
}

// UnsetForceRegister ensures that no value is present for ForceRegister, not even an explicit nil
func (o *UpdateProtectionSourceParameters) UnsetForceRegister() {
	o.ForceRegister.Unset()
}

// GetGcpCredentials returns the GcpCredentials field value if set, zero value otherwise.
func (o *UpdateProtectionSourceParameters) GetGcpCredentials() GcpCredentials {
	if o == nil || o.GcpCredentials == nil {
		var ret GcpCredentials
		return ret
	}
	return *o.GcpCredentials
}

// GetGcpCredentialsOk returns a tuple with the GcpCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectionSourceParameters) GetGcpCredentialsOk() (*GcpCredentials, bool) {
	if o == nil || o.GcpCredentials == nil {
		return nil, false
	}
	return o.GcpCredentials, true
}

// HasGcpCredentials returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasGcpCredentials() bool {
	if o != nil && o.GcpCredentials != nil {
		return true
	}

	return false
}

// SetGcpCredentials gets a reference to the given GcpCredentials and assigns it to the GcpCredentials field.
func (o *UpdateProtectionSourceParameters) SetGcpCredentials(v GcpCredentials) {
	o.GcpCredentials = &v
}

// GetHostType returns the HostType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionSourceParameters) GetHostType() string {
	if o == nil || o.HostType.Get() == nil {
		var ret string
		return ret
	}
	return *o.HostType.Get()
}

// GetHostTypeOk returns a tuple with the HostType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionSourceParameters) GetHostTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HostType.Get(), o.HostType.IsSet()
}

// HasHostType returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasHostType() bool {
	if o != nil && o.HostType.IsSet() {
		return true
	}

	return false
}

// SetHostType gets a reference to the given NullableString and assigns it to the HostType field.
func (o *UpdateProtectionSourceParameters) SetHostType(v string) {
	o.HostType.Set(&v)
}
// SetHostTypeNil sets the value for HostType to be an explicit nil
func (o *UpdateProtectionSourceParameters) SetHostTypeNil() {
	o.HostType.Set(nil)
}

// UnsetHostType ensures that no value is present for HostType, not even an explicit nil
func (o *UpdateProtectionSourceParameters) UnsetHostType() {
	o.HostType.Unset()
}

// GetKubernetesCredentials returns the KubernetesCredentials field value if set, zero value otherwise.
func (o *UpdateProtectionSourceParameters) GetKubernetesCredentials() KubernetesCredentials {
	if o == nil || o.KubernetesCredentials == nil {
		var ret KubernetesCredentials
		return ret
	}
	return *o.KubernetesCredentials
}

// GetKubernetesCredentialsOk returns a tuple with the KubernetesCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectionSourceParameters) GetKubernetesCredentialsOk() (*KubernetesCredentials, bool) {
	if o == nil || o.KubernetesCredentials == nil {
		return nil, false
	}
	return o.KubernetesCredentials, true
}

// HasKubernetesCredentials returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasKubernetesCredentials() bool {
	if o != nil && o.KubernetesCredentials != nil {
		return true
	}

	return false
}

// SetKubernetesCredentials gets a reference to the given KubernetesCredentials and assigns it to the KubernetesCredentials field.
func (o *UpdateProtectionSourceParameters) SetKubernetesCredentials(v KubernetesCredentials) {
	o.KubernetesCredentials = &v
}

// GetMinimumFreeSpaceGB returns the MinimumFreeSpaceGB field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionSourceParameters) GetMinimumFreeSpaceGB() int64 {
	if o == nil || o.MinimumFreeSpaceGB.Get() == nil {
		var ret int64
		return ret
	}
	return *o.MinimumFreeSpaceGB.Get()
}

// GetMinimumFreeSpaceGBOk returns a tuple with the MinimumFreeSpaceGB field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionSourceParameters) GetMinimumFreeSpaceGBOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinimumFreeSpaceGB.Get(), o.MinimumFreeSpaceGB.IsSet()
}

// HasMinimumFreeSpaceGB returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasMinimumFreeSpaceGB() bool {
	if o != nil && o.MinimumFreeSpaceGB.IsSet() {
		return true
	}

	return false
}

// SetMinimumFreeSpaceGB gets a reference to the given NullableInt64 and assigns it to the MinimumFreeSpaceGB field.
func (o *UpdateProtectionSourceParameters) SetMinimumFreeSpaceGB(v int64) {
	o.MinimumFreeSpaceGB.Set(&v)
}
// SetMinimumFreeSpaceGBNil sets the value for MinimumFreeSpaceGB to be an explicit nil
func (o *UpdateProtectionSourceParameters) SetMinimumFreeSpaceGBNil() {
	o.MinimumFreeSpaceGB.Set(nil)
}

// UnsetMinimumFreeSpaceGB ensures that no value is present for MinimumFreeSpaceGB, not even an explicit nil
func (o *UpdateProtectionSourceParameters) UnsetMinimumFreeSpaceGB() {
	o.MinimumFreeSpaceGB.Unset()
}

// GetNasMountCredentials returns the NasMountCredentials field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionSourceParameters) GetNasMountCredentials() NasMountCredentialParams {
	if o == nil || o.NasMountCredentials.Get() == nil {
		var ret NasMountCredentialParams
		return ret
	}
	return *o.NasMountCredentials.Get()
}

// GetNasMountCredentialsOk returns a tuple with the NasMountCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionSourceParameters) GetNasMountCredentialsOk() (*NasMountCredentialParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NasMountCredentials.Get(), o.NasMountCredentials.IsSet()
}

// HasNasMountCredentials returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasNasMountCredentials() bool {
	if o != nil && o.NasMountCredentials.IsSet() {
		return true
	}

	return false
}

// SetNasMountCredentials gets a reference to the given NullableNasMountCredentialParams and assigns it to the NasMountCredentials field.
func (o *UpdateProtectionSourceParameters) SetNasMountCredentials(v NasMountCredentialParams) {
	o.NasMountCredentials.Set(&v)
}
// SetNasMountCredentialsNil sets the value for NasMountCredentials to be an explicit nil
func (o *UpdateProtectionSourceParameters) SetNasMountCredentialsNil() {
	o.NasMountCredentials.Set(nil)
}

// UnsetNasMountCredentials ensures that no value is present for NasMountCredentials, not even an explicit nil
func (o *UpdateProtectionSourceParameters) UnsetNasMountCredentials() {
	o.NasMountCredentials.Unset()
}

// GetOffice365CredentialsList returns the Office365CredentialsList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionSourceParameters) GetOffice365CredentialsList() []Office365Credentials {
	if o == nil  {
		var ret []Office365Credentials
		return ret
	}
	return o.Office365CredentialsList
}

// GetOffice365CredentialsListOk returns a tuple with the Office365CredentialsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionSourceParameters) GetOffice365CredentialsListOk() (*[]Office365Credentials, bool) {
	if o == nil || o.Office365CredentialsList == nil {
		return nil, false
	}
	return &o.Office365CredentialsList, true
}

// HasOffice365CredentialsList returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasOffice365CredentialsList() bool {
	if o != nil && o.Office365CredentialsList != nil {
		return true
	}

	return false
}

// SetOffice365CredentialsList gets a reference to the given []Office365Credentials and assigns it to the Office365CredentialsList field.
func (o *UpdateProtectionSourceParameters) SetOffice365CredentialsList(v []Office365Credentials) {
	o.Office365CredentialsList = v
}

// GetOffice365Region returns the Office365Region field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionSourceParameters) GetOffice365Region() string {
	if o == nil || o.Office365Region.Get() == nil {
		var ret string
		return ret
	}
	return *o.Office365Region.Get()
}

// GetOffice365RegionOk returns a tuple with the Office365Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionSourceParameters) GetOffice365RegionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Office365Region.Get(), o.Office365Region.IsSet()
}

// HasOffice365Region returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasOffice365Region() bool {
	if o != nil && o.Office365Region.IsSet() {
		return true
	}

	return false
}

// SetOffice365Region gets a reference to the given NullableString and assigns it to the Office365Region field.
func (o *UpdateProtectionSourceParameters) SetOffice365Region(v string) {
	o.Office365Region.Set(&v)
}
// SetOffice365RegionNil sets the value for Office365Region to be an explicit nil
func (o *UpdateProtectionSourceParameters) SetOffice365RegionNil() {
	o.Office365Region.Set(nil)
}

// UnsetOffice365Region ensures that no value is present for Office365Region, not even an explicit nil
func (o *UpdateProtectionSourceParameters) UnsetOffice365Region() {
	o.Office365Region.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionSourceParameters) GetPassword() string {
	if o == nil || o.Password.Get() == nil {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionSourceParameters) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *UpdateProtectionSourceParameters) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *UpdateProtectionSourceParameters) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *UpdateProtectionSourceParameters) UnsetPassword() {
	o.Password.Unset()
}

// GetReRegister returns the ReRegister field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionSourceParameters) GetReRegister() bool {
	if o == nil || o.ReRegister.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ReRegister.Get()
}

// GetReRegisterOk returns a tuple with the ReRegister field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionSourceParameters) GetReRegisterOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReRegister.Get(), o.ReRegister.IsSet()
}

// HasReRegister returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasReRegister() bool {
	if o != nil && o.ReRegister.IsSet() {
		return true
	}

	return false
}

// SetReRegister gets a reference to the given NullableBool and assigns it to the ReRegister field.
func (o *UpdateProtectionSourceParameters) SetReRegister(v bool) {
	o.ReRegister.Set(&v)
}
// SetReRegisterNil sets the value for ReRegister to be an explicit nil
func (o *UpdateProtectionSourceParameters) SetReRegisterNil() {
	o.ReRegister.Set(nil)
}

// UnsetReRegister ensures that no value is present for ReRegister, not even an explicit nil
func (o *UpdateProtectionSourceParameters) UnsetReRegister() {
	o.ReRegister.Unset()
}

// GetSourceSideDedupEnabled returns the SourceSideDedupEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionSourceParameters) GetSourceSideDedupEnabled() bool {
	if o == nil || o.SourceSideDedupEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.SourceSideDedupEnabled.Get()
}

// GetSourceSideDedupEnabledOk returns a tuple with the SourceSideDedupEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionSourceParameters) GetSourceSideDedupEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceSideDedupEnabled.Get(), o.SourceSideDedupEnabled.IsSet()
}

// HasSourceSideDedupEnabled returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasSourceSideDedupEnabled() bool {
	if o != nil && o.SourceSideDedupEnabled.IsSet() {
		return true
	}

	return false
}

// SetSourceSideDedupEnabled gets a reference to the given NullableBool and assigns it to the SourceSideDedupEnabled field.
func (o *UpdateProtectionSourceParameters) SetSourceSideDedupEnabled(v bool) {
	o.SourceSideDedupEnabled.Set(&v)
}
// SetSourceSideDedupEnabledNil sets the value for SourceSideDedupEnabled to be an explicit nil
func (o *UpdateProtectionSourceParameters) SetSourceSideDedupEnabledNil() {
	o.SourceSideDedupEnabled.Set(nil)
}

// UnsetSourceSideDedupEnabled ensures that no value is present for SourceSideDedupEnabled, not even an explicit nil
func (o *UpdateProtectionSourceParameters) UnsetSourceSideDedupEnabled() {
	o.SourceSideDedupEnabled.Unset()
}

// GetSslVerification returns the SslVerification field value if set, zero value otherwise.
func (o *UpdateProtectionSourceParameters) GetSslVerification() SslVerification {
	if o == nil || o.SslVerification == nil {
		var ret SslVerification
		return ret
	}
	return *o.SslVerification
}

// GetSslVerificationOk returns a tuple with the SslVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectionSourceParameters) GetSslVerificationOk() (*SslVerification, bool) {
	if o == nil || o.SslVerification == nil {
		return nil, false
	}
	return o.SslVerification, true
}

// HasSslVerification returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasSslVerification() bool {
	if o != nil && o.SslVerification != nil {
		return true
	}

	return false
}

// SetSslVerification gets a reference to the given SslVerification and assigns it to the SslVerification field.
func (o *UpdateProtectionSourceParameters) SetSslVerification(v SslVerification) {
	o.SslVerification = &v
}

// GetSubnets returns the Subnets field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionSourceParameters) GetSubnets() []Subnet {
	if o == nil  {
		var ret []Subnet
		return ret
	}
	return o.Subnets
}

// GetSubnetsOk returns a tuple with the Subnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionSourceParameters) GetSubnetsOk() (*[]Subnet, bool) {
	if o == nil || o.Subnets == nil {
		return nil, false
	}
	return &o.Subnets, true
}

// HasSubnets returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasSubnets() bool {
	if o != nil && o.Subnets != nil {
		return true
	}

	return false
}

// SetSubnets gets a reference to the given []Subnet and assigns it to the Subnets field.
func (o *UpdateProtectionSourceParameters) SetSubnets(v []Subnet) {
	o.Subnets = v
}

// GetThrottlingPolicy returns the ThrottlingPolicy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionSourceParameters) GetThrottlingPolicy() ThrottlingPolicyParameters {
	if o == nil || o.ThrottlingPolicy.Get() == nil {
		var ret ThrottlingPolicyParameters
		return ret
	}
	return *o.ThrottlingPolicy.Get()
}

// GetThrottlingPolicyOk returns a tuple with the ThrottlingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionSourceParameters) GetThrottlingPolicyOk() (*ThrottlingPolicyParameters, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ThrottlingPolicy.Get(), o.ThrottlingPolicy.IsSet()
}

// HasThrottlingPolicy returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasThrottlingPolicy() bool {
	if o != nil && o.ThrottlingPolicy.IsSet() {
		return true
	}

	return false
}

// SetThrottlingPolicy gets a reference to the given NullableThrottlingPolicyParameters and assigns it to the ThrottlingPolicy field.
func (o *UpdateProtectionSourceParameters) SetThrottlingPolicy(v ThrottlingPolicyParameters) {
	o.ThrottlingPolicy.Set(&v)
}
// SetThrottlingPolicyNil sets the value for ThrottlingPolicy to be an explicit nil
func (o *UpdateProtectionSourceParameters) SetThrottlingPolicyNil() {
	o.ThrottlingPolicy.Set(nil)
}

// UnsetThrottlingPolicy ensures that no value is present for ThrottlingPolicy, not even an explicit nil
func (o *UpdateProtectionSourceParameters) UnsetThrottlingPolicy() {
	o.ThrottlingPolicy.Unset()
}

// GetThrottlingPolicyOverrides returns the ThrottlingPolicyOverrides field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionSourceParameters) GetThrottlingPolicyOverrides() []ThrottlingPolicyOverride {
	if o == nil  {
		var ret []ThrottlingPolicyOverride
		return ret
	}
	return o.ThrottlingPolicyOverrides
}

// GetThrottlingPolicyOverridesOk returns a tuple with the ThrottlingPolicyOverrides field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionSourceParameters) GetThrottlingPolicyOverridesOk() (*[]ThrottlingPolicyOverride, bool) {
	if o == nil || o.ThrottlingPolicyOverrides == nil {
		return nil, false
	}
	return &o.ThrottlingPolicyOverrides, true
}

// HasThrottlingPolicyOverrides returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasThrottlingPolicyOverrides() bool {
	if o != nil && o.ThrottlingPolicyOverrides != nil {
		return true
	}

	return false
}

// SetThrottlingPolicyOverrides gets a reference to the given []ThrottlingPolicyOverride and assigns it to the ThrottlingPolicyOverrides field.
func (o *UpdateProtectionSourceParameters) SetThrottlingPolicyOverrides(v []ThrottlingPolicyOverride) {
	o.ThrottlingPolicyOverrides = v
}

// GetUseOAuthForExchangeOnline returns the UseOAuthForExchangeOnline field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionSourceParameters) GetUseOAuthForExchangeOnline() bool {
	if o == nil || o.UseOAuthForExchangeOnline.Get() == nil {
		var ret bool
		return ret
	}
	return *o.UseOAuthForExchangeOnline.Get()
}

// GetUseOAuthForExchangeOnlineOk returns a tuple with the UseOAuthForExchangeOnline field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionSourceParameters) GetUseOAuthForExchangeOnlineOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UseOAuthForExchangeOnline.Get(), o.UseOAuthForExchangeOnline.IsSet()
}

// HasUseOAuthForExchangeOnline returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasUseOAuthForExchangeOnline() bool {
	if o != nil && o.UseOAuthForExchangeOnline.IsSet() {
		return true
	}

	return false
}

// SetUseOAuthForExchangeOnline gets a reference to the given NullableBool and assigns it to the UseOAuthForExchangeOnline field.
func (o *UpdateProtectionSourceParameters) SetUseOAuthForExchangeOnline(v bool) {
	o.UseOAuthForExchangeOnline.Set(&v)
}
// SetUseOAuthForExchangeOnlineNil sets the value for UseOAuthForExchangeOnline to be an explicit nil
func (o *UpdateProtectionSourceParameters) SetUseOAuthForExchangeOnlineNil() {
	o.UseOAuthForExchangeOnline.Set(nil)
}

// UnsetUseOAuthForExchangeOnline ensures that no value is present for UseOAuthForExchangeOnline, not even an explicit nil
func (o *UpdateProtectionSourceParameters) UnsetUseOAuthForExchangeOnline() {
	o.UseOAuthForExchangeOnline.Unset()
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionSourceParameters) GetUsername() string {
	if o == nil || o.Username.Get() == nil {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionSourceParameters) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *UpdateProtectionSourceParameters) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *UpdateProtectionSourceParameters) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *UpdateProtectionSourceParameters) UnsetUsername() {
	o.Username.Unset()
}

// GetVlanParams returns the VlanParams field value if set, zero value otherwise.
func (o *UpdateProtectionSourceParameters) GetVlanParams() VlanParameters {
	if o == nil || o.VlanParams == nil {
		var ret VlanParameters
		return ret
	}
	return *o.VlanParams
}

// GetVlanParamsOk returns a tuple with the VlanParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectionSourceParameters) GetVlanParamsOk() (*VlanParameters, bool) {
	if o == nil || o.VlanParams == nil {
		return nil, false
	}
	return o.VlanParams, true
}

// HasVlanParams returns a boolean if a field has been set.
func (o *UpdateProtectionSourceParameters) HasVlanParams() bool {
	if o != nil && o.VlanParams != nil {
		return true
	}

	return false
}

// SetVlanParams gets a reference to the given VlanParameters and assigns it to the VlanParams field.
func (o *UpdateProtectionSourceParameters) SetVlanParams(v VlanParameters) {
	o.VlanParams = &v
}

func (o UpdateProtectionSourceParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AgentEndpoint.IsSet() {
		toSerialize["agentEndpoint"] = o.AgentEndpoint.Get()
	}
	if o.AwsCredentials != nil {
		toSerialize["awsCredentials"] = o.AwsCredentials
	}
	if o.AwsFleetParams != nil {
		toSerialize["awsFleetParams"] = o.AwsFleetParams
	}
	if o.AzureCredentials != nil {
		toSerialize["azureCredentials"] = o.AzureCredentials
	}
	if o.BlacklistedIpAddresses != nil {
		toSerialize["blacklistedIpAddresses"] = o.BlacklistedIpAddresses
	}
	if o.ClusterNetworkInfo != nil {
		toSerialize["clusterNetworkInfo"] = o.ClusterNetworkInfo
	}
	if o.Endpoint.IsSet() {
		toSerialize["endpoint"] = o.Endpoint.Get()
	}
	if o.ExchangeDagProtectionPreference != nil {
		toSerialize["exchangeDagProtectionPreference"] = o.ExchangeDagProtectionPreference
	}
	if o.ForceRegister.IsSet() {
		toSerialize["forceRegister"] = o.ForceRegister.Get()
	}
	if o.GcpCredentials != nil {
		toSerialize["gcpCredentials"] = o.GcpCredentials
	}
	if o.HostType.IsSet() {
		toSerialize["hostType"] = o.HostType.Get()
	}
	if o.KubernetesCredentials != nil {
		toSerialize["kubernetesCredentials"] = o.KubernetesCredentials
	}
	if o.MinimumFreeSpaceGB.IsSet() {
		toSerialize["minimumFreeSpaceGB"] = o.MinimumFreeSpaceGB.Get()
	}
	if o.NasMountCredentials.IsSet() {
		toSerialize["nasMountCredentials"] = o.NasMountCredentials.Get()
	}
	if o.Office365CredentialsList != nil {
		toSerialize["office365CredentialsList"] = o.Office365CredentialsList
	}
	if o.Office365Region.IsSet() {
		toSerialize["office365Region"] = o.Office365Region.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if o.ReRegister.IsSet() {
		toSerialize["reRegister"] = o.ReRegister.Get()
	}
	if o.SourceSideDedupEnabled.IsSet() {
		toSerialize["sourceSideDedupEnabled"] = o.SourceSideDedupEnabled.Get()
	}
	if o.SslVerification != nil {
		toSerialize["sslVerification"] = o.SslVerification
	}
	if o.Subnets != nil {
		toSerialize["subnets"] = o.Subnets
	}
	if o.ThrottlingPolicy.IsSet() {
		toSerialize["throttlingPolicy"] = o.ThrottlingPolicy.Get()
	}
	if o.ThrottlingPolicyOverrides != nil {
		toSerialize["throttlingPolicyOverrides"] = o.ThrottlingPolicyOverrides
	}
	if o.UseOAuthForExchangeOnline.IsSet() {
		toSerialize["useOAuthForExchangeOnline"] = o.UseOAuthForExchangeOnline.Get()
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	if o.VlanParams != nil {
		toSerialize["vlanParams"] = o.VlanParams
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateProtectionSourceParameters struct {
	value *UpdateProtectionSourceParameters
	isSet bool
}

func (v NullableUpdateProtectionSourceParameters) Get() *UpdateProtectionSourceParameters {
	return v.value
}

func (v *NullableUpdateProtectionSourceParameters) Set(val *UpdateProtectionSourceParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProtectionSourceParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProtectionSourceParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProtectionSourceParameters(val *UpdateProtectionSourceParameters) *NullableUpdateProtectionSourceParameters {
	return &NullableUpdateProtectionSourceParameters{value: val, isSet: true}
}

func (v NullableUpdateProtectionSourceParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProtectionSourceParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


