/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// DestroyClonedEntityInfoProto Each available extension is listed below along with the location of the proto file (relative to magneto/connectors) where it is defined.  DestroyClonedEntityInfoProto.ClonedEntity extension    Location    Extension ============================================================================= azure::ClonedEntityInfo::azure_cloned_entity_info   azure/azure.proto   100 aws::ClonedEntityInfo::aws_cloned_entity_info       aws/aws.proto       101 =============================================================================
type DestroyClonedEntityInfoProto struct {
	ClonedEntity *DestroyClonedEntityInfoProtoClonedEntity `json:"clonedEntity,omitempty"`
	ClonedEntityStatus NullableInt32 `json:"clonedEntityStatus,omitempty"`
	// The state of the destroy/teardown of a cloned entity (i.e, VM).  The following two fields are set by the slave in order for the master to find status of the destroy operation.
	DestroyClonedEntityState NullableInt32 `json:"destroyClonedEntityState,omitempty"`
	Error *ErrorProto `json:"error,omitempty"`
	// The full external view name where cloned objects are placed.
	FullViewName NullableString `json:"fullViewName,omitempty"`
	// The type of environment this destroy cloned entity info pertains to.
	Type NullableInt32 `json:"type,omitempty"`
}

// NewDestroyClonedEntityInfoProto instantiates a new DestroyClonedEntityInfoProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDestroyClonedEntityInfoProto() *DestroyClonedEntityInfoProto {
	this := DestroyClonedEntityInfoProto{}
	return &this
}

// NewDestroyClonedEntityInfoProtoWithDefaults instantiates a new DestroyClonedEntityInfoProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDestroyClonedEntityInfoProtoWithDefaults() *DestroyClonedEntityInfoProto {
	this := DestroyClonedEntityInfoProto{}
	return &this
}

// GetClonedEntity returns the ClonedEntity field value if set, zero value otherwise.
func (o *DestroyClonedEntityInfoProto) GetClonedEntity() DestroyClonedEntityInfoProtoClonedEntity {
	if o == nil || o.ClonedEntity == nil {
		var ret DestroyClonedEntityInfoProtoClonedEntity
		return ret
	}
	return *o.ClonedEntity
}

// GetClonedEntityOk returns a tuple with the ClonedEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestroyClonedEntityInfoProto) GetClonedEntityOk() (*DestroyClonedEntityInfoProtoClonedEntity, bool) {
	if o == nil || o.ClonedEntity == nil {
		return nil, false
	}
	return o.ClonedEntity, true
}

// HasClonedEntity returns a boolean if a field has been set.
func (o *DestroyClonedEntityInfoProto) HasClonedEntity() bool {
	if o != nil && o.ClonedEntity != nil {
		return true
	}

	return false
}

// SetClonedEntity gets a reference to the given DestroyClonedEntityInfoProtoClonedEntity and assigns it to the ClonedEntity field.
func (o *DestroyClonedEntityInfoProto) SetClonedEntity(v DestroyClonedEntityInfoProtoClonedEntity) {
	o.ClonedEntity = &v
}

// GetClonedEntityStatus returns the ClonedEntityStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedEntityInfoProto) GetClonedEntityStatus() int32 {
	if o == nil || o.ClonedEntityStatus.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ClonedEntityStatus.Get()
}

// GetClonedEntityStatusOk returns a tuple with the ClonedEntityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedEntityInfoProto) GetClonedEntityStatusOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClonedEntityStatus.Get(), o.ClonedEntityStatus.IsSet()
}

// HasClonedEntityStatus returns a boolean if a field has been set.
func (o *DestroyClonedEntityInfoProto) HasClonedEntityStatus() bool {
	if o != nil && o.ClonedEntityStatus.IsSet() {
		return true
	}

	return false
}

// SetClonedEntityStatus gets a reference to the given NullableInt32 and assigns it to the ClonedEntityStatus field.
func (o *DestroyClonedEntityInfoProto) SetClonedEntityStatus(v int32) {
	o.ClonedEntityStatus.Set(&v)
}
// SetClonedEntityStatusNil sets the value for ClonedEntityStatus to be an explicit nil
func (o *DestroyClonedEntityInfoProto) SetClonedEntityStatusNil() {
	o.ClonedEntityStatus.Set(nil)
}

// UnsetClonedEntityStatus ensures that no value is present for ClonedEntityStatus, not even an explicit nil
func (o *DestroyClonedEntityInfoProto) UnsetClonedEntityStatus() {
	o.ClonedEntityStatus.Unset()
}

// GetDestroyClonedEntityState returns the DestroyClonedEntityState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedEntityInfoProto) GetDestroyClonedEntityState() int32 {
	if o == nil || o.DestroyClonedEntityState.Get() == nil {
		var ret int32
		return ret
	}
	return *o.DestroyClonedEntityState.Get()
}

// GetDestroyClonedEntityStateOk returns a tuple with the DestroyClonedEntityState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedEntityInfoProto) GetDestroyClonedEntityStateOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DestroyClonedEntityState.Get(), o.DestroyClonedEntityState.IsSet()
}

// HasDestroyClonedEntityState returns a boolean if a field has been set.
func (o *DestroyClonedEntityInfoProto) HasDestroyClonedEntityState() bool {
	if o != nil && o.DestroyClonedEntityState.IsSet() {
		return true
	}

	return false
}

// SetDestroyClonedEntityState gets a reference to the given NullableInt32 and assigns it to the DestroyClonedEntityState field.
func (o *DestroyClonedEntityInfoProto) SetDestroyClonedEntityState(v int32) {
	o.DestroyClonedEntityState.Set(&v)
}
// SetDestroyClonedEntityStateNil sets the value for DestroyClonedEntityState to be an explicit nil
func (o *DestroyClonedEntityInfoProto) SetDestroyClonedEntityStateNil() {
	o.DestroyClonedEntityState.Set(nil)
}

// UnsetDestroyClonedEntityState ensures that no value is present for DestroyClonedEntityState, not even an explicit nil
func (o *DestroyClonedEntityInfoProto) UnsetDestroyClonedEntityState() {
	o.DestroyClonedEntityState.Unset()
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *DestroyClonedEntityInfoProto) GetError() ErrorProto {
	if o == nil || o.Error == nil {
		var ret ErrorProto
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestroyClonedEntityInfoProto) GetErrorOk() (*ErrorProto, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *DestroyClonedEntityInfoProto) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given ErrorProto and assigns it to the Error field.
func (o *DestroyClonedEntityInfoProto) SetError(v ErrorProto) {
	o.Error = &v
}

// GetFullViewName returns the FullViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedEntityInfoProto) GetFullViewName() string {
	if o == nil || o.FullViewName.Get() == nil {
		var ret string
		return ret
	}
	return *o.FullViewName.Get()
}

// GetFullViewNameOk returns a tuple with the FullViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedEntityInfoProto) GetFullViewNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FullViewName.Get(), o.FullViewName.IsSet()
}

// HasFullViewName returns a boolean if a field has been set.
func (o *DestroyClonedEntityInfoProto) HasFullViewName() bool {
	if o != nil && o.FullViewName.IsSet() {
		return true
	}

	return false
}

// SetFullViewName gets a reference to the given NullableString and assigns it to the FullViewName field.
func (o *DestroyClonedEntityInfoProto) SetFullViewName(v string) {
	o.FullViewName.Set(&v)
}
// SetFullViewNameNil sets the value for FullViewName to be an explicit nil
func (o *DestroyClonedEntityInfoProto) SetFullViewNameNil() {
	o.FullViewName.Set(nil)
}

// UnsetFullViewName ensures that no value is present for FullViewName, not even an explicit nil
func (o *DestroyClonedEntityInfoProto) UnsetFullViewName() {
	o.FullViewName.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedEntityInfoProto) GetType() int32 {
	if o == nil || o.Type.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedEntityInfoProto) GetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *DestroyClonedEntityInfoProto) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableInt32 and assigns it to the Type field.
func (o *DestroyClonedEntityInfoProto) SetType(v int32) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *DestroyClonedEntityInfoProto) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *DestroyClonedEntityInfoProto) UnsetType() {
	o.Type.Unset()
}

func (o DestroyClonedEntityInfoProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClonedEntity != nil {
		toSerialize["clonedEntity"] = o.ClonedEntity
	}
	if o.ClonedEntityStatus.IsSet() {
		toSerialize["clonedEntityStatus"] = o.ClonedEntityStatus.Get()
	}
	if o.DestroyClonedEntityState.IsSet() {
		toSerialize["destroyClonedEntityState"] = o.DestroyClonedEntityState.Get()
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.FullViewName.IsSet() {
		toSerialize["fullViewName"] = o.FullViewName.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableDestroyClonedEntityInfoProto struct {
	value *DestroyClonedEntityInfoProto
	isSet bool
}

func (v NullableDestroyClonedEntityInfoProto) Get() *DestroyClonedEntityInfoProto {
	return v.value
}

func (v *NullableDestroyClonedEntityInfoProto) Set(val *DestroyClonedEntityInfoProto) {
	v.value = val
	v.isSet = true
}

func (v NullableDestroyClonedEntityInfoProto) IsSet() bool {
	return v.isSet
}

func (v *NullableDestroyClonedEntityInfoProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDestroyClonedEntityInfoProto(val *DestroyClonedEntityInfoProto) *NullableDestroyClonedEntityInfoProto {
	return &NullableDestroyClonedEntityInfoProto{value: val, isSet: true}
}

func (v NullableDestroyClonedEntityInfoProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDestroyClonedEntityInfoProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


