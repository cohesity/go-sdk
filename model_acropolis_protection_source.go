/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// AcropolisProtectionSource Specifies a Protection Source in Acropolis environment.
type AcropolisProtectionSource struct {
	// Specifies the UUID of the Acropolis cluster instance to which this entity belongs to.
	ClusterUuid NullableString `json:"clusterUuid,omitempty"`
	// Specifies a description about the Protection Source.
	Description NullableString `json:"description,omitempty"`
	// Specifies whether the VM is an agent VM. This is applicable to acropolis entity of type kVirtualMachine.
	MountPath NullableBool `json:"mountPath,omitempty"`
	// Specifies the name of the Acropolis Object.
	Name NullableString `json:"name,omitempty"`
	// Specifies the type of an Acropolis Protection Source Object such as 'kPrismCentral', 'kHost', 'kNetwork', etc. Specifies the type of an Acropolis source entity. 'kPrismCentral' indicates a collection of multiple Nutanix clusters. 'kStandaloneCluster' indicates a single Nutanix cluster. 'kCluster' indicates a Nutanix cluster managed by a Prism Central. 'kHost' indicates an Acropolis host. 'kVirtualMachine' indicates a Virtual Machine. 'kNetwork' indicates a Virtual Machine network object. 'kStorageContainer' represents a storage container object.
	Type NullableString `json:"type,omitempty"`
	// Specifies the UUID of the Acropolis Object. This is unique within the cluster instance. Together with clusterUuid, this entity is unique within the Acropolis environment.
	Uuid NullableString `json:"uuid,omitempty"`
	// Specifies the version of an Acropolis cluster or standalone cluster.
	Version NullableString `json:"version,omitempty"`
}

// NewAcropolisProtectionSource instantiates a new AcropolisProtectionSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcropolisProtectionSource() *AcropolisProtectionSource {
	this := AcropolisProtectionSource{}
	return &this
}

// NewAcropolisProtectionSourceWithDefaults instantiates a new AcropolisProtectionSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAcropolisProtectionSourceWithDefaults() *AcropolisProtectionSource {
	this := AcropolisProtectionSource{}
	return &this
}

// GetClusterUuid returns the ClusterUuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AcropolisProtectionSource) GetClusterUuid() string {
	if o == nil || o.ClusterUuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClusterUuid.Get()
}

// GetClusterUuidOk returns a tuple with the ClusterUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AcropolisProtectionSource) GetClusterUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterUuid.Get(), o.ClusterUuid.IsSet()
}

// HasClusterUuid returns a boolean if a field has been set.
func (o *AcropolisProtectionSource) HasClusterUuid() bool {
	if o != nil && o.ClusterUuid.IsSet() {
		return true
	}

	return false
}

// SetClusterUuid gets a reference to the given NullableString and assigns it to the ClusterUuid field.
func (o *AcropolisProtectionSource) SetClusterUuid(v string) {
	o.ClusterUuid.Set(&v)
}
// SetClusterUuidNil sets the value for ClusterUuid to be an explicit nil
func (o *AcropolisProtectionSource) SetClusterUuidNil() {
	o.ClusterUuid.Set(nil)
}

// UnsetClusterUuid ensures that no value is present for ClusterUuid, not even an explicit nil
func (o *AcropolisProtectionSource) UnsetClusterUuid() {
	o.ClusterUuid.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AcropolisProtectionSource) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AcropolisProtectionSource) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *AcropolisProtectionSource) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *AcropolisProtectionSource) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *AcropolisProtectionSource) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *AcropolisProtectionSource) UnsetDescription() {
	o.Description.Unset()
}

// GetMountPath returns the MountPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AcropolisProtectionSource) GetMountPath() bool {
	if o == nil || o.MountPath.Get() == nil {
		var ret bool
		return ret
	}
	return *o.MountPath.Get()
}

// GetMountPathOk returns a tuple with the MountPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AcropolisProtectionSource) GetMountPathOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MountPath.Get(), o.MountPath.IsSet()
}

// HasMountPath returns a boolean if a field has been set.
func (o *AcropolisProtectionSource) HasMountPath() bool {
	if o != nil && o.MountPath.IsSet() {
		return true
	}

	return false
}

// SetMountPath gets a reference to the given NullableBool and assigns it to the MountPath field.
func (o *AcropolisProtectionSource) SetMountPath(v bool) {
	o.MountPath.Set(&v)
}
// SetMountPathNil sets the value for MountPath to be an explicit nil
func (o *AcropolisProtectionSource) SetMountPathNil() {
	o.MountPath.Set(nil)
}

// UnsetMountPath ensures that no value is present for MountPath, not even an explicit nil
func (o *AcropolisProtectionSource) UnsetMountPath() {
	o.MountPath.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AcropolisProtectionSource) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AcropolisProtectionSource) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AcropolisProtectionSource) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AcropolisProtectionSource) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *AcropolisProtectionSource) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AcropolisProtectionSource) UnsetName() {
	o.Name.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AcropolisProtectionSource) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AcropolisProtectionSource) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *AcropolisProtectionSource) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *AcropolisProtectionSource) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *AcropolisProtectionSource) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *AcropolisProtectionSource) UnsetType() {
	o.Type.Unset()
}

// GetUuid returns the Uuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AcropolisProtectionSource) GetUuid() string {
	if o == nil || o.Uuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uuid.Get()
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AcropolisProtectionSource) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Uuid.Get(), o.Uuid.IsSet()
}

// HasUuid returns a boolean if a field has been set.
func (o *AcropolisProtectionSource) HasUuid() bool {
	if o != nil && o.Uuid.IsSet() {
		return true
	}

	return false
}

// SetUuid gets a reference to the given NullableString and assigns it to the Uuid field.
func (o *AcropolisProtectionSource) SetUuid(v string) {
	o.Uuid.Set(&v)
}
// SetUuidNil sets the value for Uuid to be an explicit nil
func (o *AcropolisProtectionSource) SetUuidNil() {
	o.Uuid.Set(nil)
}

// UnsetUuid ensures that no value is present for Uuid, not even an explicit nil
func (o *AcropolisProtectionSource) UnsetUuid() {
	o.Uuid.Unset()
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AcropolisProtectionSource) GetVersion() string {
	if o == nil || o.Version.Get() == nil {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AcropolisProtectionSource) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *AcropolisProtectionSource) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *AcropolisProtectionSource) SetVersion(v string) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *AcropolisProtectionSource) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *AcropolisProtectionSource) UnsetVersion() {
	o.Version.Unset()
}

func (o AcropolisProtectionSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterUuid.IsSet() {
		toSerialize["clusterUuid"] = o.ClusterUuid.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.MountPath.IsSet() {
		toSerialize["mountPath"] = o.MountPath.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.Uuid.IsSet() {
		toSerialize["uuid"] = o.Uuid.Get()
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAcropolisProtectionSource struct {
	value *AcropolisProtectionSource
	isSet bool
}

func (v NullableAcropolisProtectionSource) Get() *AcropolisProtectionSource {
	return v.value
}

func (v *NullableAcropolisProtectionSource) Set(val *AcropolisProtectionSource) {
	v.value = val
	v.isSet = true
}

func (v NullableAcropolisProtectionSource) IsSet() bool {
	return v.isSet
}

func (v *NullableAcropolisProtectionSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcropolisProtectionSource(val *AcropolisProtectionSource) *NullableAcropolisProtectionSource {
	return &NullableAcropolisProtectionSource{value: val, isSet: true}
}

func (v NullableAcropolisProtectionSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcropolisProtectionSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


