/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// RestoredObjectVCDConfigProto struct for RestoredObjectVCDConfigProto
type RestoredObjectVCDConfigProto struct {
	// Whether the restored object is a VApp.
	IsVapp NullableBool `json:"isVapp,omitempty"`
	// Whether the restored object is a VApp template.
	IsVappTemplate NullableBool `json:"isVappTemplate,omitempty"`
	RestoredVappInfo *EntityProto `json:"restoredVappInfo,omitempty"`
	RestoredVappTemplateInfo *EntityProto `json:"restoredVappTemplateInfo,omitempty"`
	VappEntity *EntityProto `json:"vappEntity,omitempty"`
	VcenterConnectorParams *ConnectorParams `json:"vcenterConnectorParams,omitempty"`
	VdcEntity *EntityProto `json:"vdcEntity,omitempty"`
}

// NewRestoredObjectVCDConfigProto instantiates a new RestoredObjectVCDConfigProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoredObjectVCDConfigProto() *RestoredObjectVCDConfigProto {
	this := RestoredObjectVCDConfigProto{}
	return &this
}

// NewRestoredObjectVCDConfigProtoWithDefaults instantiates a new RestoredObjectVCDConfigProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoredObjectVCDConfigProtoWithDefaults() *RestoredObjectVCDConfigProto {
	this := RestoredObjectVCDConfigProto{}
	return &this
}

// GetIsVapp returns the IsVapp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoredObjectVCDConfigProto) GetIsVapp() bool {
	if o == nil || o.IsVapp.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsVapp.Get()
}

// GetIsVappOk returns a tuple with the IsVapp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoredObjectVCDConfigProto) GetIsVappOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsVapp.Get(), o.IsVapp.IsSet()
}

// HasIsVapp returns a boolean if a field has been set.
func (o *RestoredObjectVCDConfigProto) HasIsVapp() bool {
	if o != nil && o.IsVapp.IsSet() {
		return true
	}

	return false
}

// SetIsVapp gets a reference to the given NullableBool and assigns it to the IsVapp field.
func (o *RestoredObjectVCDConfigProto) SetIsVapp(v bool) {
	o.IsVapp.Set(&v)
}
// SetIsVappNil sets the value for IsVapp to be an explicit nil
func (o *RestoredObjectVCDConfigProto) SetIsVappNil() {
	o.IsVapp.Set(nil)
}

// UnsetIsVapp ensures that no value is present for IsVapp, not even an explicit nil
func (o *RestoredObjectVCDConfigProto) UnsetIsVapp() {
	o.IsVapp.Unset()
}

// GetIsVappTemplate returns the IsVappTemplate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoredObjectVCDConfigProto) GetIsVappTemplate() bool {
	if o == nil || o.IsVappTemplate.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsVappTemplate.Get()
}

// GetIsVappTemplateOk returns a tuple with the IsVappTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoredObjectVCDConfigProto) GetIsVappTemplateOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsVappTemplate.Get(), o.IsVappTemplate.IsSet()
}

// HasIsVappTemplate returns a boolean if a field has been set.
func (o *RestoredObjectVCDConfigProto) HasIsVappTemplate() bool {
	if o != nil && o.IsVappTemplate.IsSet() {
		return true
	}

	return false
}

// SetIsVappTemplate gets a reference to the given NullableBool and assigns it to the IsVappTemplate field.
func (o *RestoredObjectVCDConfigProto) SetIsVappTemplate(v bool) {
	o.IsVappTemplate.Set(&v)
}
// SetIsVappTemplateNil sets the value for IsVappTemplate to be an explicit nil
func (o *RestoredObjectVCDConfigProto) SetIsVappTemplateNil() {
	o.IsVappTemplate.Set(nil)
}

// UnsetIsVappTemplate ensures that no value is present for IsVappTemplate, not even an explicit nil
func (o *RestoredObjectVCDConfigProto) UnsetIsVappTemplate() {
	o.IsVappTemplate.Unset()
}

// GetRestoredVappInfo returns the RestoredVappInfo field value if set, zero value otherwise.
func (o *RestoredObjectVCDConfigProto) GetRestoredVappInfo() EntityProto {
	if o == nil || o.RestoredVappInfo == nil {
		var ret EntityProto
		return ret
	}
	return *o.RestoredVappInfo
}

// GetRestoredVappInfoOk returns a tuple with the RestoredVappInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoredObjectVCDConfigProto) GetRestoredVappInfoOk() (*EntityProto, bool) {
	if o == nil || o.RestoredVappInfo == nil {
		return nil, false
	}
	return o.RestoredVappInfo, true
}

// HasRestoredVappInfo returns a boolean if a field has been set.
func (o *RestoredObjectVCDConfigProto) HasRestoredVappInfo() bool {
	if o != nil && o.RestoredVappInfo != nil {
		return true
	}

	return false
}

// SetRestoredVappInfo gets a reference to the given EntityProto and assigns it to the RestoredVappInfo field.
func (o *RestoredObjectVCDConfigProto) SetRestoredVappInfo(v EntityProto) {
	o.RestoredVappInfo = &v
}

// GetRestoredVappTemplateInfo returns the RestoredVappTemplateInfo field value if set, zero value otherwise.
func (o *RestoredObjectVCDConfigProto) GetRestoredVappTemplateInfo() EntityProto {
	if o == nil || o.RestoredVappTemplateInfo == nil {
		var ret EntityProto
		return ret
	}
	return *o.RestoredVappTemplateInfo
}

// GetRestoredVappTemplateInfoOk returns a tuple with the RestoredVappTemplateInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoredObjectVCDConfigProto) GetRestoredVappTemplateInfoOk() (*EntityProto, bool) {
	if o == nil || o.RestoredVappTemplateInfo == nil {
		return nil, false
	}
	return o.RestoredVappTemplateInfo, true
}

// HasRestoredVappTemplateInfo returns a boolean if a field has been set.
func (o *RestoredObjectVCDConfigProto) HasRestoredVappTemplateInfo() bool {
	if o != nil && o.RestoredVappTemplateInfo != nil {
		return true
	}

	return false
}

// SetRestoredVappTemplateInfo gets a reference to the given EntityProto and assigns it to the RestoredVappTemplateInfo field.
func (o *RestoredObjectVCDConfigProto) SetRestoredVappTemplateInfo(v EntityProto) {
	o.RestoredVappTemplateInfo = &v
}

// GetVappEntity returns the VappEntity field value if set, zero value otherwise.
func (o *RestoredObjectVCDConfigProto) GetVappEntity() EntityProto {
	if o == nil || o.VappEntity == nil {
		var ret EntityProto
		return ret
	}
	return *o.VappEntity
}

// GetVappEntityOk returns a tuple with the VappEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoredObjectVCDConfigProto) GetVappEntityOk() (*EntityProto, bool) {
	if o == nil || o.VappEntity == nil {
		return nil, false
	}
	return o.VappEntity, true
}

// HasVappEntity returns a boolean if a field has been set.
func (o *RestoredObjectVCDConfigProto) HasVappEntity() bool {
	if o != nil && o.VappEntity != nil {
		return true
	}

	return false
}

// SetVappEntity gets a reference to the given EntityProto and assigns it to the VappEntity field.
func (o *RestoredObjectVCDConfigProto) SetVappEntity(v EntityProto) {
	o.VappEntity = &v
}

// GetVcenterConnectorParams returns the VcenterConnectorParams field value if set, zero value otherwise.
func (o *RestoredObjectVCDConfigProto) GetVcenterConnectorParams() ConnectorParams {
	if o == nil || o.VcenterConnectorParams == nil {
		var ret ConnectorParams
		return ret
	}
	return *o.VcenterConnectorParams
}

// GetVcenterConnectorParamsOk returns a tuple with the VcenterConnectorParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoredObjectVCDConfigProto) GetVcenterConnectorParamsOk() (*ConnectorParams, bool) {
	if o == nil || o.VcenterConnectorParams == nil {
		return nil, false
	}
	return o.VcenterConnectorParams, true
}

// HasVcenterConnectorParams returns a boolean if a field has been set.
func (o *RestoredObjectVCDConfigProto) HasVcenterConnectorParams() bool {
	if o != nil && o.VcenterConnectorParams != nil {
		return true
	}

	return false
}

// SetVcenterConnectorParams gets a reference to the given ConnectorParams and assigns it to the VcenterConnectorParams field.
func (o *RestoredObjectVCDConfigProto) SetVcenterConnectorParams(v ConnectorParams) {
	o.VcenterConnectorParams = &v
}

// GetVdcEntity returns the VdcEntity field value if set, zero value otherwise.
func (o *RestoredObjectVCDConfigProto) GetVdcEntity() EntityProto {
	if o == nil || o.VdcEntity == nil {
		var ret EntityProto
		return ret
	}
	return *o.VdcEntity
}

// GetVdcEntityOk returns a tuple with the VdcEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoredObjectVCDConfigProto) GetVdcEntityOk() (*EntityProto, bool) {
	if o == nil || o.VdcEntity == nil {
		return nil, false
	}
	return o.VdcEntity, true
}

// HasVdcEntity returns a boolean if a field has been set.
func (o *RestoredObjectVCDConfigProto) HasVdcEntity() bool {
	if o != nil && o.VdcEntity != nil {
		return true
	}

	return false
}

// SetVdcEntity gets a reference to the given EntityProto and assigns it to the VdcEntity field.
func (o *RestoredObjectVCDConfigProto) SetVdcEntity(v EntityProto) {
	o.VdcEntity = &v
}

func (o RestoredObjectVCDConfigProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsVapp.IsSet() {
		toSerialize["isVapp"] = o.IsVapp.Get()
	}
	if o.IsVappTemplate.IsSet() {
		toSerialize["isVappTemplate"] = o.IsVappTemplate.Get()
	}
	if o.RestoredVappInfo != nil {
		toSerialize["restoredVappInfo"] = o.RestoredVappInfo
	}
	if o.RestoredVappTemplateInfo != nil {
		toSerialize["restoredVappTemplateInfo"] = o.RestoredVappTemplateInfo
	}
	if o.VappEntity != nil {
		toSerialize["vappEntity"] = o.VappEntity
	}
	if o.VcenterConnectorParams != nil {
		toSerialize["vcenterConnectorParams"] = o.VcenterConnectorParams
	}
	if o.VdcEntity != nil {
		toSerialize["vdcEntity"] = o.VdcEntity
	}
	return json.Marshal(toSerialize)
}

type NullableRestoredObjectVCDConfigProto struct {
	value *RestoredObjectVCDConfigProto
	isSet bool
}

func (v NullableRestoredObjectVCDConfigProto) Get() *RestoredObjectVCDConfigProto {
	return v.value
}

func (v *NullableRestoredObjectVCDConfigProto) Set(val *RestoredObjectVCDConfigProto) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoredObjectVCDConfigProto) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoredObjectVCDConfigProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoredObjectVCDConfigProto(val *RestoredObjectVCDConfigProto) *NullableRestoredObjectVCDConfigProto {
	return &NullableRestoredObjectVCDConfigProto{value: val, isSet: true}
}

func (v NullableRestoredObjectVCDConfigProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoredObjectVCDConfigProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


