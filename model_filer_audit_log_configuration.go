/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// FilerAuditLogConfiguration Specifies the settings of the filer audit log configuration.
type FilerAuditLogConfiguration struct {
	// Specifies if filer audit logging is enabled on the Cohesity Cluster. If 'true', filer audit logging is enabled. Otherwise, it is disabled.
	Enabled NullableBool `json:"enabled"`
	// Specifies the number of days to keep (retain) the filer audit logs. Audit logs generated before the period of time specified by retentionPeriodDays are removed from the Cohesity Cluster.
	RetentionPeriodDays NullableInt32 `json:"retentionPeriodDays"`
}

// NewFilerAuditLogConfiguration instantiates a new FilerAuditLogConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilerAuditLogConfiguration(enabled NullableBool, retentionPeriodDays NullableInt32) *FilerAuditLogConfiguration {
	this := FilerAuditLogConfiguration{}
	this.Enabled = enabled
	this.RetentionPeriodDays = retentionPeriodDays
	return &this
}

// NewFilerAuditLogConfigurationWithDefaults instantiates a new FilerAuditLogConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilerAuditLogConfigurationWithDefaults() *FilerAuditLogConfiguration {
	this := FilerAuditLogConfiguration{}
	return &this
}

// GetEnabled returns the Enabled field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *FilerAuditLogConfiguration) GetEnabled() bool {
	if o == nil || o.Enabled.Get() == nil {
		var ret bool
		return ret
	}

	return *o.Enabled.Get()
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FilerAuditLogConfiguration) GetEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Enabled.Get(), o.Enabled.IsSet()
}

// SetEnabled sets field value
func (o *FilerAuditLogConfiguration) SetEnabled(v bool) {
	o.Enabled.Set(&v)
}

// GetRetentionPeriodDays returns the RetentionPeriodDays field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *FilerAuditLogConfiguration) GetRetentionPeriodDays() int32 {
	if o == nil || o.RetentionPeriodDays.Get() == nil {
		var ret int32
		return ret
	}

	return *o.RetentionPeriodDays.Get()
}

// GetRetentionPeriodDaysOk returns a tuple with the RetentionPeriodDays field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FilerAuditLogConfiguration) GetRetentionPeriodDaysOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RetentionPeriodDays.Get(), o.RetentionPeriodDays.IsSet()
}

// SetRetentionPeriodDays sets field value
func (o *FilerAuditLogConfiguration) SetRetentionPeriodDays(v int32) {
	o.RetentionPeriodDays.Set(&v)
}

func (o FilerAuditLogConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["enabled"] = o.Enabled.Get()
	}
	if true {
		toSerialize["retentionPeriodDays"] = o.RetentionPeriodDays.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableFilerAuditLogConfiguration struct {
	value *FilerAuditLogConfiguration
	isSet bool
}

func (v NullableFilerAuditLogConfiguration) Get() *FilerAuditLogConfiguration {
	return v.value
}

func (v *NullableFilerAuditLogConfiguration) Set(val *FilerAuditLogConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableFilerAuditLogConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableFilerAuditLogConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilerAuditLogConfiguration(val *FilerAuditLogConfiguration) *NullableFilerAuditLogConfiguration {
	return &NullableFilerAuditLogConfiguration{value: val, isSet: true}
}

func (v NullableFilerAuditLogConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilerAuditLogConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


