/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// UpdateAntivirusServiceGroupParams struct for UpdateAntivirusServiceGroupParams
type UpdateAntivirusServiceGroupParams struct {
	// Specifies the Antivirus services for this provider.
	AntivirusServices []AntivirusServiceConfigParams `json:"antivirusServices,omitempty"`
	// Specifies the description of the Antivirus service group.
	Description NullableString `json:"description,omitempty"`
	// Specifies the Id of the Antivirus service group.
	Id NullableInt64 `json:"id"`
	// Specifies whether the antivirus service group is enabled or not.
	IsEnabled NullableBool `json:"isEnabled,omitempty"`
	// Specifies the name of the Antivirus service group.
	Name NullableString `json:"name"`
}

// NewUpdateAntivirusServiceGroupParams instantiates a new UpdateAntivirusServiceGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAntivirusServiceGroupParams(id NullableInt64, name NullableString) *UpdateAntivirusServiceGroupParams {
	this := UpdateAntivirusServiceGroupParams{}
	this.Id = id
	this.Name = name
	return &this
}

// NewUpdateAntivirusServiceGroupParamsWithDefaults instantiates a new UpdateAntivirusServiceGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAntivirusServiceGroupParamsWithDefaults() *UpdateAntivirusServiceGroupParams {
	this := UpdateAntivirusServiceGroupParams{}
	return &this
}

// GetAntivirusServices returns the AntivirusServices field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAntivirusServiceGroupParams) GetAntivirusServices() []AntivirusServiceConfigParams {
	if o == nil  {
		var ret []AntivirusServiceConfigParams
		return ret
	}
	return o.AntivirusServices
}

// GetAntivirusServicesOk returns a tuple with the AntivirusServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAntivirusServiceGroupParams) GetAntivirusServicesOk() (*[]AntivirusServiceConfigParams, bool) {
	if o == nil || o.AntivirusServices == nil {
		return nil, false
	}
	return &o.AntivirusServices, true
}

// HasAntivirusServices returns a boolean if a field has been set.
func (o *UpdateAntivirusServiceGroupParams) HasAntivirusServices() bool {
	if o != nil && o.AntivirusServices != nil {
		return true
	}

	return false
}

// SetAntivirusServices gets a reference to the given []AntivirusServiceConfigParams and assigns it to the AntivirusServices field.
func (o *UpdateAntivirusServiceGroupParams) SetAntivirusServices(v []AntivirusServiceConfigParams) {
	o.AntivirusServices = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAntivirusServiceGroupParams) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAntivirusServiceGroupParams) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateAntivirusServiceGroupParams) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *UpdateAntivirusServiceGroupParams) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *UpdateAntivirusServiceGroupParams) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *UpdateAntivirusServiceGroupParams) UnsetDescription() {
	o.Description.Unset()
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *UpdateAntivirusServiceGroupParams) GetId() int64 {
	if o == nil || o.Id.Get() == nil {
		var ret int64
		return ret
	}

	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAntivirusServiceGroupParams) GetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// SetId sets field value
func (o *UpdateAntivirusServiceGroupParams) SetId(v int64) {
	o.Id.Set(&v)
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAntivirusServiceGroupParams) GetIsEnabled() bool {
	if o == nil || o.IsEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsEnabled.Get()
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAntivirusServiceGroupParams) GetIsEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsEnabled.Get(), o.IsEnabled.IsSet()
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *UpdateAntivirusServiceGroupParams) HasIsEnabled() bool {
	if o != nil && o.IsEnabled.IsSet() {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given NullableBool and assigns it to the IsEnabled field.
func (o *UpdateAntivirusServiceGroupParams) SetIsEnabled(v bool) {
	o.IsEnabled.Set(&v)
}
// SetIsEnabledNil sets the value for IsEnabled to be an explicit nil
func (o *UpdateAntivirusServiceGroupParams) SetIsEnabledNil() {
	o.IsEnabled.Set(nil)
}

// UnsetIsEnabled ensures that no value is present for IsEnabled, not even an explicit nil
func (o *UpdateAntivirusServiceGroupParams) UnsetIsEnabled() {
	o.IsEnabled.Unset()
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *UpdateAntivirusServiceGroupParams) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAntivirusServiceGroupParams) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *UpdateAntivirusServiceGroupParams) SetName(v string) {
	o.Name.Set(&v)
}

func (o UpdateAntivirusServiceGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AntivirusServices != nil {
		toSerialize["antivirusServices"] = o.AntivirusServices
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if true {
		toSerialize["id"] = o.Id.Get()
	}
	if o.IsEnabled.IsSet() {
		toSerialize["isEnabled"] = o.IsEnabled.Get()
	}
	if true {
		toSerialize["name"] = o.Name.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateAntivirusServiceGroupParams struct {
	value *UpdateAntivirusServiceGroupParams
	isSet bool
}

func (v NullableUpdateAntivirusServiceGroupParams) Get() *UpdateAntivirusServiceGroupParams {
	return v.value
}

func (v *NullableUpdateAntivirusServiceGroupParams) Set(val *UpdateAntivirusServiceGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAntivirusServiceGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAntivirusServiceGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAntivirusServiceGroupParams(val *UpdateAntivirusServiceGroupParams) *NullableUpdateAntivirusServiceGroupParams {
	return &NullableUpdateAntivirusServiceGroupParams{value: val, isSet: true}
}

func (v NullableUpdateAntivirusServiceGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAntivirusServiceGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


