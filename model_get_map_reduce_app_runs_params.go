/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// GetMapReduceAppRunsParams GetMapReduceAppRunsParams specifies the input params to fetch the map reduce application runs.
type GetMapReduceAppRunsParams struct {
	// ApplicationId is the Id of the map reduce application.
	AppId NullableInt64 `json:"appId,omitempty"`
	// ApplicationInstanceId is the Id of the map reduce application instance.
	AppInstanceId NullableInt64 `json:"appInstanceId,omitempty"`
	// If this flag is true, then send details of instance, else send only RunInfo.
	IncludeDetails NullableBool `json:"includeDetails,omitempty"`
	// Give last N instance of an app based on end time.
	LastNumInstances NullableInt32 `json:"lastNumInstances,omitempty"`
	// MaxRunEndTimestampInSecs specifies the maximum job run end timestamp in seconds. App run instances with end time less than equal to MaxRunEndTimestampInSecs will be selected. Default is LONG_MAX (inf).
	MaxRunEndTimeInSecs NullableInt64 `json:"maxRunEndTimeInSecs,omitempty"`
	// MaxRunStartTimestampInSecs specifies the maximum job run start timestamp in seconds. App run instances with start time less than equal to MaxRunStartTimestampInSecs will be selected. Default is LONG_MAX (inf).
	MaxRunStartTimeInSecs NullableInt64 `json:"maxRunStartTimeInSecs,omitempty"`
	// MinRunEndTimestampInSecs specifies the minimum job run end timestamp in seconds. App run instances with end time greater than equal to MinRunEndTimestampInSecs will be selected. Default is 0, i.e. beginning of time.
	MinRunEndTimeInSecs NullableInt64 `json:"minRunEndTimeInSecs,omitempty"`
	// MinRunStartTimestampInSecs specifies the minimum job run start timestamp in seconds. App run instances with start time greater than equal to MinRunStartTimestampInSecs will be selected. Default is 0, i.e. beginning of time.
	MinRunStartTimeInSecs NullableInt64 `json:"minRunStartTimeInSecs,omitempty"`
	// Number of results to be displayed on a page.
	PageSize NullableInt32 `json:"pageSize,omitempty"`
	// Filter instances based on the map reduce application run status.
	RunStatus NullableString `json:"runStatus,omitempty"`
	// Start offset for pagination from where result needs to be fetched.
	StartOffset NullableInt32 `json:"startOffset,omitempty"`
}

// NewGetMapReduceAppRunsParams instantiates a new GetMapReduceAppRunsParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMapReduceAppRunsParams() *GetMapReduceAppRunsParams {
	this := GetMapReduceAppRunsParams{}
	return &this
}

// NewGetMapReduceAppRunsParamsWithDefaults instantiates a new GetMapReduceAppRunsParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMapReduceAppRunsParamsWithDefaults() *GetMapReduceAppRunsParams {
	this := GetMapReduceAppRunsParams{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMapReduceAppRunsParams) GetAppId() int64 {
	if o == nil || o.AppId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AppId.Get()
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMapReduceAppRunsParams) GetAppIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AppId.Get(), o.AppId.IsSet()
}

// HasAppId returns a boolean if a field has been set.
func (o *GetMapReduceAppRunsParams) HasAppId() bool {
	if o != nil && o.AppId.IsSet() {
		return true
	}

	return false
}

// SetAppId gets a reference to the given NullableInt64 and assigns it to the AppId field.
func (o *GetMapReduceAppRunsParams) SetAppId(v int64) {
	o.AppId.Set(&v)
}
// SetAppIdNil sets the value for AppId to be an explicit nil
func (o *GetMapReduceAppRunsParams) SetAppIdNil() {
	o.AppId.Set(nil)
}

// UnsetAppId ensures that no value is present for AppId, not even an explicit nil
func (o *GetMapReduceAppRunsParams) UnsetAppId() {
	o.AppId.Unset()
}

// GetAppInstanceId returns the AppInstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMapReduceAppRunsParams) GetAppInstanceId() int64 {
	if o == nil || o.AppInstanceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AppInstanceId.Get()
}

// GetAppInstanceIdOk returns a tuple with the AppInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMapReduceAppRunsParams) GetAppInstanceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AppInstanceId.Get(), o.AppInstanceId.IsSet()
}

// HasAppInstanceId returns a boolean if a field has been set.
func (o *GetMapReduceAppRunsParams) HasAppInstanceId() bool {
	if o != nil && o.AppInstanceId.IsSet() {
		return true
	}

	return false
}

// SetAppInstanceId gets a reference to the given NullableInt64 and assigns it to the AppInstanceId field.
func (o *GetMapReduceAppRunsParams) SetAppInstanceId(v int64) {
	o.AppInstanceId.Set(&v)
}
// SetAppInstanceIdNil sets the value for AppInstanceId to be an explicit nil
func (o *GetMapReduceAppRunsParams) SetAppInstanceIdNil() {
	o.AppInstanceId.Set(nil)
}

// UnsetAppInstanceId ensures that no value is present for AppInstanceId, not even an explicit nil
func (o *GetMapReduceAppRunsParams) UnsetAppInstanceId() {
	o.AppInstanceId.Unset()
}

// GetIncludeDetails returns the IncludeDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMapReduceAppRunsParams) GetIncludeDetails() bool {
	if o == nil || o.IncludeDetails.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IncludeDetails.Get()
}

// GetIncludeDetailsOk returns a tuple with the IncludeDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMapReduceAppRunsParams) GetIncludeDetailsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IncludeDetails.Get(), o.IncludeDetails.IsSet()
}

// HasIncludeDetails returns a boolean if a field has been set.
func (o *GetMapReduceAppRunsParams) HasIncludeDetails() bool {
	if o != nil && o.IncludeDetails.IsSet() {
		return true
	}

	return false
}

// SetIncludeDetails gets a reference to the given NullableBool and assigns it to the IncludeDetails field.
func (o *GetMapReduceAppRunsParams) SetIncludeDetails(v bool) {
	o.IncludeDetails.Set(&v)
}
// SetIncludeDetailsNil sets the value for IncludeDetails to be an explicit nil
func (o *GetMapReduceAppRunsParams) SetIncludeDetailsNil() {
	o.IncludeDetails.Set(nil)
}

// UnsetIncludeDetails ensures that no value is present for IncludeDetails, not even an explicit nil
func (o *GetMapReduceAppRunsParams) UnsetIncludeDetails() {
	o.IncludeDetails.Unset()
}

// GetLastNumInstances returns the LastNumInstances field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMapReduceAppRunsParams) GetLastNumInstances() int32 {
	if o == nil || o.LastNumInstances.Get() == nil {
		var ret int32
		return ret
	}
	return *o.LastNumInstances.Get()
}

// GetLastNumInstancesOk returns a tuple with the LastNumInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMapReduceAppRunsParams) GetLastNumInstancesOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastNumInstances.Get(), o.LastNumInstances.IsSet()
}

// HasLastNumInstances returns a boolean if a field has been set.
func (o *GetMapReduceAppRunsParams) HasLastNumInstances() bool {
	if o != nil && o.LastNumInstances.IsSet() {
		return true
	}

	return false
}

// SetLastNumInstances gets a reference to the given NullableInt32 and assigns it to the LastNumInstances field.
func (o *GetMapReduceAppRunsParams) SetLastNumInstances(v int32) {
	o.LastNumInstances.Set(&v)
}
// SetLastNumInstancesNil sets the value for LastNumInstances to be an explicit nil
func (o *GetMapReduceAppRunsParams) SetLastNumInstancesNil() {
	o.LastNumInstances.Set(nil)
}

// UnsetLastNumInstances ensures that no value is present for LastNumInstances, not even an explicit nil
func (o *GetMapReduceAppRunsParams) UnsetLastNumInstances() {
	o.LastNumInstances.Unset()
}

// GetMaxRunEndTimeInSecs returns the MaxRunEndTimeInSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMapReduceAppRunsParams) GetMaxRunEndTimeInSecs() int64 {
	if o == nil || o.MaxRunEndTimeInSecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.MaxRunEndTimeInSecs.Get()
}

// GetMaxRunEndTimeInSecsOk returns a tuple with the MaxRunEndTimeInSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMapReduceAppRunsParams) GetMaxRunEndTimeInSecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxRunEndTimeInSecs.Get(), o.MaxRunEndTimeInSecs.IsSet()
}

// HasMaxRunEndTimeInSecs returns a boolean if a field has been set.
func (o *GetMapReduceAppRunsParams) HasMaxRunEndTimeInSecs() bool {
	if o != nil && o.MaxRunEndTimeInSecs.IsSet() {
		return true
	}

	return false
}

// SetMaxRunEndTimeInSecs gets a reference to the given NullableInt64 and assigns it to the MaxRunEndTimeInSecs field.
func (o *GetMapReduceAppRunsParams) SetMaxRunEndTimeInSecs(v int64) {
	o.MaxRunEndTimeInSecs.Set(&v)
}
// SetMaxRunEndTimeInSecsNil sets the value for MaxRunEndTimeInSecs to be an explicit nil
func (o *GetMapReduceAppRunsParams) SetMaxRunEndTimeInSecsNil() {
	o.MaxRunEndTimeInSecs.Set(nil)
}

// UnsetMaxRunEndTimeInSecs ensures that no value is present for MaxRunEndTimeInSecs, not even an explicit nil
func (o *GetMapReduceAppRunsParams) UnsetMaxRunEndTimeInSecs() {
	o.MaxRunEndTimeInSecs.Unset()
}

// GetMaxRunStartTimeInSecs returns the MaxRunStartTimeInSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMapReduceAppRunsParams) GetMaxRunStartTimeInSecs() int64 {
	if o == nil || o.MaxRunStartTimeInSecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.MaxRunStartTimeInSecs.Get()
}

// GetMaxRunStartTimeInSecsOk returns a tuple with the MaxRunStartTimeInSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMapReduceAppRunsParams) GetMaxRunStartTimeInSecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxRunStartTimeInSecs.Get(), o.MaxRunStartTimeInSecs.IsSet()
}

// HasMaxRunStartTimeInSecs returns a boolean if a field has been set.
func (o *GetMapReduceAppRunsParams) HasMaxRunStartTimeInSecs() bool {
	if o != nil && o.MaxRunStartTimeInSecs.IsSet() {
		return true
	}

	return false
}

// SetMaxRunStartTimeInSecs gets a reference to the given NullableInt64 and assigns it to the MaxRunStartTimeInSecs field.
func (o *GetMapReduceAppRunsParams) SetMaxRunStartTimeInSecs(v int64) {
	o.MaxRunStartTimeInSecs.Set(&v)
}
// SetMaxRunStartTimeInSecsNil sets the value for MaxRunStartTimeInSecs to be an explicit nil
func (o *GetMapReduceAppRunsParams) SetMaxRunStartTimeInSecsNil() {
	o.MaxRunStartTimeInSecs.Set(nil)
}

// UnsetMaxRunStartTimeInSecs ensures that no value is present for MaxRunStartTimeInSecs, not even an explicit nil
func (o *GetMapReduceAppRunsParams) UnsetMaxRunStartTimeInSecs() {
	o.MaxRunStartTimeInSecs.Unset()
}

// GetMinRunEndTimeInSecs returns the MinRunEndTimeInSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMapReduceAppRunsParams) GetMinRunEndTimeInSecs() int64 {
	if o == nil || o.MinRunEndTimeInSecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.MinRunEndTimeInSecs.Get()
}

// GetMinRunEndTimeInSecsOk returns a tuple with the MinRunEndTimeInSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMapReduceAppRunsParams) GetMinRunEndTimeInSecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinRunEndTimeInSecs.Get(), o.MinRunEndTimeInSecs.IsSet()
}

// HasMinRunEndTimeInSecs returns a boolean if a field has been set.
func (o *GetMapReduceAppRunsParams) HasMinRunEndTimeInSecs() bool {
	if o != nil && o.MinRunEndTimeInSecs.IsSet() {
		return true
	}

	return false
}

// SetMinRunEndTimeInSecs gets a reference to the given NullableInt64 and assigns it to the MinRunEndTimeInSecs field.
func (o *GetMapReduceAppRunsParams) SetMinRunEndTimeInSecs(v int64) {
	o.MinRunEndTimeInSecs.Set(&v)
}
// SetMinRunEndTimeInSecsNil sets the value for MinRunEndTimeInSecs to be an explicit nil
func (o *GetMapReduceAppRunsParams) SetMinRunEndTimeInSecsNil() {
	o.MinRunEndTimeInSecs.Set(nil)
}

// UnsetMinRunEndTimeInSecs ensures that no value is present for MinRunEndTimeInSecs, not even an explicit nil
func (o *GetMapReduceAppRunsParams) UnsetMinRunEndTimeInSecs() {
	o.MinRunEndTimeInSecs.Unset()
}

// GetMinRunStartTimeInSecs returns the MinRunStartTimeInSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMapReduceAppRunsParams) GetMinRunStartTimeInSecs() int64 {
	if o == nil || o.MinRunStartTimeInSecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.MinRunStartTimeInSecs.Get()
}

// GetMinRunStartTimeInSecsOk returns a tuple with the MinRunStartTimeInSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMapReduceAppRunsParams) GetMinRunStartTimeInSecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinRunStartTimeInSecs.Get(), o.MinRunStartTimeInSecs.IsSet()
}

// HasMinRunStartTimeInSecs returns a boolean if a field has been set.
func (o *GetMapReduceAppRunsParams) HasMinRunStartTimeInSecs() bool {
	if o != nil && o.MinRunStartTimeInSecs.IsSet() {
		return true
	}

	return false
}

// SetMinRunStartTimeInSecs gets a reference to the given NullableInt64 and assigns it to the MinRunStartTimeInSecs field.
func (o *GetMapReduceAppRunsParams) SetMinRunStartTimeInSecs(v int64) {
	o.MinRunStartTimeInSecs.Set(&v)
}
// SetMinRunStartTimeInSecsNil sets the value for MinRunStartTimeInSecs to be an explicit nil
func (o *GetMapReduceAppRunsParams) SetMinRunStartTimeInSecsNil() {
	o.MinRunStartTimeInSecs.Set(nil)
}

// UnsetMinRunStartTimeInSecs ensures that no value is present for MinRunStartTimeInSecs, not even an explicit nil
func (o *GetMapReduceAppRunsParams) UnsetMinRunStartTimeInSecs() {
	o.MinRunStartTimeInSecs.Unset()
}

// GetPageSize returns the PageSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMapReduceAppRunsParams) GetPageSize() int32 {
	if o == nil || o.PageSize.Get() == nil {
		var ret int32
		return ret
	}
	return *o.PageSize.Get()
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMapReduceAppRunsParams) GetPageSizeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PageSize.Get(), o.PageSize.IsSet()
}

// HasPageSize returns a boolean if a field has been set.
func (o *GetMapReduceAppRunsParams) HasPageSize() bool {
	if o != nil && o.PageSize.IsSet() {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given NullableInt32 and assigns it to the PageSize field.
func (o *GetMapReduceAppRunsParams) SetPageSize(v int32) {
	o.PageSize.Set(&v)
}
// SetPageSizeNil sets the value for PageSize to be an explicit nil
func (o *GetMapReduceAppRunsParams) SetPageSizeNil() {
	o.PageSize.Set(nil)
}

// UnsetPageSize ensures that no value is present for PageSize, not even an explicit nil
func (o *GetMapReduceAppRunsParams) UnsetPageSize() {
	o.PageSize.Unset()
}

// GetRunStatus returns the RunStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMapReduceAppRunsParams) GetRunStatus() string {
	if o == nil || o.RunStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.RunStatus.Get()
}

// GetRunStatusOk returns a tuple with the RunStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMapReduceAppRunsParams) GetRunStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RunStatus.Get(), o.RunStatus.IsSet()
}

// HasRunStatus returns a boolean if a field has been set.
func (o *GetMapReduceAppRunsParams) HasRunStatus() bool {
	if o != nil && o.RunStatus.IsSet() {
		return true
	}

	return false
}

// SetRunStatus gets a reference to the given NullableString and assigns it to the RunStatus field.
func (o *GetMapReduceAppRunsParams) SetRunStatus(v string) {
	o.RunStatus.Set(&v)
}
// SetRunStatusNil sets the value for RunStatus to be an explicit nil
func (o *GetMapReduceAppRunsParams) SetRunStatusNil() {
	o.RunStatus.Set(nil)
}

// UnsetRunStatus ensures that no value is present for RunStatus, not even an explicit nil
func (o *GetMapReduceAppRunsParams) UnsetRunStatus() {
	o.RunStatus.Unset()
}

// GetStartOffset returns the StartOffset field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMapReduceAppRunsParams) GetStartOffset() int32 {
	if o == nil || o.StartOffset.Get() == nil {
		var ret int32
		return ret
	}
	return *o.StartOffset.Get()
}

// GetStartOffsetOk returns a tuple with the StartOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMapReduceAppRunsParams) GetStartOffsetOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartOffset.Get(), o.StartOffset.IsSet()
}

// HasStartOffset returns a boolean if a field has been set.
func (o *GetMapReduceAppRunsParams) HasStartOffset() bool {
	if o != nil && o.StartOffset.IsSet() {
		return true
	}

	return false
}

// SetStartOffset gets a reference to the given NullableInt32 and assigns it to the StartOffset field.
func (o *GetMapReduceAppRunsParams) SetStartOffset(v int32) {
	o.StartOffset.Set(&v)
}
// SetStartOffsetNil sets the value for StartOffset to be an explicit nil
func (o *GetMapReduceAppRunsParams) SetStartOffsetNil() {
	o.StartOffset.Set(nil)
}

// UnsetStartOffset ensures that no value is present for StartOffset, not even an explicit nil
func (o *GetMapReduceAppRunsParams) UnsetStartOffset() {
	o.StartOffset.Unset()
}

func (o GetMapReduceAppRunsParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppId.IsSet() {
		toSerialize["appId"] = o.AppId.Get()
	}
	if o.AppInstanceId.IsSet() {
		toSerialize["appInstanceId"] = o.AppInstanceId.Get()
	}
	if o.IncludeDetails.IsSet() {
		toSerialize["includeDetails"] = o.IncludeDetails.Get()
	}
	if o.LastNumInstances.IsSet() {
		toSerialize["lastNumInstances"] = o.LastNumInstances.Get()
	}
	if o.MaxRunEndTimeInSecs.IsSet() {
		toSerialize["maxRunEndTimeInSecs"] = o.MaxRunEndTimeInSecs.Get()
	}
	if o.MaxRunStartTimeInSecs.IsSet() {
		toSerialize["maxRunStartTimeInSecs"] = o.MaxRunStartTimeInSecs.Get()
	}
	if o.MinRunEndTimeInSecs.IsSet() {
		toSerialize["minRunEndTimeInSecs"] = o.MinRunEndTimeInSecs.Get()
	}
	if o.MinRunStartTimeInSecs.IsSet() {
		toSerialize["minRunStartTimeInSecs"] = o.MinRunStartTimeInSecs.Get()
	}
	if o.PageSize.IsSet() {
		toSerialize["pageSize"] = o.PageSize.Get()
	}
	if o.RunStatus.IsSet() {
		toSerialize["runStatus"] = o.RunStatus.Get()
	}
	if o.StartOffset.IsSet() {
		toSerialize["startOffset"] = o.StartOffset.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGetMapReduceAppRunsParams struct {
	value *GetMapReduceAppRunsParams
	isSet bool
}

func (v NullableGetMapReduceAppRunsParams) Get() *GetMapReduceAppRunsParams {
	return v.value
}

func (v *NullableGetMapReduceAppRunsParams) Set(val *GetMapReduceAppRunsParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMapReduceAppRunsParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMapReduceAppRunsParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMapReduceAppRunsParams(val *GetMapReduceAppRunsParams) *NullableGetMapReduceAppRunsParams {
	return &NullableGetMapReduceAppRunsParams{value: val, isSet: true}
}

func (v NullableGetMapReduceAppRunsParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMapReduceAppRunsParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


