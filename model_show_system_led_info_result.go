/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ShowSystemLedInfoResult Specifies the result returned after a successful request to show system LED details.
type ShowSystemLedInfoResult struct {
	LedInfo NullableString `json:"ledInfo,omitempty"`
}

// NewShowSystemLedInfoResult instantiates a new ShowSystemLedInfoResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShowSystemLedInfoResult() *ShowSystemLedInfoResult {
	this := ShowSystemLedInfoResult{}
	return &this
}

// NewShowSystemLedInfoResultWithDefaults instantiates a new ShowSystemLedInfoResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShowSystemLedInfoResultWithDefaults() *ShowSystemLedInfoResult {
	this := ShowSystemLedInfoResult{}
	return &this
}

// GetLedInfo returns the LedInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShowSystemLedInfoResult) GetLedInfo() string {
	if o == nil || o.LedInfo.Get() == nil {
		var ret string
		return ret
	}
	return *o.LedInfo.Get()
}

// GetLedInfoOk returns a tuple with the LedInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShowSystemLedInfoResult) GetLedInfoOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LedInfo.Get(), o.LedInfo.IsSet()
}

// HasLedInfo returns a boolean if a field has been set.
func (o *ShowSystemLedInfoResult) HasLedInfo() bool {
	if o != nil && o.LedInfo.IsSet() {
		return true
	}

	return false
}

// SetLedInfo gets a reference to the given NullableString and assigns it to the LedInfo field.
func (o *ShowSystemLedInfoResult) SetLedInfo(v string) {
	o.LedInfo.Set(&v)
}
// SetLedInfoNil sets the value for LedInfo to be an explicit nil
func (o *ShowSystemLedInfoResult) SetLedInfoNil() {
	o.LedInfo.Set(nil)
}

// UnsetLedInfo ensures that no value is present for LedInfo, not even an explicit nil
func (o *ShowSystemLedInfoResult) UnsetLedInfo() {
	o.LedInfo.Unset()
}

func (o ShowSystemLedInfoResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LedInfo.IsSet() {
		toSerialize["ledInfo"] = o.LedInfo.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableShowSystemLedInfoResult struct {
	value *ShowSystemLedInfoResult
	isSet bool
}

func (v NullableShowSystemLedInfoResult) Get() *ShowSystemLedInfoResult {
	return v.value
}

func (v *NullableShowSystemLedInfoResult) Set(val *ShowSystemLedInfoResult) {
	v.value = val
	v.isSet = true
}

func (v NullableShowSystemLedInfoResult) IsSet() bool {
	return v.isSet
}

func (v *NullableShowSystemLedInfoResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShowSystemLedInfoResult(val *ShowSystemLedInfoResult) *NullableShowSystemLedInfoResult {
	return &NullableShowSystemLedInfoResult{value: val, isSet: true}
}

func (v NullableShowSystemLedInfoResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShowSystemLedInfoResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


