/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// UpdateMachineAccountsParams Specifies the parameters required to update the machine accounts of an active directory.
type UpdateMachineAccountsParams struct {
	// Array of Machine Accounts.  Specifies an array of computer names used to identify the Cohesity Cluster on the domain.
	MachineAccounts []string `json:"machineAccounts,omitempty"`
	// Specifies whether the specified machine accounts should overwrite the existing machine accounts in this domain.
	OverwriteExistingAccounts NullableBool `json:"overwriteExistingAccounts,omitempty"`
	// Specifies the password for the specified userName.
	Password NullableString `json:"password,omitempty"`
	// Specifies a userName that has administrative privileges in the domain.
	UserName NullableString `json:"userName,omitempty"`
}

// NewUpdateMachineAccountsParams instantiates a new UpdateMachineAccountsParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMachineAccountsParams() *UpdateMachineAccountsParams {
	this := UpdateMachineAccountsParams{}
	return &this
}

// NewUpdateMachineAccountsParamsWithDefaults instantiates a new UpdateMachineAccountsParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMachineAccountsParamsWithDefaults() *UpdateMachineAccountsParams {
	this := UpdateMachineAccountsParams{}
	return &this
}

// GetMachineAccounts returns the MachineAccounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineAccountsParams) GetMachineAccounts() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.MachineAccounts
}

// GetMachineAccountsOk returns a tuple with the MachineAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineAccountsParams) GetMachineAccountsOk() (*[]string, bool) {
	if o == nil || o.MachineAccounts == nil {
		return nil, false
	}
	return &o.MachineAccounts, true
}

// HasMachineAccounts returns a boolean if a field has been set.
func (o *UpdateMachineAccountsParams) HasMachineAccounts() bool {
	if o != nil && o.MachineAccounts != nil {
		return true
	}

	return false
}

// SetMachineAccounts gets a reference to the given []string and assigns it to the MachineAccounts field.
func (o *UpdateMachineAccountsParams) SetMachineAccounts(v []string) {
	o.MachineAccounts = v
}

// GetOverwriteExistingAccounts returns the OverwriteExistingAccounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineAccountsParams) GetOverwriteExistingAccounts() bool {
	if o == nil || o.OverwriteExistingAccounts.Get() == nil {
		var ret bool
		return ret
	}
	return *o.OverwriteExistingAccounts.Get()
}

// GetOverwriteExistingAccountsOk returns a tuple with the OverwriteExistingAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineAccountsParams) GetOverwriteExistingAccountsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OverwriteExistingAccounts.Get(), o.OverwriteExistingAccounts.IsSet()
}

// HasOverwriteExistingAccounts returns a boolean if a field has been set.
func (o *UpdateMachineAccountsParams) HasOverwriteExistingAccounts() bool {
	if o != nil && o.OverwriteExistingAccounts.IsSet() {
		return true
	}

	return false
}

// SetOverwriteExistingAccounts gets a reference to the given NullableBool and assigns it to the OverwriteExistingAccounts field.
func (o *UpdateMachineAccountsParams) SetOverwriteExistingAccounts(v bool) {
	o.OverwriteExistingAccounts.Set(&v)
}
// SetOverwriteExistingAccountsNil sets the value for OverwriteExistingAccounts to be an explicit nil
func (o *UpdateMachineAccountsParams) SetOverwriteExistingAccountsNil() {
	o.OverwriteExistingAccounts.Set(nil)
}

// UnsetOverwriteExistingAccounts ensures that no value is present for OverwriteExistingAccounts, not even an explicit nil
func (o *UpdateMachineAccountsParams) UnsetOverwriteExistingAccounts() {
	o.OverwriteExistingAccounts.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineAccountsParams) GetPassword() string {
	if o == nil || o.Password.Get() == nil {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineAccountsParams) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *UpdateMachineAccountsParams) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *UpdateMachineAccountsParams) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *UpdateMachineAccountsParams) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *UpdateMachineAccountsParams) UnsetPassword() {
	o.Password.Unset()
}

// GetUserName returns the UserName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineAccountsParams) GetUserName() string {
	if o == nil || o.UserName.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserName.Get()
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineAccountsParams) GetUserNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserName.Get(), o.UserName.IsSet()
}

// HasUserName returns a boolean if a field has been set.
func (o *UpdateMachineAccountsParams) HasUserName() bool {
	if o != nil && o.UserName.IsSet() {
		return true
	}

	return false
}

// SetUserName gets a reference to the given NullableString and assigns it to the UserName field.
func (o *UpdateMachineAccountsParams) SetUserName(v string) {
	o.UserName.Set(&v)
}
// SetUserNameNil sets the value for UserName to be an explicit nil
func (o *UpdateMachineAccountsParams) SetUserNameNil() {
	o.UserName.Set(nil)
}

// UnsetUserName ensures that no value is present for UserName, not even an explicit nil
func (o *UpdateMachineAccountsParams) UnsetUserName() {
	o.UserName.Unset()
}

func (o UpdateMachineAccountsParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MachineAccounts != nil {
		toSerialize["machineAccounts"] = o.MachineAccounts
	}
	if o.OverwriteExistingAccounts.IsSet() {
		toSerialize["overwriteExistingAccounts"] = o.OverwriteExistingAccounts.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if o.UserName.IsSet() {
		toSerialize["userName"] = o.UserName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateMachineAccountsParams struct {
	value *UpdateMachineAccountsParams
	isSet bool
}

func (v NullableUpdateMachineAccountsParams) Get() *UpdateMachineAccountsParams {
	return v.value
}

func (v *NullableUpdateMachineAccountsParams) Set(val *UpdateMachineAccountsParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMachineAccountsParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMachineAccountsParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMachineAccountsParams(val *UpdateMachineAccountsParams) *NullableUpdateMachineAccountsParams {
	return &NullableUpdateMachineAccountsParams{value: val, isSet: true}
}

func (v NullableUpdateMachineAccountsParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMachineAccountsParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


