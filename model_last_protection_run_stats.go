/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// LastProtectionRunStats Specifies the stats of last Protection Run.
type LastProtectionRunStats struct {
	// Specifies the number of Protection Jobs for which specified Protection Run failed.
	NumRunsFailed NullableInt64 `json:"numRunsFailed,omitempty"`
	// Specifies the number of Protection Jobs for which specified Protection Run failed SLA.
	NumRunsFailedSla NullableInt64 `json:"numRunsFailedSla,omitempty"`
	// Specifies the number of Protection Jobs for which specified Protection Run met SLA.
	NumRunsMetSla NullableInt64 `json:"numRunsMetSla,omitempty"`
	// Specifies the last Protection Run stats by environment.
	StatsByEnv *[]LastProtectionRunStatsByEnv `json:"statsByEnv,omitempty"`
}

// NewLastProtectionRunStats instantiates a new LastProtectionRunStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLastProtectionRunStats() *LastProtectionRunStats {
	this := LastProtectionRunStats{}
	return &this
}

// NewLastProtectionRunStatsWithDefaults instantiates a new LastProtectionRunStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLastProtectionRunStatsWithDefaults() *LastProtectionRunStats {
	this := LastProtectionRunStats{}
	return &this
}

// GetNumRunsFailed returns the NumRunsFailed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LastProtectionRunStats) GetNumRunsFailed() int64 {
	if o == nil || o.NumRunsFailed.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumRunsFailed.Get()
}

// GetNumRunsFailedOk returns a tuple with the NumRunsFailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LastProtectionRunStats) GetNumRunsFailedOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumRunsFailed.Get(), o.NumRunsFailed.IsSet()
}

// HasNumRunsFailed returns a boolean if a field has been set.
func (o *LastProtectionRunStats) HasNumRunsFailed() bool {
	if o != nil && o.NumRunsFailed.IsSet() {
		return true
	}

	return false
}

// SetNumRunsFailed gets a reference to the given NullableInt64 and assigns it to the NumRunsFailed field.
func (o *LastProtectionRunStats) SetNumRunsFailed(v int64) {
	o.NumRunsFailed.Set(&v)
}
// SetNumRunsFailedNil sets the value for NumRunsFailed to be an explicit nil
func (o *LastProtectionRunStats) SetNumRunsFailedNil() {
	o.NumRunsFailed.Set(nil)
}

// UnsetNumRunsFailed ensures that no value is present for NumRunsFailed, not even an explicit nil
func (o *LastProtectionRunStats) UnsetNumRunsFailed() {
	o.NumRunsFailed.Unset()
}

// GetNumRunsFailedSla returns the NumRunsFailedSla field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LastProtectionRunStats) GetNumRunsFailedSla() int64 {
	if o == nil || o.NumRunsFailedSla.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumRunsFailedSla.Get()
}

// GetNumRunsFailedSlaOk returns a tuple with the NumRunsFailedSla field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LastProtectionRunStats) GetNumRunsFailedSlaOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumRunsFailedSla.Get(), o.NumRunsFailedSla.IsSet()
}

// HasNumRunsFailedSla returns a boolean if a field has been set.
func (o *LastProtectionRunStats) HasNumRunsFailedSla() bool {
	if o != nil && o.NumRunsFailedSla.IsSet() {
		return true
	}

	return false
}

// SetNumRunsFailedSla gets a reference to the given NullableInt64 and assigns it to the NumRunsFailedSla field.
func (o *LastProtectionRunStats) SetNumRunsFailedSla(v int64) {
	o.NumRunsFailedSla.Set(&v)
}
// SetNumRunsFailedSlaNil sets the value for NumRunsFailedSla to be an explicit nil
func (o *LastProtectionRunStats) SetNumRunsFailedSlaNil() {
	o.NumRunsFailedSla.Set(nil)
}

// UnsetNumRunsFailedSla ensures that no value is present for NumRunsFailedSla, not even an explicit nil
func (o *LastProtectionRunStats) UnsetNumRunsFailedSla() {
	o.NumRunsFailedSla.Unset()
}

// GetNumRunsMetSla returns the NumRunsMetSla field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LastProtectionRunStats) GetNumRunsMetSla() int64 {
	if o == nil || o.NumRunsMetSla.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumRunsMetSla.Get()
}

// GetNumRunsMetSlaOk returns a tuple with the NumRunsMetSla field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LastProtectionRunStats) GetNumRunsMetSlaOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumRunsMetSla.Get(), o.NumRunsMetSla.IsSet()
}

// HasNumRunsMetSla returns a boolean if a field has been set.
func (o *LastProtectionRunStats) HasNumRunsMetSla() bool {
	if o != nil && o.NumRunsMetSla.IsSet() {
		return true
	}

	return false
}

// SetNumRunsMetSla gets a reference to the given NullableInt64 and assigns it to the NumRunsMetSla field.
func (o *LastProtectionRunStats) SetNumRunsMetSla(v int64) {
	o.NumRunsMetSla.Set(&v)
}
// SetNumRunsMetSlaNil sets the value for NumRunsMetSla to be an explicit nil
func (o *LastProtectionRunStats) SetNumRunsMetSlaNil() {
	o.NumRunsMetSla.Set(nil)
}

// UnsetNumRunsMetSla ensures that no value is present for NumRunsMetSla, not even an explicit nil
func (o *LastProtectionRunStats) UnsetNumRunsMetSla() {
	o.NumRunsMetSla.Unset()
}

// GetStatsByEnv returns the StatsByEnv field value if set, zero value otherwise.
func (o *LastProtectionRunStats) GetStatsByEnv() []LastProtectionRunStatsByEnv {
	if o == nil || o.StatsByEnv == nil {
		var ret []LastProtectionRunStatsByEnv
		return ret
	}
	return *o.StatsByEnv
}

// GetStatsByEnvOk returns a tuple with the StatsByEnv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LastProtectionRunStats) GetStatsByEnvOk() (*[]LastProtectionRunStatsByEnv, bool) {
	if o == nil || o.StatsByEnv == nil {
		return nil, false
	}
	return o.StatsByEnv, true
}

// HasStatsByEnv returns a boolean if a field has been set.
func (o *LastProtectionRunStats) HasStatsByEnv() bool {
	if o != nil && o.StatsByEnv != nil {
		return true
	}

	return false
}

// SetStatsByEnv gets a reference to the given []LastProtectionRunStatsByEnv and assigns it to the StatsByEnv field.
func (o *LastProtectionRunStats) SetStatsByEnv(v []LastProtectionRunStatsByEnv) {
	o.StatsByEnv = &v
}

func (o LastProtectionRunStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NumRunsFailed.IsSet() {
		toSerialize["numRunsFailed"] = o.NumRunsFailed.Get()
	}
	if o.NumRunsFailedSla.IsSet() {
		toSerialize["numRunsFailedSla"] = o.NumRunsFailedSla.Get()
	}
	if o.NumRunsMetSla.IsSet() {
		toSerialize["numRunsMetSla"] = o.NumRunsMetSla.Get()
	}
	if o.StatsByEnv != nil {
		toSerialize["statsByEnv"] = o.StatsByEnv
	}
	return json.Marshal(toSerialize)
}

type NullableLastProtectionRunStats struct {
	value *LastProtectionRunStats
	isSet bool
}

func (v NullableLastProtectionRunStats) Get() *LastProtectionRunStats {
	return v.value
}

func (v *NullableLastProtectionRunStats) Set(val *LastProtectionRunStats) {
	v.value = val
	v.isSet = true
}

func (v NullableLastProtectionRunStats) IsSet() bool {
	return v.isSet
}

func (v *NullableLastProtectionRunStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLastProtectionRunStats(val *LastProtectionRunStats) *NullableLastProtectionRunStats {
	return &NullableLastProtectionRunStats{value: val, isSet: true}
}

func (v NullableLastProtectionRunStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLastProtectionRunStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


