/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// HiveRecoverJobParams Contains any additional hive environment specific params for the recover job.
type HiveRecoverJobParams struct {
	HdfsConnectParams *HdfsConnectParams `json:"hdfsConnectParams,omitempty"`
	// A suffix that is to be applied to all recovered entities
	Suffix NullableString `json:"suffix,omitempty"`
}

// NewHiveRecoverJobParams instantiates a new HiveRecoverJobParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHiveRecoverJobParams() *HiveRecoverJobParams {
	this := HiveRecoverJobParams{}
	return &this
}

// NewHiveRecoverJobParamsWithDefaults instantiates a new HiveRecoverJobParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHiveRecoverJobParamsWithDefaults() *HiveRecoverJobParams {
	this := HiveRecoverJobParams{}
	return &this
}

// GetHdfsConnectParams returns the HdfsConnectParams field value if set, zero value otherwise.
func (o *HiveRecoverJobParams) GetHdfsConnectParams() HdfsConnectParams {
	if o == nil || o.HdfsConnectParams == nil {
		var ret HdfsConnectParams
		return ret
	}
	return *o.HdfsConnectParams
}

// GetHdfsConnectParamsOk returns a tuple with the HdfsConnectParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HiveRecoverJobParams) GetHdfsConnectParamsOk() (*HdfsConnectParams, bool) {
	if o == nil || o.HdfsConnectParams == nil {
		return nil, false
	}
	return o.HdfsConnectParams, true
}

// HasHdfsConnectParams returns a boolean if a field has been set.
func (o *HiveRecoverJobParams) HasHdfsConnectParams() bool {
	if o != nil && o.HdfsConnectParams != nil {
		return true
	}

	return false
}

// SetHdfsConnectParams gets a reference to the given HdfsConnectParams and assigns it to the HdfsConnectParams field.
func (o *HiveRecoverJobParams) SetHdfsConnectParams(v HdfsConnectParams) {
	o.HdfsConnectParams = &v
}

// GetSuffix returns the Suffix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HiveRecoverJobParams) GetSuffix() string {
	if o == nil || o.Suffix.Get() == nil {
		var ret string
		return ret
	}
	return *o.Suffix.Get()
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HiveRecoverJobParams) GetSuffixOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Suffix.Get(), o.Suffix.IsSet()
}

// HasSuffix returns a boolean if a field has been set.
func (o *HiveRecoverJobParams) HasSuffix() bool {
	if o != nil && o.Suffix.IsSet() {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given NullableString and assigns it to the Suffix field.
func (o *HiveRecoverJobParams) SetSuffix(v string) {
	o.Suffix.Set(&v)
}
// SetSuffixNil sets the value for Suffix to be an explicit nil
func (o *HiveRecoverJobParams) SetSuffixNil() {
	o.Suffix.Set(nil)
}

// UnsetSuffix ensures that no value is present for Suffix, not even an explicit nil
func (o *HiveRecoverJobParams) UnsetSuffix() {
	o.Suffix.Unset()
}

func (o HiveRecoverJobParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HdfsConnectParams != nil {
		toSerialize["hdfsConnectParams"] = o.HdfsConnectParams
	}
	if o.Suffix.IsSet() {
		toSerialize["suffix"] = o.Suffix.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableHiveRecoverJobParams struct {
	value *HiveRecoverJobParams
	isSet bool
}

func (v NullableHiveRecoverJobParams) Get() *HiveRecoverJobParams {
	return v.value
}

func (v *NullableHiveRecoverJobParams) Set(val *HiveRecoverJobParams) {
	v.value = val
	v.isSet = true
}

func (v NullableHiveRecoverJobParams) IsSet() bool {
	return v.isSet
}

func (v *NullableHiveRecoverJobParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHiveRecoverJobParams(val *HiveRecoverJobParams) *NullableHiveRecoverJobParams {
	return &NullableHiveRecoverJobParams{value: val, isSet: true}
}

func (v NullableHiveRecoverJobParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHiveRecoverJobParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


