/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// AdRootTopologyObject Represents a node in AD Topology tree.
type AdRootTopologyObject struct {
	// Specifies the array of children of this object.
	ChildObjects []map[string]interface{} `json:"childObjects,omitempty"`
	// Specifies the 'description' of an object.
	Description NullableString `json:"description,omitempty"`
	// Specifies the guid of matching 'source_guid' from production AD. This is looked up  based on source_guid or distinguishedName attribute value.
	DestGuid NullableString `json:"destGuid,omitempty"`
	// Specifies the display name of the object in AD Topology tree.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Specifies the distinguished name of the object in AD Topology tree. Eg: CN=Jone Doe,OU=Users,DC=corp,DC=cohesity,DC=com
	DistinguishedName NullableString `json:"distinguishedName,omitempty"`
	// Specifies the AD error while fetching the ADRootTopologyObject.
	ErrorMessage NullableString `json:"errorMessage,omitempty"`
	// Specifies the LDAP class name such as 'user','computer', 'organizationalUnit'.
	ObjectClass NullableString `json:"objectClass,omitempty"`
	// Specifies the guid string of the object in AD snapshot database.
	SourceGuid NullableString `json:"sourceGuid,omitempty"`
}

// NewAdRootTopologyObject instantiates a new AdRootTopologyObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdRootTopologyObject() *AdRootTopologyObject {
	this := AdRootTopologyObject{}
	return &this
}

// NewAdRootTopologyObjectWithDefaults instantiates a new AdRootTopologyObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdRootTopologyObjectWithDefaults() *AdRootTopologyObject {
	this := AdRootTopologyObject{}
	return &this
}

// GetChildObjects returns the ChildObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdRootTopologyObject) GetChildObjects() []map[string]interface{} {
	if o == nil  {
		var ret []map[string]interface{}
		return ret
	}
	return o.ChildObjects
}

// GetChildObjectsOk returns a tuple with the ChildObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdRootTopologyObject) GetChildObjectsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.ChildObjects == nil {
		return nil, false
	}
	return &o.ChildObjects, true
}

// HasChildObjects returns a boolean if a field has been set.
func (o *AdRootTopologyObject) HasChildObjects() bool {
	if o != nil && o.ChildObjects != nil {
		return true
	}

	return false
}

// SetChildObjects gets a reference to the given []map[string]interface{} and assigns it to the ChildObjects field.
func (o *AdRootTopologyObject) SetChildObjects(v []map[string]interface{}) {
	o.ChildObjects = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdRootTopologyObject) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdRootTopologyObject) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *AdRootTopologyObject) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *AdRootTopologyObject) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *AdRootTopologyObject) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *AdRootTopologyObject) UnsetDescription() {
	o.Description.Unset()
}

// GetDestGuid returns the DestGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdRootTopologyObject) GetDestGuid() string {
	if o == nil || o.DestGuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.DestGuid.Get()
}

// GetDestGuidOk returns a tuple with the DestGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdRootTopologyObject) GetDestGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DestGuid.Get(), o.DestGuid.IsSet()
}

// HasDestGuid returns a boolean if a field has been set.
func (o *AdRootTopologyObject) HasDestGuid() bool {
	if o != nil && o.DestGuid.IsSet() {
		return true
	}

	return false
}

// SetDestGuid gets a reference to the given NullableString and assigns it to the DestGuid field.
func (o *AdRootTopologyObject) SetDestGuid(v string) {
	o.DestGuid.Set(&v)
}
// SetDestGuidNil sets the value for DestGuid to be an explicit nil
func (o *AdRootTopologyObject) SetDestGuidNil() {
	o.DestGuid.Set(nil)
}

// UnsetDestGuid ensures that no value is present for DestGuid, not even an explicit nil
func (o *AdRootTopologyObject) UnsetDestGuid() {
	o.DestGuid.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdRootTopologyObject) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdRootTopologyObject) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *AdRootTopologyObject) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *AdRootTopologyObject) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *AdRootTopologyObject) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *AdRootTopologyObject) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetDistinguishedName returns the DistinguishedName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdRootTopologyObject) GetDistinguishedName() string {
	if o == nil || o.DistinguishedName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DistinguishedName.Get()
}

// GetDistinguishedNameOk returns a tuple with the DistinguishedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdRootTopologyObject) GetDistinguishedNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DistinguishedName.Get(), o.DistinguishedName.IsSet()
}

// HasDistinguishedName returns a boolean if a field has been set.
func (o *AdRootTopologyObject) HasDistinguishedName() bool {
	if o != nil && o.DistinguishedName.IsSet() {
		return true
	}

	return false
}

// SetDistinguishedName gets a reference to the given NullableString and assigns it to the DistinguishedName field.
func (o *AdRootTopologyObject) SetDistinguishedName(v string) {
	o.DistinguishedName.Set(&v)
}
// SetDistinguishedNameNil sets the value for DistinguishedName to be an explicit nil
func (o *AdRootTopologyObject) SetDistinguishedNameNil() {
	o.DistinguishedName.Set(nil)
}

// UnsetDistinguishedName ensures that no value is present for DistinguishedName, not even an explicit nil
func (o *AdRootTopologyObject) UnsetDistinguishedName() {
	o.DistinguishedName.Unset()
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdRootTopologyObject) GetErrorMessage() string {
	if o == nil || o.ErrorMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdRootTopologyObject) GetErrorMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *AdRootTopologyObject) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *AdRootTopologyObject) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *AdRootTopologyObject) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *AdRootTopologyObject) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetObjectClass returns the ObjectClass field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdRootTopologyObject) GetObjectClass() string {
	if o == nil || o.ObjectClass.Get() == nil {
		var ret string
		return ret
	}
	return *o.ObjectClass.Get()
}

// GetObjectClassOk returns a tuple with the ObjectClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdRootTopologyObject) GetObjectClassOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ObjectClass.Get(), o.ObjectClass.IsSet()
}

// HasObjectClass returns a boolean if a field has been set.
func (o *AdRootTopologyObject) HasObjectClass() bool {
	if o != nil && o.ObjectClass.IsSet() {
		return true
	}

	return false
}

// SetObjectClass gets a reference to the given NullableString and assigns it to the ObjectClass field.
func (o *AdRootTopologyObject) SetObjectClass(v string) {
	o.ObjectClass.Set(&v)
}
// SetObjectClassNil sets the value for ObjectClass to be an explicit nil
func (o *AdRootTopologyObject) SetObjectClassNil() {
	o.ObjectClass.Set(nil)
}

// UnsetObjectClass ensures that no value is present for ObjectClass, not even an explicit nil
func (o *AdRootTopologyObject) UnsetObjectClass() {
	o.ObjectClass.Unset()
}

// GetSourceGuid returns the SourceGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdRootTopologyObject) GetSourceGuid() string {
	if o == nil || o.SourceGuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceGuid.Get()
}

// GetSourceGuidOk returns a tuple with the SourceGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdRootTopologyObject) GetSourceGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceGuid.Get(), o.SourceGuid.IsSet()
}

// HasSourceGuid returns a boolean if a field has been set.
func (o *AdRootTopologyObject) HasSourceGuid() bool {
	if o != nil && o.SourceGuid.IsSet() {
		return true
	}

	return false
}

// SetSourceGuid gets a reference to the given NullableString and assigns it to the SourceGuid field.
func (o *AdRootTopologyObject) SetSourceGuid(v string) {
	o.SourceGuid.Set(&v)
}
// SetSourceGuidNil sets the value for SourceGuid to be an explicit nil
func (o *AdRootTopologyObject) SetSourceGuidNil() {
	o.SourceGuid.Set(nil)
}

// UnsetSourceGuid ensures that no value is present for SourceGuid, not even an explicit nil
func (o *AdRootTopologyObject) UnsetSourceGuid() {
	o.SourceGuid.Unset()
}

func (o AdRootTopologyObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChildObjects != nil {
		toSerialize["childObjects"] = o.ChildObjects
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DestGuid.IsSet() {
		toSerialize["destGuid"] = o.DestGuid.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.DistinguishedName.IsSet() {
		toSerialize["distinguishedName"] = o.DistinguishedName.Get()
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["errorMessage"] = o.ErrorMessage.Get()
	}
	if o.ObjectClass.IsSet() {
		toSerialize["objectClass"] = o.ObjectClass.Get()
	}
	if o.SourceGuid.IsSet() {
		toSerialize["sourceGuid"] = o.SourceGuid.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAdRootTopologyObject struct {
	value *AdRootTopologyObject
	isSet bool
}

func (v NullableAdRootTopologyObject) Get() *AdRootTopologyObject {
	return v.value
}

func (v *NullableAdRootTopologyObject) Set(val *AdRootTopologyObject) {
	v.value = val
	v.isSet = true
}

func (v NullableAdRootTopologyObject) IsSet() bool {
	return v.isSet
}

func (v *NullableAdRootTopologyObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdRootTopologyObject(val *AdRootTopologyObject) *NullableAdRootTopologyObject {
	return &NullableAdRootTopologyObject{value: val, isSet: true}
}

func (v NullableAdRootTopologyObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdRootTopologyObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


