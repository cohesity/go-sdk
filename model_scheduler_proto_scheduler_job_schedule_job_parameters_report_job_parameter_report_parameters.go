/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters struct for SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters
type SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters struct {
	// Specifies if subtenants of the given tenants should be considered for report generation.
	AllUnderHierarchy NullableBool `json:"allUnderHierarchy,omitempty"`
	// Specifies the Cohesity Agent software version.
	CompactVersion NullableString `json:"compactVersion,omitempty"`
	// Specifies the number of consecutive failures.
	ConsecutiveFailures NullableInt32 `json:"consecutiveFailures,omitempty"`
	// Specifies the Environment for the entity being protected.
	Environment NullableString `json:"environment,omitempty"`
	// Specifies if the report should be grouped by any field.
	GroupBy NullableInt32 `json:"groupBy,omitempty"`
	// Specifies the Cohesity Agent health status.
	HealthStatus []string `json:"healthStatus,omitempty"`
	// Specifies the OS type on which Cohesity Agent is installed.
	HostOsType []string `json:"hostOsType,omitempty"`
	// Specifies the id of the job for which to get the report data.
	JobId NullableInt64 `json:"jobId,omitempty"`
	// Specifies the name of the job for which to get the report data.
	JobName NullableString `json:"jobName,omitempty"`
	// Specifies the number of days from current date for which the report data is to be fetched.
	LastNDays NullableInt32 `json:"lastNDays,omitempty"`
	// Specifies the object ids for which to get the report data.
	ObjectIds []int64 `json:"objectIds,omitempty"`
	// Specifies the object type for which to get the report data.
	ObjectType NullableString `json:"objectType,omitempty"`
	// Specifies the registered source for which to get the report data.
	RegisteredSourceId NullableInt64 `json:"registeredSourceId,omitempty"`
	// Specifies the registered sources for which to get the report data.
	RegisteredSourceIds []int64 `json:"registeredSourceIds,omitempty"`
	// Specifies the rollup(day/week/month) for protected object trends report.
	Rollup NullableString `json:"rollup,omitempty"`
	// Specifies the run status for which to get the report data.
	RunStatus []string `json:"runStatus,omitempty"`
	// Specifies the sid of the user.
	Sid NullableString `json:"sid,omitempty"`
	// Specifies tenant ids for which report needs to be generated.
	TenantIdVec []string `json:"tenantIdVec,omitempty"`
	// Specifies the timezone.
	Timezone NullableString `json:"timezone,omitempty"`
	// Specifies the unix uid of the user.
	UnixUid NullableInt32 `json:"unixUid,omitempty"`
	// Specifies the vault ids for which to get the report data.
	VaultIds []int64 `json:"vaultIds,omitempty"`
	// Specifies the view box for which to get the report data.
	ViewBoxId NullableInt64 `json:"viewBoxId,omitempty"`
	// Specifies the view name for which the report is required.
	ViewName NullableString `json:"viewName,omitempty"`
	// Specifies the viewbox ids to filter by.
	ViewboxIds []int64 `json:"viewboxIds,omitempty"`
	// Specifies the VM name for which to get the report data.
	VmName NullableString `json:"vmName,omitempty"`
}

// NewSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters instantiates a new SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters() *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters {
	this := SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters{}
	return &this
}

// NewSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParametersWithDefaults instantiates a new SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParametersWithDefaults() *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters {
	this := SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters{}
	return &this
}

// GetAllUnderHierarchy returns the AllUnderHierarchy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetAllUnderHierarchy() bool {
	if o == nil || o.AllUnderHierarchy.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AllUnderHierarchy.Get()
}

// GetAllUnderHierarchyOk returns a tuple with the AllUnderHierarchy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetAllUnderHierarchyOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AllUnderHierarchy.Get(), o.AllUnderHierarchy.IsSet()
}

// HasAllUnderHierarchy returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasAllUnderHierarchy() bool {
	if o != nil && o.AllUnderHierarchy.IsSet() {
		return true
	}

	return false
}

// SetAllUnderHierarchy gets a reference to the given NullableBool and assigns it to the AllUnderHierarchy field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetAllUnderHierarchy(v bool) {
	o.AllUnderHierarchy.Set(&v)
}
// SetAllUnderHierarchyNil sets the value for AllUnderHierarchy to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetAllUnderHierarchyNil() {
	o.AllUnderHierarchy.Set(nil)
}

// UnsetAllUnderHierarchy ensures that no value is present for AllUnderHierarchy, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnsetAllUnderHierarchy() {
	o.AllUnderHierarchy.Unset()
}

// GetCompactVersion returns the CompactVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetCompactVersion() string {
	if o == nil || o.CompactVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.CompactVersion.Get()
}

// GetCompactVersionOk returns a tuple with the CompactVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetCompactVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CompactVersion.Get(), o.CompactVersion.IsSet()
}

// HasCompactVersion returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasCompactVersion() bool {
	if o != nil && o.CompactVersion.IsSet() {
		return true
	}

	return false
}

// SetCompactVersion gets a reference to the given NullableString and assigns it to the CompactVersion field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetCompactVersion(v string) {
	o.CompactVersion.Set(&v)
}
// SetCompactVersionNil sets the value for CompactVersion to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetCompactVersionNil() {
	o.CompactVersion.Set(nil)
}

// UnsetCompactVersion ensures that no value is present for CompactVersion, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnsetCompactVersion() {
	o.CompactVersion.Unset()
}

// GetConsecutiveFailures returns the ConsecutiveFailures field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetConsecutiveFailures() int32 {
	if o == nil || o.ConsecutiveFailures.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ConsecutiveFailures.Get()
}

// GetConsecutiveFailuresOk returns a tuple with the ConsecutiveFailures field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetConsecutiveFailuresOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ConsecutiveFailures.Get(), o.ConsecutiveFailures.IsSet()
}

// HasConsecutiveFailures returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasConsecutiveFailures() bool {
	if o != nil && o.ConsecutiveFailures.IsSet() {
		return true
	}

	return false
}

// SetConsecutiveFailures gets a reference to the given NullableInt32 and assigns it to the ConsecutiveFailures field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetConsecutiveFailures(v int32) {
	o.ConsecutiveFailures.Set(&v)
}
// SetConsecutiveFailuresNil sets the value for ConsecutiveFailures to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetConsecutiveFailuresNil() {
	o.ConsecutiveFailures.Set(nil)
}

// UnsetConsecutiveFailures ensures that no value is present for ConsecutiveFailures, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnsetConsecutiveFailures() {
	o.ConsecutiveFailures.Unset()
}

// GetEnvironment returns the Environment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetEnvironment() string {
	if o == nil || o.Environment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// HasEnvironment returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasEnvironment() bool {
	if o != nil && o.Environment.IsSet() {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given NullableString and assigns it to the Environment field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetEnvironment(v string) {
	o.Environment.Set(&v)
}
// SetEnvironmentNil sets the value for Environment to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetEnvironmentNil() {
	o.Environment.Set(nil)
}

// UnsetEnvironment ensures that no value is present for Environment, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnsetEnvironment() {
	o.Environment.Unset()
}

// GetGroupBy returns the GroupBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetGroupBy() int32 {
	if o == nil || o.GroupBy.Get() == nil {
		var ret int32
		return ret
	}
	return *o.GroupBy.Get()
}

// GetGroupByOk returns a tuple with the GroupBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetGroupByOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GroupBy.Get(), o.GroupBy.IsSet()
}

// HasGroupBy returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasGroupBy() bool {
	if o != nil && o.GroupBy.IsSet() {
		return true
	}

	return false
}

// SetGroupBy gets a reference to the given NullableInt32 and assigns it to the GroupBy field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetGroupBy(v int32) {
	o.GroupBy.Set(&v)
}
// SetGroupByNil sets the value for GroupBy to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetGroupByNil() {
	o.GroupBy.Set(nil)
}

// UnsetGroupBy ensures that no value is present for GroupBy, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnsetGroupBy() {
	o.GroupBy.Unset()
}

// GetHealthStatus returns the HealthStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetHealthStatus() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.HealthStatus
}

// GetHealthStatusOk returns a tuple with the HealthStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetHealthStatusOk() (*[]string, bool) {
	if o == nil || o.HealthStatus == nil {
		return nil, false
	}
	return &o.HealthStatus, true
}

// HasHealthStatus returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasHealthStatus() bool {
	if o != nil && o.HealthStatus != nil {
		return true
	}

	return false
}

// SetHealthStatus gets a reference to the given []string and assigns it to the HealthStatus field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetHealthStatus(v []string) {
	o.HealthStatus = v
}

// GetHostOsType returns the HostOsType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetHostOsType() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.HostOsType
}

// GetHostOsTypeOk returns a tuple with the HostOsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetHostOsTypeOk() (*[]string, bool) {
	if o == nil || o.HostOsType == nil {
		return nil, false
	}
	return &o.HostOsType, true
}

// HasHostOsType returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasHostOsType() bool {
	if o != nil && o.HostOsType != nil {
		return true
	}

	return false
}

// SetHostOsType gets a reference to the given []string and assigns it to the HostOsType field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetHostOsType(v []string) {
	o.HostOsType = v
}

// GetJobId returns the JobId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetJobId() int64 {
	if o == nil || o.JobId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.JobId.Get()
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetJobIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobId.Get(), o.JobId.IsSet()
}

// HasJobId returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasJobId() bool {
	if o != nil && o.JobId.IsSet() {
		return true
	}

	return false
}

// SetJobId gets a reference to the given NullableInt64 and assigns it to the JobId field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetJobId(v int64) {
	o.JobId.Set(&v)
}
// SetJobIdNil sets the value for JobId to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetJobIdNil() {
	o.JobId.Set(nil)
}

// UnsetJobId ensures that no value is present for JobId, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnsetJobId() {
	o.JobId.Unset()
}

// GetJobName returns the JobName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetJobName() string {
	if o == nil || o.JobName.Get() == nil {
		var ret string
		return ret
	}
	return *o.JobName.Get()
}

// GetJobNameOk returns a tuple with the JobName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetJobNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobName.Get(), o.JobName.IsSet()
}

// HasJobName returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasJobName() bool {
	if o != nil && o.JobName.IsSet() {
		return true
	}

	return false
}

// SetJobName gets a reference to the given NullableString and assigns it to the JobName field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetJobName(v string) {
	o.JobName.Set(&v)
}
// SetJobNameNil sets the value for JobName to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetJobNameNil() {
	o.JobName.Set(nil)
}

// UnsetJobName ensures that no value is present for JobName, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnsetJobName() {
	o.JobName.Unset()
}

// GetLastNDays returns the LastNDays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetLastNDays() int32 {
	if o == nil || o.LastNDays.Get() == nil {
		var ret int32
		return ret
	}
	return *o.LastNDays.Get()
}

// GetLastNDaysOk returns a tuple with the LastNDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetLastNDaysOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastNDays.Get(), o.LastNDays.IsSet()
}

// HasLastNDays returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasLastNDays() bool {
	if o != nil && o.LastNDays.IsSet() {
		return true
	}

	return false
}

// SetLastNDays gets a reference to the given NullableInt32 and assigns it to the LastNDays field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetLastNDays(v int32) {
	o.LastNDays.Set(&v)
}
// SetLastNDaysNil sets the value for LastNDays to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetLastNDaysNil() {
	o.LastNDays.Set(nil)
}

// UnsetLastNDays ensures that no value is present for LastNDays, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnsetLastNDays() {
	o.LastNDays.Unset()
}

// GetObjectIds returns the ObjectIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetObjectIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.ObjectIds
}

// GetObjectIdsOk returns a tuple with the ObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetObjectIdsOk() (*[]int64, bool) {
	if o == nil || o.ObjectIds == nil {
		return nil, false
	}
	return &o.ObjectIds, true
}

// HasObjectIds returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasObjectIds() bool {
	if o != nil && o.ObjectIds != nil {
		return true
	}

	return false
}

// SetObjectIds gets a reference to the given []int64 and assigns it to the ObjectIds field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetObjectIds(v []int64) {
	o.ObjectIds = v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetObjectType() string {
	if o == nil || o.ObjectType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ObjectType.Get()
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetObjectTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ObjectType.Get(), o.ObjectType.IsSet()
}

// HasObjectType returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasObjectType() bool {
	if o != nil && o.ObjectType.IsSet() {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given NullableString and assigns it to the ObjectType field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetObjectType(v string) {
	o.ObjectType.Set(&v)
}
// SetObjectTypeNil sets the value for ObjectType to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetObjectTypeNil() {
	o.ObjectType.Set(nil)
}

// UnsetObjectType ensures that no value is present for ObjectType, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnsetObjectType() {
	o.ObjectType.Unset()
}

// GetRegisteredSourceId returns the RegisteredSourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetRegisteredSourceId() int64 {
	if o == nil || o.RegisteredSourceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RegisteredSourceId.Get()
}

// GetRegisteredSourceIdOk returns a tuple with the RegisteredSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetRegisteredSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RegisteredSourceId.Get(), o.RegisteredSourceId.IsSet()
}

// HasRegisteredSourceId returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasRegisteredSourceId() bool {
	if o != nil && o.RegisteredSourceId.IsSet() {
		return true
	}

	return false
}

// SetRegisteredSourceId gets a reference to the given NullableInt64 and assigns it to the RegisteredSourceId field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetRegisteredSourceId(v int64) {
	o.RegisteredSourceId.Set(&v)
}
// SetRegisteredSourceIdNil sets the value for RegisteredSourceId to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetRegisteredSourceIdNil() {
	o.RegisteredSourceId.Set(nil)
}

// UnsetRegisteredSourceId ensures that no value is present for RegisteredSourceId, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnsetRegisteredSourceId() {
	o.RegisteredSourceId.Unset()
}

// GetRegisteredSourceIds returns the RegisteredSourceIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetRegisteredSourceIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.RegisteredSourceIds
}

// GetRegisteredSourceIdsOk returns a tuple with the RegisteredSourceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetRegisteredSourceIdsOk() (*[]int64, bool) {
	if o == nil || o.RegisteredSourceIds == nil {
		return nil, false
	}
	return &o.RegisteredSourceIds, true
}

// HasRegisteredSourceIds returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasRegisteredSourceIds() bool {
	if o != nil && o.RegisteredSourceIds != nil {
		return true
	}

	return false
}

// SetRegisteredSourceIds gets a reference to the given []int64 and assigns it to the RegisteredSourceIds field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetRegisteredSourceIds(v []int64) {
	o.RegisteredSourceIds = v
}

// GetRollup returns the Rollup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetRollup() string {
	if o == nil || o.Rollup.Get() == nil {
		var ret string
		return ret
	}
	return *o.Rollup.Get()
}

// GetRollupOk returns a tuple with the Rollup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetRollupOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Rollup.Get(), o.Rollup.IsSet()
}

// HasRollup returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasRollup() bool {
	if o != nil && o.Rollup.IsSet() {
		return true
	}

	return false
}

// SetRollup gets a reference to the given NullableString and assigns it to the Rollup field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetRollup(v string) {
	o.Rollup.Set(&v)
}
// SetRollupNil sets the value for Rollup to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetRollupNil() {
	o.Rollup.Set(nil)
}

// UnsetRollup ensures that no value is present for Rollup, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnsetRollup() {
	o.Rollup.Unset()
}

// GetRunStatus returns the RunStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetRunStatus() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.RunStatus
}

// GetRunStatusOk returns a tuple with the RunStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetRunStatusOk() (*[]string, bool) {
	if o == nil || o.RunStatus == nil {
		return nil, false
	}
	return &o.RunStatus, true
}

// HasRunStatus returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasRunStatus() bool {
	if o != nil && o.RunStatus != nil {
		return true
	}

	return false
}

// SetRunStatus gets a reference to the given []string and assigns it to the RunStatus field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetRunStatus(v []string) {
	o.RunStatus = v
}

// GetSid returns the Sid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetSid() string {
	if o == nil || o.Sid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Sid.Get()
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetSidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Sid.Get(), o.Sid.IsSet()
}

// HasSid returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasSid() bool {
	if o != nil && o.Sid.IsSet() {
		return true
	}

	return false
}

// SetSid gets a reference to the given NullableString and assigns it to the Sid field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetSid(v string) {
	o.Sid.Set(&v)
}
// SetSidNil sets the value for Sid to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetSidNil() {
	o.Sid.Set(nil)
}

// UnsetSid ensures that no value is present for Sid, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnsetSid() {
	o.Sid.Unset()
}

// GetTenantIdVec returns the TenantIdVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetTenantIdVec() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.TenantIdVec
}

// GetTenantIdVecOk returns a tuple with the TenantIdVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetTenantIdVecOk() (*[]string, bool) {
	if o == nil || o.TenantIdVec == nil {
		return nil, false
	}
	return &o.TenantIdVec, true
}

// HasTenantIdVec returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasTenantIdVec() bool {
	if o != nil && o.TenantIdVec != nil {
		return true
	}

	return false
}

// SetTenantIdVec gets a reference to the given []string and assigns it to the TenantIdVec field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetTenantIdVec(v []string) {
	o.TenantIdVec = v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetTimezone() string {
	if o == nil || o.Timezone.Get() == nil {
		var ret string
		return ret
	}
	return *o.Timezone.Get()
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetTimezoneOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Timezone.Get(), o.Timezone.IsSet()
}

// HasTimezone returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasTimezone() bool {
	if o != nil && o.Timezone.IsSet() {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given NullableString and assigns it to the Timezone field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetTimezone(v string) {
	o.Timezone.Set(&v)
}
// SetTimezoneNil sets the value for Timezone to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetTimezoneNil() {
	o.Timezone.Set(nil)
}

// UnsetTimezone ensures that no value is present for Timezone, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnsetTimezone() {
	o.Timezone.Unset()
}

// GetUnixUid returns the UnixUid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetUnixUid() int32 {
	if o == nil || o.UnixUid.Get() == nil {
		var ret int32
		return ret
	}
	return *o.UnixUid.Get()
}

// GetUnixUidOk returns a tuple with the UnixUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetUnixUidOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UnixUid.Get(), o.UnixUid.IsSet()
}

// HasUnixUid returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasUnixUid() bool {
	if o != nil && o.UnixUid.IsSet() {
		return true
	}

	return false
}

// SetUnixUid gets a reference to the given NullableInt32 and assigns it to the UnixUid field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetUnixUid(v int32) {
	o.UnixUid.Set(&v)
}
// SetUnixUidNil sets the value for UnixUid to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetUnixUidNil() {
	o.UnixUid.Set(nil)
}

// UnsetUnixUid ensures that no value is present for UnixUid, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnsetUnixUid() {
	o.UnixUid.Unset()
}

// GetVaultIds returns the VaultIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetVaultIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.VaultIds
}

// GetVaultIdsOk returns a tuple with the VaultIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetVaultIdsOk() (*[]int64, bool) {
	if o == nil || o.VaultIds == nil {
		return nil, false
	}
	return &o.VaultIds, true
}

// HasVaultIds returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasVaultIds() bool {
	if o != nil && o.VaultIds != nil {
		return true
	}

	return false
}

// SetVaultIds gets a reference to the given []int64 and assigns it to the VaultIds field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetVaultIds(v []int64) {
	o.VaultIds = v
}

// GetViewBoxId returns the ViewBoxId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetViewBoxId() int64 {
	if o == nil || o.ViewBoxId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ViewBoxId.Get()
}

// GetViewBoxIdOk returns a tuple with the ViewBoxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetViewBoxIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewBoxId.Get(), o.ViewBoxId.IsSet()
}

// HasViewBoxId returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasViewBoxId() bool {
	if o != nil && o.ViewBoxId.IsSet() {
		return true
	}

	return false
}

// SetViewBoxId gets a reference to the given NullableInt64 and assigns it to the ViewBoxId field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetViewBoxId(v int64) {
	o.ViewBoxId.Set(&v)
}
// SetViewBoxIdNil sets the value for ViewBoxId to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetViewBoxIdNil() {
	o.ViewBoxId.Set(nil)
}

// UnsetViewBoxId ensures that no value is present for ViewBoxId, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnsetViewBoxId() {
	o.ViewBoxId.Unset()
}

// GetViewName returns the ViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetViewName() string {
	if o == nil || o.ViewName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ViewName.Get()
}

// GetViewNameOk returns a tuple with the ViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetViewNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewName.Get(), o.ViewName.IsSet()
}

// HasViewName returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasViewName() bool {
	if o != nil && o.ViewName.IsSet() {
		return true
	}

	return false
}

// SetViewName gets a reference to the given NullableString and assigns it to the ViewName field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetViewName(v string) {
	o.ViewName.Set(&v)
}
// SetViewNameNil sets the value for ViewName to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetViewNameNil() {
	o.ViewName.Set(nil)
}

// UnsetViewName ensures that no value is present for ViewName, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnsetViewName() {
	o.ViewName.Unset()
}

// GetViewboxIds returns the ViewboxIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetViewboxIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.ViewboxIds
}

// GetViewboxIdsOk returns a tuple with the ViewboxIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetViewboxIdsOk() (*[]int64, bool) {
	if o == nil || o.ViewboxIds == nil {
		return nil, false
	}
	return &o.ViewboxIds, true
}

// HasViewboxIds returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasViewboxIds() bool {
	if o != nil && o.ViewboxIds != nil {
		return true
	}

	return false
}

// SetViewboxIds gets a reference to the given []int64 and assigns it to the ViewboxIds field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetViewboxIds(v []int64) {
	o.ViewboxIds = v
}

// GetVmName returns the VmName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetVmName() string {
	if o == nil || o.VmName.Get() == nil {
		var ret string
		return ret
	}
	return *o.VmName.Get()
}

// GetVmNameOk returns a tuple with the VmName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) GetVmNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VmName.Get(), o.VmName.IsSet()
}

// HasVmName returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) HasVmName() bool {
	if o != nil && o.VmName.IsSet() {
		return true
	}

	return false
}

// SetVmName gets a reference to the given NullableString and assigns it to the VmName field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetVmName(v string) {
	o.VmName.Set(&v)
}
// SetVmNameNil sets the value for VmName to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) SetVmNameNil() {
	o.VmName.Set(nil)
}

// UnsetVmName ensures that no value is present for VmName, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnsetVmName() {
	o.VmName.Unset()
}

func (o SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllUnderHierarchy.IsSet() {
		toSerialize["allUnderHierarchy"] = o.AllUnderHierarchy.Get()
	}
	if o.CompactVersion.IsSet() {
		toSerialize["compactVersion"] = o.CompactVersion.Get()
	}
	if o.ConsecutiveFailures.IsSet() {
		toSerialize["consecutiveFailures"] = o.ConsecutiveFailures.Get()
	}
	if o.Environment.IsSet() {
		toSerialize["environment"] = o.Environment.Get()
	}
	if o.GroupBy.IsSet() {
		toSerialize["groupBy"] = o.GroupBy.Get()
	}
	if o.HealthStatus != nil {
		toSerialize["healthStatus"] = o.HealthStatus
	}
	if o.HostOsType != nil {
		toSerialize["hostOsType"] = o.HostOsType
	}
	if o.JobId.IsSet() {
		toSerialize["jobId"] = o.JobId.Get()
	}
	if o.JobName.IsSet() {
		toSerialize["jobName"] = o.JobName.Get()
	}
	if o.LastNDays.IsSet() {
		toSerialize["lastNDays"] = o.LastNDays.Get()
	}
	if o.ObjectIds != nil {
		toSerialize["objectIds"] = o.ObjectIds
	}
	if o.ObjectType.IsSet() {
		toSerialize["objectType"] = o.ObjectType.Get()
	}
	if o.RegisteredSourceId.IsSet() {
		toSerialize["registeredSourceId"] = o.RegisteredSourceId.Get()
	}
	if o.RegisteredSourceIds != nil {
		toSerialize["registeredSourceIds"] = o.RegisteredSourceIds
	}
	if o.Rollup.IsSet() {
		toSerialize["rollup"] = o.Rollup.Get()
	}
	if o.RunStatus != nil {
		toSerialize["runStatus"] = o.RunStatus
	}
	if o.Sid.IsSet() {
		toSerialize["sid"] = o.Sid.Get()
	}
	if o.TenantIdVec != nil {
		toSerialize["tenantIdVec"] = o.TenantIdVec
	}
	if o.Timezone.IsSet() {
		toSerialize["timezone"] = o.Timezone.Get()
	}
	if o.UnixUid.IsSet() {
		toSerialize["unixUid"] = o.UnixUid.Get()
	}
	if o.VaultIds != nil {
		toSerialize["vaultIds"] = o.VaultIds
	}
	if o.ViewBoxId.IsSet() {
		toSerialize["viewBoxId"] = o.ViewBoxId.Get()
	}
	if o.ViewName.IsSet() {
		toSerialize["viewName"] = o.ViewName.Get()
	}
	if o.ViewboxIds != nil {
		toSerialize["viewboxIds"] = o.ViewboxIds
	}
	if o.VmName.IsSet() {
		toSerialize["vmName"] = o.VmName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters struct {
	value *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters
	isSet bool
}

func (v NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) Get() *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters {
	return v.value
}

func (v *NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) Set(val *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters(val *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) *NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters {
	return &NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters{value: val, isSet: true}
}

func (v NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


