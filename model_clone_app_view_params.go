/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// CloneAppViewParams This message encapsulates the generic information required for cloning and App view.
type CloneAppViewParams struct {
	// Mount path identifier, which identifies the sub-dir where the cohesity view for App recovery will be mounted.
	MountPathIdentifier NullableString `json:"mountPathIdentifier,omitempty"`
}

// NewCloneAppViewParams instantiates a new CloneAppViewParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloneAppViewParams() *CloneAppViewParams {
	this := CloneAppViewParams{}
	return &this
}

// NewCloneAppViewParamsWithDefaults instantiates a new CloneAppViewParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloneAppViewParamsWithDefaults() *CloneAppViewParams {
	this := CloneAppViewParams{}
	return &this
}

// GetMountPathIdentifier returns the MountPathIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloneAppViewParams) GetMountPathIdentifier() string {
	if o == nil || o.MountPathIdentifier.Get() == nil {
		var ret string
		return ret
	}
	return *o.MountPathIdentifier.Get()
}

// GetMountPathIdentifierOk returns a tuple with the MountPathIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloneAppViewParams) GetMountPathIdentifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MountPathIdentifier.Get(), o.MountPathIdentifier.IsSet()
}

// HasMountPathIdentifier returns a boolean if a field has been set.
func (o *CloneAppViewParams) HasMountPathIdentifier() bool {
	if o != nil && o.MountPathIdentifier.IsSet() {
		return true
	}

	return false
}

// SetMountPathIdentifier gets a reference to the given NullableString and assigns it to the MountPathIdentifier field.
func (o *CloneAppViewParams) SetMountPathIdentifier(v string) {
	o.MountPathIdentifier.Set(&v)
}
// SetMountPathIdentifierNil sets the value for MountPathIdentifier to be an explicit nil
func (o *CloneAppViewParams) SetMountPathIdentifierNil() {
	o.MountPathIdentifier.Set(nil)
}

// UnsetMountPathIdentifier ensures that no value is present for MountPathIdentifier, not even an explicit nil
func (o *CloneAppViewParams) UnsetMountPathIdentifier() {
	o.MountPathIdentifier.Unset()
}

func (o CloneAppViewParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MountPathIdentifier.IsSet() {
		toSerialize["mountPathIdentifier"] = o.MountPathIdentifier.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCloneAppViewParams struct {
	value *CloneAppViewParams
	isSet bool
}

func (v NullableCloneAppViewParams) Get() *CloneAppViewParams {
	return v.value
}

func (v *NullableCloneAppViewParams) Set(val *CloneAppViewParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCloneAppViewParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCloneAppViewParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloneAppViewParams(val *CloneAppViewParams) *NullableCloneAppViewParams {
	return &NullableCloneAppViewParams{value: val, isSet: true}
}

func (v NullableCloneAppViewParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloneAppViewParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


