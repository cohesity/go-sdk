/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// RecoverVolumesParamsMapping struct for RecoverVolumesParamsMapping
type RecoverVolumesParamsMapping struct {
	// The destination, pertains to the newly rebuilt system.
	DstGuid NullableString `json:"dstGuid,omitempty"`
	// The source, pertains to the original backup.
	SrcGuid NullableString `json:"srcGuid,omitempty"`
}

// NewRecoverVolumesParamsMapping instantiates a new RecoverVolumesParamsMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverVolumesParamsMapping() *RecoverVolumesParamsMapping {
	this := RecoverVolumesParamsMapping{}
	return &this
}

// NewRecoverVolumesParamsMappingWithDefaults instantiates a new RecoverVolumesParamsMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverVolumesParamsMappingWithDefaults() *RecoverVolumesParamsMapping {
	this := RecoverVolumesParamsMapping{}
	return &this
}

// GetDstGuid returns the DstGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverVolumesParamsMapping) GetDstGuid() string {
	if o == nil || o.DstGuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.DstGuid.Get()
}

// GetDstGuidOk returns a tuple with the DstGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverVolumesParamsMapping) GetDstGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DstGuid.Get(), o.DstGuid.IsSet()
}

// HasDstGuid returns a boolean if a field has been set.
func (o *RecoverVolumesParamsMapping) HasDstGuid() bool {
	if o != nil && o.DstGuid.IsSet() {
		return true
	}

	return false
}

// SetDstGuid gets a reference to the given NullableString and assigns it to the DstGuid field.
func (o *RecoverVolumesParamsMapping) SetDstGuid(v string) {
	o.DstGuid.Set(&v)
}
// SetDstGuidNil sets the value for DstGuid to be an explicit nil
func (o *RecoverVolumesParamsMapping) SetDstGuidNil() {
	o.DstGuid.Set(nil)
}

// UnsetDstGuid ensures that no value is present for DstGuid, not even an explicit nil
func (o *RecoverVolumesParamsMapping) UnsetDstGuid() {
	o.DstGuid.Unset()
}

// GetSrcGuid returns the SrcGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverVolumesParamsMapping) GetSrcGuid() string {
	if o == nil || o.SrcGuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.SrcGuid.Get()
}

// GetSrcGuidOk returns a tuple with the SrcGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverVolumesParamsMapping) GetSrcGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SrcGuid.Get(), o.SrcGuid.IsSet()
}

// HasSrcGuid returns a boolean if a field has been set.
func (o *RecoverVolumesParamsMapping) HasSrcGuid() bool {
	if o != nil && o.SrcGuid.IsSet() {
		return true
	}

	return false
}

// SetSrcGuid gets a reference to the given NullableString and assigns it to the SrcGuid field.
func (o *RecoverVolumesParamsMapping) SetSrcGuid(v string) {
	o.SrcGuid.Set(&v)
}
// SetSrcGuidNil sets the value for SrcGuid to be an explicit nil
func (o *RecoverVolumesParamsMapping) SetSrcGuidNil() {
	o.SrcGuid.Set(nil)
}

// UnsetSrcGuid ensures that no value is present for SrcGuid, not even an explicit nil
func (o *RecoverVolumesParamsMapping) UnsetSrcGuid() {
	o.SrcGuid.Unset()
}

func (o RecoverVolumesParamsMapping) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DstGuid.IsSet() {
		toSerialize["dstGuid"] = o.DstGuid.Get()
	}
	if o.SrcGuid.IsSet() {
		toSerialize["srcGuid"] = o.SrcGuid.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverVolumesParamsMapping struct {
	value *RecoverVolumesParamsMapping
	isSet bool
}

func (v NullableRecoverVolumesParamsMapping) Get() *RecoverVolumesParamsMapping {
	return v.value
}

func (v *NullableRecoverVolumesParamsMapping) Set(val *RecoverVolumesParamsMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverVolumesParamsMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverVolumesParamsMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverVolumesParamsMapping(val *RecoverVolumesParamsMapping) *NullableRecoverVolumesParamsMapping {
	return &NullableRecoverVolumesParamsMapping{value: val, isSet: true}
}

func (v NullableRecoverVolumesParamsMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverVolumesParamsMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


