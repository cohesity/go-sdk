/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// RestoreTaskStateBaseProto struct for RestoreTaskStateBaseProto
type RestoreTaskStateBaseProto struct {
	// Whether this task has a pending cancellation request.
	CancellationRequested NullableBool `json:"cancellationRequested,omitempty"`
	// If the restore task has finished, this field contains the end time for the task.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	Error *ErrorProto `json:"error,omitempty"`
	// The name of the restore task.
	Name NullableString `json:"name,omitempty"`
	ParentSourceConnectionParams *ConnectorParams `json:"parentSourceConnectionParams,omitempty"`
	// Iris-facing task state. This field is stamped during the export.
	PublicStatus NullableInt32 `json:"publicStatus,omitempty"`
	// Status of the refresh task.
	RefreshStatus NullableInt32 `json:"refreshStatus,omitempty"`
	RestoreVlanParams *VlanParams `json:"restoreVlanParams,omitempty"`
	// Constituent id (and the gandalf session id) where this task has been scheduled. If -1, the task is not running at any slave. It's possible that the task was previously scheduled, but is now being re-scheduled.
	ScheduledConstituentId NullableInt64 `json:"scheduledConstituentId,omitempty"`
	ScheduledGandalfSessionId NullableInt64 `json:"scheduledGandalfSessionId,omitempty"`
	// The start time for this restore task.
	StartTimeUsecs NullableInt64 `json:"startTimeUsecs,omitempty"`
	// Status of the restore task.
	Status NullableInt32 `json:"status,omitempty"`
	// A globally unique id for this task.
	TaskId NullableInt64 `json:"taskId,omitempty"`
	// Logical size of this restore task. This is the amount of data that needs to be transferred to restore the entity.
	TotalLogicalSizeBytes NullableInt64 `json:"totalLogicalSizeBytes,omitempty"`
	// Physical size of this restore task. This is the amount of data that was actually transferred to restore the entity.
	TotalPhysicalSizeBytes NullableInt64 `json:"totalPhysicalSizeBytes,omitempty"`
	// The type of restore being performed.
	Type NullableInt32 `json:"type,omitempty"`
	// The user who requested this restore task.
	User NullableString `json:"user,omitempty"`
	UserInfo *UserInformation `json:"userInfo,omitempty"`
	// Messages displayed to the user for this task (if any). Only valid if the status of the task is kFinished. This is used for informing the user with additional details when there is not an error.
	UserMessages []string `json:"userMessages,omitempty"`
	// The warnings encountered by this task (if any) during its execution.
	Warnings []ErrorProto `json:"warnings,omitempty"`
}

// NewRestoreTaskStateBaseProto instantiates a new RestoreTaskStateBaseProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreTaskStateBaseProto() *RestoreTaskStateBaseProto {
	this := RestoreTaskStateBaseProto{}
	return &this
}

// NewRestoreTaskStateBaseProtoWithDefaults instantiates a new RestoreTaskStateBaseProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreTaskStateBaseProtoWithDefaults() *RestoreTaskStateBaseProto {
	this := RestoreTaskStateBaseProto{}
	return &this
}

// GetCancellationRequested returns the CancellationRequested field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreTaskStateBaseProto) GetCancellationRequested() bool {
	if o == nil || o.CancellationRequested.Get() == nil {
		var ret bool
		return ret
	}
	return *o.CancellationRequested.Get()
}

// GetCancellationRequestedOk returns a tuple with the CancellationRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreTaskStateBaseProto) GetCancellationRequestedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CancellationRequested.Get(), o.CancellationRequested.IsSet()
}

// HasCancellationRequested returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasCancellationRequested() bool {
	if o != nil && o.CancellationRequested.IsSet() {
		return true
	}

	return false
}

// SetCancellationRequested gets a reference to the given NullableBool and assigns it to the CancellationRequested field.
func (o *RestoreTaskStateBaseProto) SetCancellationRequested(v bool) {
	o.CancellationRequested.Set(&v)
}
// SetCancellationRequestedNil sets the value for CancellationRequested to be an explicit nil
func (o *RestoreTaskStateBaseProto) SetCancellationRequestedNil() {
	o.CancellationRequested.Set(nil)
}

// UnsetCancellationRequested ensures that no value is present for CancellationRequested, not even an explicit nil
func (o *RestoreTaskStateBaseProto) UnsetCancellationRequested() {
	o.CancellationRequested.Unset()
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreTaskStateBaseProto) GetEndTimeUsecs() int64 {
	if o == nil || o.EndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreTaskStateBaseProto) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *RestoreTaskStateBaseProto) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *RestoreTaskStateBaseProto) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *RestoreTaskStateBaseProto) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *RestoreTaskStateBaseProto) GetError() ErrorProto {
	if o == nil || o.Error == nil {
		var ret ErrorProto
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreTaskStateBaseProto) GetErrorOk() (*ErrorProto, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given ErrorProto and assigns it to the Error field.
func (o *RestoreTaskStateBaseProto) SetError(v ErrorProto) {
	o.Error = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreTaskStateBaseProto) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreTaskStateBaseProto) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *RestoreTaskStateBaseProto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *RestoreTaskStateBaseProto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *RestoreTaskStateBaseProto) UnsetName() {
	o.Name.Unset()
}

// GetParentSourceConnectionParams returns the ParentSourceConnectionParams field value if set, zero value otherwise.
func (o *RestoreTaskStateBaseProto) GetParentSourceConnectionParams() ConnectorParams {
	if o == nil || o.ParentSourceConnectionParams == nil {
		var ret ConnectorParams
		return ret
	}
	return *o.ParentSourceConnectionParams
}

// GetParentSourceConnectionParamsOk returns a tuple with the ParentSourceConnectionParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreTaskStateBaseProto) GetParentSourceConnectionParamsOk() (*ConnectorParams, bool) {
	if o == nil || o.ParentSourceConnectionParams == nil {
		return nil, false
	}
	return o.ParentSourceConnectionParams, true
}

// HasParentSourceConnectionParams returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasParentSourceConnectionParams() bool {
	if o != nil && o.ParentSourceConnectionParams != nil {
		return true
	}

	return false
}

// SetParentSourceConnectionParams gets a reference to the given ConnectorParams and assigns it to the ParentSourceConnectionParams field.
func (o *RestoreTaskStateBaseProto) SetParentSourceConnectionParams(v ConnectorParams) {
	o.ParentSourceConnectionParams = &v
}

// GetPublicStatus returns the PublicStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreTaskStateBaseProto) GetPublicStatus() int32 {
	if o == nil || o.PublicStatus.Get() == nil {
		var ret int32
		return ret
	}
	return *o.PublicStatus.Get()
}

// GetPublicStatusOk returns a tuple with the PublicStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreTaskStateBaseProto) GetPublicStatusOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PublicStatus.Get(), o.PublicStatus.IsSet()
}

// HasPublicStatus returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasPublicStatus() bool {
	if o != nil && o.PublicStatus.IsSet() {
		return true
	}

	return false
}

// SetPublicStatus gets a reference to the given NullableInt32 and assigns it to the PublicStatus field.
func (o *RestoreTaskStateBaseProto) SetPublicStatus(v int32) {
	o.PublicStatus.Set(&v)
}
// SetPublicStatusNil sets the value for PublicStatus to be an explicit nil
func (o *RestoreTaskStateBaseProto) SetPublicStatusNil() {
	o.PublicStatus.Set(nil)
}

// UnsetPublicStatus ensures that no value is present for PublicStatus, not even an explicit nil
func (o *RestoreTaskStateBaseProto) UnsetPublicStatus() {
	o.PublicStatus.Unset()
}

// GetRefreshStatus returns the RefreshStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreTaskStateBaseProto) GetRefreshStatus() int32 {
	if o == nil || o.RefreshStatus.Get() == nil {
		var ret int32
		return ret
	}
	return *o.RefreshStatus.Get()
}

// GetRefreshStatusOk returns a tuple with the RefreshStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreTaskStateBaseProto) GetRefreshStatusOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefreshStatus.Get(), o.RefreshStatus.IsSet()
}

// HasRefreshStatus returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasRefreshStatus() bool {
	if o != nil && o.RefreshStatus.IsSet() {
		return true
	}

	return false
}

// SetRefreshStatus gets a reference to the given NullableInt32 and assigns it to the RefreshStatus field.
func (o *RestoreTaskStateBaseProto) SetRefreshStatus(v int32) {
	o.RefreshStatus.Set(&v)
}
// SetRefreshStatusNil sets the value for RefreshStatus to be an explicit nil
func (o *RestoreTaskStateBaseProto) SetRefreshStatusNil() {
	o.RefreshStatus.Set(nil)
}

// UnsetRefreshStatus ensures that no value is present for RefreshStatus, not even an explicit nil
func (o *RestoreTaskStateBaseProto) UnsetRefreshStatus() {
	o.RefreshStatus.Unset()
}

// GetRestoreVlanParams returns the RestoreVlanParams field value if set, zero value otherwise.
func (o *RestoreTaskStateBaseProto) GetRestoreVlanParams() VlanParams {
	if o == nil || o.RestoreVlanParams == nil {
		var ret VlanParams
		return ret
	}
	return *o.RestoreVlanParams
}

// GetRestoreVlanParamsOk returns a tuple with the RestoreVlanParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreTaskStateBaseProto) GetRestoreVlanParamsOk() (*VlanParams, bool) {
	if o == nil || o.RestoreVlanParams == nil {
		return nil, false
	}
	return o.RestoreVlanParams, true
}

// HasRestoreVlanParams returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasRestoreVlanParams() bool {
	if o != nil && o.RestoreVlanParams != nil {
		return true
	}

	return false
}

// SetRestoreVlanParams gets a reference to the given VlanParams and assigns it to the RestoreVlanParams field.
func (o *RestoreTaskStateBaseProto) SetRestoreVlanParams(v VlanParams) {
	o.RestoreVlanParams = &v
}

// GetScheduledConstituentId returns the ScheduledConstituentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreTaskStateBaseProto) GetScheduledConstituentId() int64 {
	if o == nil || o.ScheduledConstituentId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ScheduledConstituentId.Get()
}

// GetScheduledConstituentIdOk returns a tuple with the ScheduledConstituentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreTaskStateBaseProto) GetScheduledConstituentIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ScheduledConstituentId.Get(), o.ScheduledConstituentId.IsSet()
}

// HasScheduledConstituentId returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasScheduledConstituentId() bool {
	if o != nil && o.ScheduledConstituentId.IsSet() {
		return true
	}

	return false
}

// SetScheduledConstituentId gets a reference to the given NullableInt64 and assigns it to the ScheduledConstituentId field.
func (o *RestoreTaskStateBaseProto) SetScheduledConstituentId(v int64) {
	o.ScheduledConstituentId.Set(&v)
}
// SetScheduledConstituentIdNil sets the value for ScheduledConstituentId to be an explicit nil
func (o *RestoreTaskStateBaseProto) SetScheduledConstituentIdNil() {
	o.ScheduledConstituentId.Set(nil)
}

// UnsetScheduledConstituentId ensures that no value is present for ScheduledConstituentId, not even an explicit nil
func (o *RestoreTaskStateBaseProto) UnsetScheduledConstituentId() {
	o.ScheduledConstituentId.Unset()
}

// GetScheduledGandalfSessionId returns the ScheduledGandalfSessionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreTaskStateBaseProto) GetScheduledGandalfSessionId() int64 {
	if o == nil || o.ScheduledGandalfSessionId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ScheduledGandalfSessionId.Get()
}

// GetScheduledGandalfSessionIdOk returns a tuple with the ScheduledGandalfSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreTaskStateBaseProto) GetScheduledGandalfSessionIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ScheduledGandalfSessionId.Get(), o.ScheduledGandalfSessionId.IsSet()
}

// HasScheduledGandalfSessionId returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasScheduledGandalfSessionId() bool {
	if o != nil && o.ScheduledGandalfSessionId.IsSet() {
		return true
	}

	return false
}

// SetScheduledGandalfSessionId gets a reference to the given NullableInt64 and assigns it to the ScheduledGandalfSessionId field.
func (o *RestoreTaskStateBaseProto) SetScheduledGandalfSessionId(v int64) {
	o.ScheduledGandalfSessionId.Set(&v)
}
// SetScheduledGandalfSessionIdNil sets the value for ScheduledGandalfSessionId to be an explicit nil
func (o *RestoreTaskStateBaseProto) SetScheduledGandalfSessionIdNil() {
	o.ScheduledGandalfSessionId.Set(nil)
}

// UnsetScheduledGandalfSessionId ensures that no value is present for ScheduledGandalfSessionId, not even an explicit nil
func (o *RestoreTaskStateBaseProto) UnsetScheduledGandalfSessionId() {
	o.ScheduledGandalfSessionId.Unset()
}

// GetStartTimeUsecs returns the StartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreTaskStateBaseProto) GetStartTimeUsecs() int64 {
	if o == nil || o.StartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StartTimeUsecs.Get()
}

// GetStartTimeUsecsOk returns a tuple with the StartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreTaskStateBaseProto) GetStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartTimeUsecs.Get(), o.StartTimeUsecs.IsSet()
}

// HasStartTimeUsecs returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasStartTimeUsecs() bool {
	if o != nil && o.StartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the StartTimeUsecs field.
func (o *RestoreTaskStateBaseProto) SetStartTimeUsecs(v int64) {
	o.StartTimeUsecs.Set(&v)
}
// SetStartTimeUsecsNil sets the value for StartTimeUsecs to be an explicit nil
func (o *RestoreTaskStateBaseProto) SetStartTimeUsecsNil() {
	o.StartTimeUsecs.Set(nil)
}

// UnsetStartTimeUsecs ensures that no value is present for StartTimeUsecs, not even an explicit nil
func (o *RestoreTaskStateBaseProto) UnsetStartTimeUsecs() {
	o.StartTimeUsecs.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreTaskStateBaseProto) GetStatus() int32 {
	if o == nil || o.Status.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreTaskStateBaseProto) GetStatusOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableInt32 and assigns it to the Status field.
func (o *RestoreTaskStateBaseProto) SetStatus(v int32) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *RestoreTaskStateBaseProto) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *RestoreTaskStateBaseProto) UnsetStatus() {
	o.Status.Unset()
}

// GetTaskId returns the TaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreTaskStateBaseProto) GetTaskId() int64 {
	if o == nil || o.TaskId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TaskId.Get()
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreTaskStateBaseProto) GetTaskIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TaskId.Get(), o.TaskId.IsSet()
}

// HasTaskId returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasTaskId() bool {
	if o != nil && o.TaskId.IsSet() {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given NullableInt64 and assigns it to the TaskId field.
func (o *RestoreTaskStateBaseProto) SetTaskId(v int64) {
	o.TaskId.Set(&v)
}
// SetTaskIdNil sets the value for TaskId to be an explicit nil
func (o *RestoreTaskStateBaseProto) SetTaskIdNil() {
	o.TaskId.Set(nil)
}

// UnsetTaskId ensures that no value is present for TaskId, not even an explicit nil
func (o *RestoreTaskStateBaseProto) UnsetTaskId() {
	o.TaskId.Unset()
}

// GetTotalLogicalSizeBytes returns the TotalLogicalSizeBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreTaskStateBaseProto) GetTotalLogicalSizeBytes() int64 {
	if o == nil || o.TotalLogicalSizeBytes.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalLogicalSizeBytes.Get()
}

// GetTotalLogicalSizeBytesOk returns a tuple with the TotalLogicalSizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreTaskStateBaseProto) GetTotalLogicalSizeBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalLogicalSizeBytes.Get(), o.TotalLogicalSizeBytes.IsSet()
}

// HasTotalLogicalSizeBytes returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasTotalLogicalSizeBytes() bool {
	if o != nil && o.TotalLogicalSizeBytes.IsSet() {
		return true
	}

	return false
}

// SetTotalLogicalSizeBytes gets a reference to the given NullableInt64 and assigns it to the TotalLogicalSizeBytes field.
func (o *RestoreTaskStateBaseProto) SetTotalLogicalSizeBytes(v int64) {
	o.TotalLogicalSizeBytes.Set(&v)
}
// SetTotalLogicalSizeBytesNil sets the value for TotalLogicalSizeBytes to be an explicit nil
func (o *RestoreTaskStateBaseProto) SetTotalLogicalSizeBytesNil() {
	o.TotalLogicalSizeBytes.Set(nil)
}

// UnsetTotalLogicalSizeBytes ensures that no value is present for TotalLogicalSizeBytes, not even an explicit nil
func (o *RestoreTaskStateBaseProto) UnsetTotalLogicalSizeBytes() {
	o.TotalLogicalSizeBytes.Unset()
}

// GetTotalPhysicalSizeBytes returns the TotalPhysicalSizeBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreTaskStateBaseProto) GetTotalPhysicalSizeBytes() int64 {
	if o == nil || o.TotalPhysicalSizeBytes.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalPhysicalSizeBytes.Get()
}

// GetTotalPhysicalSizeBytesOk returns a tuple with the TotalPhysicalSizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreTaskStateBaseProto) GetTotalPhysicalSizeBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalPhysicalSizeBytes.Get(), o.TotalPhysicalSizeBytes.IsSet()
}

// HasTotalPhysicalSizeBytes returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasTotalPhysicalSizeBytes() bool {
	if o != nil && o.TotalPhysicalSizeBytes.IsSet() {
		return true
	}

	return false
}

// SetTotalPhysicalSizeBytes gets a reference to the given NullableInt64 and assigns it to the TotalPhysicalSizeBytes field.
func (o *RestoreTaskStateBaseProto) SetTotalPhysicalSizeBytes(v int64) {
	o.TotalPhysicalSizeBytes.Set(&v)
}
// SetTotalPhysicalSizeBytesNil sets the value for TotalPhysicalSizeBytes to be an explicit nil
func (o *RestoreTaskStateBaseProto) SetTotalPhysicalSizeBytesNil() {
	o.TotalPhysicalSizeBytes.Set(nil)
}

// UnsetTotalPhysicalSizeBytes ensures that no value is present for TotalPhysicalSizeBytes, not even an explicit nil
func (o *RestoreTaskStateBaseProto) UnsetTotalPhysicalSizeBytes() {
	o.TotalPhysicalSizeBytes.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreTaskStateBaseProto) GetType() int32 {
	if o == nil || o.Type.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreTaskStateBaseProto) GetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableInt32 and assigns it to the Type field.
func (o *RestoreTaskStateBaseProto) SetType(v int32) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *RestoreTaskStateBaseProto) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *RestoreTaskStateBaseProto) UnsetType() {
	o.Type.Unset()
}

// GetUser returns the User field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreTaskStateBaseProto) GetUser() string {
	if o == nil || o.User.Get() == nil {
		var ret string
		return ret
	}
	return *o.User.Get()
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreTaskStateBaseProto) GetUserOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.User.Get(), o.User.IsSet()
}

// HasUser returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasUser() bool {
	if o != nil && o.User.IsSet() {
		return true
	}

	return false
}

// SetUser gets a reference to the given NullableString and assigns it to the User field.
func (o *RestoreTaskStateBaseProto) SetUser(v string) {
	o.User.Set(&v)
}
// SetUserNil sets the value for User to be an explicit nil
func (o *RestoreTaskStateBaseProto) SetUserNil() {
	o.User.Set(nil)
}

// UnsetUser ensures that no value is present for User, not even an explicit nil
func (o *RestoreTaskStateBaseProto) UnsetUser() {
	o.User.Unset()
}

// GetUserInfo returns the UserInfo field value if set, zero value otherwise.
func (o *RestoreTaskStateBaseProto) GetUserInfo() UserInformation {
	if o == nil || o.UserInfo == nil {
		var ret UserInformation
		return ret
	}
	return *o.UserInfo
}

// GetUserInfoOk returns a tuple with the UserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreTaskStateBaseProto) GetUserInfoOk() (*UserInformation, bool) {
	if o == nil || o.UserInfo == nil {
		return nil, false
	}
	return o.UserInfo, true
}

// HasUserInfo returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasUserInfo() bool {
	if o != nil && o.UserInfo != nil {
		return true
	}

	return false
}

// SetUserInfo gets a reference to the given UserInformation and assigns it to the UserInfo field.
func (o *RestoreTaskStateBaseProto) SetUserInfo(v UserInformation) {
	o.UserInfo = &v
}

// GetUserMessages returns the UserMessages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreTaskStateBaseProto) GetUserMessages() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.UserMessages
}

// GetUserMessagesOk returns a tuple with the UserMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreTaskStateBaseProto) GetUserMessagesOk() (*[]string, bool) {
	if o == nil || o.UserMessages == nil {
		return nil, false
	}
	return &o.UserMessages, true
}

// HasUserMessages returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasUserMessages() bool {
	if o != nil && o.UserMessages != nil {
		return true
	}

	return false
}

// SetUserMessages gets a reference to the given []string and assigns it to the UserMessages field.
func (o *RestoreTaskStateBaseProto) SetUserMessages(v []string) {
	o.UserMessages = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreTaskStateBaseProto) GetWarnings() []ErrorProto {
	if o == nil  {
		var ret []ErrorProto
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreTaskStateBaseProto) GetWarningsOk() (*[]ErrorProto, bool) {
	if o == nil || o.Warnings == nil {
		return nil, false
	}
	return &o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *RestoreTaskStateBaseProto) HasWarnings() bool {
	if o != nil && o.Warnings != nil {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []ErrorProto and assigns it to the Warnings field.
func (o *RestoreTaskStateBaseProto) SetWarnings(v []ErrorProto) {
	o.Warnings = v
}

func (o RestoreTaskStateBaseProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CancellationRequested.IsSet() {
		toSerialize["cancellationRequested"] = o.CancellationRequested.Get()
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ParentSourceConnectionParams != nil {
		toSerialize["parentSourceConnectionParams"] = o.ParentSourceConnectionParams
	}
	if o.PublicStatus.IsSet() {
		toSerialize["publicStatus"] = o.PublicStatus.Get()
	}
	if o.RefreshStatus.IsSet() {
		toSerialize["refreshStatus"] = o.RefreshStatus.Get()
	}
	if o.RestoreVlanParams != nil {
		toSerialize["restoreVlanParams"] = o.RestoreVlanParams
	}
	if o.ScheduledConstituentId.IsSet() {
		toSerialize["scheduledConstituentId"] = o.ScheduledConstituentId.Get()
	}
	if o.ScheduledGandalfSessionId.IsSet() {
		toSerialize["scheduledGandalfSessionId"] = o.ScheduledGandalfSessionId.Get()
	}
	if o.StartTimeUsecs.IsSet() {
		toSerialize["startTimeUsecs"] = o.StartTimeUsecs.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.TaskId.IsSet() {
		toSerialize["taskId"] = o.TaskId.Get()
	}
	if o.TotalLogicalSizeBytes.IsSet() {
		toSerialize["totalLogicalSizeBytes"] = o.TotalLogicalSizeBytes.Get()
	}
	if o.TotalPhysicalSizeBytes.IsSet() {
		toSerialize["totalPhysicalSizeBytes"] = o.TotalPhysicalSizeBytes.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.User.IsSet() {
		toSerialize["user"] = o.User.Get()
	}
	if o.UserInfo != nil {
		toSerialize["userInfo"] = o.UserInfo
	}
	if o.UserMessages != nil {
		toSerialize["userMessages"] = o.UserMessages
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreTaskStateBaseProto struct {
	value *RestoreTaskStateBaseProto
	isSet bool
}

func (v NullableRestoreTaskStateBaseProto) Get() *RestoreTaskStateBaseProto {
	return v.value
}

func (v *NullableRestoreTaskStateBaseProto) Set(val *RestoreTaskStateBaseProto) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreTaskStateBaseProto) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreTaskStateBaseProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreTaskStateBaseProto(val *RestoreTaskStateBaseProto) *NullableRestoreTaskStateBaseProto {
	return &NullableRestoreTaskStateBaseProto{value: val, isSet: true}
}

func (v NullableRestoreTaskStateBaseProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreTaskStateBaseProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


