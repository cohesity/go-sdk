/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the RegistrationInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegistrationInfo{}

// RegistrationInfo Specifies the source registration informations.
type RegistrationInfo struct {
	// Specifies the status of the authentication during the registration of a Protection Source. 'Pending' indicates the authentication is in progress. 'Scheduled' indicates the authentication is scheduled. 'Finished' indicates the authentication is completed. 'RefreshInProgress' indicates the refresh is in progress.
	AuthenticationStatus NullableString `json:"authenticationStatus,omitempty"`
	// Specifies the time when the source was last refreshed in milliseconds.
	LastRefreshedTimeMsecs NullableInt64 `json:"lastRefreshedTimeMsecs,omitempty"`
	// Specifies the time when the source was registered in milliseconds
	RegistrationTimeMsecs NullableInt64 `json:"registrationTimeMsecs,omitempty"`
}

// NewRegistrationInfo instantiates a new RegistrationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistrationInfo() *RegistrationInfo {
	this := RegistrationInfo{}
	return &this
}

// NewRegistrationInfoWithDefaults instantiates a new RegistrationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistrationInfoWithDefaults() *RegistrationInfo {
	this := RegistrationInfo{}
	return &this
}

// GetAuthenticationStatus returns the AuthenticationStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RegistrationInfo) GetAuthenticationStatus() string {
	if o == nil || IsNil(o.AuthenticationStatus.Get()) {
		var ret string
		return ret
	}
	return *o.AuthenticationStatus.Get()
}

// GetAuthenticationStatusOk returns a tuple with the AuthenticationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegistrationInfo) GetAuthenticationStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthenticationStatus.Get(), o.AuthenticationStatus.IsSet()
}

// HasAuthenticationStatus returns a boolean if a field has been set.
func (o *RegistrationInfo) HasAuthenticationStatus() bool {
	if o != nil && o.AuthenticationStatus.IsSet() {
		return true
	}

	return false
}

// SetAuthenticationStatus gets a reference to the given NullableString and assigns it to the AuthenticationStatus field.
func (o *RegistrationInfo) SetAuthenticationStatus(v string) {
	o.AuthenticationStatus.Set(&v)
}
// SetAuthenticationStatusNil sets the value for AuthenticationStatus to be an explicit nil
func (o *RegistrationInfo) SetAuthenticationStatusNil() {
	o.AuthenticationStatus.Set(nil)
}

// UnsetAuthenticationStatus ensures that no value is present for AuthenticationStatus, not even an explicit nil
func (o *RegistrationInfo) UnsetAuthenticationStatus() {
	o.AuthenticationStatus.Unset()
}

// GetLastRefreshedTimeMsecs returns the LastRefreshedTimeMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RegistrationInfo) GetLastRefreshedTimeMsecs() int64 {
	if o == nil || IsNil(o.LastRefreshedTimeMsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.LastRefreshedTimeMsecs.Get()
}

// GetLastRefreshedTimeMsecsOk returns a tuple with the LastRefreshedTimeMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegistrationInfo) GetLastRefreshedTimeMsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastRefreshedTimeMsecs.Get(), o.LastRefreshedTimeMsecs.IsSet()
}

// HasLastRefreshedTimeMsecs returns a boolean if a field has been set.
func (o *RegistrationInfo) HasLastRefreshedTimeMsecs() bool {
	if o != nil && o.LastRefreshedTimeMsecs.IsSet() {
		return true
	}

	return false
}

// SetLastRefreshedTimeMsecs gets a reference to the given NullableInt64 and assigns it to the LastRefreshedTimeMsecs field.
func (o *RegistrationInfo) SetLastRefreshedTimeMsecs(v int64) {
	o.LastRefreshedTimeMsecs.Set(&v)
}
// SetLastRefreshedTimeMsecsNil sets the value for LastRefreshedTimeMsecs to be an explicit nil
func (o *RegistrationInfo) SetLastRefreshedTimeMsecsNil() {
	o.LastRefreshedTimeMsecs.Set(nil)
}

// UnsetLastRefreshedTimeMsecs ensures that no value is present for LastRefreshedTimeMsecs, not even an explicit nil
func (o *RegistrationInfo) UnsetLastRefreshedTimeMsecs() {
	o.LastRefreshedTimeMsecs.Unset()
}

// GetRegistrationTimeMsecs returns the RegistrationTimeMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RegistrationInfo) GetRegistrationTimeMsecs() int64 {
	if o == nil || IsNil(o.RegistrationTimeMsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.RegistrationTimeMsecs.Get()
}

// GetRegistrationTimeMsecsOk returns a tuple with the RegistrationTimeMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegistrationInfo) GetRegistrationTimeMsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RegistrationTimeMsecs.Get(), o.RegistrationTimeMsecs.IsSet()
}

// HasRegistrationTimeMsecs returns a boolean if a field has been set.
func (o *RegistrationInfo) HasRegistrationTimeMsecs() bool {
	if o != nil && o.RegistrationTimeMsecs.IsSet() {
		return true
	}

	return false
}

// SetRegistrationTimeMsecs gets a reference to the given NullableInt64 and assigns it to the RegistrationTimeMsecs field.
func (o *RegistrationInfo) SetRegistrationTimeMsecs(v int64) {
	o.RegistrationTimeMsecs.Set(&v)
}
// SetRegistrationTimeMsecsNil sets the value for RegistrationTimeMsecs to be an explicit nil
func (o *RegistrationInfo) SetRegistrationTimeMsecsNil() {
	o.RegistrationTimeMsecs.Set(nil)
}

// UnsetRegistrationTimeMsecs ensures that no value is present for RegistrationTimeMsecs, not even an explicit nil
func (o *RegistrationInfo) UnsetRegistrationTimeMsecs() {
	o.RegistrationTimeMsecs.Unset()
}

func (o RegistrationInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegistrationInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthenticationStatus.IsSet() {
		toSerialize["authenticationStatus"] = o.AuthenticationStatus.Get()
	}
	if o.LastRefreshedTimeMsecs.IsSet() {
		toSerialize["lastRefreshedTimeMsecs"] = o.LastRefreshedTimeMsecs.Get()
	}
	if o.RegistrationTimeMsecs.IsSet() {
		toSerialize["registrationTimeMsecs"] = o.RegistrationTimeMsecs.Get()
	}
	return toSerialize, nil
}

type NullableRegistrationInfo struct {
	value *RegistrationInfo
	isSet bool
}

func (v NullableRegistrationInfo) Get() *RegistrationInfo {
	return v.value
}

func (v *NullableRegistrationInfo) Set(val *RegistrationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistrationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistrationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistrationInfo(val *RegistrationInfo) *NullableRegistrationInfo {
	return &NullableRegistrationInfo{value: val, isSet: true}
}

func (v NullableRegistrationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistrationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


