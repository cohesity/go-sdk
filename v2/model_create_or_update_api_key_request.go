/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateOrUpdateAPIKeyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateAPIKeyRequest{}

// CreateOrUpdateAPIKeyRequest Specified the request to create a new user API key.
type CreateOrUpdateAPIKeyRequest struct {
	// Specifies the time in milliseconds when the API key will expire. Set null for no expiry.
	ExpiryTimeMsecs NullableInt64 `json:"expiryTimeMsecs,omitempty"`
	// Specifies if the API key is active.
	IsActive NullableBool `json:"isActive,omitempty"`
	// Specifies the API key name.
	Name NullableString `json:"name"`
}

type _CreateOrUpdateAPIKeyRequest CreateOrUpdateAPIKeyRequest

// NewCreateOrUpdateAPIKeyRequest instantiates a new CreateOrUpdateAPIKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateAPIKeyRequest(name NullableString) *CreateOrUpdateAPIKeyRequest {
	this := CreateOrUpdateAPIKeyRequest{}
	var isActive bool = true
	this.IsActive = *NewNullableBool(&isActive)
	this.Name = name
	return &this
}

// NewCreateOrUpdateAPIKeyRequestWithDefaults instantiates a new CreateOrUpdateAPIKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateAPIKeyRequestWithDefaults() *CreateOrUpdateAPIKeyRequest {
	this := CreateOrUpdateAPIKeyRequest{}
	var isActive bool = true
	this.IsActive = *NewNullableBool(&isActive)
	return &this
}

// GetExpiryTimeMsecs returns the ExpiryTimeMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAPIKeyRequest) GetExpiryTimeMsecs() int64 {
	if o == nil || IsNil(o.ExpiryTimeMsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.ExpiryTimeMsecs.Get()
}

// GetExpiryTimeMsecsOk returns a tuple with the ExpiryTimeMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAPIKeyRequest) GetExpiryTimeMsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiryTimeMsecs.Get(), o.ExpiryTimeMsecs.IsSet()
}

// HasExpiryTimeMsecs returns a boolean if a field has been set.
func (o *CreateOrUpdateAPIKeyRequest) HasExpiryTimeMsecs() bool {
	if o != nil && o.ExpiryTimeMsecs.IsSet() {
		return true
	}

	return false
}

// SetExpiryTimeMsecs gets a reference to the given NullableInt64 and assigns it to the ExpiryTimeMsecs field.
func (o *CreateOrUpdateAPIKeyRequest) SetExpiryTimeMsecs(v int64) {
	o.ExpiryTimeMsecs.Set(&v)
}
// SetExpiryTimeMsecsNil sets the value for ExpiryTimeMsecs to be an explicit nil
func (o *CreateOrUpdateAPIKeyRequest) SetExpiryTimeMsecsNil() {
	o.ExpiryTimeMsecs.Set(nil)
}

// UnsetExpiryTimeMsecs ensures that no value is present for ExpiryTimeMsecs, not even an explicit nil
func (o *CreateOrUpdateAPIKeyRequest) UnsetExpiryTimeMsecs() {
	o.ExpiryTimeMsecs.Unset()
}

// GetIsActive returns the IsActive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAPIKeyRequest) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive.Get()) {
		var ret bool
		return ret
	}
	return *o.IsActive.Get()
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAPIKeyRequest) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsActive.Get(), o.IsActive.IsSet()
}

// HasIsActive returns a boolean if a field has been set.
func (o *CreateOrUpdateAPIKeyRequest) HasIsActive() bool {
	if o != nil && o.IsActive.IsSet() {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given NullableBool and assigns it to the IsActive field.
func (o *CreateOrUpdateAPIKeyRequest) SetIsActive(v bool) {
	o.IsActive.Set(&v)
}
// SetIsActiveNil sets the value for IsActive to be an explicit nil
func (o *CreateOrUpdateAPIKeyRequest) SetIsActiveNil() {
	o.IsActive.Set(nil)
}

// UnsetIsActive ensures that no value is present for IsActive, not even an explicit nil
func (o *CreateOrUpdateAPIKeyRequest) UnsetIsActive() {
	o.IsActive.Unset()
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateOrUpdateAPIKeyRequest) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAPIKeyRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *CreateOrUpdateAPIKeyRequest) SetName(v string) {
	o.Name.Set(&v)
}

func (o CreateOrUpdateAPIKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateAPIKeyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ExpiryTimeMsecs.IsSet() {
		toSerialize["expiryTimeMsecs"] = o.ExpiryTimeMsecs.Get()
	}
	if o.IsActive.IsSet() {
		toSerialize["isActive"] = o.IsActive.Get()
	}
	toSerialize["name"] = o.Name.Get()
	return toSerialize, nil
}

func (o *CreateOrUpdateAPIKeyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrUpdateAPIKeyRequest := _CreateOrUpdateAPIKeyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrUpdateAPIKeyRequest)

	if err != nil {
		return err
	}

	*o = CreateOrUpdateAPIKeyRequest(varCreateOrUpdateAPIKeyRequest)

	return err
}

type NullableCreateOrUpdateAPIKeyRequest struct {
	value *CreateOrUpdateAPIKeyRequest
	isSet bool
}

func (v NullableCreateOrUpdateAPIKeyRequest) Get() *CreateOrUpdateAPIKeyRequest {
	return v.value
}

func (v *NullableCreateOrUpdateAPIKeyRequest) Set(val *CreateOrUpdateAPIKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateAPIKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateAPIKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateAPIKeyRequest(val *CreateOrUpdateAPIKeyRequest) *NullableCreateOrUpdateAPIKeyRequest {
	return &NullableCreateOrUpdateAPIKeyRequest{value: val, isSet: true}
}

func (v NullableCreateOrUpdateAPIKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateAPIKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


