/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the GlobalClusterIdentifier type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalClusterIdentifier{}

// GlobalClusterIdentifier Specifies the MCM cluster identifier.
type GlobalClusterIdentifier struct {
	// List of Clusters Identifiers to filter from. The format is clusterId:clusterIncarnationId.
	ClusterIdentifier NullableString `json:"clusterIdentifier,omitempty" validate:"regexp=^([0-9]+:[0-9]+)$"`
	// Specifies the region id of the cluster. Only valid for DMaaS clusters.
	RegionId NullableString `json:"regionId,omitempty"`
}

// NewGlobalClusterIdentifier instantiates a new GlobalClusterIdentifier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalClusterIdentifier() *GlobalClusterIdentifier {
	this := GlobalClusterIdentifier{}
	return &this
}

// NewGlobalClusterIdentifierWithDefaults instantiates a new GlobalClusterIdentifier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalClusterIdentifierWithDefaults() *GlobalClusterIdentifier {
	this := GlobalClusterIdentifier{}
	return &this
}

// GetClusterIdentifier returns the ClusterIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GlobalClusterIdentifier) GetClusterIdentifier() string {
	if o == nil || IsNil(o.ClusterIdentifier.Get()) {
		var ret string
		return ret
	}
	return *o.ClusterIdentifier.Get()
}

// GetClusterIdentifierOk returns a tuple with the ClusterIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GlobalClusterIdentifier) GetClusterIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterIdentifier.Get(), o.ClusterIdentifier.IsSet()
}

// HasClusterIdentifier returns a boolean if a field has been set.
func (o *GlobalClusterIdentifier) HasClusterIdentifier() bool {
	if o != nil && o.ClusterIdentifier.IsSet() {
		return true
	}

	return false
}

// SetClusterIdentifier gets a reference to the given NullableString and assigns it to the ClusterIdentifier field.
func (o *GlobalClusterIdentifier) SetClusterIdentifier(v string) {
	o.ClusterIdentifier.Set(&v)
}
// SetClusterIdentifierNil sets the value for ClusterIdentifier to be an explicit nil
func (o *GlobalClusterIdentifier) SetClusterIdentifierNil() {
	o.ClusterIdentifier.Set(nil)
}

// UnsetClusterIdentifier ensures that no value is present for ClusterIdentifier, not even an explicit nil
func (o *GlobalClusterIdentifier) UnsetClusterIdentifier() {
	o.ClusterIdentifier.Unset()
}

// GetRegionId returns the RegionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GlobalClusterIdentifier) GetRegionId() string {
	if o == nil || IsNil(o.RegionId.Get()) {
		var ret string
		return ret
	}
	return *o.RegionId.Get()
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GlobalClusterIdentifier) GetRegionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RegionId.Get(), o.RegionId.IsSet()
}

// HasRegionId returns a boolean if a field has been set.
func (o *GlobalClusterIdentifier) HasRegionId() bool {
	if o != nil && o.RegionId.IsSet() {
		return true
	}

	return false
}

// SetRegionId gets a reference to the given NullableString and assigns it to the RegionId field.
func (o *GlobalClusterIdentifier) SetRegionId(v string) {
	o.RegionId.Set(&v)
}
// SetRegionIdNil sets the value for RegionId to be an explicit nil
func (o *GlobalClusterIdentifier) SetRegionIdNil() {
	o.RegionId.Set(nil)
}

// UnsetRegionId ensures that no value is present for RegionId, not even an explicit nil
func (o *GlobalClusterIdentifier) UnsetRegionId() {
	o.RegionId.Unset()
}

func (o GlobalClusterIdentifier) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalClusterIdentifier) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterIdentifier.IsSet() {
		toSerialize["clusterIdentifier"] = o.ClusterIdentifier.Get()
	}
	if o.RegionId.IsSet() {
		toSerialize["regionId"] = o.RegionId.Get()
	}
	return toSerialize, nil
}

type NullableGlobalClusterIdentifier struct {
	value *GlobalClusterIdentifier
	isSet bool
}

func (v NullableGlobalClusterIdentifier) Get() *GlobalClusterIdentifier {
	return v.value
}

func (v *NullableGlobalClusterIdentifier) Set(val *GlobalClusterIdentifier) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalClusterIdentifier) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalClusterIdentifier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalClusterIdentifier(val *GlobalClusterIdentifier) *NullableGlobalClusterIdentifier {
	return &NullableGlobalClusterIdentifier{value: val, isSet: true}
}

func (v NullableGlobalClusterIdentifier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalClusterIdentifier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


