/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the KmipKmsConfigurationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KmipKmsConfigurationResponse{}

// KmipKmsConfigurationResponse KMIP compliant KMS configuration response params.
type KmipKmsConfigurationResponse struct {
	// Additional KMS server IP address or FQDNs for fail over.
	AdditionalServerAddress []string `json:"AdditionalServerAddress,omitempty"`
	// Specifies expiry date of client certificate in msecs.
	CertificateExpiryDate NullableInt64 `json:"certificateExpiryDate,omitempty"`
	// Port on which the KMS server is listening.
	Port NullableInt32 `json:"port,omitempty"`
	// KMIP protocol version used to communicate with the KMS.
	ProtocolVersion NullableString `json:"protocolVersion,omitempty"`
	// KMS server IP address or FQDN.
	Server NullableString `json:"server,omitempty"`
}

// NewKmipKmsConfigurationResponse instantiates a new KmipKmsConfigurationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKmipKmsConfigurationResponse() *KmipKmsConfigurationResponse {
	this := KmipKmsConfigurationResponse{}
	var port int32 = 5696
	this.Port = *NewNullableInt32(&port)
	return &this
}

// NewKmipKmsConfigurationResponseWithDefaults instantiates a new KmipKmsConfigurationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKmipKmsConfigurationResponseWithDefaults() *KmipKmsConfigurationResponse {
	this := KmipKmsConfigurationResponse{}
	var port int32 = 5696
	this.Port = *NewNullableInt32(&port)
	return &this
}

// GetAdditionalServerAddress returns the AdditionalServerAddress field value if set, zero value otherwise.
func (o *KmipKmsConfigurationResponse) GetAdditionalServerAddress() []string {
	if o == nil || IsNil(o.AdditionalServerAddress) {
		var ret []string
		return ret
	}
	return o.AdditionalServerAddress
}

// GetAdditionalServerAddressOk returns a tuple with the AdditionalServerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KmipKmsConfigurationResponse) GetAdditionalServerAddressOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalServerAddress) {
		return nil, false
	}
	return o.AdditionalServerAddress, true
}

// HasAdditionalServerAddress returns a boolean if a field has been set.
func (o *KmipKmsConfigurationResponse) HasAdditionalServerAddress() bool {
	if o != nil && !IsNil(o.AdditionalServerAddress) {
		return true
	}

	return false
}

// SetAdditionalServerAddress gets a reference to the given []string and assigns it to the AdditionalServerAddress field.
func (o *KmipKmsConfigurationResponse) SetAdditionalServerAddress(v []string) {
	o.AdditionalServerAddress = v
}

// GetCertificateExpiryDate returns the CertificateExpiryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KmipKmsConfigurationResponse) GetCertificateExpiryDate() int64 {
	if o == nil || IsNil(o.CertificateExpiryDate.Get()) {
		var ret int64
		return ret
	}
	return *o.CertificateExpiryDate.Get()
}

// GetCertificateExpiryDateOk returns a tuple with the CertificateExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KmipKmsConfigurationResponse) GetCertificateExpiryDateOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CertificateExpiryDate.Get(), o.CertificateExpiryDate.IsSet()
}

// HasCertificateExpiryDate returns a boolean if a field has been set.
func (o *KmipKmsConfigurationResponse) HasCertificateExpiryDate() bool {
	if o != nil && o.CertificateExpiryDate.IsSet() {
		return true
	}

	return false
}

// SetCertificateExpiryDate gets a reference to the given NullableInt64 and assigns it to the CertificateExpiryDate field.
func (o *KmipKmsConfigurationResponse) SetCertificateExpiryDate(v int64) {
	o.CertificateExpiryDate.Set(&v)
}
// SetCertificateExpiryDateNil sets the value for CertificateExpiryDate to be an explicit nil
func (o *KmipKmsConfigurationResponse) SetCertificateExpiryDateNil() {
	o.CertificateExpiryDate.Set(nil)
}

// UnsetCertificateExpiryDate ensures that no value is present for CertificateExpiryDate, not even an explicit nil
func (o *KmipKmsConfigurationResponse) UnsetCertificateExpiryDate() {
	o.CertificateExpiryDate.Unset()
}

// GetPort returns the Port field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KmipKmsConfigurationResponse) GetPort() int32 {
	if o == nil || IsNil(o.Port.Get()) {
		var ret int32
		return ret
	}
	return *o.Port.Get()
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KmipKmsConfigurationResponse) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Port.Get(), o.Port.IsSet()
}

// HasPort returns a boolean if a field has been set.
func (o *KmipKmsConfigurationResponse) HasPort() bool {
	if o != nil && o.Port.IsSet() {
		return true
	}

	return false
}

// SetPort gets a reference to the given NullableInt32 and assigns it to the Port field.
func (o *KmipKmsConfigurationResponse) SetPort(v int32) {
	o.Port.Set(&v)
}
// SetPortNil sets the value for Port to be an explicit nil
func (o *KmipKmsConfigurationResponse) SetPortNil() {
	o.Port.Set(nil)
}

// UnsetPort ensures that no value is present for Port, not even an explicit nil
func (o *KmipKmsConfigurationResponse) UnsetPort() {
	o.Port.Unset()
}

// GetProtocolVersion returns the ProtocolVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KmipKmsConfigurationResponse) GetProtocolVersion() string {
	if o == nil || IsNil(o.ProtocolVersion.Get()) {
		var ret string
		return ret
	}
	return *o.ProtocolVersion.Get()
}

// GetProtocolVersionOk returns a tuple with the ProtocolVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KmipKmsConfigurationResponse) GetProtocolVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProtocolVersion.Get(), o.ProtocolVersion.IsSet()
}

// HasProtocolVersion returns a boolean if a field has been set.
func (o *KmipKmsConfigurationResponse) HasProtocolVersion() bool {
	if o != nil && o.ProtocolVersion.IsSet() {
		return true
	}

	return false
}

// SetProtocolVersion gets a reference to the given NullableString and assigns it to the ProtocolVersion field.
func (o *KmipKmsConfigurationResponse) SetProtocolVersion(v string) {
	o.ProtocolVersion.Set(&v)
}
// SetProtocolVersionNil sets the value for ProtocolVersion to be an explicit nil
func (o *KmipKmsConfigurationResponse) SetProtocolVersionNil() {
	o.ProtocolVersion.Set(nil)
}

// UnsetProtocolVersion ensures that no value is present for ProtocolVersion, not even an explicit nil
func (o *KmipKmsConfigurationResponse) UnsetProtocolVersion() {
	o.ProtocolVersion.Unset()
}

// GetServer returns the Server field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KmipKmsConfigurationResponse) GetServer() string {
	if o == nil || IsNil(o.Server.Get()) {
		var ret string
		return ret
	}
	return *o.Server.Get()
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KmipKmsConfigurationResponse) GetServerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Server.Get(), o.Server.IsSet()
}

// HasServer returns a boolean if a field has been set.
func (o *KmipKmsConfigurationResponse) HasServer() bool {
	if o != nil && o.Server.IsSet() {
		return true
	}

	return false
}

// SetServer gets a reference to the given NullableString and assigns it to the Server field.
func (o *KmipKmsConfigurationResponse) SetServer(v string) {
	o.Server.Set(&v)
}
// SetServerNil sets the value for Server to be an explicit nil
func (o *KmipKmsConfigurationResponse) SetServerNil() {
	o.Server.Set(nil)
}

// UnsetServer ensures that no value is present for Server, not even an explicit nil
func (o *KmipKmsConfigurationResponse) UnsetServer() {
	o.Server.Unset()
}

func (o KmipKmsConfigurationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KmipKmsConfigurationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalServerAddress) {
		toSerialize["AdditionalServerAddress"] = o.AdditionalServerAddress
	}
	if o.CertificateExpiryDate.IsSet() {
		toSerialize["certificateExpiryDate"] = o.CertificateExpiryDate.Get()
	}
	if o.Port.IsSet() {
		toSerialize["port"] = o.Port.Get()
	}
	if o.ProtocolVersion.IsSet() {
		toSerialize["protocolVersion"] = o.ProtocolVersion.Get()
	}
	if o.Server.IsSet() {
		toSerialize["server"] = o.Server.Get()
	}
	return toSerialize, nil
}

type NullableKmipKmsConfigurationResponse struct {
	value *KmipKmsConfigurationResponse
	isSet bool
}

func (v NullableKmipKmsConfigurationResponse) Get() *KmipKmsConfigurationResponse {
	return v.value
}

func (v *NullableKmipKmsConfigurationResponse) Set(val *KmipKmsConfigurationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKmipKmsConfigurationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKmipKmsConfigurationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKmipKmsConfigurationResponse(val *KmipKmsConfigurationResponse) *NullableKmipKmsConfigurationResponse {
	return &NullableKmipKmsConfigurationResponse{value: val, isSet: true}
}

func (v NullableKmipKmsConfigurationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKmipKmsConfigurationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


