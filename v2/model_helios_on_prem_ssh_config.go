/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the HeliosOnPremSSHConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeliosOnPremSSHConfig{}

// HeliosOnPremSSHConfig Params for a HeliosOnPremVM SSH access.
type HeliosOnPremSSHConfig struct {
	// Specifies if SSH password is set for support user.
	SshSupportUserPasswordSet NullableBool `json:"sshSupportUserPasswordSet,omitempty"`
	// Specifies if SSH sudo access is set for support user.
	SshSupportUserSudoEnabled NullableBool `json:"sshSupportUserSudoEnabled,omitempty"`
}

// NewHeliosOnPremSSHConfig instantiates a new HeliosOnPremSSHConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosOnPremSSHConfig() *HeliosOnPremSSHConfig {
	this := HeliosOnPremSSHConfig{}
	return &this
}

// NewHeliosOnPremSSHConfigWithDefaults instantiates a new HeliosOnPremSSHConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosOnPremSSHConfigWithDefaults() *HeliosOnPremSSHConfig {
	this := HeliosOnPremSSHConfig{}
	return &this
}

// GetSshSupportUserPasswordSet returns the SshSupportUserPasswordSet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosOnPremSSHConfig) GetSshSupportUserPasswordSet() bool {
	if o == nil || IsNil(o.SshSupportUserPasswordSet.Get()) {
		var ret bool
		return ret
	}
	return *o.SshSupportUserPasswordSet.Get()
}

// GetSshSupportUserPasswordSetOk returns a tuple with the SshSupportUserPasswordSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosOnPremSSHConfig) GetSshSupportUserPasswordSetOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SshSupportUserPasswordSet.Get(), o.SshSupportUserPasswordSet.IsSet()
}

// HasSshSupportUserPasswordSet returns a boolean if a field has been set.
func (o *HeliosOnPremSSHConfig) HasSshSupportUserPasswordSet() bool {
	if o != nil && o.SshSupportUserPasswordSet.IsSet() {
		return true
	}

	return false
}

// SetSshSupportUserPasswordSet gets a reference to the given NullableBool and assigns it to the SshSupportUserPasswordSet field.
func (o *HeliosOnPremSSHConfig) SetSshSupportUserPasswordSet(v bool) {
	o.SshSupportUserPasswordSet.Set(&v)
}
// SetSshSupportUserPasswordSetNil sets the value for SshSupportUserPasswordSet to be an explicit nil
func (o *HeliosOnPremSSHConfig) SetSshSupportUserPasswordSetNil() {
	o.SshSupportUserPasswordSet.Set(nil)
}

// UnsetSshSupportUserPasswordSet ensures that no value is present for SshSupportUserPasswordSet, not even an explicit nil
func (o *HeliosOnPremSSHConfig) UnsetSshSupportUserPasswordSet() {
	o.SshSupportUserPasswordSet.Unset()
}

// GetSshSupportUserSudoEnabled returns the SshSupportUserSudoEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosOnPremSSHConfig) GetSshSupportUserSudoEnabled() bool {
	if o == nil || IsNil(o.SshSupportUserSudoEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.SshSupportUserSudoEnabled.Get()
}

// GetSshSupportUserSudoEnabledOk returns a tuple with the SshSupportUserSudoEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosOnPremSSHConfig) GetSshSupportUserSudoEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SshSupportUserSudoEnabled.Get(), o.SshSupportUserSudoEnabled.IsSet()
}

// HasSshSupportUserSudoEnabled returns a boolean if a field has been set.
func (o *HeliosOnPremSSHConfig) HasSshSupportUserSudoEnabled() bool {
	if o != nil && o.SshSupportUserSudoEnabled.IsSet() {
		return true
	}

	return false
}

// SetSshSupportUserSudoEnabled gets a reference to the given NullableBool and assigns it to the SshSupportUserSudoEnabled field.
func (o *HeliosOnPremSSHConfig) SetSshSupportUserSudoEnabled(v bool) {
	o.SshSupportUserSudoEnabled.Set(&v)
}
// SetSshSupportUserSudoEnabledNil sets the value for SshSupportUserSudoEnabled to be an explicit nil
func (o *HeliosOnPremSSHConfig) SetSshSupportUserSudoEnabledNil() {
	o.SshSupportUserSudoEnabled.Set(nil)
}

// UnsetSshSupportUserSudoEnabled ensures that no value is present for SshSupportUserSudoEnabled, not even an explicit nil
func (o *HeliosOnPremSSHConfig) UnsetSshSupportUserSudoEnabled() {
	o.SshSupportUserSudoEnabled.Unset()
}

func (o HeliosOnPremSSHConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeliosOnPremSSHConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SshSupportUserPasswordSet.IsSet() {
		toSerialize["sshSupportUserPasswordSet"] = o.SshSupportUserPasswordSet.Get()
	}
	if o.SshSupportUserSudoEnabled.IsSet() {
		toSerialize["sshSupportUserSudoEnabled"] = o.SshSupportUserSudoEnabled.Get()
	}
	return toSerialize, nil
}

type NullableHeliosOnPremSSHConfig struct {
	value *HeliosOnPremSSHConfig
	isSet bool
}

func (v NullableHeliosOnPremSSHConfig) Get() *HeliosOnPremSSHConfig {
	return v.value
}

func (v *NullableHeliosOnPremSSHConfig) Set(val *HeliosOnPremSSHConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosOnPremSSHConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosOnPremSSHConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosOnPremSSHConfig(val *HeliosOnPremSSHConfig) *NullableHeliosOnPremSSHConfig {
	return &NullableHeliosOnPremSSHConfig{value: val, isSet: true}
}

func (v NullableHeliosOnPremSSHConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosOnPremSSHConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


