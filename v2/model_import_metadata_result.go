/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ImportMetadataResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportMetadataResult{}

// ImportMetadataResult Response of Import Metadata.
type ImportMetadataResult struct {
	// The importing is a time taking process. This denotes the id for this import task which will be used to poll the status of importing metadata through QueryImportMetadataStatus. This will not be filled if there is an error.
	ImportOperationId *string `json:"importOperationId,omitempty"`
}

// NewImportMetadataResult instantiates a new ImportMetadataResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportMetadataResult() *ImportMetadataResult {
	this := ImportMetadataResult{}
	return &this
}

// NewImportMetadataResultWithDefaults instantiates a new ImportMetadataResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportMetadataResultWithDefaults() *ImportMetadataResult {
	this := ImportMetadataResult{}
	return &this
}

// GetImportOperationId returns the ImportOperationId field value if set, zero value otherwise.
func (o *ImportMetadataResult) GetImportOperationId() string {
	if o == nil || IsNil(o.ImportOperationId) {
		var ret string
		return ret
	}
	return *o.ImportOperationId
}

// GetImportOperationIdOk returns a tuple with the ImportOperationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportMetadataResult) GetImportOperationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImportOperationId) {
		return nil, false
	}
	return o.ImportOperationId, true
}

// HasImportOperationId returns a boolean if a field has been set.
func (o *ImportMetadataResult) HasImportOperationId() bool {
	if o != nil && !IsNil(o.ImportOperationId) {
		return true
	}

	return false
}

// SetImportOperationId gets a reference to the given string and assigns it to the ImportOperationId field.
func (o *ImportMetadataResult) SetImportOperationId(v string) {
	o.ImportOperationId = &v
}

func (o ImportMetadataResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImportMetadataResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ImportOperationId) {
		toSerialize["importOperationId"] = o.ImportOperationId
	}
	return toSerialize, nil
}

type NullableImportMetadataResult struct {
	value *ImportMetadataResult
	isSet bool
}

func (v NullableImportMetadataResult) Get() *ImportMetadataResult {
	return v.value
}

func (v *NullableImportMetadataResult) Set(val *ImportMetadataResult) {
	v.value = val
	v.isSet = true
}

func (v NullableImportMetadataResult) IsSet() bool {
	return v.isSet
}

func (v *NullableImportMetadataResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportMetadataResult(val *ImportMetadataResult) *NullableImportMetadataResult {
	return &NullableImportMetadataResult{value: val, isSet: true}
}

func (v NullableImportMetadataResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportMetadataResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


