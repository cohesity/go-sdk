/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the NetappObjectParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetappObjectParams{}

// NetappObjectParams Specifies the common parameters for Netapp objects.
type NetappObjectParams struct {
	// Specifies a list of NAS mount protocols supported by this object.
	SupportedNasMountProtocols []string `json:"supportedNasMountProtocols,omitempty"`
	// Specifies the extended style of a NetApp volume.
	VolumeExtendedStyle NullableString `json:"volumeExtendedStyle,omitempty"`
	// Specifies the Netapp volume type.
	VolumeType NullableString `json:"volumeType,omitempty"`
}

// NewNetappObjectParams instantiates a new NetappObjectParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetappObjectParams() *NetappObjectParams {
	this := NetappObjectParams{}
	return &this
}

// NewNetappObjectParamsWithDefaults instantiates a new NetappObjectParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetappObjectParamsWithDefaults() *NetappObjectParams {
	this := NetappObjectParams{}
	return &this
}

// GetSupportedNasMountProtocols returns the SupportedNasMountProtocols field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetappObjectParams) GetSupportedNasMountProtocols() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.SupportedNasMountProtocols
}

// GetSupportedNasMountProtocolsOk returns a tuple with the SupportedNasMountProtocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetappObjectParams) GetSupportedNasMountProtocolsOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedNasMountProtocols) {
		return nil, false
	}
	return o.SupportedNasMountProtocols, true
}

// HasSupportedNasMountProtocols returns a boolean if a field has been set.
func (o *NetappObjectParams) HasSupportedNasMountProtocols() bool {
	if o != nil && !IsNil(o.SupportedNasMountProtocols) {
		return true
	}

	return false
}

// SetSupportedNasMountProtocols gets a reference to the given []string and assigns it to the SupportedNasMountProtocols field.
func (o *NetappObjectParams) SetSupportedNasMountProtocols(v []string) {
	o.SupportedNasMountProtocols = v
}

// GetVolumeExtendedStyle returns the VolumeExtendedStyle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetappObjectParams) GetVolumeExtendedStyle() string {
	if o == nil || IsNil(o.VolumeExtendedStyle.Get()) {
		var ret string
		return ret
	}
	return *o.VolumeExtendedStyle.Get()
}

// GetVolumeExtendedStyleOk returns a tuple with the VolumeExtendedStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetappObjectParams) GetVolumeExtendedStyleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeExtendedStyle.Get(), o.VolumeExtendedStyle.IsSet()
}

// HasVolumeExtendedStyle returns a boolean if a field has been set.
func (o *NetappObjectParams) HasVolumeExtendedStyle() bool {
	if o != nil && o.VolumeExtendedStyle.IsSet() {
		return true
	}

	return false
}

// SetVolumeExtendedStyle gets a reference to the given NullableString and assigns it to the VolumeExtendedStyle field.
func (o *NetappObjectParams) SetVolumeExtendedStyle(v string) {
	o.VolumeExtendedStyle.Set(&v)
}
// SetVolumeExtendedStyleNil sets the value for VolumeExtendedStyle to be an explicit nil
func (o *NetappObjectParams) SetVolumeExtendedStyleNil() {
	o.VolumeExtendedStyle.Set(nil)
}

// UnsetVolumeExtendedStyle ensures that no value is present for VolumeExtendedStyle, not even an explicit nil
func (o *NetappObjectParams) UnsetVolumeExtendedStyle() {
	o.VolumeExtendedStyle.Unset()
}

// GetVolumeType returns the VolumeType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetappObjectParams) GetVolumeType() string {
	if o == nil || IsNil(o.VolumeType.Get()) {
		var ret string
		return ret
	}
	return *o.VolumeType.Get()
}

// GetVolumeTypeOk returns a tuple with the VolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetappObjectParams) GetVolumeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeType.Get(), o.VolumeType.IsSet()
}

// HasVolumeType returns a boolean if a field has been set.
func (o *NetappObjectParams) HasVolumeType() bool {
	if o != nil && o.VolumeType.IsSet() {
		return true
	}

	return false
}

// SetVolumeType gets a reference to the given NullableString and assigns it to the VolumeType field.
func (o *NetappObjectParams) SetVolumeType(v string) {
	o.VolumeType.Set(&v)
}
// SetVolumeTypeNil sets the value for VolumeType to be an explicit nil
func (o *NetappObjectParams) SetVolumeTypeNil() {
	o.VolumeType.Set(nil)
}

// UnsetVolumeType ensures that no value is present for VolumeType, not even an explicit nil
func (o *NetappObjectParams) UnsetVolumeType() {
	o.VolumeType.Unset()
}

func (o NetappObjectParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetappObjectParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SupportedNasMountProtocols != nil {
		toSerialize["supportedNasMountProtocols"] = o.SupportedNasMountProtocols
	}
	if o.VolumeExtendedStyle.IsSet() {
		toSerialize["volumeExtendedStyle"] = o.VolumeExtendedStyle.Get()
	}
	if o.VolumeType.IsSet() {
		toSerialize["volumeType"] = o.VolumeType.Get()
	}
	return toSerialize, nil
}

type NullableNetappObjectParams struct {
	value *NetappObjectParams
	isSet bool
}

func (v NullableNetappObjectParams) Get() *NetappObjectParams {
	return v.value
}

func (v *NullableNetappObjectParams) Set(val *NetappObjectParams) {
	v.value = val
	v.isSet = true
}

func (v NullableNetappObjectParams) IsSet() bool {
	return v.isSet
}

func (v *NullableNetappObjectParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetappObjectParams(val *NetappObjectParams) *NullableNetappObjectParams {
	return &NullableNetappObjectParams{value: val, isSet: true}
}

func (v NullableNetappObjectParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetappObjectParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


