/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the SystemRecoveryParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemRecoveryParams{}

// SystemRecoveryParams Specifies the parameters to perform a system recovery
type SystemRecoveryParams struct {
	// Specifies the path to the recovery view.
	FullNasPath NullableString `json:"fullNasPath,omitempty"`
}

// NewSystemRecoveryParams instantiates a new SystemRecoveryParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemRecoveryParams() *SystemRecoveryParams {
	this := SystemRecoveryParams{}
	return &this
}

// NewSystemRecoveryParamsWithDefaults instantiates a new SystemRecoveryParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemRecoveryParamsWithDefaults() *SystemRecoveryParams {
	this := SystemRecoveryParams{}
	return &this
}

// GetFullNasPath returns the FullNasPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemRecoveryParams) GetFullNasPath() string {
	if o == nil || IsNil(o.FullNasPath.Get()) {
		var ret string
		return ret
	}
	return *o.FullNasPath.Get()
}

// GetFullNasPathOk returns a tuple with the FullNasPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemRecoveryParams) GetFullNasPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FullNasPath.Get(), o.FullNasPath.IsSet()
}

// HasFullNasPath returns a boolean if a field has been set.
func (o *SystemRecoveryParams) HasFullNasPath() bool {
	if o != nil && o.FullNasPath.IsSet() {
		return true
	}

	return false
}

// SetFullNasPath gets a reference to the given NullableString and assigns it to the FullNasPath field.
func (o *SystemRecoveryParams) SetFullNasPath(v string) {
	o.FullNasPath.Set(&v)
}
// SetFullNasPathNil sets the value for FullNasPath to be an explicit nil
func (o *SystemRecoveryParams) SetFullNasPathNil() {
	o.FullNasPath.Set(nil)
}

// UnsetFullNasPath ensures that no value is present for FullNasPath, not even an explicit nil
func (o *SystemRecoveryParams) UnsetFullNasPath() {
	o.FullNasPath.Unset()
}

func (o SystemRecoveryParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemRecoveryParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FullNasPath.IsSet() {
		toSerialize["fullNasPath"] = o.FullNasPath.Get()
	}
	return toSerialize, nil
}

type NullableSystemRecoveryParams struct {
	value *SystemRecoveryParams
	isSet bool
}

func (v NullableSystemRecoveryParams) Get() *SystemRecoveryParams {
	return v.value
}

func (v *NullableSystemRecoveryParams) Set(val *SystemRecoveryParams) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemRecoveryParams) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemRecoveryParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemRecoveryParams(val *SystemRecoveryParams) *NullableSystemRecoveryParams {
	return &NullableSystemRecoveryParams{value: val, isSet: true}
}

func (v NullableSystemRecoveryParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemRecoveryParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


