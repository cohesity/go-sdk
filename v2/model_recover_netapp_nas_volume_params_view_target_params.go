/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the RecoverNetappNasVolumeParamsViewTargetParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecoverNetappNasVolumeParamsViewTargetParams{}

// RecoverNetappNasVolumeParamsViewTargetParams Specifies the params for a Cohesity view recovery target.
type RecoverNetappNasVolumeParamsViewTargetParams struct {
	QosPolicy *NasQosPolicy `json:"qosPolicy,omitempty"`
	// Specifies the name of the view.
	ViewName NullableString `json:"viewName,omitempty"`
	VlanConfig *RecoveryVlanConfig `json:"vlanConfig,omitempty"`
}

// NewRecoverNetappNasVolumeParamsViewTargetParams instantiates a new RecoverNetappNasVolumeParamsViewTargetParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverNetappNasVolumeParamsViewTargetParams() *RecoverNetappNasVolumeParamsViewTargetParams {
	this := RecoverNetappNasVolumeParamsViewTargetParams{}
	return &this
}

// NewRecoverNetappNasVolumeParamsViewTargetParamsWithDefaults instantiates a new RecoverNetappNasVolumeParamsViewTargetParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverNetappNasVolumeParamsViewTargetParamsWithDefaults() *RecoverNetappNasVolumeParamsViewTargetParams {
	this := RecoverNetappNasVolumeParamsViewTargetParams{}
	return &this
}

// GetQosPolicy returns the QosPolicy field value if set, zero value otherwise.
func (o *RecoverNetappNasVolumeParamsViewTargetParams) GetQosPolicy() NasQosPolicy {
	if o == nil || IsNil(o.QosPolicy) {
		var ret NasQosPolicy
		return ret
	}
	return *o.QosPolicy
}

// GetQosPolicyOk returns a tuple with the QosPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverNetappNasVolumeParamsViewTargetParams) GetQosPolicyOk() (*NasQosPolicy, bool) {
	if o == nil || IsNil(o.QosPolicy) {
		return nil, false
	}
	return o.QosPolicy, true
}

// HasQosPolicy returns a boolean if a field has been set.
func (o *RecoverNetappNasVolumeParamsViewTargetParams) HasQosPolicy() bool {
	if o != nil && !IsNil(o.QosPolicy) {
		return true
	}

	return false
}

// SetQosPolicy gets a reference to the given NasQosPolicy and assigns it to the QosPolicy field.
func (o *RecoverNetappNasVolumeParamsViewTargetParams) SetQosPolicy(v NasQosPolicy) {
	o.QosPolicy = &v
}

// GetViewName returns the ViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverNetappNasVolumeParamsViewTargetParams) GetViewName() string {
	if o == nil || IsNil(o.ViewName.Get()) {
		var ret string
		return ret
	}
	return *o.ViewName.Get()
}

// GetViewNameOk returns a tuple with the ViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverNetappNasVolumeParamsViewTargetParams) GetViewNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ViewName.Get(), o.ViewName.IsSet()
}

// HasViewName returns a boolean if a field has been set.
func (o *RecoverNetappNasVolumeParamsViewTargetParams) HasViewName() bool {
	if o != nil && o.ViewName.IsSet() {
		return true
	}

	return false
}

// SetViewName gets a reference to the given NullableString and assigns it to the ViewName field.
func (o *RecoverNetappNasVolumeParamsViewTargetParams) SetViewName(v string) {
	o.ViewName.Set(&v)
}
// SetViewNameNil sets the value for ViewName to be an explicit nil
func (o *RecoverNetappNasVolumeParamsViewTargetParams) SetViewNameNil() {
	o.ViewName.Set(nil)
}

// UnsetViewName ensures that no value is present for ViewName, not even an explicit nil
func (o *RecoverNetappNasVolumeParamsViewTargetParams) UnsetViewName() {
	o.ViewName.Unset()
}

// GetVlanConfig returns the VlanConfig field value if set, zero value otherwise.
func (o *RecoverNetappNasVolumeParamsViewTargetParams) GetVlanConfig() RecoveryVlanConfig {
	if o == nil || IsNil(o.VlanConfig) {
		var ret RecoveryVlanConfig
		return ret
	}
	return *o.VlanConfig
}

// GetVlanConfigOk returns a tuple with the VlanConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverNetappNasVolumeParamsViewTargetParams) GetVlanConfigOk() (*RecoveryVlanConfig, bool) {
	if o == nil || IsNil(o.VlanConfig) {
		return nil, false
	}
	return o.VlanConfig, true
}

// HasVlanConfig returns a boolean if a field has been set.
func (o *RecoverNetappNasVolumeParamsViewTargetParams) HasVlanConfig() bool {
	if o != nil && !IsNil(o.VlanConfig) {
		return true
	}

	return false
}

// SetVlanConfig gets a reference to the given RecoveryVlanConfig and assigns it to the VlanConfig field.
func (o *RecoverNetappNasVolumeParamsViewTargetParams) SetVlanConfig(v RecoveryVlanConfig) {
	o.VlanConfig = &v
}

func (o RecoverNetappNasVolumeParamsViewTargetParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecoverNetappNasVolumeParamsViewTargetParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.QosPolicy) {
		toSerialize["qosPolicy"] = o.QosPolicy
	}
	if o.ViewName.IsSet() {
		toSerialize["viewName"] = o.ViewName.Get()
	}
	if !IsNil(o.VlanConfig) {
		toSerialize["vlanConfig"] = o.VlanConfig
	}
	return toSerialize, nil
}

type NullableRecoverNetappNasVolumeParamsViewTargetParams struct {
	value *RecoverNetappNasVolumeParamsViewTargetParams
	isSet bool
}

func (v NullableRecoverNetappNasVolumeParamsViewTargetParams) Get() *RecoverNetappNasVolumeParamsViewTargetParams {
	return v.value
}

func (v *NullableRecoverNetappNasVolumeParamsViewTargetParams) Set(val *RecoverNetappNasVolumeParamsViewTargetParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverNetappNasVolumeParamsViewTargetParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverNetappNasVolumeParamsViewTargetParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverNetappNasVolumeParamsViewTargetParams(val *RecoverNetappNasVolumeParamsViewTargetParams) *NullableRecoverNetappNasVolumeParamsViewTargetParams {
	return &NullableRecoverNetappNasVolumeParamsViewTargetParams{value: val, isSet: true}
}

func (v NullableRecoverNetappNasVolumeParamsViewTargetParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverNetappNasVolumeParamsViewTargetParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


