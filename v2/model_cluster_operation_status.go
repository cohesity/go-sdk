/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ClusterOperationStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterOperationStatus{}

// ClusterOperationStatus Specifies the cluster operation status.
type ClusterOperationStatus struct {
	// Specifies the attributes of the operation to provide more context for the operation. For example: Use name 'kPackageNameAttribute' and value '7.0.1-p1-2023Jul04-cc6d7c5f' to indicate package being installed when operation type involves installation of package such as 'Upgrade' or 'Patch'. Attribute list will differ based on the type of operation. 
	Attributes []ClusterOperationAttribute `json:"attributes,omitempty"`
	// Specifies the ID of the cluster.
	ClusterId *int64 `json:"clusterId,omitempty"`
	// Specifies the incarnation id of the cluster.
	ClusterIncarnationId *int64 `json:"clusterIncarnationId,omitempty"`
	// Specifies the error message for the operation.
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// Specifies the list of events that took place during the operation. 
	Events []OperationEvents `json:"events,omitempty"`
	// Specifies unix epoch finish time of operation.
	FinishTimeSeconds NullableInt64 `json:"finishTimeSeconds,omitempty"`
	// Specifies the result of running assessment on the cluster nodes.
	NodesAssessmentResults []NodeAssessmentResults `json:"nodesAssessmentResults,omitempty"`
	// Specifies the status of operation on the cluster nodes.
	NodesOperationStatus []ClusterNodeOperationStatus `json:"nodesOperationStatus,omitempty"`
	// Specifies the operation Id of cluster operation. 
	OperationId *string `json:"operationId,omitempty"`
	// Specifies the type of cluster operation. * `Destroy` indicates cluster destroy operation. * `Create` indicates cluster create operation. * `NodeAddition` indicates the operation to add nodes to the cluster. * `NodeRemoval` indicates a node removal operation. *  Operation types related to software update are detailed in   [UpdateClusterSoftware](#tag/Platform/operation/UpdateClusterSoftware). 
	OperationType *string `json:"operationType,omitempty"`
	// Specifies an approximate completion percentage for the operation. 
	Percentage *int32 `json:"percentage,omitempty"`
	// Specifies unix epoch start time of operation.
	StartTimeSeconds NullableInt64 `json:"startTimeSeconds,omitempty"`
	// Specifies the status of the operation. * 'Success' indicates the operation is successful. * 'Failed' indicates the operation failed due to an error. * 'InProgress' indicates the operation is in progress. 
	Status *string `json:"status,omitempty"`
	// Specifies an estimated number of seconds until the operation is complete. 
	TimeRemainingSeconds *int64 `json:"timeRemainingSeconds,omitempty"`
}

// NewClusterOperationStatus instantiates a new ClusterOperationStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterOperationStatus() *ClusterOperationStatus {
	this := ClusterOperationStatus{}
	return &this
}

// NewClusterOperationStatusWithDefaults instantiates a new ClusterOperationStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterOperationStatusWithDefaults() *ClusterOperationStatus {
	this := ClusterOperationStatus{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *ClusterOperationStatus) GetAttributes() []ClusterOperationAttribute {
	if o == nil || IsNil(o.Attributes) {
		var ret []ClusterOperationAttribute
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOperationStatus) GetAttributesOk() ([]ClusterOperationAttribute, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *ClusterOperationStatus) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []ClusterOperationAttribute and assigns it to the Attributes field.
func (o *ClusterOperationStatus) SetAttributes(v []ClusterOperationAttribute) {
	o.Attributes = v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *ClusterOperationStatus) GetClusterId() int64 {
	if o == nil || IsNil(o.ClusterId) {
		var ret int64
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOperationStatus) GetClusterIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *ClusterOperationStatus) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given int64 and assigns it to the ClusterId field.
func (o *ClusterOperationStatus) SetClusterId(v int64) {
	o.ClusterId = &v
}

// GetClusterIncarnationId returns the ClusterIncarnationId field value if set, zero value otherwise.
func (o *ClusterOperationStatus) GetClusterIncarnationId() int64 {
	if o == nil || IsNil(o.ClusterIncarnationId) {
		var ret int64
		return ret
	}
	return *o.ClusterIncarnationId
}

// GetClusterIncarnationIdOk returns a tuple with the ClusterIncarnationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOperationStatus) GetClusterIncarnationIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ClusterIncarnationId) {
		return nil, false
	}
	return o.ClusterIncarnationId, true
}

// HasClusterIncarnationId returns a boolean if a field has been set.
func (o *ClusterOperationStatus) HasClusterIncarnationId() bool {
	if o != nil && !IsNil(o.ClusterIncarnationId) {
		return true
	}

	return false
}

// SetClusterIncarnationId gets a reference to the given int64 and assigns it to the ClusterIncarnationId field.
func (o *ClusterOperationStatus) SetClusterIncarnationId(v int64) {
	o.ClusterIncarnationId = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *ClusterOperationStatus) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOperationStatus) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *ClusterOperationStatus) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *ClusterOperationStatus) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *ClusterOperationStatus) GetEvents() []OperationEvents {
	if o == nil || IsNil(o.Events) {
		var ret []OperationEvents
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOperationStatus) GetEventsOk() ([]OperationEvents, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *ClusterOperationStatus) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []OperationEvents and assigns it to the Events field.
func (o *ClusterOperationStatus) SetEvents(v []OperationEvents) {
	o.Events = v
}

// GetFinishTimeSeconds returns the FinishTimeSeconds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOperationStatus) GetFinishTimeSeconds() int64 {
	if o == nil || IsNil(o.FinishTimeSeconds.Get()) {
		var ret int64
		return ret
	}
	return *o.FinishTimeSeconds.Get()
}

// GetFinishTimeSecondsOk returns a tuple with the FinishTimeSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOperationStatus) GetFinishTimeSecondsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.FinishTimeSeconds.Get(), o.FinishTimeSeconds.IsSet()
}

// HasFinishTimeSeconds returns a boolean if a field has been set.
func (o *ClusterOperationStatus) HasFinishTimeSeconds() bool {
	if o != nil && o.FinishTimeSeconds.IsSet() {
		return true
	}

	return false
}

// SetFinishTimeSeconds gets a reference to the given NullableInt64 and assigns it to the FinishTimeSeconds field.
func (o *ClusterOperationStatus) SetFinishTimeSeconds(v int64) {
	o.FinishTimeSeconds.Set(&v)
}
// SetFinishTimeSecondsNil sets the value for FinishTimeSeconds to be an explicit nil
func (o *ClusterOperationStatus) SetFinishTimeSecondsNil() {
	o.FinishTimeSeconds.Set(nil)
}

// UnsetFinishTimeSeconds ensures that no value is present for FinishTimeSeconds, not even an explicit nil
func (o *ClusterOperationStatus) UnsetFinishTimeSeconds() {
	o.FinishTimeSeconds.Unset()
}

// GetNodesAssessmentResults returns the NodesAssessmentResults field value if set, zero value otherwise.
func (o *ClusterOperationStatus) GetNodesAssessmentResults() []NodeAssessmentResults {
	if o == nil || IsNil(o.NodesAssessmentResults) {
		var ret []NodeAssessmentResults
		return ret
	}
	return o.NodesAssessmentResults
}

// GetNodesAssessmentResultsOk returns a tuple with the NodesAssessmentResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOperationStatus) GetNodesAssessmentResultsOk() ([]NodeAssessmentResults, bool) {
	if o == nil || IsNil(o.NodesAssessmentResults) {
		return nil, false
	}
	return o.NodesAssessmentResults, true
}

// HasNodesAssessmentResults returns a boolean if a field has been set.
func (o *ClusterOperationStatus) HasNodesAssessmentResults() bool {
	if o != nil && !IsNil(o.NodesAssessmentResults) {
		return true
	}

	return false
}

// SetNodesAssessmentResults gets a reference to the given []NodeAssessmentResults and assigns it to the NodesAssessmentResults field.
func (o *ClusterOperationStatus) SetNodesAssessmentResults(v []NodeAssessmentResults) {
	o.NodesAssessmentResults = v
}

// GetNodesOperationStatus returns the NodesOperationStatus field value if set, zero value otherwise.
func (o *ClusterOperationStatus) GetNodesOperationStatus() []ClusterNodeOperationStatus {
	if o == nil || IsNil(o.NodesOperationStatus) {
		var ret []ClusterNodeOperationStatus
		return ret
	}
	return o.NodesOperationStatus
}

// GetNodesOperationStatusOk returns a tuple with the NodesOperationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOperationStatus) GetNodesOperationStatusOk() ([]ClusterNodeOperationStatus, bool) {
	if o == nil || IsNil(o.NodesOperationStatus) {
		return nil, false
	}
	return o.NodesOperationStatus, true
}

// HasNodesOperationStatus returns a boolean if a field has been set.
func (o *ClusterOperationStatus) HasNodesOperationStatus() bool {
	if o != nil && !IsNil(o.NodesOperationStatus) {
		return true
	}

	return false
}

// SetNodesOperationStatus gets a reference to the given []ClusterNodeOperationStatus and assigns it to the NodesOperationStatus field.
func (o *ClusterOperationStatus) SetNodesOperationStatus(v []ClusterNodeOperationStatus) {
	o.NodesOperationStatus = v
}

// GetOperationId returns the OperationId field value if set, zero value otherwise.
func (o *ClusterOperationStatus) GetOperationId() string {
	if o == nil || IsNil(o.OperationId) {
		var ret string
		return ret
	}
	return *o.OperationId
}

// GetOperationIdOk returns a tuple with the OperationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOperationStatus) GetOperationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OperationId) {
		return nil, false
	}
	return o.OperationId, true
}

// HasOperationId returns a boolean if a field has been set.
func (o *ClusterOperationStatus) HasOperationId() bool {
	if o != nil && !IsNil(o.OperationId) {
		return true
	}

	return false
}

// SetOperationId gets a reference to the given string and assigns it to the OperationId field.
func (o *ClusterOperationStatus) SetOperationId(v string) {
	o.OperationId = &v
}

// GetOperationType returns the OperationType field value if set, zero value otherwise.
func (o *ClusterOperationStatus) GetOperationType() string {
	if o == nil || IsNil(o.OperationType) {
		var ret string
		return ret
	}
	return *o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOperationStatus) GetOperationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OperationType) {
		return nil, false
	}
	return o.OperationType, true
}

// HasOperationType returns a boolean if a field has been set.
func (o *ClusterOperationStatus) HasOperationType() bool {
	if o != nil && !IsNil(o.OperationType) {
		return true
	}

	return false
}

// SetOperationType gets a reference to the given string and assigns it to the OperationType field.
func (o *ClusterOperationStatus) SetOperationType(v string) {
	o.OperationType = &v
}

// GetPercentage returns the Percentage field value if set, zero value otherwise.
func (o *ClusterOperationStatus) GetPercentage() int32 {
	if o == nil || IsNil(o.Percentage) {
		var ret int32
		return ret
	}
	return *o.Percentage
}

// GetPercentageOk returns a tuple with the Percentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOperationStatus) GetPercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.Percentage) {
		return nil, false
	}
	return o.Percentage, true
}

// HasPercentage returns a boolean if a field has been set.
func (o *ClusterOperationStatus) HasPercentage() bool {
	if o != nil && !IsNil(o.Percentage) {
		return true
	}

	return false
}

// SetPercentage gets a reference to the given int32 and assigns it to the Percentage field.
func (o *ClusterOperationStatus) SetPercentage(v int32) {
	o.Percentage = &v
}

// GetStartTimeSeconds returns the StartTimeSeconds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOperationStatus) GetStartTimeSeconds() int64 {
	if o == nil || IsNil(o.StartTimeSeconds.Get()) {
		var ret int64
		return ret
	}
	return *o.StartTimeSeconds.Get()
}

// GetStartTimeSecondsOk returns a tuple with the StartTimeSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOperationStatus) GetStartTimeSecondsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartTimeSeconds.Get(), o.StartTimeSeconds.IsSet()
}

// HasStartTimeSeconds returns a boolean if a field has been set.
func (o *ClusterOperationStatus) HasStartTimeSeconds() bool {
	if o != nil && o.StartTimeSeconds.IsSet() {
		return true
	}

	return false
}

// SetStartTimeSeconds gets a reference to the given NullableInt64 and assigns it to the StartTimeSeconds field.
func (o *ClusterOperationStatus) SetStartTimeSeconds(v int64) {
	o.StartTimeSeconds.Set(&v)
}
// SetStartTimeSecondsNil sets the value for StartTimeSeconds to be an explicit nil
func (o *ClusterOperationStatus) SetStartTimeSecondsNil() {
	o.StartTimeSeconds.Set(nil)
}

// UnsetStartTimeSeconds ensures that no value is present for StartTimeSeconds, not even an explicit nil
func (o *ClusterOperationStatus) UnsetStartTimeSeconds() {
	o.StartTimeSeconds.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ClusterOperationStatus) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOperationStatus) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ClusterOperationStatus) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ClusterOperationStatus) SetStatus(v string) {
	o.Status = &v
}

// GetTimeRemainingSeconds returns the TimeRemainingSeconds field value if set, zero value otherwise.
func (o *ClusterOperationStatus) GetTimeRemainingSeconds() int64 {
	if o == nil || IsNil(o.TimeRemainingSeconds) {
		var ret int64
		return ret
	}
	return *o.TimeRemainingSeconds
}

// GetTimeRemainingSecondsOk returns a tuple with the TimeRemainingSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOperationStatus) GetTimeRemainingSecondsOk() (*int64, bool) {
	if o == nil || IsNil(o.TimeRemainingSeconds) {
		return nil, false
	}
	return o.TimeRemainingSeconds, true
}

// HasTimeRemainingSeconds returns a boolean if a field has been set.
func (o *ClusterOperationStatus) HasTimeRemainingSeconds() bool {
	if o != nil && !IsNil(o.TimeRemainingSeconds) {
		return true
	}

	return false
}

// SetTimeRemainingSeconds gets a reference to the given int64 and assigns it to the TimeRemainingSeconds field.
func (o *ClusterOperationStatus) SetTimeRemainingSeconds(v int64) {
	o.TimeRemainingSeconds = &v
}

func (o ClusterOperationStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterOperationStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.ClusterId) {
		toSerialize["clusterId"] = o.ClusterId
	}
	if !IsNil(o.ClusterIncarnationId) {
		toSerialize["clusterIncarnationId"] = o.ClusterIncarnationId
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	if o.FinishTimeSeconds.IsSet() {
		toSerialize["finishTimeSeconds"] = o.FinishTimeSeconds.Get()
	}
	if !IsNil(o.NodesAssessmentResults) {
		toSerialize["nodesAssessmentResults"] = o.NodesAssessmentResults
	}
	if !IsNil(o.NodesOperationStatus) {
		toSerialize["nodesOperationStatus"] = o.NodesOperationStatus
	}
	if !IsNil(o.OperationId) {
		toSerialize["operationId"] = o.OperationId
	}
	if !IsNil(o.OperationType) {
		toSerialize["operationType"] = o.OperationType
	}
	if !IsNil(o.Percentage) {
		toSerialize["percentage"] = o.Percentage
	}
	if o.StartTimeSeconds.IsSet() {
		toSerialize["startTimeSeconds"] = o.StartTimeSeconds.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TimeRemainingSeconds) {
		toSerialize["timeRemainingSeconds"] = o.TimeRemainingSeconds
	}
	return toSerialize, nil
}

type NullableClusterOperationStatus struct {
	value *ClusterOperationStatus
	isSet bool
}

func (v NullableClusterOperationStatus) Get() *ClusterOperationStatus {
	return v.value
}

func (v *NullableClusterOperationStatus) Set(val *ClusterOperationStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterOperationStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterOperationStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterOperationStatus(val *ClusterOperationStatus) *NullableClusterOperationStatus {
	return &NullableClusterOperationStatus{value: val, isSet: true}
}

func (v NullableClusterOperationStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterOperationStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


