/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the InitFailoverRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InitFailoverRequest{}

// InitFailoverRequest Specifies the failover request parameters to initiate a failover.
type InitFailoverRequest struct {
	// If this field is specified then protection groups will be looked up only for this specific environment
	ProtectionGroupEnvironment NullableString `json:"protectionGroupEnvironment,omitempty"`
	ReplicationCluster *FailoverReplicaCluster `json:"replicationCluster,omitempty"`
	SourceCluster *FailoverSourceCluster `json:"sourceCluster,omitempty"`
}

// NewInitFailoverRequest instantiates a new InitFailoverRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInitFailoverRequest() *InitFailoverRequest {
	this := InitFailoverRequest{}
	return &this
}

// NewInitFailoverRequestWithDefaults instantiates a new InitFailoverRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitFailoverRequestWithDefaults() *InitFailoverRequest {
	this := InitFailoverRequest{}
	return &this
}

// GetProtectionGroupEnvironment returns the ProtectionGroupEnvironment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InitFailoverRequest) GetProtectionGroupEnvironment() string {
	if o == nil || IsNil(o.ProtectionGroupEnvironment.Get()) {
		var ret string
		return ret
	}
	return *o.ProtectionGroupEnvironment.Get()
}

// GetProtectionGroupEnvironmentOk returns a tuple with the ProtectionGroupEnvironment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InitFailoverRequest) GetProtectionGroupEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProtectionGroupEnvironment.Get(), o.ProtectionGroupEnvironment.IsSet()
}

// HasProtectionGroupEnvironment returns a boolean if a field has been set.
func (o *InitFailoverRequest) HasProtectionGroupEnvironment() bool {
	if o != nil && o.ProtectionGroupEnvironment.IsSet() {
		return true
	}

	return false
}

// SetProtectionGroupEnvironment gets a reference to the given NullableString and assigns it to the ProtectionGroupEnvironment field.
func (o *InitFailoverRequest) SetProtectionGroupEnvironment(v string) {
	o.ProtectionGroupEnvironment.Set(&v)
}
// SetProtectionGroupEnvironmentNil sets the value for ProtectionGroupEnvironment to be an explicit nil
func (o *InitFailoverRequest) SetProtectionGroupEnvironmentNil() {
	o.ProtectionGroupEnvironment.Set(nil)
}

// UnsetProtectionGroupEnvironment ensures that no value is present for ProtectionGroupEnvironment, not even an explicit nil
func (o *InitFailoverRequest) UnsetProtectionGroupEnvironment() {
	o.ProtectionGroupEnvironment.Unset()
}

// GetReplicationCluster returns the ReplicationCluster field value if set, zero value otherwise.
func (o *InitFailoverRequest) GetReplicationCluster() FailoverReplicaCluster {
	if o == nil || IsNil(o.ReplicationCluster) {
		var ret FailoverReplicaCluster
		return ret
	}
	return *o.ReplicationCluster
}

// GetReplicationClusterOk returns a tuple with the ReplicationCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitFailoverRequest) GetReplicationClusterOk() (*FailoverReplicaCluster, bool) {
	if o == nil || IsNil(o.ReplicationCluster) {
		return nil, false
	}
	return o.ReplicationCluster, true
}

// HasReplicationCluster returns a boolean if a field has been set.
func (o *InitFailoverRequest) HasReplicationCluster() bool {
	if o != nil && !IsNil(o.ReplicationCluster) {
		return true
	}

	return false
}

// SetReplicationCluster gets a reference to the given FailoverReplicaCluster and assigns it to the ReplicationCluster field.
func (o *InitFailoverRequest) SetReplicationCluster(v FailoverReplicaCluster) {
	o.ReplicationCluster = &v
}

// GetSourceCluster returns the SourceCluster field value if set, zero value otherwise.
func (o *InitFailoverRequest) GetSourceCluster() FailoverSourceCluster {
	if o == nil || IsNil(o.SourceCluster) {
		var ret FailoverSourceCluster
		return ret
	}
	return *o.SourceCluster
}

// GetSourceClusterOk returns a tuple with the SourceCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitFailoverRequest) GetSourceClusterOk() (*FailoverSourceCluster, bool) {
	if o == nil || IsNil(o.SourceCluster) {
		return nil, false
	}
	return o.SourceCluster, true
}

// HasSourceCluster returns a boolean if a field has been set.
func (o *InitFailoverRequest) HasSourceCluster() bool {
	if o != nil && !IsNil(o.SourceCluster) {
		return true
	}

	return false
}

// SetSourceCluster gets a reference to the given FailoverSourceCluster and assigns it to the SourceCluster field.
func (o *InitFailoverRequest) SetSourceCluster(v FailoverSourceCluster) {
	o.SourceCluster = &v
}

func (o InitFailoverRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InitFailoverRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ProtectionGroupEnvironment.IsSet() {
		toSerialize["protectionGroupEnvironment"] = o.ProtectionGroupEnvironment.Get()
	}
	if !IsNil(o.ReplicationCluster) {
		toSerialize["replicationCluster"] = o.ReplicationCluster
	}
	if !IsNil(o.SourceCluster) {
		toSerialize["sourceCluster"] = o.SourceCluster
	}
	return toSerialize, nil
}

type NullableInitFailoverRequest struct {
	value *InitFailoverRequest
	isSet bool
}

func (v NullableInitFailoverRequest) Get() *InitFailoverRequest {
	return v.value
}

func (v *NullableInitFailoverRequest) Set(val *InitFailoverRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInitFailoverRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInitFailoverRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitFailoverRequest(val *InitFailoverRequest) *NullableInitFailoverRequest {
	return &NullableInitFailoverRequest{value: val, isSet: true}
}

func (v NullableInitFailoverRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitFailoverRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


