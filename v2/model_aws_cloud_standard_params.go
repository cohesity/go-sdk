/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AwsCloudStandardParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsCloudStandardParams{}

// AwsCloudStandardParams Specifies the parameters which are specific to AWS related External Targets with Cloud Type Standard.
type AwsCloudStandardParams struct {
	AuthenticationMethod *AwsAuthenticationMethodsParams `json:"authenticationMethod,omitempty"`
}

// NewAwsCloudStandardParams instantiates a new AwsCloudStandardParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsCloudStandardParams() *AwsCloudStandardParams {
	this := AwsCloudStandardParams{}
	return &this
}

// NewAwsCloudStandardParamsWithDefaults instantiates a new AwsCloudStandardParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsCloudStandardParamsWithDefaults() *AwsCloudStandardParams {
	this := AwsCloudStandardParams{}
	return &this
}

// GetAuthenticationMethod returns the AuthenticationMethod field value if set, zero value otherwise.
func (o *AwsCloudStandardParams) GetAuthenticationMethod() AwsAuthenticationMethodsParams {
	if o == nil || IsNil(o.AuthenticationMethod) {
		var ret AwsAuthenticationMethodsParams
		return ret
	}
	return *o.AuthenticationMethod
}

// GetAuthenticationMethodOk returns a tuple with the AuthenticationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsCloudStandardParams) GetAuthenticationMethodOk() (*AwsAuthenticationMethodsParams, bool) {
	if o == nil || IsNil(o.AuthenticationMethod) {
		return nil, false
	}
	return o.AuthenticationMethod, true
}

// HasAuthenticationMethod returns a boolean if a field has been set.
func (o *AwsCloudStandardParams) HasAuthenticationMethod() bool {
	if o != nil && !IsNil(o.AuthenticationMethod) {
		return true
	}

	return false
}

// SetAuthenticationMethod gets a reference to the given AwsAuthenticationMethodsParams and assigns it to the AuthenticationMethod field.
func (o *AwsCloudStandardParams) SetAuthenticationMethod(v AwsAuthenticationMethodsParams) {
	o.AuthenticationMethod = &v
}

func (o AwsCloudStandardParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsCloudStandardParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthenticationMethod) {
		toSerialize["authenticationMethod"] = o.AuthenticationMethod
	}
	return toSerialize, nil
}

type NullableAwsCloudStandardParams struct {
	value *AwsCloudStandardParams
	isSet bool
}

func (v NullableAwsCloudStandardParams) Get() *AwsCloudStandardParams {
	return v.value
}

func (v *NullableAwsCloudStandardParams) Set(val *AwsCloudStandardParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsCloudStandardParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsCloudStandardParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsCloudStandardParams(val *AwsCloudStandardParams) *NullableAwsCloudStandardParams {
	return &NullableAwsCloudStandardParams{value: val, isSet: true}
}

func (v NullableAwsCloudStandardParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsCloudStandardParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


