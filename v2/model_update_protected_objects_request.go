/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the UpdateProtectedObjectsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProtectedObjectsRequest{}

// UpdateProtectedObjectsRequest Specifies the request to update an object backup configuration.
type UpdateProtectedObjectsRequest struct {
	// Specifies whether currently executing object backup should abort if a blackout period specified by a policy starts. Available only if the selected policy has at least one blackout period. Default value is false.
	AbortInBlackouts NullableBool `json:"abortInBlackouts,omitempty"`
	// Specifies the end time in micro seconds for this Protection Group. If this is not specified, the Protection Group won't be ended.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	PolicyConfig *PolicyConfig `json:"policyConfig,omitempty"`
	// Specifies the unique id of the Protection Policy. The Policy settings will be attached with every object and will be used in backup.
	PolicyId NullableString `json:"policyId,omitempty"`
	// Specifies the priority for the objects backup.
	Priority NullableString `json:"priority,omitempty"`
	// Specifies whether object backup will be written to HDD or SSD.
	QosPolicy NullableString `json:"qosPolicy,omitempty"`
	// Specifies whether to skip Rigel for backup or not.
	SkipRigelForBackup NullableBool `json:"skipRigelForBackup,omitempty"`
	// Specifies the SLA parameters for list of objects.
	Sla []SlaRule `json:"sla,omitempty"`
	StartTime *TimeOfDay `json:"startTime,omitempty"`
	// Specifies the Storage Domain (View Box) ID where the object backup will be taken. This is not required if Cloud archive direct is benig used.
	StorageDomainId NullableInt64 `json:"storageDomainId,omitempty"`
	AwsParams *AwsObjectProtectionUpdateRequestParams `json:"awsParams,omitempty"`
	AzureParams *AzureObjectProtectionUpdateRequestParams `json:"azureParams,omitempty"`
	ElastifileParams *ElastifileObjectProtectionUpdateRequestParams `json:"elastifileParams,omitempty"`
	// Specifies the environment for current object.
	Environment NullableString `json:"environment,omitempty"`
	ExperimentalAdapterParams *ExperimentalAdapterObjectProtectionUpdateRequestParams `json:"experimentalAdapterParams,omitempty"`
	FlashbladeParams *FlashbladeObjectProtectionUpdateRequestParams `json:"flashbladeParams,omitempty"`
	GenericNasParams *GenericNasObjectProtectionUpdateRequestParams `json:"genericNasParams,omitempty"`
	GpfsParams *GpfsObjectProtectionUpdateRequestParams `json:"gpfsParams,omitempty"`
	HypervParams *HyperVObjectProtectionUpdateRequestParams `json:"hypervParams,omitempty"`
	IsilonParams *IsilonObjectProtectionUpdateRequestParams `json:"isilonParams,omitempty"`
	MssqlParams *MssqlObjectProtectionUpdateRequestParams `json:"mssqlParams,omitempty"`
	NetappParams *NetappObjectProtectionUpdateRequestParams `json:"netappParams,omitempty"`
	Office365Params *Office365ObjectProtectionUpdateRequestParams `json:"office365Params,omitempty"`
	OracleParams *OracleObjectProtectionUpdateRequestParams `json:"oracleParams,omitempty"`
	PhysicalParams *PhysicalObjectProtectionUpdateRequestParams `json:"physicalParams,omitempty"`
	SapHanaParams *SapHanaObjectProtectionUpdateRequestParams `json:"sapHanaParams,omitempty"`
	SfdcParams *SfdcObjectProtectionUpdateRequestParams `json:"sfdcParams,omitempty"`
	UdaParams *UdaObjectProtectionUpdateRequestParams `json:"udaParams,omitempty"`
	VmwareParams *VmwareObjectProtectionUpdateRequestParams `json:"vmwareParams,omitempty"`
}

// NewUpdateProtectedObjectsRequest instantiates a new UpdateProtectedObjectsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProtectedObjectsRequest() *UpdateProtectedObjectsRequest {
	this := UpdateProtectedObjectsRequest{}
	return &this
}

// NewUpdateProtectedObjectsRequestWithDefaults instantiates a new UpdateProtectedObjectsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProtectedObjectsRequestWithDefaults() *UpdateProtectedObjectsRequest {
	this := UpdateProtectedObjectsRequest{}
	return &this
}

// GetAbortInBlackouts returns the AbortInBlackouts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectedObjectsRequest) GetAbortInBlackouts() bool {
	if o == nil || IsNil(o.AbortInBlackouts.Get()) {
		var ret bool
		return ret
	}
	return *o.AbortInBlackouts.Get()
}

// GetAbortInBlackoutsOk returns a tuple with the AbortInBlackouts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectedObjectsRequest) GetAbortInBlackoutsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AbortInBlackouts.Get(), o.AbortInBlackouts.IsSet()
}

// HasAbortInBlackouts returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasAbortInBlackouts() bool {
	if o != nil && o.AbortInBlackouts.IsSet() {
		return true
	}

	return false
}

// SetAbortInBlackouts gets a reference to the given NullableBool and assigns it to the AbortInBlackouts field.
func (o *UpdateProtectedObjectsRequest) SetAbortInBlackouts(v bool) {
	o.AbortInBlackouts.Set(&v)
}
// SetAbortInBlackoutsNil sets the value for AbortInBlackouts to be an explicit nil
func (o *UpdateProtectedObjectsRequest) SetAbortInBlackoutsNil() {
	o.AbortInBlackouts.Set(nil)
}

// UnsetAbortInBlackouts ensures that no value is present for AbortInBlackouts, not even an explicit nil
func (o *UpdateProtectedObjectsRequest) UnsetAbortInBlackouts() {
	o.AbortInBlackouts.Unset()
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectedObjectsRequest) GetEndTimeUsecs() int64 {
	if o == nil || IsNil(o.EndTimeUsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectedObjectsRequest) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *UpdateProtectedObjectsRequest) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *UpdateProtectedObjectsRequest) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *UpdateProtectedObjectsRequest) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetPolicyConfig returns the PolicyConfig field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetPolicyConfig() PolicyConfig {
	if o == nil || IsNil(o.PolicyConfig) {
		var ret PolicyConfig
		return ret
	}
	return *o.PolicyConfig
}

// GetPolicyConfigOk returns a tuple with the PolicyConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetPolicyConfigOk() (*PolicyConfig, bool) {
	if o == nil || IsNil(o.PolicyConfig) {
		return nil, false
	}
	return o.PolicyConfig, true
}

// HasPolicyConfig returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasPolicyConfig() bool {
	if o != nil && !IsNil(o.PolicyConfig) {
		return true
	}

	return false
}

// SetPolicyConfig gets a reference to the given PolicyConfig and assigns it to the PolicyConfig field.
func (o *UpdateProtectedObjectsRequest) SetPolicyConfig(v PolicyConfig) {
	o.PolicyConfig = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectedObjectsRequest) GetPolicyId() string {
	if o == nil || IsNil(o.PolicyId.Get()) {
		var ret string
		return ret
	}
	return *o.PolicyId.Get()
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectedObjectsRequest) GetPolicyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolicyId.Get(), o.PolicyId.IsSet()
}

// HasPolicyId returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasPolicyId() bool {
	if o != nil && o.PolicyId.IsSet() {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given NullableString and assigns it to the PolicyId field.
func (o *UpdateProtectedObjectsRequest) SetPolicyId(v string) {
	o.PolicyId.Set(&v)
}
// SetPolicyIdNil sets the value for PolicyId to be an explicit nil
func (o *UpdateProtectedObjectsRequest) SetPolicyIdNil() {
	o.PolicyId.Set(nil)
}

// UnsetPolicyId ensures that no value is present for PolicyId, not even an explicit nil
func (o *UpdateProtectedObjectsRequest) UnsetPolicyId() {
	o.PolicyId.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectedObjectsRequest) GetPriority() string {
	if o == nil || IsNil(o.Priority.Get()) {
		var ret string
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectedObjectsRequest) GetPriorityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableString and assigns it to the Priority field.
func (o *UpdateProtectedObjectsRequest) SetPriority(v string) {
	o.Priority.Set(&v)
}
// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *UpdateProtectedObjectsRequest) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *UpdateProtectedObjectsRequest) UnsetPriority() {
	o.Priority.Unset()
}

// GetQosPolicy returns the QosPolicy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectedObjectsRequest) GetQosPolicy() string {
	if o == nil || IsNil(o.QosPolicy.Get()) {
		var ret string
		return ret
	}
	return *o.QosPolicy.Get()
}

// GetQosPolicyOk returns a tuple with the QosPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectedObjectsRequest) GetQosPolicyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.QosPolicy.Get(), o.QosPolicy.IsSet()
}

// HasQosPolicy returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasQosPolicy() bool {
	if o != nil && o.QosPolicy.IsSet() {
		return true
	}

	return false
}

// SetQosPolicy gets a reference to the given NullableString and assigns it to the QosPolicy field.
func (o *UpdateProtectedObjectsRequest) SetQosPolicy(v string) {
	o.QosPolicy.Set(&v)
}
// SetQosPolicyNil sets the value for QosPolicy to be an explicit nil
func (o *UpdateProtectedObjectsRequest) SetQosPolicyNil() {
	o.QosPolicy.Set(nil)
}

// UnsetQosPolicy ensures that no value is present for QosPolicy, not even an explicit nil
func (o *UpdateProtectedObjectsRequest) UnsetQosPolicy() {
	o.QosPolicy.Unset()
}

// GetSkipRigelForBackup returns the SkipRigelForBackup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectedObjectsRequest) GetSkipRigelForBackup() bool {
	if o == nil || IsNil(o.SkipRigelForBackup.Get()) {
		var ret bool
		return ret
	}
	return *o.SkipRigelForBackup.Get()
}

// GetSkipRigelForBackupOk returns a tuple with the SkipRigelForBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectedObjectsRequest) GetSkipRigelForBackupOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SkipRigelForBackup.Get(), o.SkipRigelForBackup.IsSet()
}

// HasSkipRigelForBackup returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasSkipRigelForBackup() bool {
	if o != nil && o.SkipRigelForBackup.IsSet() {
		return true
	}

	return false
}

// SetSkipRigelForBackup gets a reference to the given NullableBool and assigns it to the SkipRigelForBackup field.
func (o *UpdateProtectedObjectsRequest) SetSkipRigelForBackup(v bool) {
	o.SkipRigelForBackup.Set(&v)
}
// SetSkipRigelForBackupNil sets the value for SkipRigelForBackup to be an explicit nil
func (o *UpdateProtectedObjectsRequest) SetSkipRigelForBackupNil() {
	o.SkipRigelForBackup.Set(nil)
}

// UnsetSkipRigelForBackup ensures that no value is present for SkipRigelForBackup, not even an explicit nil
func (o *UpdateProtectedObjectsRequest) UnsetSkipRigelForBackup() {
	o.SkipRigelForBackup.Unset()
}

// GetSla returns the Sla field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectedObjectsRequest) GetSla() []SlaRule {
	if o == nil {
		var ret []SlaRule
		return ret
	}
	return o.Sla
}

// GetSlaOk returns a tuple with the Sla field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectedObjectsRequest) GetSlaOk() ([]SlaRule, bool) {
	if o == nil || IsNil(o.Sla) {
		return nil, false
	}
	return o.Sla, true
}

// HasSla returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasSla() bool {
	if o != nil && !IsNil(o.Sla) {
		return true
	}

	return false
}

// SetSla gets a reference to the given []SlaRule and assigns it to the Sla field.
func (o *UpdateProtectedObjectsRequest) SetSla(v []SlaRule) {
	o.Sla = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetStartTime() TimeOfDay {
	if o == nil || IsNil(o.StartTime) {
		var ret TimeOfDay
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetStartTimeOk() (*TimeOfDay, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given TimeOfDay and assigns it to the StartTime field.
func (o *UpdateProtectedObjectsRequest) SetStartTime(v TimeOfDay) {
	o.StartTime = &v
}

// GetStorageDomainId returns the StorageDomainId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectedObjectsRequest) GetStorageDomainId() int64 {
	if o == nil || IsNil(o.StorageDomainId.Get()) {
		var ret int64
		return ret
	}
	return *o.StorageDomainId.Get()
}

// GetStorageDomainIdOk returns a tuple with the StorageDomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectedObjectsRequest) GetStorageDomainIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageDomainId.Get(), o.StorageDomainId.IsSet()
}

// HasStorageDomainId returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasStorageDomainId() bool {
	if o != nil && o.StorageDomainId.IsSet() {
		return true
	}

	return false
}

// SetStorageDomainId gets a reference to the given NullableInt64 and assigns it to the StorageDomainId field.
func (o *UpdateProtectedObjectsRequest) SetStorageDomainId(v int64) {
	o.StorageDomainId.Set(&v)
}
// SetStorageDomainIdNil sets the value for StorageDomainId to be an explicit nil
func (o *UpdateProtectedObjectsRequest) SetStorageDomainIdNil() {
	o.StorageDomainId.Set(nil)
}

// UnsetStorageDomainId ensures that no value is present for StorageDomainId, not even an explicit nil
func (o *UpdateProtectedObjectsRequest) UnsetStorageDomainId() {
	o.StorageDomainId.Unset()
}

// GetAwsParams returns the AwsParams field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetAwsParams() AwsObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.AwsParams) {
		var ret AwsObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.AwsParams
}

// GetAwsParamsOk returns a tuple with the AwsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetAwsParamsOk() (*AwsObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.AwsParams) {
		return nil, false
	}
	return o.AwsParams, true
}

// HasAwsParams returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasAwsParams() bool {
	if o != nil && !IsNil(o.AwsParams) {
		return true
	}

	return false
}

// SetAwsParams gets a reference to the given AwsObjectProtectionUpdateRequestParams and assigns it to the AwsParams field.
func (o *UpdateProtectedObjectsRequest) SetAwsParams(v AwsObjectProtectionUpdateRequestParams) {
	o.AwsParams = &v
}

// GetAzureParams returns the AzureParams field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetAzureParams() AzureObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.AzureParams) {
		var ret AzureObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.AzureParams
}

// GetAzureParamsOk returns a tuple with the AzureParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetAzureParamsOk() (*AzureObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.AzureParams) {
		return nil, false
	}
	return o.AzureParams, true
}

// HasAzureParams returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasAzureParams() bool {
	if o != nil && !IsNil(o.AzureParams) {
		return true
	}

	return false
}

// SetAzureParams gets a reference to the given AzureObjectProtectionUpdateRequestParams and assigns it to the AzureParams field.
func (o *UpdateProtectedObjectsRequest) SetAzureParams(v AzureObjectProtectionUpdateRequestParams) {
	o.AzureParams = &v
}

// GetElastifileParams returns the ElastifileParams field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetElastifileParams() ElastifileObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.ElastifileParams) {
		var ret ElastifileObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.ElastifileParams
}

// GetElastifileParamsOk returns a tuple with the ElastifileParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetElastifileParamsOk() (*ElastifileObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.ElastifileParams) {
		return nil, false
	}
	return o.ElastifileParams, true
}

// HasElastifileParams returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasElastifileParams() bool {
	if o != nil && !IsNil(o.ElastifileParams) {
		return true
	}

	return false
}

// SetElastifileParams gets a reference to the given ElastifileObjectProtectionUpdateRequestParams and assigns it to the ElastifileParams field.
func (o *UpdateProtectedObjectsRequest) SetElastifileParams(v ElastifileObjectProtectionUpdateRequestParams) {
	o.ElastifileParams = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectedObjectsRequest) GetEnvironment() string {
	if o == nil || IsNil(o.Environment.Get()) {
		var ret string
		return ret
	}
	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectedObjectsRequest) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// HasEnvironment returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasEnvironment() bool {
	if o != nil && o.Environment.IsSet() {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given NullableString and assigns it to the Environment field.
func (o *UpdateProtectedObjectsRequest) SetEnvironment(v string) {
	o.Environment.Set(&v)
}
// SetEnvironmentNil sets the value for Environment to be an explicit nil
func (o *UpdateProtectedObjectsRequest) SetEnvironmentNil() {
	o.Environment.Set(nil)
}

// UnsetEnvironment ensures that no value is present for Environment, not even an explicit nil
func (o *UpdateProtectedObjectsRequest) UnsetEnvironment() {
	o.Environment.Unset()
}

// GetExperimentalAdapterParams returns the ExperimentalAdapterParams field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetExperimentalAdapterParams() ExperimentalAdapterObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.ExperimentalAdapterParams) {
		var ret ExperimentalAdapterObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.ExperimentalAdapterParams
}

// GetExperimentalAdapterParamsOk returns a tuple with the ExperimentalAdapterParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetExperimentalAdapterParamsOk() (*ExperimentalAdapterObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.ExperimentalAdapterParams) {
		return nil, false
	}
	return o.ExperimentalAdapterParams, true
}

// HasExperimentalAdapterParams returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasExperimentalAdapterParams() bool {
	if o != nil && !IsNil(o.ExperimentalAdapterParams) {
		return true
	}

	return false
}

// SetExperimentalAdapterParams gets a reference to the given ExperimentalAdapterObjectProtectionUpdateRequestParams and assigns it to the ExperimentalAdapterParams field.
func (o *UpdateProtectedObjectsRequest) SetExperimentalAdapterParams(v ExperimentalAdapterObjectProtectionUpdateRequestParams) {
	o.ExperimentalAdapterParams = &v
}

// GetFlashbladeParams returns the FlashbladeParams field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetFlashbladeParams() FlashbladeObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.FlashbladeParams) {
		var ret FlashbladeObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.FlashbladeParams
}

// GetFlashbladeParamsOk returns a tuple with the FlashbladeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetFlashbladeParamsOk() (*FlashbladeObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.FlashbladeParams) {
		return nil, false
	}
	return o.FlashbladeParams, true
}

// HasFlashbladeParams returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasFlashbladeParams() bool {
	if o != nil && !IsNil(o.FlashbladeParams) {
		return true
	}

	return false
}

// SetFlashbladeParams gets a reference to the given FlashbladeObjectProtectionUpdateRequestParams and assigns it to the FlashbladeParams field.
func (o *UpdateProtectedObjectsRequest) SetFlashbladeParams(v FlashbladeObjectProtectionUpdateRequestParams) {
	o.FlashbladeParams = &v
}

// GetGenericNasParams returns the GenericNasParams field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetGenericNasParams() GenericNasObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.GenericNasParams) {
		var ret GenericNasObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.GenericNasParams
}

// GetGenericNasParamsOk returns a tuple with the GenericNasParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetGenericNasParamsOk() (*GenericNasObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.GenericNasParams) {
		return nil, false
	}
	return o.GenericNasParams, true
}

// HasGenericNasParams returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasGenericNasParams() bool {
	if o != nil && !IsNil(o.GenericNasParams) {
		return true
	}

	return false
}

// SetGenericNasParams gets a reference to the given GenericNasObjectProtectionUpdateRequestParams and assigns it to the GenericNasParams field.
func (o *UpdateProtectedObjectsRequest) SetGenericNasParams(v GenericNasObjectProtectionUpdateRequestParams) {
	o.GenericNasParams = &v
}

// GetGpfsParams returns the GpfsParams field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetGpfsParams() GpfsObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.GpfsParams) {
		var ret GpfsObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.GpfsParams
}

// GetGpfsParamsOk returns a tuple with the GpfsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetGpfsParamsOk() (*GpfsObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.GpfsParams) {
		return nil, false
	}
	return o.GpfsParams, true
}

// HasGpfsParams returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasGpfsParams() bool {
	if o != nil && !IsNil(o.GpfsParams) {
		return true
	}

	return false
}

// SetGpfsParams gets a reference to the given GpfsObjectProtectionUpdateRequestParams and assigns it to the GpfsParams field.
func (o *UpdateProtectedObjectsRequest) SetGpfsParams(v GpfsObjectProtectionUpdateRequestParams) {
	o.GpfsParams = &v
}

// GetHypervParams returns the HypervParams field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetHypervParams() HyperVObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.HypervParams) {
		var ret HyperVObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.HypervParams
}

// GetHypervParamsOk returns a tuple with the HypervParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetHypervParamsOk() (*HyperVObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.HypervParams) {
		return nil, false
	}
	return o.HypervParams, true
}

// HasHypervParams returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasHypervParams() bool {
	if o != nil && !IsNil(o.HypervParams) {
		return true
	}

	return false
}

// SetHypervParams gets a reference to the given HyperVObjectProtectionUpdateRequestParams and assigns it to the HypervParams field.
func (o *UpdateProtectedObjectsRequest) SetHypervParams(v HyperVObjectProtectionUpdateRequestParams) {
	o.HypervParams = &v
}

// GetIsilonParams returns the IsilonParams field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetIsilonParams() IsilonObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.IsilonParams) {
		var ret IsilonObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.IsilonParams
}

// GetIsilonParamsOk returns a tuple with the IsilonParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetIsilonParamsOk() (*IsilonObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.IsilonParams) {
		return nil, false
	}
	return o.IsilonParams, true
}

// HasIsilonParams returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasIsilonParams() bool {
	if o != nil && !IsNil(o.IsilonParams) {
		return true
	}

	return false
}

// SetIsilonParams gets a reference to the given IsilonObjectProtectionUpdateRequestParams and assigns it to the IsilonParams field.
func (o *UpdateProtectedObjectsRequest) SetIsilonParams(v IsilonObjectProtectionUpdateRequestParams) {
	o.IsilonParams = &v
}

// GetMssqlParams returns the MssqlParams field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetMssqlParams() MssqlObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.MssqlParams) {
		var ret MssqlObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.MssqlParams
}

// GetMssqlParamsOk returns a tuple with the MssqlParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetMssqlParamsOk() (*MssqlObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.MssqlParams) {
		return nil, false
	}
	return o.MssqlParams, true
}

// HasMssqlParams returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasMssqlParams() bool {
	if o != nil && !IsNil(o.MssqlParams) {
		return true
	}

	return false
}

// SetMssqlParams gets a reference to the given MssqlObjectProtectionUpdateRequestParams and assigns it to the MssqlParams field.
func (o *UpdateProtectedObjectsRequest) SetMssqlParams(v MssqlObjectProtectionUpdateRequestParams) {
	o.MssqlParams = &v
}

// GetNetappParams returns the NetappParams field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetNetappParams() NetappObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.NetappParams) {
		var ret NetappObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.NetappParams
}

// GetNetappParamsOk returns a tuple with the NetappParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetNetappParamsOk() (*NetappObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.NetappParams) {
		return nil, false
	}
	return o.NetappParams, true
}

// HasNetappParams returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasNetappParams() bool {
	if o != nil && !IsNil(o.NetappParams) {
		return true
	}

	return false
}

// SetNetappParams gets a reference to the given NetappObjectProtectionUpdateRequestParams and assigns it to the NetappParams field.
func (o *UpdateProtectedObjectsRequest) SetNetappParams(v NetappObjectProtectionUpdateRequestParams) {
	o.NetappParams = &v
}

// GetOffice365Params returns the Office365Params field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetOffice365Params() Office365ObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.Office365Params) {
		var ret Office365ObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.Office365Params
}

// GetOffice365ParamsOk returns a tuple with the Office365Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetOffice365ParamsOk() (*Office365ObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.Office365Params) {
		return nil, false
	}
	return o.Office365Params, true
}

// HasOffice365Params returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasOffice365Params() bool {
	if o != nil && !IsNil(o.Office365Params) {
		return true
	}

	return false
}

// SetOffice365Params gets a reference to the given Office365ObjectProtectionUpdateRequestParams and assigns it to the Office365Params field.
func (o *UpdateProtectedObjectsRequest) SetOffice365Params(v Office365ObjectProtectionUpdateRequestParams) {
	o.Office365Params = &v
}

// GetOracleParams returns the OracleParams field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetOracleParams() OracleObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.OracleParams) {
		var ret OracleObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.OracleParams
}

// GetOracleParamsOk returns a tuple with the OracleParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetOracleParamsOk() (*OracleObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.OracleParams) {
		return nil, false
	}
	return o.OracleParams, true
}

// HasOracleParams returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasOracleParams() bool {
	if o != nil && !IsNil(o.OracleParams) {
		return true
	}

	return false
}

// SetOracleParams gets a reference to the given OracleObjectProtectionUpdateRequestParams and assigns it to the OracleParams field.
func (o *UpdateProtectedObjectsRequest) SetOracleParams(v OracleObjectProtectionUpdateRequestParams) {
	o.OracleParams = &v
}

// GetPhysicalParams returns the PhysicalParams field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetPhysicalParams() PhysicalObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.PhysicalParams) {
		var ret PhysicalObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.PhysicalParams
}

// GetPhysicalParamsOk returns a tuple with the PhysicalParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetPhysicalParamsOk() (*PhysicalObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.PhysicalParams) {
		return nil, false
	}
	return o.PhysicalParams, true
}

// HasPhysicalParams returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasPhysicalParams() bool {
	if o != nil && !IsNil(o.PhysicalParams) {
		return true
	}

	return false
}

// SetPhysicalParams gets a reference to the given PhysicalObjectProtectionUpdateRequestParams and assigns it to the PhysicalParams field.
func (o *UpdateProtectedObjectsRequest) SetPhysicalParams(v PhysicalObjectProtectionUpdateRequestParams) {
	o.PhysicalParams = &v
}

// GetSapHanaParams returns the SapHanaParams field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetSapHanaParams() SapHanaObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.SapHanaParams) {
		var ret SapHanaObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.SapHanaParams
}

// GetSapHanaParamsOk returns a tuple with the SapHanaParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetSapHanaParamsOk() (*SapHanaObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.SapHanaParams) {
		return nil, false
	}
	return o.SapHanaParams, true
}

// HasSapHanaParams returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasSapHanaParams() bool {
	if o != nil && !IsNil(o.SapHanaParams) {
		return true
	}

	return false
}

// SetSapHanaParams gets a reference to the given SapHanaObjectProtectionUpdateRequestParams and assigns it to the SapHanaParams field.
func (o *UpdateProtectedObjectsRequest) SetSapHanaParams(v SapHanaObjectProtectionUpdateRequestParams) {
	o.SapHanaParams = &v
}

// GetSfdcParams returns the SfdcParams field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetSfdcParams() SfdcObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.SfdcParams) {
		var ret SfdcObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.SfdcParams
}

// GetSfdcParamsOk returns a tuple with the SfdcParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetSfdcParamsOk() (*SfdcObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.SfdcParams) {
		return nil, false
	}
	return o.SfdcParams, true
}

// HasSfdcParams returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasSfdcParams() bool {
	if o != nil && !IsNil(o.SfdcParams) {
		return true
	}

	return false
}

// SetSfdcParams gets a reference to the given SfdcObjectProtectionUpdateRequestParams and assigns it to the SfdcParams field.
func (o *UpdateProtectedObjectsRequest) SetSfdcParams(v SfdcObjectProtectionUpdateRequestParams) {
	o.SfdcParams = &v
}

// GetUdaParams returns the UdaParams field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetUdaParams() UdaObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.UdaParams) {
		var ret UdaObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.UdaParams
}

// GetUdaParamsOk returns a tuple with the UdaParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetUdaParamsOk() (*UdaObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.UdaParams) {
		return nil, false
	}
	return o.UdaParams, true
}

// HasUdaParams returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasUdaParams() bool {
	if o != nil && !IsNil(o.UdaParams) {
		return true
	}

	return false
}

// SetUdaParams gets a reference to the given UdaObjectProtectionUpdateRequestParams and assigns it to the UdaParams field.
func (o *UpdateProtectedObjectsRequest) SetUdaParams(v UdaObjectProtectionUpdateRequestParams) {
	o.UdaParams = &v
}

// GetVmwareParams returns the VmwareParams field value if set, zero value otherwise.
func (o *UpdateProtectedObjectsRequest) GetVmwareParams() VmwareObjectProtectionUpdateRequestParams {
	if o == nil || IsNil(o.VmwareParams) {
		var ret VmwareObjectProtectionUpdateRequestParams
		return ret
	}
	return *o.VmwareParams
}

// GetVmwareParamsOk returns a tuple with the VmwareParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectedObjectsRequest) GetVmwareParamsOk() (*VmwareObjectProtectionUpdateRequestParams, bool) {
	if o == nil || IsNil(o.VmwareParams) {
		return nil, false
	}
	return o.VmwareParams, true
}

// HasVmwareParams returns a boolean if a field has been set.
func (o *UpdateProtectedObjectsRequest) HasVmwareParams() bool {
	if o != nil && !IsNil(o.VmwareParams) {
		return true
	}

	return false
}

// SetVmwareParams gets a reference to the given VmwareObjectProtectionUpdateRequestParams and assigns it to the VmwareParams field.
func (o *UpdateProtectedObjectsRequest) SetVmwareParams(v VmwareObjectProtectionUpdateRequestParams) {
	o.VmwareParams = &v
}

func (o UpdateProtectedObjectsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProtectedObjectsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AbortInBlackouts.IsSet() {
		toSerialize["abortInBlackouts"] = o.AbortInBlackouts.Get()
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if !IsNil(o.PolicyConfig) {
		toSerialize["policyConfig"] = o.PolicyConfig
	}
	if o.PolicyId.IsSet() {
		toSerialize["policyId"] = o.PolicyId.Get()
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	if o.QosPolicy.IsSet() {
		toSerialize["qosPolicy"] = o.QosPolicy.Get()
	}
	if o.SkipRigelForBackup.IsSet() {
		toSerialize["skipRigelForBackup"] = o.SkipRigelForBackup.Get()
	}
	if o.Sla != nil {
		toSerialize["sla"] = o.Sla
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if o.StorageDomainId.IsSet() {
		toSerialize["storageDomainId"] = o.StorageDomainId.Get()
	}
	if !IsNil(o.AwsParams) {
		toSerialize["awsParams"] = o.AwsParams
	}
	if !IsNil(o.AzureParams) {
		toSerialize["azureParams"] = o.AzureParams
	}
	if !IsNil(o.ElastifileParams) {
		toSerialize["elastifileParams"] = o.ElastifileParams
	}
	if o.Environment.IsSet() {
		toSerialize["environment"] = o.Environment.Get()
	}
	if !IsNil(o.ExperimentalAdapterParams) {
		toSerialize["experimentalAdapterParams"] = o.ExperimentalAdapterParams
	}
	if !IsNil(o.FlashbladeParams) {
		toSerialize["flashbladeParams"] = o.FlashbladeParams
	}
	if !IsNil(o.GenericNasParams) {
		toSerialize["genericNasParams"] = o.GenericNasParams
	}
	if !IsNil(o.GpfsParams) {
		toSerialize["gpfsParams"] = o.GpfsParams
	}
	if !IsNil(o.HypervParams) {
		toSerialize["hypervParams"] = o.HypervParams
	}
	if !IsNil(o.IsilonParams) {
		toSerialize["isilonParams"] = o.IsilonParams
	}
	if !IsNil(o.MssqlParams) {
		toSerialize["mssqlParams"] = o.MssqlParams
	}
	if !IsNil(o.NetappParams) {
		toSerialize["netappParams"] = o.NetappParams
	}
	if !IsNil(o.Office365Params) {
		toSerialize["office365Params"] = o.Office365Params
	}
	if !IsNil(o.OracleParams) {
		toSerialize["oracleParams"] = o.OracleParams
	}
	if !IsNil(o.PhysicalParams) {
		toSerialize["physicalParams"] = o.PhysicalParams
	}
	if !IsNil(o.SapHanaParams) {
		toSerialize["sapHanaParams"] = o.SapHanaParams
	}
	if !IsNil(o.SfdcParams) {
		toSerialize["sfdcParams"] = o.SfdcParams
	}
	if !IsNil(o.UdaParams) {
		toSerialize["udaParams"] = o.UdaParams
	}
	if !IsNil(o.VmwareParams) {
		toSerialize["vmwareParams"] = o.VmwareParams
	}
	return toSerialize, nil
}

type NullableUpdateProtectedObjectsRequest struct {
	value *UpdateProtectedObjectsRequest
	isSet bool
}

func (v NullableUpdateProtectedObjectsRequest) Get() *UpdateProtectedObjectsRequest {
	return v.value
}

func (v *NullableUpdateProtectedObjectsRequest) Set(val *UpdateProtectedObjectsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProtectedObjectsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProtectedObjectsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProtectedObjectsRequest(val *UpdateProtectedObjectsRequest) *NullableUpdateProtectedObjectsRequest {
	return &NullableUpdateProtectedObjectsRequest{value: val, isSet: true}
}

func (v NullableUpdateProtectedObjectsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProtectedObjectsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


