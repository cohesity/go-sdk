/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AwsAuroraProtectionGroupParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsAuroraProtectionGroupParams{}

// AwsAuroraProtectionGroupParams Specifies the parameters which are specific to AWS Aurora related Protection Groups.
type AwsAuroraProtectionGroupParams struct {
	// Array of arrays of Aurora Tag Ids that specify aurora clusters to protect.
	AuroraTagIds [][]int64 `json:"auroraTagIds,omitempty"`
	// Array of arrays of RDS Tag Ids that specify aurora clusters to exclude.
	ExcludeAuroraTagIds [][]int64 `json:"excludeAuroraTagIds,omitempty"`
	// Specifies the objects to be excluded in the Protection Group.
	ExcludeObjectIds []int64 `json:"excludeObjectIds,omitempty"`
	// Specifies the objects to be included in the Protection Group.
	Objects []AwsAuroraProtectionGroupObjectParams `json:"objects,omitempty"`
	// Specifies the id of the parent of the objects.
	SourceId NullableInt64 `json:"sourceId,omitempty"`
	// Specifies the name of the parent of the objects.
	SourceName NullableString `json:"sourceName,omitempty"`
}

// NewAwsAuroraProtectionGroupParams instantiates a new AwsAuroraProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsAuroraProtectionGroupParams() *AwsAuroraProtectionGroupParams {
	this := AwsAuroraProtectionGroupParams{}
	return &this
}

// NewAwsAuroraProtectionGroupParamsWithDefaults instantiates a new AwsAuroraProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsAuroraProtectionGroupParamsWithDefaults() *AwsAuroraProtectionGroupParams {
	this := AwsAuroraProtectionGroupParams{}
	return &this
}

// GetAuroraTagIds returns the AuroraTagIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsAuroraProtectionGroupParams) GetAuroraTagIds() [][]int64 {
	if o == nil {
		var ret [][]int64
		return ret
	}
	return o.AuroraTagIds
}

// GetAuroraTagIdsOk returns a tuple with the AuroraTagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsAuroraProtectionGroupParams) GetAuroraTagIdsOk() ([][]int64, bool) {
	if o == nil || IsNil(o.AuroraTagIds) {
		return nil, false
	}
	return o.AuroraTagIds, true
}

// HasAuroraTagIds returns a boolean if a field has been set.
func (o *AwsAuroraProtectionGroupParams) HasAuroraTagIds() bool {
	if o != nil && !IsNil(o.AuroraTagIds) {
		return true
	}

	return false
}

// SetAuroraTagIds gets a reference to the given [][]int64 and assigns it to the AuroraTagIds field.
func (o *AwsAuroraProtectionGroupParams) SetAuroraTagIds(v [][]int64) {
	o.AuroraTagIds = v
}

// GetExcludeAuroraTagIds returns the ExcludeAuroraTagIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsAuroraProtectionGroupParams) GetExcludeAuroraTagIds() [][]int64 {
	if o == nil {
		var ret [][]int64
		return ret
	}
	return o.ExcludeAuroraTagIds
}

// GetExcludeAuroraTagIdsOk returns a tuple with the ExcludeAuroraTagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsAuroraProtectionGroupParams) GetExcludeAuroraTagIdsOk() ([][]int64, bool) {
	if o == nil || IsNil(o.ExcludeAuroraTagIds) {
		return nil, false
	}
	return o.ExcludeAuroraTagIds, true
}

// HasExcludeAuroraTagIds returns a boolean if a field has been set.
func (o *AwsAuroraProtectionGroupParams) HasExcludeAuroraTagIds() bool {
	if o != nil && !IsNil(o.ExcludeAuroraTagIds) {
		return true
	}

	return false
}

// SetExcludeAuroraTagIds gets a reference to the given [][]int64 and assigns it to the ExcludeAuroraTagIds field.
func (o *AwsAuroraProtectionGroupParams) SetExcludeAuroraTagIds(v [][]int64) {
	o.ExcludeAuroraTagIds = v
}

// GetExcludeObjectIds returns the ExcludeObjectIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsAuroraProtectionGroupParams) GetExcludeObjectIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.ExcludeObjectIds
}

// GetExcludeObjectIdsOk returns a tuple with the ExcludeObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsAuroraProtectionGroupParams) GetExcludeObjectIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.ExcludeObjectIds) {
		return nil, false
	}
	return o.ExcludeObjectIds, true
}

// HasExcludeObjectIds returns a boolean if a field has been set.
func (o *AwsAuroraProtectionGroupParams) HasExcludeObjectIds() bool {
	if o != nil && !IsNil(o.ExcludeObjectIds) {
		return true
	}

	return false
}

// SetExcludeObjectIds gets a reference to the given []int64 and assigns it to the ExcludeObjectIds field.
func (o *AwsAuroraProtectionGroupParams) SetExcludeObjectIds(v []int64) {
	o.ExcludeObjectIds = v
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *AwsAuroraProtectionGroupParams) GetObjects() []AwsAuroraProtectionGroupObjectParams {
	if o == nil || IsNil(o.Objects) {
		var ret []AwsAuroraProtectionGroupObjectParams
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsAuroraProtectionGroupParams) GetObjectsOk() ([]AwsAuroraProtectionGroupObjectParams, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *AwsAuroraProtectionGroupParams) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []AwsAuroraProtectionGroupObjectParams and assigns it to the Objects field.
func (o *AwsAuroraProtectionGroupParams) SetObjects(v []AwsAuroraProtectionGroupObjectParams) {
	o.Objects = v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsAuroraProtectionGroupParams) GetSourceId() int64 {
	if o == nil || IsNil(o.SourceId.Get()) {
		var ret int64
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsAuroraProtectionGroupParams) GetSourceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *AwsAuroraProtectionGroupParams) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableInt64 and assigns it to the SourceId field.
func (o *AwsAuroraProtectionGroupParams) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *AwsAuroraProtectionGroupParams) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *AwsAuroraProtectionGroupParams) UnsetSourceId() {
	o.SourceId.Unset()
}

// GetSourceName returns the SourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsAuroraProtectionGroupParams) GetSourceName() string {
	if o == nil || IsNil(o.SourceName.Get()) {
		var ret string
		return ret
	}
	return *o.SourceName.Get()
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsAuroraProtectionGroupParams) GetSourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceName.Get(), o.SourceName.IsSet()
}

// HasSourceName returns a boolean if a field has been set.
func (o *AwsAuroraProtectionGroupParams) HasSourceName() bool {
	if o != nil && o.SourceName.IsSet() {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given NullableString and assigns it to the SourceName field.
func (o *AwsAuroraProtectionGroupParams) SetSourceName(v string) {
	o.SourceName.Set(&v)
}
// SetSourceNameNil sets the value for SourceName to be an explicit nil
func (o *AwsAuroraProtectionGroupParams) SetSourceNameNil() {
	o.SourceName.Set(nil)
}

// UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil
func (o *AwsAuroraProtectionGroupParams) UnsetSourceName() {
	o.SourceName.Unset()
}

func (o AwsAuroraProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsAuroraProtectionGroupParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AuroraTagIds != nil {
		toSerialize["auroraTagIds"] = o.AuroraTagIds
	}
	if o.ExcludeAuroraTagIds != nil {
		toSerialize["excludeAuroraTagIds"] = o.ExcludeAuroraTagIds
	}
	if o.ExcludeObjectIds != nil {
		toSerialize["excludeObjectIds"] = o.ExcludeObjectIds
	}
	if !IsNil(o.Objects) {
		toSerialize["objects"] = o.Objects
	}
	if o.SourceId.IsSet() {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if o.SourceName.IsSet() {
		toSerialize["sourceName"] = o.SourceName.Get()
	}
	return toSerialize, nil
}

type NullableAwsAuroraProtectionGroupParams struct {
	value *AwsAuroraProtectionGroupParams
	isSet bool
}

func (v NullableAwsAuroraProtectionGroupParams) Get() *AwsAuroraProtectionGroupParams {
	return v.value
}

func (v *NullableAwsAuroraProtectionGroupParams) Set(val *AwsAuroraProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsAuroraProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsAuroraProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsAuroraProtectionGroupParams(val *AwsAuroraProtectionGroupParams) *NullableAwsAuroraProtectionGroupParams {
	return &NullableAwsAuroraProtectionGroupParams{value: val, isSet: true}
}

func (v NullableAwsAuroraProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsAuroraProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


