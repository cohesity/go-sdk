/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the HeliosTenant type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeliosTenant{}

// HeliosTenant Description of a Tenant and it's properties on various clusters.
type HeliosTenant struct {
	// Epoch time when tenant was created.
	CreatedAtTimeMsecs NullableInt64 `json:"createdAtTimeMsecs,omitempty"`
	// Epoch time when tenant was last updated.
	DeletedAtTimeMsecs NullableInt64 `json:"deletedAtTimeMsecs,omitempty"`
	// Description about the tenant.
	Description NullableString `json:"description,omitempty"`
	// The tenant id.
	Id NullableString `json:"id,omitempty"`
	// Epoch time when tenant was last updated.
	LastUpdatedAtTimeMsecs NullableInt64 `json:"lastUpdatedAtTimeMsecs,omitempty"`
	// Wether managed on helios or not.
	ManagedOnHelios NullableBool `json:"managedOnHelios,omitempty"`
	// Name of the Tenant
	Name NullableString `json:"name,omitempty"`
	// Current Status of the Tenant.
	Status NullableString `json:"status,omitempty"`
	// Details of tenant on each system that it is living.
	Systems []HeliosClusterTenant `json:"systems,omitempty"`
}

// NewHeliosTenant instantiates a new HeliosTenant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosTenant() *HeliosTenant {
	this := HeliosTenant{}
	return &this
}

// NewHeliosTenantWithDefaults instantiates a new HeliosTenant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosTenantWithDefaults() *HeliosTenant {
	this := HeliosTenant{}
	return &this
}

// GetCreatedAtTimeMsecs returns the CreatedAtTimeMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosTenant) GetCreatedAtTimeMsecs() int64 {
	if o == nil || IsNil(o.CreatedAtTimeMsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.CreatedAtTimeMsecs.Get()
}

// GetCreatedAtTimeMsecsOk returns a tuple with the CreatedAtTimeMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosTenant) GetCreatedAtTimeMsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAtTimeMsecs.Get(), o.CreatedAtTimeMsecs.IsSet()
}

// HasCreatedAtTimeMsecs returns a boolean if a field has been set.
func (o *HeliosTenant) HasCreatedAtTimeMsecs() bool {
	if o != nil && o.CreatedAtTimeMsecs.IsSet() {
		return true
	}

	return false
}

// SetCreatedAtTimeMsecs gets a reference to the given NullableInt64 and assigns it to the CreatedAtTimeMsecs field.
func (o *HeliosTenant) SetCreatedAtTimeMsecs(v int64) {
	o.CreatedAtTimeMsecs.Set(&v)
}
// SetCreatedAtTimeMsecsNil sets the value for CreatedAtTimeMsecs to be an explicit nil
func (o *HeliosTenant) SetCreatedAtTimeMsecsNil() {
	o.CreatedAtTimeMsecs.Set(nil)
}

// UnsetCreatedAtTimeMsecs ensures that no value is present for CreatedAtTimeMsecs, not even an explicit nil
func (o *HeliosTenant) UnsetCreatedAtTimeMsecs() {
	o.CreatedAtTimeMsecs.Unset()
}

// GetDeletedAtTimeMsecs returns the DeletedAtTimeMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosTenant) GetDeletedAtTimeMsecs() int64 {
	if o == nil || IsNil(o.DeletedAtTimeMsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.DeletedAtTimeMsecs.Get()
}

// GetDeletedAtTimeMsecsOk returns a tuple with the DeletedAtTimeMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosTenant) GetDeletedAtTimeMsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedAtTimeMsecs.Get(), o.DeletedAtTimeMsecs.IsSet()
}

// HasDeletedAtTimeMsecs returns a boolean if a field has been set.
func (o *HeliosTenant) HasDeletedAtTimeMsecs() bool {
	if o != nil && o.DeletedAtTimeMsecs.IsSet() {
		return true
	}

	return false
}

// SetDeletedAtTimeMsecs gets a reference to the given NullableInt64 and assigns it to the DeletedAtTimeMsecs field.
func (o *HeliosTenant) SetDeletedAtTimeMsecs(v int64) {
	o.DeletedAtTimeMsecs.Set(&v)
}
// SetDeletedAtTimeMsecsNil sets the value for DeletedAtTimeMsecs to be an explicit nil
func (o *HeliosTenant) SetDeletedAtTimeMsecsNil() {
	o.DeletedAtTimeMsecs.Set(nil)
}

// UnsetDeletedAtTimeMsecs ensures that no value is present for DeletedAtTimeMsecs, not even an explicit nil
func (o *HeliosTenant) UnsetDeletedAtTimeMsecs() {
	o.DeletedAtTimeMsecs.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosTenant) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosTenant) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *HeliosTenant) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *HeliosTenant) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *HeliosTenant) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *HeliosTenant) UnsetDescription() {
	o.Description.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosTenant) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosTenant) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *HeliosTenant) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *HeliosTenant) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *HeliosTenant) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *HeliosTenant) UnsetId() {
	o.Id.Unset()
}

// GetLastUpdatedAtTimeMsecs returns the LastUpdatedAtTimeMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosTenant) GetLastUpdatedAtTimeMsecs() int64 {
	if o == nil || IsNil(o.LastUpdatedAtTimeMsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.LastUpdatedAtTimeMsecs.Get()
}

// GetLastUpdatedAtTimeMsecsOk returns a tuple with the LastUpdatedAtTimeMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosTenant) GetLastUpdatedAtTimeMsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastUpdatedAtTimeMsecs.Get(), o.LastUpdatedAtTimeMsecs.IsSet()
}

// HasLastUpdatedAtTimeMsecs returns a boolean if a field has been set.
func (o *HeliosTenant) HasLastUpdatedAtTimeMsecs() bool {
	if o != nil && o.LastUpdatedAtTimeMsecs.IsSet() {
		return true
	}

	return false
}

// SetLastUpdatedAtTimeMsecs gets a reference to the given NullableInt64 and assigns it to the LastUpdatedAtTimeMsecs field.
func (o *HeliosTenant) SetLastUpdatedAtTimeMsecs(v int64) {
	o.LastUpdatedAtTimeMsecs.Set(&v)
}
// SetLastUpdatedAtTimeMsecsNil sets the value for LastUpdatedAtTimeMsecs to be an explicit nil
func (o *HeliosTenant) SetLastUpdatedAtTimeMsecsNil() {
	o.LastUpdatedAtTimeMsecs.Set(nil)
}

// UnsetLastUpdatedAtTimeMsecs ensures that no value is present for LastUpdatedAtTimeMsecs, not even an explicit nil
func (o *HeliosTenant) UnsetLastUpdatedAtTimeMsecs() {
	o.LastUpdatedAtTimeMsecs.Unset()
}

// GetManagedOnHelios returns the ManagedOnHelios field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosTenant) GetManagedOnHelios() bool {
	if o == nil || IsNil(o.ManagedOnHelios.Get()) {
		var ret bool
		return ret
	}
	return *o.ManagedOnHelios.Get()
}

// GetManagedOnHeliosOk returns a tuple with the ManagedOnHelios field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosTenant) GetManagedOnHeliosOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ManagedOnHelios.Get(), o.ManagedOnHelios.IsSet()
}

// HasManagedOnHelios returns a boolean if a field has been set.
func (o *HeliosTenant) HasManagedOnHelios() bool {
	if o != nil && o.ManagedOnHelios.IsSet() {
		return true
	}

	return false
}

// SetManagedOnHelios gets a reference to the given NullableBool and assigns it to the ManagedOnHelios field.
func (o *HeliosTenant) SetManagedOnHelios(v bool) {
	o.ManagedOnHelios.Set(&v)
}
// SetManagedOnHeliosNil sets the value for ManagedOnHelios to be an explicit nil
func (o *HeliosTenant) SetManagedOnHeliosNil() {
	o.ManagedOnHelios.Set(nil)
}

// UnsetManagedOnHelios ensures that no value is present for ManagedOnHelios, not even an explicit nil
func (o *HeliosTenant) UnsetManagedOnHelios() {
	o.ManagedOnHelios.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosTenant) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosTenant) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *HeliosTenant) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *HeliosTenant) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *HeliosTenant) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *HeliosTenant) UnsetName() {
	o.Name.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosTenant) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosTenant) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *HeliosTenant) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *HeliosTenant) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *HeliosTenant) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *HeliosTenant) UnsetStatus() {
	o.Status.Unset()
}

// GetSystems returns the Systems field value if set, zero value otherwise.
func (o *HeliosTenant) GetSystems() []HeliosClusterTenant {
	if o == nil || IsNil(o.Systems) {
		var ret []HeliosClusterTenant
		return ret
	}
	return o.Systems
}

// GetSystemsOk returns a tuple with the Systems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosTenant) GetSystemsOk() ([]HeliosClusterTenant, bool) {
	if o == nil || IsNil(o.Systems) {
		return nil, false
	}
	return o.Systems, true
}

// HasSystems returns a boolean if a field has been set.
func (o *HeliosTenant) HasSystems() bool {
	if o != nil && !IsNil(o.Systems) {
		return true
	}

	return false
}

// SetSystems gets a reference to the given []HeliosClusterTenant and assigns it to the Systems field.
func (o *HeliosTenant) SetSystems(v []HeliosClusterTenant) {
	o.Systems = v
}

func (o HeliosTenant) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeliosTenant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAtTimeMsecs.IsSet() {
		toSerialize["createdAtTimeMsecs"] = o.CreatedAtTimeMsecs.Get()
	}
	if o.DeletedAtTimeMsecs.IsSet() {
		toSerialize["deletedAtTimeMsecs"] = o.DeletedAtTimeMsecs.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.LastUpdatedAtTimeMsecs.IsSet() {
		toSerialize["lastUpdatedAtTimeMsecs"] = o.LastUpdatedAtTimeMsecs.Get()
	}
	if o.ManagedOnHelios.IsSet() {
		toSerialize["managedOnHelios"] = o.ManagedOnHelios.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if !IsNil(o.Systems) {
		toSerialize["systems"] = o.Systems
	}
	return toSerialize, nil
}

type NullableHeliosTenant struct {
	value *HeliosTenant
	isSet bool
}

func (v NullableHeliosTenant) Get() *HeliosTenant {
	return v.value
}

func (v *NullableHeliosTenant) Set(val *HeliosTenant) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosTenant) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosTenant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosTenant(val *HeliosTenant) *NullableHeliosTenant {
	return &NullableHeliosTenant{value: val, isSet: true}
}

func (v NullableHeliosTenant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosTenant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


