/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the HeliosAutoTierType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeliosAutoTierType{}

// HeliosAutoTierType Specifies the type of Tiers in Helios.
type HeliosAutoTierType struct {
	// Specifies the type of Tiers in Helios.
	HeliosAutoTierType *string `json:"heliosAutoTierType,omitempty"`
}

// NewHeliosAutoTierType instantiates a new HeliosAutoTierType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosAutoTierType() *HeliosAutoTierType {
	this := HeliosAutoTierType{}
	return &this
}

// NewHeliosAutoTierTypeWithDefaults instantiates a new HeliosAutoTierType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosAutoTierTypeWithDefaults() *HeliosAutoTierType {
	this := HeliosAutoTierType{}
	return &this
}

// GetHeliosAutoTierType returns the HeliosAutoTierType field value if set, zero value otherwise.
func (o *HeliosAutoTierType) GetHeliosAutoTierType() string {
	if o == nil || IsNil(o.HeliosAutoTierType) {
		var ret string
		return ret
	}
	return *o.HeliosAutoTierType
}

// GetHeliosAutoTierTypeOk returns a tuple with the HeliosAutoTierType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosAutoTierType) GetHeliosAutoTierTypeOk() (*string, bool) {
	if o == nil || IsNil(o.HeliosAutoTierType) {
		return nil, false
	}
	return o.HeliosAutoTierType, true
}

// HasHeliosAutoTierType returns a boolean if a field has been set.
func (o *HeliosAutoTierType) HasHeliosAutoTierType() bool {
	if o != nil && !IsNil(o.HeliosAutoTierType) {
		return true
	}

	return false
}

// SetHeliosAutoTierType gets a reference to the given string and assigns it to the HeliosAutoTierType field.
func (o *HeliosAutoTierType) SetHeliosAutoTierType(v string) {
	o.HeliosAutoTierType = &v
}

func (o HeliosAutoTierType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeliosAutoTierType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HeliosAutoTierType) {
		toSerialize["heliosAutoTierType"] = o.HeliosAutoTierType
	}
	return toSerialize, nil
}

type NullableHeliosAutoTierType struct {
	value *HeliosAutoTierType
	isSet bool
}

func (v NullableHeliosAutoTierType) Get() *HeliosAutoTierType {
	return v.value
}

func (v *NullableHeliosAutoTierType) Set(val *HeliosAutoTierType) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosAutoTierType) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosAutoTierType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosAutoTierType(val *HeliosAutoTierType) *NullableHeliosAutoTierType {
	return &NullableHeliosAutoTierType{value: val, isSet: true}
}

func (v NullableHeliosAutoTierType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosAutoTierType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


