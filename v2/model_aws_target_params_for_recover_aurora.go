/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AwsTargetParamsForRecoverAurora type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsTargetParamsForRecoverAurora{}

// AwsTargetParamsForRecoverAurora Specifies the parameters for an AWS recovery target.
type AwsTargetParamsForRecoverAurora struct {
	AuroraConfig NullableAwsTargetParamsForRecoverAuroraAuroraConfig `json:"auroraConfig,omitempty"`
	RecoveryTargetConfig NullableAwsTargetParamsForRecoverAuroraRecoveryTargetConfig `json:"recoveryTargetConfig,omitempty"`
}

// NewAwsTargetParamsForRecoverAurora instantiates a new AwsTargetParamsForRecoverAurora object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsTargetParamsForRecoverAurora() *AwsTargetParamsForRecoverAurora {
	this := AwsTargetParamsForRecoverAurora{}
	return &this
}

// NewAwsTargetParamsForRecoverAuroraWithDefaults instantiates a new AwsTargetParamsForRecoverAurora object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsTargetParamsForRecoverAuroraWithDefaults() *AwsTargetParamsForRecoverAurora {
	this := AwsTargetParamsForRecoverAurora{}
	return &this
}

// GetAuroraConfig returns the AuroraConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsTargetParamsForRecoverAurora) GetAuroraConfig() AwsTargetParamsForRecoverAuroraAuroraConfig {
	if o == nil || IsNil(o.AuroraConfig.Get()) {
		var ret AwsTargetParamsForRecoverAuroraAuroraConfig
		return ret
	}
	return *o.AuroraConfig.Get()
}

// GetAuroraConfigOk returns a tuple with the AuroraConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsTargetParamsForRecoverAurora) GetAuroraConfigOk() (*AwsTargetParamsForRecoverAuroraAuroraConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuroraConfig.Get(), o.AuroraConfig.IsSet()
}

// HasAuroraConfig returns a boolean if a field has been set.
func (o *AwsTargetParamsForRecoverAurora) HasAuroraConfig() bool {
	if o != nil && o.AuroraConfig.IsSet() {
		return true
	}

	return false
}

// SetAuroraConfig gets a reference to the given NullableAwsTargetParamsForRecoverAuroraAuroraConfig and assigns it to the AuroraConfig field.
func (o *AwsTargetParamsForRecoverAurora) SetAuroraConfig(v AwsTargetParamsForRecoverAuroraAuroraConfig) {
	o.AuroraConfig.Set(&v)
}
// SetAuroraConfigNil sets the value for AuroraConfig to be an explicit nil
func (o *AwsTargetParamsForRecoverAurora) SetAuroraConfigNil() {
	o.AuroraConfig.Set(nil)
}

// UnsetAuroraConfig ensures that no value is present for AuroraConfig, not even an explicit nil
func (o *AwsTargetParamsForRecoverAurora) UnsetAuroraConfig() {
	o.AuroraConfig.Unset()
}

// GetRecoveryTargetConfig returns the RecoveryTargetConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsTargetParamsForRecoverAurora) GetRecoveryTargetConfig() AwsTargetParamsForRecoverAuroraRecoveryTargetConfig {
	if o == nil || IsNil(o.RecoveryTargetConfig.Get()) {
		var ret AwsTargetParamsForRecoverAuroraRecoveryTargetConfig
		return ret
	}
	return *o.RecoveryTargetConfig.Get()
}

// GetRecoveryTargetConfigOk returns a tuple with the RecoveryTargetConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsTargetParamsForRecoverAurora) GetRecoveryTargetConfigOk() (*AwsTargetParamsForRecoverAuroraRecoveryTargetConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecoveryTargetConfig.Get(), o.RecoveryTargetConfig.IsSet()
}

// HasRecoveryTargetConfig returns a boolean if a field has been set.
func (o *AwsTargetParamsForRecoverAurora) HasRecoveryTargetConfig() bool {
	if o != nil && o.RecoveryTargetConfig.IsSet() {
		return true
	}

	return false
}

// SetRecoveryTargetConfig gets a reference to the given NullableAwsTargetParamsForRecoverAuroraRecoveryTargetConfig and assigns it to the RecoveryTargetConfig field.
func (o *AwsTargetParamsForRecoverAurora) SetRecoveryTargetConfig(v AwsTargetParamsForRecoverAuroraRecoveryTargetConfig) {
	o.RecoveryTargetConfig.Set(&v)
}
// SetRecoveryTargetConfigNil sets the value for RecoveryTargetConfig to be an explicit nil
func (o *AwsTargetParamsForRecoverAurora) SetRecoveryTargetConfigNil() {
	o.RecoveryTargetConfig.Set(nil)
}

// UnsetRecoveryTargetConfig ensures that no value is present for RecoveryTargetConfig, not even an explicit nil
func (o *AwsTargetParamsForRecoverAurora) UnsetRecoveryTargetConfig() {
	o.RecoveryTargetConfig.Unset()
}

func (o AwsTargetParamsForRecoverAurora) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsTargetParamsForRecoverAurora) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AuroraConfig.IsSet() {
		toSerialize["auroraConfig"] = o.AuroraConfig.Get()
	}
	if o.RecoveryTargetConfig.IsSet() {
		toSerialize["recoveryTargetConfig"] = o.RecoveryTargetConfig.Get()
	}
	return toSerialize, nil
}

type NullableAwsTargetParamsForRecoverAurora struct {
	value *AwsTargetParamsForRecoverAurora
	isSet bool
}

func (v NullableAwsTargetParamsForRecoverAurora) Get() *AwsTargetParamsForRecoverAurora {
	return v.value
}

func (v *NullableAwsTargetParamsForRecoverAurora) Set(val *AwsTargetParamsForRecoverAurora) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsTargetParamsForRecoverAurora) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsTargetParamsForRecoverAurora) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsTargetParamsForRecoverAurora(val *AwsTargetParamsForRecoverAurora) *NullableAwsTargetParamsForRecoverAurora {
	return &NullableAwsTargetParamsForRecoverAurora{value: val, isSet: true}
}

func (v NullableAwsTargetParamsForRecoverAurora) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsTargetParamsForRecoverAurora) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


