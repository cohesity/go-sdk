/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ConstructRestoreMetaInfoOracleParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConstructRestoreMetaInfoOracleParams{}

// ConstructRestoreMetaInfoOracleParams Params to fetch oracle restore meta info
type ConstructRestoreMetaInfoOracleParams struct {
	// Specifies the base directory of Oracle at destination.
	BaseDir NullableString `json:"baseDir,omitempty"`
	// Specifies the location to put the database files(datafiles, logfiles etc.)
	DbFileDestination NullableString `json:"dbFileDestination,omitempty"`
	// Specifies the name of the Oracle database that we restore to.
	DbName NullableString `json:"dbName,omitempty"`
	// Specifies the home directory of Oracle at destination.
	HomeDir NullableString `json:"homeDir,omitempty"`
	// Specifies whether operation is clone or not
	IsClone NullableBool `json:"isClone,omitempty"`
	// Specifies whether the recovery is of type Disaster Recovery.
	IsDisasterRecovery NullableBool `json:"isDisasterRecovery,omitempty"`
	// Specifies whether the operation is granular restore or not.
	IsGranularRestore NullableBool `json:"isGranularRestore,omitempty"`
	// Specifies whether the operation is recovery validation or not.
	IsRecoveryValidation NullableBool `json:"isRecoveryValidation,omitempty"`
}

// NewConstructRestoreMetaInfoOracleParams instantiates a new ConstructRestoreMetaInfoOracleParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConstructRestoreMetaInfoOracleParams() *ConstructRestoreMetaInfoOracleParams {
	this := ConstructRestoreMetaInfoOracleParams{}
	return &this
}

// NewConstructRestoreMetaInfoOracleParamsWithDefaults instantiates a new ConstructRestoreMetaInfoOracleParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConstructRestoreMetaInfoOracleParamsWithDefaults() *ConstructRestoreMetaInfoOracleParams {
	this := ConstructRestoreMetaInfoOracleParams{}
	return &this
}

// GetBaseDir returns the BaseDir field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConstructRestoreMetaInfoOracleParams) GetBaseDir() string {
	if o == nil || IsNil(o.BaseDir.Get()) {
		var ret string
		return ret
	}
	return *o.BaseDir.Get()
}

// GetBaseDirOk returns a tuple with the BaseDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetBaseDirOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BaseDir.Get(), o.BaseDir.IsSet()
}

// HasBaseDir returns a boolean if a field has been set.
func (o *ConstructRestoreMetaInfoOracleParams) HasBaseDir() bool {
	if o != nil && o.BaseDir.IsSet() {
		return true
	}

	return false
}

// SetBaseDir gets a reference to the given NullableString and assigns it to the BaseDir field.
func (o *ConstructRestoreMetaInfoOracleParams) SetBaseDir(v string) {
	o.BaseDir.Set(&v)
}
// SetBaseDirNil sets the value for BaseDir to be an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) SetBaseDirNil() {
	o.BaseDir.Set(nil)
}

// UnsetBaseDir ensures that no value is present for BaseDir, not even an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) UnsetBaseDir() {
	o.BaseDir.Unset()
}

// GetDbFileDestination returns the DbFileDestination field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConstructRestoreMetaInfoOracleParams) GetDbFileDestination() string {
	if o == nil || IsNil(o.DbFileDestination.Get()) {
		var ret string
		return ret
	}
	return *o.DbFileDestination.Get()
}

// GetDbFileDestinationOk returns a tuple with the DbFileDestination field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetDbFileDestinationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DbFileDestination.Get(), o.DbFileDestination.IsSet()
}

// HasDbFileDestination returns a boolean if a field has been set.
func (o *ConstructRestoreMetaInfoOracleParams) HasDbFileDestination() bool {
	if o != nil && o.DbFileDestination.IsSet() {
		return true
	}

	return false
}

// SetDbFileDestination gets a reference to the given NullableString and assigns it to the DbFileDestination field.
func (o *ConstructRestoreMetaInfoOracleParams) SetDbFileDestination(v string) {
	o.DbFileDestination.Set(&v)
}
// SetDbFileDestinationNil sets the value for DbFileDestination to be an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) SetDbFileDestinationNil() {
	o.DbFileDestination.Set(nil)
}

// UnsetDbFileDestination ensures that no value is present for DbFileDestination, not even an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) UnsetDbFileDestination() {
	o.DbFileDestination.Unset()
}

// GetDbName returns the DbName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConstructRestoreMetaInfoOracleParams) GetDbName() string {
	if o == nil || IsNil(o.DbName.Get()) {
		var ret string
		return ret
	}
	return *o.DbName.Get()
}

// GetDbNameOk returns a tuple with the DbName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetDbNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DbName.Get(), o.DbName.IsSet()
}

// HasDbName returns a boolean if a field has been set.
func (o *ConstructRestoreMetaInfoOracleParams) HasDbName() bool {
	if o != nil && o.DbName.IsSet() {
		return true
	}

	return false
}

// SetDbName gets a reference to the given NullableString and assigns it to the DbName field.
func (o *ConstructRestoreMetaInfoOracleParams) SetDbName(v string) {
	o.DbName.Set(&v)
}
// SetDbNameNil sets the value for DbName to be an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) SetDbNameNil() {
	o.DbName.Set(nil)
}

// UnsetDbName ensures that no value is present for DbName, not even an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) UnsetDbName() {
	o.DbName.Unset()
}

// GetHomeDir returns the HomeDir field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConstructRestoreMetaInfoOracleParams) GetHomeDir() string {
	if o == nil || IsNil(o.HomeDir.Get()) {
		var ret string
		return ret
	}
	return *o.HomeDir.Get()
}

// GetHomeDirOk returns a tuple with the HomeDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetHomeDirOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HomeDir.Get(), o.HomeDir.IsSet()
}

// HasHomeDir returns a boolean if a field has been set.
func (o *ConstructRestoreMetaInfoOracleParams) HasHomeDir() bool {
	if o != nil && o.HomeDir.IsSet() {
		return true
	}

	return false
}

// SetHomeDir gets a reference to the given NullableString and assigns it to the HomeDir field.
func (o *ConstructRestoreMetaInfoOracleParams) SetHomeDir(v string) {
	o.HomeDir.Set(&v)
}
// SetHomeDirNil sets the value for HomeDir to be an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) SetHomeDirNil() {
	o.HomeDir.Set(nil)
}

// UnsetHomeDir ensures that no value is present for HomeDir, not even an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) UnsetHomeDir() {
	o.HomeDir.Unset()
}

// GetIsClone returns the IsClone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConstructRestoreMetaInfoOracleParams) GetIsClone() bool {
	if o == nil || IsNil(o.IsClone.Get()) {
		var ret bool
		return ret
	}
	return *o.IsClone.Get()
}

// GetIsCloneOk returns a tuple with the IsClone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetIsCloneOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsClone.Get(), o.IsClone.IsSet()
}

// HasIsClone returns a boolean if a field has been set.
func (o *ConstructRestoreMetaInfoOracleParams) HasIsClone() bool {
	if o != nil && o.IsClone.IsSet() {
		return true
	}

	return false
}

// SetIsClone gets a reference to the given NullableBool and assigns it to the IsClone field.
func (o *ConstructRestoreMetaInfoOracleParams) SetIsClone(v bool) {
	o.IsClone.Set(&v)
}
// SetIsCloneNil sets the value for IsClone to be an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) SetIsCloneNil() {
	o.IsClone.Set(nil)
}

// UnsetIsClone ensures that no value is present for IsClone, not even an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) UnsetIsClone() {
	o.IsClone.Unset()
}

// GetIsDisasterRecovery returns the IsDisasterRecovery field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConstructRestoreMetaInfoOracleParams) GetIsDisasterRecovery() bool {
	if o == nil || IsNil(o.IsDisasterRecovery.Get()) {
		var ret bool
		return ret
	}
	return *o.IsDisasterRecovery.Get()
}

// GetIsDisasterRecoveryOk returns a tuple with the IsDisasterRecovery field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetIsDisasterRecoveryOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsDisasterRecovery.Get(), o.IsDisasterRecovery.IsSet()
}

// HasIsDisasterRecovery returns a boolean if a field has been set.
func (o *ConstructRestoreMetaInfoOracleParams) HasIsDisasterRecovery() bool {
	if o != nil && o.IsDisasterRecovery.IsSet() {
		return true
	}

	return false
}

// SetIsDisasterRecovery gets a reference to the given NullableBool and assigns it to the IsDisasterRecovery field.
func (o *ConstructRestoreMetaInfoOracleParams) SetIsDisasterRecovery(v bool) {
	o.IsDisasterRecovery.Set(&v)
}
// SetIsDisasterRecoveryNil sets the value for IsDisasterRecovery to be an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) SetIsDisasterRecoveryNil() {
	o.IsDisasterRecovery.Set(nil)
}

// UnsetIsDisasterRecovery ensures that no value is present for IsDisasterRecovery, not even an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) UnsetIsDisasterRecovery() {
	o.IsDisasterRecovery.Unset()
}

// GetIsGranularRestore returns the IsGranularRestore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConstructRestoreMetaInfoOracleParams) GetIsGranularRestore() bool {
	if o == nil || IsNil(o.IsGranularRestore.Get()) {
		var ret bool
		return ret
	}
	return *o.IsGranularRestore.Get()
}

// GetIsGranularRestoreOk returns a tuple with the IsGranularRestore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetIsGranularRestoreOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsGranularRestore.Get(), o.IsGranularRestore.IsSet()
}

// HasIsGranularRestore returns a boolean if a field has been set.
func (o *ConstructRestoreMetaInfoOracleParams) HasIsGranularRestore() bool {
	if o != nil && o.IsGranularRestore.IsSet() {
		return true
	}

	return false
}

// SetIsGranularRestore gets a reference to the given NullableBool and assigns it to the IsGranularRestore field.
func (o *ConstructRestoreMetaInfoOracleParams) SetIsGranularRestore(v bool) {
	o.IsGranularRestore.Set(&v)
}
// SetIsGranularRestoreNil sets the value for IsGranularRestore to be an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) SetIsGranularRestoreNil() {
	o.IsGranularRestore.Set(nil)
}

// UnsetIsGranularRestore ensures that no value is present for IsGranularRestore, not even an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) UnsetIsGranularRestore() {
	o.IsGranularRestore.Unset()
}

// GetIsRecoveryValidation returns the IsRecoveryValidation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConstructRestoreMetaInfoOracleParams) GetIsRecoveryValidation() bool {
	if o == nil || IsNil(o.IsRecoveryValidation.Get()) {
		var ret bool
		return ret
	}
	return *o.IsRecoveryValidation.Get()
}

// GetIsRecoveryValidationOk returns a tuple with the IsRecoveryValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetIsRecoveryValidationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsRecoveryValidation.Get(), o.IsRecoveryValidation.IsSet()
}

// HasIsRecoveryValidation returns a boolean if a field has been set.
func (o *ConstructRestoreMetaInfoOracleParams) HasIsRecoveryValidation() bool {
	if o != nil && o.IsRecoveryValidation.IsSet() {
		return true
	}

	return false
}

// SetIsRecoveryValidation gets a reference to the given NullableBool and assigns it to the IsRecoveryValidation field.
func (o *ConstructRestoreMetaInfoOracleParams) SetIsRecoveryValidation(v bool) {
	o.IsRecoveryValidation.Set(&v)
}
// SetIsRecoveryValidationNil sets the value for IsRecoveryValidation to be an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) SetIsRecoveryValidationNil() {
	o.IsRecoveryValidation.Set(nil)
}

// UnsetIsRecoveryValidation ensures that no value is present for IsRecoveryValidation, not even an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) UnsetIsRecoveryValidation() {
	o.IsRecoveryValidation.Unset()
}

func (o ConstructRestoreMetaInfoOracleParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConstructRestoreMetaInfoOracleParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BaseDir.IsSet() {
		toSerialize["baseDir"] = o.BaseDir.Get()
	}
	if o.DbFileDestination.IsSet() {
		toSerialize["dbFileDestination"] = o.DbFileDestination.Get()
	}
	if o.DbName.IsSet() {
		toSerialize["dbName"] = o.DbName.Get()
	}
	if o.HomeDir.IsSet() {
		toSerialize["homeDir"] = o.HomeDir.Get()
	}
	if o.IsClone.IsSet() {
		toSerialize["isClone"] = o.IsClone.Get()
	}
	if o.IsDisasterRecovery.IsSet() {
		toSerialize["isDisasterRecovery"] = o.IsDisasterRecovery.Get()
	}
	if o.IsGranularRestore.IsSet() {
		toSerialize["isGranularRestore"] = o.IsGranularRestore.Get()
	}
	if o.IsRecoveryValidation.IsSet() {
		toSerialize["isRecoveryValidation"] = o.IsRecoveryValidation.Get()
	}
	return toSerialize, nil
}

type NullableConstructRestoreMetaInfoOracleParams struct {
	value *ConstructRestoreMetaInfoOracleParams
	isSet bool
}

func (v NullableConstructRestoreMetaInfoOracleParams) Get() *ConstructRestoreMetaInfoOracleParams {
	return v.value
}

func (v *NullableConstructRestoreMetaInfoOracleParams) Set(val *ConstructRestoreMetaInfoOracleParams) {
	v.value = val
	v.isSet = true
}

func (v NullableConstructRestoreMetaInfoOracleParams) IsSet() bool {
	return v.isSet
}

func (v *NullableConstructRestoreMetaInfoOracleParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConstructRestoreMetaInfoOracleParams(val *ConstructRestoreMetaInfoOracleParams) *NullableConstructRestoreMetaInfoOracleParams {
	return &NullableConstructRestoreMetaInfoOracleParams{value: val, isSet: true}
}

func (v NullableConstructRestoreMetaInfoOracleParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConstructRestoreMetaInfoOracleParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


