/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CommonSourceRegistrationReponseParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonSourceRegistrationReponseParams{}

// CommonSourceRegistrationReponseParams Specifies the parameters which are common between all Protection Source registrations.
type CommonSourceRegistrationReponseParams struct {
	// Specifies the status of the authentication during the registration of a Protection Source. 'Pending' indicates the authentication is in progress. 'Scheduled' indicates the authentication is scheduled. 'Finished' indicates the authentication is completed. 'RefreshInProgress' indicates the refresh is in progress.
	AuthenticationStatus NullableString `json:"authenticationStatus,omitempty"`
	// Specifies the time when the source was last refreshed in milliseconds.
	LastRefreshedTimeMsecs NullableInt64 `json:"lastRefreshedTimeMsecs,omitempty"`
	// Specifies the time when the source was registered in milliseconds
	RegistrationTimeMsecs NullableInt64 `json:"registrationTimeMsecs,omitempty"`
	// Specifies the advanced configuration for a protection source.
	AdvancedConfigs []KeyValuePair `json:"advancedConfigs,omitempty"`
	// Specifies the id of the connection from where this source is reachable. This should only be set for a source being registered by a tenant user. This field will be depricated in future. Use connections field.
	ConnectionId NullableInt64 `json:"connectionId,omitempty"`
	// Specfies the list of connections for the source.
	Connections []ConnectionConfig `json:"connections,omitempty"`
	// Specifies the connector group id of connector groups.
	ConnectorGroupId NullableInt64 `json:"connectorGroupId,omitempty"`
	// Specifies the environment type of the Protection Source.
	Environment NullableString `json:"environment,omitempty"`
	// Source Registration ID. This can be used to retrieve, edit or delete the source registration.
	Id NullableInt64 `json:"id,omitempty"`
	// The user specified name for this source.
	Name NullableString `json:"name,omitempty"`
	// ID of top level source object discovered after the registration.
	SourceId NullableInt64 `json:"sourceId,omitempty"`
	SourceInfo *Object `json:"sourceInfo,omitempty"`
}

// NewCommonSourceRegistrationReponseParams instantiates a new CommonSourceRegistrationReponseParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonSourceRegistrationReponseParams() *CommonSourceRegistrationReponseParams {
	this := CommonSourceRegistrationReponseParams{}
	return &this
}

// NewCommonSourceRegistrationReponseParamsWithDefaults instantiates a new CommonSourceRegistrationReponseParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonSourceRegistrationReponseParamsWithDefaults() *CommonSourceRegistrationReponseParams {
	this := CommonSourceRegistrationReponseParams{}
	return &this
}

// GetAuthenticationStatus returns the AuthenticationStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonSourceRegistrationReponseParams) GetAuthenticationStatus() string {
	if o == nil || IsNil(o.AuthenticationStatus.Get()) {
		var ret string
		return ret
	}
	return *o.AuthenticationStatus.Get()
}

// GetAuthenticationStatusOk returns a tuple with the AuthenticationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonSourceRegistrationReponseParams) GetAuthenticationStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthenticationStatus.Get(), o.AuthenticationStatus.IsSet()
}

// HasAuthenticationStatus returns a boolean if a field has been set.
func (o *CommonSourceRegistrationReponseParams) HasAuthenticationStatus() bool {
	if o != nil && o.AuthenticationStatus.IsSet() {
		return true
	}

	return false
}

// SetAuthenticationStatus gets a reference to the given NullableString and assigns it to the AuthenticationStatus field.
func (o *CommonSourceRegistrationReponseParams) SetAuthenticationStatus(v string) {
	o.AuthenticationStatus.Set(&v)
}
// SetAuthenticationStatusNil sets the value for AuthenticationStatus to be an explicit nil
func (o *CommonSourceRegistrationReponseParams) SetAuthenticationStatusNil() {
	o.AuthenticationStatus.Set(nil)
}

// UnsetAuthenticationStatus ensures that no value is present for AuthenticationStatus, not even an explicit nil
func (o *CommonSourceRegistrationReponseParams) UnsetAuthenticationStatus() {
	o.AuthenticationStatus.Unset()
}

// GetLastRefreshedTimeMsecs returns the LastRefreshedTimeMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonSourceRegistrationReponseParams) GetLastRefreshedTimeMsecs() int64 {
	if o == nil || IsNil(o.LastRefreshedTimeMsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.LastRefreshedTimeMsecs.Get()
}

// GetLastRefreshedTimeMsecsOk returns a tuple with the LastRefreshedTimeMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonSourceRegistrationReponseParams) GetLastRefreshedTimeMsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastRefreshedTimeMsecs.Get(), o.LastRefreshedTimeMsecs.IsSet()
}

// HasLastRefreshedTimeMsecs returns a boolean if a field has been set.
func (o *CommonSourceRegistrationReponseParams) HasLastRefreshedTimeMsecs() bool {
	if o != nil && o.LastRefreshedTimeMsecs.IsSet() {
		return true
	}

	return false
}

// SetLastRefreshedTimeMsecs gets a reference to the given NullableInt64 and assigns it to the LastRefreshedTimeMsecs field.
func (o *CommonSourceRegistrationReponseParams) SetLastRefreshedTimeMsecs(v int64) {
	o.LastRefreshedTimeMsecs.Set(&v)
}
// SetLastRefreshedTimeMsecsNil sets the value for LastRefreshedTimeMsecs to be an explicit nil
func (o *CommonSourceRegistrationReponseParams) SetLastRefreshedTimeMsecsNil() {
	o.LastRefreshedTimeMsecs.Set(nil)
}

// UnsetLastRefreshedTimeMsecs ensures that no value is present for LastRefreshedTimeMsecs, not even an explicit nil
func (o *CommonSourceRegistrationReponseParams) UnsetLastRefreshedTimeMsecs() {
	o.LastRefreshedTimeMsecs.Unset()
}

// GetRegistrationTimeMsecs returns the RegistrationTimeMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonSourceRegistrationReponseParams) GetRegistrationTimeMsecs() int64 {
	if o == nil || IsNil(o.RegistrationTimeMsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.RegistrationTimeMsecs.Get()
}

// GetRegistrationTimeMsecsOk returns a tuple with the RegistrationTimeMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonSourceRegistrationReponseParams) GetRegistrationTimeMsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RegistrationTimeMsecs.Get(), o.RegistrationTimeMsecs.IsSet()
}

// HasRegistrationTimeMsecs returns a boolean if a field has been set.
func (o *CommonSourceRegistrationReponseParams) HasRegistrationTimeMsecs() bool {
	if o != nil && o.RegistrationTimeMsecs.IsSet() {
		return true
	}

	return false
}

// SetRegistrationTimeMsecs gets a reference to the given NullableInt64 and assigns it to the RegistrationTimeMsecs field.
func (o *CommonSourceRegistrationReponseParams) SetRegistrationTimeMsecs(v int64) {
	o.RegistrationTimeMsecs.Set(&v)
}
// SetRegistrationTimeMsecsNil sets the value for RegistrationTimeMsecs to be an explicit nil
func (o *CommonSourceRegistrationReponseParams) SetRegistrationTimeMsecsNil() {
	o.RegistrationTimeMsecs.Set(nil)
}

// UnsetRegistrationTimeMsecs ensures that no value is present for RegistrationTimeMsecs, not even an explicit nil
func (o *CommonSourceRegistrationReponseParams) UnsetRegistrationTimeMsecs() {
	o.RegistrationTimeMsecs.Unset()
}

// GetAdvancedConfigs returns the AdvancedConfigs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonSourceRegistrationReponseParams) GetAdvancedConfigs() []KeyValuePair {
	if o == nil {
		var ret []KeyValuePair
		return ret
	}
	return o.AdvancedConfigs
}

// GetAdvancedConfigsOk returns a tuple with the AdvancedConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonSourceRegistrationReponseParams) GetAdvancedConfigsOk() ([]KeyValuePair, bool) {
	if o == nil || IsNil(o.AdvancedConfigs) {
		return nil, false
	}
	return o.AdvancedConfigs, true
}

// HasAdvancedConfigs returns a boolean if a field has been set.
func (o *CommonSourceRegistrationReponseParams) HasAdvancedConfigs() bool {
	if o != nil && !IsNil(o.AdvancedConfigs) {
		return true
	}

	return false
}

// SetAdvancedConfigs gets a reference to the given []KeyValuePair and assigns it to the AdvancedConfigs field.
func (o *CommonSourceRegistrationReponseParams) SetAdvancedConfigs(v []KeyValuePair) {
	o.AdvancedConfigs = v
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonSourceRegistrationReponseParams) GetConnectionId() int64 {
	if o == nil || IsNil(o.ConnectionId.Get()) {
		var ret int64
		return ret
	}
	return *o.ConnectionId.Get()
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonSourceRegistrationReponseParams) GetConnectionIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectionId.Get(), o.ConnectionId.IsSet()
}

// HasConnectionId returns a boolean if a field has been set.
func (o *CommonSourceRegistrationReponseParams) HasConnectionId() bool {
	if o != nil && o.ConnectionId.IsSet() {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given NullableInt64 and assigns it to the ConnectionId field.
func (o *CommonSourceRegistrationReponseParams) SetConnectionId(v int64) {
	o.ConnectionId.Set(&v)
}
// SetConnectionIdNil sets the value for ConnectionId to be an explicit nil
func (o *CommonSourceRegistrationReponseParams) SetConnectionIdNil() {
	o.ConnectionId.Set(nil)
}

// UnsetConnectionId ensures that no value is present for ConnectionId, not even an explicit nil
func (o *CommonSourceRegistrationReponseParams) UnsetConnectionId() {
	o.ConnectionId.Unset()
}

// GetConnections returns the Connections field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonSourceRegistrationReponseParams) GetConnections() []ConnectionConfig {
	if o == nil {
		var ret []ConnectionConfig
		return ret
	}
	return o.Connections
}

// GetConnectionsOk returns a tuple with the Connections field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonSourceRegistrationReponseParams) GetConnectionsOk() ([]ConnectionConfig, bool) {
	if o == nil || IsNil(o.Connections) {
		return nil, false
	}
	return o.Connections, true
}

// HasConnections returns a boolean if a field has been set.
func (o *CommonSourceRegistrationReponseParams) HasConnections() bool {
	if o != nil && !IsNil(o.Connections) {
		return true
	}

	return false
}

// SetConnections gets a reference to the given []ConnectionConfig and assigns it to the Connections field.
func (o *CommonSourceRegistrationReponseParams) SetConnections(v []ConnectionConfig) {
	o.Connections = v
}

// GetConnectorGroupId returns the ConnectorGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonSourceRegistrationReponseParams) GetConnectorGroupId() int64 {
	if o == nil || IsNil(o.ConnectorGroupId.Get()) {
		var ret int64
		return ret
	}
	return *o.ConnectorGroupId.Get()
}

// GetConnectorGroupIdOk returns a tuple with the ConnectorGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonSourceRegistrationReponseParams) GetConnectorGroupIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectorGroupId.Get(), o.ConnectorGroupId.IsSet()
}

// HasConnectorGroupId returns a boolean if a field has been set.
func (o *CommonSourceRegistrationReponseParams) HasConnectorGroupId() bool {
	if o != nil && o.ConnectorGroupId.IsSet() {
		return true
	}

	return false
}

// SetConnectorGroupId gets a reference to the given NullableInt64 and assigns it to the ConnectorGroupId field.
func (o *CommonSourceRegistrationReponseParams) SetConnectorGroupId(v int64) {
	o.ConnectorGroupId.Set(&v)
}
// SetConnectorGroupIdNil sets the value for ConnectorGroupId to be an explicit nil
func (o *CommonSourceRegistrationReponseParams) SetConnectorGroupIdNil() {
	o.ConnectorGroupId.Set(nil)
}

// UnsetConnectorGroupId ensures that no value is present for ConnectorGroupId, not even an explicit nil
func (o *CommonSourceRegistrationReponseParams) UnsetConnectorGroupId() {
	o.ConnectorGroupId.Unset()
}

// GetEnvironment returns the Environment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonSourceRegistrationReponseParams) GetEnvironment() string {
	if o == nil || IsNil(o.Environment.Get()) {
		var ret string
		return ret
	}
	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonSourceRegistrationReponseParams) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// HasEnvironment returns a boolean if a field has been set.
func (o *CommonSourceRegistrationReponseParams) HasEnvironment() bool {
	if o != nil && o.Environment.IsSet() {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given NullableString and assigns it to the Environment field.
func (o *CommonSourceRegistrationReponseParams) SetEnvironment(v string) {
	o.Environment.Set(&v)
}
// SetEnvironmentNil sets the value for Environment to be an explicit nil
func (o *CommonSourceRegistrationReponseParams) SetEnvironmentNil() {
	o.Environment.Set(nil)
}

// UnsetEnvironment ensures that no value is present for Environment, not even an explicit nil
func (o *CommonSourceRegistrationReponseParams) UnsetEnvironment() {
	o.Environment.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonSourceRegistrationReponseParams) GetId() int64 {
	if o == nil || IsNil(o.Id.Get()) {
		var ret int64
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonSourceRegistrationReponseParams) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CommonSourceRegistrationReponseParams) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt64 and assigns it to the Id field.
func (o *CommonSourceRegistrationReponseParams) SetId(v int64) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CommonSourceRegistrationReponseParams) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CommonSourceRegistrationReponseParams) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonSourceRegistrationReponseParams) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonSourceRegistrationReponseParams) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CommonSourceRegistrationReponseParams) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CommonSourceRegistrationReponseParams) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CommonSourceRegistrationReponseParams) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CommonSourceRegistrationReponseParams) UnsetName() {
	o.Name.Unset()
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonSourceRegistrationReponseParams) GetSourceId() int64 {
	if o == nil || IsNil(o.SourceId.Get()) {
		var ret int64
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonSourceRegistrationReponseParams) GetSourceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *CommonSourceRegistrationReponseParams) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableInt64 and assigns it to the SourceId field.
func (o *CommonSourceRegistrationReponseParams) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *CommonSourceRegistrationReponseParams) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *CommonSourceRegistrationReponseParams) UnsetSourceId() {
	o.SourceId.Unset()
}

// GetSourceInfo returns the SourceInfo field value if set, zero value otherwise.
func (o *CommonSourceRegistrationReponseParams) GetSourceInfo() Object {
	if o == nil || IsNil(o.SourceInfo) {
		var ret Object
		return ret
	}
	return *o.SourceInfo
}

// GetSourceInfoOk returns a tuple with the SourceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonSourceRegistrationReponseParams) GetSourceInfoOk() (*Object, bool) {
	if o == nil || IsNil(o.SourceInfo) {
		return nil, false
	}
	return o.SourceInfo, true
}

// HasSourceInfo returns a boolean if a field has been set.
func (o *CommonSourceRegistrationReponseParams) HasSourceInfo() bool {
	if o != nil && !IsNil(o.SourceInfo) {
		return true
	}

	return false
}

// SetSourceInfo gets a reference to the given Object and assigns it to the SourceInfo field.
func (o *CommonSourceRegistrationReponseParams) SetSourceInfo(v Object) {
	o.SourceInfo = &v
}

func (o CommonSourceRegistrationReponseParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonSourceRegistrationReponseParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthenticationStatus.IsSet() {
		toSerialize["authenticationStatus"] = o.AuthenticationStatus.Get()
	}
	if o.LastRefreshedTimeMsecs.IsSet() {
		toSerialize["lastRefreshedTimeMsecs"] = o.LastRefreshedTimeMsecs.Get()
	}
	if o.RegistrationTimeMsecs.IsSet() {
		toSerialize["registrationTimeMsecs"] = o.RegistrationTimeMsecs.Get()
	}
	if o.AdvancedConfigs != nil {
		toSerialize["advancedConfigs"] = o.AdvancedConfigs
	}
	if o.ConnectionId.IsSet() {
		toSerialize["connectionId"] = o.ConnectionId.Get()
	}
	if o.Connections != nil {
		toSerialize["connections"] = o.Connections
	}
	if o.ConnectorGroupId.IsSet() {
		toSerialize["connectorGroupId"] = o.ConnectorGroupId.Get()
	}
	if o.Environment.IsSet() {
		toSerialize["environment"] = o.Environment.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.SourceId.IsSet() {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if !IsNil(o.SourceInfo) {
		toSerialize["sourceInfo"] = o.SourceInfo
	}
	return toSerialize, nil
}

type NullableCommonSourceRegistrationReponseParams struct {
	value *CommonSourceRegistrationReponseParams
	isSet bool
}

func (v NullableCommonSourceRegistrationReponseParams) Get() *CommonSourceRegistrationReponseParams {
	return v.value
}

func (v *NullableCommonSourceRegistrationReponseParams) Set(val *CommonSourceRegistrationReponseParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonSourceRegistrationReponseParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonSourceRegistrationReponseParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonSourceRegistrationReponseParams(val *CommonSourceRegistrationReponseParams) *NullableCommonSourceRegistrationReponseParams {
	return &NullableCommonSourceRegistrationReponseParams{value: val, isSet: true}
}

func (v NullableCommonSourceRegistrationReponseParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonSourceRegistrationReponseParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


