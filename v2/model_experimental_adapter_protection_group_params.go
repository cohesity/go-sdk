/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ExperimentalAdapterProtectionGroupParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExperimentalAdapterProtectionGroupParams{}

// ExperimentalAdapterProtectionGroupParams Specifies parameters related to the Experimental Adapter Protection job.
type ExperimentalAdapterProtectionGroupParams struct {
	// Specifies the maximum number of concurrent IO streams that will be created to exchange data with the cluster. If not specified, the default value is taken as 1.
	Concurrency NullableInt32 `json:"concurrency,omitempty"`
	// Specifies the objects to be excluded in the Protection Group.
	ExcludedObjectIds []int32 `json:"excludedObjectIds,omitempty"`
	// Specifies a list of fully qualified names of the objects to be protected.
	Objects []ExperimentalAdapaterProtectionGroupObjectParams `json:"objects,omitempty"`
	// Specifies the discover source workflow parameters. This is a stringified JSON representation of the parameters.
	WorkflowParams NullableString `json:"workflowParams,omitempty"`
}

// NewExperimentalAdapterProtectionGroupParams instantiates a new ExperimentalAdapterProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExperimentalAdapterProtectionGroupParams() *ExperimentalAdapterProtectionGroupParams {
	this := ExperimentalAdapterProtectionGroupParams{}
	var concurrency int32 = 1
	this.Concurrency = *NewNullableInt32(&concurrency)
	return &this
}

// NewExperimentalAdapterProtectionGroupParamsWithDefaults instantiates a new ExperimentalAdapterProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExperimentalAdapterProtectionGroupParamsWithDefaults() *ExperimentalAdapterProtectionGroupParams {
	this := ExperimentalAdapterProtectionGroupParams{}
	var concurrency int32 = 1
	this.Concurrency = *NewNullableInt32(&concurrency)
	return &this
}

// GetConcurrency returns the Concurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExperimentalAdapterProtectionGroupParams) GetConcurrency() int32 {
	if o == nil || IsNil(o.Concurrency.Get()) {
		var ret int32
		return ret
	}
	return *o.Concurrency.Get()
}

// GetConcurrencyOk returns a tuple with the Concurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExperimentalAdapterProtectionGroupParams) GetConcurrencyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Concurrency.Get(), o.Concurrency.IsSet()
}

// HasConcurrency returns a boolean if a field has been set.
func (o *ExperimentalAdapterProtectionGroupParams) HasConcurrency() bool {
	if o != nil && o.Concurrency.IsSet() {
		return true
	}

	return false
}

// SetConcurrency gets a reference to the given NullableInt32 and assigns it to the Concurrency field.
func (o *ExperimentalAdapterProtectionGroupParams) SetConcurrency(v int32) {
	o.Concurrency.Set(&v)
}
// SetConcurrencyNil sets the value for Concurrency to be an explicit nil
func (o *ExperimentalAdapterProtectionGroupParams) SetConcurrencyNil() {
	o.Concurrency.Set(nil)
}

// UnsetConcurrency ensures that no value is present for Concurrency, not even an explicit nil
func (o *ExperimentalAdapterProtectionGroupParams) UnsetConcurrency() {
	o.Concurrency.Unset()
}

// GetExcludedObjectIds returns the ExcludedObjectIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExperimentalAdapterProtectionGroupParams) GetExcludedObjectIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}
	return o.ExcludedObjectIds
}

// GetExcludedObjectIdsOk returns a tuple with the ExcludedObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExperimentalAdapterProtectionGroupParams) GetExcludedObjectIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ExcludedObjectIds) {
		return nil, false
	}
	return o.ExcludedObjectIds, true
}

// HasExcludedObjectIds returns a boolean if a field has been set.
func (o *ExperimentalAdapterProtectionGroupParams) HasExcludedObjectIds() bool {
	if o != nil && !IsNil(o.ExcludedObjectIds) {
		return true
	}

	return false
}

// SetExcludedObjectIds gets a reference to the given []int32 and assigns it to the ExcludedObjectIds field.
func (o *ExperimentalAdapterProtectionGroupParams) SetExcludedObjectIds(v []int32) {
	o.ExcludedObjectIds = v
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *ExperimentalAdapterProtectionGroupParams) GetObjects() []ExperimentalAdapaterProtectionGroupObjectParams {
	if o == nil || IsNil(o.Objects) {
		var ret []ExperimentalAdapaterProtectionGroupObjectParams
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentalAdapterProtectionGroupParams) GetObjectsOk() ([]ExperimentalAdapaterProtectionGroupObjectParams, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *ExperimentalAdapterProtectionGroupParams) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []ExperimentalAdapaterProtectionGroupObjectParams and assigns it to the Objects field.
func (o *ExperimentalAdapterProtectionGroupParams) SetObjects(v []ExperimentalAdapaterProtectionGroupObjectParams) {
	o.Objects = v
}

// GetWorkflowParams returns the WorkflowParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExperimentalAdapterProtectionGroupParams) GetWorkflowParams() string {
	if o == nil || IsNil(o.WorkflowParams.Get()) {
		var ret string
		return ret
	}
	return *o.WorkflowParams.Get()
}

// GetWorkflowParamsOk returns a tuple with the WorkflowParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExperimentalAdapterProtectionGroupParams) GetWorkflowParamsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkflowParams.Get(), o.WorkflowParams.IsSet()
}

// HasWorkflowParams returns a boolean if a field has been set.
func (o *ExperimentalAdapterProtectionGroupParams) HasWorkflowParams() bool {
	if o != nil && o.WorkflowParams.IsSet() {
		return true
	}

	return false
}

// SetWorkflowParams gets a reference to the given NullableString and assigns it to the WorkflowParams field.
func (o *ExperimentalAdapterProtectionGroupParams) SetWorkflowParams(v string) {
	o.WorkflowParams.Set(&v)
}
// SetWorkflowParamsNil sets the value for WorkflowParams to be an explicit nil
func (o *ExperimentalAdapterProtectionGroupParams) SetWorkflowParamsNil() {
	o.WorkflowParams.Set(nil)
}

// UnsetWorkflowParams ensures that no value is present for WorkflowParams, not even an explicit nil
func (o *ExperimentalAdapterProtectionGroupParams) UnsetWorkflowParams() {
	o.WorkflowParams.Unset()
}

func (o ExperimentalAdapterProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExperimentalAdapterProtectionGroupParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Concurrency.IsSet() {
		toSerialize["concurrency"] = o.Concurrency.Get()
	}
	if o.ExcludedObjectIds != nil {
		toSerialize["excludedObjectIds"] = o.ExcludedObjectIds
	}
	if !IsNil(o.Objects) {
		toSerialize["objects"] = o.Objects
	}
	if o.WorkflowParams.IsSet() {
		toSerialize["workflowParams"] = o.WorkflowParams.Get()
	}
	return toSerialize, nil
}

type NullableExperimentalAdapterProtectionGroupParams struct {
	value *ExperimentalAdapterProtectionGroupParams
	isSet bool
}

func (v NullableExperimentalAdapterProtectionGroupParams) Get() *ExperimentalAdapterProtectionGroupParams {
	return v.value
}

func (v *NullableExperimentalAdapterProtectionGroupParams) Set(val *ExperimentalAdapterProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableExperimentalAdapterProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableExperimentalAdapterProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExperimentalAdapterProtectionGroupParams(val *ExperimentalAdapterProtectionGroupParams) *NullableExperimentalAdapterProtectionGroupParams {
	return &NullableExperimentalAdapterProtectionGroupParams{value: val, isSet: true}
}

func (v NullableExperimentalAdapterProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExperimentalAdapterProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


