/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CapacityTrendAnalysis type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CapacityTrendAnalysis{}

// CapacityTrendAnalysis Capacity Trend analysis of the requested sources in the given time range.
type CapacityTrendAnalysis struct {
	// Vector of data points. Each data point contains statistics on analysis and downtiered data.
	DataPointVec []CapacityTrendDatapoint `json:"dataPointVec,omitempty"`
	// Last updated time of capacity trend.
	LastUpdatedTimeUsecs NullableInt64 `json:"lastUpdatedTimeUsecs,omitempty"`
}

// NewCapacityTrendAnalysis instantiates a new CapacityTrendAnalysis object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCapacityTrendAnalysis() *CapacityTrendAnalysis {
	this := CapacityTrendAnalysis{}
	return &this
}

// NewCapacityTrendAnalysisWithDefaults instantiates a new CapacityTrendAnalysis object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCapacityTrendAnalysisWithDefaults() *CapacityTrendAnalysis {
	this := CapacityTrendAnalysis{}
	return &this
}

// GetDataPointVec returns the DataPointVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CapacityTrendAnalysis) GetDataPointVec() []CapacityTrendDatapoint {
	if o == nil {
		var ret []CapacityTrendDatapoint
		return ret
	}
	return o.DataPointVec
}

// GetDataPointVecOk returns a tuple with the DataPointVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CapacityTrendAnalysis) GetDataPointVecOk() ([]CapacityTrendDatapoint, bool) {
	if o == nil || IsNil(o.DataPointVec) {
		return nil, false
	}
	return o.DataPointVec, true
}

// HasDataPointVec returns a boolean if a field has been set.
func (o *CapacityTrendAnalysis) HasDataPointVec() bool {
	if o != nil && !IsNil(o.DataPointVec) {
		return true
	}

	return false
}

// SetDataPointVec gets a reference to the given []CapacityTrendDatapoint and assigns it to the DataPointVec field.
func (o *CapacityTrendAnalysis) SetDataPointVec(v []CapacityTrendDatapoint) {
	o.DataPointVec = v
}

// GetLastUpdatedTimeUsecs returns the LastUpdatedTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CapacityTrendAnalysis) GetLastUpdatedTimeUsecs() int64 {
	if o == nil || IsNil(o.LastUpdatedTimeUsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.LastUpdatedTimeUsecs.Get()
}

// GetLastUpdatedTimeUsecsOk returns a tuple with the LastUpdatedTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CapacityTrendAnalysis) GetLastUpdatedTimeUsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastUpdatedTimeUsecs.Get(), o.LastUpdatedTimeUsecs.IsSet()
}

// HasLastUpdatedTimeUsecs returns a boolean if a field has been set.
func (o *CapacityTrendAnalysis) HasLastUpdatedTimeUsecs() bool {
	if o != nil && o.LastUpdatedTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetLastUpdatedTimeUsecs gets a reference to the given NullableInt64 and assigns it to the LastUpdatedTimeUsecs field.
func (o *CapacityTrendAnalysis) SetLastUpdatedTimeUsecs(v int64) {
	o.LastUpdatedTimeUsecs.Set(&v)
}
// SetLastUpdatedTimeUsecsNil sets the value for LastUpdatedTimeUsecs to be an explicit nil
func (o *CapacityTrendAnalysis) SetLastUpdatedTimeUsecsNil() {
	o.LastUpdatedTimeUsecs.Set(nil)
}

// UnsetLastUpdatedTimeUsecs ensures that no value is present for LastUpdatedTimeUsecs, not even an explicit nil
func (o *CapacityTrendAnalysis) UnsetLastUpdatedTimeUsecs() {
	o.LastUpdatedTimeUsecs.Unset()
}

func (o CapacityTrendAnalysis) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CapacityTrendAnalysis) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DataPointVec != nil {
		toSerialize["dataPointVec"] = o.DataPointVec
	}
	if o.LastUpdatedTimeUsecs.IsSet() {
		toSerialize["lastUpdatedTimeUsecs"] = o.LastUpdatedTimeUsecs.Get()
	}
	return toSerialize, nil
}

type NullableCapacityTrendAnalysis struct {
	value *CapacityTrendAnalysis
	isSet bool
}

func (v NullableCapacityTrendAnalysis) Get() *CapacityTrendAnalysis {
	return v.value
}

func (v *NullableCapacityTrendAnalysis) Set(val *CapacityTrendAnalysis) {
	v.value = val
	v.isSet = true
}

func (v NullableCapacityTrendAnalysis) IsSet() bool {
	return v.isSet
}

func (v *NullableCapacityTrendAnalysis) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCapacityTrendAnalysis(val *CapacityTrendAnalysis) *NullableCapacityTrendAnalysis {
	return &NullableCapacityTrendAnalysis{value: val, isSet: true}
}

func (v NullableCapacityTrendAnalysis) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCapacityTrendAnalysis) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


