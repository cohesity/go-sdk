/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ReplicationRunSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicationRunSummary{}

// ReplicationRunSummary Specifies summary information about replication run.
type ReplicationRunSummary struct {
	// Replication results for each replication target.
	ReplicationTargetResults []ReplicationTargetResult `json:"replicationTargetResults,omitempty"`
}

// NewReplicationRunSummary instantiates a new ReplicationRunSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationRunSummary() *ReplicationRunSummary {
	this := ReplicationRunSummary{}
	return &this
}

// NewReplicationRunSummaryWithDefaults instantiates a new ReplicationRunSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationRunSummaryWithDefaults() *ReplicationRunSummary {
	this := ReplicationRunSummary{}
	return &this
}

// GetReplicationTargetResults returns the ReplicationTargetResults field value if set, zero value otherwise.
func (o *ReplicationRunSummary) GetReplicationTargetResults() []ReplicationTargetResult {
	if o == nil || IsNil(o.ReplicationTargetResults) {
		var ret []ReplicationTargetResult
		return ret
	}
	return o.ReplicationTargetResults
}

// GetReplicationTargetResultsOk returns a tuple with the ReplicationTargetResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRunSummary) GetReplicationTargetResultsOk() ([]ReplicationTargetResult, bool) {
	if o == nil || IsNil(o.ReplicationTargetResults) {
		return nil, false
	}
	return o.ReplicationTargetResults, true
}

// HasReplicationTargetResults returns a boolean if a field has been set.
func (o *ReplicationRunSummary) HasReplicationTargetResults() bool {
	if o != nil && !IsNil(o.ReplicationTargetResults) {
		return true
	}

	return false
}

// SetReplicationTargetResults gets a reference to the given []ReplicationTargetResult and assigns it to the ReplicationTargetResults field.
func (o *ReplicationRunSummary) SetReplicationTargetResults(v []ReplicationTargetResult) {
	o.ReplicationTargetResults = v
}

func (o ReplicationRunSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicationRunSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReplicationTargetResults) {
		toSerialize["replicationTargetResults"] = o.ReplicationTargetResults
	}
	return toSerialize, nil
}

type NullableReplicationRunSummary struct {
	value *ReplicationRunSummary
	isSet bool
}

func (v NullableReplicationRunSummary) Get() *ReplicationRunSummary {
	return v.value
}

func (v *NullableReplicationRunSummary) Set(val *ReplicationRunSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationRunSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationRunSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationRunSummary(val *ReplicationRunSummary) *NullableReplicationRunSummary {
	return &NullableReplicationRunSummary{value: val, isSet: true}
}

func (v NullableReplicationRunSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationRunSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


