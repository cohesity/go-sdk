/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SearchIndexedObjectsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchIndexedObjectsRequest{}

// SearchIndexedObjectsRequest Specifies the request parameters to search for indexed objects.
type SearchIndexedObjectsRequest struct {
	// Specifies the number of indexed objects to be fetched for the specified pagination cookie.
	Count NullableInt32 `json:"count,omitempty"`
	// If true, the response will include objects which belongs to all tenants which the current user has permission to see. Default value is false.
	IncludeTenants NullableBool `json:"includeTenants,omitempty"`
	// Specifies list of snapshot tags, one or more of which might be present in the document. These are OR'ed together and the resulting criteria AND'ed with the rest of the query.
	MightHaveSnapshotTagIds []string `json:"mightHaveSnapshotTagIds,omitempty"`
	// Specifies list of tags, one or more of which might be present in the document. These are OR'ed together and the resulting criteria AND'ed with the rest of the query.
	MightHaveTagIds []string `json:"mightHaveTagIds,omitempty"`
	// Specifies snapshot tags which must be all present in the document.
	MustHaveSnapshotTagIds []string `json:"mustHaveSnapshotTagIds,omitempty"`
	// Specifies tags which must be all present in the document.
	MustHaveTagIds []string `json:"mustHaveTagIds,omitempty"`
	// Specifies the object type to be searched for.
	ObjectType string `json:"objectType"`
	// Specifies the pagination cookie with which subsequent parts of the response can be fetched.
	PaginationCookie NullableString `json:"paginationCookie,omitempty"`
	// Specifies a list of Protection Group ids to filter the indexed objects. If specified, the objects indexed by specified Protection Group ids will be returned.
	ProtectionGroupIds []string `json:"protectionGroupIds,omitempty"`
	// \"This field is deprecated. Please use mightHaveSnapshotTagIds.\"
	SnapshotTags []string `json:"snapshotTags,omitempty"`
	// Specifies the Storage Domain ids to filter indexed objects for which Protection Groups are writing data to Cohesity Views on the specified Storage Domains.
	StorageDomainIds []int64 `json:"storageDomainIds,omitempty"`
	// \"This field is deprecated. Please use mightHaveTagIds.\"
	Tags []string `json:"tags,omitempty"`
	// TenantId contains id of the tenant for which objects are to be returned.
	TenantId NullableString `json:"tenantId,omitempty"`
	// Specifies whether we can serve the GET request from the read replica cache. There is a lag of 15 seconds between the read replica and primary data source.
	UseCachedData NullableBool `json:"useCachedData,omitempty"`
	CassandraParams *CassandraOnPremSearchParams `json:"cassandraParams,omitempty"`
	CouchbaseParams *CouchBaseOnPremSearchParams `json:"couchbaseParams,omitempty"`
	EmailParams *SearchEmailRequestParams `json:"emailParams,omitempty"`
	ExchangeParams *SearchExchangeObjectsRequestParams `json:"exchangeParams,omitempty"`
	FileParams *SearchFileRequestParams `json:"fileParams,omitempty"`
	HbaseParams *HbaseOnPremSearchParams `json:"hbaseParams,omitempty"`
	HdfsParams *HDFSOnPremSearchParams `json:"hdfsParams,omitempty"`
	HiveParams *HiveOnPremSearchParams `json:"hiveParams,omitempty"`
	MongodbParams *MongoDbOnPremSearchParams `json:"mongodbParams,omitempty"`
	MsGroupsParams *SearchMsGroupsRequestParams `json:"msGroupsParams,omitempty"`
	MsTeamsParams *SearchMsTeamsRequestParams `json:"msTeamsParams,omitempty"`
	OneDriveParams *SearchDocumentLibraryRequestParams `json:"oneDriveParams,omitempty"`
	PublicFolderParams *SearchPublicFolderRequestParams `json:"publicFolderParams,omitempty"`
	SfdcParams *SearchSfdcRecordsRequestParams `json:"sfdcParams,omitempty"`
	SharepointParams *SearchDocumentLibraryRequestParams `json:"sharepointParams,omitempty"`
	UdaParams *UdaOnPremSearchParams `json:"udaParams,omitempty"`
}

type _SearchIndexedObjectsRequest SearchIndexedObjectsRequest

// NewSearchIndexedObjectsRequest instantiates a new SearchIndexedObjectsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchIndexedObjectsRequest(objectType string) *SearchIndexedObjectsRequest {
	this := SearchIndexedObjectsRequest{}
	var includeTenants bool = false
	this.IncludeTenants = *NewNullableBool(&includeTenants)
	this.ObjectType = objectType
	return &this
}

// NewSearchIndexedObjectsRequestWithDefaults instantiates a new SearchIndexedObjectsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchIndexedObjectsRequestWithDefaults() *SearchIndexedObjectsRequest {
	this := SearchIndexedObjectsRequest{}
	var includeTenants bool = false
	this.IncludeTenants = *NewNullableBool(&includeTenants)
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchIndexedObjectsRequest) GetCount() int32 {
	if o == nil || IsNil(o.Count.Get()) {
		var ret int32
		return ret
	}
	return *o.Count.Get()
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchIndexedObjectsRequest) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Count.Get(), o.Count.IsSet()
}

// HasCount returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasCount() bool {
	if o != nil && o.Count.IsSet() {
		return true
	}

	return false
}

// SetCount gets a reference to the given NullableInt32 and assigns it to the Count field.
func (o *SearchIndexedObjectsRequest) SetCount(v int32) {
	o.Count.Set(&v)
}
// SetCountNil sets the value for Count to be an explicit nil
func (o *SearchIndexedObjectsRequest) SetCountNil() {
	o.Count.Set(nil)
}

// UnsetCount ensures that no value is present for Count, not even an explicit nil
func (o *SearchIndexedObjectsRequest) UnsetCount() {
	o.Count.Unset()
}

// GetIncludeTenants returns the IncludeTenants field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchIndexedObjectsRequest) GetIncludeTenants() bool {
	if o == nil || IsNil(o.IncludeTenants.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeTenants.Get()
}

// GetIncludeTenantsOk returns a tuple with the IncludeTenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchIndexedObjectsRequest) GetIncludeTenantsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeTenants.Get(), o.IncludeTenants.IsSet()
}

// HasIncludeTenants returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasIncludeTenants() bool {
	if o != nil && o.IncludeTenants.IsSet() {
		return true
	}

	return false
}

// SetIncludeTenants gets a reference to the given NullableBool and assigns it to the IncludeTenants field.
func (o *SearchIndexedObjectsRequest) SetIncludeTenants(v bool) {
	o.IncludeTenants.Set(&v)
}
// SetIncludeTenantsNil sets the value for IncludeTenants to be an explicit nil
func (o *SearchIndexedObjectsRequest) SetIncludeTenantsNil() {
	o.IncludeTenants.Set(nil)
}

// UnsetIncludeTenants ensures that no value is present for IncludeTenants, not even an explicit nil
func (o *SearchIndexedObjectsRequest) UnsetIncludeTenants() {
	o.IncludeTenants.Unset()
}

// GetMightHaveSnapshotTagIds returns the MightHaveSnapshotTagIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchIndexedObjectsRequest) GetMightHaveSnapshotTagIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.MightHaveSnapshotTagIds
}

// GetMightHaveSnapshotTagIdsOk returns a tuple with the MightHaveSnapshotTagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchIndexedObjectsRequest) GetMightHaveSnapshotTagIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.MightHaveSnapshotTagIds) {
		return nil, false
	}
	return o.MightHaveSnapshotTagIds, true
}

// HasMightHaveSnapshotTagIds returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasMightHaveSnapshotTagIds() bool {
	if o != nil && !IsNil(o.MightHaveSnapshotTagIds) {
		return true
	}

	return false
}

// SetMightHaveSnapshotTagIds gets a reference to the given []string and assigns it to the MightHaveSnapshotTagIds field.
func (o *SearchIndexedObjectsRequest) SetMightHaveSnapshotTagIds(v []string) {
	o.MightHaveSnapshotTagIds = v
}

// GetMightHaveTagIds returns the MightHaveTagIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchIndexedObjectsRequest) GetMightHaveTagIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.MightHaveTagIds
}

// GetMightHaveTagIdsOk returns a tuple with the MightHaveTagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchIndexedObjectsRequest) GetMightHaveTagIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.MightHaveTagIds) {
		return nil, false
	}
	return o.MightHaveTagIds, true
}

// HasMightHaveTagIds returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasMightHaveTagIds() bool {
	if o != nil && !IsNil(o.MightHaveTagIds) {
		return true
	}

	return false
}

// SetMightHaveTagIds gets a reference to the given []string and assigns it to the MightHaveTagIds field.
func (o *SearchIndexedObjectsRequest) SetMightHaveTagIds(v []string) {
	o.MightHaveTagIds = v
}

// GetMustHaveSnapshotTagIds returns the MustHaveSnapshotTagIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchIndexedObjectsRequest) GetMustHaveSnapshotTagIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.MustHaveSnapshotTagIds
}

// GetMustHaveSnapshotTagIdsOk returns a tuple with the MustHaveSnapshotTagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchIndexedObjectsRequest) GetMustHaveSnapshotTagIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.MustHaveSnapshotTagIds) {
		return nil, false
	}
	return o.MustHaveSnapshotTagIds, true
}

// HasMustHaveSnapshotTagIds returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasMustHaveSnapshotTagIds() bool {
	if o != nil && !IsNil(o.MustHaveSnapshotTagIds) {
		return true
	}

	return false
}

// SetMustHaveSnapshotTagIds gets a reference to the given []string and assigns it to the MustHaveSnapshotTagIds field.
func (o *SearchIndexedObjectsRequest) SetMustHaveSnapshotTagIds(v []string) {
	o.MustHaveSnapshotTagIds = v
}

// GetMustHaveTagIds returns the MustHaveTagIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchIndexedObjectsRequest) GetMustHaveTagIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.MustHaveTagIds
}

// GetMustHaveTagIdsOk returns a tuple with the MustHaveTagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchIndexedObjectsRequest) GetMustHaveTagIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.MustHaveTagIds) {
		return nil, false
	}
	return o.MustHaveTagIds, true
}

// HasMustHaveTagIds returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasMustHaveTagIds() bool {
	if o != nil && !IsNil(o.MustHaveTagIds) {
		return true
	}

	return false
}

// SetMustHaveTagIds gets a reference to the given []string and assigns it to the MustHaveTagIds field.
func (o *SearchIndexedObjectsRequest) SetMustHaveTagIds(v []string) {
	o.MustHaveTagIds = v
}

// GetObjectType returns the ObjectType field value
func (o *SearchIndexedObjectsRequest) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *SearchIndexedObjectsRequest) SetObjectType(v string) {
	o.ObjectType = v
}

// GetPaginationCookie returns the PaginationCookie field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchIndexedObjectsRequest) GetPaginationCookie() string {
	if o == nil || IsNil(o.PaginationCookie.Get()) {
		var ret string
		return ret
	}
	return *o.PaginationCookie.Get()
}

// GetPaginationCookieOk returns a tuple with the PaginationCookie field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchIndexedObjectsRequest) GetPaginationCookieOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaginationCookie.Get(), o.PaginationCookie.IsSet()
}

// HasPaginationCookie returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasPaginationCookie() bool {
	if o != nil && o.PaginationCookie.IsSet() {
		return true
	}

	return false
}

// SetPaginationCookie gets a reference to the given NullableString and assigns it to the PaginationCookie field.
func (o *SearchIndexedObjectsRequest) SetPaginationCookie(v string) {
	o.PaginationCookie.Set(&v)
}
// SetPaginationCookieNil sets the value for PaginationCookie to be an explicit nil
func (o *SearchIndexedObjectsRequest) SetPaginationCookieNil() {
	o.PaginationCookie.Set(nil)
}

// UnsetPaginationCookie ensures that no value is present for PaginationCookie, not even an explicit nil
func (o *SearchIndexedObjectsRequest) UnsetPaginationCookie() {
	o.PaginationCookie.Unset()
}

// GetProtectionGroupIds returns the ProtectionGroupIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchIndexedObjectsRequest) GetProtectionGroupIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ProtectionGroupIds
}

// GetProtectionGroupIdsOk returns a tuple with the ProtectionGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchIndexedObjectsRequest) GetProtectionGroupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ProtectionGroupIds) {
		return nil, false
	}
	return o.ProtectionGroupIds, true
}

// HasProtectionGroupIds returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasProtectionGroupIds() bool {
	if o != nil && !IsNil(o.ProtectionGroupIds) {
		return true
	}

	return false
}

// SetProtectionGroupIds gets a reference to the given []string and assigns it to the ProtectionGroupIds field.
func (o *SearchIndexedObjectsRequest) SetProtectionGroupIds(v []string) {
	o.ProtectionGroupIds = v
}

// GetSnapshotTags returns the SnapshotTags field value if set, zero value otherwise.
func (o *SearchIndexedObjectsRequest) GetSnapshotTags() []string {
	if o == nil || IsNil(o.SnapshotTags) {
		var ret []string
		return ret
	}
	return o.SnapshotTags
}

// GetSnapshotTagsOk returns a tuple with the SnapshotTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetSnapshotTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.SnapshotTags) {
		return nil, false
	}
	return o.SnapshotTags, true
}

// HasSnapshotTags returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasSnapshotTags() bool {
	if o != nil && !IsNil(o.SnapshotTags) {
		return true
	}

	return false
}

// SetSnapshotTags gets a reference to the given []string and assigns it to the SnapshotTags field.
func (o *SearchIndexedObjectsRequest) SetSnapshotTags(v []string) {
	o.SnapshotTags = v
}

// GetStorageDomainIds returns the StorageDomainIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchIndexedObjectsRequest) GetStorageDomainIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.StorageDomainIds
}

// GetStorageDomainIdsOk returns a tuple with the StorageDomainIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchIndexedObjectsRequest) GetStorageDomainIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.StorageDomainIds) {
		return nil, false
	}
	return o.StorageDomainIds, true
}

// HasStorageDomainIds returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasStorageDomainIds() bool {
	if o != nil && !IsNil(o.StorageDomainIds) {
		return true
	}

	return false
}

// SetStorageDomainIds gets a reference to the given []int64 and assigns it to the StorageDomainIds field.
func (o *SearchIndexedObjectsRequest) SetStorageDomainIds(v []int64) {
	o.StorageDomainIds = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchIndexedObjectsRequest) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchIndexedObjectsRequest) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *SearchIndexedObjectsRequest) SetTags(v []string) {
	o.Tags = v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchIndexedObjectsRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchIndexedObjectsRequest) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *SearchIndexedObjectsRequest) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *SearchIndexedObjectsRequest) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *SearchIndexedObjectsRequest) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetUseCachedData returns the UseCachedData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchIndexedObjectsRequest) GetUseCachedData() bool {
	if o == nil || IsNil(o.UseCachedData.Get()) {
		var ret bool
		return ret
	}
	return *o.UseCachedData.Get()
}

// GetUseCachedDataOk returns a tuple with the UseCachedData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchIndexedObjectsRequest) GetUseCachedDataOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.UseCachedData.Get(), o.UseCachedData.IsSet()
}

// HasUseCachedData returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasUseCachedData() bool {
	if o != nil && o.UseCachedData.IsSet() {
		return true
	}

	return false
}

// SetUseCachedData gets a reference to the given NullableBool and assigns it to the UseCachedData field.
func (o *SearchIndexedObjectsRequest) SetUseCachedData(v bool) {
	o.UseCachedData.Set(&v)
}
// SetUseCachedDataNil sets the value for UseCachedData to be an explicit nil
func (o *SearchIndexedObjectsRequest) SetUseCachedDataNil() {
	o.UseCachedData.Set(nil)
}

// UnsetUseCachedData ensures that no value is present for UseCachedData, not even an explicit nil
func (o *SearchIndexedObjectsRequest) UnsetUseCachedData() {
	o.UseCachedData.Unset()
}

// GetCassandraParams returns the CassandraParams field value if set, zero value otherwise.
func (o *SearchIndexedObjectsRequest) GetCassandraParams() CassandraOnPremSearchParams {
	if o == nil || IsNil(o.CassandraParams) {
		var ret CassandraOnPremSearchParams
		return ret
	}
	return *o.CassandraParams
}

// GetCassandraParamsOk returns a tuple with the CassandraParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetCassandraParamsOk() (*CassandraOnPremSearchParams, bool) {
	if o == nil || IsNil(o.CassandraParams) {
		return nil, false
	}
	return o.CassandraParams, true
}

// HasCassandraParams returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasCassandraParams() bool {
	if o != nil && !IsNil(o.CassandraParams) {
		return true
	}

	return false
}

// SetCassandraParams gets a reference to the given CassandraOnPremSearchParams and assigns it to the CassandraParams field.
func (o *SearchIndexedObjectsRequest) SetCassandraParams(v CassandraOnPremSearchParams) {
	o.CassandraParams = &v
}

// GetCouchbaseParams returns the CouchbaseParams field value if set, zero value otherwise.
func (o *SearchIndexedObjectsRequest) GetCouchbaseParams() CouchBaseOnPremSearchParams {
	if o == nil || IsNil(o.CouchbaseParams) {
		var ret CouchBaseOnPremSearchParams
		return ret
	}
	return *o.CouchbaseParams
}

// GetCouchbaseParamsOk returns a tuple with the CouchbaseParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetCouchbaseParamsOk() (*CouchBaseOnPremSearchParams, bool) {
	if o == nil || IsNil(o.CouchbaseParams) {
		return nil, false
	}
	return o.CouchbaseParams, true
}

// HasCouchbaseParams returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasCouchbaseParams() bool {
	if o != nil && !IsNil(o.CouchbaseParams) {
		return true
	}

	return false
}

// SetCouchbaseParams gets a reference to the given CouchBaseOnPremSearchParams and assigns it to the CouchbaseParams field.
func (o *SearchIndexedObjectsRequest) SetCouchbaseParams(v CouchBaseOnPremSearchParams) {
	o.CouchbaseParams = &v
}

// GetEmailParams returns the EmailParams field value if set, zero value otherwise.
func (o *SearchIndexedObjectsRequest) GetEmailParams() SearchEmailRequestParams {
	if o == nil || IsNil(o.EmailParams) {
		var ret SearchEmailRequestParams
		return ret
	}
	return *o.EmailParams
}

// GetEmailParamsOk returns a tuple with the EmailParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetEmailParamsOk() (*SearchEmailRequestParams, bool) {
	if o == nil || IsNil(o.EmailParams) {
		return nil, false
	}
	return o.EmailParams, true
}

// HasEmailParams returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasEmailParams() bool {
	if o != nil && !IsNil(o.EmailParams) {
		return true
	}

	return false
}

// SetEmailParams gets a reference to the given SearchEmailRequestParams and assigns it to the EmailParams field.
func (o *SearchIndexedObjectsRequest) SetEmailParams(v SearchEmailRequestParams) {
	o.EmailParams = &v
}

// GetExchangeParams returns the ExchangeParams field value if set, zero value otherwise.
func (o *SearchIndexedObjectsRequest) GetExchangeParams() SearchExchangeObjectsRequestParams {
	if o == nil || IsNil(o.ExchangeParams) {
		var ret SearchExchangeObjectsRequestParams
		return ret
	}
	return *o.ExchangeParams
}

// GetExchangeParamsOk returns a tuple with the ExchangeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetExchangeParamsOk() (*SearchExchangeObjectsRequestParams, bool) {
	if o == nil || IsNil(o.ExchangeParams) {
		return nil, false
	}
	return o.ExchangeParams, true
}

// HasExchangeParams returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasExchangeParams() bool {
	if o != nil && !IsNil(o.ExchangeParams) {
		return true
	}

	return false
}

// SetExchangeParams gets a reference to the given SearchExchangeObjectsRequestParams and assigns it to the ExchangeParams field.
func (o *SearchIndexedObjectsRequest) SetExchangeParams(v SearchExchangeObjectsRequestParams) {
	o.ExchangeParams = &v
}

// GetFileParams returns the FileParams field value if set, zero value otherwise.
func (o *SearchIndexedObjectsRequest) GetFileParams() SearchFileRequestParams {
	if o == nil || IsNil(o.FileParams) {
		var ret SearchFileRequestParams
		return ret
	}
	return *o.FileParams
}

// GetFileParamsOk returns a tuple with the FileParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetFileParamsOk() (*SearchFileRequestParams, bool) {
	if o == nil || IsNil(o.FileParams) {
		return nil, false
	}
	return o.FileParams, true
}

// HasFileParams returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasFileParams() bool {
	if o != nil && !IsNil(o.FileParams) {
		return true
	}

	return false
}

// SetFileParams gets a reference to the given SearchFileRequestParams and assigns it to the FileParams field.
func (o *SearchIndexedObjectsRequest) SetFileParams(v SearchFileRequestParams) {
	o.FileParams = &v
}

// GetHbaseParams returns the HbaseParams field value if set, zero value otherwise.
func (o *SearchIndexedObjectsRequest) GetHbaseParams() HbaseOnPremSearchParams {
	if o == nil || IsNil(o.HbaseParams) {
		var ret HbaseOnPremSearchParams
		return ret
	}
	return *o.HbaseParams
}

// GetHbaseParamsOk returns a tuple with the HbaseParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetHbaseParamsOk() (*HbaseOnPremSearchParams, bool) {
	if o == nil || IsNil(o.HbaseParams) {
		return nil, false
	}
	return o.HbaseParams, true
}

// HasHbaseParams returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasHbaseParams() bool {
	if o != nil && !IsNil(o.HbaseParams) {
		return true
	}

	return false
}

// SetHbaseParams gets a reference to the given HbaseOnPremSearchParams and assigns it to the HbaseParams field.
func (o *SearchIndexedObjectsRequest) SetHbaseParams(v HbaseOnPremSearchParams) {
	o.HbaseParams = &v
}

// GetHdfsParams returns the HdfsParams field value if set, zero value otherwise.
func (o *SearchIndexedObjectsRequest) GetHdfsParams() HDFSOnPremSearchParams {
	if o == nil || IsNil(o.HdfsParams) {
		var ret HDFSOnPremSearchParams
		return ret
	}
	return *o.HdfsParams
}

// GetHdfsParamsOk returns a tuple with the HdfsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetHdfsParamsOk() (*HDFSOnPremSearchParams, bool) {
	if o == nil || IsNil(o.HdfsParams) {
		return nil, false
	}
	return o.HdfsParams, true
}

// HasHdfsParams returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasHdfsParams() bool {
	if o != nil && !IsNil(o.HdfsParams) {
		return true
	}

	return false
}

// SetHdfsParams gets a reference to the given HDFSOnPremSearchParams and assigns it to the HdfsParams field.
func (o *SearchIndexedObjectsRequest) SetHdfsParams(v HDFSOnPremSearchParams) {
	o.HdfsParams = &v
}

// GetHiveParams returns the HiveParams field value if set, zero value otherwise.
func (o *SearchIndexedObjectsRequest) GetHiveParams() HiveOnPremSearchParams {
	if o == nil || IsNil(o.HiveParams) {
		var ret HiveOnPremSearchParams
		return ret
	}
	return *o.HiveParams
}

// GetHiveParamsOk returns a tuple with the HiveParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetHiveParamsOk() (*HiveOnPremSearchParams, bool) {
	if o == nil || IsNil(o.HiveParams) {
		return nil, false
	}
	return o.HiveParams, true
}

// HasHiveParams returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasHiveParams() bool {
	if o != nil && !IsNil(o.HiveParams) {
		return true
	}

	return false
}

// SetHiveParams gets a reference to the given HiveOnPremSearchParams and assigns it to the HiveParams field.
func (o *SearchIndexedObjectsRequest) SetHiveParams(v HiveOnPremSearchParams) {
	o.HiveParams = &v
}

// GetMongodbParams returns the MongodbParams field value if set, zero value otherwise.
func (o *SearchIndexedObjectsRequest) GetMongodbParams() MongoDbOnPremSearchParams {
	if o == nil || IsNil(o.MongodbParams) {
		var ret MongoDbOnPremSearchParams
		return ret
	}
	return *o.MongodbParams
}

// GetMongodbParamsOk returns a tuple with the MongodbParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetMongodbParamsOk() (*MongoDbOnPremSearchParams, bool) {
	if o == nil || IsNil(o.MongodbParams) {
		return nil, false
	}
	return o.MongodbParams, true
}

// HasMongodbParams returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasMongodbParams() bool {
	if o != nil && !IsNil(o.MongodbParams) {
		return true
	}

	return false
}

// SetMongodbParams gets a reference to the given MongoDbOnPremSearchParams and assigns it to the MongodbParams field.
func (o *SearchIndexedObjectsRequest) SetMongodbParams(v MongoDbOnPremSearchParams) {
	o.MongodbParams = &v
}

// GetMsGroupsParams returns the MsGroupsParams field value if set, zero value otherwise.
func (o *SearchIndexedObjectsRequest) GetMsGroupsParams() SearchMsGroupsRequestParams {
	if o == nil || IsNil(o.MsGroupsParams) {
		var ret SearchMsGroupsRequestParams
		return ret
	}
	return *o.MsGroupsParams
}

// GetMsGroupsParamsOk returns a tuple with the MsGroupsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetMsGroupsParamsOk() (*SearchMsGroupsRequestParams, bool) {
	if o == nil || IsNil(o.MsGroupsParams) {
		return nil, false
	}
	return o.MsGroupsParams, true
}

// HasMsGroupsParams returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasMsGroupsParams() bool {
	if o != nil && !IsNil(o.MsGroupsParams) {
		return true
	}

	return false
}

// SetMsGroupsParams gets a reference to the given SearchMsGroupsRequestParams and assigns it to the MsGroupsParams field.
func (o *SearchIndexedObjectsRequest) SetMsGroupsParams(v SearchMsGroupsRequestParams) {
	o.MsGroupsParams = &v
}

// GetMsTeamsParams returns the MsTeamsParams field value if set, zero value otherwise.
func (o *SearchIndexedObjectsRequest) GetMsTeamsParams() SearchMsTeamsRequestParams {
	if o == nil || IsNil(o.MsTeamsParams) {
		var ret SearchMsTeamsRequestParams
		return ret
	}
	return *o.MsTeamsParams
}

// GetMsTeamsParamsOk returns a tuple with the MsTeamsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetMsTeamsParamsOk() (*SearchMsTeamsRequestParams, bool) {
	if o == nil || IsNil(o.MsTeamsParams) {
		return nil, false
	}
	return o.MsTeamsParams, true
}

// HasMsTeamsParams returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasMsTeamsParams() bool {
	if o != nil && !IsNil(o.MsTeamsParams) {
		return true
	}

	return false
}

// SetMsTeamsParams gets a reference to the given SearchMsTeamsRequestParams and assigns it to the MsTeamsParams field.
func (o *SearchIndexedObjectsRequest) SetMsTeamsParams(v SearchMsTeamsRequestParams) {
	o.MsTeamsParams = &v
}

// GetOneDriveParams returns the OneDriveParams field value if set, zero value otherwise.
func (o *SearchIndexedObjectsRequest) GetOneDriveParams() SearchDocumentLibraryRequestParams {
	if o == nil || IsNil(o.OneDriveParams) {
		var ret SearchDocumentLibraryRequestParams
		return ret
	}
	return *o.OneDriveParams
}

// GetOneDriveParamsOk returns a tuple with the OneDriveParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetOneDriveParamsOk() (*SearchDocumentLibraryRequestParams, bool) {
	if o == nil || IsNil(o.OneDriveParams) {
		return nil, false
	}
	return o.OneDriveParams, true
}

// HasOneDriveParams returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasOneDriveParams() bool {
	if o != nil && !IsNil(o.OneDriveParams) {
		return true
	}

	return false
}

// SetOneDriveParams gets a reference to the given SearchDocumentLibraryRequestParams and assigns it to the OneDriveParams field.
func (o *SearchIndexedObjectsRequest) SetOneDriveParams(v SearchDocumentLibraryRequestParams) {
	o.OneDriveParams = &v
}

// GetPublicFolderParams returns the PublicFolderParams field value if set, zero value otherwise.
func (o *SearchIndexedObjectsRequest) GetPublicFolderParams() SearchPublicFolderRequestParams {
	if o == nil || IsNil(o.PublicFolderParams) {
		var ret SearchPublicFolderRequestParams
		return ret
	}
	return *o.PublicFolderParams
}

// GetPublicFolderParamsOk returns a tuple with the PublicFolderParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetPublicFolderParamsOk() (*SearchPublicFolderRequestParams, bool) {
	if o == nil || IsNil(o.PublicFolderParams) {
		return nil, false
	}
	return o.PublicFolderParams, true
}

// HasPublicFolderParams returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasPublicFolderParams() bool {
	if o != nil && !IsNil(o.PublicFolderParams) {
		return true
	}

	return false
}

// SetPublicFolderParams gets a reference to the given SearchPublicFolderRequestParams and assigns it to the PublicFolderParams field.
func (o *SearchIndexedObjectsRequest) SetPublicFolderParams(v SearchPublicFolderRequestParams) {
	o.PublicFolderParams = &v
}

// GetSfdcParams returns the SfdcParams field value if set, zero value otherwise.
func (o *SearchIndexedObjectsRequest) GetSfdcParams() SearchSfdcRecordsRequestParams {
	if o == nil || IsNil(o.SfdcParams) {
		var ret SearchSfdcRecordsRequestParams
		return ret
	}
	return *o.SfdcParams
}

// GetSfdcParamsOk returns a tuple with the SfdcParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetSfdcParamsOk() (*SearchSfdcRecordsRequestParams, bool) {
	if o == nil || IsNil(o.SfdcParams) {
		return nil, false
	}
	return o.SfdcParams, true
}

// HasSfdcParams returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasSfdcParams() bool {
	if o != nil && !IsNil(o.SfdcParams) {
		return true
	}

	return false
}

// SetSfdcParams gets a reference to the given SearchSfdcRecordsRequestParams and assigns it to the SfdcParams field.
func (o *SearchIndexedObjectsRequest) SetSfdcParams(v SearchSfdcRecordsRequestParams) {
	o.SfdcParams = &v
}

// GetSharepointParams returns the SharepointParams field value if set, zero value otherwise.
func (o *SearchIndexedObjectsRequest) GetSharepointParams() SearchDocumentLibraryRequestParams {
	if o == nil || IsNil(o.SharepointParams) {
		var ret SearchDocumentLibraryRequestParams
		return ret
	}
	return *o.SharepointParams
}

// GetSharepointParamsOk returns a tuple with the SharepointParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetSharepointParamsOk() (*SearchDocumentLibraryRequestParams, bool) {
	if o == nil || IsNil(o.SharepointParams) {
		return nil, false
	}
	return o.SharepointParams, true
}

// HasSharepointParams returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasSharepointParams() bool {
	if o != nil && !IsNil(o.SharepointParams) {
		return true
	}

	return false
}

// SetSharepointParams gets a reference to the given SearchDocumentLibraryRequestParams and assigns it to the SharepointParams field.
func (o *SearchIndexedObjectsRequest) SetSharepointParams(v SearchDocumentLibraryRequestParams) {
	o.SharepointParams = &v
}

// GetUdaParams returns the UdaParams field value if set, zero value otherwise.
func (o *SearchIndexedObjectsRequest) GetUdaParams() UdaOnPremSearchParams {
	if o == nil || IsNil(o.UdaParams) {
		var ret UdaOnPremSearchParams
		return ret
	}
	return *o.UdaParams
}

// GetUdaParamsOk returns a tuple with the UdaParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsRequest) GetUdaParamsOk() (*UdaOnPremSearchParams, bool) {
	if o == nil || IsNil(o.UdaParams) {
		return nil, false
	}
	return o.UdaParams, true
}

// HasUdaParams returns a boolean if a field has been set.
func (o *SearchIndexedObjectsRequest) HasUdaParams() bool {
	if o != nil && !IsNil(o.UdaParams) {
		return true
	}

	return false
}

// SetUdaParams gets a reference to the given UdaOnPremSearchParams and assigns it to the UdaParams field.
func (o *SearchIndexedObjectsRequest) SetUdaParams(v UdaOnPremSearchParams) {
	o.UdaParams = &v
}

func (o SearchIndexedObjectsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchIndexedObjectsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Count.IsSet() {
		toSerialize["count"] = o.Count.Get()
	}
	if o.IncludeTenants.IsSet() {
		toSerialize["includeTenants"] = o.IncludeTenants.Get()
	}
	if o.MightHaveSnapshotTagIds != nil {
		toSerialize["mightHaveSnapshotTagIds"] = o.MightHaveSnapshotTagIds
	}
	if o.MightHaveTagIds != nil {
		toSerialize["mightHaveTagIds"] = o.MightHaveTagIds
	}
	if o.MustHaveSnapshotTagIds != nil {
		toSerialize["mustHaveSnapshotTagIds"] = o.MustHaveSnapshotTagIds
	}
	if o.MustHaveTagIds != nil {
		toSerialize["mustHaveTagIds"] = o.MustHaveTagIds
	}
	toSerialize["objectType"] = o.ObjectType
	if o.PaginationCookie.IsSet() {
		toSerialize["paginationCookie"] = o.PaginationCookie.Get()
	}
	if o.ProtectionGroupIds != nil {
		toSerialize["protectionGroupIds"] = o.ProtectionGroupIds
	}
	if !IsNil(o.SnapshotTags) {
		toSerialize["snapshotTags"] = o.SnapshotTags
	}
	if o.StorageDomainIds != nil {
		toSerialize["storageDomainIds"] = o.StorageDomainIds
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.UseCachedData.IsSet() {
		toSerialize["useCachedData"] = o.UseCachedData.Get()
	}
	if !IsNil(o.CassandraParams) {
		toSerialize["cassandraParams"] = o.CassandraParams
	}
	if !IsNil(o.CouchbaseParams) {
		toSerialize["couchbaseParams"] = o.CouchbaseParams
	}
	if !IsNil(o.EmailParams) {
		toSerialize["emailParams"] = o.EmailParams
	}
	if !IsNil(o.ExchangeParams) {
		toSerialize["exchangeParams"] = o.ExchangeParams
	}
	if !IsNil(o.FileParams) {
		toSerialize["fileParams"] = o.FileParams
	}
	if !IsNil(o.HbaseParams) {
		toSerialize["hbaseParams"] = o.HbaseParams
	}
	if !IsNil(o.HdfsParams) {
		toSerialize["hdfsParams"] = o.HdfsParams
	}
	if !IsNil(o.HiveParams) {
		toSerialize["hiveParams"] = o.HiveParams
	}
	if !IsNil(o.MongodbParams) {
		toSerialize["mongodbParams"] = o.MongodbParams
	}
	if !IsNil(o.MsGroupsParams) {
		toSerialize["msGroupsParams"] = o.MsGroupsParams
	}
	if !IsNil(o.MsTeamsParams) {
		toSerialize["msTeamsParams"] = o.MsTeamsParams
	}
	if !IsNil(o.OneDriveParams) {
		toSerialize["oneDriveParams"] = o.OneDriveParams
	}
	if !IsNil(o.PublicFolderParams) {
		toSerialize["publicFolderParams"] = o.PublicFolderParams
	}
	if !IsNil(o.SfdcParams) {
		toSerialize["sfdcParams"] = o.SfdcParams
	}
	if !IsNil(o.SharepointParams) {
		toSerialize["sharepointParams"] = o.SharepointParams
	}
	if !IsNil(o.UdaParams) {
		toSerialize["udaParams"] = o.UdaParams
	}
	return toSerialize, nil
}

func (o *SearchIndexedObjectsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objectType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSearchIndexedObjectsRequest := _SearchIndexedObjectsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSearchIndexedObjectsRequest)

	if err != nil {
		return err
	}

	*o = SearchIndexedObjectsRequest(varSearchIndexedObjectsRequest)

	return err
}

type NullableSearchIndexedObjectsRequest struct {
	value *SearchIndexedObjectsRequest
	isSet bool
}

func (v NullableSearchIndexedObjectsRequest) Get() *SearchIndexedObjectsRequest {
	return v.value
}

func (v *NullableSearchIndexedObjectsRequest) Set(val *SearchIndexedObjectsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchIndexedObjectsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchIndexedObjectsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchIndexedObjectsRequest(val *SearchIndexedObjectsRequest) *NullableSearchIndexedObjectsRequest {
	return &NullableSearchIndexedObjectsRequest{value: val, isSet: true}
}

func (v NullableSearchIndexedObjectsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchIndexedObjectsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


