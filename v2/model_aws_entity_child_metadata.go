/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AwsEntityChildMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsEntityChildMetadata{}

// AwsEntityChildMetadata Specifies the entity metadata of child entities of current aws entity.
type AwsEntityChildMetadata struct {
	AuroraMetadata *AwsAuroraEntityMetadata `json:"auroraMetadata,omitempty"`
	RdsMetadata *AwsRdsEntityMetadata `json:"rdsMetadata,omitempty"`
}

// NewAwsEntityChildMetadata instantiates a new AwsEntityChildMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsEntityChildMetadata() *AwsEntityChildMetadata {
	this := AwsEntityChildMetadata{}
	return &this
}

// NewAwsEntityChildMetadataWithDefaults instantiates a new AwsEntityChildMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsEntityChildMetadataWithDefaults() *AwsEntityChildMetadata {
	this := AwsEntityChildMetadata{}
	return &this
}

// GetAuroraMetadata returns the AuroraMetadata field value if set, zero value otherwise.
func (o *AwsEntityChildMetadata) GetAuroraMetadata() AwsAuroraEntityMetadata {
	if o == nil || IsNil(o.AuroraMetadata) {
		var ret AwsAuroraEntityMetadata
		return ret
	}
	return *o.AuroraMetadata
}

// GetAuroraMetadataOk returns a tuple with the AuroraMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsEntityChildMetadata) GetAuroraMetadataOk() (*AwsAuroraEntityMetadata, bool) {
	if o == nil || IsNil(o.AuroraMetadata) {
		return nil, false
	}
	return o.AuroraMetadata, true
}

// HasAuroraMetadata returns a boolean if a field has been set.
func (o *AwsEntityChildMetadata) HasAuroraMetadata() bool {
	if o != nil && !IsNil(o.AuroraMetadata) {
		return true
	}

	return false
}

// SetAuroraMetadata gets a reference to the given AwsAuroraEntityMetadata and assigns it to the AuroraMetadata field.
func (o *AwsEntityChildMetadata) SetAuroraMetadata(v AwsAuroraEntityMetadata) {
	o.AuroraMetadata = &v
}

// GetRdsMetadata returns the RdsMetadata field value if set, zero value otherwise.
func (o *AwsEntityChildMetadata) GetRdsMetadata() AwsRdsEntityMetadata {
	if o == nil || IsNil(o.RdsMetadata) {
		var ret AwsRdsEntityMetadata
		return ret
	}
	return *o.RdsMetadata
}

// GetRdsMetadataOk returns a tuple with the RdsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsEntityChildMetadata) GetRdsMetadataOk() (*AwsRdsEntityMetadata, bool) {
	if o == nil || IsNil(o.RdsMetadata) {
		return nil, false
	}
	return o.RdsMetadata, true
}

// HasRdsMetadata returns a boolean if a field has been set.
func (o *AwsEntityChildMetadata) HasRdsMetadata() bool {
	if o != nil && !IsNil(o.RdsMetadata) {
		return true
	}

	return false
}

// SetRdsMetadata gets a reference to the given AwsRdsEntityMetadata and assigns it to the RdsMetadata field.
func (o *AwsEntityChildMetadata) SetRdsMetadata(v AwsRdsEntityMetadata) {
	o.RdsMetadata = &v
}

func (o AwsEntityChildMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsEntityChildMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuroraMetadata) {
		toSerialize["auroraMetadata"] = o.AuroraMetadata
	}
	if !IsNil(o.RdsMetadata) {
		toSerialize["rdsMetadata"] = o.RdsMetadata
	}
	return toSerialize, nil
}

type NullableAwsEntityChildMetadata struct {
	value *AwsEntityChildMetadata
	isSet bool
}

func (v NullableAwsEntityChildMetadata) Get() *AwsEntityChildMetadata {
	return v.value
}

func (v *NullableAwsEntityChildMetadata) Set(val *AwsEntityChildMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsEntityChildMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsEntityChildMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsEntityChildMetadata(val *AwsEntityChildMetadata) *NullableAwsEntityChildMetadata {
	return &NullableAwsEntityChildMetadata{value: val, isSet: true}
}

func (v NullableAwsEntityChildMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsEntityChildMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


