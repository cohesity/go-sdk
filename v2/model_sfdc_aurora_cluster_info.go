/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SfdcAuroraClusterInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SfdcAuroraClusterInfo{}

// SfdcAuroraClusterInfo Specifies the Aurora cluster information required to protect an Sfdc Org. This parameter is filled internally by cohesity. It should not be filled by end user.
type SfdcAuroraClusterInfo struct {
	// Arn of the Aurora cluster.
	AuroraClusterArn NullableString `json:"auroraClusterArn"`
	// Contains the Arn of the IAM role of the which has access to the db user allocated to the tenant.
	DatabaseAccessIAMRoleArn NullableString `json:"databaseAccessIAMRoleArn"`
	// Database port to access the dbs on the Aurora cluster.
	DatabasePort NullableString `json:"databasePort"`
	// Database schema to access the dbs on the Aurora cluster.
	DatabaseSchema NullableString `json:"databaseSchema,omitempty"`
	// Database user to access the dbs on the Aurora cluster.
	DatabaseUser NullableString `json:"databaseUser"`
	// Reader endpoint of the Aurora cluster.
	ReaderEndpoint NullableString `json:"readerEndpoint,omitempty"`
	// Specifies the region id of the Aurora cluster.
	RegionId NullableString `json:"regionId"`
	// Contains the Arn of the IAM role which has read and write access to the tenant's s3 bucket.
	S3AccessIAMRoleArn NullableString `json:"s3AccessIAMRoleArn"`
	// Contains the tenant's S3 bucket.
	S3BucketName NullableString `json:"s3BucketName"`
	// S3Bucket prefix for the intermediate.
	S3BucketPrefix NullableString `json:"s3BucketPrefix"`
	// Contains the Id of the tenant.
	TenantId NullableString `json:"tenantId"`
	// Writer endpoint of the Aurora cluster.
	WriterEndpoint NullableString `json:"writerEndpoint"`
}

type _SfdcAuroraClusterInfo SfdcAuroraClusterInfo

// NewSfdcAuroraClusterInfo instantiates a new SfdcAuroraClusterInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSfdcAuroraClusterInfo(auroraClusterArn NullableString, databaseAccessIAMRoleArn NullableString, databasePort NullableString, databaseUser NullableString, regionId NullableString, s3AccessIAMRoleArn NullableString, s3BucketName NullableString, s3BucketPrefix NullableString, tenantId NullableString, writerEndpoint NullableString) *SfdcAuroraClusterInfo {
	this := SfdcAuroraClusterInfo{}
	this.AuroraClusterArn = auroraClusterArn
	this.DatabaseAccessIAMRoleArn = databaseAccessIAMRoleArn
	this.DatabasePort = databasePort
	this.DatabaseUser = databaseUser
	this.RegionId = regionId
	this.S3AccessIAMRoleArn = s3AccessIAMRoleArn
	this.S3BucketName = s3BucketName
	this.S3BucketPrefix = s3BucketPrefix
	this.TenantId = tenantId
	this.WriterEndpoint = writerEndpoint
	return &this
}

// NewSfdcAuroraClusterInfoWithDefaults instantiates a new SfdcAuroraClusterInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSfdcAuroraClusterInfoWithDefaults() *SfdcAuroraClusterInfo {
	this := SfdcAuroraClusterInfo{}
	return &this
}

// GetAuroraClusterArn returns the AuroraClusterArn field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SfdcAuroraClusterInfo) GetAuroraClusterArn() string {
	if o == nil || o.AuroraClusterArn.Get() == nil {
		var ret string
		return ret
	}

	return *o.AuroraClusterArn.Get()
}

// GetAuroraClusterArnOk returns a tuple with the AuroraClusterArn field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SfdcAuroraClusterInfo) GetAuroraClusterArnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuroraClusterArn.Get(), o.AuroraClusterArn.IsSet()
}

// SetAuroraClusterArn sets field value
func (o *SfdcAuroraClusterInfo) SetAuroraClusterArn(v string) {
	o.AuroraClusterArn.Set(&v)
}

// GetDatabaseAccessIAMRoleArn returns the DatabaseAccessIAMRoleArn field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SfdcAuroraClusterInfo) GetDatabaseAccessIAMRoleArn() string {
	if o == nil || o.DatabaseAccessIAMRoleArn.Get() == nil {
		var ret string
		return ret
	}

	return *o.DatabaseAccessIAMRoleArn.Get()
}

// GetDatabaseAccessIAMRoleArnOk returns a tuple with the DatabaseAccessIAMRoleArn field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SfdcAuroraClusterInfo) GetDatabaseAccessIAMRoleArnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DatabaseAccessIAMRoleArn.Get(), o.DatabaseAccessIAMRoleArn.IsSet()
}

// SetDatabaseAccessIAMRoleArn sets field value
func (o *SfdcAuroraClusterInfo) SetDatabaseAccessIAMRoleArn(v string) {
	o.DatabaseAccessIAMRoleArn.Set(&v)
}

// GetDatabasePort returns the DatabasePort field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SfdcAuroraClusterInfo) GetDatabasePort() string {
	if o == nil || o.DatabasePort.Get() == nil {
		var ret string
		return ret
	}

	return *o.DatabasePort.Get()
}

// GetDatabasePortOk returns a tuple with the DatabasePort field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SfdcAuroraClusterInfo) GetDatabasePortOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DatabasePort.Get(), o.DatabasePort.IsSet()
}

// SetDatabasePort sets field value
func (o *SfdcAuroraClusterInfo) SetDatabasePort(v string) {
	o.DatabasePort.Set(&v)
}

// GetDatabaseSchema returns the DatabaseSchema field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SfdcAuroraClusterInfo) GetDatabaseSchema() string {
	if o == nil || IsNil(o.DatabaseSchema.Get()) {
		var ret string
		return ret
	}
	return *o.DatabaseSchema.Get()
}

// GetDatabaseSchemaOk returns a tuple with the DatabaseSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SfdcAuroraClusterInfo) GetDatabaseSchemaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DatabaseSchema.Get(), o.DatabaseSchema.IsSet()
}

// HasDatabaseSchema returns a boolean if a field has been set.
func (o *SfdcAuroraClusterInfo) HasDatabaseSchema() bool {
	if o != nil && o.DatabaseSchema.IsSet() {
		return true
	}

	return false
}

// SetDatabaseSchema gets a reference to the given NullableString and assigns it to the DatabaseSchema field.
func (o *SfdcAuroraClusterInfo) SetDatabaseSchema(v string) {
	o.DatabaseSchema.Set(&v)
}
// SetDatabaseSchemaNil sets the value for DatabaseSchema to be an explicit nil
func (o *SfdcAuroraClusterInfo) SetDatabaseSchemaNil() {
	o.DatabaseSchema.Set(nil)
}

// UnsetDatabaseSchema ensures that no value is present for DatabaseSchema, not even an explicit nil
func (o *SfdcAuroraClusterInfo) UnsetDatabaseSchema() {
	o.DatabaseSchema.Unset()
}

// GetDatabaseUser returns the DatabaseUser field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SfdcAuroraClusterInfo) GetDatabaseUser() string {
	if o == nil || o.DatabaseUser.Get() == nil {
		var ret string
		return ret
	}

	return *o.DatabaseUser.Get()
}

// GetDatabaseUserOk returns a tuple with the DatabaseUser field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SfdcAuroraClusterInfo) GetDatabaseUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DatabaseUser.Get(), o.DatabaseUser.IsSet()
}

// SetDatabaseUser sets field value
func (o *SfdcAuroraClusterInfo) SetDatabaseUser(v string) {
	o.DatabaseUser.Set(&v)
}

// GetReaderEndpoint returns the ReaderEndpoint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SfdcAuroraClusterInfo) GetReaderEndpoint() string {
	if o == nil || IsNil(o.ReaderEndpoint.Get()) {
		var ret string
		return ret
	}
	return *o.ReaderEndpoint.Get()
}

// GetReaderEndpointOk returns a tuple with the ReaderEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SfdcAuroraClusterInfo) GetReaderEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReaderEndpoint.Get(), o.ReaderEndpoint.IsSet()
}

// HasReaderEndpoint returns a boolean if a field has been set.
func (o *SfdcAuroraClusterInfo) HasReaderEndpoint() bool {
	if o != nil && o.ReaderEndpoint.IsSet() {
		return true
	}

	return false
}

// SetReaderEndpoint gets a reference to the given NullableString and assigns it to the ReaderEndpoint field.
func (o *SfdcAuroraClusterInfo) SetReaderEndpoint(v string) {
	o.ReaderEndpoint.Set(&v)
}
// SetReaderEndpointNil sets the value for ReaderEndpoint to be an explicit nil
func (o *SfdcAuroraClusterInfo) SetReaderEndpointNil() {
	o.ReaderEndpoint.Set(nil)
}

// UnsetReaderEndpoint ensures that no value is present for ReaderEndpoint, not even an explicit nil
func (o *SfdcAuroraClusterInfo) UnsetReaderEndpoint() {
	o.ReaderEndpoint.Unset()
}

// GetRegionId returns the RegionId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SfdcAuroraClusterInfo) GetRegionId() string {
	if o == nil || o.RegionId.Get() == nil {
		var ret string
		return ret
	}

	return *o.RegionId.Get()
}

// GetRegionIdOk returns a tuple with the RegionId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SfdcAuroraClusterInfo) GetRegionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RegionId.Get(), o.RegionId.IsSet()
}

// SetRegionId sets field value
func (o *SfdcAuroraClusterInfo) SetRegionId(v string) {
	o.RegionId.Set(&v)
}

// GetS3AccessIAMRoleArn returns the S3AccessIAMRoleArn field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SfdcAuroraClusterInfo) GetS3AccessIAMRoleArn() string {
	if o == nil || o.S3AccessIAMRoleArn.Get() == nil {
		var ret string
		return ret
	}

	return *o.S3AccessIAMRoleArn.Get()
}

// GetS3AccessIAMRoleArnOk returns a tuple with the S3AccessIAMRoleArn field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SfdcAuroraClusterInfo) GetS3AccessIAMRoleArnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.S3AccessIAMRoleArn.Get(), o.S3AccessIAMRoleArn.IsSet()
}

// SetS3AccessIAMRoleArn sets field value
func (o *SfdcAuroraClusterInfo) SetS3AccessIAMRoleArn(v string) {
	o.S3AccessIAMRoleArn.Set(&v)
}

// GetS3BucketName returns the S3BucketName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SfdcAuroraClusterInfo) GetS3BucketName() string {
	if o == nil || o.S3BucketName.Get() == nil {
		var ret string
		return ret
	}

	return *o.S3BucketName.Get()
}

// GetS3BucketNameOk returns a tuple with the S3BucketName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SfdcAuroraClusterInfo) GetS3BucketNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.S3BucketName.Get(), o.S3BucketName.IsSet()
}

// SetS3BucketName sets field value
func (o *SfdcAuroraClusterInfo) SetS3BucketName(v string) {
	o.S3BucketName.Set(&v)
}

// GetS3BucketPrefix returns the S3BucketPrefix field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SfdcAuroraClusterInfo) GetS3BucketPrefix() string {
	if o == nil || o.S3BucketPrefix.Get() == nil {
		var ret string
		return ret
	}

	return *o.S3BucketPrefix.Get()
}

// GetS3BucketPrefixOk returns a tuple with the S3BucketPrefix field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SfdcAuroraClusterInfo) GetS3BucketPrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.S3BucketPrefix.Get(), o.S3BucketPrefix.IsSet()
}

// SetS3BucketPrefix sets field value
func (o *SfdcAuroraClusterInfo) SetS3BucketPrefix(v string) {
	o.S3BucketPrefix.Set(&v)
}

// GetTenantId returns the TenantId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SfdcAuroraClusterInfo) GetTenantId() string {
	if o == nil || o.TenantId.Get() == nil {
		var ret string
		return ret
	}

	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SfdcAuroraClusterInfo) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// SetTenantId sets field value
func (o *SfdcAuroraClusterInfo) SetTenantId(v string) {
	o.TenantId.Set(&v)
}

// GetWriterEndpoint returns the WriterEndpoint field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SfdcAuroraClusterInfo) GetWriterEndpoint() string {
	if o == nil || o.WriterEndpoint.Get() == nil {
		var ret string
		return ret
	}

	return *o.WriterEndpoint.Get()
}

// GetWriterEndpointOk returns a tuple with the WriterEndpoint field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SfdcAuroraClusterInfo) GetWriterEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WriterEndpoint.Get(), o.WriterEndpoint.IsSet()
}

// SetWriterEndpoint sets field value
func (o *SfdcAuroraClusterInfo) SetWriterEndpoint(v string) {
	o.WriterEndpoint.Set(&v)
}

func (o SfdcAuroraClusterInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SfdcAuroraClusterInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["auroraClusterArn"] = o.AuroraClusterArn.Get()
	toSerialize["databaseAccessIAMRoleArn"] = o.DatabaseAccessIAMRoleArn.Get()
	toSerialize["databasePort"] = o.DatabasePort.Get()
	if o.DatabaseSchema.IsSet() {
		toSerialize["databaseSchema"] = o.DatabaseSchema.Get()
	}
	toSerialize["databaseUser"] = o.DatabaseUser.Get()
	if o.ReaderEndpoint.IsSet() {
		toSerialize["readerEndpoint"] = o.ReaderEndpoint.Get()
	}
	toSerialize["regionId"] = o.RegionId.Get()
	toSerialize["s3AccessIAMRoleArn"] = o.S3AccessIAMRoleArn.Get()
	toSerialize["s3BucketName"] = o.S3BucketName.Get()
	toSerialize["s3BucketPrefix"] = o.S3BucketPrefix.Get()
	toSerialize["tenantId"] = o.TenantId.Get()
	toSerialize["writerEndpoint"] = o.WriterEndpoint.Get()
	return toSerialize, nil
}

func (o *SfdcAuroraClusterInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"auroraClusterArn",
		"databaseAccessIAMRoleArn",
		"databasePort",
		"databaseUser",
		"regionId",
		"s3AccessIAMRoleArn",
		"s3BucketName",
		"s3BucketPrefix",
		"tenantId",
		"writerEndpoint",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSfdcAuroraClusterInfo := _SfdcAuroraClusterInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSfdcAuroraClusterInfo)

	if err != nil {
		return err
	}

	*o = SfdcAuroraClusterInfo(varSfdcAuroraClusterInfo)

	return err
}

type NullableSfdcAuroraClusterInfo struct {
	value *SfdcAuroraClusterInfo
	isSet bool
}

func (v NullableSfdcAuroraClusterInfo) Get() *SfdcAuroraClusterInfo {
	return v.value
}

func (v *NullableSfdcAuroraClusterInfo) Set(val *SfdcAuroraClusterInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSfdcAuroraClusterInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSfdcAuroraClusterInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSfdcAuroraClusterInfo(val *SfdcAuroraClusterInfo) *NullableSfdcAuroraClusterInfo {
	return &NullableSfdcAuroraClusterInfo{value: val, isSet: true}
}

func (v NullableSfdcAuroraClusterInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSfdcAuroraClusterInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


