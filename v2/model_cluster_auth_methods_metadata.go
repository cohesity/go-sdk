/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ClusterAuthMethodsMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterAuthMethodsMetadata{}

// ClusterAuthMethodsMetadata Specifies the metadata for various authentication methods that can be used to validate the cluster access.
type ClusterAuthMethodsMetadata struct {
	ExternalTargetAuthentication *ExternalTargetAuthMetadata `json:"externalTargetAuthentication,omitempty"`
	FetchRolesAuthentication ClusterRolesAuthMetadata `json:"fetchRolesAuthentication"`
	KmsAuthentication *KmsAuthMetadata `json:"kmsAuthentication,omitempty"`
}

type _ClusterAuthMethodsMetadata ClusterAuthMethodsMetadata

// NewClusterAuthMethodsMetadata instantiates a new ClusterAuthMethodsMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterAuthMethodsMetadata(fetchRolesAuthentication ClusterRolesAuthMetadata) *ClusterAuthMethodsMetadata {
	this := ClusterAuthMethodsMetadata{}
	this.FetchRolesAuthentication = fetchRolesAuthentication
	return &this
}

// NewClusterAuthMethodsMetadataWithDefaults instantiates a new ClusterAuthMethodsMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterAuthMethodsMetadataWithDefaults() *ClusterAuthMethodsMetadata {
	this := ClusterAuthMethodsMetadata{}
	return &this
}

// GetExternalTargetAuthentication returns the ExternalTargetAuthentication field value if set, zero value otherwise.
func (o *ClusterAuthMethodsMetadata) GetExternalTargetAuthentication() ExternalTargetAuthMetadata {
	if o == nil || IsNil(o.ExternalTargetAuthentication) {
		var ret ExternalTargetAuthMetadata
		return ret
	}
	return *o.ExternalTargetAuthentication
}

// GetExternalTargetAuthenticationOk returns a tuple with the ExternalTargetAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAuthMethodsMetadata) GetExternalTargetAuthenticationOk() (*ExternalTargetAuthMetadata, bool) {
	if o == nil || IsNil(o.ExternalTargetAuthentication) {
		return nil, false
	}
	return o.ExternalTargetAuthentication, true
}

// HasExternalTargetAuthentication returns a boolean if a field has been set.
func (o *ClusterAuthMethodsMetadata) HasExternalTargetAuthentication() bool {
	if o != nil && !IsNil(o.ExternalTargetAuthentication) {
		return true
	}

	return false
}

// SetExternalTargetAuthentication gets a reference to the given ExternalTargetAuthMetadata and assigns it to the ExternalTargetAuthentication field.
func (o *ClusterAuthMethodsMetadata) SetExternalTargetAuthentication(v ExternalTargetAuthMetadata) {
	o.ExternalTargetAuthentication = &v
}

// GetFetchRolesAuthentication returns the FetchRolesAuthentication field value
func (o *ClusterAuthMethodsMetadata) GetFetchRolesAuthentication() ClusterRolesAuthMetadata {
	if o == nil {
		var ret ClusterRolesAuthMetadata
		return ret
	}

	return o.FetchRolesAuthentication
}

// GetFetchRolesAuthenticationOk returns a tuple with the FetchRolesAuthentication field value
// and a boolean to check if the value has been set.
func (o *ClusterAuthMethodsMetadata) GetFetchRolesAuthenticationOk() (*ClusterRolesAuthMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FetchRolesAuthentication, true
}

// SetFetchRolesAuthentication sets field value
func (o *ClusterAuthMethodsMetadata) SetFetchRolesAuthentication(v ClusterRolesAuthMetadata) {
	o.FetchRolesAuthentication = v
}

// GetKmsAuthentication returns the KmsAuthentication field value if set, zero value otherwise.
func (o *ClusterAuthMethodsMetadata) GetKmsAuthentication() KmsAuthMetadata {
	if o == nil || IsNil(o.KmsAuthentication) {
		var ret KmsAuthMetadata
		return ret
	}
	return *o.KmsAuthentication
}

// GetKmsAuthenticationOk returns a tuple with the KmsAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAuthMethodsMetadata) GetKmsAuthenticationOk() (*KmsAuthMetadata, bool) {
	if o == nil || IsNil(o.KmsAuthentication) {
		return nil, false
	}
	return o.KmsAuthentication, true
}

// HasKmsAuthentication returns a boolean if a field has been set.
func (o *ClusterAuthMethodsMetadata) HasKmsAuthentication() bool {
	if o != nil && !IsNil(o.KmsAuthentication) {
		return true
	}

	return false
}

// SetKmsAuthentication gets a reference to the given KmsAuthMetadata and assigns it to the KmsAuthentication field.
func (o *ClusterAuthMethodsMetadata) SetKmsAuthentication(v KmsAuthMetadata) {
	o.KmsAuthentication = &v
}

func (o ClusterAuthMethodsMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterAuthMethodsMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExternalTargetAuthentication) {
		toSerialize["externalTargetAuthentication"] = o.ExternalTargetAuthentication
	}
	toSerialize["fetchRolesAuthentication"] = o.FetchRolesAuthentication
	if !IsNil(o.KmsAuthentication) {
		toSerialize["kmsAuthentication"] = o.KmsAuthentication
	}
	return toSerialize, nil
}

func (o *ClusterAuthMethodsMetadata) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fetchRolesAuthentication",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterAuthMethodsMetadata := _ClusterAuthMethodsMetadata{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterAuthMethodsMetadata)

	if err != nil {
		return err
	}

	*o = ClusterAuthMethodsMetadata(varClusterAuthMethodsMetadata)

	return err
}

type NullableClusterAuthMethodsMetadata struct {
	value *ClusterAuthMethodsMetadata
	isSet bool
}

func (v NullableClusterAuthMethodsMetadata) Get() *ClusterAuthMethodsMetadata {
	return v.value
}

func (v *NullableClusterAuthMethodsMetadata) Set(val *ClusterAuthMethodsMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterAuthMethodsMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterAuthMethodsMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterAuthMethodsMetadata(val *ClusterAuthMethodsMetadata) *NullableClusterAuthMethodsMetadata {
	return &NullableClusterAuthMethodsMetadata{value: val, isSet: true}
}

func (v NullableClusterAuthMethodsMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterAuthMethodsMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


