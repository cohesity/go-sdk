/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UdaObjectProtectionRequestParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UdaObjectProtectionRequestParams{}

// UdaObjectProtectionRequestParams Specifies the request parameters specific to Universal Data Adapter object protection.
type UdaObjectProtectionRequestParams struct {
	// Specifies the map of custom arguments to be supplied to the various backup scripts.
	BackupJobArguments []KeyValuePair `json:"backupJobArguments,omitempty"`
	// Specifies the maximum number of concurrent IO Streams thatwill be created to exchange data with the cluster. If not specified, the default value is taken as 1.
	Concurrency NullableInt32 `json:"concurrency,omitempty"`
	// Specifies the custom arguments to be supplied to the full backup script when a full backup is enabled in the policy. This field is deprecated. Use backupJobArguments instead.
	FullBackupArgs NullableString `json:"fullBackupArgs,omitempty"`
	// Specifies whether this Protection Group is created from a source having entity support.
	HasEntitySupport NullableBool `json:"hasEntitySupport,omitempty"`
	// Specifies the custom arguments to be supplied to the incremental backup script when an incremental backup is enabled in the policy. This field is deprecated. Use backupJobArguments instead.
	IncrBackupArgs NullableString `json:"incrBackupArgs,omitempty"`
	// Specifies the custom arguments to be supplied to the log backup script when a log backup is enabled in the policy. This field is deprecated. Use backupJobArguments instead.
	LogBackupArgs NullableString `json:"logBackupArgs,omitempty"`
	// Specifies the maximum number of view mounts per host. If not specified, the default value is taken as 1.
	Mounts NullableInt32 `json:"mounts,omitempty"`
	// Specifies the objects to be included in the Object Protection.
	Objects []UdaObjectProtectionObjectParams `json:"objects"`
}

type _UdaObjectProtectionRequestParams UdaObjectProtectionRequestParams

// NewUdaObjectProtectionRequestParams instantiates a new UdaObjectProtectionRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUdaObjectProtectionRequestParams(objects []UdaObjectProtectionObjectParams) *UdaObjectProtectionRequestParams {
	this := UdaObjectProtectionRequestParams{}
	var concurrency int32 = 1
	this.Concurrency = *NewNullableInt32(&concurrency)
	var mounts int32 = 1
	this.Mounts = *NewNullableInt32(&mounts)
	this.Objects = objects
	return &this
}

// NewUdaObjectProtectionRequestParamsWithDefaults instantiates a new UdaObjectProtectionRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUdaObjectProtectionRequestParamsWithDefaults() *UdaObjectProtectionRequestParams {
	this := UdaObjectProtectionRequestParams{}
	var concurrency int32 = 1
	this.Concurrency = *NewNullableInt32(&concurrency)
	var mounts int32 = 1
	this.Mounts = *NewNullableInt32(&mounts)
	return &this
}

// GetBackupJobArguments returns the BackupJobArguments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaObjectProtectionRequestParams) GetBackupJobArguments() []KeyValuePair {
	if o == nil {
		var ret []KeyValuePair
		return ret
	}
	return o.BackupJobArguments
}

// GetBackupJobArgumentsOk returns a tuple with the BackupJobArguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaObjectProtectionRequestParams) GetBackupJobArgumentsOk() ([]KeyValuePair, bool) {
	if o == nil || IsNil(o.BackupJobArguments) {
		return nil, false
	}
	return o.BackupJobArguments, true
}

// HasBackupJobArguments returns a boolean if a field has been set.
func (o *UdaObjectProtectionRequestParams) HasBackupJobArguments() bool {
	if o != nil && !IsNil(o.BackupJobArguments) {
		return true
	}

	return false
}

// SetBackupJobArguments gets a reference to the given []KeyValuePair and assigns it to the BackupJobArguments field.
func (o *UdaObjectProtectionRequestParams) SetBackupJobArguments(v []KeyValuePair) {
	o.BackupJobArguments = v
}

// GetConcurrency returns the Concurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaObjectProtectionRequestParams) GetConcurrency() int32 {
	if o == nil || IsNil(o.Concurrency.Get()) {
		var ret int32
		return ret
	}
	return *o.Concurrency.Get()
}

// GetConcurrencyOk returns a tuple with the Concurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaObjectProtectionRequestParams) GetConcurrencyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Concurrency.Get(), o.Concurrency.IsSet()
}

// HasConcurrency returns a boolean if a field has been set.
func (o *UdaObjectProtectionRequestParams) HasConcurrency() bool {
	if o != nil && o.Concurrency.IsSet() {
		return true
	}

	return false
}

// SetConcurrency gets a reference to the given NullableInt32 and assigns it to the Concurrency field.
func (o *UdaObjectProtectionRequestParams) SetConcurrency(v int32) {
	o.Concurrency.Set(&v)
}
// SetConcurrencyNil sets the value for Concurrency to be an explicit nil
func (o *UdaObjectProtectionRequestParams) SetConcurrencyNil() {
	o.Concurrency.Set(nil)
}

// UnsetConcurrency ensures that no value is present for Concurrency, not even an explicit nil
func (o *UdaObjectProtectionRequestParams) UnsetConcurrency() {
	o.Concurrency.Unset()
}

// GetFullBackupArgs returns the FullBackupArgs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaObjectProtectionRequestParams) GetFullBackupArgs() string {
	if o == nil || IsNil(o.FullBackupArgs.Get()) {
		var ret string
		return ret
	}
	return *o.FullBackupArgs.Get()
}

// GetFullBackupArgsOk returns a tuple with the FullBackupArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaObjectProtectionRequestParams) GetFullBackupArgsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FullBackupArgs.Get(), o.FullBackupArgs.IsSet()
}

// HasFullBackupArgs returns a boolean if a field has been set.
func (o *UdaObjectProtectionRequestParams) HasFullBackupArgs() bool {
	if o != nil && o.FullBackupArgs.IsSet() {
		return true
	}

	return false
}

// SetFullBackupArgs gets a reference to the given NullableString and assigns it to the FullBackupArgs field.
func (o *UdaObjectProtectionRequestParams) SetFullBackupArgs(v string) {
	o.FullBackupArgs.Set(&v)
}
// SetFullBackupArgsNil sets the value for FullBackupArgs to be an explicit nil
func (o *UdaObjectProtectionRequestParams) SetFullBackupArgsNil() {
	o.FullBackupArgs.Set(nil)
}

// UnsetFullBackupArgs ensures that no value is present for FullBackupArgs, not even an explicit nil
func (o *UdaObjectProtectionRequestParams) UnsetFullBackupArgs() {
	o.FullBackupArgs.Unset()
}

// GetHasEntitySupport returns the HasEntitySupport field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaObjectProtectionRequestParams) GetHasEntitySupport() bool {
	if o == nil || IsNil(o.HasEntitySupport.Get()) {
		var ret bool
		return ret
	}
	return *o.HasEntitySupport.Get()
}

// GetHasEntitySupportOk returns a tuple with the HasEntitySupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaObjectProtectionRequestParams) GetHasEntitySupportOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasEntitySupport.Get(), o.HasEntitySupport.IsSet()
}

// HasHasEntitySupport returns a boolean if a field has been set.
func (o *UdaObjectProtectionRequestParams) HasHasEntitySupport() bool {
	if o != nil && o.HasEntitySupport.IsSet() {
		return true
	}

	return false
}

// SetHasEntitySupport gets a reference to the given NullableBool and assigns it to the HasEntitySupport field.
func (o *UdaObjectProtectionRequestParams) SetHasEntitySupport(v bool) {
	o.HasEntitySupport.Set(&v)
}
// SetHasEntitySupportNil sets the value for HasEntitySupport to be an explicit nil
func (o *UdaObjectProtectionRequestParams) SetHasEntitySupportNil() {
	o.HasEntitySupport.Set(nil)
}

// UnsetHasEntitySupport ensures that no value is present for HasEntitySupport, not even an explicit nil
func (o *UdaObjectProtectionRequestParams) UnsetHasEntitySupport() {
	o.HasEntitySupport.Unset()
}

// GetIncrBackupArgs returns the IncrBackupArgs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaObjectProtectionRequestParams) GetIncrBackupArgs() string {
	if o == nil || IsNil(o.IncrBackupArgs.Get()) {
		var ret string
		return ret
	}
	return *o.IncrBackupArgs.Get()
}

// GetIncrBackupArgsOk returns a tuple with the IncrBackupArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaObjectProtectionRequestParams) GetIncrBackupArgsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncrBackupArgs.Get(), o.IncrBackupArgs.IsSet()
}

// HasIncrBackupArgs returns a boolean if a field has been set.
func (o *UdaObjectProtectionRequestParams) HasIncrBackupArgs() bool {
	if o != nil && o.IncrBackupArgs.IsSet() {
		return true
	}

	return false
}

// SetIncrBackupArgs gets a reference to the given NullableString and assigns it to the IncrBackupArgs field.
func (o *UdaObjectProtectionRequestParams) SetIncrBackupArgs(v string) {
	o.IncrBackupArgs.Set(&v)
}
// SetIncrBackupArgsNil sets the value for IncrBackupArgs to be an explicit nil
func (o *UdaObjectProtectionRequestParams) SetIncrBackupArgsNil() {
	o.IncrBackupArgs.Set(nil)
}

// UnsetIncrBackupArgs ensures that no value is present for IncrBackupArgs, not even an explicit nil
func (o *UdaObjectProtectionRequestParams) UnsetIncrBackupArgs() {
	o.IncrBackupArgs.Unset()
}

// GetLogBackupArgs returns the LogBackupArgs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaObjectProtectionRequestParams) GetLogBackupArgs() string {
	if o == nil || IsNil(o.LogBackupArgs.Get()) {
		var ret string
		return ret
	}
	return *o.LogBackupArgs.Get()
}

// GetLogBackupArgsOk returns a tuple with the LogBackupArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaObjectProtectionRequestParams) GetLogBackupArgsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogBackupArgs.Get(), o.LogBackupArgs.IsSet()
}

// HasLogBackupArgs returns a boolean if a field has been set.
func (o *UdaObjectProtectionRequestParams) HasLogBackupArgs() bool {
	if o != nil && o.LogBackupArgs.IsSet() {
		return true
	}

	return false
}

// SetLogBackupArgs gets a reference to the given NullableString and assigns it to the LogBackupArgs field.
func (o *UdaObjectProtectionRequestParams) SetLogBackupArgs(v string) {
	o.LogBackupArgs.Set(&v)
}
// SetLogBackupArgsNil sets the value for LogBackupArgs to be an explicit nil
func (o *UdaObjectProtectionRequestParams) SetLogBackupArgsNil() {
	o.LogBackupArgs.Set(nil)
}

// UnsetLogBackupArgs ensures that no value is present for LogBackupArgs, not even an explicit nil
func (o *UdaObjectProtectionRequestParams) UnsetLogBackupArgs() {
	o.LogBackupArgs.Unset()
}

// GetMounts returns the Mounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaObjectProtectionRequestParams) GetMounts() int32 {
	if o == nil || IsNil(o.Mounts.Get()) {
		var ret int32
		return ret
	}
	return *o.Mounts.Get()
}

// GetMountsOk returns a tuple with the Mounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaObjectProtectionRequestParams) GetMountsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mounts.Get(), o.Mounts.IsSet()
}

// HasMounts returns a boolean if a field has been set.
func (o *UdaObjectProtectionRequestParams) HasMounts() bool {
	if o != nil && o.Mounts.IsSet() {
		return true
	}

	return false
}

// SetMounts gets a reference to the given NullableInt32 and assigns it to the Mounts field.
func (o *UdaObjectProtectionRequestParams) SetMounts(v int32) {
	o.Mounts.Set(&v)
}
// SetMountsNil sets the value for Mounts to be an explicit nil
func (o *UdaObjectProtectionRequestParams) SetMountsNil() {
	o.Mounts.Set(nil)
}

// UnsetMounts ensures that no value is present for Mounts, not even an explicit nil
func (o *UdaObjectProtectionRequestParams) UnsetMounts() {
	o.Mounts.Unset()
}

// GetObjects returns the Objects field value
func (o *UdaObjectProtectionRequestParams) GetObjects() []UdaObjectProtectionObjectParams {
	if o == nil {
		var ret []UdaObjectProtectionObjectParams
		return ret
	}

	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value
// and a boolean to check if the value has been set.
func (o *UdaObjectProtectionRequestParams) GetObjectsOk() ([]UdaObjectProtectionObjectParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.Objects, true
}

// SetObjects sets field value
func (o *UdaObjectProtectionRequestParams) SetObjects(v []UdaObjectProtectionObjectParams) {
	o.Objects = v
}

func (o UdaObjectProtectionRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UdaObjectProtectionRequestParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BackupJobArguments != nil {
		toSerialize["backupJobArguments"] = o.BackupJobArguments
	}
	if o.Concurrency.IsSet() {
		toSerialize["concurrency"] = o.Concurrency.Get()
	}
	if o.FullBackupArgs.IsSet() {
		toSerialize["fullBackupArgs"] = o.FullBackupArgs.Get()
	}
	if o.HasEntitySupport.IsSet() {
		toSerialize["hasEntitySupport"] = o.HasEntitySupport.Get()
	}
	if o.IncrBackupArgs.IsSet() {
		toSerialize["incrBackupArgs"] = o.IncrBackupArgs.Get()
	}
	if o.LogBackupArgs.IsSet() {
		toSerialize["logBackupArgs"] = o.LogBackupArgs.Get()
	}
	if o.Mounts.IsSet() {
		toSerialize["mounts"] = o.Mounts.Get()
	}
	toSerialize["objects"] = o.Objects
	return toSerialize, nil
}

func (o *UdaObjectProtectionRequestParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objects",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUdaObjectProtectionRequestParams := _UdaObjectProtectionRequestParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUdaObjectProtectionRequestParams)

	if err != nil {
		return err
	}

	*o = UdaObjectProtectionRequestParams(varUdaObjectProtectionRequestParams)

	return err
}

type NullableUdaObjectProtectionRequestParams struct {
	value *UdaObjectProtectionRequestParams
	isSet bool
}

func (v NullableUdaObjectProtectionRequestParams) Get() *UdaObjectProtectionRequestParams {
	return v.value
}

func (v *NullableUdaObjectProtectionRequestParams) Set(val *UdaObjectProtectionRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUdaObjectProtectionRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUdaObjectProtectionRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUdaObjectProtectionRequestParams(val *UdaObjectProtectionRequestParams) *NullableUdaObjectProtectionRequestParams {
	return &NullableUdaObjectProtectionRequestParams{value: val, isSet: true}
}

func (v NullableUdaObjectProtectionRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUdaObjectProtectionRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


