/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CapacityTrendDatapoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CapacityTrendDatapoint{}

// CapacityTrendDatapoint A data point for the capacity trend analysis chart.
type CapacityTrendDatapoint struct {
	// Specifies an array of tag and its corresponding statistic.
	DataPointStats []CapacityTrendDatapointStats `json:"dataPointStats,omitempty"`
	// Specifies the timestamp of this data point.
	DataPointTimestamp *int64 `json:"dataPointTimestamp,omitempty"`
	// Specifies error messages, if any error is encountered while fetching the datapoint stats.
	ErrorMessages []string `json:"errorMessages,omitempty"`
}

// NewCapacityTrendDatapoint instantiates a new CapacityTrendDatapoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCapacityTrendDatapoint() *CapacityTrendDatapoint {
	this := CapacityTrendDatapoint{}
	return &this
}

// NewCapacityTrendDatapointWithDefaults instantiates a new CapacityTrendDatapoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCapacityTrendDatapointWithDefaults() *CapacityTrendDatapoint {
	this := CapacityTrendDatapoint{}
	return &this
}

// GetDataPointStats returns the DataPointStats field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CapacityTrendDatapoint) GetDataPointStats() []CapacityTrendDatapointStats {
	if o == nil {
		var ret []CapacityTrendDatapointStats
		return ret
	}
	return o.DataPointStats
}

// GetDataPointStatsOk returns a tuple with the DataPointStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CapacityTrendDatapoint) GetDataPointStatsOk() ([]CapacityTrendDatapointStats, bool) {
	if o == nil || IsNil(o.DataPointStats) {
		return nil, false
	}
	return o.DataPointStats, true
}

// HasDataPointStats returns a boolean if a field has been set.
func (o *CapacityTrendDatapoint) HasDataPointStats() bool {
	if o != nil && !IsNil(o.DataPointStats) {
		return true
	}

	return false
}

// SetDataPointStats gets a reference to the given []CapacityTrendDatapointStats and assigns it to the DataPointStats field.
func (o *CapacityTrendDatapoint) SetDataPointStats(v []CapacityTrendDatapointStats) {
	o.DataPointStats = v
}

// GetDataPointTimestamp returns the DataPointTimestamp field value if set, zero value otherwise.
func (o *CapacityTrendDatapoint) GetDataPointTimestamp() int64 {
	if o == nil || IsNil(o.DataPointTimestamp) {
		var ret int64
		return ret
	}
	return *o.DataPointTimestamp
}

// GetDataPointTimestampOk returns a tuple with the DataPointTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityTrendDatapoint) GetDataPointTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.DataPointTimestamp) {
		return nil, false
	}
	return o.DataPointTimestamp, true
}

// HasDataPointTimestamp returns a boolean if a field has been set.
func (o *CapacityTrendDatapoint) HasDataPointTimestamp() bool {
	if o != nil && !IsNil(o.DataPointTimestamp) {
		return true
	}

	return false
}

// SetDataPointTimestamp gets a reference to the given int64 and assigns it to the DataPointTimestamp field.
func (o *CapacityTrendDatapoint) SetDataPointTimestamp(v int64) {
	o.DataPointTimestamp = &v
}

// GetErrorMessages returns the ErrorMessages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CapacityTrendDatapoint) GetErrorMessages() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ErrorMessages
}

// GetErrorMessagesOk returns a tuple with the ErrorMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CapacityTrendDatapoint) GetErrorMessagesOk() ([]string, bool) {
	if o == nil || IsNil(o.ErrorMessages) {
		return nil, false
	}
	return o.ErrorMessages, true
}

// HasErrorMessages returns a boolean if a field has been set.
func (o *CapacityTrendDatapoint) HasErrorMessages() bool {
	if o != nil && !IsNil(o.ErrorMessages) {
		return true
	}

	return false
}

// SetErrorMessages gets a reference to the given []string and assigns it to the ErrorMessages field.
func (o *CapacityTrendDatapoint) SetErrorMessages(v []string) {
	o.ErrorMessages = v
}

func (o CapacityTrendDatapoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CapacityTrendDatapoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DataPointStats != nil {
		toSerialize["dataPointStats"] = o.DataPointStats
	}
	if !IsNil(o.DataPointTimestamp) {
		toSerialize["dataPointTimestamp"] = o.DataPointTimestamp
	}
	if o.ErrorMessages != nil {
		toSerialize["errorMessages"] = o.ErrorMessages
	}
	return toSerialize, nil
}

type NullableCapacityTrendDatapoint struct {
	value *CapacityTrendDatapoint
	isSet bool
}

func (v NullableCapacityTrendDatapoint) Get() *CapacityTrendDatapoint {
	return v.value
}

func (v *NullableCapacityTrendDatapoint) Set(val *CapacityTrendDatapoint) {
	v.value = val
	v.isSet = true
}

func (v NullableCapacityTrendDatapoint) IsSet() bool {
	return v.isSet
}

func (v *NullableCapacityTrendDatapoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCapacityTrendDatapoint(val *CapacityTrendDatapoint) *NullableCapacityTrendDatapoint {
	return &NullableCapacityTrendDatapoint{value: val, isSet: true}
}

func (v NullableCapacityTrendDatapoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCapacityTrendDatapoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


