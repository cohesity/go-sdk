/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CloudResourcesCleanupAmiInstanceId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudResourcesCleanupAmiInstanceId{}

// CloudResourcesCleanupAmiInstanceId Specifies the relation between an AMI ID and the created EC2 instance.
type CloudResourcesCleanupAmiInstanceId struct {
	// Specifies the ID of the AMI used.
	AmiId NullableString `json:"amiId,omitempty"`
	// Specifies the ID of the created EC2 instance.
	InstanceId NullableString `json:"instanceId,omitempty"`
}

// NewCloudResourcesCleanupAmiInstanceId instantiates a new CloudResourcesCleanupAmiInstanceId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudResourcesCleanupAmiInstanceId() *CloudResourcesCleanupAmiInstanceId {
	this := CloudResourcesCleanupAmiInstanceId{}
	return &this
}

// NewCloudResourcesCleanupAmiInstanceIdWithDefaults instantiates a new CloudResourcesCleanupAmiInstanceId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudResourcesCleanupAmiInstanceIdWithDefaults() *CloudResourcesCleanupAmiInstanceId {
	this := CloudResourcesCleanupAmiInstanceId{}
	return &this
}

// GetAmiId returns the AmiId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudResourcesCleanupAmiInstanceId) GetAmiId() string {
	if o == nil || IsNil(o.AmiId.Get()) {
		var ret string
		return ret
	}
	return *o.AmiId.Get()
}

// GetAmiIdOk returns a tuple with the AmiId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudResourcesCleanupAmiInstanceId) GetAmiIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AmiId.Get(), o.AmiId.IsSet()
}

// HasAmiId returns a boolean if a field has been set.
func (o *CloudResourcesCleanupAmiInstanceId) HasAmiId() bool {
	if o != nil && o.AmiId.IsSet() {
		return true
	}

	return false
}

// SetAmiId gets a reference to the given NullableString and assigns it to the AmiId field.
func (o *CloudResourcesCleanupAmiInstanceId) SetAmiId(v string) {
	o.AmiId.Set(&v)
}
// SetAmiIdNil sets the value for AmiId to be an explicit nil
func (o *CloudResourcesCleanupAmiInstanceId) SetAmiIdNil() {
	o.AmiId.Set(nil)
}

// UnsetAmiId ensures that no value is present for AmiId, not even an explicit nil
func (o *CloudResourcesCleanupAmiInstanceId) UnsetAmiId() {
	o.AmiId.Unset()
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudResourcesCleanupAmiInstanceId) GetInstanceId() string {
	if o == nil || IsNil(o.InstanceId.Get()) {
		var ret string
		return ret
	}
	return *o.InstanceId.Get()
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudResourcesCleanupAmiInstanceId) GetInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstanceId.Get(), o.InstanceId.IsSet()
}

// HasInstanceId returns a boolean if a field has been set.
func (o *CloudResourcesCleanupAmiInstanceId) HasInstanceId() bool {
	if o != nil && o.InstanceId.IsSet() {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given NullableString and assigns it to the InstanceId field.
func (o *CloudResourcesCleanupAmiInstanceId) SetInstanceId(v string) {
	o.InstanceId.Set(&v)
}
// SetInstanceIdNil sets the value for InstanceId to be an explicit nil
func (o *CloudResourcesCleanupAmiInstanceId) SetInstanceIdNil() {
	o.InstanceId.Set(nil)
}

// UnsetInstanceId ensures that no value is present for InstanceId, not even an explicit nil
func (o *CloudResourcesCleanupAmiInstanceId) UnsetInstanceId() {
	o.InstanceId.Unset()
}

func (o CloudResourcesCleanupAmiInstanceId) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudResourcesCleanupAmiInstanceId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AmiId.IsSet() {
		toSerialize["amiId"] = o.AmiId.Get()
	}
	if o.InstanceId.IsSet() {
		toSerialize["instanceId"] = o.InstanceId.Get()
	}
	return toSerialize, nil
}

type NullableCloudResourcesCleanupAmiInstanceId struct {
	value *CloudResourcesCleanupAmiInstanceId
	isSet bool
}

func (v NullableCloudResourcesCleanupAmiInstanceId) Get() *CloudResourcesCleanupAmiInstanceId {
	return v.value
}

func (v *NullableCloudResourcesCleanupAmiInstanceId) Set(val *CloudResourcesCleanupAmiInstanceId) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudResourcesCleanupAmiInstanceId) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudResourcesCleanupAmiInstanceId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudResourcesCleanupAmiInstanceId(val *CloudResourcesCleanupAmiInstanceId) *NullableCloudResourcesCleanupAmiInstanceId {
	return &NullableCloudResourcesCleanupAmiInstanceId{value: val, isSet: true}
}

func (v NullableCloudResourcesCleanupAmiInstanceId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudResourcesCleanupAmiInstanceId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


