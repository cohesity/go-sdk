/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AwsTargetParamsForRecoverVmFleetConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsTargetParamsForRecoverVmFleetConfig{}

// AwsTargetParamsForRecoverVmFleetConfig Specifies the fleet params.
type AwsTargetParamsForRecoverVmFleetConfig struct {
	FleetNetworkParams NullableFleetConfigFleetNetworkParams `json:"fleetNetworkParams,omitempty"`
	// Specifies the subnet type of the fleet.
	FleetSubnetType NullableString `json:"fleetSubnetType,omitempty"`
	// Specifies the network security groups within above VPC.
	FleetTags []FleetTags `json:"fleetTags,omitempty"`
}

// NewAwsTargetParamsForRecoverVmFleetConfig instantiates a new AwsTargetParamsForRecoverVmFleetConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsTargetParamsForRecoverVmFleetConfig() *AwsTargetParamsForRecoverVmFleetConfig {
	this := AwsTargetParamsForRecoverVmFleetConfig{}
	return &this
}

// NewAwsTargetParamsForRecoverVmFleetConfigWithDefaults instantiates a new AwsTargetParamsForRecoverVmFleetConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsTargetParamsForRecoverVmFleetConfigWithDefaults() *AwsTargetParamsForRecoverVmFleetConfig {
	this := AwsTargetParamsForRecoverVmFleetConfig{}
	return &this
}

// GetFleetNetworkParams returns the FleetNetworkParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsTargetParamsForRecoverVmFleetConfig) GetFleetNetworkParams() FleetConfigFleetNetworkParams {
	if o == nil || IsNil(o.FleetNetworkParams.Get()) {
		var ret FleetConfigFleetNetworkParams
		return ret
	}
	return *o.FleetNetworkParams.Get()
}

// GetFleetNetworkParamsOk returns a tuple with the FleetNetworkParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsTargetParamsForRecoverVmFleetConfig) GetFleetNetworkParamsOk() (*FleetConfigFleetNetworkParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.FleetNetworkParams.Get(), o.FleetNetworkParams.IsSet()
}

// HasFleetNetworkParams returns a boolean if a field has been set.
func (o *AwsTargetParamsForRecoverVmFleetConfig) HasFleetNetworkParams() bool {
	if o != nil && o.FleetNetworkParams.IsSet() {
		return true
	}

	return false
}

// SetFleetNetworkParams gets a reference to the given NullableFleetConfigFleetNetworkParams and assigns it to the FleetNetworkParams field.
func (o *AwsTargetParamsForRecoverVmFleetConfig) SetFleetNetworkParams(v FleetConfigFleetNetworkParams) {
	o.FleetNetworkParams.Set(&v)
}
// SetFleetNetworkParamsNil sets the value for FleetNetworkParams to be an explicit nil
func (o *AwsTargetParamsForRecoverVmFleetConfig) SetFleetNetworkParamsNil() {
	o.FleetNetworkParams.Set(nil)
}

// UnsetFleetNetworkParams ensures that no value is present for FleetNetworkParams, not even an explicit nil
func (o *AwsTargetParamsForRecoverVmFleetConfig) UnsetFleetNetworkParams() {
	o.FleetNetworkParams.Unset()
}

// GetFleetSubnetType returns the FleetSubnetType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsTargetParamsForRecoverVmFleetConfig) GetFleetSubnetType() string {
	if o == nil || IsNil(o.FleetSubnetType.Get()) {
		var ret string
		return ret
	}
	return *o.FleetSubnetType.Get()
}

// GetFleetSubnetTypeOk returns a tuple with the FleetSubnetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsTargetParamsForRecoverVmFleetConfig) GetFleetSubnetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FleetSubnetType.Get(), o.FleetSubnetType.IsSet()
}

// HasFleetSubnetType returns a boolean if a field has been set.
func (o *AwsTargetParamsForRecoverVmFleetConfig) HasFleetSubnetType() bool {
	if o != nil && o.FleetSubnetType.IsSet() {
		return true
	}

	return false
}

// SetFleetSubnetType gets a reference to the given NullableString and assigns it to the FleetSubnetType field.
func (o *AwsTargetParamsForRecoverVmFleetConfig) SetFleetSubnetType(v string) {
	o.FleetSubnetType.Set(&v)
}
// SetFleetSubnetTypeNil sets the value for FleetSubnetType to be an explicit nil
func (o *AwsTargetParamsForRecoverVmFleetConfig) SetFleetSubnetTypeNil() {
	o.FleetSubnetType.Set(nil)
}

// UnsetFleetSubnetType ensures that no value is present for FleetSubnetType, not even an explicit nil
func (o *AwsTargetParamsForRecoverVmFleetConfig) UnsetFleetSubnetType() {
	o.FleetSubnetType.Unset()
}

// GetFleetTags returns the FleetTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsTargetParamsForRecoverVmFleetConfig) GetFleetTags() []FleetTags {
	if o == nil {
		var ret []FleetTags
		return ret
	}
	return o.FleetTags
}

// GetFleetTagsOk returns a tuple with the FleetTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsTargetParamsForRecoverVmFleetConfig) GetFleetTagsOk() ([]FleetTags, bool) {
	if o == nil || IsNil(o.FleetTags) {
		return nil, false
	}
	return o.FleetTags, true
}

// HasFleetTags returns a boolean if a field has been set.
func (o *AwsTargetParamsForRecoverVmFleetConfig) HasFleetTags() bool {
	if o != nil && !IsNil(o.FleetTags) {
		return true
	}

	return false
}

// SetFleetTags gets a reference to the given []FleetTags and assigns it to the FleetTags field.
func (o *AwsTargetParamsForRecoverVmFleetConfig) SetFleetTags(v []FleetTags) {
	o.FleetTags = v
}

func (o AwsTargetParamsForRecoverVmFleetConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsTargetParamsForRecoverVmFleetConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FleetNetworkParams.IsSet() {
		toSerialize["fleetNetworkParams"] = o.FleetNetworkParams.Get()
	}
	if o.FleetSubnetType.IsSet() {
		toSerialize["fleetSubnetType"] = o.FleetSubnetType.Get()
	}
	if o.FleetTags != nil {
		toSerialize["fleetTags"] = o.FleetTags
	}
	return toSerialize, nil
}

type NullableAwsTargetParamsForRecoverVmFleetConfig struct {
	value *AwsTargetParamsForRecoverVmFleetConfig
	isSet bool
}

func (v NullableAwsTargetParamsForRecoverVmFleetConfig) Get() *AwsTargetParamsForRecoverVmFleetConfig {
	return v.value
}

func (v *NullableAwsTargetParamsForRecoverVmFleetConfig) Set(val *AwsTargetParamsForRecoverVmFleetConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsTargetParamsForRecoverVmFleetConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsTargetParamsForRecoverVmFleetConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsTargetParamsForRecoverVmFleetConfig(val *AwsTargetParamsForRecoverVmFleetConfig) *NullableAwsTargetParamsForRecoverVmFleetConfig {
	return &NullableAwsTargetParamsForRecoverVmFleetConfig{value: val, isSet: true}
}

func (v NullableAwsTargetParamsForRecoverVmFleetConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsTargetParamsForRecoverVmFleetConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


