/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateObjectsRunsMetadataResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateObjectsRunsMetadataResponse{}

// UpdateObjectsRunsMetadataResponse The response of updating one or more runs of one or more objects in ccs
type UpdateObjectsRunsMetadataResponse struct {
	// Specifies the list of objects and their protection run times mapped to errors (if any).
	ObjectRunList []ObjectRunList `json:"objectRunList"`
}

type _UpdateObjectsRunsMetadataResponse UpdateObjectsRunsMetadataResponse

// NewUpdateObjectsRunsMetadataResponse instantiates a new UpdateObjectsRunsMetadataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateObjectsRunsMetadataResponse(objectRunList []ObjectRunList) *UpdateObjectsRunsMetadataResponse {
	this := UpdateObjectsRunsMetadataResponse{}
	this.ObjectRunList = objectRunList
	return &this
}

// NewUpdateObjectsRunsMetadataResponseWithDefaults instantiates a new UpdateObjectsRunsMetadataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateObjectsRunsMetadataResponseWithDefaults() *UpdateObjectsRunsMetadataResponse {
	this := UpdateObjectsRunsMetadataResponse{}
	return &this
}

// GetObjectRunList returns the ObjectRunList field value
func (o *UpdateObjectsRunsMetadataResponse) GetObjectRunList() []ObjectRunList {
	if o == nil {
		var ret []ObjectRunList
		return ret
	}

	return o.ObjectRunList
}

// GetObjectRunListOk returns a tuple with the ObjectRunList field value
// and a boolean to check if the value has been set.
func (o *UpdateObjectsRunsMetadataResponse) GetObjectRunListOk() ([]ObjectRunList, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectRunList, true
}

// SetObjectRunList sets field value
func (o *UpdateObjectsRunsMetadataResponse) SetObjectRunList(v []ObjectRunList) {
	o.ObjectRunList = v
}

func (o UpdateObjectsRunsMetadataResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateObjectsRunsMetadataResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objectRunList"] = o.ObjectRunList
	return toSerialize, nil
}

func (o *UpdateObjectsRunsMetadataResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objectRunList",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateObjectsRunsMetadataResponse := _UpdateObjectsRunsMetadataResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateObjectsRunsMetadataResponse)

	if err != nil {
		return err
	}

	*o = UpdateObjectsRunsMetadataResponse(varUpdateObjectsRunsMetadataResponse)

	return err
}

type NullableUpdateObjectsRunsMetadataResponse struct {
	value *UpdateObjectsRunsMetadataResponse
	isSet bool
}

func (v NullableUpdateObjectsRunsMetadataResponse) Get() *UpdateObjectsRunsMetadataResponse {
	return v.value
}

func (v *NullableUpdateObjectsRunsMetadataResponse) Set(val *UpdateObjectsRunsMetadataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateObjectsRunsMetadataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateObjectsRunsMetadataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateObjectsRunsMetadataResponse(val *UpdateObjectsRunsMetadataResponse) *NullableUpdateObjectsRunsMetadataResponse {
	return &NullableUpdateObjectsRunsMetadataResponse{value: val, isSet: true}
}

func (v NullableUpdateObjectsRunsMetadataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateObjectsRunsMetadataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


