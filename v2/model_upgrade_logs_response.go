/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the UpgradeLogsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpgradeLogsResponse{}

// UpgradeLogsResponse \"Response containing upgrade logs for services.\" 
type UpgradeLogsResponse struct {
	// \"The overall upgrade status\" \"(e.g., Success, InProgress, Failed, Pending).\" 
	HeliosUpgradeStatus *string `json:"heliosUpgradeStatus,omitempty"`
	// Helios upgrade version.
	HeliosUpgradeVersion *string `json:"heliosUpgradeVersion,omitempty"`
	// List of service upgrade logs.
	Services []ServiceUpgradeLog `json:"services,omitempty"`
}

// NewUpgradeLogsResponse instantiates a new UpgradeLogsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpgradeLogsResponse() *UpgradeLogsResponse {
	this := UpgradeLogsResponse{}
	return &this
}

// NewUpgradeLogsResponseWithDefaults instantiates a new UpgradeLogsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpgradeLogsResponseWithDefaults() *UpgradeLogsResponse {
	this := UpgradeLogsResponse{}
	return &this
}

// GetHeliosUpgradeStatus returns the HeliosUpgradeStatus field value if set, zero value otherwise.
func (o *UpgradeLogsResponse) GetHeliosUpgradeStatus() string {
	if o == nil || IsNil(o.HeliosUpgradeStatus) {
		var ret string
		return ret
	}
	return *o.HeliosUpgradeStatus
}

// GetHeliosUpgradeStatusOk returns a tuple with the HeliosUpgradeStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpgradeLogsResponse) GetHeliosUpgradeStatusOk() (*string, bool) {
	if o == nil || IsNil(o.HeliosUpgradeStatus) {
		return nil, false
	}
	return o.HeliosUpgradeStatus, true
}

// HasHeliosUpgradeStatus returns a boolean if a field has been set.
func (o *UpgradeLogsResponse) HasHeliosUpgradeStatus() bool {
	if o != nil && !IsNil(o.HeliosUpgradeStatus) {
		return true
	}

	return false
}

// SetHeliosUpgradeStatus gets a reference to the given string and assigns it to the HeliosUpgradeStatus field.
func (o *UpgradeLogsResponse) SetHeliosUpgradeStatus(v string) {
	o.HeliosUpgradeStatus = &v
}

// GetHeliosUpgradeVersion returns the HeliosUpgradeVersion field value if set, zero value otherwise.
func (o *UpgradeLogsResponse) GetHeliosUpgradeVersion() string {
	if o == nil || IsNil(o.HeliosUpgradeVersion) {
		var ret string
		return ret
	}
	return *o.HeliosUpgradeVersion
}

// GetHeliosUpgradeVersionOk returns a tuple with the HeliosUpgradeVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpgradeLogsResponse) GetHeliosUpgradeVersionOk() (*string, bool) {
	if o == nil || IsNil(o.HeliosUpgradeVersion) {
		return nil, false
	}
	return o.HeliosUpgradeVersion, true
}

// HasHeliosUpgradeVersion returns a boolean if a field has been set.
func (o *UpgradeLogsResponse) HasHeliosUpgradeVersion() bool {
	if o != nil && !IsNil(o.HeliosUpgradeVersion) {
		return true
	}

	return false
}

// SetHeliosUpgradeVersion gets a reference to the given string and assigns it to the HeliosUpgradeVersion field.
func (o *UpgradeLogsResponse) SetHeliosUpgradeVersion(v string) {
	o.HeliosUpgradeVersion = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *UpgradeLogsResponse) GetServices() []ServiceUpgradeLog {
	if o == nil || IsNil(o.Services) {
		var ret []ServiceUpgradeLog
		return ret
	}
	return o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpgradeLogsResponse) GetServicesOk() ([]ServiceUpgradeLog, bool) {
	if o == nil || IsNil(o.Services) {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *UpgradeLogsResponse) HasServices() bool {
	if o != nil && !IsNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given []ServiceUpgradeLog and assigns it to the Services field.
func (o *UpgradeLogsResponse) SetServices(v []ServiceUpgradeLog) {
	o.Services = v
}

func (o UpgradeLogsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpgradeLogsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HeliosUpgradeStatus) {
		toSerialize["heliosUpgradeStatus"] = o.HeliosUpgradeStatus
	}
	if !IsNil(o.HeliosUpgradeVersion) {
		toSerialize["heliosUpgradeVersion"] = o.HeliosUpgradeVersion
	}
	if !IsNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	return toSerialize, nil
}

type NullableUpgradeLogsResponse struct {
	value *UpgradeLogsResponse
	isSet bool
}

func (v NullableUpgradeLogsResponse) Get() *UpgradeLogsResponse {
	return v.value
}

func (v *NullableUpgradeLogsResponse) Set(val *UpgradeLogsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpgradeLogsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpgradeLogsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpgradeLogsResponse(val *UpgradeLogsResponse) *NullableUpgradeLogsResponse {
	return &NullableUpgradeLogsResponse{value: val, isSet: true}
}

func (v NullableUpgradeLogsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpgradeLogsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


