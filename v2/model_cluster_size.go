/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ClusterSize type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterSize{}

// ClusterSize Cluster Size of cloud platforms.
type ClusterSize struct {
	// Specifies the cluster size.
	ClusterSize *string `json:"clusterSize,omitempty"`
}

// NewClusterSize instantiates a new ClusterSize object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterSize() *ClusterSize {
	this := ClusterSize{}
	return &this
}

// NewClusterSizeWithDefaults instantiates a new ClusterSize object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterSizeWithDefaults() *ClusterSize {
	this := ClusterSize{}
	return &this
}

// GetClusterSize returns the ClusterSize field value if set, zero value otherwise.
func (o *ClusterSize) GetClusterSize() string {
	if o == nil || IsNil(o.ClusterSize) {
		var ret string
		return ret
	}
	return *o.ClusterSize
}

// GetClusterSizeOk returns a tuple with the ClusterSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSize) GetClusterSizeOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterSize) {
		return nil, false
	}
	return o.ClusterSize, true
}

// HasClusterSize returns a boolean if a field has been set.
func (o *ClusterSize) HasClusterSize() bool {
	if o != nil && !IsNil(o.ClusterSize) {
		return true
	}

	return false
}

// SetClusterSize gets a reference to the given string and assigns it to the ClusterSize field.
func (o *ClusterSize) SetClusterSize(v string) {
	o.ClusterSize = &v
}

func (o ClusterSize) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterSize) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClusterSize) {
		toSerialize["clusterSize"] = o.ClusterSize
	}
	return toSerialize, nil
}

type NullableClusterSize struct {
	value *ClusterSize
	isSet bool
}

func (v NullableClusterSize) Get() *ClusterSize {
	return v.value
}

func (v *NullableClusterSize) Set(val *ClusterSize) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterSize) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterSize) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterSize(val *ClusterSize) *NullableClusterSize {
	return &NullableClusterSize{value: val, isSet: true}
}

func (v NullableClusterSize) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterSize) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


