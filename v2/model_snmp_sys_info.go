/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the SnmpSysInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnmpSysInfo{}

// SnmpSysInfo SNMP System Information
type SnmpSysInfo struct {
	// Contact is the system contact.
	Contact NullableString `json:"contact,omitempty"`
	// Description is the system description.
	Description NullableString `json:"description,omitempty"`
	// EngineIdType is the system egineId type√ü.
	EngineIdType NullableInt32 `json:"engineIdType,omitempty"`
	// Location is the system location.
	Location NullableString `json:"location,omitempty"`
	// Name is the system name.
	Name NullableString `json:"name,omitempty"`
	// Object id is the system object id.
	ObjectId NullableString `json:"objectId,omitempty"`
}

// NewSnmpSysInfo instantiates a new SnmpSysInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnmpSysInfo() *SnmpSysInfo {
	this := SnmpSysInfo{}
	return &this
}

// NewSnmpSysInfoWithDefaults instantiates a new SnmpSysInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnmpSysInfoWithDefaults() *SnmpSysInfo {
	this := SnmpSysInfo{}
	return &this
}

// GetContact returns the Contact field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnmpSysInfo) GetContact() string {
	if o == nil || IsNil(o.Contact.Get()) {
		var ret string
		return ret
	}
	return *o.Contact.Get()
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnmpSysInfo) GetContactOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Contact.Get(), o.Contact.IsSet()
}

// HasContact returns a boolean if a field has been set.
func (o *SnmpSysInfo) HasContact() bool {
	if o != nil && o.Contact.IsSet() {
		return true
	}

	return false
}

// SetContact gets a reference to the given NullableString and assigns it to the Contact field.
func (o *SnmpSysInfo) SetContact(v string) {
	o.Contact.Set(&v)
}
// SetContactNil sets the value for Contact to be an explicit nil
func (o *SnmpSysInfo) SetContactNil() {
	o.Contact.Set(nil)
}

// UnsetContact ensures that no value is present for Contact, not even an explicit nil
func (o *SnmpSysInfo) UnsetContact() {
	o.Contact.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnmpSysInfo) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnmpSysInfo) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *SnmpSysInfo) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *SnmpSysInfo) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *SnmpSysInfo) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *SnmpSysInfo) UnsetDescription() {
	o.Description.Unset()
}

// GetEngineIdType returns the EngineIdType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnmpSysInfo) GetEngineIdType() int32 {
	if o == nil || IsNil(o.EngineIdType.Get()) {
		var ret int32
		return ret
	}
	return *o.EngineIdType.Get()
}

// GetEngineIdTypeOk returns a tuple with the EngineIdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnmpSysInfo) GetEngineIdTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EngineIdType.Get(), o.EngineIdType.IsSet()
}

// HasEngineIdType returns a boolean if a field has been set.
func (o *SnmpSysInfo) HasEngineIdType() bool {
	if o != nil && o.EngineIdType.IsSet() {
		return true
	}

	return false
}

// SetEngineIdType gets a reference to the given NullableInt32 and assigns it to the EngineIdType field.
func (o *SnmpSysInfo) SetEngineIdType(v int32) {
	o.EngineIdType.Set(&v)
}
// SetEngineIdTypeNil sets the value for EngineIdType to be an explicit nil
func (o *SnmpSysInfo) SetEngineIdTypeNil() {
	o.EngineIdType.Set(nil)
}

// UnsetEngineIdType ensures that no value is present for EngineIdType, not even an explicit nil
func (o *SnmpSysInfo) UnsetEngineIdType() {
	o.EngineIdType.Unset()
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnmpSysInfo) GetLocation() string {
	if o == nil || IsNil(o.Location.Get()) {
		var ret string
		return ret
	}
	return *o.Location.Get()
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnmpSysInfo) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Location.Get(), o.Location.IsSet()
}

// HasLocation returns a boolean if a field has been set.
func (o *SnmpSysInfo) HasLocation() bool {
	if o != nil && o.Location.IsSet() {
		return true
	}

	return false
}

// SetLocation gets a reference to the given NullableString and assigns it to the Location field.
func (o *SnmpSysInfo) SetLocation(v string) {
	o.Location.Set(&v)
}
// SetLocationNil sets the value for Location to be an explicit nil
func (o *SnmpSysInfo) SetLocationNil() {
	o.Location.Set(nil)
}

// UnsetLocation ensures that no value is present for Location, not even an explicit nil
func (o *SnmpSysInfo) UnsetLocation() {
	o.Location.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnmpSysInfo) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnmpSysInfo) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *SnmpSysInfo) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *SnmpSysInfo) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *SnmpSysInfo) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *SnmpSysInfo) UnsetName() {
	o.Name.Unset()
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnmpSysInfo) GetObjectId() string {
	if o == nil || IsNil(o.ObjectId.Get()) {
		var ret string
		return ret
	}
	return *o.ObjectId.Get()
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnmpSysInfo) GetObjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectId.Get(), o.ObjectId.IsSet()
}

// HasObjectId returns a boolean if a field has been set.
func (o *SnmpSysInfo) HasObjectId() bool {
	if o != nil && o.ObjectId.IsSet() {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given NullableString and assigns it to the ObjectId field.
func (o *SnmpSysInfo) SetObjectId(v string) {
	o.ObjectId.Set(&v)
}
// SetObjectIdNil sets the value for ObjectId to be an explicit nil
func (o *SnmpSysInfo) SetObjectIdNil() {
	o.ObjectId.Set(nil)
}

// UnsetObjectId ensures that no value is present for ObjectId, not even an explicit nil
func (o *SnmpSysInfo) UnsetObjectId() {
	o.ObjectId.Unset()
}

func (o SnmpSysInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnmpSysInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Contact.IsSet() {
		toSerialize["contact"] = o.Contact.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.EngineIdType.IsSet() {
		toSerialize["engineIdType"] = o.EngineIdType.Get()
	}
	if o.Location.IsSet() {
		toSerialize["location"] = o.Location.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ObjectId.IsSet() {
		toSerialize["objectId"] = o.ObjectId.Get()
	}
	return toSerialize, nil
}

type NullableSnmpSysInfo struct {
	value *SnmpSysInfo
	isSet bool
}

func (v NullableSnmpSysInfo) Get() *SnmpSysInfo {
	return v.value
}

func (v *NullableSnmpSysInfo) Set(val *SnmpSysInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSnmpSysInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSnmpSysInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnmpSysInfo(val *SnmpSysInfo) *NullableSnmpSysInfo {
	return &NullableSnmpSysInfo{value: val, isSet: true}
}

func (v NullableSnmpSysInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnmpSysInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


