/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AwsRdsPostgresProtectionParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsRdsPostgresProtectionParams{}

// AwsRdsPostgresProtectionParams Specifies the parameters which are specific to AWS RDS Postgres related Object protection.
type AwsRdsPostgresProtectionParams struct {
	// Specifies the objects to be protected.
	Objects []AwsObjectLevelParams `json:"objects,omitempty"`
	// Specifies the id of the source of the objects.
	SourceId NullableInt64 `json:"sourceId,omitempty"`
}

// NewAwsRdsPostgresProtectionParams instantiates a new AwsRdsPostgresProtectionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsRdsPostgresProtectionParams() *AwsRdsPostgresProtectionParams {
	this := AwsRdsPostgresProtectionParams{}
	return &this
}

// NewAwsRdsPostgresProtectionParamsWithDefaults instantiates a new AwsRdsPostgresProtectionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsRdsPostgresProtectionParamsWithDefaults() *AwsRdsPostgresProtectionParams {
	this := AwsRdsPostgresProtectionParams{}
	return &this
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *AwsRdsPostgresProtectionParams) GetObjects() []AwsObjectLevelParams {
	if o == nil || IsNil(o.Objects) {
		var ret []AwsObjectLevelParams
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRdsPostgresProtectionParams) GetObjectsOk() ([]AwsObjectLevelParams, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *AwsRdsPostgresProtectionParams) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []AwsObjectLevelParams and assigns it to the Objects field.
func (o *AwsRdsPostgresProtectionParams) SetObjects(v []AwsObjectLevelParams) {
	o.Objects = v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsRdsPostgresProtectionParams) GetSourceId() int64 {
	if o == nil || IsNil(o.SourceId.Get()) {
		var ret int64
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsRdsPostgresProtectionParams) GetSourceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *AwsRdsPostgresProtectionParams) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableInt64 and assigns it to the SourceId field.
func (o *AwsRdsPostgresProtectionParams) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *AwsRdsPostgresProtectionParams) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *AwsRdsPostgresProtectionParams) UnsetSourceId() {
	o.SourceId.Unset()
}

func (o AwsRdsPostgresProtectionParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsRdsPostgresProtectionParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Objects) {
		toSerialize["objects"] = o.Objects
	}
	if o.SourceId.IsSet() {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	return toSerialize, nil
}

type NullableAwsRdsPostgresProtectionParams struct {
	value *AwsRdsPostgresProtectionParams
	isSet bool
}

func (v NullableAwsRdsPostgresProtectionParams) Get() *AwsRdsPostgresProtectionParams {
	return v.value
}

func (v *NullableAwsRdsPostgresProtectionParams) Set(val *AwsRdsPostgresProtectionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsRdsPostgresProtectionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsRdsPostgresProtectionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsRdsPostgresProtectionParams(val *AwsRdsPostgresProtectionParams) *NullableAwsRdsPostgresProtectionParams {
	return &NullableAwsRdsPostgresProtectionParams{value: val, isSet: true}
}

func (v NullableAwsRdsPostgresProtectionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsRdsPostgresProtectionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


