/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ProtectionGroupRuns type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProtectionGroupRuns{}

// ProtectionGroupRuns Protection runs.
type ProtectionGroupRuns struct {
	// Indicates whether the result is truncated due to hitting maximum size limit governed by magneto_http_rpc_response_size_limit_bytes
	IsResponseTruncated NullableBool `json:"isResponseTruncated,omitempty"`
	// Specifies the list of Protection Group runs.
	Runs []ProtectionGroupRun `json:"runs,omitempty"`
	// Specifies the count of total runs exist for the given set of filters. The number of runs in single API call are limited and this count can be used to estimate query filter values to get next set of remaining runs. Please note that this field will only be populated if startTimeUsecs or endTimeUsecs or both are specified in query parameters.
	TotalRuns NullableInt32 `json:"totalRuns,omitempty"`
}

// NewProtectionGroupRuns instantiates a new ProtectionGroupRuns object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionGroupRuns() *ProtectionGroupRuns {
	this := ProtectionGroupRuns{}
	return &this
}

// NewProtectionGroupRunsWithDefaults instantiates a new ProtectionGroupRuns object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionGroupRunsWithDefaults() *ProtectionGroupRuns {
	this := ProtectionGroupRuns{}
	return &this
}

// GetIsResponseTruncated returns the IsResponseTruncated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroupRuns) GetIsResponseTruncated() bool {
	if o == nil || IsNil(o.IsResponseTruncated.Get()) {
		var ret bool
		return ret
	}
	return *o.IsResponseTruncated.Get()
}

// GetIsResponseTruncatedOk returns a tuple with the IsResponseTruncated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroupRuns) GetIsResponseTruncatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsResponseTruncated.Get(), o.IsResponseTruncated.IsSet()
}

// HasIsResponseTruncated returns a boolean if a field has been set.
func (o *ProtectionGroupRuns) HasIsResponseTruncated() bool {
	if o != nil && o.IsResponseTruncated.IsSet() {
		return true
	}

	return false
}

// SetIsResponseTruncated gets a reference to the given NullableBool and assigns it to the IsResponseTruncated field.
func (o *ProtectionGroupRuns) SetIsResponseTruncated(v bool) {
	o.IsResponseTruncated.Set(&v)
}
// SetIsResponseTruncatedNil sets the value for IsResponseTruncated to be an explicit nil
func (o *ProtectionGroupRuns) SetIsResponseTruncatedNil() {
	o.IsResponseTruncated.Set(nil)
}

// UnsetIsResponseTruncated ensures that no value is present for IsResponseTruncated, not even an explicit nil
func (o *ProtectionGroupRuns) UnsetIsResponseTruncated() {
	o.IsResponseTruncated.Unset()
}

// GetRuns returns the Runs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroupRuns) GetRuns() []ProtectionGroupRun {
	if o == nil {
		var ret []ProtectionGroupRun
		return ret
	}
	return o.Runs
}

// GetRunsOk returns a tuple with the Runs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroupRuns) GetRunsOk() ([]ProtectionGroupRun, bool) {
	if o == nil || IsNil(o.Runs) {
		return nil, false
	}
	return o.Runs, true
}

// HasRuns returns a boolean if a field has been set.
func (o *ProtectionGroupRuns) HasRuns() bool {
	if o != nil && !IsNil(o.Runs) {
		return true
	}

	return false
}

// SetRuns gets a reference to the given []ProtectionGroupRun and assigns it to the Runs field.
func (o *ProtectionGroupRuns) SetRuns(v []ProtectionGroupRun) {
	o.Runs = v
}

// GetTotalRuns returns the TotalRuns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroupRuns) GetTotalRuns() int32 {
	if o == nil || IsNil(o.TotalRuns.Get()) {
		var ret int32
		return ret
	}
	return *o.TotalRuns.Get()
}

// GetTotalRunsOk returns a tuple with the TotalRuns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroupRuns) GetTotalRunsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalRuns.Get(), o.TotalRuns.IsSet()
}

// HasTotalRuns returns a boolean if a field has been set.
func (o *ProtectionGroupRuns) HasTotalRuns() bool {
	if o != nil && o.TotalRuns.IsSet() {
		return true
	}

	return false
}

// SetTotalRuns gets a reference to the given NullableInt32 and assigns it to the TotalRuns field.
func (o *ProtectionGroupRuns) SetTotalRuns(v int32) {
	o.TotalRuns.Set(&v)
}
// SetTotalRunsNil sets the value for TotalRuns to be an explicit nil
func (o *ProtectionGroupRuns) SetTotalRunsNil() {
	o.TotalRuns.Set(nil)
}

// UnsetTotalRuns ensures that no value is present for TotalRuns, not even an explicit nil
func (o *ProtectionGroupRuns) UnsetTotalRuns() {
	o.TotalRuns.Unset()
}

func (o ProtectionGroupRuns) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProtectionGroupRuns) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IsResponseTruncated.IsSet() {
		toSerialize["isResponseTruncated"] = o.IsResponseTruncated.Get()
	}
	if o.Runs != nil {
		toSerialize["runs"] = o.Runs
	}
	if o.TotalRuns.IsSet() {
		toSerialize["totalRuns"] = o.TotalRuns.Get()
	}
	return toSerialize, nil
}

type NullableProtectionGroupRuns struct {
	value *ProtectionGroupRuns
	isSet bool
}

func (v NullableProtectionGroupRuns) Get() *ProtectionGroupRuns {
	return v.value
}

func (v *NullableProtectionGroupRuns) Set(val *ProtectionGroupRuns) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionGroupRuns) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionGroupRuns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionGroupRuns(val *ProtectionGroupRuns) *NullableProtectionGroupRuns {
	return &NullableProtectionGroupRuns{value: val, isSet: true}
}

func (v NullableProtectionGroupRuns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionGroupRuns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


