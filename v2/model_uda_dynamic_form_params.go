/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the UdaDynamicFormParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UdaDynamicFormParams{}

// UdaDynamicFormParams Specifies parameters related to dynamic form through which additional fields can be specified by connector providers.
type UdaDynamicFormParams struct {
	// Array of panels.
	Panels []FormPanelParams `json:"panels,omitempty"`
}

// NewUdaDynamicFormParams instantiates a new UdaDynamicFormParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUdaDynamicFormParams() *UdaDynamicFormParams {
	this := UdaDynamicFormParams{}
	return &this
}

// NewUdaDynamicFormParamsWithDefaults instantiates a new UdaDynamicFormParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUdaDynamicFormParamsWithDefaults() *UdaDynamicFormParams {
	this := UdaDynamicFormParams{}
	return &this
}

// GetPanels returns the Panels field value if set, zero value otherwise.
func (o *UdaDynamicFormParams) GetPanels() []FormPanelParams {
	if o == nil || IsNil(o.Panels) {
		var ret []FormPanelParams
		return ret
	}
	return o.Panels
}

// GetPanelsOk returns a tuple with the Panels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UdaDynamicFormParams) GetPanelsOk() ([]FormPanelParams, bool) {
	if o == nil || IsNil(o.Panels) {
		return nil, false
	}
	return o.Panels, true
}

// HasPanels returns a boolean if a field has been set.
func (o *UdaDynamicFormParams) HasPanels() bool {
	if o != nil && !IsNil(o.Panels) {
		return true
	}

	return false
}

// SetPanels gets a reference to the given []FormPanelParams and assigns it to the Panels field.
func (o *UdaDynamicFormParams) SetPanels(v []FormPanelParams) {
	o.Panels = v
}

func (o UdaDynamicFormParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UdaDynamicFormParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Panels) {
		toSerialize["panels"] = o.Panels
	}
	return toSerialize, nil
}

type NullableUdaDynamicFormParams struct {
	value *UdaDynamicFormParams
	isSet bool
}

func (v NullableUdaDynamicFormParams) Get() *UdaDynamicFormParams {
	return v.value
}

func (v *NullableUdaDynamicFormParams) Set(val *UdaDynamicFormParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUdaDynamicFormParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUdaDynamicFormParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUdaDynamicFormParams(val *UdaDynamicFormParams) *NullableUdaDynamicFormParams {
	return &NullableUdaDynamicFormParams{value: val, isSet: true}
}

func (v NullableUdaDynamicFormParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUdaDynamicFormParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


