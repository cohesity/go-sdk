/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the IbmFlashSystemProtectionGroupParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IbmFlashSystemProtectionGroupParams{}

// IbmFlashSystemProtectionGroupParams Specifies the parameters which are specific to IBM Flash System related Protection Groups.
type IbmFlashSystemProtectionGroupParams struct {
	// Specifies whether the safeguarded copy snapshots are allowed or not
	IsSafeGuardedCopySnapshot NullableBool `json:"isSafeGuardedCopySnapshot,omitempty"`
	// Specifies the objects to be included in the Protection Group.
	Objects []IbmFlashSystemProtectionGroupObjectParams `json:"objects"`
	PrePostScript *HostBasedBackupScriptParams `json:"prePostScript,omitempty"`
	// Specifies the id of the parent of the objects.
	SourceId NullableInt64 `json:"sourceId,omitempty"`
	// Specifies the name of the parent of the objects.
	SourceName NullableString `json:"sourceName,omitempty"`
}

type _IbmFlashSystemProtectionGroupParams IbmFlashSystemProtectionGroupParams

// NewIbmFlashSystemProtectionGroupParams instantiates a new IbmFlashSystemProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIbmFlashSystemProtectionGroupParams(objects []IbmFlashSystemProtectionGroupObjectParams) *IbmFlashSystemProtectionGroupParams {
	this := IbmFlashSystemProtectionGroupParams{}
	this.Objects = objects
	return &this
}

// NewIbmFlashSystemProtectionGroupParamsWithDefaults instantiates a new IbmFlashSystemProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIbmFlashSystemProtectionGroupParamsWithDefaults() *IbmFlashSystemProtectionGroupParams {
	this := IbmFlashSystemProtectionGroupParams{}
	return &this
}

// GetIsSafeGuardedCopySnapshot returns the IsSafeGuardedCopySnapshot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IbmFlashSystemProtectionGroupParams) GetIsSafeGuardedCopySnapshot() bool {
	if o == nil || IsNil(o.IsSafeGuardedCopySnapshot.Get()) {
		var ret bool
		return ret
	}
	return *o.IsSafeGuardedCopySnapshot.Get()
}

// GetIsSafeGuardedCopySnapshotOk returns a tuple with the IsSafeGuardedCopySnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IbmFlashSystemProtectionGroupParams) GetIsSafeGuardedCopySnapshotOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsSafeGuardedCopySnapshot.Get(), o.IsSafeGuardedCopySnapshot.IsSet()
}

// HasIsSafeGuardedCopySnapshot returns a boolean if a field has been set.
func (o *IbmFlashSystemProtectionGroupParams) HasIsSafeGuardedCopySnapshot() bool {
	if o != nil && o.IsSafeGuardedCopySnapshot.IsSet() {
		return true
	}

	return false
}

// SetIsSafeGuardedCopySnapshot gets a reference to the given NullableBool and assigns it to the IsSafeGuardedCopySnapshot field.
func (o *IbmFlashSystemProtectionGroupParams) SetIsSafeGuardedCopySnapshot(v bool) {
	o.IsSafeGuardedCopySnapshot.Set(&v)
}
// SetIsSafeGuardedCopySnapshotNil sets the value for IsSafeGuardedCopySnapshot to be an explicit nil
func (o *IbmFlashSystemProtectionGroupParams) SetIsSafeGuardedCopySnapshotNil() {
	o.IsSafeGuardedCopySnapshot.Set(nil)
}

// UnsetIsSafeGuardedCopySnapshot ensures that no value is present for IsSafeGuardedCopySnapshot, not even an explicit nil
func (o *IbmFlashSystemProtectionGroupParams) UnsetIsSafeGuardedCopySnapshot() {
	o.IsSafeGuardedCopySnapshot.Unset()
}

// GetObjects returns the Objects field value
func (o *IbmFlashSystemProtectionGroupParams) GetObjects() []IbmFlashSystemProtectionGroupObjectParams {
	if o == nil {
		var ret []IbmFlashSystemProtectionGroupObjectParams
		return ret
	}

	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value
// and a boolean to check if the value has been set.
func (o *IbmFlashSystemProtectionGroupParams) GetObjectsOk() ([]IbmFlashSystemProtectionGroupObjectParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.Objects, true
}

// SetObjects sets field value
func (o *IbmFlashSystemProtectionGroupParams) SetObjects(v []IbmFlashSystemProtectionGroupObjectParams) {
	o.Objects = v
}

// GetPrePostScript returns the PrePostScript field value if set, zero value otherwise.
func (o *IbmFlashSystemProtectionGroupParams) GetPrePostScript() HostBasedBackupScriptParams {
	if o == nil || IsNil(o.PrePostScript) {
		var ret HostBasedBackupScriptParams
		return ret
	}
	return *o.PrePostScript
}

// GetPrePostScriptOk returns a tuple with the PrePostScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbmFlashSystemProtectionGroupParams) GetPrePostScriptOk() (*HostBasedBackupScriptParams, bool) {
	if o == nil || IsNil(o.PrePostScript) {
		return nil, false
	}
	return o.PrePostScript, true
}

// HasPrePostScript returns a boolean if a field has been set.
func (o *IbmFlashSystemProtectionGroupParams) HasPrePostScript() bool {
	if o != nil && !IsNil(o.PrePostScript) {
		return true
	}

	return false
}

// SetPrePostScript gets a reference to the given HostBasedBackupScriptParams and assigns it to the PrePostScript field.
func (o *IbmFlashSystemProtectionGroupParams) SetPrePostScript(v HostBasedBackupScriptParams) {
	o.PrePostScript = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IbmFlashSystemProtectionGroupParams) GetSourceId() int64 {
	if o == nil || IsNil(o.SourceId.Get()) {
		var ret int64
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IbmFlashSystemProtectionGroupParams) GetSourceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *IbmFlashSystemProtectionGroupParams) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableInt64 and assigns it to the SourceId field.
func (o *IbmFlashSystemProtectionGroupParams) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *IbmFlashSystemProtectionGroupParams) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *IbmFlashSystemProtectionGroupParams) UnsetSourceId() {
	o.SourceId.Unset()
}

// GetSourceName returns the SourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IbmFlashSystemProtectionGroupParams) GetSourceName() string {
	if o == nil || IsNil(o.SourceName.Get()) {
		var ret string
		return ret
	}
	return *o.SourceName.Get()
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IbmFlashSystemProtectionGroupParams) GetSourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceName.Get(), o.SourceName.IsSet()
}

// HasSourceName returns a boolean if a field has been set.
func (o *IbmFlashSystemProtectionGroupParams) HasSourceName() bool {
	if o != nil && o.SourceName.IsSet() {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given NullableString and assigns it to the SourceName field.
func (o *IbmFlashSystemProtectionGroupParams) SetSourceName(v string) {
	o.SourceName.Set(&v)
}
// SetSourceNameNil sets the value for SourceName to be an explicit nil
func (o *IbmFlashSystemProtectionGroupParams) SetSourceNameNil() {
	o.SourceName.Set(nil)
}

// UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil
func (o *IbmFlashSystemProtectionGroupParams) UnsetSourceName() {
	o.SourceName.Unset()
}

func (o IbmFlashSystemProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IbmFlashSystemProtectionGroupParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IsSafeGuardedCopySnapshot.IsSet() {
		toSerialize["isSafeGuardedCopySnapshot"] = o.IsSafeGuardedCopySnapshot.Get()
	}
	toSerialize["objects"] = o.Objects
	if !IsNil(o.PrePostScript) {
		toSerialize["prePostScript"] = o.PrePostScript
	}
	if o.SourceId.IsSet() {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if o.SourceName.IsSet() {
		toSerialize["sourceName"] = o.SourceName.Get()
	}
	return toSerialize, nil
}

func (o *IbmFlashSystemProtectionGroupParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objects",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIbmFlashSystemProtectionGroupParams := _IbmFlashSystemProtectionGroupParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIbmFlashSystemProtectionGroupParams)

	if err != nil {
		return err
	}

	*o = IbmFlashSystemProtectionGroupParams(varIbmFlashSystemProtectionGroupParams)

	return err
}

type NullableIbmFlashSystemProtectionGroupParams struct {
	value *IbmFlashSystemProtectionGroupParams
	isSet bool
}

func (v NullableIbmFlashSystemProtectionGroupParams) Get() *IbmFlashSystemProtectionGroupParams {
	return v.value
}

func (v *NullableIbmFlashSystemProtectionGroupParams) Set(val *IbmFlashSystemProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableIbmFlashSystemProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableIbmFlashSystemProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIbmFlashSystemProtectionGroupParams(val *IbmFlashSystemProtectionGroupParams) *NullableIbmFlashSystemProtectionGroupParams {
	return &NullableIbmFlashSystemProtectionGroupParams{value: val, isSet: true}
}

func (v NullableIbmFlashSystemProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIbmFlashSystemProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


