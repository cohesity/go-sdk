/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the MssqlObjectEntityParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MssqlObjectEntityParams{}

// MssqlObjectEntityParams Object details for Mssql.
type MssqlObjectEntityParams struct {
	AagInfo *AAGInfo `json:"aagInfo,omitempty"`
	HostInfo *HostInformation `json:"hostInfo,omitempty"`
	// Specifies whether the database is TDE enabled.
	IsEncrypted NullableBool `json:"isEncrypted,omitempty"`
}

// NewMssqlObjectEntityParams instantiates a new MssqlObjectEntityParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMssqlObjectEntityParams() *MssqlObjectEntityParams {
	this := MssqlObjectEntityParams{}
	return &this
}

// NewMssqlObjectEntityParamsWithDefaults instantiates a new MssqlObjectEntityParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMssqlObjectEntityParamsWithDefaults() *MssqlObjectEntityParams {
	this := MssqlObjectEntityParams{}
	return &this
}

// GetAagInfo returns the AagInfo field value if set, zero value otherwise.
func (o *MssqlObjectEntityParams) GetAagInfo() AAGInfo {
	if o == nil || IsNil(o.AagInfo) {
		var ret AAGInfo
		return ret
	}
	return *o.AagInfo
}

// GetAagInfoOk returns a tuple with the AagInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MssqlObjectEntityParams) GetAagInfoOk() (*AAGInfo, bool) {
	if o == nil || IsNil(o.AagInfo) {
		return nil, false
	}
	return o.AagInfo, true
}

// HasAagInfo returns a boolean if a field has been set.
func (o *MssqlObjectEntityParams) HasAagInfo() bool {
	if o != nil && !IsNil(o.AagInfo) {
		return true
	}

	return false
}

// SetAagInfo gets a reference to the given AAGInfo and assigns it to the AagInfo field.
func (o *MssqlObjectEntityParams) SetAagInfo(v AAGInfo) {
	o.AagInfo = &v
}

// GetHostInfo returns the HostInfo field value if set, zero value otherwise.
func (o *MssqlObjectEntityParams) GetHostInfo() HostInformation {
	if o == nil || IsNil(o.HostInfo) {
		var ret HostInformation
		return ret
	}
	return *o.HostInfo
}

// GetHostInfoOk returns a tuple with the HostInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MssqlObjectEntityParams) GetHostInfoOk() (*HostInformation, bool) {
	if o == nil || IsNil(o.HostInfo) {
		return nil, false
	}
	return o.HostInfo, true
}

// HasHostInfo returns a boolean if a field has been set.
func (o *MssqlObjectEntityParams) HasHostInfo() bool {
	if o != nil && !IsNil(o.HostInfo) {
		return true
	}

	return false
}

// SetHostInfo gets a reference to the given HostInformation and assigns it to the HostInfo field.
func (o *MssqlObjectEntityParams) SetHostInfo(v HostInformation) {
	o.HostInfo = &v
}

// GetIsEncrypted returns the IsEncrypted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MssqlObjectEntityParams) GetIsEncrypted() bool {
	if o == nil || IsNil(o.IsEncrypted.Get()) {
		var ret bool
		return ret
	}
	return *o.IsEncrypted.Get()
}

// GetIsEncryptedOk returns a tuple with the IsEncrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MssqlObjectEntityParams) GetIsEncryptedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsEncrypted.Get(), o.IsEncrypted.IsSet()
}

// HasIsEncrypted returns a boolean if a field has been set.
func (o *MssqlObjectEntityParams) HasIsEncrypted() bool {
	if o != nil && o.IsEncrypted.IsSet() {
		return true
	}

	return false
}

// SetIsEncrypted gets a reference to the given NullableBool and assigns it to the IsEncrypted field.
func (o *MssqlObjectEntityParams) SetIsEncrypted(v bool) {
	o.IsEncrypted.Set(&v)
}
// SetIsEncryptedNil sets the value for IsEncrypted to be an explicit nil
func (o *MssqlObjectEntityParams) SetIsEncryptedNil() {
	o.IsEncrypted.Set(nil)
}

// UnsetIsEncrypted ensures that no value is present for IsEncrypted, not even an explicit nil
func (o *MssqlObjectEntityParams) UnsetIsEncrypted() {
	o.IsEncrypted.Unset()
}

func (o MssqlObjectEntityParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MssqlObjectEntityParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AagInfo) {
		toSerialize["aagInfo"] = o.AagInfo
	}
	if !IsNil(o.HostInfo) {
		toSerialize["hostInfo"] = o.HostInfo
	}
	if o.IsEncrypted.IsSet() {
		toSerialize["isEncrypted"] = o.IsEncrypted.Get()
	}
	return toSerialize, nil
}

type NullableMssqlObjectEntityParams struct {
	value *MssqlObjectEntityParams
	isSet bool
}

func (v NullableMssqlObjectEntityParams) Get() *MssqlObjectEntityParams {
	return v.value
}

func (v *NullableMssqlObjectEntityParams) Set(val *MssqlObjectEntityParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMssqlObjectEntityParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMssqlObjectEntityParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMssqlObjectEntityParams(val *MssqlObjectEntityParams) *NullableMssqlObjectEntityParams {
	return &NullableMssqlObjectEntityParams{value: val, isSet: true}
}

func (v NullableMssqlObjectEntityParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMssqlObjectEntityParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


