/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ClusterMetadataRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterMetadataRequest{}

// ClusterMetadataRequest Specifies the cluster metadata request details.
type ClusterMetadataRequest struct {
	AuthenticationMethods ClusterAuthMethodsMetadata `json:"authenticationMethods"`
	// Specifies the list of custom properties associated with the cluster. API caller can choose to set the following properties using provided key and value fields. The input values must always be in the string format and each key must be unique.
	CustomProperties []ClusterCustomMetadata `json:"customProperties,omitempty"`
	// Specifies the docs related metadata specific to the cluster. This metadata mainly consists of any external hyperlinks to service provider's documentation.
	Docs []ClusterDocsMetadata `json:"docs,omitempty"`
	Sla *ClusterSLAMetadata `json:"sla,omitempty"`
}

type _ClusterMetadataRequest ClusterMetadataRequest

// NewClusterMetadataRequest instantiates a new ClusterMetadataRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterMetadataRequest(authenticationMethods ClusterAuthMethodsMetadata) *ClusterMetadataRequest {
	this := ClusterMetadataRequest{}
	this.AuthenticationMethods = authenticationMethods
	return &this
}

// NewClusterMetadataRequestWithDefaults instantiates a new ClusterMetadataRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterMetadataRequestWithDefaults() *ClusterMetadataRequest {
	this := ClusterMetadataRequest{}
	return &this
}

// GetAuthenticationMethods returns the AuthenticationMethods field value
func (o *ClusterMetadataRequest) GetAuthenticationMethods() ClusterAuthMethodsMetadata {
	if o == nil {
		var ret ClusterAuthMethodsMetadata
		return ret
	}

	return o.AuthenticationMethods
}

// GetAuthenticationMethodsOk returns a tuple with the AuthenticationMethods field value
// and a boolean to check if the value has been set.
func (o *ClusterMetadataRequest) GetAuthenticationMethodsOk() (*ClusterAuthMethodsMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthenticationMethods, true
}

// SetAuthenticationMethods sets field value
func (o *ClusterMetadataRequest) SetAuthenticationMethods(v ClusterAuthMethodsMetadata) {
	o.AuthenticationMethods = v
}

// GetCustomProperties returns the CustomProperties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterMetadataRequest) GetCustomProperties() []ClusterCustomMetadata {
	if o == nil {
		var ret []ClusterCustomMetadata
		return ret
	}
	return o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterMetadataRequest) GetCustomPropertiesOk() ([]ClusterCustomMetadata, bool) {
	if o == nil || IsNil(o.CustomProperties) {
		return nil, false
	}
	return o.CustomProperties, true
}

// HasCustomProperties returns a boolean if a field has been set.
func (o *ClusterMetadataRequest) HasCustomProperties() bool {
	if o != nil && !IsNil(o.CustomProperties) {
		return true
	}

	return false
}

// SetCustomProperties gets a reference to the given []ClusterCustomMetadata and assigns it to the CustomProperties field.
func (o *ClusterMetadataRequest) SetCustomProperties(v []ClusterCustomMetadata) {
	o.CustomProperties = v
}

// GetDocs returns the Docs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterMetadataRequest) GetDocs() []ClusterDocsMetadata {
	if o == nil {
		var ret []ClusterDocsMetadata
		return ret
	}
	return o.Docs
}

// GetDocsOk returns a tuple with the Docs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterMetadataRequest) GetDocsOk() ([]ClusterDocsMetadata, bool) {
	if o == nil || IsNil(o.Docs) {
		return nil, false
	}
	return o.Docs, true
}

// HasDocs returns a boolean if a field has been set.
func (o *ClusterMetadataRequest) HasDocs() bool {
	if o != nil && !IsNil(o.Docs) {
		return true
	}

	return false
}

// SetDocs gets a reference to the given []ClusterDocsMetadata and assigns it to the Docs field.
func (o *ClusterMetadataRequest) SetDocs(v []ClusterDocsMetadata) {
	o.Docs = v
}

// GetSla returns the Sla field value if set, zero value otherwise.
func (o *ClusterMetadataRequest) GetSla() ClusterSLAMetadata {
	if o == nil || IsNil(o.Sla) {
		var ret ClusterSLAMetadata
		return ret
	}
	return *o.Sla
}

// GetSlaOk returns a tuple with the Sla field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterMetadataRequest) GetSlaOk() (*ClusterSLAMetadata, bool) {
	if o == nil || IsNil(o.Sla) {
		return nil, false
	}
	return o.Sla, true
}

// HasSla returns a boolean if a field has been set.
func (o *ClusterMetadataRequest) HasSla() bool {
	if o != nil && !IsNil(o.Sla) {
		return true
	}

	return false
}

// SetSla gets a reference to the given ClusterSLAMetadata and assigns it to the Sla field.
func (o *ClusterMetadataRequest) SetSla(v ClusterSLAMetadata) {
	o.Sla = &v
}

func (o ClusterMetadataRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterMetadataRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authenticationMethods"] = o.AuthenticationMethods
	if o.CustomProperties != nil {
		toSerialize["customProperties"] = o.CustomProperties
	}
	if o.Docs != nil {
		toSerialize["docs"] = o.Docs
	}
	if !IsNil(o.Sla) {
		toSerialize["sla"] = o.Sla
	}
	return toSerialize, nil
}

func (o *ClusterMetadataRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"authenticationMethods",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterMetadataRequest := _ClusterMetadataRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterMetadataRequest)

	if err != nil {
		return err
	}

	*o = ClusterMetadataRequest(varClusterMetadataRequest)

	return err
}

type NullableClusterMetadataRequest struct {
	value *ClusterMetadataRequest
	isSet bool
}

func (v NullableClusterMetadataRequest) Get() *ClusterMetadataRequest {
	return v.value
}

func (v *NullableClusterMetadataRequest) Set(val *ClusterMetadataRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterMetadataRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterMetadataRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterMetadataRequest(val *ClusterMetadataRequest) *NullableClusterMetadataRequest {
	return &NullableClusterMetadataRequest{value: val, isSet: true}
}

func (v NullableClusterMetadataRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterMetadataRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


