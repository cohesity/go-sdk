/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the IpmiUsers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpmiUsers{}

// IpmiUsers Specifies the list of IPMI users for the given node.
type IpmiUsers struct {
	// Specifies the channel through which the IPMI interface communicates on the network.
	Channel NullableInt32 `json:"channel,omitempty"`
	// Specifies the maximum value of user id among all the users.
	MaxUserId NullableInt32 `json:"maxUserId,omitempty"`
	// Specifies the list of ipmi users with their permissions.
	UserList []IpmiUserInfo `json:"userList,omitempty"`
}

// NewIpmiUsers instantiates a new IpmiUsers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpmiUsers() *IpmiUsers {
	this := IpmiUsers{}
	return &this
}

// NewIpmiUsersWithDefaults instantiates a new IpmiUsers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpmiUsersWithDefaults() *IpmiUsers {
	this := IpmiUsers{}
	return &this
}

// GetChannel returns the Channel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IpmiUsers) GetChannel() int32 {
	if o == nil || IsNil(o.Channel.Get()) {
		var ret int32
		return ret
	}
	return *o.Channel.Get()
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IpmiUsers) GetChannelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Channel.Get(), o.Channel.IsSet()
}

// HasChannel returns a boolean if a field has been set.
func (o *IpmiUsers) HasChannel() bool {
	if o != nil && o.Channel.IsSet() {
		return true
	}

	return false
}

// SetChannel gets a reference to the given NullableInt32 and assigns it to the Channel field.
func (o *IpmiUsers) SetChannel(v int32) {
	o.Channel.Set(&v)
}
// SetChannelNil sets the value for Channel to be an explicit nil
func (o *IpmiUsers) SetChannelNil() {
	o.Channel.Set(nil)
}

// UnsetChannel ensures that no value is present for Channel, not even an explicit nil
func (o *IpmiUsers) UnsetChannel() {
	o.Channel.Unset()
}

// GetMaxUserId returns the MaxUserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IpmiUsers) GetMaxUserId() int32 {
	if o == nil || IsNil(o.MaxUserId.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxUserId.Get()
}

// GetMaxUserIdOk returns a tuple with the MaxUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IpmiUsers) GetMaxUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxUserId.Get(), o.MaxUserId.IsSet()
}

// HasMaxUserId returns a boolean if a field has been set.
func (o *IpmiUsers) HasMaxUserId() bool {
	if o != nil && o.MaxUserId.IsSet() {
		return true
	}

	return false
}

// SetMaxUserId gets a reference to the given NullableInt32 and assigns it to the MaxUserId field.
func (o *IpmiUsers) SetMaxUserId(v int32) {
	o.MaxUserId.Set(&v)
}
// SetMaxUserIdNil sets the value for MaxUserId to be an explicit nil
func (o *IpmiUsers) SetMaxUserIdNil() {
	o.MaxUserId.Set(nil)
}

// UnsetMaxUserId ensures that no value is present for MaxUserId, not even an explicit nil
func (o *IpmiUsers) UnsetMaxUserId() {
	o.MaxUserId.Unset()
}

// GetUserList returns the UserList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IpmiUsers) GetUserList() []IpmiUserInfo {
	if o == nil {
		var ret []IpmiUserInfo
		return ret
	}
	return o.UserList
}

// GetUserListOk returns a tuple with the UserList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IpmiUsers) GetUserListOk() ([]IpmiUserInfo, bool) {
	if o == nil || IsNil(o.UserList) {
		return nil, false
	}
	return o.UserList, true
}

// HasUserList returns a boolean if a field has been set.
func (o *IpmiUsers) HasUserList() bool {
	if o != nil && !IsNil(o.UserList) {
		return true
	}

	return false
}

// SetUserList gets a reference to the given []IpmiUserInfo and assigns it to the UserList field.
func (o *IpmiUsers) SetUserList(v []IpmiUserInfo) {
	o.UserList = v
}

func (o IpmiUsers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpmiUsers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Channel.IsSet() {
		toSerialize["channel"] = o.Channel.Get()
	}
	if o.MaxUserId.IsSet() {
		toSerialize["maxUserId"] = o.MaxUserId.Get()
	}
	if o.UserList != nil {
		toSerialize["userList"] = o.UserList
	}
	return toSerialize, nil
}

type NullableIpmiUsers struct {
	value *IpmiUsers
	isSet bool
}

func (v NullableIpmiUsers) Get() *IpmiUsers {
	return v.value
}

func (v *NullableIpmiUsers) Set(val *IpmiUsers) {
	v.value = val
	v.isSet = true
}

func (v NullableIpmiUsers) IsSet() bool {
	return v.isSet
}

func (v *NullableIpmiUsers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpmiUsers(val *IpmiUsers) *NullableIpmiUsers {
	return &NullableIpmiUsers{value: val, isSet: true}
}

func (v NullableIpmiUsers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpmiUsers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


