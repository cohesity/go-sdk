/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TdmObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TdmObject{}

// TdmObject Specifies a TDM object.
type TdmObject struct {
	// Specifies the user, who created the object.
	CreatedByUser *User `json:"createdByUser,omitempty"`
	// Specifies the environment of the object.
	Environment NullableString `json:"environment"`
	// Specifies the unique ID of the object.
	Id NullableString `json:"id"`
	// Specifies the details of the last action performed on this object.
	LastAction *TdmObjectTimelineEvent `json:"lastAction,omitempty"`
	// Specifies the name of the object.
	Name NullableString `json:"name,omitempty"`
	// Specifies the parent of the object.
	Parent *ObjectSummary `json:"parent,omitempty"`
	// Specifies the size (in bytes) of the object.
	SizeBytes NullableInt64 `json:"sizeBytes,omitempty"`
	// Specifies the current status of the object.
	Status NullableString `json:"status,omitempty"`
	OracleParams *OracleCloneObject `json:"oracleParams,omitempty"`
}

type _TdmObject TdmObject

// NewTdmObject instantiates a new TdmObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTdmObject(environment NullableString, id NullableString) *TdmObject {
	this := TdmObject{}
	this.Environment = environment
	this.Id = id
	return &this
}

// NewTdmObjectWithDefaults instantiates a new TdmObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTdmObjectWithDefaults() *TdmObject {
	this := TdmObject{}
	return &this
}

// GetCreatedByUser returns the CreatedByUser field value if set, zero value otherwise.
func (o *TdmObject) GetCreatedByUser() User {
	if o == nil || IsNil(o.CreatedByUser) {
		var ret User
		return ret
	}
	return *o.CreatedByUser
}

// GetCreatedByUserOk returns a tuple with the CreatedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TdmObject) GetCreatedByUserOk() (*User, bool) {
	if o == nil || IsNil(o.CreatedByUser) {
		return nil, false
	}
	return o.CreatedByUser, true
}

// HasCreatedByUser returns a boolean if a field has been set.
func (o *TdmObject) HasCreatedByUser() bool {
	if o != nil && !IsNil(o.CreatedByUser) {
		return true
	}

	return false
}

// SetCreatedByUser gets a reference to the given User and assigns it to the CreatedByUser field.
func (o *TdmObject) SetCreatedByUser(v User) {
	o.CreatedByUser = &v
}

// GetEnvironment returns the Environment field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TdmObject) GetEnvironment() string {
	if o == nil || o.Environment.Get() == nil {
		var ret string
		return ret
	}

	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmObject) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// SetEnvironment sets field value
func (o *TdmObject) SetEnvironment(v string) {
	o.Environment.Set(&v)
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TdmObject) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}

	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmObject) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// SetId sets field value
func (o *TdmObject) SetId(v string) {
	o.Id.Set(&v)
}

// GetLastAction returns the LastAction field value if set, zero value otherwise.
func (o *TdmObject) GetLastAction() TdmObjectTimelineEvent {
	if o == nil || IsNil(o.LastAction) {
		var ret TdmObjectTimelineEvent
		return ret
	}
	return *o.LastAction
}

// GetLastActionOk returns a tuple with the LastAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TdmObject) GetLastActionOk() (*TdmObjectTimelineEvent, bool) {
	if o == nil || IsNil(o.LastAction) {
		return nil, false
	}
	return o.LastAction, true
}

// HasLastAction returns a boolean if a field has been set.
func (o *TdmObject) HasLastAction() bool {
	if o != nil && !IsNil(o.LastAction) {
		return true
	}

	return false
}

// SetLastAction gets a reference to the given TdmObjectTimelineEvent and assigns it to the LastAction field.
func (o *TdmObject) SetLastAction(v TdmObjectTimelineEvent) {
	o.LastAction = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmObject) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmObject) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *TdmObject) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *TdmObject) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *TdmObject) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *TdmObject) UnsetName() {
	o.Name.Unset()
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *TdmObject) GetParent() ObjectSummary {
	if o == nil || IsNil(o.Parent) {
		var ret ObjectSummary
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TdmObject) GetParentOk() (*ObjectSummary, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *TdmObject) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given ObjectSummary and assigns it to the Parent field.
func (o *TdmObject) SetParent(v ObjectSummary) {
	o.Parent = &v
}

// GetSizeBytes returns the SizeBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmObject) GetSizeBytes() int64 {
	if o == nil || IsNil(o.SizeBytes.Get()) {
		var ret int64
		return ret
	}
	return *o.SizeBytes.Get()
}

// GetSizeBytesOk returns a tuple with the SizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmObject) GetSizeBytesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SizeBytes.Get(), o.SizeBytes.IsSet()
}

// HasSizeBytes returns a boolean if a field has been set.
func (o *TdmObject) HasSizeBytes() bool {
	if o != nil && o.SizeBytes.IsSet() {
		return true
	}

	return false
}

// SetSizeBytes gets a reference to the given NullableInt64 and assigns it to the SizeBytes field.
func (o *TdmObject) SetSizeBytes(v int64) {
	o.SizeBytes.Set(&v)
}
// SetSizeBytesNil sets the value for SizeBytes to be an explicit nil
func (o *TdmObject) SetSizeBytesNil() {
	o.SizeBytes.Set(nil)
}

// UnsetSizeBytes ensures that no value is present for SizeBytes, not even an explicit nil
func (o *TdmObject) UnsetSizeBytes() {
	o.SizeBytes.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmObject) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmObject) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *TdmObject) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *TdmObject) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *TdmObject) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *TdmObject) UnsetStatus() {
	o.Status.Unset()
}

// GetOracleParams returns the OracleParams field value if set, zero value otherwise.
func (o *TdmObject) GetOracleParams() OracleCloneObject {
	if o == nil || IsNil(o.OracleParams) {
		var ret OracleCloneObject
		return ret
	}
	return *o.OracleParams
}

// GetOracleParamsOk returns a tuple with the OracleParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TdmObject) GetOracleParamsOk() (*OracleCloneObject, bool) {
	if o == nil || IsNil(o.OracleParams) {
		return nil, false
	}
	return o.OracleParams, true
}

// HasOracleParams returns a boolean if a field has been set.
func (o *TdmObject) HasOracleParams() bool {
	if o != nil && !IsNil(o.OracleParams) {
		return true
	}

	return false
}

// SetOracleParams gets a reference to the given OracleCloneObject and assigns it to the OracleParams field.
func (o *TdmObject) SetOracleParams(v OracleCloneObject) {
	o.OracleParams = &v
}

func (o TdmObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TdmObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedByUser) {
		toSerialize["createdByUser"] = o.CreatedByUser
	}
	toSerialize["environment"] = o.Environment.Get()
	toSerialize["id"] = o.Id.Get()
	if !IsNil(o.LastAction) {
		toSerialize["lastAction"] = o.LastAction
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if o.SizeBytes.IsSet() {
		toSerialize["sizeBytes"] = o.SizeBytes.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if !IsNil(o.OracleParams) {
		toSerialize["oracleParams"] = o.OracleParams
	}
	return toSerialize, nil
}

func (o *TdmObject) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"environment",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTdmObject := _TdmObject{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTdmObject)

	if err != nil {
		return err
	}

	*o = TdmObject(varTdmObject)

	return err
}

type NullableTdmObject struct {
	value *TdmObject
	isSet bool
}

func (v NullableTdmObject) Get() *TdmObject {
	return v.value
}

func (v *NullableTdmObject) Set(val *TdmObject) {
	v.value = val
	v.isSet = true
}

func (v NullableTdmObject) IsSet() bool {
	return v.isSet
}

func (v *NullableTdmObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTdmObject(val *TdmObject) *NullableTdmObject {
	return &NullableTdmObject{value: val, isSet: true}
}

func (v NullableTdmObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTdmObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


