/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CommonGcpExternalTargetParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonGcpExternalTargetParams{}

// CommonGcpExternalTargetParams Specifies the common parameters which are specific to GCP related External Targets.
type CommonGcpExternalTargetParams struct {
	// Specifies the bucket name of the external target.
	BucketName NullableString `json:"bucketName"`
	// Specifies the client email address of the external target.
	ClientEmailAddress NullableString `json:"clientEmailAddress"`
	// Specifies the client private key of the external target.
	ClientPrivateKey NullableString `json:"clientPrivateKey,omitempty"`
	// Specifies the project Id of the external target.
	ProjectId NullableString `json:"projectId"`
}

type _CommonGcpExternalTargetParams CommonGcpExternalTargetParams

// NewCommonGcpExternalTargetParams instantiates a new CommonGcpExternalTargetParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonGcpExternalTargetParams(bucketName NullableString, clientEmailAddress NullableString, projectId NullableString) *CommonGcpExternalTargetParams {
	this := CommonGcpExternalTargetParams{}
	this.BucketName = bucketName
	this.ClientEmailAddress = clientEmailAddress
	this.ProjectId = projectId
	return &this
}

// NewCommonGcpExternalTargetParamsWithDefaults instantiates a new CommonGcpExternalTargetParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonGcpExternalTargetParamsWithDefaults() *CommonGcpExternalTargetParams {
	this := CommonGcpExternalTargetParams{}
	return &this
}

// GetBucketName returns the BucketName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CommonGcpExternalTargetParams) GetBucketName() string {
	if o == nil || o.BucketName.Get() == nil {
		var ret string
		return ret
	}

	return *o.BucketName.Get()
}

// GetBucketNameOk returns a tuple with the BucketName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonGcpExternalTargetParams) GetBucketNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BucketName.Get(), o.BucketName.IsSet()
}

// SetBucketName sets field value
func (o *CommonGcpExternalTargetParams) SetBucketName(v string) {
	o.BucketName.Set(&v)
}

// GetClientEmailAddress returns the ClientEmailAddress field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CommonGcpExternalTargetParams) GetClientEmailAddress() string {
	if o == nil || o.ClientEmailAddress.Get() == nil {
		var ret string
		return ret
	}

	return *o.ClientEmailAddress.Get()
}

// GetClientEmailAddressOk returns a tuple with the ClientEmailAddress field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonGcpExternalTargetParams) GetClientEmailAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientEmailAddress.Get(), o.ClientEmailAddress.IsSet()
}

// SetClientEmailAddress sets field value
func (o *CommonGcpExternalTargetParams) SetClientEmailAddress(v string) {
	o.ClientEmailAddress.Set(&v)
}

// GetClientPrivateKey returns the ClientPrivateKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonGcpExternalTargetParams) GetClientPrivateKey() string {
	if o == nil || IsNil(o.ClientPrivateKey.Get()) {
		var ret string
		return ret
	}
	return *o.ClientPrivateKey.Get()
}

// GetClientPrivateKeyOk returns a tuple with the ClientPrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonGcpExternalTargetParams) GetClientPrivateKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientPrivateKey.Get(), o.ClientPrivateKey.IsSet()
}

// HasClientPrivateKey returns a boolean if a field has been set.
func (o *CommonGcpExternalTargetParams) HasClientPrivateKey() bool {
	if o != nil && o.ClientPrivateKey.IsSet() {
		return true
	}

	return false
}

// SetClientPrivateKey gets a reference to the given NullableString and assigns it to the ClientPrivateKey field.
func (o *CommonGcpExternalTargetParams) SetClientPrivateKey(v string) {
	o.ClientPrivateKey.Set(&v)
}
// SetClientPrivateKeyNil sets the value for ClientPrivateKey to be an explicit nil
func (o *CommonGcpExternalTargetParams) SetClientPrivateKeyNil() {
	o.ClientPrivateKey.Set(nil)
}

// UnsetClientPrivateKey ensures that no value is present for ClientPrivateKey, not even an explicit nil
func (o *CommonGcpExternalTargetParams) UnsetClientPrivateKey() {
	o.ClientPrivateKey.Unset()
}

// GetProjectId returns the ProjectId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CommonGcpExternalTargetParams) GetProjectId() string {
	if o == nil || o.ProjectId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProjectId.Get()
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonGcpExternalTargetParams) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectId.Get(), o.ProjectId.IsSet()
}

// SetProjectId sets field value
func (o *CommonGcpExternalTargetParams) SetProjectId(v string) {
	o.ProjectId.Set(&v)
}

func (o CommonGcpExternalTargetParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonGcpExternalTargetParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bucketName"] = o.BucketName.Get()
	toSerialize["clientEmailAddress"] = o.ClientEmailAddress.Get()
	if o.ClientPrivateKey.IsSet() {
		toSerialize["clientPrivateKey"] = o.ClientPrivateKey.Get()
	}
	toSerialize["projectId"] = o.ProjectId.Get()
	return toSerialize, nil
}

func (o *CommonGcpExternalTargetParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bucketName",
		"clientEmailAddress",
		"projectId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCommonGcpExternalTargetParams := _CommonGcpExternalTargetParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCommonGcpExternalTargetParams)

	if err != nil {
		return err
	}

	*o = CommonGcpExternalTargetParams(varCommonGcpExternalTargetParams)

	return err
}

type NullableCommonGcpExternalTargetParams struct {
	value *CommonGcpExternalTargetParams
	isSet bool
}

func (v NullableCommonGcpExternalTargetParams) Get() *CommonGcpExternalTargetParams {
	return v.value
}

func (v *NullableCommonGcpExternalTargetParams) Set(val *CommonGcpExternalTargetParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonGcpExternalTargetParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonGcpExternalTargetParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonGcpExternalTargetParams(val *CommonGcpExternalTargetParams) *NullableCommonGcpExternalTargetParams {
	return &NullableCommonGcpExternalTargetParams{value: val, isSet: true}
}

func (v NullableCommonGcpExternalTargetParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonGcpExternalTargetParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


