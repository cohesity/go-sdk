/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HyperVObjectProtectionRequestParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HyperVObjectProtectionRequestParams{}

// HyperVObjectProtectionRequestParams Specifies the parameters which are specific to HyperV object protection.
type HyperVObjectProtectionRequestParams struct {
	// Specifies whether or not to quiesce apps and the file system in order to take app consistent snapshots. If not specified or false then snapshots will not be app consistent.
	AppConsistentSnapshot NullableBool `json:"appConsistentSnapshot,omitempty"`
	// Specifies whether or not to fallback to a crash consistent snapshot in the event that an app consistent snapshot fails.
	FallbackToCrashConsistentSnapshot NullableBool `json:"fallbackToCrashConsistentSnapshot,omitempty"`
	IndexingPolicy *IndexingPolicy `json:"indexingPolicy,omitempty"`
	// Specifies the objects to include in the backup.
	Objects []HyperVObjectProtectionRequest `json:"objects"`
}

type _HyperVObjectProtectionRequestParams HyperVObjectProtectionRequestParams

// NewHyperVObjectProtectionRequestParams instantiates a new HyperVObjectProtectionRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHyperVObjectProtectionRequestParams(objects []HyperVObjectProtectionRequest) *HyperVObjectProtectionRequestParams {
	this := HyperVObjectProtectionRequestParams{}
	this.Objects = objects
	return &this
}

// NewHyperVObjectProtectionRequestParamsWithDefaults instantiates a new HyperVObjectProtectionRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHyperVObjectProtectionRequestParamsWithDefaults() *HyperVObjectProtectionRequestParams {
	this := HyperVObjectProtectionRequestParams{}
	return &this
}

// GetAppConsistentSnapshot returns the AppConsistentSnapshot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HyperVObjectProtectionRequestParams) GetAppConsistentSnapshot() bool {
	if o == nil || IsNil(o.AppConsistentSnapshot.Get()) {
		var ret bool
		return ret
	}
	return *o.AppConsistentSnapshot.Get()
}

// GetAppConsistentSnapshotOk returns a tuple with the AppConsistentSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HyperVObjectProtectionRequestParams) GetAppConsistentSnapshotOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppConsistentSnapshot.Get(), o.AppConsistentSnapshot.IsSet()
}

// HasAppConsistentSnapshot returns a boolean if a field has been set.
func (o *HyperVObjectProtectionRequestParams) HasAppConsistentSnapshot() bool {
	if o != nil && o.AppConsistentSnapshot.IsSet() {
		return true
	}

	return false
}

// SetAppConsistentSnapshot gets a reference to the given NullableBool and assigns it to the AppConsistentSnapshot field.
func (o *HyperVObjectProtectionRequestParams) SetAppConsistentSnapshot(v bool) {
	o.AppConsistentSnapshot.Set(&v)
}
// SetAppConsistentSnapshotNil sets the value for AppConsistentSnapshot to be an explicit nil
func (o *HyperVObjectProtectionRequestParams) SetAppConsistentSnapshotNil() {
	o.AppConsistentSnapshot.Set(nil)
}

// UnsetAppConsistentSnapshot ensures that no value is present for AppConsistentSnapshot, not even an explicit nil
func (o *HyperVObjectProtectionRequestParams) UnsetAppConsistentSnapshot() {
	o.AppConsistentSnapshot.Unset()
}

// GetFallbackToCrashConsistentSnapshot returns the FallbackToCrashConsistentSnapshot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HyperVObjectProtectionRequestParams) GetFallbackToCrashConsistentSnapshot() bool {
	if o == nil || IsNil(o.FallbackToCrashConsistentSnapshot.Get()) {
		var ret bool
		return ret
	}
	return *o.FallbackToCrashConsistentSnapshot.Get()
}

// GetFallbackToCrashConsistentSnapshotOk returns a tuple with the FallbackToCrashConsistentSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HyperVObjectProtectionRequestParams) GetFallbackToCrashConsistentSnapshotOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.FallbackToCrashConsistentSnapshot.Get(), o.FallbackToCrashConsistentSnapshot.IsSet()
}

// HasFallbackToCrashConsistentSnapshot returns a boolean if a field has been set.
func (o *HyperVObjectProtectionRequestParams) HasFallbackToCrashConsistentSnapshot() bool {
	if o != nil && o.FallbackToCrashConsistentSnapshot.IsSet() {
		return true
	}

	return false
}

// SetFallbackToCrashConsistentSnapshot gets a reference to the given NullableBool and assigns it to the FallbackToCrashConsistentSnapshot field.
func (o *HyperVObjectProtectionRequestParams) SetFallbackToCrashConsistentSnapshot(v bool) {
	o.FallbackToCrashConsistentSnapshot.Set(&v)
}
// SetFallbackToCrashConsistentSnapshotNil sets the value for FallbackToCrashConsistentSnapshot to be an explicit nil
func (o *HyperVObjectProtectionRequestParams) SetFallbackToCrashConsistentSnapshotNil() {
	o.FallbackToCrashConsistentSnapshot.Set(nil)
}

// UnsetFallbackToCrashConsistentSnapshot ensures that no value is present for FallbackToCrashConsistentSnapshot, not even an explicit nil
func (o *HyperVObjectProtectionRequestParams) UnsetFallbackToCrashConsistentSnapshot() {
	o.FallbackToCrashConsistentSnapshot.Unset()
}

// GetIndexingPolicy returns the IndexingPolicy field value if set, zero value otherwise.
func (o *HyperVObjectProtectionRequestParams) GetIndexingPolicy() IndexingPolicy {
	if o == nil || IsNil(o.IndexingPolicy) {
		var ret IndexingPolicy
		return ret
	}
	return *o.IndexingPolicy
}

// GetIndexingPolicyOk returns a tuple with the IndexingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperVObjectProtectionRequestParams) GetIndexingPolicyOk() (*IndexingPolicy, bool) {
	if o == nil || IsNil(o.IndexingPolicy) {
		return nil, false
	}
	return o.IndexingPolicy, true
}

// HasIndexingPolicy returns a boolean if a field has been set.
func (o *HyperVObjectProtectionRequestParams) HasIndexingPolicy() bool {
	if o != nil && !IsNil(o.IndexingPolicy) {
		return true
	}

	return false
}

// SetIndexingPolicy gets a reference to the given IndexingPolicy and assigns it to the IndexingPolicy field.
func (o *HyperVObjectProtectionRequestParams) SetIndexingPolicy(v IndexingPolicy) {
	o.IndexingPolicy = &v
}

// GetObjects returns the Objects field value
func (o *HyperVObjectProtectionRequestParams) GetObjects() []HyperVObjectProtectionRequest {
	if o == nil {
		var ret []HyperVObjectProtectionRequest
		return ret
	}

	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value
// and a boolean to check if the value has been set.
func (o *HyperVObjectProtectionRequestParams) GetObjectsOk() ([]HyperVObjectProtectionRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Objects, true
}

// SetObjects sets field value
func (o *HyperVObjectProtectionRequestParams) SetObjects(v []HyperVObjectProtectionRequest) {
	o.Objects = v
}

func (o HyperVObjectProtectionRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HyperVObjectProtectionRequestParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AppConsistentSnapshot.IsSet() {
		toSerialize["appConsistentSnapshot"] = o.AppConsistentSnapshot.Get()
	}
	if o.FallbackToCrashConsistentSnapshot.IsSet() {
		toSerialize["fallbackToCrashConsistentSnapshot"] = o.FallbackToCrashConsistentSnapshot.Get()
	}
	if !IsNil(o.IndexingPolicy) {
		toSerialize["indexingPolicy"] = o.IndexingPolicy
	}
	toSerialize["objects"] = o.Objects
	return toSerialize, nil
}

func (o *HyperVObjectProtectionRequestParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objects",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHyperVObjectProtectionRequestParams := _HyperVObjectProtectionRequestParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHyperVObjectProtectionRequestParams)

	if err != nil {
		return err
	}

	*o = HyperVObjectProtectionRequestParams(varHyperVObjectProtectionRequestParams)

	return err
}

type NullableHyperVObjectProtectionRequestParams struct {
	value *HyperVObjectProtectionRequestParams
	isSet bool
}

func (v NullableHyperVObjectProtectionRequestParams) Get() *HyperVObjectProtectionRequestParams {
	return v.value
}

func (v *NullableHyperVObjectProtectionRequestParams) Set(val *HyperVObjectProtectionRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableHyperVObjectProtectionRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableHyperVObjectProtectionRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHyperVObjectProtectionRequestParams(val *HyperVObjectProtectionRequestParams) *NullableHyperVObjectProtectionRequestParams {
	return &NullableHyperVObjectProtectionRequestParams{value: val, isSet: true}
}

func (v NullableHyperVObjectProtectionRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHyperVObjectProtectionRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


