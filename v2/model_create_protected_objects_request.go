/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateProtectedObjectsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProtectedObjectsRequest{}

// CreateProtectedObjectsRequest Specifies the request for creating an object backup.
type CreateProtectedObjectsRequest struct {
	// Specifies whether currently executing object backup should abort if a blackout period specified by a policy starts. Available only if the selected policy has at least one blackout period. Default value is false.
	AbortInBlackouts NullableBool `json:"abortInBlackouts,omitempty"`
	// Specifies the end time in micro seconds for this Protection Group. If this is not specified, the Protection Group won't be ended.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	PolicyConfig *PolicyConfig `json:"policyConfig,omitempty"`
	// Specifies the unique id of the Protection Policy. The Policy settings will be attached with every object and will be used in backup.
	PolicyId NullableString `json:"policyId,omitempty"`
	// Specifies the priority for the objects backup.
	Priority NullableString `json:"priority,omitempty"`
	// Specifies whether object backup will be written to HDD or SSD.
	QosPolicy NullableString `json:"qosPolicy,omitempty"`
	// Specifies whether to skip Rigel for backup or not.
	SkipRigelForBackup NullableBool `json:"skipRigelForBackup,omitempty"`
	// Specifies the SLA parameters for list of objects.
	Sla []SlaRule `json:"sla,omitempty"`
	StartTime *TimeOfDay `json:"startTime,omitempty"`
	// Specifies the Storage Domain (View Box) ID where the object backup will be taken. This is not required if Cloud archive direct is benig used.
	StorageDomainId NullableInt64 `json:"storageDomainId,omitempty"`
	// If set to true, it will look for the remote backup of the given user and object, and activates it. Creates a new backup if the remote backup is not found. After activation, this object cannot get snapshots from remote clusters.
	ActivateRemoteObjectProtection NullableBool `json:"activateRemoteObjectProtection,omitempty"`
	// If set to true, then the object specs will be created in the paused state preventing any runs from happening until they are unpaused.
	IsPaused NullableBool `json:"isPaused,omitempty"`
	// Specifies the list of objects to be protected. Multiple objects from different adapters can be provided as input.
	Objects []EnvSpecificObjectProtectionRequestParams `json:"objects"`
}

type _CreateProtectedObjectsRequest CreateProtectedObjectsRequest

// NewCreateProtectedObjectsRequest instantiates a new CreateProtectedObjectsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProtectedObjectsRequest(objects []EnvSpecificObjectProtectionRequestParams) *CreateProtectedObjectsRequest {
	this := CreateProtectedObjectsRequest{}
	this.Objects = objects
	return &this
}

// NewCreateProtectedObjectsRequestWithDefaults instantiates a new CreateProtectedObjectsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProtectedObjectsRequestWithDefaults() *CreateProtectedObjectsRequest {
	this := CreateProtectedObjectsRequest{}
	return &this
}

// GetAbortInBlackouts returns the AbortInBlackouts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProtectedObjectsRequest) GetAbortInBlackouts() bool {
	if o == nil || IsNil(o.AbortInBlackouts.Get()) {
		var ret bool
		return ret
	}
	return *o.AbortInBlackouts.Get()
}

// GetAbortInBlackoutsOk returns a tuple with the AbortInBlackouts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProtectedObjectsRequest) GetAbortInBlackoutsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AbortInBlackouts.Get(), o.AbortInBlackouts.IsSet()
}

// HasAbortInBlackouts returns a boolean if a field has been set.
func (o *CreateProtectedObjectsRequest) HasAbortInBlackouts() bool {
	if o != nil && o.AbortInBlackouts.IsSet() {
		return true
	}

	return false
}

// SetAbortInBlackouts gets a reference to the given NullableBool and assigns it to the AbortInBlackouts field.
func (o *CreateProtectedObjectsRequest) SetAbortInBlackouts(v bool) {
	o.AbortInBlackouts.Set(&v)
}
// SetAbortInBlackoutsNil sets the value for AbortInBlackouts to be an explicit nil
func (o *CreateProtectedObjectsRequest) SetAbortInBlackoutsNil() {
	o.AbortInBlackouts.Set(nil)
}

// UnsetAbortInBlackouts ensures that no value is present for AbortInBlackouts, not even an explicit nil
func (o *CreateProtectedObjectsRequest) UnsetAbortInBlackouts() {
	o.AbortInBlackouts.Unset()
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProtectedObjectsRequest) GetEndTimeUsecs() int64 {
	if o == nil || IsNil(o.EndTimeUsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProtectedObjectsRequest) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *CreateProtectedObjectsRequest) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *CreateProtectedObjectsRequest) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *CreateProtectedObjectsRequest) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *CreateProtectedObjectsRequest) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetPolicyConfig returns the PolicyConfig field value if set, zero value otherwise.
func (o *CreateProtectedObjectsRequest) GetPolicyConfig() PolicyConfig {
	if o == nil || IsNil(o.PolicyConfig) {
		var ret PolicyConfig
		return ret
	}
	return *o.PolicyConfig
}

// GetPolicyConfigOk returns a tuple with the PolicyConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProtectedObjectsRequest) GetPolicyConfigOk() (*PolicyConfig, bool) {
	if o == nil || IsNil(o.PolicyConfig) {
		return nil, false
	}
	return o.PolicyConfig, true
}

// HasPolicyConfig returns a boolean if a field has been set.
func (o *CreateProtectedObjectsRequest) HasPolicyConfig() bool {
	if o != nil && !IsNil(o.PolicyConfig) {
		return true
	}

	return false
}

// SetPolicyConfig gets a reference to the given PolicyConfig and assigns it to the PolicyConfig field.
func (o *CreateProtectedObjectsRequest) SetPolicyConfig(v PolicyConfig) {
	o.PolicyConfig = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProtectedObjectsRequest) GetPolicyId() string {
	if o == nil || IsNil(o.PolicyId.Get()) {
		var ret string
		return ret
	}
	return *o.PolicyId.Get()
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProtectedObjectsRequest) GetPolicyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolicyId.Get(), o.PolicyId.IsSet()
}

// HasPolicyId returns a boolean if a field has been set.
func (o *CreateProtectedObjectsRequest) HasPolicyId() bool {
	if o != nil && o.PolicyId.IsSet() {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given NullableString and assigns it to the PolicyId field.
func (o *CreateProtectedObjectsRequest) SetPolicyId(v string) {
	o.PolicyId.Set(&v)
}
// SetPolicyIdNil sets the value for PolicyId to be an explicit nil
func (o *CreateProtectedObjectsRequest) SetPolicyIdNil() {
	o.PolicyId.Set(nil)
}

// UnsetPolicyId ensures that no value is present for PolicyId, not even an explicit nil
func (o *CreateProtectedObjectsRequest) UnsetPolicyId() {
	o.PolicyId.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProtectedObjectsRequest) GetPriority() string {
	if o == nil || IsNil(o.Priority.Get()) {
		var ret string
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProtectedObjectsRequest) GetPriorityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *CreateProtectedObjectsRequest) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableString and assigns it to the Priority field.
func (o *CreateProtectedObjectsRequest) SetPriority(v string) {
	o.Priority.Set(&v)
}
// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *CreateProtectedObjectsRequest) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *CreateProtectedObjectsRequest) UnsetPriority() {
	o.Priority.Unset()
}

// GetQosPolicy returns the QosPolicy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProtectedObjectsRequest) GetQosPolicy() string {
	if o == nil || IsNil(o.QosPolicy.Get()) {
		var ret string
		return ret
	}
	return *o.QosPolicy.Get()
}

// GetQosPolicyOk returns a tuple with the QosPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProtectedObjectsRequest) GetQosPolicyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.QosPolicy.Get(), o.QosPolicy.IsSet()
}

// HasQosPolicy returns a boolean if a field has been set.
func (o *CreateProtectedObjectsRequest) HasQosPolicy() bool {
	if o != nil && o.QosPolicy.IsSet() {
		return true
	}

	return false
}

// SetQosPolicy gets a reference to the given NullableString and assigns it to the QosPolicy field.
func (o *CreateProtectedObjectsRequest) SetQosPolicy(v string) {
	o.QosPolicy.Set(&v)
}
// SetQosPolicyNil sets the value for QosPolicy to be an explicit nil
func (o *CreateProtectedObjectsRequest) SetQosPolicyNil() {
	o.QosPolicy.Set(nil)
}

// UnsetQosPolicy ensures that no value is present for QosPolicy, not even an explicit nil
func (o *CreateProtectedObjectsRequest) UnsetQosPolicy() {
	o.QosPolicy.Unset()
}

// GetSkipRigelForBackup returns the SkipRigelForBackup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProtectedObjectsRequest) GetSkipRigelForBackup() bool {
	if o == nil || IsNil(o.SkipRigelForBackup.Get()) {
		var ret bool
		return ret
	}
	return *o.SkipRigelForBackup.Get()
}

// GetSkipRigelForBackupOk returns a tuple with the SkipRigelForBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProtectedObjectsRequest) GetSkipRigelForBackupOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SkipRigelForBackup.Get(), o.SkipRigelForBackup.IsSet()
}

// HasSkipRigelForBackup returns a boolean if a field has been set.
func (o *CreateProtectedObjectsRequest) HasSkipRigelForBackup() bool {
	if o != nil && o.SkipRigelForBackup.IsSet() {
		return true
	}

	return false
}

// SetSkipRigelForBackup gets a reference to the given NullableBool and assigns it to the SkipRigelForBackup field.
func (o *CreateProtectedObjectsRequest) SetSkipRigelForBackup(v bool) {
	o.SkipRigelForBackup.Set(&v)
}
// SetSkipRigelForBackupNil sets the value for SkipRigelForBackup to be an explicit nil
func (o *CreateProtectedObjectsRequest) SetSkipRigelForBackupNil() {
	o.SkipRigelForBackup.Set(nil)
}

// UnsetSkipRigelForBackup ensures that no value is present for SkipRigelForBackup, not even an explicit nil
func (o *CreateProtectedObjectsRequest) UnsetSkipRigelForBackup() {
	o.SkipRigelForBackup.Unset()
}

// GetSla returns the Sla field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProtectedObjectsRequest) GetSla() []SlaRule {
	if o == nil {
		var ret []SlaRule
		return ret
	}
	return o.Sla
}

// GetSlaOk returns a tuple with the Sla field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProtectedObjectsRequest) GetSlaOk() ([]SlaRule, bool) {
	if o == nil || IsNil(o.Sla) {
		return nil, false
	}
	return o.Sla, true
}

// HasSla returns a boolean if a field has been set.
func (o *CreateProtectedObjectsRequest) HasSla() bool {
	if o != nil && !IsNil(o.Sla) {
		return true
	}

	return false
}

// SetSla gets a reference to the given []SlaRule and assigns it to the Sla field.
func (o *CreateProtectedObjectsRequest) SetSla(v []SlaRule) {
	o.Sla = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *CreateProtectedObjectsRequest) GetStartTime() TimeOfDay {
	if o == nil || IsNil(o.StartTime) {
		var ret TimeOfDay
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProtectedObjectsRequest) GetStartTimeOk() (*TimeOfDay, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *CreateProtectedObjectsRequest) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given TimeOfDay and assigns it to the StartTime field.
func (o *CreateProtectedObjectsRequest) SetStartTime(v TimeOfDay) {
	o.StartTime = &v
}

// GetStorageDomainId returns the StorageDomainId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProtectedObjectsRequest) GetStorageDomainId() int64 {
	if o == nil || IsNil(o.StorageDomainId.Get()) {
		var ret int64
		return ret
	}
	return *o.StorageDomainId.Get()
}

// GetStorageDomainIdOk returns a tuple with the StorageDomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProtectedObjectsRequest) GetStorageDomainIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageDomainId.Get(), o.StorageDomainId.IsSet()
}

// HasStorageDomainId returns a boolean if a field has been set.
func (o *CreateProtectedObjectsRequest) HasStorageDomainId() bool {
	if o != nil && o.StorageDomainId.IsSet() {
		return true
	}

	return false
}

// SetStorageDomainId gets a reference to the given NullableInt64 and assigns it to the StorageDomainId field.
func (o *CreateProtectedObjectsRequest) SetStorageDomainId(v int64) {
	o.StorageDomainId.Set(&v)
}
// SetStorageDomainIdNil sets the value for StorageDomainId to be an explicit nil
func (o *CreateProtectedObjectsRequest) SetStorageDomainIdNil() {
	o.StorageDomainId.Set(nil)
}

// UnsetStorageDomainId ensures that no value is present for StorageDomainId, not even an explicit nil
func (o *CreateProtectedObjectsRequest) UnsetStorageDomainId() {
	o.StorageDomainId.Unset()
}

// GetActivateRemoteObjectProtection returns the ActivateRemoteObjectProtection field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProtectedObjectsRequest) GetActivateRemoteObjectProtection() bool {
	if o == nil || IsNil(o.ActivateRemoteObjectProtection.Get()) {
		var ret bool
		return ret
	}
	return *o.ActivateRemoteObjectProtection.Get()
}

// GetActivateRemoteObjectProtectionOk returns a tuple with the ActivateRemoteObjectProtection field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProtectedObjectsRequest) GetActivateRemoteObjectProtectionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActivateRemoteObjectProtection.Get(), o.ActivateRemoteObjectProtection.IsSet()
}

// HasActivateRemoteObjectProtection returns a boolean if a field has been set.
func (o *CreateProtectedObjectsRequest) HasActivateRemoteObjectProtection() bool {
	if o != nil && o.ActivateRemoteObjectProtection.IsSet() {
		return true
	}

	return false
}

// SetActivateRemoteObjectProtection gets a reference to the given NullableBool and assigns it to the ActivateRemoteObjectProtection field.
func (o *CreateProtectedObjectsRequest) SetActivateRemoteObjectProtection(v bool) {
	o.ActivateRemoteObjectProtection.Set(&v)
}
// SetActivateRemoteObjectProtectionNil sets the value for ActivateRemoteObjectProtection to be an explicit nil
func (o *CreateProtectedObjectsRequest) SetActivateRemoteObjectProtectionNil() {
	o.ActivateRemoteObjectProtection.Set(nil)
}

// UnsetActivateRemoteObjectProtection ensures that no value is present for ActivateRemoteObjectProtection, not even an explicit nil
func (o *CreateProtectedObjectsRequest) UnsetActivateRemoteObjectProtection() {
	o.ActivateRemoteObjectProtection.Unset()
}

// GetIsPaused returns the IsPaused field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProtectedObjectsRequest) GetIsPaused() bool {
	if o == nil || IsNil(o.IsPaused.Get()) {
		var ret bool
		return ret
	}
	return *o.IsPaused.Get()
}

// GetIsPausedOk returns a tuple with the IsPaused field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProtectedObjectsRequest) GetIsPausedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsPaused.Get(), o.IsPaused.IsSet()
}

// HasIsPaused returns a boolean if a field has been set.
func (o *CreateProtectedObjectsRequest) HasIsPaused() bool {
	if o != nil && o.IsPaused.IsSet() {
		return true
	}

	return false
}

// SetIsPaused gets a reference to the given NullableBool and assigns it to the IsPaused field.
func (o *CreateProtectedObjectsRequest) SetIsPaused(v bool) {
	o.IsPaused.Set(&v)
}
// SetIsPausedNil sets the value for IsPaused to be an explicit nil
func (o *CreateProtectedObjectsRequest) SetIsPausedNil() {
	o.IsPaused.Set(nil)
}

// UnsetIsPaused ensures that no value is present for IsPaused, not even an explicit nil
func (o *CreateProtectedObjectsRequest) UnsetIsPaused() {
	o.IsPaused.Unset()
}

// GetObjects returns the Objects field value
// If the value is explicit nil, the zero value for []EnvSpecificObjectProtectionRequestParams will be returned
func (o *CreateProtectedObjectsRequest) GetObjects() []EnvSpecificObjectProtectionRequestParams {
	if o == nil {
		var ret []EnvSpecificObjectProtectionRequestParams
		return ret
	}

	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProtectedObjectsRequest) GetObjectsOk() ([]EnvSpecificObjectProtectionRequestParams, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// SetObjects sets field value
func (o *CreateProtectedObjectsRequest) SetObjects(v []EnvSpecificObjectProtectionRequestParams) {
	o.Objects = v
}

func (o CreateProtectedObjectsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProtectedObjectsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AbortInBlackouts.IsSet() {
		toSerialize["abortInBlackouts"] = o.AbortInBlackouts.Get()
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if !IsNil(o.PolicyConfig) {
		toSerialize["policyConfig"] = o.PolicyConfig
	}
	if o.PolicyId.IsSet() {
		toSerialize["policyId"] = o.PolicyId.Get()
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	if o.QosPolicy.IsSet() {
		toSerialize["qosPolicy"] = o.QosPolicy.Get()
	}
	if o.SkipRigelForBackup.IsSet() {
		toSerialize["skipRigelForBackup"] = o.SkipRigelForBackup.Get()
	}
	if o.Sla != nil {
		toSerialize["sla"] = o.Sla
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if o.StorageDomainId.IsSet() {
		toSerialize["storageDomainId"] = o.StorageDomainId.Get()
	}
	if o.ActivateRemoteObjectProtection.IsSet() {
		toSerialize["activateRemoteObjectProtection"] = o.ActivateRemoteObjectProtection.Get()
	}
	if o.IsPaused.IsSet() {
		toSerialize["isPaused"] = o.IsPaused.Get()
	}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	return toSerialize, nil
}

func (o *CreateProtectedObjectsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objects",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateProtectedObjectsRequest := _CreateProtectedObjectsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateProtectedObjectsRequest)

	if err != nil {
		return err
	}

	*o = CreateProtectedObjectsRequest(varCreateProtectedObjectsRequest)

	return err
}

type NullableCreateProtectedObjectsRequest struct {
	value *CreateProtectedObjectsRequest
	isSet bool
}

func (v NullableCreateProtectedObjectsRequest) Get() *CreateProtectedObjectsRequest {
	return v.value
}

func (v *NullableCreateProtectedObjectsRequest) Set(val *CreateProtectedObjectsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProtectedObjectsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProtectedObjectsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProtectedObjectsRequest(val *CreateProtectedObjectsRequest) *NullableCreateProtectedObjectsRequest {
	return &NullableCreateProtectedObjectsRequest{value: val, isSet: true}
}

func (v NullableCreateProtectedObjectsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProtectedObjectsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


