/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the StatsTasks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatsTasks{}

// StatsTasks List of Run Stats Tasks.
type StatsTasks struct {
	// Specifies the list of Run Stats Task.
	StatsTasks []StatsTask `json:"statsTasks,omitempty"`
}

// NewStatsTasks instantiates a new StatsTasks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatsTasks() *StatsTasks {
	this := StatsTasks{}
	return &this
}

// NewStatsTasksWithDefaults instantiates a new StatsTasks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatsTasksWithDefaults() *StatsTasks {
	this := StatsTasks{}
	return &this
}

// GetStatsTasks returns the StatsTasks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StatsTasks) GetStatsTasks() []StatsTask {
	if o == nil {
		var ret []StatsTask
		return ret
	}
	return o.StatsTasks
}

// GetStatsTasksOk returns a tuple with the StatsTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StatsTasks) GetStatsTasksOk() ([]StatsTask, bool) {
	if o == nil || IsNil(o.StatsTasks) {
		return nil, false
	}
	return o.StatsTasks, true
}

// HasStatsTasks returns a boolean if a field has been set.
func (o *StatsTasks) HasStatsTasks() bool {
	if o != nil && !IsNil(o.StatsTasks) {
		return true
	}

	return false
}

// SetStatsTasks gets a reference to the given []StatsTask and assigns it to the StatsTasks field.
func (o *StatsTasks) SetStatsTasks(v []StatsTask) {
	o.StatsTasks = v
}

func (o StatsTasks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatsTasks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.StatsTasks != nil {
		toSerialize["statsTasks"] = o.StatsTasks
	}
	return toSerialize, nil
}

type NullableStatsTasks struct {
	value *StatsTasks
	isSet bool
}

func (v NullableStatsTasks) Get() *StatsTasks {
	return v.value
}

func (v *NullableStatsTasks) Set(val *StatsTasks) {
	v.value = val
	v.isSet = true
}

func (v NullableStatsTasks) IsSet() bool {
	return v.isSet
}

func (v *NullableStatsTasks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatsTasks(val *StatsTasks) *NullableStatsTasks {
	return &NullableStatsTasks{value: val, isSet: true}
}

func (v NullableStatsTasks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatsTasks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


