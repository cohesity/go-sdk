/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TieringExternalTargetParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TieringExternalTargetParams{}

// TieringExternalTargetParams Specifies the parameters which are specific to Tiering purpose type External Targets.
type TieringExternalTargetParams struct {
	// Specifies the type of encryption for the Setting.
	EncryptionLevel NullableString `json:"encryptionLevel"`
	// Specifies the Storage type of the External Target.
	StorageType NullableString `json:"storageType"`
	AwsParams *TieringAwsExternalTargetParams `json:"awsParams,omitempty"`
	AzureParams *TieringAzureExternalTargetParams `json:"azureParams,omitempty"`
	GcpParams *TieringGcpExternalTargetParams `json:"gcpParams,omitempty"`
	OracleParams *TieringOracleExternalTargetParams `json:"oracleParams,omitempty"`
	S3CompParams *TieringS3CompExternalTargetParams `json:"s3CompParams,omitempty"`
}

type _TieringExternalTargetParams TieringExternalTargetParams

// NewTieringExternalTargetParams instantiates a new TieringExternalTargetParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTieringExternalTargetParams(encryptionLevel NullableString, storageType NullableString) *TieringExternalTargetParams {
	this := TieringExternalTargetParams{}
	this.EncryptionLevel = encryptionLevel
	this.StorageType = storageType
	return &this
}

// NewTieringExternalTargetParamsWithDefaults instantiates a new TieringExternalTargetParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTieringExternalTargetParamsWithDefaults() *TieringExternalTargetParams {
	this := TieringExternalTargetParams{}
	return &this
}

// GetEncryptionLevel returns the EncryptionLevel field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TieringExternalTargetParams) GetEncryptionLevel() string {
	if o == nil || o.EncryptionLevel.Get() == nil {
		var ret string
		return ret
	}

	return *o.EncryptionLevel.Get()
}

// GetEncryptionLevelOk returns a tuple with the EncryptionLevel field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TieringExternalTargetParams) GetEncryptionLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EncryptionLevel.Get(), o.EncryptionLevel.IsSet()
}

// SetEncryptionLevel sets field value
func (o *TieringExternalTargetParams) SetEncryptionLevel(v string) {
	o.EncryptionLevel.Set(&v)
}

// GetStorageType returns the StorageType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TieringExternalTargetParams) GetStorageType() string {
	if o == nil || o.StorageType.Get() == nil {
		var ret string
		return ret
	}

	return *o.StorageType.Get()
}

// GetStorageTypeOk returns a tuple with the StorageType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TieringExternalTargetParams) GetStorageTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageType.Get(), o.StorageType.IsSet()
}

// SetStorageType sets field value
func (o *TieringExternalTargetParams) SetStorageType(v string) {
	o.StorageType.Set(&v)
}

// GetAwsParams returns the AwsParams field value if set, zero value otherwise.
func (o *TieringExternalTargetParams) GetAwsParams() TieringAwsExternalTargetParams {
	if o == nil || IsNil(o.AwsParams) {
		var ret TieringAwsExternalTargetParams
		return ret
	}
	return *o.AwsParams
}

// GetAwsParamsOk returns a tuple with the AwsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TieringExternalTargetParams) GetAwsParamsOk() (*TieringAwsExternalTargetParams, bool) {
	if o == nil || IsNil(o.AwsParams) {
		return nil, false
	}
	return o.AwsParams, true
}

// HasAwsParams returns a boolean if a field has been set.
func (o *TieringExternalTargetParams) HasAwsParams() bool {
	if o != nil && !IsNil(o.AwsParams) {
		return true
	}

	return false
}

// SetAwsParams gets a reference to the given TieringAwsExternalTargetParams and assigns it to the AwsParams field.
func (o *TieringExternalTargetParams) SetAwsParams(v TieringAwsExternalTargetParams) {
	o.AwsParams = &v
}

// GetAzureParams returns the AzureParams field value if set, zero value otherwise.
func (o *TieringExternalTargetParams) GetAzureParams() TieringAzureExternalTargetParams {
	if o == nil || IsNil(o.AzureParams) {
		var ret TieringAzureExternalTargetParams
		return ret
	}
	return *o.AzureParams
}

// GetAzureParamsOk returns a tuple with the AzureParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TieringExternalTargetParams) GetAzureParamsOk() (*TieringAzureExternalTargetParams, bool) {
	if o == nil || IsNil(o.AzureParams) {
		return nil, false
	}
	return o.AzureParams, true
}

// HasAzureParams returns a boolean if a field has been set.
func (o *TieringExternalTargetParams) HasAzureParams() bool {
	if o != nil && !IsNil(o.AzureParams) {
		return true
	}

	return false
}

// SetAzureParams gets a reference to the given TieringAzureExternalTargetParams and assigns it to the AzureParams field.
func (o *TieringExternalTargetParams) SetAzureParams(v TieringAzureExternalTargetParams) {
	o.AzureParams = &v
}

// GetGcpParams returns the GcpParams field value if set, zero value otherwise.
func (o *TieringExternalTargetParams) GetGcpParams() TieringGcpExternalTargetParams {
	if o == nil || IsNil(o.GcpParams) {
		var ret TieringGcpExternalTargetParams
		return ret
	}
	return *o.GcpParams
}

// GetGcpParamsOk returns a tuple with the GcpParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TieringExternalTargetParams) GetGcpParamsOk() (*TieringGcpExternalTargetParams, bool) {
	if o == nil || IsNil(o.GcpParams) {
		return nil, false
	}
	return o.GcpParams, true
}

// HasGcpParams returns a boolean if a field has been set.
func (o *TieringExternalTargetParams) HasGcpParams() bool {
	if o != nil && !IsNil(o.GcpParams) {
		return true
	}

	return false
}

// SetGcpParams gets a reference to the given TieringGcpExternalTargetParams and assigns it to the GcpParams field.
func (o *TieringExternalTargetParams) SetGcpParams(v TieringGcpExternalTargetParams) {
	o.GcpParams = &v
}

// GetOracleParams returns the OracleParams field value if set, zero value otherwise.
func (o *TieringExternalTargetParams) GetOracleParams() TieringOracleExternalTargetParams {
	if o == nil || IsNil(o.OracleParams) {
		var ret TieringOracleExternalTargetParams
		return ret
	}
	return *o.OracleParams
}

// GetOracleParamsOk returns a tuple with the OracleParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TieringExternalTargetParams) GetOracleParamsOk() (*TieringOracleExternalTargetParams, bool) {
	if o == nil || IsNil(o.OracleParams) {
		return nil, false
	}
	return o.OracleParams, true
}

// HasOracleParams returns a boolean if a field has been set.
func (o *TieringExternalTargetParams) HasOracleParams() bool {
	if o != nil && !IsNil(o.OracleParams) {
		return true
	}

	return false
}

// SetOracleParams gets a reference to the given TieringOracleExternalTargetParams and assigns it to the OracleParams field.
func (o *TieringExternalTargetParams) SetOracleParams(v TieringOracleExternalTargetParams) {
	o.OracleParams = &v
}

// GetS3CompParams returns the S3CompParams field value if set, zero value otherwise.
func (o *TieringExternalTargetParams) GetS3CompParams() TieringS3CompExternalTargetParams {
	if o == nil || IsNil(o.S3CompParams) {
		var ret TieringS3CompExternalTargetParams
		return ret
	}
	return *o.S3CompParams
}

// GetS3CompParamsOk returns a tuple with the S3CompParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TieringExternalTargetParams) GetS3CompParamsOk() (*TieringS3CompExternalTargetParams, bool) {
	if o == nil || IsNil(o.S3CompParams) {
		return nil, false
	}
	return o.S3CompParams, true
}

// HasS3CompParams returns a boolean if a field has been set.
func (o *TieringExternalTargetParams) HasS3CompParams() bool {
	if o != nil && !IsNil(o.S3CompParams) {
		return true
	}

	return false
}

// SetS3CompParams gets a reference to the given TieringS3CompExternalTargetParams and assigns it to the S3CompParams field.
func (o *TieringExternalTargetParams) SetS3CompParams(v TieringS3CompExternalTargetParams) {
	o.S3CompParams = &v
}

func (o TieringExternalTargetParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TieringExternalTargetParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["encryptionLevel"] = o.EncryptionLevel.Get()
	toSerialize["storageType"] = o.StorageType.Get()
	if !IsNil(o.AwsParams) {
		toSerialize["awsParams"] = o.AwsParams
	}
	if !IsNil(o.AzureParams) {
		toSerialize["azureParams"] = o.AzureParams
	}
	if !IsNil(o.GcpParams) {
		toSerialize["gcpParams"] = o.GcpParams
	}
	if !IsNil(o.OracleParams) {
		toSerialize["oracleParams"] = o.OracleParams
	}
	if !IsNil(o.S3CompParams) {
		toSerialize["s3CompParams"] = o.S3CompParams
	}
	return toSerialize, nil
}

func (o *TieringExternalTargetParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"encryptionLevel",
		"storageType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTieringExternalTargetParams := _TieringExternalTargetParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTieringExternalTargetParams)

	if err != nil {
		return err
	}

	*o = TieringExternalTargetParams(varTieringExternalTargetParams)

	return err
}

type NullableTieringExternalTargetParams struct {
	value *TieringExternalTargetParams
	isSet bool
}

func (v NullableTieringExternalTargetParams) Get() *TieringExternalTargetParams {
	return v.value
}

func (v *NullableTieringExternalTargetParams) Set(val *TieringExternalTargetParams) {
	v.value = val
	v.isSet = true
}

func (v NullableTieringExternalTargetParams) IsSet() bool {
	return v.isSet
}

func (v *NullableTieringExternalTargetParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTieringExternalTargetParams(val *TieringExternalTargetParams) *NullableTieringExternalTargetParams {
	return &NullableTieringExternalTargetParams{value: val, isSet: true}
}

func (v NullableTieringExternalTargetParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTieringExternalTargetParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


