/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ChannelItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelItem{}

// ChannelItem Specifies a M365 Teams channel item.
type ChannelItem struct {
	// Specifies the email of this channel.
	ChannelEmail NullableString `json:"channelEmail,omitempty"`
	// Specifies the id of this channel.
	ChannelId NullableString `json:"channelId,omitempty"`
	// Specifies the channel name.
	ChannelName NullableString `json:"channelName,omitempty"`
	// Specifies the channel type.
	ChannelType NullableString `json:"channelType,omitempty"`
	// Specifies the Unix timestamp epoch in seconds at which this channel is created.
	CreationTimeSecs NullableInt64 `json:"creationTimeSecs,omitempty"`
	// Specifies the names of owners of this channel.
	OwnerNames []string `json:"ownerNames,omitempty"`
}

// NewChannelItem instantiates a new ChannelItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelItem() *ChannelItem {
	this := ChannelItem{}
	return &this
}

// NewChannelItemWithDefaults instantiates a new ChannelItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelItemWithDefaults() *ChannelItem {
	this := ChannelItem{}
	return &this
}

// GetChannelEmail returns the ChannelEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelItem) GetChannelEmail() string {
	if o == nil || IsNil(o.ChannelEmail.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelEmail.Get()
}

// GetChannelEmailOk returns a tuple with the ChannelEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelItem) GetChannelEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelEmail.Get(), o.ChannelEmail.IsSet()
}

// HasChannelEmail returns a boolean if a field has been set.
func (o *ChannelItem) HasChannelEmail() bool {
	if o != nil && o.ChannelEmail.IsSet() {
		return true
	}

	return false
}

// SetChannelEmail gets a reference to the given NullableString and assigns it to the ChannelEmail field.
func (o *ChannelItem) SetChannelEmail(v string) {
	o.ChannelEmail.Set(&v)
}
// SetChannelEmailNil sets the value for ChannelEmail to be an explicit nil
func (o *ChannelItem) SetChannelEmailNil() {
	o.ChannelEmail.Set(nil)
}

// UnsetChannelEmail ensures that no value is present for ChannelEmail, not even an explicit nil
func (o *ChannelItem) UnsetChannelEmail() {
	o.ChannelEmail.Unset()
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelItem) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelId.Get()
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelItem) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelId.Get(), o.ChannelId.IsSet()
}

// HasChannelId returns a boolean if a field has been set.
func (o *ChannelItem) HasChannelId() bool {
	if o != nil && o.ChannelId.IsSet() {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given NullableString and assigns it to the ChannelId field.
func (o *ChannelItem) SetChannelId(v string) {
	o.ChannelId.Set(&v)
}
// SetChannelIdNil sets the value for ChannelId to be an explicit nil
func (o *ChannelItem) SetChannelIdNil() {
	o.ChannelId.Set(nil)
}

// UnsetChannelId ensures that no value is present for ChannelId, not even an explicit nil
func (o *ChannelItem) UnsetChannelId() {
	o.ChannelId.Unset()
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelItem) GetChannelName() string {
	if o == nil || IsNil(o.ChannelName.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelName.Get()
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelItem) GetChannelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelName.Get(), o.ChannelName.IsSet()
}

// HasChannelName returns a boolean if a field has been set.
func (o *ChannelItem) HasChannelName() bool {
	if o != nil && o.ChannelName.IsSet() {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given NullableString and assigns it to the ChannelName field.
func (o *ChannelItem) SetChannelName(v string) {
	o.ChannelName.Set(&v)
}
// SetChannelNameNil sets the value for ChannelName to be an explicit nil
func (o *ChannelItem) SetChannelNameNil() {
	o.ChannelName.Set(nil)
}

// UnsetChannelName ensures that no value is present for ChannelName, not even an explicit nil
func (o *ChannelItem) UnsetChannelName() {
	o.ChannelName.Unset()
}

// GetChannelType returns the ChannelType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelItem) GetChannelType() string {
	if o == nil || IsNil(o.ChannelType.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelType.Get()
}

// GetChannelTypeOk returns a tuple with the ChannelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelItem) GetChannelTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelType.Get(), o.ChannelType.IsSet()
}

// HasChannelType returns a boolean if a field has been set.
func (o *ChannelItem) HasChannelType() bool {
	if o != nil && o.ChannelType.IsSet() {
		return true
	}

	return false
}

// SetChannelType gets a reference to the given NullableString and assigns it to the ChannelType field.
func (o *ChannelItem) SetChannelType(v string) {
	o.ChannelType.Set(&v)
}
// SetChannelTypeNil sets the value for ChannelType to be an explicit nil
func (o *ChannelItem) SetChannelTypeNil() {
	o.ChannelType.Set(nil)
}

// UnsetChannelType ensures that no value is present for ChannelType, not even an explicit nil
func (o *ChannelItem) UnsetChannelType() {
	o.ChannelType.Unset()
}

// GetCreationTimeSecs returns the CreationTimeSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelItem) GetCreationTimeSecs() int64 {
	if o == nil || IsNil(o.CreationTimeSecs.Get()) {
		var ret int64
		return ret
	}
	return *o.CreationTimeSecs.Get()
}

// GetCreationTimeSecsOk returns a tuple with the CreationTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelItem) GetCreationTimeSecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreationTimeSecs.Get(), o.CreationTimeSecs.IsSet()
}

// HasCreationTimeSecs returns a boolean if a field has been set.
func (o *ChannelItem) HasCreationTimeSecs() bool {
	if o != nil && o.CreationTimeSecs.IsSet() {
		return true
	}

	return false
}

// SetCreationTimeSecs gets a reference to the given NullableInt64 and assigns it to the CreationTimeSecs field.
func (o *ChannelItem) SetCreationTimeSecs(v int64) {
	o.CreationTimeSecs.Set(&v)
}
// SetCreationTimeSecsNil sets the value for CreationTimeSecs to be an explicit nil
func (o *ChannelItem) SetCreationTimeSecsNil() {
	o.CreationTimeSecs.Set(nil)
}

// UnsetCreationTimeSecs ensures that no value is present for CreationTimeSecs, not even an explicit nil
func (o *ChannelItem) UnsetCreationTimeSecs() {
	o.CreationTimeSecs.Unset()
}

// GetOwnerNames returns the OwnerNames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelItem) GetOwnerNames() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.OwnerNames
}

// GetOwnerNamesOk returns a tuple with the OwnerNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelItem) GetOwnerNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.OwnerNames) {
		return nil, false
	}
	return o.OwnerNames, true
}

// HasOwnerNames returns a boolean if a field has been set.
func (o *ChannelItem) HasOwnerNames() bool {
	if o != nil && !IsNil(o.OwnerNames) {
		return true
	}

	return false
}

// SetOwnerNames gets a reference to the given []string and assigns it to the OwnerNames field.
func (o *ChannelItem) SetOwnerNames(v []string) {
	o.OwnerNames = v
}

func (o ChannelItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ChannelEmail.IsSet() {
		toSerialize["channelEmail"] = o.ChannelEmail.Get()
	}
	if o.ChannelId.IsSet() {
		toSerialize["channelId"] = o.ChannelId.Get()
	}
	if o.ChannelName.IsSet() {
		toSerialize["channelName"] = o.ChannelName.Get()
	}
	if o.ChannelType.IsSet() {
		toSerialize["channelType"] = o.ChannelType.Get()
	}
	if o.CreationTimeSecs.IsSet() {
		toSerialize["creationTimeSecs"] = o.CreationTimeSecs.Get()
	}
	if o.OwnerNames != nil {
		toSerialize["ownerNames"] = o.OwnerNames
	}
	return toSerialize, nil
}

type NullableChannelItem struct {
	value *ChannelItem
	isSet bool
}

func (v NullableChannelItem) Get() *ChannelItem {
	return v.value
}

func (v *NullableChannelItem) Set(val *ChannelItem) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelItem) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelItem(val *ChannelItem) *NullableChannelItem {
	return &NullableChannelItem{value: val, isSet: true}
}

func (v NullableChannelItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


