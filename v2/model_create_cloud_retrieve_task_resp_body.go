/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CreateCloudRetrieveTaskRespBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCloudRetrieveTaskRespBody{}

// CreateCloudRetrieveTaskRespBody Specifies the response to create cloud retrieve tasks.
type CreateCloudRetrieveTaskRespBody struct {
	// Specifies the progress task id.
	ProgressTaskId NullableInt32 `json:"progressTaskId,omitempty"`
	// Specifies the cloud retrieve job Id
	RetrieveJobId NullableString `json:"retrieveJobId,omitempty"`
}

// NewCreateCloudRetrieveTaskRespBody instantiates a new CreateCloudRetrieveTaskRespBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCloudRetrieveTaskRespBody() *CreateCloudRetrieveTaskRespBody {
	this := CreateCloudRetrieveTaskRespBody{}
	return &this
}

// NewCreateCloudRetrieveTaskRespBodyWithDefaults instantiates a new CreateCloudRetrieveTaskRespBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCloudRetrieveTaskRespBodyWithDefaults() *CreateCloudRetrieveTaskRespBody {
	this := CreateCloudRetrieveTaskRespBody{}
	return &this
}

// GetProgressTaskId returns the ProgressTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCloudRetrieveTaskRespBody) GetProgressTaskId() int32 {
	if o == nil || IsNil(o.ProgressTaskId.Get()) {
		var ret int32
		return ret
	}
	return *o.ProgressTaskId.Get()
}

// GetProgressTaskIdOk returns a tuple with the ProgressTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCloudRetrieveTaskRespBody) GetProgressTaskIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProgressTaskId.Get(), o.ProgressTaskId.IsSet()
}

// HasProgressTaskId returns a boolean if a field has been set.
func (o *CreateCloudRetrieveTaskRespBody) HasProgressTaskId() bool {
	if o != nil && o.ProgressTaskId.IsSet() {
		return true
	}

	return false
}

// SetProgressTaskId gets a reference to the given NullableInt32 and assigns it to the ProgressTaskId field.
func (o *CreateCloudRetrieveTaskRespBody) SetProgressTaskId(v int32) {
	o.ProgressTaskId.Set(&v)
}
// SetProgressTaskIdNil sets the value for ProgressTaskId to be an explicit nil
func (o *CreateCloudRetrieveTaskRespBody) SetProgressTaskIdNil() {
	o.ProgressTaskId.Set(nil)
}

// UnsetProgressTaskId ensures that no value is present for ProgressTaskId, not even an explicit nil
func (o *CreateCloudRetrieveTaskRespBody) UnsetProgressTaskId() {
	o.ProgressTaskId.Unset()
}

// GetRetrieveJobId returns the RetrieveJobId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCloudRetrieveTaskRespBody) GetRetrieveJobId() string {
	if o == nil || IsNil(o.RetrieveJobId.Get()) {
		var ret string
		return ret
	}
	return *o.RetrieveJobId.Get()
}

// GetRetrieveJobIdOk returns a tuple with the RetrieveJobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCloudRetrieveTaskRespBody) GetRetrieveJobIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RetrieveJobId.Get(), o.RetrieveJobId.IsSet()
}

// HasRetrieveJobId returns a boolean if a field has been set.
func (o *CreateCloudRetrieveTaskRespBody) HasRetrieveJobId() bool {
	if o != nil && o.RetrieveJobId.IsSet() {
		return true
	}

	return false
}

// SetRetrieveJobId gets a reference to the given NullableString and assigns it to the RetrieveJobId field.
func (o *CreateCloudRetrieveTaskRespBody) SetRetrieveJobId(v string) {
	o.RetrieveJobId.Set(&v)
}
// SetRetrieveJobIdNil sets the value for RetrieveJobId to be an explicit nil
func (o *CreateCloudRetrieveTaskRespBody) SetRetrieveJobIdNil() {
	o.RetrieveJobId.Set(nil)
}

// UnsetRetrieveJobId ensures that no value is present for RetrieveJobId, not even an explicit nil
func (o *CreateCloudRetrieveTaskRespBody) UnsetRetrieveJobId() {
	o.RetrieveJobId.Unset()
}

func (o CreateCloudRetrieveTaskRespBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCloudRetrieveTaskRespBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ProgressTaskId.IsSet() {
		toSerialize["progressTaskId"] = o.ProgressTaskId.Get()
	}
	if o.RetrieveJobId.IsSet() {
		toSerialize["retrieveJobId"] = o.RetrieveJobId.Get()
	}
	return toSerialize, nil
}

type NullableCreateCloudRetrieveTaskRespBody struct {
	value *CreateCloudRetrieveTaskRespBody
	isSet bool
}

func (v NullableCreateCloudRetrieveTaskRespBody) Get() *CreateCloudRetrieveTaskRespBody {
	return v.value
}

func (v *NullableCreateCloudRetrieveTaskRespBody) Set(val *CreateCloudRetrieveTaskRespBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCloudRetrieveTaskRespBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCloudRetrieveTaskRespBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCloudRetrieveTaskRespBody(val *CreateCloudRetrieveTaskRespBody) *NullableCreateCloudRetrieveTaskRespBody {
	return &NullableCreateCloudRetrieveTaskRespBody{value: val, isSet: true}
}

func (v NullableCreateCloudRetrieveTaskRespBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCloudRetrieveTaskRespBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


