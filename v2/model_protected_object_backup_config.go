/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ProtectedObjectBackupConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProtectedObjectBackupConfig{}

// ProtectedObjectBackupConfig Specifies the backup configuration for protected object.
type ProtectedObjectBackupConfig struct {
	// Specifies whether currently executing object backup should abort if a blackout period specified by a policy starts. Available only if the selected policy has at least one blackout period. Default value is false.
	AbortInBlackouts NullableBool `json:"abortInBlackouts,omitempty"`
	// Specifies the end time in micro seconds for this Protection Group. If this is not specified, the Protection Group won't be ended.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	PolicyConfig *PolicyConfig `json:"policyConfig,omitempty"`
	// Specifies the unique id of the Protection Policy. The Policy settings will be attached with every object and will be used in backup.
	PolicyId NullableString `json:"policyId,omitempty"`
	// Specifies the priority for the objects backup.
	Priority NullableString `json:"priority,omitempty"`
	// Specifies whether object backup will be written to HDD or SSD.
	QosPolicy NullableString `json:"qosPolicy,omitempty"`
	// Specifies whether to skip Rigel for backup or not.
	SkipRigelForBackup NullableBool `json:"skipRigelForBackup,omitempty"`
	// Specifies the SLA parameters for list of objects.
	Sla []SlaRule `json:"sla,omitempty"`
	StartTime *TimeOfDay `json:"startTime,omitempty"`
	// Specifies the Storage Domain (View Box) ID where the object backup will be taken. This is not required if Cloud archive direct is benig used.
	StorageDomainId NullableInt64 `json:"storageDomainId,omitempty"`
	AwsParams *AwsObjectProtectionResponseParams `json:"awsParams,omitempty"`
	AzureParams *AzureObjectProtectionResponseParams `json:"azureParams,omitempty"`
	ElastifileParams *ElastifileObjectProtectionResponseParams `json:"elastifileParams,omitempty"`
	// Specifies the environment for current object.
	Environment NullableString `json:"environment,omitempty"`
	ExperimentalAdapterParams *ExperimentalAdapterObjectProtectionResponseParams `json:"experimentalAdapterParams,omitempty"`
	FlashbladeParams *FlashbladeObjectProtectionResponseParams `json:"flashbladeParams,omitempty"`
	GenericNasParams *GenericNasObjectProtectionResponseParams `json:"genericNasParams,omitempty"`
	GpfsParams *GpfsObjectProtectionResponseParams `json:"gpfsParams,omitempty"`
	HypervParams *HyperVObjectProtectionResponseParams `json:"hypervParams,omitempty"`
	IsilonParams *IsilonObjectProtectionResponseParams `json:"isilonParams,omitempty"`
	MssqlParams *MssqlObjectProtectionResponseParams `json:"mssqlParams,omitempty"`
	NetappParams *NetappObjectProtectionResponseParams `json:"netappParams,omitempty"`
	Office365Params *Office365ObjectProtectionResponseParams `json:"office365Params,omitempty"`
	OracleParams *OracleObjectProtectionResponseParams `json:"oracleParams,omitempty"`
	PhysicalParams *PhysicalObjectProtectionResponseParams `json:"physicalParams,omitempty"`
	SapHanaParams *SapHanaObjectProtectionResponseParams `json:"sapHanaParams,omitempty"`
	SfdcParams *SfdcObjectProtectionResponseParams `json:"sfdcParams,omitempty"`
	UdaParams *UdaObjectProtectionResponseParams `json:"udaParams,omitempty"`
	VmwareParams *VmwareObjectProtectionResponseParams `json:"vmwareParams,omitempty"`
	// Specifies the parent ID of the object which the backup configuration is applied to if this is an auto protect config.
	AutoProtectParentId NullableInt64 `json:"autoProtectParentId,omitempty"`
	// Specifies whether or not protection has been deactivated on this object.
	IsActive NullableBool `json:"isActive,omitempty"`
	// Specifies whether or not this configuration is applied to an autoprotected object rather than this specific object.
	IsAutoProtectConfig NullableBool `json:"isAutoProtectConfig,omitempty"`
	// Specifies whether or not protection has been paused on this object.
	IsPaused NullableBool `json:"isPaused,omitempty"`
}

// NewProtectedObjectBackupConfig instantiates a new ProtectedObjectBackupConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectedObjectBackupConfig() *ProtectedObjectBackupConfig {
	this := ProtectedObjectBackupConfig{}
	return &this
}

// NewProtectedObjectBackupConfigWithDefaults instantiates a new ProtectedObjectBackupConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectedObjectBackupConfigWithDefaults() *ProtectedObjectBackupConfig {
	this := ProtectedObjectBackupConfig{}
	return &this
}

// GetAbortInBlackouts returns the AbortInBlackouts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectBackupConfig) GetAbortInBlackouts() bool {
	if o == nil || IsNil(o.AbortInBlackouts.Get()) {
		var ret bool
		return ret
	}
	return *o.AbortInBlackouts.Get()
}

// GetAbortInBlackoutsOk returns a tuple with the AbortInBlackouts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectBackupConfig) GetAbortInBlackoutsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AbortInBlackouts.Get(), o.AbortInBlackouts.IsSet()
}

// HasAbortInBlackouts returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasAbortInBlackouts() bool {
	if o != nil && o.AbortInBlackouts.IsSet() {
		return true
	}

	return false
}

// SetAbortInBlackouts gets a reference to the given NullableBool and assigns it to the AbortInBlackouts field.
func (o *ProtectedObjectBackupConfig) SetAbortInBlackouts(v bool) {
	o.AbortInBlackouts.Set(&v)
}
// SetAbortInBlackoutsNil sets the value for AbortInBlackouts to be an explicit nil
func (o *ProtectedObjectBackupConfig) SetAbortInBlackoutsNil() {
	o.AbortInBlackouts.Set(nil)
}

// UnsetAbortInBlackouts ensures that no value is present for AbortInBlackouts, not even an explicit nil
func (o *ProtectedObjectBackupConfig) UnsetAbortInBlackouts() {
	o.AbortInBlackouts.Unset()
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectBackupConfig) GetEndTimeUsecs() int64 {
	if o == nil || IsNil(o.EndTimeUsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectBackupConfig) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *ProtectedObjectBackupConfig) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *ProtectedObjectBackupConfig) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *ProtectedObjectBackupConfig) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetPolicyConfig returns the PolicyConfig field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetPolicyConfig() PolicyConfig {
	if o == nil || IsNil(o.PolicyConfig) {
		var ret PolicyConfig
		return ret
	}
	return *o.PolicyConfig
}

// GetPolicyConfigOk returns a tuple with the PolicyConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetPolicyConfigOk() (*PolicyConfig, bool) {
	if o == nil || IsNil(o.PolicyConfig) {
		return nil, false
	}
	return o.PolicyConfig, true
}

// HasPolicyConfig returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasPolicyConfig() bool {
	if o != nil && !IsNil(o.PolicyConfig) {
		return true
	}

	return false
}

// SetPolicyConfig gets a reference to the given PolicyConfig and assigns it to the PolicyConfig field.
func (o *ProtectedObjectBackupConfig) SetPolicyConfig(v PolicyConfig) {
	o.PolicyConfig = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectBackupConfig) GetPolicyId() string {
	if o == nil || IsNil(o.PolicyId.Get()) {
		var ret string
		return ret
	}
	return *o.PolicyId.Get()
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectBackupConfig) GetPolicyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolicyId.Get(), o.PolicyId.IsSet()
}

// HasPolicyId returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasPolicyId() bool {
	if o != nil && o.PolicyId.IsSet() {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given NullableString and assigns it to the PolicyId field.
func (o *ProtectedObjectBackupConfig) SetPolicyId(v string) {
	o.PolicyId.Set(&v)
}
// SetPolicyIdNil sets the value for PolicyId to be an explicit nil
func (o *ProtectedObjectBackupConfig) SetPolicyIdNil() {
	o.PolicyId.Set(nil)
}

// UnsetPolicyId ensures that no value is present for PolicyId, not even an explicit nil
func (o *ProtectedObjectBackupConfig) UnsetPolicyId() {
	o.PolicyId.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectBackupConfig) GetPriority() string {
	if o == nil || IsNil(o.Priority.Get()) {
		var ret string
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectBackupConfig) GetPriorityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableString and assigns it to the Priority field.
func (o *ProtectedObjectBackupConfig) SetPriority(v string) {
	o.Priority.Set(&v)
}
// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *ProtectedObjectBackupConfig) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *ProtectedObjectBackupConfig) UnsetPriority() {
	o.Priority.Unset()
}

// GetQosPolicy returns the QosPolicy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectBackupConfig) GetQosPolicy() string {
	if o == nil || IsNil(o.QosPolicy.Get()) {
		var ret string
		return ret
	}
	return *o.QosPolicy.Get()
}

// GetQosPolicyOk returns a tuple with the QosPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectBackupConfig) GetQosPolicyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.QosPolicy.Get(), o.QosPolicy.IsSet()
}

// HasQosPolicy returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasQosPolicy() bool {
	if o != nil && o.QosPolicy.IsSet() {
		return true
	}

	return false
}

// SetQosPolicy gets a reference to the given NullableString and assigns it to the QosPolicy field.
func (o *ProtectedObjectBackupConfig) SetQosPolicy(v string) {
	o.QosPolicy.Set(&v)
}
// SetQosPolicyNil sets the value for QosPolicy to be an explicit nil
func (o *ProtectedObjectBackupConfig) SetQosPolicyNil() {
	o.QosPolicy.Set(nil)
}

// UnsetQosPolicy ensures that no value is present for QosPolicy, not even an explicit nil
func (o *ProtectedObjectBackupConfig) UnsetQosPolicy() {
	o.QosPolicy.Unset()
}

// GetSkipRigelForBackup returns the SkipRigelForBackup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectBackupConfig) GetSkipRigelForBackup() bool {
	if o == nil || IsNil(o.SkipRigelForBackup.Get()) {
		var ret bool
		return ret
	}
	return *o.SkipRigelForBackup.Get()
}

// GetSkipRigelForBackupOk returns a tuple with the SkipRigelForBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectBackupConfig) GetSkipRigelForBackupOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SkipRigelForBackup.Get(), o.SkipRigelForBackup.IsSet()
}

// HasSkipRigelForBackup returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasSkipRigelForBackup() bool {
	if o != nil && o.SkipRigelForBackup.IsSet() {
		return true
	}

	return false
}

// SetSkipRigelForBackup gets a reference to the given NullableBool and assigns it to the SkipRigelForBackup field.
func (o *ProtectedObjectBackupConfig) SetSkipRigelForBackup(v bool) {
	o.SkipRigelForBackup.Set(&v)
}
// SetSkipRigelForBackupNil sets the value for SkipRigelForBackup to be an explicit nil
func (o *ProtectedObjectBackupConfig) SetSkipRigelForBackupNil() {
	o.SkipRigelForBackup.Set(nil)
}

// UnsetSkipRigelForBackup ensures that no value is present for SkipRigelForBackup, not even an explicit nil
func (o *ProtectedObjectBackupConfig) UnsetSkipRigelForBackup() {
	o.SkipRigelForBackup.Unset()
}

// GetSla returns the Sla field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectBackupConfig) GetSla() []SlaRule {
	if o == nil {
		var ret []SlaRule
		return ret
	}
	return o.Sla
}

// GetSlaOk returns a tuple with the Sla field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectBackupConfig) GetSlaOk() ([]SlaRule, bool) {
	if o == nil || IsNil(o.Sla) {
		return nil, false
	}
	return o.Sla, true
}

// HasSla returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasSla() bool {
	if o != nil && !IsNil(o.Sla) {
		return true
	}

	return false
}

// SetSla gets a reference to the given []SlaRule and assigns it to the Sla field.
func (o *ProtectedObjectBackupConfig) SetSla(v []SlaRule) {
	o.Sla = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetStartTime() TimeOfDay {
	if o == nil || IsNil(o.StartTime) {
		var ret TimeOfDay
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetStartTimeOk() (*TimeOfDay, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given TimeOfDay and assigns it to the StartTime field.
func (o *ProtectedObjectBackupConfig) SetStartTime(v TimeOfDay) {
	o.StartTime = &v
}

// GetStorageDomainId returns the StorageDomainId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectBackupConfig) GetStorageDomainId() int64 {
	if o == nil || IsNil(o.StorageDomainId.Get()) {
		var ret int64
		return ret
	}
	return *o.StorageDomainId.Get()
}

// GetStorageDomainIdOk returns a tuple with the StorageDomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectBackupConfig) GetStorageDomainIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageDomainId.Get(), o.StorageDomainId.IsSet()
}

// HasStorageDomainId returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasStorageDomainId() bool {
	if o != nil && o.StorageDomainId.IsSet() {
		return true
	}

	return false
}

// SetStorageDomainId gets a reference to the given NullableInt64 and assigns it to the StorageDomainId field.
func (o *ProtectedObjectBackupConfig) SetStorageDomainId(v int64) {
	o.StorageDomainId.Set(&v)
}
// SetStorageDomainIdNil sets the value for StorageDomainId to be an explicit nil
func (o *ProtectedObjectBackupConfig) SetStorageDomainIdNil() {
	o.StorageDomainId.Set(nil)
}

// UnsetStorageDomainId ensures that no value is present for StorageDomainId, not even an explicit nil
func (o *ProtectedObjectBackupConfig) UnsetStorageDomainId() {
	o.StorageDomainId.Unset()
}

// GetAwsParams returns the AwsParams field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetAwsParams() AwsObjectProtectionResponseParams {
	if o == nil || IsNil(o.AwsParams) {
		var ret AwsObjectProtectionResponseParams
		return ret
	}
	return *o.AwsParams
}

// GetAwsParamsOk returns a tuple with the AwsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetAwsParamsOk() (*AwsObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.AwsParams) {
		return nil, false
	}
	return o.AwsParams, true
}

// HasAwsParams returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasAwsParams() bool {
	if o != nil && !IsNil(o.AwsParams) {
		return true
	}

	return false
}

// SetAwsParams gets a reference to the given AwsObjectProtectionResponseParams and assigns it to the AwsParams field.
func (o *ProtectedObjectBackupConfig) SetAwsParams(v AwsObjectProtectionResponseParams) {
	o.AwsParams = &v
}

// GetAzureParams returns the AzureParams field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetAzureParams() AzureObjectProtectionResponseParams {
	if o == nil || IsNil(o.AzureParams) {
		var ret AzureObjectProtectionResponseParams
		return ret
	}
	return *o.AzureParams
}

// GetAzureParamsOk returns a tuple with the AzureParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetAzureParamsOk() (*AzureObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.AzureParams) {
		return nil, false
	}
	return o.AzureParams, true
}

// HasAzureParams returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasAzureParams() bool {
	if o != nil && !IsNil(o.AzureParams) {
		return true
	}

	return false
}

// SetAzureParams gets a reference to the given AzureObjectProtectionResponseParams and assigns it to the AzureParams field.
func (o *ProtectedObjectBackupConfig) SetAzureParams(v AzureObjectProtectionResponseParams) {
	o.AzureParams = &v
}

// GetElastifileParams returns the ElastifileParams field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetElastifileParams() ElastifileObjectProtectionResponseParams {
	if o == nil || IsNil(o.ElastifileParams) {
		var ret ElastifileObjectProtectionResponseParams
		return ret
	}
	return *o.ElastifileParams
}

// GetElastifileParamsOk returns a tuple with the ElastifileParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetElastifileParamsOk() (*ElastifileObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.ElastifileParams) {
		return nil, false
	}
	return o.ElastifileParams, true
}

// HasElastifileParams returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasElastifileParams() bool {
	if o != nil && !IsNil(o.ElastifileParams) {
		return true
	}

	return false
}

// SetElastifileParams gets a reference to the given ElastifileObjectProtectionResponseParams and assigns it to the ElastifileParams field.
func (o *ProtectedObjectBackupConfig) SetElastifileParams(v ElastifileObjectProtectionResponseParams) {
	o.ElastifileParams = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectBackupConfig) GetEnvironment() string {
	if o == nil || IsNil(o.Environment.Get()) {
		var ret string
		return ret
	}
	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectBackupConfig) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// HasEnvironment returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasEnvironment() bool {
	if o != nil && o.Environment.IsSet() {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given NullableString and assigns it to the Environment field.
func (o *ProtectedObjectBackupConfig) SetEnvironment(v string) {
	o.Environment.Set(&v)
}
// SetEnvironmentNil sets the value for Environment to be an explicit nil
func (o *ProtectedObjectBackupConfig) SetEnvironmentNil() {
	o.Environment.Set(nil)
}

// UnsetEnvironment ensures that no value is present for Environment, not even an explicit nil
func (o *ProtectedObjectBackupConfig) UnsetEnvironment() {
	o.Environment.Unset()
}

// GetExperimentalAdapterParams returns the ExperimentalAdapterParams field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetExperimentalAdapterParams() ExperimentalAdapterObjectProtectionResponseParams {
	if o == nil || IsNil(o.ExperimentalAdapterParams) {
		var ret ExperimentalAdapterObjectProtectionResponseParams
		return ret
	}
	return *o.ExperimentalAdapterParams
}

// GetExperimentalAdapterParamsOk returns a tuple with the ExperimentalAdapterParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetExperimentalAdapterParamsOk() (*ExperimentalAdapterObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.ExperimentalAdapterParams) {
		return nil, false
	}
	return o.ExperimentalAdapterParams, true
}

// HasExperimentalAdapterParams returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasExperimentalAdapterParams() bool {
	if o != nil && !IsNil(o.ExperimentalAdapterParams) {
		return true
	}

	return false
}

// SetExperimentalAdapterParams gets a reference to the given ExperimentalAdapterObjectProtectionResponseParams and assigns it to the ExperimentalAdapterParams field.
func (o *ProtectedObjectBackupConfig) SetExperimentalAdapterParams(v ExperimentalAdapterObjectProtectionResponseParams) {
	o.ExperimentalAdapterParams = &v
}

// GetFlashbladeParams returns the FlashbladeParams field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetFlashbladeParams() FlashbladeObjectProtectionResponseParams {
	if o == nil || IsNil(o.FlashbladeParams) {
		var ret FlashbladeObjectProtectionResponseParams
		return ret
	}
	return *o.FlashbladeParams
}

// GetFlashbladeParamsOk returns a tuple with the FlashbladeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetFlashbladeParamsOk() (*FlashbladeObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.FlashbladeParams) {
		return nil, false
	}
	return o.FlashbladeParams, true
}

// HasFlashbladeParams returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasFlashbladeParams() bool {
	if o != nil && !IsNil(o.FlashbladeParams) {
		return true
	}

	return false
}

// SetFlashbladeParams gets a reference to the given FlashbladeObjectProtectionResponseParams and assigns it to the FlashbladeParams field.
func (o *ProtectedObjectBackupConfig) SetFlashbladeParams(v FlashbladeObjectProtectionResponseParams) {
	o.FlashbladeParams = &v
}

// GetGenericNasParams returns the GenericNasParams field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetGenericNasParams() GenericNasObjectProtectionResponseParams {
	if o == nil || IsNil(o.GenericNasParams) {
		var ret GenericNasObjectProtectionResponseParams
		return ret
	}
	return *o.GenericNasParams
}

// GetGenericNasParamsOk returns a tuple with the GenericNasParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetGenericNasParamsOk() (*GenericNasObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.GenericNasParams) {
		return nil, false
	}
	return o.GenericNasParams, true
}

// HasGenericNasParams returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasGenericNasParams() bool {
	if o != nil && !IsNil(o.GenericNasParams) {
		return true
	}

	return false
}

// SetGenericNasParams gets a reference to the given GenericNasObjectProtectionResponseParams and assigns it to the GenericNasParams field.
func (o *ProtectedObjectBackupConfig) SetGenericNasParams(v GenericNasObjectProtectionResponseParams) {
	o.GenericNasParams = &v
}

// GetGpfsParams returns the GpfsParams field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetGpfsParams() GpfsObjectProtectionResponseParams {
	if o == nil || IsNil(o.GpfsParams) {
		var ret GpfsObjectProtectionResponseParams
		return ret
	}
	return *o.GpfsParams
}

// GetGpfsParamsOk returns a tuple with the GpfsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetGpfsParamsOk() (*GpfsObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.GpfsParams) {
		return nil, false
	}
	return o.GpfsParams, true
}

// HasGpfsParams returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasGpfsParams() bool {
	if o != nil && !IsNil(o.GpfsParams) {
		return true
	}

	return false
}

// SetGpfsParams gets a reference to the given GpfsObjectProtectionResponseParams and assigns it to the GpfsParams field.
func (o *ProtectedObjectBackupConfig) SetGpfsParams(v GpfsObjectProtectionResponseParams) {
	o.GpfsParams = &v
}

// GetHypervParams returns the HypervParams field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetHypervParams() HyperVObjectProtectionResponseParams {
	if o == nil || IsNil(o.HypervParams) {
		var ret HyperVObjectProtectionResponseParams
		return ret
	}
	return *o.HypervParams
}

// GetHypervParamsOk returns a tuple with the HypervParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetHypervParamsOk() (*HyperVObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.HypervParams) {
		return nil, false
	}
	return o.HypervParams, true
}

// HasHypervParams returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasHypervParams() bool {
	if o != nil && !IsNil(o.HypervParams) {
		return true
	}

	return false
}

// SetHypervParams gets a reference to the given HyperVObjectProtectionResponseParams and assigns it to the HypervParams field.
func (o *ProtectedObjectBackupConfig) SetHypervParams(v HyperVObjectProtectionResponseParams) {
	o.HypervParams = &v
}

// GetIsilonParams returns the IsilonParams field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetIsilonParams() IsilonObjectProtectionResponseParams {
	if o == nil || IsNil(o.IsilonParams) {
		var ret IsilonObjectProtectionResponseParams
		return ret
	}
	return *o.IsilonParams
}

// GetIsilonParamsOk returns a tuple with the IsilonParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetIsilonParamsOk() (*IsilonObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.IsilonParams) {
		return nil, false
	}
	return o.IsilonParams, true
}

// HasIsilonParams returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasIsilonParams() bool {
	if o != nil && !IsNil(o.IsilonParams) {
		return true
	}

	return false
}

// SetIsilonParams gets a reference to the given IsilonObjectProtectionResponseParams and assigns it to the IsilonParams field.
func (o *ProtectedObjectBackupConfig) SetIsilonParams(v IsilonObjectProtectionResponseParams) {
	o.IsilonParams = &v
}

// GetMssqlParams returns the MssqlParams field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetMssqlParams() MssqlObjectProtectionResponseParams {
	if o == nil || IsNil(o.MssqlParams) {
		var ret MssqlObjectProtectionResponseParams
		return ret
	}
	return *o.MssqlParams
}

// GetMssqlParamsOk returns a tuple with the MssqlParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetMssqlParamsOk() (*MssqlObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.MssqlParams) {
		return nil, false
	}
	return o.MssqlParams, true
}

// HasMssqlParams returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasMssqlParams() bool {
	if o != nil && !IsNil(o.MssqlParams) {
		return true
	}

	return false
}

// SetMssqlParams gets a reference to the given MssqlObjectProtectionResponseParams and assigns it to the MssqlParams field.
func (o *ProtectedObjectBackupConfig) SetMssqlParams(v MssqlObjectProtectionResponseParams) {
	o.MssqlParams = &v
}

// GetNetappParams returns the NetappParams field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetNetappParams() NetappObjectProtectionResponseParams {
	if o == nil || IsNil(o.NetappParams) {
		var ret NetappObjectProtectionResponseParams
		return ret
	}
	return *o.NetappParams
}

// GetNetappParamsOk returns a tuple with the NetappParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetNetappParamsOk() (*NetappObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.NetappParams) {
		return nil, false
	}
	return o.NetappParams, true
}

// HasNetappParams returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasNetappParams() bool {
	if o != nil && !IsNil(o.NetappParams) {
		return true
	}

	return false
}

// SetNetappParams gets a reference to the given NetappObjectProtectionResponseParams and assigns it to the NetappParams field.
func (o *ProtectedObjectBackupConfig) SetNetappParams(v NetappObjectProtectionResponseParams) {
	o.NetappParams = &v
}

// GetOffice365Params returns the Office365Params field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetOffice365Params() Office365ObjectProtectionResponseParams {
	if o == nil || IsNil(o.Office365Params) {
		var ret Office365ObjectProtectionResponseParams
		return ret
	}
	return *o.Office365Params
}

// GetOffice365ParamsOk returns a tuple with the Office365Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetOffice365ParamsOk() (*Office365ObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.Office365Params) {
		return nil, false
	}
	return o.Office365Params, true
}

// HasOffice365Params returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasOffice365Params() bool {
	if o != nil && !IsNil(o.Office365Params) {
		return true
	}

	return false
}

// SetOffice365Params gets a reference to the given Office365ObjectProtectionResponseParams and assigns it to the Office365Params field.
func (o *ProtectedObjectBackupConfig) SetOffice365Params(v Office365ObjectProtectionResponseParams) {
	o.Office365Params = &v
}

// GetOracleParams returns the OracleParams field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetOracleParams() OracleObjectProtectionResponseParams {
	if o == nil || IsNil(o.OracleParams) {
		var ret OracleObjectProtectionResponseParams
		return ret
	}
	return *o.OracleParams
}

// GetOracleParamsOk returns a tuple with the OracleParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetOracleParamsOk() (*OracleObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.OracleParams) {
		return nil, false
	}
	return o.OracleParams, true
}

// HasOracleParams returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasOracleParams() bool {
	if o != nil && !IsNil(o.OracleParams) {
		return true
	}

	return false
}

// SetOracleParams gets a reference to the given OracleObjectProtectionResponseParams and assigns it to the OracleParams field.
func (o *ProtectedObjectBackupConfig) SetOracleParams(v OracleObjectProtectionResponseParams) {
	o.OracleParams = &v
}

// GetPhysicalParams returns the PhysicalParams field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetPhysicalParams() PhysicalObjectProtectionResponseParams {
	if o == nil || IsNil(o.PhysicalParams) {
		var ret PhysicalObjectProtectionResponseParams
		return ret
	}
	return *o.PhysicalParams
}

// GetPhysicalParamsOk returns a tuple with the PhysicalParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetPhysicalParamsOk() (*PhysicalObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.PhysicalParams) {
		return nil, false
	}
	return o.PhysicalParams, true
}

// HasPhysicalParams returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasPhysicalParams() bool {
	if o != nil && !IsNil(o.PhysicalParams) {
		return true
	}

	return false
}

// SetPhysicalParams gets a reference to the given PhysicalObjectProtectionResponseParams and assigns it to the PhysicalParams field.
func (o *ProtectedObjectBackupConfig) SetPhysicalParams(v PhysicalObjectProtectionResponseParams) {
	o.PhysicalParams = &v
}

// GetSapHanaParams returns the SapHanaParams field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetSapHanaParams() SapHanaObjectProtectionResponseParams {
	if o == nil || IsNil(o.SapHanaParams) {
		var ret SapHanaObjectProtectionResponseParams
		return ret
	}
	return *o.SapHanaParams
}

// GetSapHanaParamsOk returns a tuple with the SapHanaParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetSapHanaParamsOk() (*SapHanaObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.SapHanaParams) {
		return nil, false
	}
	return o.SapHanaParams, true
}

// HasSapHanaParams returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasSapHanaParams() bool {
	if o != nil && !IsNil(o.SapHanaParams) {
		return true
	}

	return false
}

// SetSapHanaParams gets a reference to the given SapHanaObjectProtectionResponseParams and assigns it to the SapHanaParams field.
func (o *ProtectedObjectBackupConfig) SetSapHanaParams(v SapHanaObjectProtectionResponseParams) {
	o.SapHanaParams = &v
}

// GetSfdcParams returns the SfdcParams field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetSfdcParams() SfdcObjectProtectionResponseParams {
	if o == nil || IsNil(o.SfdcParams) {
		var ret SfdcObjectProtectionResponseParams
		return ret
	}
	return *o.SfdcParams
}

// GetSfdcParamsOk returns a tuple with the SfdcParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetSfdcParamsOk() (*SfdcObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.SfdcParams) {
		return nil, false
	}
	return o.SfdcParams, true
}

// HasSfdcParams returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasSfdcParams() bool {
	if o != nil && !IsNil(o.SfdcParams) {
		return true
	}

	return false
}

// SetSfdcParams gets a reference to the given SfdcObjectProtectionResponseParams and assigns it to the SfdcParams field.
func (o *ProtectedObjectBackupConfig) SetSfdcParams(v SfdcObjectProtectionResponseParams) {
	o.SfdcParams = &v
}

// GetUdaParams returns the UdaParams field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetUdaParams() UdaObjectProtectionResponseParams {
	if o == nil || IsNil(o.UdaParams) {
		var ret UdaObjectProtectionResponseParams
		return ret
	}
	return *o.UdaParams
}

// GetUdaParamsOk returns a tuple with the UdaParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetUdaParamsOk() (*UdaObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.UdaParams) {
		return nil, false
	}
	return o.UdaParams, true
}

// HasUdaParams returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasUdaParams() bool {
	if o != nil && !IsNil(o.UdaParams) {
		return true
	}

	return false
}

// SetUdaParams gets a reference to the given UdaObjectProtectionResponseParams and assigns it to the UdaParams field.
func (o *ProtectedObjectBackupConfig) SetUdaParams(v UdaObjectProtectionResponseParams) {
	o.UdaParams = &v
}

// GetVmwareParams returns the VmwareParams field value if set, zero value otherwise.
func (o *ProtectedObjectBackupConfig) GetVmwareParams() VmwareObjectProtectionResponseParams {
	if o == nil || IsNil(o.VmwareParams) {
		var ret VmwareObjectProtectionResponseParams
		return ret
	}
	return *o.VmwareParams
}

// GetVmwareParamsOk returns a tuple with the VmwareParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectBackupConfig) GetVmwareParamsOk() (*VmwareObjectProtectionResponseParams, bool) {
	if o == nil || IsNil(o.VmwareParams) {
		return nil, false
	}
	return o.VmwareParams, true
}

// HasVmwareParams returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasVmwareParams() bool {
	if o != nil && !IsNil(o.VmwareParams) {
		return true
	}

	return false
}

// SetVmwareParams gets a reference to the given VmwareObjectProtectionResponseParams and assigns it to the VmwareParams field.
func (o *ProtectedObjectBackupConfig) SetVmwareParams(v VmwareObjectProtectionResponseParams) {
	o.VmwareParams = &v
}

// GetAutoProtectParentId returns the AutoProtectParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectBackupConfig) GetAutoProtectParentId() int64 {
	if o == nil || IsNil(o.AutoProtectParentId.Get()) {
		var ret int64
		return ret
	}
	return *o.AutoProtectParentId.Get()
}

// GetAutoProtectParentIdOk returns a tuple with the AutoProtectParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectBackupConfig) GetAutoProtectParentIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoProtectParentId.Get(), o.AutoProtectParentId.IsSet()
}

// HasAutoProtectParentId returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasAutoProtectParentId() bool {
	if o != nil && o.AutoProtectParentId.IsSet() {
		return true
	}

	return false
}

// SetAutoProtectParentId gets a reference to the given NullableInt64 and assigns it to the AutoProtectParentId field.
func (o *ProtectedObjectBackupConfig) SetAutoProtectParentId(v int64) {
	o.AutoProtectParentId.Set(&v)
}
// SetAutoProtectParentIdNil sets the value for AutoProtectParentId to be an explicit nil
func (o *ProtectedObjectBackupConfig) SetAutoProtectParentIdNil() {
	o.AutoProtectParentId.Set(nil)
}

// UnsetAutoProtectParentId ensures that no value is present for AutoProtectParentId, not even an explicit nil
func (o *ProtectedObjectBackupConfig) UnsetAutoProtectParentId() {
	o.AutoProtectParentId.Unset()
}

// GetIsActive returns the IsActive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectBackupConfig) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive.Get()) {
		var ret bool
		return ret
	}
	return *o.IsActive.Get()
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectBackupConfig) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsActive.Get(), o.IsActive.IsSet()
}

// HasIsActive returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasIsActive() bool {
	if o != nil && o.IsActive.IsSet() {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given NullableBool and assigns it to the IsActive field.
func (o *ProtectedObjectBackupConfig) SetIsActive(v bool) {
	o.IsActive.Set(&v)
}
// SetIsActiveNil sets the value for IsActive to be an explicit nil
func (o *ProtectedObjectBackupConfig) SetIsActiveNil() {
	o.IsActive.Set(nil)
}

// UnsetIsActive ensures that no value is present for IsActive, not even an explicit nil
func (o *ProtectedObjectBackupConfig) UnsetIsActive() {
	o.IsActive.Unset()
}

// GetIsAutoProtectConfig returns the IsAutoProtectConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectBackupConfig) GetIsAutoProtectConfig() bool {
	if o == nil || IsNil(o.IsAutoProtectConfig.Get()) {
		var ret bool
		return ret
	}
	return *o.IsAutoProtectConfig.Get()
}

// GetIsAutoProtectConfigOk returns a tuple with the IsAutoProtectConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectBackupConfig) GetIsAutoProtectConfigOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsAutoProtectConfig.Get(), o.IsAutoProtectConfig.IsSet()
}

// HasIsAutoProtectConfig returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasIsAutoProtectConfig() bool {
	if o != nil && o.IsAutoProtectConfig.IsSet() {
		return true
	}

	return false
}

// SetIsAutoProtectConfig gets a reference to the given NullableBool and assigns it to the IsAutoProtectConfig field.
func (o *ProtectedObjectBackupConfig) SetIsAutoProtectConfig(v bool) {
	o.IsAutoProtectConfig.Set(&v)
}
// SetIsAutoProtectConfigNil sets the value for IsAutoProtectConfig to be an explicit nil
func (o *ProtectedObjectBackupConfig) SetIsAutoProtectConfigNil() {
	o.IsAutoProtectConfig.Set(nil)
}

// UnsetIsAutoProtectConfig ensures that no value is present for IsAutoProtectConfig, not even an explicit nil
func (o *ProtectedObjectBackupConfig) UnsetIsAutoProtectConfig() {
	o.IsAutoProtectConfig.Unset()
}

// GetIsPaused returns the IsPaused field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectBackupConfig) GetIsPaused() bool {
	if o == nil || IsNil(o.IsPaused.Get()) {
		var ret bool
		return ret
	}
	return *o.IsPaused.Get()
}

// GetIsPausedOk returns a tuple with the IsPaused field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectBackupConfig) GetIsPausedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsPaused.Get(), o.IsPaused.IsSet()
}

// HasIsPaused returns a boolean if a field has been set.
func (o *ProtectedObjectBackupConfig) HasIsPaused() bool {
	if o != nil && o.IsPaused.IsSet() {
		return true
	}

	return false
}

// SetIsPaused gets a reference to the given NullableBool and assigns it to the IsPaused field.
func (o *ProtectedObjectBackupConfig) SetIsPaused(v bool) {
	o.IsPaused.Set(&v)
}
// SetIsPausedNil sets the value for IsPaused to be an explicit nil
func (o *ProtectedObjectBackupConfig) SetIsPausedNil() {
	o.IsPaused.Set(nil)
}

// UnsetIsPaused ensures that no value is present for IsPaused, not even an explicit nil
func (o *ProtectedObjectBackupConfig) UnsetIsPaused() {
	o.IsPaused.Unset()
}

func (o ProtectedObjectBackupConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProtectedObjectBackupConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AbortInBlackouts.IsSet() {
		toSerialize["abortInBlackouts"] = o.AbortInBlackouts.Get()
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if !IsNil(o.PolicyConfig) {
		toSerialize["policyConfig"] = o.PolicyConfig
	}
	if o.PolicyId.IsSet() {
		toSerialize["policyId"] = o.PolicyId.Get()
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	if o.QosPolicy.IsSet() {
		toSerialize["qosPolicy"] = o.QosPolicy.Get()
	}
	if o.SkipRigelForBackup.IsSet() {
		toSerialize["skipRigelForBackup"] = o.SkipRigelForBackup.Get()
	}
	if o.Sla != nil {
		toSerialize["sla"] = o.Sla
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if o.StorageDomainId.IsSet() {
		toSerialize["storageDomainId"] = o.StorageDomainId.Get()
	}
	if !IsNil(o.AwsParams) {
		toSerialize["awsParams"] = o.AwsParams
	}
	if !IsNil(o.AzureParams) {
		toSerialize["azureParams"] = o.AzureParams
	}
	if !IsNil(o.ElastifileParams) {
		toSerialize["elastifileParams"] = o.ElastifileParams
	}
	if o.Environment.IsSet() {
		toSerialize["environment"] = o.Environment.Get()
	}
	if !IsNil(o.ExperimentalAdapterParams) {
		toSerialize["experimentalAdapterParams"] = o.ExperimentalAdapterParams
	}
	if !IsNil(o.FlashbladeParams) {
		toSerialize["flashbladeParams"] = o.FlashbladeParams
	}
	if !IsNil(o.GenericNasParams) {
		toSerialize["genericNasParams"] = o.GenericNasParams
	}
	if !IsNil(o.GpfsParams) {
		toSerialize["gpfsParams"] = o.GpfsParams
	}
	if !IsNil(o.HypervParams) {
		toSerialize["hypervParams"] = o.HypervParams
	}
	if !IsNil(o.IsilonParams) {
		toSerialize["isilonParams"] = o.IsilonParams
	}
	if !IsNil(o.MssqlParams) {
		toSerialize["mssqlParams"] = o.MssqlParams
	}
	if !IsNil(o.NetappParams) {
		toSerialize["netappParams"] = o.NetappParams
	}
	if !IsNil(o.Office365Params) {
		toSerialize["office365Params"] = o.Office365Params
	}
	if !IsNil(o.OracleParams) {
		toSerialize["oracleParams"] = o.OracleParams
	}
	if !IsNil(o.PhysicalParams) {
		toSerialize["physicalParams"] = o.PhysicalParams
	}
	if !IsNil(o.SapHanaParams) {
		toSerialize["sapHanaParams"] = o.SapHanaParams
	}
	if !IsNil(o.SfdcParams) {
		toSerialize["sfdcParams"] = o.SfdcParams
	}
	if !IsNil(o.UdaParams) {
		toSerialize["udaParams"] = o.UdaParams
	}
	if !IsNil(o.VmwareParams) {
		toSerialize["vmwareParams"] = o.VmwareParams
	}
	if o.AutoProtectParentId.IsSet() {
		toSerialize["autoProtectParentId"] = o.AutoProtectParentId.Get()
	}
	if o.IsActive.IsSet() {
		toSerialize["isActive"] = o.IsActive.Get()
	}
	if o.IsAutoProtectConfig.IsSet() {
		toSerialize["isAutoProtectConfig"] = o.IsAutoProtectConfig.Get()
	}
	if o.IsPaused.IsSet() {
		toSerialize["isPaused"] = o.IsPaused.Get()
	}
	return toSerialize, nil
}

type NullableProtectedObjectBackupConfig struct {
	value *ProtectedObjectBackupConfig
	isSet bool
}

func (v NullableProtectedObjectBackupConfig) Get() *ProtectedObjectBackupConfig {
	return v.value
}

func (v *NullableProtectedObjectBackupConfig) Set(val *ProtectedObjectBackupConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectedObjectBackupConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectedObjectBackupConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectedObjectBackupConfig(val *ProtectedObjectBackupConfig) *NullableProtectedObjectBackupConfig {
	return &NullableProtectedObjectBackupConfig{value: val, isSet: true}
}

func (v NullableProtectedObjectBackupConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectedObjectBackupConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


