/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the McmIBMStorageProtectClaimResponseParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &McmIBMStorageProtectClaimResponseParams{}

// McmIBMStorageProtectClaimResponseParams Specifies the response of claiming an IBM storage protect cluster to Helios.
type McmIBMStorageProtectClaimResponseParams struct {
	// Specifies the CA chain that is used to sign the cluster certificate.
	ClusterCaChain NullableString `json:"clusterCaChain,omitempty"`
	// Specifies the Cluster certificate.
	ClusterCertificate NullableString `json:"clusterCertificate,omitempty"`
	// Specifies the cluster ID.
	ClusterId NullableInt64 `json:"clusterId,omitempty"`
	// Specifies the cluster incarnation ID.
	ClusterIncarnationId NullableInt64 `json:"clusterIncarnationId,omitempty"`
	// Specifies the cluster name.
	ClusterName NullableString `json:"clusterName,omitempty"`
	// Specifies the Cluster private key.
	ClusterPrivateKey NullableString `json:"clusterPrivateKey,omitempty"`
	// Specifies the Helios certificate that can be used to authenticate api calls made from Helios to cluster.
	HeliosCertificate NullableString `json:"heliosCertificate,omitempty"`
	// Specifies the passphrase (if used) to encrypt the cluster private key.
	Passphrase NullableString `json:"passphrase,omitempty"`
	// Specifies the Salesforce account ID used to claim the cluster.
	SfAccountId NullableString `json:"sfAccountId,omitempty"`
}

// NewMcmIBMStorageProtectClaimResponseParams instantiates a new McmIBMStorageProtectClaimResponseParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcmIBMStorageProtectClaimResponseParams() *McmIBMStorageProtectClaimResponseParams {
	this := McmIBMStorageProtectClaimResponseParams{}
	return &this
}

// NewMcmIBMStorageProtectClaimResponseParamsWithDefaults instantiates a new McmIBMStorageProtectClaimResponseParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcmIBMStorageProtectClaimResponseParamsWithDefaults() *McmIBMStorageProtectClaimResponseParams {
	this := McmIBMStorageProtectClaimResponseParams{}
	return &this
}

// GetClusterCaChain returns the ClusterCaChain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmIBMStorageProtectClaimResponseParams) GetClusterCaChain() string {
	if o == nil || IsNil(o.ClusterCaChain.Get()) {
		var ret string
		return ret
	}
	return *o.ClusterCaChain.Get()
}

// GetClusterCaChainOk returns a tuple with the ClusterCaChain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmIBMStorageProtectClaimResponseParams) GetClusterCaChainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterCaChain.Get(), o.ClusterCaChain.IsSet()
}

// HasClusterCaChain returns a boolean if a field has been set.
func (o *McmIBMStorageProtectClaimResponseParams) HasClusterCaChain() bool {
	if o != nil && o.ClusterCaChain.IsSet() {
		return true
	}

	return false
}

// SetClusterCaChain gets a reference to the given NullableString and assigns it to the ClusterCaChain field.
func (o *McmIBMStorageProtectClaimResponseParams) SetClusterCaChain(v string) {
	o.ClusterCaChain.Set(&v)
}
// SetClusterCaChainNil sets the value for ClusterCaChain to be an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) SetClusterCaChainNil() {
	o.ClusterCaChain.Set(nil)
}

// UnsetClusterCaChain ensures that no value is present for ClusterCaChain, not even an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) UnsetClusterCaChain() {
	o.ClusterCaChain.Unset()
}

// GetClusterCertificate returns the ClusterCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmIBMStorageProtectClaimResponseParams) GetClusterCertificate() string {
	if o == nil || IsNil(o.ClusterCertificate.Get()) {
		var ret string
		return ret
	}
	return *o.ClusterCertificate.Get()
}

// GetClusterCertificateOk returns a tuple with the ClusterCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmIBMStorageProtectClaimResponseParams) GetClusterCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterCertificate.Get(), o.ClusterCertificate.IsSet()
}

// HasClusterCertificate returns a boolean if a field has been set.
func (o *McmIBMStorageProtectClaimResponseParams) HasClusterCertificate() bool {
	if o != nil && o.ClusterCertificate.IsSet() {
		return true
	}

	return false
}

// SetClusterCertificate gets a reference to the given NullableString and assigns it to the ClusterCertificate field.
func (o *McmIBMStorageProtectClaimResponseParams) SetClusterCertificate(v string) {
	o.ClusterCertificate.Set(&v)
}
// SetClusterCertificateNil sets the value for ClusterCertificate to be an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) SetClusterCertificateNil() {
	o.ClusterCertificate.Set(nil)
}

// UnsetClusterCertificate ensures that no value is present for ClusterCertificate, not even an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) UnsetClusterCertificate() {
	o.ClusterCertificate.Unset()
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmIBMStorageProtectClaimResponseParams) GetClusterId() int64 {
	if o == nil || IsNil(o.ClusterId.Get()) {
		var ret int64
		return ret
	}
	return *o.ClusterId.Get()
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmIBMStorageProtectClaimResponseParams) GetClusterIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterId.Get(), o.ClusterId.IsSet()
}

// HasClusterId returns a boolean if a field has been set.
func (o *McmIBMStorageProtectClaimResponseParams) HasClusterId() bool {
	if o != nil && o.ClusterId.IsSet() {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given NullableInt64 and assigns it to the ClusterId field.
func (o *McmIBMStorageProtectClaimResponseParams) SetClusterId(v int64) {
	o.ClusterId.Set(&v)
}
// SetClusterIdNil sets the value for ClusterId to be an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) SetClusterIdNil() {
	o.ClusterId.Set(nil)
}

// UnsetClusterId ensures that no value is present for ClusterId, not even an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) UnsetClusterId() {
	o.ClusterId.Unset()
}

// GetClusterIncarnationId returns the ClusterIncarnationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmIBMStorageProtectClaimResponseParams) GetClusterIncarnationId() int64 {
	if o == nil || IsNil(o.ClusterIncarnationId.Get()) {
		var ret int64
		return ret
	}
	return *o.ClusterIncarnationId.Get()
}

// GetClusterIncarnationIdOk returns a tuple with the ClusterIncarnationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmIBMStorageProtectClaimResponseParams) GetClusterIncarnationIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterIncarnationId.Get(), o.ClusterIncarnationId.IsSet()
}

// HasClusterIncarnationId returns a boolean if a field has been set.
func (o *McmIBMStorageProtectClaimResponseParams) HasClusterIncarnationId() bool {
	if o != nil && o.ClusterIncarnationId.IsSet() {
		return true
	}

	return false
}

// SetClusterIncarnationId gets a reference to the given NullableInt64 and assigns it to the ClusterIncarnationId field.
func (o *McmIBMStorageProtectClaimResponseParams) SetClusterIncarnationId(v int64) {
	o.ClusterIncarnationId.Set(&v)
}
// SetClusterIncarnationIdNil sets the value for ClusterIncarnationId to be an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) SetClusterIncarnationIdNil() {
	o.ClusterIncarnationId.Set(nil)
}

// UnsetClusterIncarnationId ensures that no value is present for ClusterIncarnationId, not even an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) UnsetClusterIncarnationId() {
	o.ClusterIncarnationId.Unset()
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmIBMStorageProtectClaimResponseParams) GetClusterName() string {
	if o == nil || IsNil(o.ClusterName.Get()) {
		var ret string
		return ret
	}
	return *o.ClusterName.Get()
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmIBMStorageProtectClaimResponseParams) GetClusterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterName.Get(), o.ClusterName.IsSet()
}

// HasClusterName returns a boolean if a field has been set.
func (o *McmIBMStorageProtectClaimResponseParams) HasClusterName() bool {
	if o != nil && o.ClusterName.IsSet() {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given NullableString and assigns it to the ClusterName field.
func (o *McmIBMStorageProtectClaimResponseParams) SetClusterName(v string) {
	o.ClusterName.Set(&v)
}
// SetClusterNameNil sets the value for ClusterName to be an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) SetClusterNameNil() {
	o.ClusterName.Set(nil)
}

// UnsetClusterName ensures that no value is present for ClusterName, not even an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) UnsetClusterName() {
	o.ClusterName.Unset()
}

// GetClusterPrivateKey returns the ClusterPrivateKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmIBMStorageProtectClaimResponseParams) GetClusterPrivateKey() string {
	if o == nil || IsNil(o.ClusterPrivateKey.Get()) {
		var ret string
		return ret
	}
	return *o.ClusterPrivateKey.Get()
}

// GetClusterPrivateKeyOk returns a tuple with the ClusterPrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmIBMStorageProtectClaimResponseParams) GetClusterPrivateKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterPrivateKey.Get(), o.ClusterPrivateKey.IsSet()
}

// HasClusterPrivateKey returns a boolean if a field has been set.
func (o *McmIBMStorageProtectClaimResponseParams) HasClusterPrivateKey() bool {
	if o != nil && o.ClusterPrivateKey.IsSet() {
		return true
	}

	return false
}

// SetClusterPrivateKey gets a reference to the given NullableString and assigns it to the ClusterPrivateKey field.
func (o *McmIBMStorageProtectClaimResponseParams) SetClusterPrivateKey(v string) {
	o.ClusterPrivateKey.Set(&v)
}
// SetClusterPrivateKeyNil sets the value for ClusterPrivateKey to be an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) SetClusterPrivateKeyNil() {
	o.ClusterPrivateKey.Set(nil)
}

// UnsetClusterPrivateKey ensures that no value is present for ClusterPrivateKey, not even an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) UnsetClusterPrivateKey() {
	o.ClusterPrivateKey.Unset()
}

// GetHeliosCertificate returns the HeliosCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmIBMStorageProtectClaimResponseParams) GetHeliosCertificate() string {
	if o == nil || IsNil(o.HeliosCertificate.Get()) {
		var ret string
		return ret
	}
	return *o.HeliosCertificate.Get()
}

// GetHeliosCertificateOk returns a tuple with the HeliosCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmIBMStorageProtectClaimResponseParams) GetHeliosCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HeliosCertificate.Get(), o.HeliosCertificate.IsSet()
}

// HasHeliosCertificate returns a boolean if a field has been set.
func (o *McmIBMStorageProtectClaimResponseParams) HasHeliosCertificate() bool {
	if o != nil && o.HeliosCertificate.IsSet() {
		return true
	}

	return false
}

// SetHeliosCertificate gets a reference to the given NullableString and assigns it to the HeliosCertificate field.
func (o *McmIBMStorageProtectClaimResponseParams) SetHeliosCertificate(v string) {
	o.HeliosCertificate.Set(&v)
}
// SetHeliosCertificateNil sets the value for HeliosCertificate to be an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) SetHeliosCertificateNil() {
	o.HeliosCertificate.Set(nil)
}

// UnsetHeliosCertificate ensures that no value is present for HeliosCertificate, not even an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) UnsetHeliosCertificate() {
	o.HeliosCertificate.Unset()
}

// GetPassphrase returns the Passphrase field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmIBMStorageProtectClaimResponseParams) GetPassphrase() string {
	if o == nil || IsNil(o.Passphrase.Get()) {
		var ret string
		return ret
	}
	return *o.Passphrase.Get()
}

// GetPassphraseOk returns a tuple with the Passphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmIBMStorageProtectClaimResponseParams) GetPassphraseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Passphrase.Get(), o.Passphrase.IsSet()
}

// HasPassphrase returns a boolean if a field has been set.
func (o *McmIBMStorageProtectClaimResponseParams) HasPassphrase() bool {
	if o != nil && o.Passphrase.IsSet() {
		return true
	}

	return false
}

// SetPassphrase gets a reference to the given NullableString and assigns it to the Passphrase field.
func (o *McmIBMStorageProtectClaimResponseParams) SetPassphrase(v string) {
	o.Passphrase.Set(&v)
}
// SetPassphraseNil sets the value for Passphrase to be an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) SetPassphraseNil() {
	o.Passphrase.Set(nil)
}

// UnsetPassphrase ensures that no value is present for Passphrase, not even an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) UnsetPassphrase() {
	o.Passphrase.Unset()
}

// GetSfAccountId returns the SfAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmIBMStorageProtectClaimResponseParams) GetSfAccountId() string {
	if o == nil || IsNil(o.SfAccountId.Get()) {
		var ret string
		return ret
	}
	return *o.SfAccountId.Get()
}

// GetSfAccountIdOk returns a tuple with the SfAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmIBMStorageProtectClaimResponseParams) GetSfAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SfAccountId.Get(), o.SfAccountId.IsSet()
}

// HasSfAccountId returns a boolean if a field has been set.
func (o *McmIBMStorageProtectClaimResponseParams) HasSfAccountId() bool {
	if o != nil && o.SfAccountId.IsSet() {
		return true
	}

	return false
}

// SetSfAccountId gets a reference to the given NullableString and assigns it to the SfAccountId field.
func (o *McmIBMStorageProtectClaimResponseParams) SetSfAccountId(v string) {
	o.SfAccountId.Set(&v)
}
// SetSfAccountIdNil sets the value for SfAccountId to be an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) SetSfAccountIdNil() {
	o.SfAccountId.Set(nil)
}

// UnsetSfAccountId ensures that no value is present for SfAccountId, not even an explicit nil
func (o *McmIBMStorageProtectClaimResponseParams) UnsetSfAccountId() {
	o.SfAccountId.Unset()
}

func (o McmIBMStorageProtectClaimResponseParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o McmIBMStorageProtectClaimResponseParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterCaChain.IsSet() {
		toSerialize["clusterCaChain"] = o.ClusterCaChain.Get()
	}
	if o.ClusterCertificate.IsSet() {
		toSerialize["clusterCertificate"] = o.ClusterCertificate.Get()
	}
	if o.ClusterId.IsSet() {
		toSerialize["clusterId"] = o.ClusterId.Get()
	}
	if o.ClusterIncarnationId.IsSet() {
		toSerialize["clusterIncarnationId"] = o.ClusterIncarnationId.Get()
	}
	if o.ClusterName.IsSet() {
		toSerialize["clusterName"] = o.ClusterName.Get()
	}
	if o.ClusterPrivateKey.IsSet() {
		toSerialize["clusterPrivateKey"] = o.ClusterPrivateKey.Get()
	}
	if o.HeliosCertificate.IsSet() {
		toSerialize["heliosCertificate"] = o.HeliosCertificate.Get()
	}
	if o.Passphrase.IsSet() {
		toSerialize["passphrase"] = o.Passphrase.Get()
	}
	if o.SfAccountId.IsSet() {
		toSerialize["sfAccountId"] = o.SfAccountId.Get()
	}
	return toSerialize, nil
}

type NullableMcmIBMStorageProtectClaimResponseParams struct {
	value *McmIBMStorageProtectClaimResponseParams
	isSet bool
}

func (v NullableMcmIBMStorageProtectClaimResponseParams) Get() *McmIBMStorageProtectClaimResponseParams {
	return v.value
}

func (v *NullableMcmIBMStorageProtectClaimResponseParams) Set(val *McmIBMStorageProtectClaimResponseParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMcmIBMStorageProtectClaimResponseParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMcmIBMStorageProtectClaimResponseParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcmIBMStorageProtectClaimResponseParams(val *McmIBMStorageProtectClaimResponseParams) *NullableMcmIBMStorageProtectClaimResponseParams {
	return &NullableMcmIBMStorageProtectClaimResponseParams{value: val, isSet: true}
}

func (v NullableMcmIBMStorageProtectClaimResponseParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcmIBMStorageProtectClaimResponseParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


