/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the GetEntityMetadataResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEntityMetadataResult{}

// GetEntityMetadataResult Specifies the response for the GetEntityMetadata.
type GetEntityMetadataResult struct {
	// Specifies the list of entities with thier metadata.
	EntityList []EntityMetadataParams `json:"entityList,omitempty"`
	// Specifies the source id of the entities whose metadata is being requested.
	SourceId *int64 `json:"sourceId,omitempty"`
}

// NewGetEntityMetadataResult instantiates a new GetEntityMetadataResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEntityMetadataResult() *GetEntityMetadataResult {
	this := GetEntityMetadataResult{}
	return &this
}

// NewGetEntityMetadataResultWithDefaults instantiates a new GetEntityMetadataResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEntityMetadataResultWithDefaults() *GetEntityMetadataResult {
	this := GetEntityMetadataResult{}
	return &this
}

// GetEntityList returns the EntityList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetEntityMetadataResult) GetEntityList() []EntityMetadataParams {
	if o == nil {
		var ret []EntityMetadataParams
		return ret
	}
	return o.EntityList
}

// GetEntityListOk returns a tuple with the EntityList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetEntityMetadataResult) GetEntityListOk() ([]EntityMetadataParams, bool) {
	if o == nil || IsNil(o.EntityList) {
		return nil, false
	}
	return o.EntityList, true
}

// HasEntityList returns a boolean if a field has been set.
func (o *GetEntityMetadataResult) HasEntityList() bool {
	if o != nil && !IsNil(o.EntityList) {
		return true
	}

	return false
}

// SetEntityList gets a reference to the given []EntityMetadataParams and assigns it to the EntityList field.
func (o *GetEntityMetadataResult) SetEntityList(v []EntityMetadataParams) {
	o.EntityList = v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *GetEntityMetadataResult) GetSourceId() int64 {
	if o == nil || IsNil(o.SourceId) {
		var ret int64
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntityMetadataResult) GetSourceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SourceId) {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *GetEntityMetadataResult) HasSourceId() bool {
	if o != nil && !IsNil(o.SourceId) {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given int64 and assigns it to the SourceId field.
func (o *GetEntityMetadataResult) SetSourceId(v int64) {
	o.SourceId = &v
}

func (o GetEntityMetadataResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEntityMetadataResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.EntityList != nil {
		toSerialize["entityList"] = o.EntityList
	}
	if !IsNil(o.SourceId) {
		toSerialize["sourceId"] = o.SourceId
	}
	return toSerialize, nil
}

type NullableGetEntityMetadataResult struct {
	value *GetEntityMetadataResult
	isSet bool
}

func (v NullableGetEntityMetadataResult) Get() *GetEntityMetadataResult {
	return v.value
}

func (v *NullableGetEntityMetadataResult) Set(val *GetEntityMetadataResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEntityMetadataResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEntityMetadataResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEntityMetadataResult(val *GetEntityMetadataResult) *NullableGetEntityMetadataResult {
	return &NullableGetEntityMetadataResult{value: val, isSet: true}
}

func (v NullableGetEntityMetadataResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEntityMetadataResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


