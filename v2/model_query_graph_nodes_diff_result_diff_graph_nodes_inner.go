/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the QueryGraphNodesDiffResultDiffGraphNodesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryGraphNodesDiffResultDiffGraphNodesInner{}

// QueryGraphNodesDiffResultDiffGraphNodesInner struct for QueryGraphNodesDiffResultDiffGraphNodesInner
type QueryGraphNodesDiffResultDiffGraphNodesInner struct {
	// Error is set if there was an error in looking up information for the node either in current or base snapshot. In case of error graphNodeInfo will only have the node id.
	Error NullableError `json:"error,omitempty"`
	// Specifies the list of diff for all the nodes added/ deleted/modified.
	GraphNodeInfo NullableDiffGraphNode `json:"graphNodeInfo,omitempty"`
}

// NewQueryGraphNodesDiffResultDiffGraphNodesInner instantiates a new QueryGraphNodesDiffResultDiffGraphNodesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryGraphNodesDiffResultDiffGraphNodesInner() *QueryGraphNodesDiffResultDiffGraphNodesInner {
	this := QueryGraphNodesDiffResultDiffGraphNodesInner{}
	return &this
}

// NewQueryGraphNodesDiffResultDiffGraphNodesInnerWithDefaults instantiates a new QueryGraphNodesDiffResultDiffGraphNodesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryGraphNodesDiffResultDiffGraphNodesInnerWithDefaults() *QueryGraphNodesDiffResultDiffGraphNodesInner {
	this := QueryGraphNodesDiffResultDiffGraphNodesInner{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueryGraphNodesDiffResultDiffGraphNodesInner) GetError() Error {
	if o == nil || IsNil(o.Error.Get()) {
		var ret Error
		return ret
	}
	return *o.Error.Get()
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueryGraphNodesDiffResultDiffGraphNodesInner) GetErrorOk() (*Error, bool) {
	if o == nil {
		return nil, false
	}
	return o.Error.Get(), o.Error.IsSet()
}

// HasError returns a boolean if a field has been set.
func (o *QueryGraphNodesDiffResultDiffGraphNodesInner) HasError() bool {
	if o != nil && o.Error.IsSet() {
		return true
	}

	return false
}

// SetError gets a reference to the given NullableError and assigns it to the Error field.
func (o *QueryGraphNodesDiffResultDiffGraphNodesInner) SetError(v Error) {
	o.Error.Set(&v)
}
// SetErrorNil sets the value for Error to be an explicit nil
func (o *QueryGraphNodesDiffResultDiffGraphNodesInner) SetErrorNil() {
	o.Error.Set(nil)
}

// UnsetError ensures that no value is present for Error, not even an explicit nil
func (o *QueryGraphNodesDiffResultDiffGraphNodesInner) UnsetError() {
	o.Error.Unset()
}

// GetGraphNodeInfo returns the GraphNodeInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueryGraphNodesDiffResultDiffGraphNodesInner) GetGraphNodeInfo() DiffGraphNode {
	if o == nil || IsNil(o.GraphNodeInfo.Get()) {
		var ret DiffGraphNode
		return ret
	}
	return *o.GraphNodeInfo.Get()
}

// GetGraphNodeInfoOk returns a tuple with the GraphNodeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueryGraphNodesDiffResultDiffGraphNodesInner) GetGraphNodeInfoOk() (*DiffGraphNode, bool) {
	if o == nil {
		return nil, false
	}
	return o.GraphNodeInfo.Get(), o.GraphNodeInfo.IsSet()
}

// HasGraphNodeInfo returns a boolean if a field has been set.
func (o *QueryGraphNodesDiffResultDiffGraphNodesInner) HasGraphNodeInfo() bool {
	if o != nil && o.GraphNodeInfo.IsSet() {
		return true
	}

	return false
}

// SetGraphNodeInfo gets a reference to the given NullableDiffGraphNode and assigns it to the GraphNodeInfo field.
func (o *QueryGraphNodesDiffResultDiffGraphNodesInner) SetGraphNodeInfo(v DiffGraphNode) {
	o.GraphNodeInfo.Set(&v)
}
// SetGraphNodeInfoNil sets the value for GraphNodeInfo to be an explicit nil
func (o *QueryGraphNodesDiffResultDiffGraphNodesInner) SetGraphNodeInfoNil() {
	o.GraphNodeInfo.Set(nil)
}

// UnsetGraphNodeInfo ensures that no value is present for GraphNodeInfo, not even an explicit nil
func (o *QueryGraphNodesDiffResultDiffGraphNodesInner) UnsetGraphNodeInfo() {
	o.GraphNodeInfo.Unset()
}

func (o QueryGraphNodesDiffResultDiffGraphNodesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryGraphNodesDiffResultDiffGraphNodesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Error.IsSet() {
		toSerialize["error"] = o.Error.Get()
	}
	if o.GraphNodeInfo.IsSet() {
		toSerialize["graphNodeInfo"] = o.GraphNodeInfo.Get()
	}
	return toSerialize, nil
}

type NullableQueryGraphNodesDiffResultDiffGraphNodesInner struct {
	value *QueryGraphNodesDiffResultDiffGraphNodesInner
	isSet bool
}

func (v NullableQueryGraphNodesDiffResultDiffGraphNodesInner) Get() *QueryGraphNodesDiffResultDiffGraphNodesInner {
	return v.value
}

func (v *NullableQueryGraphNodesDiffResultDiffGraphNodesInner) Set(val *QueryGraphNodesDiffResultDiffGraphNodesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryGraphNodesDiffResultDiffGraphNodesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryGraphNodesDiffResultDiffGraphNodesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryGraphNodesDiffResultDiffGraphNodesInner(val *QueryGraphNodesDiffResultDiffGraphNodesInner) *NullableQueryGraphNodesDiffResultDiffGraphNodesInner {
	return &NullableQueryGraphNodesDiffResultDiffGraphNodesInner{value: val, isSet: true}
}

func (v NullableQueryGraphNodesDiffResultDiffGraphNodesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryGraphNodesDiffResultDiffGraphNodesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


