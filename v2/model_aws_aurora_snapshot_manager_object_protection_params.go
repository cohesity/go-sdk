/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AwsAuroraSnapshotManagerObjectProtectionParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsAuroraSnapshotManagerObjectProtectionParams{}

// AwsAuroraSnapshotManagerObjectProtectionParams Specifies the parameters which are specific to AWS Object Protection using AWS Aurora snapshot orchestration with snapshot manager. Atlease one of tags or objects must be specified.
type AwsAuroraSnapshotManagerObjectProtectionParams struct {
	// Specifies the objects to be protected.
	Objects []AwsObjectLevelParams `json:"objects,omitempty"`
}

// NewAwsAuroraSnapshotManagerObjectProtectionParams instantiates a new AwsAuroraSnapshotManagerObjectProtectionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsAuroraSnapshotManagerObjectProtectionParams() *AwsAuroraSnapshotManagerObjectProtectionParams {
	this := AwsAuroraSnapshotManagerObjectProtectionParams{}
	return &this
}

// NewAwsAuroraSnapshotManagerObjectProtectionParamsWithDefaults instantiates a new AwsAuroraSnapshotManagerObjectProtectionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsAuroraSnapshotManagerObjectProtectionParamsWithDefaults() *AwsAuroraSnapshotManagerObjectProtectionParams {
	this := AwsAuroraSnapshotManagerObjectProtectionParams{}
	return &this
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *AwsAuroraSnapshotManagerObjectProtectionParams) GetObjects() []AwsObjectLevelParams {
	if o == nil || IsNil(o.Objects) {
		var ret []AwsObjectLevelParams
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsAuroraSnapshotManagerObjectProtectionParams) GetObjectsOk() ([]AwsObjectLevelParams, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *AwsAuroraSnapshotManagerObjectProtectionParams) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []AwsObjectLevelParams and assigns it to the Objects field.
func (o *AwsAuroraSnapshotManagerObjectProtectionParams) SetObjects(v []AwsObjectLevelParams) {
	o.Objects = v
}

func (o AwsAuroraSnapshotManagerObjectProtectionParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsAuroraSnapshotManagerObjectProtectionParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Objects) {
		toSerialize["objects"] = o.Objects
	}
	return toSerialize, nil
}

type NullableAwsAuroraSnapshotManagerObjectProtectionParams struct {
	value *AwsAuroraSnapshotManagerObjectProtectionParams
	isSet bool
}

func (v NullableAwsAuroraSnapshotManagerObjectProtectionParams) Get() *AwsAuroraSnapshotManagerObjectProtectionParams {
	return v.value
}

func (v *NullableAwsAuroraSnapshotManagerObjectProtectionParams) Set(val *AwsAuroraSnapshotManagerObjectProtectionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsAuroraSnapshotManagerObjectProtectionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsAuroraSnapshotManagerObjectProtectionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsAuroraSnapshotManagerObjectProtectionParams(val *AwsAuroraSnapshotManagerObjectProtectionParams) *NullableAwsAuroraSnapshotManagerObjectProtectionParams {
	return &NullableAwsAuroraSnapshotManagerObjectProtectionParams{value: val, isSet: true}
}

func (v NullableAwsAuroraSnapshotManagerObjectProtectionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsAuroraSnapshotManagerObjectProtectionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


