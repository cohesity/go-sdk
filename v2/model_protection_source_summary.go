/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ProtectionSourceSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProtectionSourceSummary{}

// ProtectionSourceSummary ProtectedSourceSummary is the summary of all the Protection Runs for the Protection groups using the Specified Protection Policy. This is only populated for a policy of type kRPO.
type ProtectionSourceSummary struct {
	// Specifies the status of the protection group
	IsProtectionGroupPaused NullableBool `json:"isProtectionGroupPaused,omitempty"`
	LastProtectionRun *ProtectionGroupRun `json:"lastProtectionRun,omitempty"`
	// Specifies the time at which the next Protection Run is scheduled for the given Protection Source in Unix epoch Time
	NextProtectionRunTimeUsecs NullableInt64 `json:"nextProtectionRunTimeUsecs,omitempty"`
	Object *Object `json:"object,omitempty"`
}

// NewProtectionSourceSummary instantiates a new ProtectionSourceSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionSourceSummary() *ProtectionSourceSummary {
	this := ProtectionSourceSummary{}
	return &this
}

// NewProtectionSourceSummaryWithDefaults instantiates a new ProtectionSourceSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionSourceSummaryWithDefaults() *ProtectionSourceSummary {
	this := ProtectionSourceSummary{}
	return &this
}

// GetIsProtectionGroupPaused returns the IsProtectionGroupPaused field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourceSummary) GetIsProtectionGroupPaused() bool {
	if o == nil || IsNil(o.IsProtectionGroupPaused.Get()) {
		var ret bool
		return ret
	}
	return *o.IsProtectionGroupPaused.Get()
}

// GetIsProtectionGroupPausedOk returns a tuple with the IsProtectionGroupPaused field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourceSummary) GetIsProtectionGroupPausedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsProtectionGroupPaused.Get(), o.IsProtectionGroupPaused.IsSet()
}

// HasIsProtectionGroupPaused returns a boolean if a field has been set.
func (o *ProtectionSourceSummary) HasIsProtectionGroupPaused() bool {
	if o != nil && o.IsProtectionGroupPaused.IsSet() {
		return true
	}

	return false
}

// SetIsProtectionGroupPaused gets a reference to the given NullableBool and assigns it to the IsProtectionGroupPaused field.
func (o *ProtectionSourceSummary) SetIsProtectionGroupPaused(v bool) {
	o.IsProtectionGroupPaused.Set(&v)
}
// SetIsProtectionGroupPausedNil sets the value for IsProtectionGroupPaused to be an explicit nil
func (o *ProtectionSourceSummary) SetIsProtectionGroupPausedNil() {
	o.IsProtectionGroupPaused.Set(nil)
}

// UnsetIsProtectionGroupPaused ensures that no value is present for IsProtectionGroupPaused, not even an explicit nil
func (o *ProtectionSourceSummary) UnsetIsProtectionGroupPaused() {
	o.IsProtectionGroupPaused.Unset()
}

// GetLastProtectionRun returns the LastProtectionRun field value if set, zero value otherwise.
func (o *ProtectionSourceSummary) GetLastProtectionRun() ProtectionGroupRun {
	if o == nil || IsNil(o.LastProtectionRun) {
		var ret ProtectionGroupRun
		return ret
	}
	return *o.LastProtectionRun
}

// GetLastProtectionRunOk returns a tuple with the LastProtectionRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionSourceSummary) GetLastProtectionRunOk() (*ProtectionGroupRun, bool) {
	if o == nil || IsNil(o.LastProtectionRun) {
		return nil, false
	}
	return o.LastProtectionRun, true
}

// HasLastProtectionRun returns a boolean if a field has been set.
func (o *ProtectionSourceSummary) HasLastProtectionRun() bool {
	if o != nil && !IsNil(o.LastProtectionRun) {
		return true
	}

	return false
}

// SetLastProtectionRun gets a reference to the given ProtectionGroupRun and assigns it to the LastProtectionRun field.
func (o *ProtectionSourceSummary) SetLastProtectionRun(v ProtectionGroupRun) {
	o.LastProtectionRun = &v
}

// GetNextProtectionRunTimeUsecs returns the NextProtectionRunTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourceSummary) GetNextProtectionRunTimeUsecs() int64 {
	if o == nil || IsNil(o.NextProtectionRunTimeUsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.NextProtectionRunTimeUsecs.Get()
}

// GetNextProtectionRunTimeUsecsOk returns a tuple with the NextProtectionRunTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourceSummary) GetNextProtectionRunTimeUsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextProtectionRunTimeUsecs.Get(), o.NextProtectionRunTimeUsecs.IsSet()
}

// HasNextProtectionRunTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionSourceSummary) HasNextProtectionRunTimeUsecs() bool {
	if o != nil && o.NextProtectionRunTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetNextProtectionRunTimeUsecs gets a reference to the given NullableInt64 and assigns it to the NextProtectionRunTimeUsecs field.
func (o *ProtectionSourceSummary) SetNextProtectionRunTimeUsecs(v int64) {
	o.NextProtectionRunTimeUsecs.Set(&v)
}
// SetNextProtectionRunTimeUsecsNil sets the value for NextProtectionRunTimeUsecs to be an explicit nil
func (o *ProtectionSourceSummary) SetNextProtectionRunTimeUsecsNil() {
	o.NextProtectionRunTimeUsecs.Set(nil)
}

// UnsetNextProtectionRunTimeUsecs ensures that no value is present for NextProtectionRunTimeUsecs, not even an explicit nil
func (o *ProtectionSourceSummary) UnsetNextProtectionRunTimeUsecs() {
	o.NextProtectionRunTimeUsecs.Unset()
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *ProtectionSourceSummary) GetObject() Object {
	if o == nil || IsNil(o.Object) {
		var ret Object
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionSourceSummary) GetObjectOk() (*Object, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *ProtectionSourceSummary) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given Object and assigns it to the Object field.
func (o *ProtectionSourceSummary) SetObject(v Object) {
	o.Object = &v
}

func (o ProtectionSourceSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProtectionSourceSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IsProtectionGroupPaused.IsSet() {
		toSerialize["isProtectionGroupPaused"] = o.IsProtectionGroupPaused.Get()
	}
	if !IsNil(o.LastProtectionRun) {
		toSerialize["lastProtectionRun"] = o.LastProtectionRun
	}
	if o.NextProtectionRunTimeUsecs.IsSet() {
		toSerialize["nextProtectionRunTimeUsecs"] = o.NextProtectionRunTimeUsecs.Get()
	}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	return toSerialize, nil
}

type NullableProtectionSourceSummary struct {
	value *ProtectionSourceSummary
	isSet bool
}

func (v NullableProtectionSourceSummary) Get() *ProtectionSourceSummary {
	return v.value
}

func (v *NullableProtectionSourceSummary) Set(val *ProtectionSourceSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionSourceSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionSourceSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionSourceSummary(val *ProtectionSourceSummary) *NullableProtectionSourceSummary {
	return &NullableProtectionSourceSummary{value: val, isSet: true}
}

func (v NullableProtectionSourceSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionSourceSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


