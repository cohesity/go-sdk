/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ConnectorCloudMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectorCloudMetadata{}

// ConnectorCloudMetadata Specifies cloud specific metadata details if any.
type ConnectorCloudMetadata struct {
	ConnectorAwsMetadata *ConnectorAwsMetadata `json:"connectorAwsMetadata,omitempty"`
	ConnectorAzureMetadata *ConnectorAzureMetadata `json:"connectorAzureMetadata,omitempty"`
}

// NewConnectorCloudMetadata instantiates a new ConnectorCloudMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorCloudMetadata() *ConnectorCloudMetadata {
	this := ConnectorCloudMetadata{}
	return &this
}

// NewConnectorCloudMetadataWithDefaults instantiates a new ConnectorCloudMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorCloudMetadataWithDefaults() *ConnectorCloudMetadata {
	this := ConnectorCloudMetadata{}
	return &this
}

// GetConnectorAwsMetadata returns the ConnectorAwsMetadata field value if set, zero value otherwise.
func (o *ConnectorCloudMetadata) GetConnectorAwsMetadata() ConnectorAwsMetadata {
	if o == nil || IsNil(o.ConnectorAwsMetadata) {
		var ret ConnectorAwsMetadata
		return ret
	}
	return *o.ConnectorAwsMetadata
}

// GetConnectorAwsMetadataOk returns a tuple with the ConnectorAwsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorCloudMetadata) GetConnectorAwsMetadataOk() (*ConnectorAwsMetadata, bool) {
	if o == nil || IsNil(o.ConnectorAwsMetadata) {
		return nil, false
	}
	return o.ConnectorAwsMetadata, true
}

// HasConnectorAwsMetadata returns a boolean if a field has been set.
func (o *ConnectorCloudMetadata) HasConnectorAwsMetadata() bool {
	if o != nil && !IsNil(o.ConnectorAwsMetadata) {
		return true
	}

	return false
}

// SetConnectorAwsMetadata gets a reference to the given ConnectorAwsMetadata and assigns it to the ConnectorAwsMetadata field.
func (o *ConnectorCloudMetadata) SetConnectorAwsMetadata(v ConnectorAwsMetadata) {
	o.ConnectorAwsMetadata = &v
}

// GetConnectorAzureMetadata returns the ConnectorAzureMetadata field value if set, zero value otherwise.
func (o *ConnectorCloudMetadata) GetConnectorAzureMetadata() ConnectorAzureMetadata {
	if o == nil || IsNil(o.ConnectorAzureMetadata) {
		var ret ConnectorAzureMetadata
		return ret
	}
	return *o.ConnectorAzureMetadata
}

// GetConnectorAzureMetadataOk returns a tuple with the ConnectorAzureMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorCloudMetadata) GetConnectorAzureMetadataOk() (*ConnectorAzureMetadata, bool) {
	if o == nil || IsNil(o.ConnectorAzureMetadata) {
		return nil, false
	}
	return o.ConnectorAzureMetadata, true
}

// HasConnectorAzureMetadata returns a boolean if a field has been set.
func (o *ConnectorCloudMetadata) HasConnectorAzureMetadata() bool {
	if o != nil && !IsNil(o.ConnectorAzureMetadata) {
		return true
	}

	return false
}

// SetConnectorAzureMetadata gets a reference to the given ConnectorAzureMetadata and assigns it to the ConnectorAzureMetadata field.
func (o *ConnectorCloudMetadata) SetConnectorAzureMetadata(v ConnectorAzureMetadata) {
	o.ConnectorAzureMetadata = &v
}

func (o ConnectorCloudMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectorCloudMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectorAwsMetadata) {
		toSerialize["connectorAwsMetadata"] = o.ConnectorAwsMetadata
	}
	if !IsNil(o.ConnectorAzureMetadata) {
		toSerialize["connectorAzureMetadata"] = o.ConnectorAzureMetadata
	}
	return toSerialize, nil
}

type NullableConnectorCloudMetadata struct {
	value *ConnectorCloudMetadata
	isSet bool
}

func (v NullableConnectorCloudMetadata) Get() *ConnectorCloudMetadata {
	return v.value
}

func (v *NullableConnectorCloudMetadata) Set(val *ConnectorCloudMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorCloudMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorCloudMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorCloudMetadata(val *ConnectorCloudMetadata) *NullableConnectorCloudMetadata {
	return &NullableConnectorCloudMetadata{value: val, isSet: true}
}

func (v NullableConnectorCloudMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorCloudMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


