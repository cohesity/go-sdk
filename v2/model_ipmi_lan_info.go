/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the IpmiLanInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpmiLanInfo{}

// IpmiLanInfo Specifies the lan info for the ipmi.
type IpmiLanInfo struct {
	// Specifies the channel through which the IPMI interface communicates on the network.
	Channel NullableInt32 `json:"channel,omitempty"`
	// Specifies the default gateway ip for the given ipmi lan.
	DefaultGatewayIp NullableString `json:"defaultGatewayIp,omitempty"`
	// Specifies the default gateway mac address for the given ipmi lan.
	DefaultGatewayMac NullableString `json:"defaultGatewayMac,omitempty"`
	// Specifies the ipmi lan address source.
	IpAddrSource NullableString `json:"ipAddrSource,omitempty"`
	// Specifies the ip address for the given ipmi lan.
	LanIp NullableString `json:"lanIp,omitempty"`
	// Specifies the subnet mask for the given ipmi lan.
	SubnetMask NullableString `json:"subnetMask,omitempty"`
}

// NewIpmiLanInfo instantiates a new IpmiLanInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpmiLanInfo() *IpmiLanInfo {
	this := IpmiLanInfo{}
	return &this
}

// NewIpmiLanInfoWithDefaults instantiates a new IpmiLanInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpmiLanInfoWithDefaults() *IpmiLanInfo {
	this := IpmiLanInfo{}
	return &this
}

// GetChannel returns the Channel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IpmiLanInfo) GetChannel() int32 {
	if o == nil || IsNil(o.Channel.Get()) {
		var ret int32
		return ret
	}
	return *o.Channel.Get()
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IpmiLanInfo) GetChannelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Channel.Get(), o.Channel.IsSet()
}

// HasChannel returns a boolean if a field has been set.
func (o *IpmiLanInfo) HasChannel() bool {
	if o != nil && o.Channel.IsSet() {
		return true
	}

	return false
}

// SetChannel gets a reference to the given NullableInt32 and assigns it to the Channel field.
func (o *IpmiLanInfo) SetChannel(v int32) {
	o.Channel.Set(&v)
}
// SetChannelNil sets the value for Channel to be an explicit nil
func (o *IpmiLanInfo) SetChannelNil() {
	o.Channel.Set(nil)
}

// UnsetChannel ensures that no value is present for Channel, not even an explicit nil
func (o *IpmiLanInfo) UnsetChannel() {
	o.Channel.Unset()
}

// GetDefaultGatewayIp returns the DefaultGatewayIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IpmiLanInfo) GetDefaultGatewayIp() string {
	if o == nil || IsNil(o.DefaultGatewayIp.Get()) {
		var ret string
		return ret
	}
	return *o.DefaultGatewayIp.Get()
}

// GetDefaultGatewayIpOk returns a tuple with the DefaultGatewayIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IpmiLanInfo) GetDefaultGatewayIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultGatewayIp.Get(), o.DefaultGatewayIp.IsSet()
}

// HasDefaultGatewayIp returns a boolean if a field has been set.
func (o *IpmiLanInfo) HasDefaultGatewayIp() bool {
	if o != nil && o.DefaultGatewayIp.IsSet() {
		return true
	}

	return false
}

// SetDefaultGatewayIp gets a reference to the given NullableString and assigns it to the DefaultGatewayIp field.
func (o *IpmiLanInfo) SetDefaultGatewayIp(v string) {
	o.DefaultGatewayIp.Set(&v)
}
// SetDefaultGatewayIpNil sets the value for DefaultGatewayIp to be an explicit nil
func (o *IpmiLanInfo) SetDefaultGatewayIpNil() {
	o.DefaultGatewayIp.Set(nil)
}

// UnsetDefaultGatewayIp ensures that no value is present for DefaultGatewayIp, not even an explicit nil
func (o *IpmiLanInfo) UnsetDefaultGatewayIp() {
	o.DefaultGatewayIp.Unset()
}

// GetDefaultGatewayMac returns the DefaultGatewayMac field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IpmiLanInfo) GetDefaultGatewayMac() string {
	if o == nil || IsNil(o.DefaultGatewayMac.Get()) {
		var ret string
		return ret
	}
	return *o.DefaultGatewayMac.Get()
}

// GetDefaultGatewayMacOk returns a tuple with the DefaultGatewayMac field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IpmiLanInfo) GetDefaultGatewayMacOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultGatewayMac.Get(), o.DefaultGatewayMac.IsSet()
}

// HasDefaultGatewayMac returns a boolean if a field has been set.
func (o *IpmiLanInfo) HasDefaultGatewayMac() bool {
	if o != nil && o.DefaultGatewayMac.IsSet() {
		return true
	}

	return false
}

// SetDefaultGatewayMac gets a reference to the given NullableString and assigns it to the DefaultGatewayMac field.
func (o *IpmiLanInfo) SetDefaultGatewayMac(v string) {
	o.DefaultGatewayMac.Set(&v)
}
// SetDefaultGatewayMacNil sets the value for DefaultGatewayMac to be an explicit nil
func (o *IpmiLanInfo) SetDefaultGatewayMacNil() {
	o.DefaultGatewayMac.Set(nil)
}

// UnsetDefaultGatewayMac ensures that no value is present for DefaultGatewayMac, not even an explicit nil
func (o *IpmiLanInfo) UnsetDefaultGatewayMac() {
	o.DefaultGatewayMac.Unset()
}

// GetIpAddrSource returns the IpAddrSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IpmiLanInfo) GetIpAddrSource() string {
	if o == nil || IsNil(o.IpAddrSource.Get()) {
		var ret string
		return ret
	}
	return *o.IpAddrSource.Get()
}

// GetIpAddrSourceOk returns a tuple with the IpAddrSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IpmiLanInfo) GetIpAddrSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IpAddrSource.Get(), o.IpAddrSource.IsSet()
}

// HasIpAddrSource returns a boolean if a field has been set.
func (o *IpmiLanInfo) HasIpAddrSource() bool {
	if o != nil && o.IpAddrSource.IsSet() {
		return true
	}

	return false
}

// SetIpAddrSource gets a reference to the given NullableString and assigns it to the IpAddrSource field.
func (o *IpmiLanInfo) SetIpAddrSource(v string) {
	o.IpAddrSource.Set(&v)
}
// SetIpAddrSourceNil sets the value for IpAddrSource to be an explicit nil
func (o *IpmiLanInfo) SetIpAddrSourceNil() {
	o.IpAddrSource.Set(nil)
}

// UnsetIpAddrSource ensures that no value is present for IpAddrSource, not even an explicit nil
func (o *IpmiLanInfo) UnsetIpAddrSource() {
	o.IpAddrSource.Unset()
}

// GetLanIp returns the LanIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IpmiLanInfo) GetLanIp() string {
	if o == nil || IsNil(o.LanIp.Get()) {
		var ret string
		return ret
	}
	return *o.LanIp.Get()
}

// GetLanIpOk returns a tuple with the LanIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IpmiLanInfo) GetLanIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LanIp.Get(), o.LanIp.IsSet()
}

// HasLanIp returns a boolean if a field has been set.
func (o *IpmiLanInfo) HasLanIp() bool {
	if o != nil && o.LanIp.IsSet() {
		return true
	}

	return false
}

// SetLanIp gets a reference to the given NullableString and assigns it to the LanIp field.
func (o *IpmiLanInfo) SetLanIp(v string) {
	o.LanIp.Set(&v)
}
// SetLanIpNil sets the value for LanIp to be an explicit nil
func (o *IpmiLanInfo) SetLanIpNil() {
	o.LanIp.Set(nil)
}

// UnsetLanIp ensures that no value is present for LanIp, not even an explicit nil
func (o *IpmiLanInfo) UnsetLanIp() {
	o.LanIp.Unset()
}

// GetSubnetMask returns the SubnetMask field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IpmiLanInfo) GetSubnetMask() string {
	if o == nil || IsNil(o.SubnetMask.Get()) {
		var ret string
		return ret
	}
	return *o.SubnetMask.Get()
}

// GetSubnetMaskOk returns a tuple with the SubnetMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IpmiLanInfo) GetSubnetMaskOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubnetMask.Get(), o.SubnetMask.IsSet()
}

// HasSubnetMask returns a boolean if a field has been set.
func (o *IpmiLanInfo) HasSubnetMask() bool {
	if o != nil && o.SubnetMask.IsSet() {
		return true
	}

	return false
}

// SetSubnetMask gets a reference to the given NullableString and assigns it to the SubnetMask field.
func (o *IpmiLanInfo) SetSubnetMask(v string) {
	o.SubnetMask.Set(&v)
}
// SetSubnetMaskNil sets the value for SubnetMask to be an explicit nil
func (o *IpmiLanInfo) SetSubnetMaskNil() {
	o.SubnetMask.Set(nil)
}

// UnsetSubnetMask ensures that no value is present for SubnetMask, not even an explicit nil
func (o *IpmiLanInfo) UnsetSubnetMask() {
	o.SubnetMask.Unset()
}

func (o IpmiLanInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpmiLanInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Channel.IsSet() {
		toSerialize["channel"] = o.Channel.Get()
	}
	if o.DefaultGatewayIp.IsSet() {
		toSerialize["defaultGatewayIp"] = o.DefaultGatewayIp.Get()
	}
	if o.DefaultGatewayMac.IsSet() {
		toSerialize["defaultGatewayMac"] = o.DefaultGatewayMac.Get()
	}
	if o.IpAddrSource.IsSet() {
		toSerialize["ipAddrSource"] = o.IpAddrSource.Get()
	}
	if o.LanIp.IsSet() {
		toSerialize["lanIp"] = o.LanIp.Get()
	}
	if o.SubnetMask.IsSet() {
		toSerialize["subnetMask"] = o.SubnetMask.Get()
	}
	return toSerialize, nil
}

type NullableIpmiLanInfo struct {
	value *IpmiLanInfo
	isSet bool
}

func (v NullableIpmiLanInfo) Get() *IpmiLanInfo {
	return v.value
}

func (v *NullableIpmiLanInfo) Set(val *IpmiLanInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableIpmiLanInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableIpmiLanInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpmiLanInfo(val *IpmiLanInfo) *NullableIpmiLanInfo {
	return &NullableIpmiLanInfo{value: val, isSet: true}
}

func (v NullableIpmiLanInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpmiLanInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


