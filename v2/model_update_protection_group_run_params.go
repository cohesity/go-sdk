/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateProtectionGroupRunParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProtectionGroupRunParams{}

// UpdateProtectionGroupRunParams Specifies the params to update a Protection Group Run.
type UpdateProtectionGroupRunParams struct {
	ArchivalSnapshotConfig *UpdateArchivalSnapshotConfig `json:"archivalSnapshotConfig,omitempty"`
	LocalSnapshotConfig *UpdateLocalSnapshotConfig `json:"localSnapshotConfig,omitempty"`
	ReplicationSnapshotConfig *UpdateReplicationSnapshotConfig `json:"replicationSnapshotConfig,omitempty"`
	// Specifies a unique Protection Group Run id.
	RunId NullableString `json:"runId" validate:"regexp=^\\\\d+:\\\\d+$"`
}

type _UpdateProtectionGroupRunParams UpdateProtectionGroupRunParams

// NewUpdateProtectionGroupRunParams instantiates a new UpdateProtectionGroupRunParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProtectionGroupRunParams(runId NullableString) *UpdateProtectionGroupRunParams {
	this := UpdateProtectionGroupRunParams{}
	this.RunId = runId
	return &this
}

// NewUpdateProtectionGroupRunParamsWithDefaults instantiates a new UpdateProtectionGroupRunParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProtectionGroupRunParamsWithDefaults() *UpdateProtectionGroupRunParams {
	this := UpdateProtectionGroupRunParams{}
	return &this
}

// GetArchivalSnapshotConfig returns the ArchivalSnapshotConfig field value if set, zero value otherwise.
func (o *UpdateProtectionGroupRunParams) GetArchivalSnapshotConfig() UpdateArchivalSnapshotConfig {
	if o == nil || IsNil(o.ArchivalSnapshotConfig) {
		var ret UpdateArchivalSnapshotConfig
		return ret
	}
	return *o.ArchivalSnapshotConfig
}

// GetArchivalSnapshotConfigOk returns a tuple with the ArchivalSnapshotConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectionGroupRunParams) GetArchivalSnapshotConfigOk() (*UpdateArchivalSnapshotConfig, bool) {
	if o == nil || IsNil(o.ArchivalSnapshotConfig) {
		return nil, false
	}
	return o.ArchivalSnapshotConfig, true
}

// HasArchivalSnapshotConfig returns a boolean if a field has been set.
func (o *UpdateProtectionGroupRunParams) HasArchivalSnapshotConfig() bool {
	if o != nil && !IsNil(o.ArchivalSnapshotConfig) {
		return true
	}

	return false
}

// SetArchivalSnapshotConfig gets a reference to the given UpdateArchivalSnapshotConfig and assigns it to the ArchivalSnapshotConfig field.
func (o *UpdateProtectionGroupRunParams) SetArchivalSnapshotConfig(v UpdateArchivalSnapshotConfig) {
	o.ArchivalSnapshotConfig = &v
}

// GetLocalSnapshotConfig returns the LocalSnapshotConfig field value if set, zero value otherwise.
func (o *UpdateProtectionGroupRunParams) GetLocalSnapshotConfig() UpdateLocalSnapshotConfig {
	if o == nil || IsNil(o.LocalSnapshotConfig) {
		var ret UpdateLocalSnapshotConfig
		return ret
	}
	return *o.LocalSnapshotConfig
}

// GetLocalSnapshotConfigOk returns a tuple with the LocalSnapshotConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectionGroupRunParams) GetLocalSnapshotConfigOk() (*UpdateLocalSnapshotConfig, bool) {
	if o == nil || IsNil(o.LocalSnapshotConfig) {
		return nil, false
	}
	return o.LocalSnapshotConfig, true
}

// HasLocalSnapshotConfig returns a boolean if a field has been set.
func (o *UpdateProtectionGroupRunParams) HasLocalSnapshotConfig() bool {
	if o != nil && !IsNil(o.LocalSnapshotConfig) {
		return true
	}

	return false
}

// SetLocalSnapshotConfig gets a reference to the given UpdateLocalSnapshotConfig and assigns it to the LocalSnapshotConfig field.
func (o *UpdateProtectionGroupRunParams) SetLocalSnapshotConfig(v UpdateLocalSnapshotConfig) {
	o.LocalSnapshotConfig = &v
}

// GetReplicationSnapshotConfig returns the ReplicationSnapshotConfig field value if set, zero value otherwise.
func (o *UpdateProtectionGroupRunParams) GetReplicationSnapshotConfig() UpdateReplicationSnapshotConfig {
	if o == nil || IsNil(o.ReplicationSnapshotConfig) {
		var ret UpdateReplicationSnapshotConfig
		return ret
	}
	return *o.ReplicationSnapshotConfig
}

// GetReplicationSnapshotConfigOk returns a tuple with the ReplicationSnapshotConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProtectionGroupRunParams) GetReplicationSnapshotConfigOk() (*UpdateReplicationSnapshotConfig, bool) {
	if o == nil || IsNil(o.ReplicationSnapshotConfig) {
		return nil, false
	}
	return o.ReplicationSnapshotConfig, true
}

// HasReplicationSnapshotConfig returns a boolean if a field has been set.
func (o *UpdateProtectionGroupRunParams) HasReplicationSnapshotConfig() bool {
	if o != nil && !IsNil(o.ReplicationSnapshotConfig) {
		return true
	}

	return false
}

// SetReplicationSnapshotConfig gets a reference to the given UpdateReplicationSnapshotConfig and assigns it to the ReplicationSnapshotConfig field.
func (o *UpdateProtectionGroupRunParams) SetReplicationSnapshotConfig(v UpdateReplicationSnapshotConfig) {
	o.ReplicationSnapshotConfig = &v
}

// GetRunId returns the RunId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *UpdateProtectionGroupRunParams) GetRunId() string {
	if o == nil || o.RunId.Get() == nil {
		var ret string
		return ret
	}

	return *o.RunId.Get()
}

// GetRunIdOk returns a tuple with the RunId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionGroupRunParams) GetRunIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunId.Get(), o.RunId.IsSet()
}

// SetRunId sets field value
func (o *UpdateProtectionGroupRunParams) SetRunId(v string) {
	o.RunId.Set(&v)
}

func (o UpdateProtectionGroupRunParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProtectionGroupRunParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ArchivalSnapshotConfig) {
		toSerialize["archivalSnapshotConfig"] = o.ArchivalSnapshotConfig
	}
	if !IsNil(o.LocalSnapshotConfig) {
		toSerialize["localSnapshotConfig"] = o.LocalSnapshotConfig
	}
	if !IsNil(o.ReplicationSnapshotConfig) {
		toSerialize["replicationSnapshotConfig"] = o.ReplicationSnapshotConfig
	}
	toSerialize["runId"] = o.RunId.Get()
	return toSerialize, nil
}

func (o *UpdateProtectionGroupRunParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"runId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateProtectionGroupRunParams := _UpdateProtectionGroupRunParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateProtectionGroupRunParams)

	if err != nil {
		return err
	}

	*o = UpdateProtectionGroupRunParams(varUpdateProtectionGroupRunParams)

	return err
}

type NullableUpdateProtectionGroupRunParams struct {
	value *UpdateProtectionGroupRunParams
	isSet bool
}

func (v NullableUpdateProtectionGroupRunParams) Get() *UpdateProtectionGroupRunParams {
	return v.value
}

func (v *NullableUpdateProtectionGroupRunParams) Set(val *UpdateProtectionGroupRunParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProtectionGroupRunParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProtectionGroupRunParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProtectionGroupRunParams(val *UpdateProtectionGroupRunParams) *NullableUpdateProtectionGroupRunParams {
	return &NullableUpdateProtectionGroupRunParams{value: val, isSet: true}
}

func (v NullableUpdateProtectionGroupRunParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProtectionGroupRunParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


