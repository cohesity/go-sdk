/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the OracleVlanInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OracleVlanInfo{}

// OracleVlanInfo Specifies details about capturing Cohesity cluster VLAN info for Oracle workflow.
type OracleVlanInfo struct {
	// Specifies the gateway of this VLAN.
	Gateway NullableString `json:"gateway,omitempty"`
	// Specifies the Id of this VLAN.
	Id *int32 `json:"id,omitempty"`
	// Specifies the list of Ips in this VLAN.
	IpList []string `json:"ipList,omitempty"`
	// Specifies the subnet Ip for this VLAN.
	SubnetIp NullableString `json:"subnetIp,omitempty"`
}

// NewOracleVlanInfo instantiates a new OracleVlanInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOracleVlanInfo() *OracleVlanInfo {
	this := OracleVlanInfo{}
	return &this
}

// NewOracleVlanInfoWithDefaults instantiates a new OracleVlanInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOracleVlanInfoWithDefaults() *OracleVlanInfo {
	this := OracleVlanInfo{}
	return &this
}

// GetGateway returns the Gateway field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OracleVlanInfo) GetGateway() string {
	if o == nil || IsNil(o.Gateway.Get()) {
		var ret string
		return ret
	}
	return *o.Gateway.Get()
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OracleVlanInfo) GetGatewayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gateway.Get(), o.Gateway.IsSet()
}

// HasGateway returns a boolean if a field has been set.
func (o *OracleVlanInfo) HasGateway() bool {
	if o != nil && o.Gateway.IsSet() {
		return true
	}

	return false
}

// SetGateway gets a reference to the given NullableString and assigns it to the Gateway field.
func (o *OracleVlanInfo) SetGateway(v string) {
	o.Gateway.Set(&v)
}
// SetGatewayNil sets the value for Gateway to be an explicit nil
func (o *OracleVlanInfo) SetGatewayNil() {
	o.Gateway.Set(nil)
}

// UnsetGateway ensures that no value is present for Gateway, not even an explicit nil
func (o *OracleVlanInfo) UnsetGateway() {
	o.Gateway.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OracleVlanInfo) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleVlanInfo) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OracleVlanInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *OracleVlanInfo) SetId(v int32) {
	o.Id = &v
}

// GetIpList returns the IpList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OracleVlanInfo) GetIpList() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.IpList
}

// GetIpListOk returns a tuple with the IpList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OracleVlanInfo) GetIpListOk() ([]string, bool) {
	if o == nil || IsNil(o.IpList) {
		return nil, false
	}
	return o.IpList, true
}

// HasIpList returns a boolean if a field has been set.
func (o *OracleVlanInfo) HasIpList() bool {
	if o != nil && !IsNil(o.IpList) {
		return true
	}

	return false
}

// SetIpList gets a reference to the given []string and assigns it to the IpList field.
func (o *OracleVlanInfo) SetIpList(v []string) {
	o.IpList = v
}

// GetSubnetIp returns the SubnetIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OracleVlanInfo) GetSubnetIp() string {
	if o == nil || IsNil(o.SubnetIp.Get()) {
		var ret string
		return ret
	}
	return *o.SubnetIp.Get()
}

// GetSubnetIpOk returns a tuple with the SubnetIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OracleVlanInfo) GetSubnetIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubnetIp.Get(), o.SubnetIp.IsSet()
}

// HasSubnetIp returns a boolean if a field has been set.
func (o *OracleVlanInfo) HasSubnetIp() bool {
	if o != nil && o.SubnetIp.IsSet() {
		return true
	}

	return false
}

// SetSubnetIp gets a reference to the given NullableString and assigns it to the SubnetIp field.
func (o *OracleVlanInfo) SetSubnetIp(v string) {
	o.SubnetIp.Set(&v)
}
// SetSubnetIpNil sets the value for SubnetIp to be an explicit nil
func (o *OracleVlanInfo) SetSubnetIpNil() {
	o.SubnetIp.Set(nil)
}

// UnsetSubnetIp ensures that no value is present for SubnetIp, not even an explicit nil
func (o *OracleVlanInfo) UnsetSubnetIp() {
	o.SubnetIp.Unset()
}

func (o OracleVlanInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OracleVlanInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Gateway.IsSet() {
		toSerialize["gateway"] = o.Gateway.Get()
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.IpList != nil {
		toSerialize["ipList"] = o.IpList
	}
	if o.SubnetIp.IsSet() {
		toSerialize["subnetIp"] = o.SubnetIp.Get()
	}
	return toSerialize, nil
}

type NullableOracleVlanInfo struct {
	value *OracleVlanInfo
	isSet bool
}

func (v NullableOracleVlanInfo) Get() *OracleVlanInfo {
	return v.value
}

func (v *NullableOracleVlanInfo) Set(val *OracleVlanInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableOracleVlanInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableOracleVlanInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOracleVlanInfo(val *OracleVlanInfo) *NullableOracleVlanInfo {
	return &NullableOracleVlanInfo{value: val, isSet: true}
}

func (v NullableOracleVlanInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOracleVlanInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


