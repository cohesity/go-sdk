/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CancelObjectRunsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CancelObjectRunsRequest{}

// CancelObjectRunsRequest Request to cancel object runs.
type CancelObjectRunsRequest struct {
	// Specifies a list of object runs to cancel.
	ObjectRuns []CancelObjectRunsParams `json:"objectRuns,omitempty"`
}

// NewCancelObjectRunsRequest instantiates a new CancelObjectRunsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancelObjectRunsRequest() *CancelObjectRunsRequest {
	this := CancelObjectRunsRequest{}
	return &this
}

// NewCancelObjectRunsRequestWithDefaults instantiates a new CancelObjectRunsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancelObjectRunsRequestWithDefaults() *CancelObjectRunsRequest {
	this := CancelObjectRunsRequest{}
	return &this
}

// GetObjectRuns returns the ObjectRuns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CancelObjectRunsRequest) GetObjectRuns() []CancelObjectRunsParams {
	if o == nil {
		var ret []CancelObjectRunsParams
		return ret
	}
	return o.ObjectRuns
}

// GetObjectRunsOk returns a tuple with the ObjectRuns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CancelObjectRunsRequest) GetObjectRunsOk() ([]CancelObjectRunsParams, bool) {
	if o == nil || IsNil(o.ObjectRuns) {
		return nil, false
	}
	return o.ObjectRuns, true
}

// HasObjectRuns returns a boolean if a field has been set.
func (o *CancelObjectRunsRequest) HasObjectRuns() bool {
	if o != nil && !IsNil(o.ObjectRuns) {
		return true
	}

	return false
}

// SetObjectRuns gets a reference to the given []CancelObjectRunsParams and assigns it to the ObjectRuns field.
func (o *CancelObjectRunsRequest) SetObjectRuns(v []CancelObjectRunsParams) {
	o.ObjectRuns = v
}

func (o CancelObjectRunsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CancelObjectRunsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ObjectRuns != nil {
		toSerialize["objectRuns"] = o.ObjectRuns
	}
	return toSerialize, nil
}

type NullableCancelObjectRunsRequest struct {
	value *CancelObjectRunsRequest
	isSet bool
}

func (v NullableCancelObjectRunsRequest) Get() *CancelObjectRunsRequest {
	return v.value
}

func (v *NullableCancelObjectRunsRequest) Set(val *CancelObjectRunsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCancelObjectRunsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCancelObjectRunsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancelObjectRunsRequest(val *CancelObjectRunsRequest) *NullableCancelObjectRunsRequest {
	return &NullableCancelObjectRunsRequest{value: val, isSet: true}
}

func (v NullableCancelObjectRunsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancelObjectRunsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


