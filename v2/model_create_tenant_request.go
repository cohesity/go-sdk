/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTenantRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTenantRequest{}

// CreateTenantRequest struct for CreateTenantRequest
type CreateTenantRequest struct {
	// Description about the tenant
	Description NullableString `json:"description,omitempty"`
	// Flag to indicate if tenant is managed on helios
	IsManagedOnHelios NullableBool `json:"isManagedOnHelios,omitempty"`
	// Name of the Tenant.
	Name NullableString `json:"name"`
	// This suffix is used by cohesity to generate the actual tenant Id by appending the parent's tenant id to it.
	TenantIdSuffix NullableString `json:"tenantIdSuffix"`
	Network *TenantNetwork `json:"network,omitempty"`
}

type _CreateTenantRequest CreateTenantRequest

// NewCreateTenantRequest instantiates a new CreateTenantRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTenantRequest(name NullableString, tenantIdSuffix NullableString) *CreateTenantRequest {
	this := CreateTenantRequest{}
	this.Name = name
	this.TenantIdSuffix = tenantIdSuffix
	return &this
}

// NewCreateTenantRequestWithDefaults instantiates a new CreateTenantRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTenantRequestWithDefaults() *CreateTenantRequest {
	this := CreateTenantRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTenantRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTenantRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateTenantRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateTenantRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateTenantRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateTenantRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetIsManagedOnHelios returns the IsManagedOnHelios field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTenantRequest) GetIsManagedOnHelios() bool {
	if o == nil || IsNil(o.IsManagedOnHelios.Get()) {
		var ret bool
		return ret
	}
	return *o.IsManagedOnHelios.Get()
}

// GetIsManagedOnHeliosOk returns a tuple with the IsManagedOnHelios field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTenantRequest) GetIsManagedOnHeliosOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsManagedOnHelios.Get(), o.IsManagedOnHelios.IsSet()
}

// HasIsManagedOnHelios returns a boolean if a field has been set.
func (o *CreateTenantRequest) HasIsManagedOnHelios() bool {
	if o != nil && o.IsManagedOnHelios.IsSet() {
		return true
	}

	return false
}

// SetIsManagedOnHelios gets a reference to the given NullableBool and assigns it to the IsManagedOnHelios field.
func (o *CreateTenantRequest) SetIsManagedOnHelios(v bool) {
	o.IsManagedOnHelios.Set(&v)
}
// SetIsManagedOnHeliosNil sets the value for IsManagedOnHelios to be an explicit nil
func (o *CreateTenantRequest) SetIsManagedOnHeliosNil() {
	o.IsManagedOnHelios.Set(nil)
}

// UnsetIsManagedOnHelios ensures that no value is present for IsManagedOnHelios, not even an explicit nil
func (o *CreateTenantRequest) UnsetIsManagedOnHelios() {
	o.IsManagedOnHelios.Unset()
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateTenantRequest) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTenantRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *CreateTenantRequest) SetName(v string) {
	o.Name.Set(&v)
}

// GetTenantIdSuffix returns the TenantIdSuffix field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateTenantRequest) GetTenantIdSuffix() string {
	if o == nil || o.TenantIdSuffix.Get() == nil {
		var ret string
		return ret
	}

	return *o.TenantIdSuffix.Get()
}

// GetTenantIdSuffixOk returns a tuple with the TenantIdSuffix field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTenantRequest) GetTenantIdSuffixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantIdSuffix.Get(), o.TenantIdSuffix.IsSet()
}

// SetTenantIdSuffix sets field value
func (o *CreateTenantRequest) SetTenantIdSuffix(v string) {
	o.TenantIdSuffix.Set(&v)
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *CreateTenantRequest) GetNetwork() TenantNetwork {
	if o == nil || IsNil(o.Network) {
		var ret TenantNetwork
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTenantRequest) GetNetworkOk() (*TenantNetwork, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *CreateTenantRequest) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given TenantNetwork and assigns it to the Network field.
func (o *CreateTenantRequest) SetNetwork(v TenantNetwork) {
	o.Network = &v
}

func (o CreateTenantRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTenantRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.IsManagedOnHelios.IsSet() {
		toSerialize["isManagedOnHelios"] = o.IsManagedOnHelios.Get()
	}
	toSerialize["name"] = o.Name.Get()
	toSerialize["tenantIdSuffix"] = o.TenantIdSuffix.Get()
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	return toSerialize, nil
}

func (o *CreateTenantRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"tenantIdSuffix",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTenantRequest := _CreateTenantRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTenantRequest)

	if err != nil {
		return err
	}

	*o = CreateTenantRequest(varCreateTenantRequest)

	return err
}

type NullableCreateTenantRequest struct {
	value *CreateTenantRequest
	isSet bool
}

func (v NullableCreateTenantRequest) Get() *CreateTenantRequest {
	return v.value
}

func (v *NullableCreateTenantRequest) Set(val *CreateTenantRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTenantRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTenantRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTenantRequest(val *CreateTenantRequest) *NullableCreateTenantRequest {
	return &NullableCreateTenantRequest{value: val, isSet: true}
}

func (v NullableCreateTenantRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTenantRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


