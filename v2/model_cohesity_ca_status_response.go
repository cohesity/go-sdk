/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CohesityCaStatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CohesityCaStatusResponse{}

// CohesityCaStatusResponse Specifies the status of cohesity ca bootstrapping request
type CohesityCaStatusResponse struct {
	// Specfies the status of cohesity ca bootstrapping
	BootstrapStatus NullableString `json:"bootstrapStatus,omitempty"`
	// Specifies ca cert in pem format
	CaCertChain []string `json:"caCertChain,omitempty"`
}

// NewCohesityCaStatusResponse instantiates a new CohesityCaStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCohesityCaStatusResponse() *CohesityCaStatusResponse {
	this := CohesityCaStatusResponse{}
	return &this
}

// NewCohesityCaStatusResponseWithDefaults instantiates a new CohesityCaStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCohesityCaStatusResponseWithDefaults() *CohesityCaStatusResponse {
	this := CohesityCaStatusResponse{}
	return &this
}

// GetBootstrapStatus returns the BootstrapStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CohesityCaStatusResponse) GetBootstrapStatus() string {
	if o == nil || IsNil(o.BootstrapStatus.Get()) {
		var ret string
		return ret
	}
	return *o.BootstrapStatus.Get()
}

// GetBootstrapStatusOk returns a tuple with the BootstrapStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CohesityCaStatusResponse) GetBootstrapStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BootstrapStatus.Get(), o.BootstrapStatus.IsSet()
}

// HasBootstrapStatus returns a boolean if a field has been set.
func (o *CohesityCaStatusResponse) HasBootstrapStatus() bool {
	if o != nil && o.BootstrapStatus.IsSet() {
		return true
	}

	return false
}

// SetBootstrapStatus gets a reference to the given NullableString and assigns it to the BootstrapStatus field.
func (o *CohesityCaStatusResponse) SetBootstrapStatus(v string) {
	o.BootstrapStatus.Set(&v)
}
// SetBootstrapStatusNil sets the value for BootstrapStatus to be an explicit nil
func (o *CohesityCaStatusResponse) SetBootstrapStatusNil() {
	o.BootstrapStatus.Set(nil)
}

// UnsetBootstrapStatus ensures that no value is present for BootstrapStatus, not even an explicit nil
func (o *CohesityCaStatusResponse) UnsetBootstrapStatus() {
	o.BootstrapStatus.Unset()
}

// GetCaCertChain returns the CaCertChain field value if set, zero value otherwise.
func (o *CohesityCaStatusResponse) GetCaCertChain() []string {
	if o == nil || IsNil(o.CaCertChain) {
		var ret []string
		return ret
	}
	return o.CaCertChain
}

// GetCaCertChainOk returns a tuple with the CaCertChain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CohesityCaStatusResponse) GetCaCertChainOk() ([]string, bool) {
	if o == nil || IsNil(o.CaCertChain) {
		return nil, false
	}
	return o.CaCertChain, true
}

// HasCaCertChain returns a boolean if a field has been set.
func (o *CohesityCaStatusResponse) HasCaCertChain() bool {
	if o != nil && !IsNil(o.CaCertChain) {
		return true
	}

	return false
}

// SetCaCertChain gets a reference to the given []string and assigns it to the CaCertChain field.
func (o *CohesityCaStatusResponse) SetCaCertChain(v []string) {
	o.CaCertChain = v
}

func (o CohesityCaStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CohesityCaStatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BootstrapStatus.IsSet() {
		toSerialize["bootstrapStatus"] = o.BootstrapStatus.Get()
	}
	if !IsNil(o.CaCertChain) {
		toSerialize["caCertChain"] = o.CaCertChain
	}
	return toSerialize, nil
}

type NullableCohesityCaStatusResponse struct {
	value *CohesityCaStatusResponse
	isSet bool
}

func (v NullableCohesityCaStatusResponse) Get() *CohesityCaStatusResponse {
	return v.value
}

func (v *NullableCohesityCaStatusResponse) Set(val *CohesityCaStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCohesityCaStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCohesityCaStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCohesityCaStatusResponse(val *CohesityCaStatusResponse) *NullableCohesityCaStatusResponse {
	return &NullableCohesityCaStatusResponse{value: val, isSet: true}
}

func (v NullableCohesityCaStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCohesityCaStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


