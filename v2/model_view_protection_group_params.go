/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ViewProtectionGroupParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ViewProtectionGroupParams{}

// ViewProtectionGroupParams Specifies the parameters which are specific to view related Protection Groups.
type ViewProtectionGroupParams struct {
	ExternallyTriggeredJobParams *ExternallyTriggeredJobParams `json:"externallyTriggeredJobParams,omitempty"`
	IndexingPolicy *IndexingPolicy `json:"indexingPolicy,omitempty"`
	// Specifies the objects to be included in the Protection Group.
	Objects []ViewProtectionGroupObjectParams `json:"objects"`
	ReplicationParams NullableViewProtectionGroupReplicationParams `json:"replicationParams,omitempty"`
}

type _ViewProtectionGroupParams ViewProtectionGroupParams

// NewViewProtectionGroupParams instantiates a new ViewProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewProtectionGroupParams(objects []ViewProtectionGroupObjectParams) *ViewProtectionGroupParams {
	this := ViewProtectionGroupParams{}
	this.Objects = objects
	return &this
}

// NewViewProtectionGroupParamsWithDefaults instantiates a new ViewProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewProtectionGroupParamsWithDefaults() *ViewProtectionGroupParams {
	this := ViewProtectionGroupParams{}
	return &this
}

// GetExternallyTriggeredJobParams returns the ExternallyTriggeredJobParams field value if set, zero value otherwise.
func (o *ViewProtectionGroupParams) GetExternallyTriggeredJobParams() ExternallyTriggeredJobParams {
	if o == nil || IsNil(o.ExternallyTriggeredJobParams) {
		var ret ExternallyTriggeredJobParams
		return ret
	}
	return *o.ExternallyTriggeredJobParams
}

// GetExternallyTriggeredJobParamsOk returns a tuple with the ExternallyTriggeredJobParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProtectionGroupParams) GetExternallyTriggeredJobParamsOk() (*ExternallyTriggeredJobParams, bool) {
	if o == nil || IsNil(o.ExternallyTriggeredJobParams) {
		return nil, false
	}
	return o.ExternallyTriggeredJobParams, true
}

// HasExternallyTriggeredJobParams returns a boolean if a field has been set.
func (o *ViewProtectionGroupParams) HasExternallyTriggeredJobParams() bool {
	if o != nil && !IsNil(o.ExternallyTriggeredJobParams) {
		return true
	}

	return false
}

// SetExternallyTriggeredJobParams gets a reference to the given ExternallyTriggeredJobParams and assigns it to the ExternallyTriggeredJobParams field.
func (o *ViewProtectionGroupParams) SetExternallyTriggeredJobParams(v ExternallyTriggeredJobParams) {
	o.ExternallyTriggeredJobParams = &v
}

// GetIndexingPolicy returns the IndexingPolicy field value if set, zero value otherwise.
func (o *ViewProtectionGroupParams) GetIndexingPolicy() IndexingPolicy {
	if o == nil || IsNil(o.IndexingPolicy) {
		var ret IndexingPolicy
		return ret
	}
	return *o.IndexingPolicy
}

// GetIndexingPolicyOk returns a tuple with the IndexingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProtectionGroupParams) GetIndexingPolicyOk() (*IndexingPolicy, bool) {
	if o == nil || IsNil(o.IndexingPolicy) {
		return nil, false
	}
	return o.IndexingPolicy, true
}

// HasIndexingPolicy returns a boolean if a field has been set.
func (o *ViewProtectionGroupParams) HasIndexingPolicy() bool {
	if o != nil && !IsNil(o.IndexingPolicy) {
		return true
	}

	return false
}

// SetIndexingPolicy gets a reference to the given IndexingPolicy and assigns it to the IndexingPolicy field.
func (o *ViewProtectionGroupParams) SetIndexingPolicy(v IndexingPolicy) {
	o.IndexingPolicy = &v
}

// GetObjects returns the Objects field value
func (o *ViewProtectionGroupParams) GetObjects() []ViewProtectionGroupObjectParams {
	if o == nil {
		var ret []ViewProtectionGroupObjectParams
		return ret
	}

	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value
// and a boolean to check if the value has been set.
func (o *ViewProtectionGroupParams) GetObjectsOk() ([]ViewProtectionGroupObjectParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.Objects, true
}

// SetObjects sets field value
func (o *ViewProtectionGroupParams) SetObjects(v []ViewProtectionGroupObjectParams) {
	o.Objects = v
}

// GetReplicationParams returns the ReplicationParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewProtectionGroupParams) GetReplicationParams() ViewProtectionGroupReplicationParams {
	if o == nil || IsNil(o.ReplicationParams.Get()) {
		var ret ViewProtectionGroupReplicationParams
		return ret
	}
	return *o.ReplicationParams.Get()
}

// GetReplicationParamsOk returns a tuple with the ReplicationParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewProtectionGroupParams) GetReplicationParamsOk() (*ViewProtectionGroupReplicationParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReplicationParams.Get(), o.ReplicationParams.IsSet()
}

// HasReplicationParams returns a boolean if a field has been set.
func (o *ViewProtectionGroupParams) HasReplicationParams() bool {
	if o != nil && o.ReplicationParams.IsSet() {
		return true
	}

	return false
}

// SetReplicationParams gets a reference to the given NullableViewProtectionGroupReplicationParams and assigns it to the ReplicationParams field.
func (o *ViewProtectionGroupParams) SetReplicationParams(v ViewProtectionGroupReplicationParams) {
	o.ReplicationParams.Set(&v)
}
// SetReplicationParamsNil sets the value for ReplicationParams to be an explicit nil
func (o *ViewProtectionGroupParams) SetReplicationParamsNil() {
	o.ReplicationParams.Set(nil)
}

// UnsetReplicationParams ensures that no value is present for ReplicationParams, not even an explicit nil
func (o *ViewProtectionGroupParams) UnsetReplicationParams() {
	o.ReplicationParams.Unset()
}

func (o ViewProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ViewProtectionGroupParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExternallyTriggeredJobParams) {
		toSerialize["externallyTriggeredJobParams"] = o.ExternallyTriggeredJobParams
	}
	if !IsNil(o.IndexingPolicy) {
		toSerialize["indexingPolicy"] = o.IndexingPolicy
	}
	toSerialize["objects"] = o.Objects
	if o.ReplicationParams.IsSet() {
		toSerialize["replicationParams"] = o.ReplicationParams.Get()
	}
	return toSerialize, nil
}

func (o *ViewProtectionGroupParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objects",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varViewProtectionGroupParams := _ViewProtectionGroupParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varViewProtectionGroupParams)

	if err != nil {
		return err
	}

	*o = ViewProtectionGroupParams(varViewProtectionGroupParams)

	return err
}

type NullableViewProtectionGroupParams struct {
	value *ViewProtectionGroupParams
	isSet bool
}

func (v NullableViewProtectionGroupParams) Get() *ViewProtectionGroupParams {
	return v.value
}

func (v *NullableViewProtectionGroupParams) Set(val *ViewProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableViewProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableViewProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewProtectionGroupParams(val *ViewProtectionGroupParams) *NullableViewProtectionGroupParams {
	return &NullableViewProtectionGroupParams{value: val, isSet: true}
}

func (v NullableViewProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


