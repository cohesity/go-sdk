/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateProtectionGroupRunRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProtectionGroupRunRequest{}

// CreateProtectionGroupRunRequest Specifies the request to create a protection run. On success, the system will accept the request and return the Protection Group id for which the run is supposed to start. The actual run may start at a later time if the system is busy. Consumers must query the Protection Group to see the run.
type CreateProtectionGroupRunRequest struct {
	CassandraParams *CassandraProtectionRunParams `json:"cassandraParams,omitempty"`
	// Specifies the list of objects to be protected by this Protection Group run. These can be leaf objects or non-leaf objects in the protection hierarchy. This must be specified only if a subset of objects from the Protection Groups needs to be protected.
	Objects []RunObject `json:"objects,omitempty"`
	// Type of protection run. 'kRegular' indicates an incremental (CBT) backup. Incremental backups utilizing CBT (if supported) are captured of the target protection objects. The first run of a kRegular schedule captures all the blocks. 'kFull' indicates a full (no CBT) backup. A complete backup (all blocks) of the target protection objects are always captured and Change Block Tracking (CBT) is not utilized. 'kLog' indicates a Database Log backup. Capture the database transaction logs to allow rolling back to a specific point in time. 'kSystem' indicates system volume backup. It produces an image for bare metal recovery.
	RunType NullableString `json:"runType"`
	TargetsConfig *RunTargetsConfiguration `json:"targetsConfig,omitempty"`
	UdaParams *UdaProtectionRunParams `json:"udaParams,omitempty"`
}

type _CreateProtectionGroupRunRequest CreateProtectionGroupRunRequest

// NewCreateProtectionGroupRunRequest instantiates a new CreateProtectionGroupRunRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProtectionGroupRunRequest(runType NullableString) *CreateProtectionGroupRunRequest {
	this := CreateProtectionGroupRunRequest{}
	this.RunType = runType
	return &this
}

// NewCreateProtectionGroupRunRequestWithDefaults instantiates a new CreateProtectionGroupRunRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProtectionGroupRunRequestWithDefaults() *CreateProtectionGroupRunRequest {
	this := CreateProtectionGroupRunRequest{}
	return &this
}

// GetCassandraParams returns the CassandraParams field value if set, zero value otherwise.
func (o *CreateProtectionGroupRunRequest) GetCassandraParams() CassandraProtectionRunParams {
	if o == nil || IsNil(o.CassandraParams) {
		var ret CassandraProtectionRunParams
		return ret
	}
	return *o.CassandraParams
}

// GetCassandraParamsOk returns a tuple with the CassandraParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProtectionGroupRunRequest) GetCassandraParamsOk() (*CassandraProtectionRunParams, bool) {
	if o == nil || IsNil(o.CassandraParams) {
		return nil, false
	}
	return o.CassandraParams, true
}

// HasCassandraParams returns a boolean if a field has been set.
func (o *CreateProtectionGroupRunRequest) HasCassandraParams() bool {
	if o != nil && !IsNil(o.CassandraParams) {
		return true
	}

	return false
}

// SetCassandraParams gets a reference to the given CassandraProtectionRunParams and assigns it to the CassandraParams field.
func (o *CreateProtectionGroupRunRequest) SetCassandraParams(v CassandraProtectionRunParams) {
	o.CassandraParams = &v
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *CreateProtectionGroupRunRequest) GetObjects() []RunObject {
	if o == nil || IsNil(o.Objects) {
		var ret []RunObject
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProtectionGroupRunRequest) GetObjectsOk() ([]RunObject, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *CreateProtectionGroupRunRequest) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []RunObject and assigns it to the Objects field.
func (o *CreateProtectionGroupRunRequest) SetObjects(v []RunObject) {
	o.Objects = v
}

// GetRunType returns the RunType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateProtectionGroupRunRequest) GetRunType() string {
	if o == nil || o.RunType.Get() == nil {
		var ret string
		return ret
	}

	return *o.RunType.Get()
}

// GetRunTypeOk returns a tuple with the RunType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProtectionGroupRunRequest) GetRunTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunType.Get(), o.RunType.IsSet()
}

// SetRunType sets field value
func (o *CreateProtectionGroupRunRequest) SetRunType(v string) {
	o.RunType.Set(&v)
}

// GetTargetsConfig returns the TargetsConfig field value if set, zero value otherwise.
func (o *CreateProtectionGroupRunRequest) GetTargetsConfig() RunTargetsConfiguration {
	if o == nil || IsNil(o.TargetsConfig) {
		var ret RunTargetsConfiguration
		return ret
	}
	return *o.TargetsConfig
}

// GetTargetsConfigOk returns a tuple with the TargetsConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProtectionGroupRunRequest) GetTargetsConfigOk() (*RunTargetsConfiguration, bool) {
	if o == nil || IsNil(o.TargetsConfig) {
		return nil, false
	}
	return o.TargetsConfig, true
}

// HasTargetsConfig returns a boolean if a field has been set.
func (o *CreateProtectionGroupRunRequest) HasTargetsConfig() bool {
	if o != nil && !IsNil(o.TargetsConfig) {
		return true
	}

	return false
}

// SetTargetsConfig gets a reference to the given RunTargetsConfiguration and assigns it to the TargetsConfig field.
func (o *CreateProtectionGroupRunRequest) SetTargetsConfig(v RunTargetsConfiguration) {
	o.TargetsConfig = &v
}

// GetUdaParams returns the UdaParams field value if set, zero value otherwise.
func (o *CreateProtectionGroupRunRequest) GetUdaParams() UdaProtectionRunParams {
	if o == nil || IsNil(o.UdaParams) {
		var ret UdaProtectionRunParams
		return ret
	}
	return *o.UdaParams
}

// GetUdaParamsOk returns a tuple with the UdaParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProtectionGroupRunRequest) GetUdaParamsOk() (*UdaProtectionRunParams, bool) {
	if o == nil || IsNil(o.UdaParams) {
		return nil, false
	}
	return o.UdaParams, true
}

// HasUdaParams returns a boolean if a field has been set.
func (o *CreateProtectionGroupRunRequest) HasUdaParams() bool {
	if o != nil && !IsNil(o.UdaParams) {
		return true
	}

	return false
}

// SetUdaParams gets a reference to the given UdaProtectionRunParams and assigns it to the UdaParams field.
func (o *CreateProtectionGroupRunRequest) SetUdaParams(v UdaProtectionRunParams) {
	o.UdaParams = &v
}

func (o CreateProtectionGroupRunRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProtectionGroupRunRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CassandraParams) {
		toSerialize["cassandraParams"] = o.CassandraParams
	}
	if !IsNil(o.Objects) {
		toSerialize["objects"] = o.Objects
	}
	toSerialize["runType"] = o.RunType.Get()
	if !IsNil(o.TargetsConfig) {
		toSerialize["targetsConfig"] = o.TargetsConfig
	}
	if !IsNil(o.UdaParams) {
		toSerialize["udaParams"] = o.UdaParams
	}
	return toSerialize, nil
}

func (o *CreateProtectionGroupRunRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"runType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateProtectionGroupRunRequest := _CreateProtectionGroupRunRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateProtectionGroupRunRequest)

	if err != nil {
		return err
	}

	*o = CreateProtectionGroupRunRequest(varCreateProtectionGroupRunRequest)

	return err
}

type NullableCreateProtectionGroupRunRequest struct {
	value *CreateProtectionGroupRunRequest
	isSet bool
}

func (v NullableCreateProtectionGroupRunRequest) Get() *CreateProtectionGroupRunRequest {
	return v.value
}

func (v *NullableCreateProtectionGroupRunRequest) Set(val *CreateProtectionGroupRunRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProtectionGroupRunRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProtectionGroupRunRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProtectionGroupRunRequest(val *CreateProtectionGroupRunRequest) *NullableCreateProtectionGroupRunRequest {
	return &NullableCreateProtectionGroupRunRequest{value: val, isSet: true}
}

func (v NullableCreateProtectionGroupRunRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProtectionGroupRunRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


