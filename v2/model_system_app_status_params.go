/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the SystemAppStatusParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemAppStatusParams{}

// SystemAppStatusParams Specifies the status of each system app on the cluster.
type SystemAppStatusParams struct {
	// Specifies the number of available replicas.
	AvailableReplicas *int32 `json:"availableReplicas,omitempty"`
	// Specifies the number of configured replicas.
	ConfiguredReplicas *int32 `json:"configuredReplicas,omitempty"`
	// Specifies the name of the system app.
	Name *string `json:"name,omitempty"`
	// Specifies the number of ready replicas.
	ReadyReplicas *int32 `json:"readyReplicas,omitempty"`
	// Specifies the service endpoint.
	ServiceEndpoint *string `json:"serviceEndpoint,omitempty"`
}

// NewSystemAppStatusParams instantiates a new SystemAppStatusParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemAppStatusParams() *SystemAppStatusParams {
	this := SystemAppStatusParams{}
	return &this
}

// NewSystemAppStatusParamsWithDefaults instantiates a new SystemAppStatusParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemAppStatusParamsWithDefaults() *SystemAppStatusParams {
	this := SystemAppStatusParams{}
	return &this
}

// GetAvailableReplicas returns the AvailableReplicas field value if set, zero value otherwise.
func (o *SystemAppStatusParams) GetAvailableReplicas() int32 {
	if o == nil || IsNil(o.AvailableReplicas) {
		var ret int32
		return ret
	}
	return *o.AvailableReplicas
}

// GetAvailableReplicasOk returns a tuple with the AvailableReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAppStatusParams) GetAvailableReplicasOk() (*int32, bool) {
	if o == nil || IsNil(o.AvailableReplicas) {
		return nil, false
	}
	return o.AvailableReplicas, true
}

// HasAvailableReplicas returns a boolean if a field has been set.
func (o *SystemAppStatusParams) HasAvailableReplicas() bool {
	if o != nil && !IsNil(o.AvailableReplicas) {
		return true
	}

	return false
}

// SetAvailableReplicas gets a reference to the given int32 and assigns it to the AvailableReplicas field.
func (o *SystemAppStatusParams) SetAvailableReplicas(v int32) {
	o.AvailableReplicas = &v
}

// GetConfiguredReplicas returns the ConfiguredReplicas field value if set, zero value otherwise.
func (o *SystemAppStatusParams) GetConfiguredReplicas() int32 {
	if o == nil || IsNil(o.ConfiguredReplicas) {
		var ret int32
		return ret
	}
	return *o.ConfiguredReplicas
}

// GetConfiguredReplicasOk returns a tuple with the ConfiguredReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAppStatusParams) GetConfiguredReplicasOk() (*int32, bool) {
	if o == nil || IsNil(o.ConfiguredReplicas) {
		return nil, false
	}
	return o.ConfiguredReplicas, true
}

// HasConfiguredReplicas returns a boolean if a field has been set.
func (o *SystemAppStatusParams) HasConfiguredReplicas() bool {
	if o != nil && !IsNil(o.ConfiguredReplicas) {
		return true
	}

	return false
}

// SetConfiguredReplicas gets a reference to the given int32 and assigns it to the ConfiguredReplicas field.
func (o *SystemAppStatusParams) SetConfiguredReplicas(v int32) {
	o.ConfiguredReplicas = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SystemAppStatusParams) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAppStatusParams) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SystemAppStatusParams) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SystemAppStatusParams) SetName(v string) {
	o.Name = &v
}

// GetReadyReplicas returns the ReadyReplicas field value if set, zero value otherwise.
func (o *SystemAppStatusParams) GetReadyReplicas() int32 {
	if o == nil || IsNil(o.ReadyReplicas) {
		var ret int32
		return ret
	}
	return *o.ReadyReplicas
}

// GetReadyReplicasOk returns a tuple with the ReadyReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAppStatusParams) GetReadyReplicasOk() (*int32, bool) {
	if o == nil || IsNil(o.ReadyReplicas) {
		return nil, false
	}
	return o.ReadyReplicas, true
}

// HasReadyReplicas returns a boolean if a field has been set.
func (o *SystemAppStatusParams) HasReadyReplicas() bool {
	if o != nil && !IsNil(o.ReadyReplicas) {
		return true
	}

	return false
}

// SetReadyReplicas gets a reference to the given int32 and assigns it to the ReadyReplicas field.
func (o *SystemAppStatusParams) SetReadyReplicas(v int32) {
	o.ReadyReplicas = &v
}

// GetServiceEndpoint returns the ServiceEndpoint field value if set, zero value otherwise.
func (o *SystemAppStatusParams) GetServiceEndpoint() string {
	if o == nil || IsNil(o.ServiceEndpoint) {
		var ret string
		return ret
	}
	return *o.ServiceEndpoint
}

// GetServiceEndpointOk returns a tuple with the ServiceEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAppStatusParams) GetServiceEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceEndpoint) {
		return nil, false
	}
	return o.ServiceEndpoint, true
}

// HasServiceEndpoint returns a boolean if a field has been set.
func (o *SystemAppStatusParams) HasServiceEndpoint() bool {
	if o != nil && !IsNil(o.ServiceEndpoint) {
		return true
	}

	return false
}

// SetServiceEndpoint gets a reference to the given string and assigns it to the ServiceEndpoint field.
func (o *SystemAppStatusParams) SetServiceEndpoint(v string) {
	o.ServiceEndpoint = &v
}

func (o SystemAppStatusParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemAppStatusParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvailableReplicas) {
		toSerialize["availableReplicas"] = o.AvailableReplicas
	}
	if !IsNil(o.ConfiguredReplicas) {
		toSerialize["configuredReplicas"] = o.ConfiguredReplicas
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ReadyReplicas) {
		toSerialize["readyReplicas"] = o.ReadyReplicas
	}
	if !IsNil(o.ServiceEndpoint) {
		toSerialize["serviceEndpoint"] = o.ServiceEndpoint
	}
	return toSerialize, nil
}

type NullableSystemAppStatusParams struct {
	value *SystemAppStatusParams
	isSet bool
}

func (v NullableSystemAppStatusParams) Get() *SystemAppStatusParams {
	return v.value
}

func (v *NullableSystemAppStatusParams) Set(val *SystemAppStatusParams) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemAppStatusParams) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemAppStatusParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemAppStatusParams(val *SystemAppStatusParams) *NullableSystemAppStatusParams {
	return &NullableSystemAppStatusParams{value: val, isSet: true}
}

func (v NullableSystemAppStatusParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemAppStatusParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


