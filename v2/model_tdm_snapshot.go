/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TdmSnapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TdmSnapshot{}

// TdmSnapshot Specifies the response params for a TDM snapshot.
type TdmSnapshot struct {
	// Specifies the label for the snapshot.
	Label NullableString `json:"label,omitempty"`
	// Specifies the time (in usecs from epoch) when the snapshot was created.
	CreatedAt NullableInt64 `json:"createdAt,omitempty"`
	// Specifies the details of the user, who created the snapshot. This will be null for snapshots, that are taken by system, such as a scheduler.
	CreatedByUser map[string]interface{} `json:"createdByUser,omitempty"`
	// Specifies the ID of the snapshot.
	Id NullableString `json:"id"`
	// Specifies whether the snapshot was taken automatically by the scheduler.
	IsAutomated NullableBool `json:"isAutomated,omitempty"`
	// Specifies the time (in usecs from epoch) when the snapshot was last updated.
	UpdatedAt NullableInt64 `json:"updatedAt,omitempty"`
	// Specifies the details of the user, who last updated the snapshot.
	UpdatedByUser map[string]interface{} `json:"updatedByUser,omitempty"`
}

type _TdmSnapshot TdmSnapshot

// NewTdmSnapshot instantiates a new TdmSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTdmSnapshot(id NullableString) *TdmSnapshot {
	this := TdmSnapshot{}
	this.Id = id
	return &this
}

// NewTdmSnapshotWithDefaults instantiates a new TdmSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTdmSnapshotWithDefaults() *TdmSnapshot {
	this := TdmSnapshot{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmSnapshot) GetLabel() string {
	if o == nil || IsNil(o.Label.Get()) {
		var ret string
		return ret
	}
	return *o.Label.Get()
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmSnapshot) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Label.Get(), o.Label.IsSet()
}

// HasLabel returns a boolean if a field has been set.
func (o *TdmSnapshot) HasLabel() bool {
	if o != nil && o.Label.IsSet() {
		return true
	}

	return false
}

// SetLabel gets a reference to the given NullableString and assigns it to the Label field.
func (o *TdmSnapshot) SetLabel(v string) {
	o.Label.Set(&v)
}
// SetLabelNil sets the value for Label to be an explicit nil
func (o *TdmSnapshot) SetLabelNil() {
	o.Label.Set(nil)
}

// UnsetLabel ensures that no value is present for Label, not even an explicit nil
func (o *TdmSnapshot) UnsetLabel() {
	o.Label.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmSnapshot) GetCreatedAt() int64 {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret int64
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmSnapshot) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TdmSnapshot) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableInt64 and assigns it to the CreatedAt field.
func (o *TdmSnapshot) SetCreatedAt(v int64) {
	o.CreatedAt.Set(&v)
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *TdmSnapshot) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *TdmSnapshot) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetCreatedByUser returns the CreatedByUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmSnapshot) GetCreatedByUser() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CreatedByUser
}

// GetCreatedByUserOk returns a tuple with the CreatedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmSnapshot) GetCreatedByUserOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CreatedByUser) {
		return map[string]interface{}{}, false
	}
	return o.CreatedByUser, true
}

// HasCreatedByUser returns a boolean if a field has been set.
func (o *TdmSnapshot) HasCreatedByUser() bool {
	if o != nil && !IsNil(o.CreatedByUser) {
		return true
	}

	return false
}

// SetCreatedByUser gets a reference to the given map[string]interface{} and assigns it to the CreatedByUser field.
func (o *TdmSnapshot) SetCreatedByUser(v map[string]interface{}) {
	o.CreatedByUser = v
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TdmSnapshot) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}

	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmSnapshot) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// SetId sets field value
func (o *TdmSnapshot) SetId(v string) {
	o.Id.Set(&v)
}

// GetIsAutomated returns the IsAutomated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmSnapshot) GetIsAutomated() bool {
	if o == nil || IsNil(o.IsAutomated.Get()) {
		var ret bool
		return ret
	}
	return *o.IsAutomated.Get()
}

// GetIsAutomatedOk returns a tuple with the IsAutomated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmSnapshot) GetIsAutomatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsAutomated.Get(), o.IsAutomated.IsSet()
}

// HasIsAutomated returns a boolean if a field has been set.
func (o *TdmSnapshot) HasIsAutomated() bool {
	if o != nil && o.IsAutomated.IsSet() {
		return true
	}

	return false
}

// SetIsAutomated gets a reference to the given NullableBool and assigns it to the IsAutomated field.
func (o *TdmSnapshot) SetIsAutomated(v bool) {
	o.IsAutomated.Set(&v)
}
// SetIsAutomatedNil sets the value for IsAutomated to be an explicit nil
func (o *TdmSnapshot) SetIsAutomatedNil() {
	o.IsAutomated.Set(nil)
}

// UnsetIsAutomated ensures that no value is present for IsAutomated, not even an explicit nil
func (o *TdmSnapshot) UnsetIsAutomated() {
	o.IsAutomated.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmSnapshot) GetUpdatedAt() int64 {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret int64
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmSnapshot) GetUpdatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TdmSnapshot) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableInt64 and assigns it to the UpdatedAt field.
func (o *TdmSnapshot) SetUpdatedAt(v int64) {
	o.UpdatedAt.Set(&v)
}
// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *TdmSnapshot) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *TdmSnapshot) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetUpdatedByUser returns the UpdatedByUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmSnapshot) GetUpdatedByUser() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.UpdatedByUser
}

// GetUpdatedByUserOk returns a tuple with the UpdatedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmSnapshot) GetUpdatedByUserOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.UpdatedByUser) {
		return map[string]interface{}{}, false
	}
	return o.UpdatedByUser, true
}

// HasUpdatedByUser returns a boolean if a field has been set.
func (o *TdmSnapshot) HasUpdatedByUser() bool {
	if o != nil && !IsNil(o.UpdatedByUser) {
		return true
	}

	return false
}

// SetUpdatedByUser gets a reference to the given map[string]interface{} and assigns it to the UpdatedByUser field.
func (o *TdmSnapshot) SetUpdatedByUser(v map[string]interface{}) {
	o.UpdatedByUser = v
}

func (o TdmSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TdmSnapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Label.IsSet() {
		toSerialize["label"] = o.Label.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["createdAt"] = o.CreatedAt.Get()
	}
	if o.CreatedByUser != nil {
		toSerialize["createdByUser"] = o.CreatedByUser
	}
	toSerialize["id"] = o.Id.Get()
	if o.IsAutomated.IsSet() {
		toSerialize["isAutomated"] = o.IsAutomated.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updatedAt"] = o.UpdatedAt.Get()
	}
	if o.UpdatedByUser != nil {
		toSerialize["updatedByUser"] = o.UpdatedByUser
	}
	return toSerialize, nil
}

func (o *TdmSnapshot) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTdmSnapshot := _TdmSnapshot{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTdmSnapshot)

	if err != nil {
		return err
	}

	*o = TdmSnapshot(varTdmSnapshot)

	return err
}

type NullableTdmSnapshot struct {
	value *TdmSnapshot
	isSet bool
}

func (v NullableTdmSnapshot) Get() *TdmSnapshot {
	return v.value
}

func (v *NullableTdmSnapshot) Set(val *TdmSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableTdmSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableTdmSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTdmSnapshot(val *TdmSnapshot) *NullableTdmSnapshot {
	return &NullableTdmSnapshot{value: val, isSet: true}
}

func (v NullableTdmSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTdmSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


