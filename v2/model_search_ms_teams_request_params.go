/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the SearchMsTeamsRequestParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchMsTeamsRequestParams{}

// SearchMsTeamsRequestParams Specifies the request params to search for Teams items.
type SearchMsTeamsRequestParams struct {
	// Specifies a list of teams files types. Only items within the given types will be returned.
	CategoryTypes []string `json:"categoryTypes,omitempty"`
	// Specifies the list of channel names to filter while doing search for files.
	ChannelNames []string `json:"channelNames,omitempty"`
	ChannelParams *O365TeamsChannelsSearchRequestParams `json:"channelParams,omitempty"`
	// Specifies the end time in Unix timestamp epoch in seconds when the item is created.
	CreationEndTimeSecs NullableInt64 `json:"creationEndTimeSecs,omitempty"`
	// Specifies the start time in Unix timestamp epoch in seconds when the item is created.
	CreationStartTimeSecs NullableInt64 `json:"creationStartTimeSecs,omitempty"`
	O365Params *O365SearchRequestParams `json:"o365Params,omitempty"`
	// Specifies the list of owner email ids to filter on owner of the item.
	OwnerNames []string `json:"ownerNames,omitempty"`
	// Specifies the search string to filter the items. User can specify a wildcard character '*' as a suffix to a string where all item names are matched with the prefix string.
	SearchString NullableString `json:"searchString,omitempty"`
	// Specifies the minimum size of the item in bytes.
	SizeBytesLowerLimit NullableInt64 `json:"sizeBytesLowerLimit,omitempty"`
	// Specifies the maximum size of the item in bytes.
	SizeBytesUpperLimit NullableInt64 `json:"sizeBytesUpperLimit,omitempty"`
	// Specifies a list of Teams item types. Only items within the given types will be returned.
	Types []string `json:"types,omitempty"`
}

// NewSearchMsTeamsRequestParams instantiates a new SearchMsTeamsRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchMsTeamsRequestParams() *SearchMsTeamsRequestParams {
	this := SearchMsTeamsRequestParams{}
	return &this
}

// NewSearchMsTeamsRequestParamsWithDefaults instantiates a new SearchMsTeamsRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchMsTeamsRequestParamsWithDefaults() *SearchMsTeamsRequestParams {
	this := SearchMsTeamsRequestParams{}
	return &this
}

// GetCategoryTypes returns the CategoryTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchMsTeamsRequestParams) GetCategoryTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.CategoryTypes
}

// GetCategoryTypesOk returns a tuple with the CategoryTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchMsTeamsRequestParams) GetCategoryTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.CategoryTypes) {
		return nil, false
	}
	return o.CategoryTypes, true
}

// HasCategoryTypes returns a boolean if a field has been set.
func (o *SearchMsTeamsRequestParams) HasCategoryTypes() bool {
	if o != nil && !IsNil(o.CategoryTypes) {
		return true
	}

	return false
}

// SetCategoryTypes gets a reference to the given []string and assigns it to the CategoryTypes field.
func (o *SearchMsTeamsRequestParams) SetCategoryTypes(v []string) {
	o.CategoryTypes = v
}

// GetChannelNames returns the ChannelNames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchMsTeamsRequestParams) GetChannelNames() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ChannelNames
}

// GetChannelNamesOk returns a tuple with the ChannelNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchMsTeamsRequestParams) GetChannelNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.ChannelNames) {
		return nil, false
	}
	return o.ChannelNames, true
}

// HasChannelNames returns a boolean if a field has been set.
func (o *SearchMsTeamsRequestParams) HasChannelNames() bool {
	if o != nil && !IsNil(o.ChannelNames) {
		return true
	}

	return false
}

// SetChannelNames gets a reference to the given []string and assigns it to the ChannelNames field.
func (o *SearchMsTeamsRequestParams) SetChannelNames(v []string) {
	o.ChannelNames = v
}

// GetChannelParams returns the ChannelParams field value if set, zero value otherwise.
func (o *SearchMsTeamsRequestParams) GetChannelParams() O365TeamsChannelsSearchRequestParams {
	if o == nil || IsNil(o.ChannelParams) {
		var ret O365TeamsChannelsSearchRequestParams
		return ret
	}
	return *o.ChannelParams
}

// GetChannelParamsOk returns a tuple with the ChannelParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchMsTeamsRequestParams) GetChannelParamsOk() (*O365TeamsChannelsSearchRequestParams, bool) {
	if o == nil || IsNil(o.ChannelParams) {
		return nil, false
	}
	return o.ChannelParams, true
}

// HasChannelParams returns a boolean if a field has been set.
func (o *SearchMsTeamsRequestParams) HasChannelParams() bool {
	if o != nil && !IsNil(o.ChannelParams) {
		return true
	}

	return false
}

// SetChannelParams gets a reference to the given O365TeamsChannelsSearchRequestParams and assigns it to the ChannelParams field.
func (o *SearchMsTeamsRequestParams) SetChannelParams(v O365TeamsChannelsSearchRequestParams) {
	o.ChannelParams = &v
}

// GetCreationEndTimeSecs returns the CreationEndTimeSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchMsTeamsRequestParams) GetCreationEndTimeSecs() int64 {
	if o == nil || IsNil(o.CreationEndTimeSecs.Get()) {
		var ret int64
		return ret
	}
	return *o.CreationEndTimeSecs.Get()
}

// GetCreationEndTimeSecsOk returns a tuple with the CreationEndTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchMsTeamsRequestParams) GetCreationEndTimeSecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreationEndTimeSecs.Get(), o.CreationEndTimeSecs.IsSet()
}

// HasCreationEndTimeSecs returns a boolean if a field has been set.
func (o *SearchMsTeamsRequestParams) HasCreationEndTimeSecs() bool {
	if o != nil && o.CreationEndTimeSecs.IsSet() {
		return true
	}

	return false
}

// SetCreationEndTimeSecs gets a reference to the given NullableInt64 and assigns it to the CreationEndTimeSecs field.
func (o *SearchMsTeamsRequestParams) SetCreationEndTimeSecs(v int64) {
	o.CreationEndTimeSecs.Set(&v)
}
// SetCreationEndTimeSecsNil sets the value for CreationEndTimeSecs to be an explicit nil
func (o *SearchMsTeamsRequestParams) SetCreationEndTimeSecsNil() {
	o.CreationEndTimeSecs.Set(nil)
}

// UnsetCreationEndTimeSecs ensures that no value is present for CreationEndTimeSecs, not even an explicit nil
func (o *SearchMsTeamsRequestParams) UnsetCreationEndTimeSecs() {
	o.CreationEndTimeSecs.Unset()
}

// GetCreationStartTimeSecs returns the CreationStartTimeSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchMsTeamsRequestParams) GetCreationStartTimeSecs() int64 {
	if o == nil || IsNil(o.CreationStartTimeSecs.Get()) {
		var ret int64
		return ret
	}
	return *o.CreationStartTimeSecs.Get()
}

// GetCreationStartTimeSecsOk returns a tuple with the CreationStartTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchMsTeamsRequestParams) GetCreationStartTimeSecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreationStartTimeSecs.Get(), o.CreationStartTimeSecs.IsSet()
}

// HasCreationStartTimeSecs returns a boolean if a field has been set.
func (o *SearchMsTeamsRequestParams) HasCreationStartTimeSecs() bool {
	if o != nil && o.CreationStartTimeSecs.IsSet() {
		return true
	}

	return false
}

// SetCreationStartTimeSecs gets a reference to the given NullableInt64 and assigns it to the CreationStartTimeSecs field.
func (o *SearchMsTeamsRequestParams) SetCreationStartTimeSecs(v int64) {
	o.CreationStartTimeSecs.Set(&v)
}
// SetCreationStartTimeSecsNil sets the value for CreationStartTimeSecs to be an explicit nil
func (o *SearchMsTeamsRequestParams) SetCreationStartTimeSecsNil() {
	o.CreationStartTimeSecs.Set(nil)
}

// UnsetCreationStartTimeSecs ensures that no value is present for CreationStartTimeSecs, not even an explicit nil
func (o *SearchMsTeamsRequestParams) UnsetCreationStartTimeSecs() {
	o.CreationStartTimeSecs.Unset()
}

// GetO365Params returns the O365Params field value if set, zero value otherwise.
func (o *SearchMsTeamsRequestParams) GetO365Params() O365SearchRequestParams {
	if o == nil || IsNil(o.O365Params) {
		var ret O365SearchRequestParams
		return ret
	}
	return *o.O365Params
}

// GetO365ParamsOk returns a tuple with the O365Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchMsTeamsRequestParams) GetO365ParamsOk() (*O365SearchRequestParams, bool) {
	if o == nil || IsNil(o.O365Params) {
		return nil, false
	}
	return o.O365Params, true
}

// HasO365Params returns a boolean if a field has been set.
func (o *SearchMsTeamsRequestParams) HasO365Params() bool {
	if o != nil && !IsNil(o.O365Params) {
		return true
	}

	return false
}

// SetO365Params gets a reference to the given O365SearchRequestParams and assigns it to the O365Params field.
func (o *SearchMsTeamsRequestParams) SetO365Params(v O365SearchRequestParams) {
	o.O365Params = &v
}

// GetOwnerNames returns the OwnerNames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchMsTeamsRequestParams) GetOwnerNames() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.OwnerNames
}

// GetOwnerNamesOk returns a tuple with the OwnerNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchMsTeamsRequestParams) GetOwnerNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.OwnerNames) {
		return nil, false
	}
	return o.OwnerNames, true
}

// HasOwnerNames returns a boolean if a field has been set.
func (o *SearchMsTeamsRequestParams) HasOwnerNames() bool {
	if o != nil && !IsNil(o.OwnerNames) {
		return true
	}

	return false
}

// SetOwnerNames gets a reference to the given []string and assigns it to the OwnerNames field.
func (o *SearchMsTeamsRequestParams) SetOwnerNames(v []string) {
	o.OwnerNames = v
}

// GetSearchString returns the SearchString field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchMsTeamsRequestParams) GetSearchString() string {
	if o == nil || IsNil(o.SearchString.Get()) {
		var ret string
		return ret
	}
	return *o.SearchString.Get()
}

// GetSearchStringOk returns a tuple with the SearchString field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchMsTeamsRequestParams) GetSearchStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SearchString.Get(), o.SearchString.IsSet()
}

// HasSearchString returns a boolean if a field has been set.
func (o *SearchMsTeamsRequestParams) HasSearchString() bool {
	if o != nil && o.SearchString.IsSet() {
		return true
	}

	return false
}

// SetSearchString gets a reference to the given NullableString and assigns it to the SearchString field.
func (o *SearchMsTeamsRequestParams) SetSearchString(v string) {
	o.SearchString.Set(&v)
}
// SetSearchStringNil sets the value for SearchString to be an explicit nil
func (o *SearchMsTeamsRequestParams) SetSearchStringNil() {
	o.SearchString.Set(nil)
}

// UnsetSearchString ensures that no value is present for SearchString, not even an explicit nil
func (o *SearchMsTeamsRequestParams) UnsetSearchString() {
	o.SearchString.Unset()
}

// GetSizeBytesLowerLimit returns the SizeBytesLowerLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchMsTeamsRequestParams) GetSizeBytesLowerLimit() int64 {
	if o == nil || IsNil(o.SizeBytesLowerLimit.Get()) {
		var ret int64
		return ret
	}
	return *o.SizeBytesLowerLimit.Get()
}

// GetSizeBytesLowerLimitOk returns a tuple with the SizeBytesLowerLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchMsTeamsRequestParams) GetSizeBytesLowerLimitOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SizeBytesLowerLimit.Get(), o.SizeBytesLowerLimit.IsSet()
}

// HasSizeBytesLowerLimit returns a boolean if a field has been set.
func (o *SearchMsTeamsRequestParams) HasSizeBytesLowerLimit() bool {
	if o != nil && o.SizeBytesLowerLimit.IsSet() {
		return true
	}

	return false
}

// SetSizeBytesLowerLimit gets a reference to the given NullableInt64 and assigns it to the SizeBytesLowerLimit field.
func (o *SearchMsTeamsRequestParams) SetSizeBytesLowerLimit(v int64) {
	o.SizeBytesLowerLimit.Set(&v)
}
// SetSizeBytesLowerLimitNil sets the value for SizeBytesLowerLimit to be an explicit nil
func (o *SearchMsTeamsRequestParams) SetSizeBytesLowerLimitNil() {
	o.SizeBytesLowerLimit.Set(nil)
}

// UnsetSizeBytesLowerLimit ensures that no value is present for SizeBytesLowerLimit, not even an explicit nil
func (o *SearchMsTeamsRequestParams) UnsetSizeBytesLowerLimit() {
	o.SizeBytesLowerLimit.Unset()
}

// GetSizeBytesUpperLimit returns the SizeBytesUpperLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchMsTeamsRequestParams) GetSizeBytesUpperLimit() int64 {
	if o == nil || IsNil(o.SizeBytesUpperLimit.Get()) {
		var ret int64
		return ret
	}
	return *o.SizeBytesUpperLimit.Get()
}

// GetSizeBytesUpperLimitOk returns a tuple with the SizeBytesUpperLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchMsTeamsRequestParams) GetSizeBytesUpperLimitOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SizeBytesUpperLimit.Get(), o.SizeBytesUpperLimit.IsSet()
}

// HasSizeBytesUpperLimit returns a boolean if a field has been set.
func (o *SearchMsTeamsRequestParams) HasSizeBytesUpperLimit() bool {
	if o != nil && o.SizeBytesUpperLimit.IsSet() {
		return true
	}

	return false
}

// SetSizeBytesUpperLimit gets a reference to the given NullableInt64 and assigns it to the SizeBytesUpperLimit field.
func (o *SearchMsTeamsRequestParams) SetSizeBytesUpperLimit(v int64) {
	o.SizeBytesUpperLimit.Set(&v)
}
// SetSizeBytesUpperLimitNil sets the value for SizeBytesUpperLimit to be an explicit nil
func (o *SearchMsTeamsRequestParams) SetSizeBytesUpperLimitNil() {
	o.SizeBytesUpperLimit.Set(nil)
}

// UnsetSizeBytesUpperLimit ensures that no value is present for SizeBytesUpperLimit, not even an explicit nil
func (o *SearchMsTeamsRequestParams) UnsetSizeBytesUpperLimit() {
	o.SizeBytesUpperLimit.Unset()
}

// GetTypes returns the Types field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchMsTeamsRequestParams) GetTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchMsTeamsRequestParams) GetTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.Types) {
		return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *SearchMsTeamsRequestParams) HasTypes() bool {
	if o != nil && !IsNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given []string and assigns it to the Types field.
func (o *SearchMsTeamsRequestParams) SetTypes(v []string) {
	o.Types = v
}

func (o SearchMsTeamsRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchMsTeamsRequestParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CategoryTypes != nil {
		toSerialize["categoryTypes"] = o.CategoryTypes
	}
	if o.ChannelNames != nil {
		toSerialize["channelNames"] = o.ChannelNames
	}
	if !IsNil(o.ChannelParams) {
		toSerialize["channelParams"] = o.ChannelParams
	}
	if o.CreationEndTimeSecs.IsSet() {
		toSerialize["creationEndTimeSecs"] = o.CreationEndTimeSecs.Get()
	}
	if o.CreationStartTimeSecs.IsSet() {
		toSerialize["creationStartTimeSecs"] = o.CreationStartTimeSecs.Get()
	}
	if !IsNil(o.O365Params) {
		toSerialize["o365Params"] = o.O365Params
	}
	if o.OwnerNames != nil {
		toSerialize["ownerNames"] = o.OwnerNames
	}
	if o.SearchString.IsSet() {
		toSerialize["searchString"] = o.SearchString.Get()
	}
	if o.SizeBytesLowerLimit.IsSet() {
		toSerialize["sizeBytesLowerLimit"] = o.SizeBytesLowerLimit.Get()
	}
	if o.SizeBytesUpperLimit.IsSet() {
		toSerialize["sizeBytesUpperLimit"] = o.SizeBytesUpperLimit.Get()
	}
	if o.Types != nil {
		toSerialize["types"] = o.Types
	}
	return toSerialize, nil
}

type NullableSearchMsTeamsRequestParams struct {
	value *SearchMsTeamsRequestParams
	isSet bool
}

func (v NullableSearchMsTeamsRequestParams) Get() *SearchMsTeamsRequestParams {
	return v.value
}

func (v *NullableSearchMsTeamsRequestParams) Set(val *SearchMsTeamsRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchMsTeamsRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchMsTeamsRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchMsTeamsRequestParams(val *SearchMsTeamsRequestParams) *NullableSearchMsTeamsRequestParams {
	return &NullableSearchMsTeamsRequestParams{value: val, isSet: true}
}

func (v NullableSearchMsTeamsRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchMsTeamsRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


