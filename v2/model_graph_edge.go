/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the GraphEdge type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GraphEdge{}

// GraphEdge Determines information about an edge in the graph.
type GraphEdge struct {
	// Specifies the aad specific edge information.
	AadParams map[string]interface{} `json:"aadParams,omitempty"`
}

// NewGraphEdge instantiates a new GraphEdge object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphEdge() *GraphEdge {
	this := GraphEdge{}
	return &this
}

// NewGraphEdgeWithDefaults instantiates a new GraphEdge object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphEdgeWithDefaults() *GraphEdge {
	this := GraphEdge{}
	return &this
}

// GetAadParams returns the AadParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GraphEdge) GetAadParams() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.AadParams
}

// GetAadParamsOk returns a tuple with the AadParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GraphEdge) GetAadParamsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AadParams) {
		return map[string]interface{}{}, false
	}
	return o.AadParams, true
}

// HasAadParams returns a boolean if a field has been set.
func (o *GraphEdge) HasAadParams() bool {
	if o != nil && !IsNil(o.AadParams) {
		return true
	}

	return false
}

// SetAadParams gets a reference to the given map[string]interface{} and assigns it to the AadParams field.
func (o *GraphEdge) SetAadParams(v map[string]interface{}) {
	o.AadParams = v
}

func (o GraphEdge) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GraphEdge) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AadParams != nil {
		toSerialize["aadParams"] = o.AadParams
	}
	return toSerialize, nil
}

type NullableGraphEdge struct {
	value *GraphEdge
	isSet bool
}

func (v NullableGraphEdge) Get() *GraphEdge {
	return v.value
}

func (v *NullableGraphEdge) Set(val *GraphEdge) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphEdge) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphEdge) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphEdge(val *GraphEdge) *NullableGraphEdge {
	return &NullableGraphEdge{value: val, isSet: true}
}

func (v NullableGraphEdge) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphEdge) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


