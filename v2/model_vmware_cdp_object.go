/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the VmwareCdpObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VmwareCdpObject{}

// VmwareCdpObject Specifies the VMware specific CDP object details.
type VmwareCdpObject struct {
	// Specifies if re-enabling CDP is allowed or not through UI without any job or policy update through API.
	AllowReEnableCdp NullableBool `json:"allowReEnableCdp,omitempty"`
	// Specifies whether CDP is currently active or not. CDP might have been active on this object before, but it might not be anymore.
	CdpEnabled NullableBool `json:"cdpEnabled,omitempty"`
	LastRunInfo *CdpObjectLastRunInfo `json:"lastRunInfo,omitempty"`
	// Specifies the protection group id to which this CDP object belongs.
	ProtectionGroupId NullableString `json:"protectionGroupId,omitempty"`
	// Specifies the error message from the guardrails info from cdp state if any.
	GuardrailsErrorMessage NullableString `json:"guardrailsErrorMessage,omitempty"`
	// Specifies the error message related to IO filter if there is any.
	IoFilterErrorMessage NullableString `json:"ioFilterErrorMessage,omitempty"`
	// Specifies the state of CDP IO filter. CDP IO filter is an agent which will be installed on the object for performing continuous backup. <br> 1. 'kNotInstalled' specifies that CDP is enabled on this object but filter is not installed. <br> 2. 'kInstallFilterInProgress' specifies that IO filter installation is triggered and in progress. <br> 3. 'kFilterInstalledIOInactive' specifies that IO filter is installed but IO streaming is disabled due to missing backup or explicitly disabled by the user. <br> 4. 'kIOActivationInProgress' specifies that IO filter is activated to start streaming. <br> 5. 'kIOActive' specifies that filter is attached to the object and started streaming. <br> 6. 'kIODeactivationInProgress' specifies that deactivation has been initiated to stop the IO streaming. <br> 7. 'kUninstallFilterInProgress' specifies that uninstallation of IO filter is in progress.
	IoFilterStatus NullableString `json:"ioFilterStatus,omitempty"`
	// Specifies the error message from the cdp pre-processing stage if any.
	PreProcessingErrorMessage NullableString `json:"preProcessingErrorMessage,omitempty"`
}

// NewVmwareCdpObject instantiates a new VmwareCdpObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmwareCdpObject() *VmwareCdpObject {
	this := VmwareCdpObject{}
	return &this
}

// NewVmwareCdpObjectWithDefaults instantiates a new VmwareCdpObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmwareCdpObjectWithDefaults() *VmwareCdpObject {
	this := VmwareCdpObject{}
	return &this
}

// GetAllowReEnableCdp returns the AllowReEnableCdp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareCdpObject) GetAllowReEnableCdp() bool {
	if o == nil || IsNil(o.AllowReEnableCdp.Get()) {
		var ret bool
		return ret
	}
	return *o.AllowReEnableCdp.Get()
}

// GetAllowReEnableCdpOk returns a tuple with the AllowReEnableCdp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareCdpObject) GetAllowReEnableCdpOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowReEnableCdp.Get(), o.AllowReEnableCdp.IsSet()
}

// HasAllowReEnableCdp returns a boolean if a field has been set.
func (o *VmwareCdpObject) HasAllowReEnableCdp() bool {
	if o != nil && o.AllowReEnableCdp.IsSet() {
		return true
	}

	return false
}

// SetAllowReEnableCdp gets a reference to the given NullableBool and assigns it to the AllowReEnableCdp field.
func (o *VmwareCdpObject) SetAllowReEnableCdp(v bool) {
	o.AllowReEnableCdp.Set(&v)
}
// SetAllowReEnableCdpNil sets the value for AllowReEnableCdp to be an explicit nil
func (o *VmwareCdpObject) SetAllowReEnableCdpNil() {
	o.AllowReEnableCdp.Set(nil)
}

// UnsetAllowReEnableCdp ensures that no value is present for AllowReEnableCdp, not even an explicit nil
func (o *VmwareCdpObject) UnsetAllowReEnableCdp() {
	o.AllowReEnableCdp.Unset()
}

// GetCdpEnabled returns the CdpEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareCdpObject) GetCdpEnabled() bool {
	if o == nil || IsNil(o.CdpEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.CdpEnabled.Get()
}

// GetCdpEnabledOk returns a tuple with the CdpEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareCdpObject) GetCdpEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CdpEnabled.Get(), o.CdpEnabled.IsSet()
}

// HasCdpEnabled returns a boolean if a field has been set.
func (o *VmwareCdpObject) HasCdpEnabled() bool {
	if o != nil && o.CdpEnabled.IsSet() {
		return true
	}

	return false
}

// SetCdpEnabled gets a reference to the given NullableBool and assigns it to the CdpEnabled field.
func (o *VmwareCdpObject) SetCdpEnabled(v bool) {
	o.CdpEnabled.Set(&v)
}
// SetCdpEnabledNil sets the value for CdpEnabled to be an explicit nil
func (o *VmwareCdpObject) SetCdpEnabledNil() {
	o.CdpEnabled.Set(nil)
}

// UnsetCdpEnabled ensures that no value is present for CdpEnabled, not even an explicit nil
func (o *VmwareCdpObject) UnsetCdpEnabled() {
	o.CdpEnabled.Unset()
}

// GetLastRunInfo returns the LastRunInfo field value if set, zero value otherwise.
func (o *VmwareCdpObject) GetLastRunInfo() CdpObjectLastRunInfo {
	if o == nil || IsNil(o.LastRunInfo) {
		var ret CdpObjectLastRunInfo
		return ret
	}
	return *o.LastRunInfo
}

// GetLastRunInfoOk returns a tuple with the LastRunInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmwareCdpObject) GetLastRunInfoOk() (*CdpObjectLastRunInfo, bool) {
	if o == nil || IsNil(o.LastRunInfo) {
		return nil, false
	}
	return o.LastRunInfo, true
}

// HasLastRunInfo returns a boolean if a field has been set.
func (o *VmwareCdpObject) HasLastRunInfo() bool {
	if o != nil && !IsNil(o.LastRunInfo) {
		return true
	}

	return false
}

// SetLastRunInfo gets a reference to the given CdpObjectLastRunInfo and assigns it to the LastRunInfo field.
func (o *VmwareCdpObject) SetLastRunInfo(v CdpObjectLastRunInfo) {
	o.LastRunInfo = &v
}

// GetProtectionGroupId returns the ProtectionGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareCdpObject) GetProtectionGroupId() string {
	if o == nil || IsNil(o.ProtectionGroupId.Get()) {
		var ret string
		return ret
	}
	return *o.ProtectionGroupId.Get()
}

// GetProtectionGroupIdOk returns a tuple with the ProtectionGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareCdpObject) GetProtectionGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProtectionGroupId.Get(), o.ProtectionGroupId.IsSet()
}

// HasProtectionGroupId returns a boolean if a field has been set.
func (o *VmwareCdpObject) HasProtectionGroupId() bool {
	if o != nil && o.ProtectionGroupId.IsSet() {
		return true
	}

	return false
}

// SetProtectionGroupId gets a reference to the given NullableString and assigns it to the ProtectionGroupId field.
func (o *VmwareCdpObject) SetProtectionGroupId(v string) {
	o.ProtectionGroupId.Set(&v)
}
// SetProtectionGroupIdNil sets the value for ProtectionGroupId to be an explicit nil
func (o *VmwareCdpObject) SetProtectionGroupIdNil() {
	o.ProtectionGroupId.Set(nil)
}

// UnsetProtectionGroupId ensures that no value is present for ProtectionGroupId, not even an explicit nil
func (o *VmwareCdpObject) UnsetProtectionGroupId() {
	o.ProtectionGroupId.Unset()
}

// GetGuardrailsErrorMessage returns the GuardrailsErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareCdpObject) GetGuardrailsErrorMessage() string {
	if o == nil || IsNil(o.GuardrailsErrorMessage.Get()) {
		var ret string
		return ret
	}
	return *o.GuardrailsErrorMessage.Get()
}

// GetGuardrailsErrorMessageOk returns a tuple with the GuardrailsErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareCdpObject) GetGuardrailsErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GuardrailsErrorMessage.Get(), o.GuardrailsErrorMessage.IsSet()
}

// HasGuardrailsErrorMessage returns a boolean if a field has been set.
func (o *VmwareCdpObject) HasGuardrailsErrorMessage() bool {
	if o != nil && o.GuardrailsErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetGuardrailsErrorMessage gets a reference to the given NullableString and assigns it to the GuardrailsErrorMessage field.
func (o *VmwareCdpObject) SetGuardrailsErrorMessage(v string) {
	o.GuardrailsErrorMessage.Set(&v)
}
// SetGuardrailsErrorMessageNil sets the value for GuardrailsErrorMessage to be an explicit nil
func (o *VmwareCdpObject) SetGuardrailsErrorMessageNil() {
	o.GuardrailsErrorMessage.Set(nil)
}

// UnsetGuardrailsErrorMessage ensures that no value is present for GuardrailsErrorMessage, not even an explicit nil
func (o *VmwareCdpObject) UnsetGuardrailsErrorMessage() {
	o.GuardrailsErrorMessage.Unset()
}

// GetIoFilterErrorMessage returns the IoFilterErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareCdpObject) GetIoFilterErrorMessage() string {
	if o == nil || IsNil(o.IoFilterErrorMessage.Get()) {
		var ret string
		return ret
	}
	return *o.IoFilterErrorMessage.Get()
}

// GetIoFilterErrorMessageOk returns a tuple with the IoFilterErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareCdpObject) GetIoFilterErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IoFilterErrorMessage.Get(), o.IoFilterErrorMessage.IsSet()
}

// HasIoFilterErrorMessage returns a boolean if a field has been set.
func (o *VmwareCdpObject) HasIoFilterErrorMessage() bool {
	if o != nil && o.IoFilterErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetIoFilterErrorMessage gets a reference to the given NullableString and assigns it to the IoFilterErrorMessage field.
func (o *VmwareCdpObject) SetIoFilterErrorMessage(v string) {
	o.IoFilterErrorMessage.Set(&v)
}
// SetIoFilterErrorMessageNil sets the value for IoFilterErrorMessage to be an explicit nil
func (o *VmwareCdpObject) SetIoFilterErrorMessageNil() {
	o.IoFilterErrorMessage.Set(nil)
}

// UnsetIoFilterErrorMessage ensures that no value is present for IoFilterErrorMessage, not even an explicit nil
func (o *VmwareCdpObject) UnsetIoFilterErrorMessage() {
	o.IoFilterErrorMessage.Unset()
}

// GetIoFilterStatus returns the IoFilterStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareCdpObject) GetIoFilterStatus() string {
	if o == nil || IsNil(o.IoFilterStatus.Get()) {
		var ret string
		return ret
	}
	return *o.IoFilterStatus.Get()
}

// GetIoFilterStatusOk returns a tuple with the IoFilterStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareCdpObject) GetIoFilterStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IoFilterStatus.Get(), o.IoFilterStatus.IsSet()
}

// HasIoFilterStatus returns a boolean if a field has been set.
func (o *VmwareCdpObject) HasIoFilterStatus() bool {
	if o != nil && o.IoFilterStatus.IsSet() {
		return true
	}

	return false
}

// SetIoFilterStatus gets a reference to the given NullableString and assigns it to the IoFilterStatus field.
func (o *VmwareCdpObject) SetIoFilterStatus(v string) {
	o.IoFilterStatus.Set(&v)
}
// SetIoFilterStatusNil sets the value for IoFilterStatus to be an explicit nil
func (o *VmwareCdpObject) SetIoFilterStatusNil() {
	o.IoFilterStatus.Set(nil)
}

// UnsetIoFilterStatus ensures that no value is present for IoFilterStatus, not even an explicit nil
func (o *VmwareCdpObject) UnsetIoFilterStatus() {
	o.IoFilterStatus.Unset()
}

// GetPreProcessingErrorMessage returns the PreProcessingErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareCdpObject) GetPreProcessingErrorMessage() string {
	if o == nil || IsNil(o.PreProcessingErrorMessage.Get()) {
		var ret string
		return ret
	}
	return *o.PreProcessingErrorMessage.Get()
}

// GetPreProcessingErrorMessageOk returns a tuple with the PreProcessingErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareCdpObject) GetPreProcessingErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PreProcessingErrorMessage.Get(), o.PreProcessingErrorMessage.IsSet()
}

// HasPreProcessingErrorMessage returns a boolean if a field has been set.
func (o *VmwareCdpObject) HasPreProcessingErrorMessage() bool {
	if o != nil && o.PreProcessingErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetPreProcessingErrorMessage gets a reference to the given NullableString and assigns it to the PreProcessingErrorMessage field.
func (o *VmwareCdpObject) SetPreProcessingErrorMessage(v string) {
	o.PreProcessingErrorMessage.Set(&v)
}
// SetPreProcessingErrorMessageNil sets the value for PreProcessingErrorMessage to be an explicit nil
func (o *VmwareCdpObject) SetPreProcessingErrorMessageNil() {
	o.PreProcessingErrorMessage.Set(nil)
}

// UnsetPreProcessingErrorMessage ensures that no value is present for PreProcessingErrorMessage, not even an explicit nil
func (o *VmwareCdpObject) UnsetPreProcessingErrorMessage() {
	o.PreProcessingErrorMessage.Unset()
}

func (o VmwareCdpObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VmwareCdpObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowReEnableCdp.IsSet() {
		toSerialize["allowReEnableCdp"] = o.AllowReEnableCdp.Get()
	}
	if o.CdpEnabled.IsSet() {
		toSerialize["cdpEnabled"] = o.CdpEnabled.Get()
	}
	if !IsNil(o.LastRunInfo) {
		toSerialize["lastRunInfo"] = o.LastRunInfo
	}
	if o.ProtectionGroupId.IsSet() {
		toSerialize["protectionGroupId"] = o.ProtectionGroupId.Get()
	}
	if o.GuardrailsErrorMessage.IsSet() {
		toSerialize["guardrailsErrorMessage"] = o.GuardrailsErrorMessage.Get()
	}
	if o.IoFilterErrorMessage.IsSet() {
		toSerialize["ioFilterErrorMessage"] = o.IoFilterErrorMessage.Get()
	}
	if o.IoFilterStatus.IsSet() {
		toSerialize["ioFilterStatus"] = o.IoFilterStatus.Get()
	}
	if o.PreProcessingErrorMessage.IsSet() {
		toSerialize["preProcessingErrorMessage"] = o.PreProcessingErrorMessage.Get()
	}
	return toSerialize, nil
}

type NullableVmwareCdpObject struct {
	value *VmwareCdpObject
	isSet bool
}

func (v NullableVmwareCdpObject) Get() *VmwareCdpObject {
	return v.value
}

func (v *NullableVmwareCdpObject) Set(val *VmwareCdpObject) {
	v.value = val
	v.isSet = true
}

func (v NullableVmwareCdpObject) IsSet() bool {
	return v.isSet
}

func (v *NullableVmwareCdpObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmwareCdpObject(val *VmwareCdpObject) *NullableVmwareCdpObject {
	return &NullableVmwareCdpObject{value: val, isSet: true}
}

func (v NullableVmwareCdpObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmwareCdpObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


