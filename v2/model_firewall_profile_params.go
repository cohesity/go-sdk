/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FirewallProfileParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FirewallProfileParams{}

// FirewallProfileParams Specifies the firewall profile & their attachments.
type FirewallProfileParams struct {
	// Specifies the action.
	Action NullableString `json:"action"`
	// Specifies a description for the profile attachments.
	Description NullableString `json:"description,omitempty"`
	// Specifies the packet direction settings.
	Direction NullableString `json:"direction,omitempty"`
	// Specifies the network interface groups.
	InterfaceGroups []string `json:"interfaceGroups,omitempty"`
	// Specifies the name of the profile.
	Name NullableString `json:"name"`
	// Specifies the port along with the protocol settings.
	Ports []string `json:"ports,omitempty"`
	// Specifies the subnets.
	Subnets []string `json:"subnets,omitempty"`
}

type _FirewallProfileParams FirewallProfileParams

// NewFirewallProfileParams instantiates a new FirewallProfileParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallProfileParams(action NullableString, name NullableString) *FirewallProfileParams {
	this := FirewallProfileParams{}
	this.Action = action
	this.Name = name
	return &this
}

// NewFirewallProfileParamsWithDefaults instantiates a new FirewallProfileParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallProfileParamsWithDefaults() *FirewallProfileParams {
	this := FirewallProfileParams{}
	return &this
}

// GetAction returns the Action field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FirewallProfileParams) GetAction() string {
	if o == nil || o.Action.Get() == nil {
		var ret string
		return ret
	}

	return *o.Action.Get()
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FirewallProfileParams) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Action.Get(), o.Action.IsSet()
}

// SetAction sets field value
func (o *FirewallProfileParams) SetAction(v string) {
	o.Action.Set(&v)
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FirewallProfileParams) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FirewallProfileParams) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *FirewallProfileParams) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *FirewallProfileParams) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *FirewallProfileParams) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *FirewallProfileParams) UnsetDescription() {
	o.Description.Unset()
}

// GetDirection returns the Direction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FirewallProfileParams) GetDirection() string {
	if o == nil || IsNil(o.Direction.Get()) {
		var ret string
		return ret
	}
	return *o.Direction.Get()
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FirewallProfileParams) GetDirectionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Direction.Get(), o.Direction.IsSet()
}

// HasDirection returns a boolean if a field has been set.
func (o *FirewallProfileParams) HasDirection() bool {
	if o != nil && o.Direction.IsSet() {
		return true
	}

	return false
}

// SetDirection gets a reference to the given NullableString and assigns it to the Direction field.
func (o *FirewallProfileParams) SetDirection(v string) {
	o.Direction.Set(&v)
}
// SetDirectionNil sets the value for Direction to be an explicit nil
func (o *FirewallProfileParams) SetDirectionNil() {
	o.Direction.Set(nil)
}

// UnsetDirection ensures that no value is present for Direction, not even an explicit nil
func (o *FirewallProfileParams) UnsetDirection() {
	o.Direction.Unset()
}

// GetInterfaceGroups returns the InterfaceGroups field value if set, zero value otherwise.
func (o *FirewallProfileParams) GetInterfaceGroups() []string {
	if o == nil || IsNil(o.InterfaceGroups) {
		var ret []string
		return ret
	}
	return o.InterfaceGroups
}

// GetInterfaceGroupsOk returns a tuple with the InterfaceGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallProfileParams) GetInterfaceGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.InterfaceGroups) {
		return nil, false
	}
	return o.InterfaceGroups, true
}

// HasInterfaceGroups returns a boolean if a field has been set.
func (o *FirewallProfileParams) HasInterfaceGroups() bool {
	if o != nil && !IsNil(o.InterfaceGroups) {
		return true
	}

	return false
}

// SetInterfaceGroups gets a reference to the given []string and assigns it to the InterfaceGroups field.
func (o *FirewallProfileParams) SetInterfaceGroups(v []string) {
	o.InterfaceGroups = v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FirewallProfileParams) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FirewallProfileParams) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *FirewallProfileParams) SetName(v string) {
	o.Name.Set(&v)
}

// GetPorts returns the Ports field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FirewallProfileParams) GetPorts() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FirewallProfileParams) GetPortsOk() ([]string, bool) {
	if o == nil || IsNil(o.Ports) {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *FirewallProfileParams) HasPorts() bool {
	if o != nil && !IsNil(o.Ports) {
		return true
	}

	return false
}

// SetPorts gets a reference to the given []string and assigns it to the Ports field.
func (o *FirewallProfileParams) SetPorts(v []string) {
	o.Ports = v
}

// GetSubnets returns the Subnets field value if set, zero value otherwise.
func (o *FirewallProfileParams) GetSubnets() []string {
	if o == nil || IsNil(o.Subnets) {
		var ret []string
		return ret
	}
	return o.Subnets
}

// GetSubnetsOk returns a tuple with the Subnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallProfileParams) GetSubnetsOk() ([]string, bool) {
	if o == nil || IsNil(o.Subnets) {
		return nil, false
	}
	return o.Subnets, true
}

// HasSubnets returns a boolean if a field has been set.
func (o *FirewallProfileParams) HasSubnets() bool {
	if o != nil && !IsNil(o.Subnets) {
		return true
	}

	return false
}

// SetSubnets gets a reference to the given []string and assigns it to the Subnets field.
func (o *FirewallProfileParams) SetSubnets(v []string) {
	o.Subnets = v
}

func (o FirewallProfileParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FirewallProfileParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action.Get()
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Direction.IsSet() {
		toSerialize["direction"] = o.Direction.Get()
	}
	if !IsNil(o.InterfaceGroups) {
		toSerialize["interfaceGroups"] = o.InterfaceGroups
	}
	toSerialize["name"] = o.Name.Get()
	if o.Ports != nil {
		toSerialize["ports"] = o.Ports
	}
	if !IsNil(o.Subnets) {
		toSerialize["subnets"] = o.Subnets
	}
	return toSerialize, nil
}

func (o *FirewallProfileParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFirewallProfileParams := _FirewallProfileParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFirewallProfileParams)

	if err != nil {
		return err
	}

	*o = FirewallProfileParams(varFirewallProfileParams)

	return err
}

type NullableFirewallProfileParams struct {
	value *FirewallProfileParams
	isSet bool
}

func (v NullableFirewallProfileParams) Get() *FirewallProfileParams {
	return v.value
}

func (v *NullableFirewallProfileParams) Set(val *FirewallProfileParams) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallProfileParams) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallProfileParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallProfileParams(val *FirewallProfileParams) *NullableFirewallProfileParams {
	return &NullableFirewallProfileParams{value: val, isSet: true}
}

func (v NullableFirewallProfileParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallProfileParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


