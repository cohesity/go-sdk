/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ConstructMetaInfoParamsSfdcParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConstructMetaInfoParamsSfdcParams{}

// ConstructMetaInfoParamsSfdcParams Specifies params to construct list of dependent objects.
type ConstructMetaInfoParamsSfdcParams struct {
	// Specifies the type of meta info to fetch for salesforce object.
	MetaInfoType NullableString `json:"metaInfoType"`
	// Specifies the name of the object.
	ObjectName NullableString `json:"objectName,omitempty"`
}

type _ConstructMetaInfoParamsSfdcParams ConstructMetaInfoParamsSfdcParams

// NewConstructMetaInfoParamsSfdcParams instantiates a new ConstructMetaInfoParamsSfdcParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConstructMetaInfoParamsSfdcParams(metaInfoType NullableString) *ConstructMetaInfoParamsSfdcParams {
	this := ConstructMetaInfoParamsSfdcParams{}
	this.MetaInfoType = metaInfoType
	return &this
}

// NewConstructMetaInfoParamsSfdcParamsWithDefaults instantiates a new ConstructMetaInfoParamsSfdcParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConstructMetaInfoParamsSfdcParamsWithDefaults() *ConstructMetaInfoParamsSfdcParams {
	this := ConstructMetaInfoParamsSfdcParams{}
	return &this
}

// GetMetaInfoType returns the MetaInfoType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ConstructMetaInfoParamsSfdcParams) GetMetaInfoType() string {
	if o == nil || o.MetaInfoType.Get() == nil {
		var ret string
		return ret
	}

	return *o.MetaInfoType.Get()
}

// GetMetaInfoTypeOk returns a tuple with the MetaInfoType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructMetaInfoParamsSfdcParams) GetMetaInfoTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetaInfoType.Get(), o.MetaInfoType.IsSet()
}

// SetMetaInfoType sets field value
func (o *ConstructMetaInfoParamsSfdcParams) SetMetaInfoType(v string) {
	o.MetaInfoType.Set(&v)
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConstructMetaInfoParamsSfdcParams) GetObjectName() string {
	if o == nil || IsNil(o.ObjectName.Get()) {
		var ret string
		return ret
	}
	return *o.ObjectName.Get()
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructMetaInfoParamsSfdcParams) GetObjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectName.Get(), o.ObjectName.IsSet()
}

// HasObjectName returns a boolean if a field has been set.
func (o *ConstructMetaInfoParamsSfdcParams) HasObjectName() bool {
	if o != nil && o.ObjectName.IsSet() {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given NullableString and assigns it to the ObjectName field.
func (o *ConstructMetaInfoParamsSfdcParams) SetObjectName(v string) {
	o.ObjectName.Set(&v)
}
// SetObjectNameNil sets the value for ObjectName to be an explicit nil
func (o *ConstructMetaInfoParamsSfdcParams) SetObjectNameNil() {
	o.ObjectName.Set(nil)
}

// UnsetObjectName ensures that no value is present for ObjectName, not even an explicit nil
func (o *ConstructMetaInfoParamsSfdcParams) UnsetObjectName() {
	o.ObjectName.Unset()
}

func (o ConstructMetaInfoParamsSfdcParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConstructMetaInfoParamsSfdcParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["metaInfoType"] = o.MetaInfoType.Get()
	if o.ObjectName.IsSet() {
		toSerialize["objectName"] = o.ObjectName.Get()
	}
	return toSerialize, nil
}

func (o *ConstructMetaInfoParamsSfdcParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"metaInfoType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConstructMetaInfoParamsSfdcParams := _ConstructMetaInfoParamsSfdcParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConstructMetaInfoParamsSfdcParams)

	if err != nil {
		return err
	}

	*o = ConstructMetaInfoParamsSfdcParams(varConstructMetaInfoParamsSfdcParams)

	return err
}

type NullableConstructMetaInfoParamsSfdcParams struct {
	value *ConstructMetaInfoParamsSfdcParams
	isSet bool
}

func (v NullableConstructMetaInfoParamsSfdcParams) Get() *ConstructMetaInfoParamsSfdcParams {
	return v.value
}

func (v *NullableConstructMetaInfoParamsSfdcParams) Set(val *ConstructMetaInfoParamsSfdcParams) {
	v.value = val
	v.isSet = true
}

func (v NullableConstructMetaInfoParamsSfdcParams) IsSet() bool {
	return v.isSet
}

func (v *NullableConstructMetaInfoParamsSfdcParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConstructMetaInfoParamsSfdcParams(val *ConstructMetaInfoParamsSfdcParams) *NullableConstructMetaInfoParamsSfdcParams {
	return &NullableConstructMetaInfoParamsSfdcParams{value: val, isSet: true}
}

func (v NullableConstructMetaInfoParamsSfdcParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConstructMetaInfoParamsSfdcParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


