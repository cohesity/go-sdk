/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ConstructMetaInfoRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConstructMetaInfoRequest{}

// ConstructMetaInfoRequest Params to construct meta info
type ConstructMetaInfoRequest struct {
	// Specifies the environment type of the Protection group
	Environment NullableString `json:"environment"`
	OracleParams *ConstructMetaInfoParamsOracleParams `json:"oracleParams,omitempty"`
	SfdcParams *ConstructMetaInfoParamsSfdcParams `json:"sfdcParams,omitempty"`
}

type _ConstructMetaInfoRequest ConstructMetaInfoRequest

// NewConstructMetaInfoRequest instantiates a new ConstructMetaInfoRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConstructMetaInfoRequest(environment NullableString) *ConstructMetaInfoRequest {
	this := ConstructMetaInfoRequest{}
	this.Environment = environment
	return &this
}

// NewConstructMetaInfoRequestWithDefaults instantiates a new ConstructMetaInfoRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConstructMetaInfoRequestWithDefaults() *ConstructMetaInfoRequest {
	this := ConstructMetaInfoRequest{}
	return &this
}

// GetEnvironment returns the Environment field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ConstructMetaInfoRequest) GetEnvironment() string {
	if o == nil || o.Environment.Get() == nil {
		var ret string
		return ret
	}

	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructMetaInfoRequest) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// SetEnvironment sets field value
func (o *ConstructMetaInfoRequest) SetEnvironment(v string) {
	o.Environment.Set(&v)
}

// GetOracleParams returns the OracleParams field value if set, zero value otherwise.
func (o *ConstructMetaInfoRequest) GetOracleParams() ConstructMetaInfoParamsOracleParams {
	if o == nil || IsNil(o.OracleParams) {
		var ret ConstructMetaInfoParamsOracleParams
		return ret
	}
	return *o.OracleParams
}

// GetOracleParamsOk returns a tuple with the OracleParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstructMetaInfoRequest) GetOracleParamsOk() (*ConstructMetaInfoParamsOracleParams, bool) {
	if o == nil || IsNil(o.OracleParams) {
		return nil, false
	}
	return o.OracleParams, true
}

// HasOracleParams returns a boolean if a field has been set.
func (o *ConstructMetaInfoRequest) HasOracleParams() bool {
	if o != nil && !IsNil(o.OracleParams) {
		return true
	}

	return false
}

// SetOracleParams gets a reference to the given ConstructMetaInfoParamsOracleParams and assigns it to the OracleParams field.
func (o *ConstructMetaInfoRequest) SetOracleParams(v ConstructMetaInfoParamsOracleParams) {
	o.OracleParams = &v
}

// GetSfdcParams returns the SfdcParams field value if set, zero value otherwise.
func (o *ConstructMetaInfoRequest) GetSfdcParams() ConstructMetaInfoParamsSfdcParams {
	if o == nil || IsNil(o.SfdcParams) {
		var ret ConstructMetaInfoParamsSfdcParams
		return ret
	}
	return *o.SfdcParams
}

// GetSfdcParamsOk returns a tuple with the SfdcParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstructMetaInfoRequest) GetSfdcParamsOk() (*ConstructMetaInfoParamsSfdcParams, bool) {
	if o == nil || IsNil(o.SfdcParams) {
		return nil, false
	}
	return o.SfdcParams, true
}

// HasSfdcParams returns a boolean if a field has been set.
func (o *ConstructMetaInfoRequest) HasSfdcParams() bool {
	if o != nil && !IsNil(o.SfdcParams) {
		return true
	}

	return false
}

// SetSfdcParams gets a reference to the given ConstructMetaInfoParamsSfdcParams and assigns it to the SfdcParams field.
func (o *ConstructMetaInfoRequest) SetSfdcParams(v ConstructMetaInfoParamsSfdcParams) {
	o.SfdcParams = &v
}

func (o ConstructMetaInfoRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConstructMetaInfoRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["environment"] = o.Environment.Get()
	if !IsNil(o.OracleParams) {
		toSerialize["oracleParams"] = o.OracleParams
	}
	if !IsNil(o.SfdcParams) {
		toSerialize["sfdcParams"] = o.SfdcParams
	}
	return toSerialize, nil
}

func (o *ConstructMetaInfoRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"environment",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConstructMetaInfoRequest := _ConstructMetaInfoRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConstructMetaInfoRequest)

	if err != nil {
		return err
	}

	*o = ConstructMetaInfoRequest(varConstructMetaInfoRequest)

	return err
}

type NullableConstructMetaInfoRequest struct {
	value *ConstructMetaInfoRequest
	isSet bool
}

func (v NullableConstructMetaInfoRequest) Get() *ConstructMetaInfoRequest {
	return v.value
}

func (v *NullableConstructMetaInfoRequest) Set(val *ConstructMetaInfoRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConstructMetaInfoRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConstructMetaInfoRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConstructMetaInfoRequest(val *ConstructMetaInfoRequest) *NullableConstructMetaInfoRequest {
	return &NullableConstructMetaInfoRequest{value: val, isSet: true}
}

func (v NullableConstructMetaInfoRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConstructMetaInfoRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


