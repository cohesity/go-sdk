/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ObjectsLinkType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectsLinkType{}

// ObjectsLinkType Specifies the link type for linking Magneto entities.
type ObjectsLinkType struct {
	// Specifies the link type for linking Magneto entities.
	Value *string `json:"value,omitempty"`
}

// NewObjectsLinkType instantiates a new ObjectsLinkType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectsLinkType() *ObjectsLinkType {
	this := ObjectsLinkType{}
	return &this
}

// NewObjectsLinkTypeWithDefaults instantiates a new ObjectsLinkType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectsLinkTypeWithDefaults() *ObjectsLinkType {
	this := ObjectsLinkType{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ObjectsLinkType) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectsLinkType) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ObjectsLinkType) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ObjectsLinkType) SetValue(v string) {
	o.Value = &v
}

func (o ObjectsLinkType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectsLinkType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableObjectsLinkType struct {
	value *ObjectsLinkType
	isSet bool
}

func (v NullableObjectsLinkType) Get() *ObjectsLinkType {
	return v.value
}

func (v *NullableObjectsLinkType) Set(val *ObjectsLinkType) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectsLinkType) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectsLinkType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectsLinkType(val *ObjectsLinkType) *NullableObjectsLinkType {
	return &NullableObjectsLinkType{value: val, isSet: true}
}

func (v NullableObjectsLinkType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectsLinkType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


