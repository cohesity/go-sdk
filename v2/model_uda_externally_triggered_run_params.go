/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the UdaExternallyTriggeredRunParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UdaExternallyTriggeredRunParams{}

// UdaExternallyTriggeredRunParams Specifies the parameters for an externally triggered run.
type UdaExternallyTriggeredRunParams struct {
	// Specifies a map of custom arguments to be supplied to the plugin.
	BackupArgs []KeyValuePair `json:"backupArgs,omitempty"`
	// Specifies the IP or FQDN of the source host where this backup will run.
	ControlNode NullableString `json:"controlNode,omitempty"`
}

// NewUdaExternallyTriggeredRunParams instantiates a new UdaExternallyTriggeredRunParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUdaExternallyTriggeredRunParams() *UdaExternallyTriggeredRunParams {
	this := UdaExternallyTriggeredRunParams{}
	return &this
}

// NewUdaExternallyTriggeredRunParamsWithDefaults instantiates a new UdaExternallyTriggeredRunParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUdaExternallyTriggeredRunParamsWithDefaults() *UdaExternallyTriggeredRunParams {
	this := UdaExternallyTriggeredRunParams{}
	return &this
}

// GetBackupArgs returns the BackupArgs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaExternallyTriggeredRunParams) GetBackupArgs() []KeyValuePair {
	if o == nil {
		var ret []KeyValuePair
		return ret
	}
	return o.BackupArgs
}

// GetBackupArgsOk returns a tuple with the BackupArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaExternallyTriggeredRunParams) GetBackupArgsOk() ([]KeyValuePair, bool) {
	if o == nil || IsNil(o.BackupArgs) {
		return nil, false
	}
	return o.BackupArgs, true
}

// HasBackupArgs returns a boolean if a field has been set.
func (o *UdaExternallyTriggeredRunParams) HasBackupArgs() bool {
	if o != nil && !IsNil(o.BackupArgs) {
		return true
	}

	return false
}

// SetBackupArgs gets a reference to the given []KeyValuePair and assigns it to the BackupArgs field.
func (o *UdaExternallyTriggeredRunParams) SetBackupArgs(v []KeyValuePair) {
	o.BackupArgs = v
}

// GetControlNode returns the ControlNode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaExternallyTriggeredRunParams) GetControlNode() string {
	if o == nil || IsNil(o.ControlNode.Get()) {
		var ret string
		return ret
	}
	return *o.ControlNode.Get()
}

// GetControlNodeOk returns a tuple with the ControlNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaExternallyTriggeredRunParams) GetControlNodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ControlNode.Get(), o.ControlNode.IsSet()
}

// HasControlNode returns a boolean if a field has been set.
func (o *UdaExternallyTriggeredRunParams) HasControlNode() bool {
	if o != nil && o.ControlNode.IsSet() {
		return true
	}

	return false
}

// SetControlNode gets a reference to the given NullableString and assigns it to the ControlNode field.
func (o *UdaExternallyTriggeredRunParams) SetControlNode(v string) {
	o.ControlNode.Set(&v)
}
// SetControlNodeNil sets the value for ControlNode to be an explicit nil
func (o *UdaExternallyTriggeredRunParams) SetControlNodeNil() {
	o.ControlNode.Set(nil)
}

// UnsetControlNode ensures that no value is present for ControlNode, not even an explicit nil
func (o *UdaExternallyTriggeredRunParams) UnsetControlNode() {
	o.ControlNode.Unset()
}

func (o UdaExternallyTriggeredRunParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UdaExternallyTriggeredRunParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BackupArgs != nil {
		toSerialize["backupArgs"] = o.BackupArgs
	}
	if o.ControlNode.IsSet() {
		toSerialize["controlNode"] = o.ControlNode.Get()
	}
	return toSerialize, nil
}

type NullableUdaExternallyTriggeredRunParams struct {
	value *UdaExternallyTriggeredRunParams
	isSet bool
}

func (v NullableUdaExternallyTriggeredRunParams) Get() *UdaExternallyTriggeredRunParams {
	return v.value
}

func (v *NullableUdaExternallyTriggeredRunParams) Set(val *UdaExternallyTriggeredRunParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUdaExternallyTriggeredRunParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUdaExternallyTriggeredRunParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUdaExternallyTriggeredRunParams(val *UdaExternallyTriggeredRunParams) *NullableUdaExternallyTriggeredRunParams {
	return &NullableUdaExternallyTriggeredRunParams{value: val, isSet: true}
}

func (v NullableUdaExternallyTriggeredRunParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUdaExternallyTriggeredRunParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


