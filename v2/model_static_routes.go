/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the StaticRoutes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StaticRoutes{}

// StaticRoutes Specifies a list of defined static routes.
type StaticRoutes struct {
	// Specifies the list of routes.
	Routes []StaticRouteParams `json:"routes,omitempty"`
}

// NewStaticRoutes instantiates a new StaticRoutes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStaticRoutes() *StaticRoutes {
	this := StaticRoutes{}
	return &this
}

// NewStaticRoutesWithDefaults instantiates a new StaticRoutes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStaticRoutesWithDefaults() *StaticRoutes {
	this := StaticRoutes{}
	return &this
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *StaticRoutes) GetRoutes() []StaticRouteParams {
	if o == nil || IsNil(o.Routes) {
		var ret []StaticRouteParams
		return ret
	}
	return o.Routes
}

// GetRoutesOk returns a tuple with the Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StaticRoutes) GetRoutesOk() ([]StaticRouteParams, bool) {
	if o == nil || IsNil(o.Routes) {
		return nil, false
	}
	return o.Routes, true
}

// HasRoutes returns a boolean if a field has been set.
func (o *StaticRoutes) HasRoutes() bool {
	if o != nil && !IsNil(o.Routes) {
		return true
	}

	return false
}

// SetRoutes gets a reference to the given []StaticRouteParams and assigns it to the Routes field.
func (o *StaticRoutes) SetRoutes(v []StaticRouteParams) {
	o.Routes = v
}

func (o StaticRoutes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StaticRoutes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Routes) {
		toSerialize["routes"] = o.Routes
	}
	return toSerialize, nil
}

type NullableStaticRoutes struct {
	value *StaticRoutes
	isSet bool
}

func (v NullableStaticRoutes) Get() *StaticRoutes {
	return v.value
}

func (v *NullableStaticRoutes) Set(val *StaticRoutes) {
	v.value = val
	v.isSet = true
}

func (v NullableStaticRoutes) IsSet() bool {
	return v.isSet
}

func (v *NullableStaticRoutes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStaticRoutes(val *StaticRoutes) *NullableStaticRoutes {
	return &NullableStaticRoutes{value: val, isSet: true}
}

func (v NullableStaticRoutes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStaticRoutes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


