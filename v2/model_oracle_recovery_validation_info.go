/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the OracleRecoveryValidationInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OracleRecoveryValidationInfo{}

// OracleRecoveryValidationInfo Specifies information related to Oracle Recovery Validation.
type OracleRecoveryValidationInfo struct {
	// Specifies whether we will be creating a dummy oracle instance to run the validations. Generally if source and target location are different we create a dummy oracle instance else we use the source db.
	CreateDummyInstance NullableBool `json:"createDummyInstance,omitempty"`
}

// NewOracleRecoveryValidationInfo instantiates a new OracleRecoveryValidationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOracleRecoveryValidationInfo() *OracleRecoveryValidationInfo {
	this := OracleRecoveryValidationInfo{}
	return &this
}

// NewOracleRecoveryValidationInfoWithDefaults instantiates a new OracleRecoveryValidationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOracleRecoveryValidationInfoWithDefaults() *OracleRecoveryValidationInfo {
	this := OracleRecoveryValidationInfo{}
	return &this
}

// GetCreateDummyInstance returns the CreateDummyInstance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OracleRecoveryValidationInfo) GetCreateDummyInstance() bool {
	if o == nil || IsNil(o.CreateDummyInstance.Get()) {
		var ret bool
		return ret
	}
	return *o.CreateDummyInstance.Get()
}

// GetCreateDummyInstanceOk returns a tuple with the CreateDummyInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OracleRecoveryValidationInfo) GetCreateDummyInstanceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreateDummyInstance.Get(), o.CreateDummyInstance.IsSet()
}

// HasCreateDummyInstance returns a boolean if a field has been set.
func (o *OracleRecoveryValidationInfo) HasCreateDummyInstance() bool {
	if o != nil && o.CreateDummyInstance.IsSet() {
		return true
	}

	return false
}

// SetCreateDummyInstance gets a reference to the given NullableBool and assigns it to the CreateDummyInstance field.
func (o *OracleRecoveryValidationInfo) SetCreateDummyInstance(v bool) {
	o.CreateDummyInstance.Set(&v)
}
// SetCreateDummyInstanceNil sets the value for CreateDummyInstance to be an explicit nil
func (o *OracleRecoveryValidationInfo) SetCreateDummyInstanceNil() {
	o.CreateDummyInstance.Set(nil)
}

// UnsetCreateDummyInstance ensures that no value is present for CreateDummyInstance, not even an explicit nil
func (o *OracleRecoveryValidationInfo) UnsetCreateDummyInstance() {
	o.CreateDummyInstance.Unset()
}

func (o OracleRecoveryValidationInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OracleRecoveryValidationInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CreateDummyInstance.IsSet() {
		toSerialize["createDummyInstance"] = o.CreateDummyInstance.Get()
	}
	return toSerialize, nil
}

type NullableOracleRecoveryValidationInfo struct {
	value *OracleRecoveryValidationInfo
	isSet bool
}

func (v NullableOracleRecoveryValidationInfo) Get() *OracleRecoveryValidationInfo {
	return v.value
}

func (v *NullableOracleRecoveryValidationInfo) Set(val *OracleRecoveryValidationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableOracleRecoveryValidationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableOracleRecoveryValidationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOracleRecoveryValidationInfo(val *OracleRecoveryValidationInfo) *NullableOracleRecoveryValidationInfo {
	return &NullableOracleRecoveryValidationInfo{value: val, isSet: true}
}

func (v NullableOracleRecoveryValidationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOracleRecoveryValidationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


