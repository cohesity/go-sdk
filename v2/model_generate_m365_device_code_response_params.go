/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the GenerateM365DeviceCodeResponseParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenerateM365DeviceCodeResponseParams{}

// GenerateM365DeviceCodeResponseParams Specifies the response containing the user and device codes along with the verification URI needed for Device Authorization grant.
type GenerateM365DeviceCodeResponseParams struct {
	// Specifies the string used to verify the session between the client and the authorization server. The client uses this parameter to request the access token from the authorization server.
	DeviceCode NullableString `json:"deviceCode,omitempty"`
	// The number of seconds before the deviceCode and userCode expire.
	ExpiresInSecs NullableInt64 `json:"expiresInSecs,omitempty"`
	// The number of seconds the client should wait between polling requests to check for token.
	IntervalSecs NullableInt64 `json:"intervalSecs,omitempty"`
	// A short string shown to the user that's used to identify the session on a secondary device.
	UserCode NullableString `json:"userCode,omitempty"`
	// The URI the user should go to with the userCode in order to sign in.
	VerificationUri NullableString `json:"verificationUri,omitempty"`
}

// NewGenerateM365DeviceCodeResponseParams instantiates a new GenerateM365DeviceCodeResponseParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateM365DeviceCodeResponseParams() *GenerateM365DeviceCodeResponseParams {
	this := GenerateM365DeviceCodeResponseParams{}
	return &this
}

// NewGenerateM365DeviceCodeResponseParamsWithDefaults instantiates a new GenerateM365DeviceCodeResponseParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateM365DeviceCodeResponseParamsWithDefaults() *GenerateM365DeviceCodeResponseParams {
	this := GenerateM365DeviceCodeResponseParams{}
	return &this
}

// GetDeviceCode returns the DeviceCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GenerateM365DeviceCodeResponseParams) GetDeviceCode() string {
	if o == nil || IsNil(o.DeviceCode.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceCode.Get()
}

// GetDeviceCodeOk returns a tuple with the DeviceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GenerateM365DeviceCodeResponseParams) GetDeviceCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceCode.Get(), o.DeviceCode.IsSet()
}

// HasDeviceCode returns a boolean if a field has been set.
func (o *GenerateM365DeviceCodeResponseParams) HasDeviceCode() bool {
	if o != nil && o.DeviceCode.IsSet() {
		return true
	}

	return false
}

// SetDeviceCode gets a reference to the given NullableString and assigns it to the DeviceCode field.
func (o *GenerateM365DeviceCodeResponseParams) SetDeviceCode(v string) {
	o.DeviceCode.Set(&v)
}
// SetDeviceCodeNil sets the value for DeviceCode to be an explicit nil
func (o *GenerateM365DeviceCodeResponseParams) SetDeviceCodeNil() {
	o.DeviceCode.Set(nil)
}

// UnsetDeviceCode ensures that no value is present for DeviceCode, not even an explicit nil
func (o *GenerateM365DeviceCodeResponseParams) UnsetDeviceCode() {
	o.DeviceCode.Unset()
}

// GetExpiresInSecs returns the ExpiresInSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GenerateM365DeviceCodeResponseParams) GetExpiresInSecs() int64 {
	if o == nil || IsNil(o.ExpiresInSecs.Get()) {
		var ret int64
		return ret
	}
	return *o.ExpiresInSecs.Get()
}

// GetExpiresInSecsOk returns a tuple with the ExpiresInSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GenerateM365DeviceCodeResponseParams) GetExpiresInSecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiresInSecs.Get(), o.ExpiresInSecs.IsSet()
}

// HasExpiresInSecs returns a boolean if a field has been set.
func (o *GenerateM365DeviceCodeResponseParams) HasExpiresInSecs() bool {
	if o != nil && o.ExpiresInSecs.IsSet() {
		return true
	}

	return false
}

// SetExpiresInSecs gets a reference to the given NullableInt64 and assigns it to the ExpiresInSecs field.
func (o *GenerateM365DeviceCodeResponseParams) SetExpiresInSecs(v int64) {
	o.ExpiresInSecs.Set(&v)
}
// SetExpiresInSecsNil sets the value for ExpiresInSecs to be an explicit nil
func (o *GenerateM365DeviceCodeResponseParams) SetExpiresInSecsNil() {
	o.ExpiresInSecs.Set(nil)
}

// UnsetExpiresInSecs ensures that no value is present for ExpiresInSecs, not even an explicit nil
func (o *GenerateM365DeviceCodeResponseParams) UnsetExpiresInSecs() {
	o.ExpiresInSecs.Unset()
}

// GetIntervalSecs returns the IntervalSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GenerateM365DeviceCodeResponseParams) GetIntervalSecs() int64 {
	if o == nil || IsNil(o.IntervalSecs.Get()) {
		var ret int64
		return ret
	}
	return *o.IntervalSecs.Get()
}

// GetIntervalSecsOk returns a tuple with the IntervalSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GenerateM365DeviceCodeResponseParams) GetIntervalSecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.IntervalSecs.Get(), o.IntervalSecs.IsSet()
}

// HasIntervalSecs returns a boolean if a field has been set.
func (o *GenerateM365DeviceCodeResponseParams) HasIntervalSecs() bool {
	if o != nil && o.IntervalSecs.IsSet() {
		return true
	}

	return false
}

// SetIntervalSecs gets a reference to the given NullableInt64 and assigns it to the IntervalSecs field.
func (o *GenerateM365DeviceCodeResponseParams) SetIntervalSecs(v int64) {
	o.IntervalSecs.Set(&v)
}
// SetIntervalSecsNil sets the value for IntervalSecs to be an explicit nil
func (o *GenerateM365DeviceCodeResponseParams) SetIntervalSecsNil() {
	o.IntervalSecs.Set(nil)
}

// UnsetIntervalSecs ensures that no value is present for IntervalSecs, not even an explicit nil
func (o *GenerateM365DeviceCodeResponseParams) UnsetIntervalSecs() {
	o.IntervalSecs.Unset()
}

// GetUserCode returns the UserCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GenerateM365DeviceCodeResponseParams) GetUserCode() string {
	if o == nil || IsNil(o.UserCode.Get()) {
		var ret string
		return ret
	}
	return *o.UserCode.Get()
}

// GetUserCodeOk returns a tuple with the UserCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GenerateM365DeviceCodeResponseParams) GetUserCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserCode.Get(), o.UserCode.IsSet()
}

// HasUserCode returns a boolean if a field has been set.
func (o *GenerateM365DeviceCodeResponseParams) HasUserCode() bool {
	if o != nil && o.UserCode.IsSet() {
		return true
	}

	return false
}

// SetUserCode gets a reference to the given NullableString and assigns it to the UserCode field.
func (o *GenerateM365DeviceCodeResponseParams) SetUserCode(v string) {
	o.UserCode.Set(&v)
}
// SetUserCodeNil sets the value for UserCode to be an explicit nil
func (o *GenerateM365DeviceCodeResponseParams) SetUserCodeNil() {
	o.UserCode.Set(nil)
}

// UnsetUserCode ensures that no value is present for UserCode, not even an explicit nil
func (o *GenerateM365DeviceCodeResponseParams) UnsetUserCode() {
	o.UserCode.Unset()
}

// GetVerificationUri returns the VerificationUri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GenerateM365DeviceCodeResponseParams) GetVerificationUri() string {
	if o == nil || IsNil(o.VerificationUri.Get()) {
		var ret string
		return ret
	}
	return *o.VerificationUri.Get()
}

// GetVerificationUriOk returns a tuple with the VerificationUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GenerateM365DeviceCodeResponseParams) GetVerificationUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VerificationUri.Get(), o.VerificationUri.IsSet()
}

// HasVerificationUri returns a boolean if a field has been set.
func (o *GenerateM365DeviceCodeResponseParams) HasVerificationUri() bool {
	if o != nil && o.VerificationUri.IsSet() {
		return true
	}

	return false
}

// SetVerificationUri gets a reference to the given NullableString and assigns it to the VerificationUri field.
func (o *GenerateM365DeviceCodeResponseParams) SetVerificationUri(v string) {
	o.VerificationUri.Set(&v)
}
// SetVerificationUriNil sets the value for VerificationUri to be an explicit nil
func (o *GenerateM365DeviceCodeResponseParams) SetVerificationUriNil() {
	o.VerificationUri.Set(nil)
}

// UnsetVerificationUri ensures that no value is present for VerificationUri, not even an explicit nil
func (o *GenerateM365DeviceCodeResponseParams) UnsetVerificationUri() {
	o.VerificationUri.Unset()
}

func (o GenerateM365DeviceCodeResponseParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateM365DeviceCodeResponseParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceCode.IsSet() {
		toSerialize["deviceCode"] = o.DeviceCode.Get()
	}
	if o.ExpiresInSecs.IsSet() {
		toSerialize["expiresInSecs"] = o.ExpiresInSecs.Get()
	}
	if o.IntervalSecs.IsSet() {
		toSerialize["intervalSecs"] = o.IntervalSecs.Get()
	}
	if o.UserCode.IsSet() {
		toSerialize["userCode"] = o.UserCode.Get()
	}
	if o.VerificationUri.IsSet() {
		toSerialize["verificationUri"] = o.VerificationUri.Get()
	}
	return toSerialize, nil
}

type NullableGenerateM365DeviceCodeResponseParams struct {
	value *GenerateM365DeviceCodeResponseParams
	isSet bool
}

func (v NullableGenerateM365DeviceCodeResponseParams) Get() *GenerateM365DeviceCodeResponseParams {
	return v.value
}

func (v *NullableGenerateM365DeviceCodeResponseParams) Set(val *GenerateM365DeviceCodeResponseParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateM365DeviceCodeResponseParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateM365DeviceCodeResponseParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateM365DeviceCodeResponseParams(val *GenerateM365DeviceCodeResponseParams) *NullableGenerateM365DeviceCodeResponseParams {
	return &NullableGenerateM365DeviceCodeResponseParams{value: val, isSet: true}
}

func (v NullableGenerateM365DeviceCodeResponseParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateM365DeviceCodeResponseParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


