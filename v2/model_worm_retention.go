/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the WormRetention type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WormRetention{}

// WormRetention Worm Retention type.
type WormRetention struct {
	// Specifies Worm Retention type.
	WormRetention *string `json:"wormRetention,omitempty"`
}

// NewWormRetention instantiates a new WormRetention object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWormRetention() *WormRetention {
	this := WormRetention{}
	return &this
}

// NewWormRetentionWithDefaults instantiates a new WormRetention object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWormRetentionWithDefaults() *WormRetention {
	this := WormRetention{}
	return &this
}

// GetWormRetention returns the WormRetention field value if set, zero value otherwise.
func (o *WormRetention) GetWormRetention() string {
	if o == nil || IsNil(o.WormRetention) {
		var ret string
		return ret
	}
	return *o.WormRetention
}

// GetWormRetentionOk returns a tuple with the WormRetention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WormRetention) GetWormRetentionOk() (*string, bool) {
	if o == nil || IsNil(o.WormRetention) {
		return nil, false
	}
	return o.WormRetention, true
}

// HasWormRetention returns a boolean if a field has been set.
func (o *WormRetention) HasWormRetention() bool {
	if o != nil && !IsNil(o.WormRetention) {
		return true
	}

	return false
}

// SetWormRetention gets a reference to the given string and assigns it to the WormRetention field.
func (o *WormRetention) SetWormRetention(v string) {
	o.WormRetention = &v
}

func (o WormRetention) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WormRetention) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WormRetention) {
		toSerialize["wormRetention"] = o.WormRetention
	}
	return toSerialize, nil
}

type NullableWormRetention struct {
	value *WormRetention
	isSet bool
}

func (v NullableWormRetention) Get() *WormRetention {
	return v.value
}

func (v *NullableWormRetention) Set(val *WormRetention) {
	v.value = val
	v.isSet = true
}

func (v NullableWormRetention) IsSet() bool {
	return v.isSet
}

func (v *NullableWormRetention) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWormRetention(val *WormRetention) *NullableWormRetention {
	return &NullableWormRetention{value: val, isSet: true}
}

func (v NullableWormRetention) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWormRetention) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


