/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the VmwareProtectionGroupStandbyResourceParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VmwareProtectionGroupStandbyResourceParams{}

// VmwareProtectionGroupStandbyResourceParams VMware protection group standby resource params which will be used to create standby VM entity for backup entity.
type VmwareProtectionGroupStandbyResourceParams struct {
	// Specifies the recovery point objective time user expects for this standby resource.
	RecoveryPointObjectiveSecs NullableInt64 `json:"recoveryPointObjectiveSecs,omitempty"`
	// Specifies the list of IDs of the datastore objects where this standby resource should be created.
	DatastoreObjectIds []*int64 `json:"datastoreObjectIds,omitempty"`
	// Specifies the networking configuration to be applied to this standby resource.
	NetworkConfig map[string]interface{} `json:"networkConfig,omitempty"`
	// Specifies the object id for parent vCenter source where this standby resource should be created.
	ParentObjectId NullableInt64 `json:"parentObjectId,omitempty"`
	// Specifies params to rename the standby resource.
	RenameRestoredObjectParams map[string]interface{} `json:"renameRestoredObjectParams,omitempty"`
	// Specifies the object id for resource pool where this standby resource should be created.
	ResourcePoolObjectId NullableInt64 `json:"resourcePoolObjectId,omitempty"`
	// Specifies the object id for target datastore folder where disks for this standby resource should be placed.
	TargetDatastoreFolderObjectId NullableInt64 `json:"targetDatastoreFolderObjectId,omitempty"`
	// Specifies the object id for target vm folder where this standby resource should be created.
	TargetFolderObjectId NullableInt64 `json:"targetFolderObjectId,omitempty"`
}

// NewVmwareProtectionGroupStandbyResourceParams instantiates a new VmwareProtectionGroupStandbyResourceParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmwareProtectionGroupStandbyResourceParams() *VmwareProtectionGroupStandbyResourceParams {
	this := VmwareProtectionGroupStandbyResourceParams{}
	return &this
}

// NewVmwareProtectionGroupStandbyResourceParamsWithDefaults instantiates a new VmwareProtectionGroupStandbyResourceParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmwareProtectionGroupStandbyResourceParamsWithDefaults() *VmwareProtectionGroupStandbyResourceParams {
	this := VmwareProtectionGroupStandbyResourceParams{}
	return &this
}

// GetRecoveryPointObjectiveSecs returns the RecoveryPointObjectiveSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareProtectionGroupStandbyResourceParams) GetRecoveryPointObjectiveSecs() int64 {
	if o == nil || IsNil(o.RecoveryPointObjectiveSecs.Get()) {
		var ret int64
		return ret
	}
	return *o.RecoveryPointObjectiveSecs.Get()
}

// GetRecoveryPointObjectiveSecsOk returns a tuple with the RecoveryPointObjectiveSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareProtectionGroupStandbyResourceParams) GetRecoveryPointObjectiveSecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecoveryPointObjectiveSecs.Get(), o.RecoveryPointObjectiveSecs.IsSet()
}

// HasRecoveryPointObjectiveSecs returns a boolean if a field has been set.
func (o *VmwareProtectionGroupStandbyResourceParams) HasRecoveryPointObjectiveSecs() bool {
	if o != nil && o.RecoveryPointObjectiveSecs.IsSet() {
		return true
	}

	return false
}

// SetRecoveryPointObjectiveSecs gets a reference to the given NullableInt64 and assigns it to the RecoveryPointObjectiveSecs field.
func (o *VmwareProtectionGroupStandbyResourceParams) SetRecoveryPointObjectiveSecs(v int64) {
	o.RecoveryPointObjectiveSecs.Set(&v)
}
// SetRecoveryPointObjectiveSecsNil sets the value for RecoveryPointObjectiveSecs to be an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParams) SetRecoveryPointObjectiveSecsNil() {
	o.RecoveryPointObjectiveSecs.Set(nil)
}

// UnsetRecoveryPointObjectiveSecs ensures that no value is present for RecoveryPointObjectiveSecs, not even an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParams) UnsetRecoveryPointObjectiveSecs() {
	o.RecoveryPointObjectiveSecs.Unset()
}

// GetDatastoreObjectIds returns the DatastoreObjectIds field value if set, zero value otherwise.
func (o *VmwareProtectionGroupStandbyResourceParams) GetDatastoreObjectIds() []*int64 {
	if o == nil || IsNil(o.DatastoreObjectIds) {
		var ret []*int64
		return ret
	}
	return o.DatastoreObjectIds
}

// GetDatastoreObjectIdsOk returns a tuple with the DatastoreObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmwareProtectionGroupStandbyResourceParams) GetDatastoreObjectIdsOk() ([]*int64, bool) {
	if o == nil || IsNil(o.DatastoreObjectIds) {
		return nil, false
	}
	return o.DatastoreObjectIds, true
}

// HasDatastoreObjectIds returns a boolean if a field has been set.
func (o *VmwareProtectionGroupStandbyResourceParams) HasDatastoreObjectIds() bool {
	if o != nil && !IsNil(o.DatastoreObjectIds) {
		return true
	}

	return false
}

// SetDatastoreObjectIds gets a reference to the given []*int64 and assigns it to the DatastoreObjectIds field.
func (o *VmwareProtectionGroupStandbyResourceParams) SetDatastoreObjectIds(v []*int64) {
	o.DatastoreObjectIds = v
}

// GetNetworkConfig returns the NetworkConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareProtectionGroupStandbyResourceParams) GetNetworkConfig() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.NetworkConfig
}

// GetNetworkConfigOk returns a tuple with the NetworkConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareProtectionGroupStandbyResourceParams) GetNetworkConfigOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.NetworkConfig) {
		return map[string]interface{}{}, false
	}
	return o.NetworkConfig, true
}

// HasNetworkConfig returns a boolean if a field has been set.
func (o *VmwareProtectionGroupStandbyResourceParams) HasNetworkConfig() bool {
	if o != nil && !IsNil(o.NetworkConfig) {
		return true
	}

	return false
}

// SetNetworkConfig gets a reference to the given map[string]interface{} and assigns it to the NetworkConfig field.
func (o *VmwareProtectionGroupStandbyResourceParams) SetNetworkConfig(v map[string]interface{}) {
	o.NetworkConfig = v
}

// GetParentObjectId returns the ParentObjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareProtectionGroupStandbyResourceParams) GetParentObjectId() int64 {
	if o == nil || IsNil(o.ParentObjectId.Get()) {
		var ret int64
		return ret
	}
	return *o.ParentObjectId.Get()
}

// GetParentObjectIdOk returns a tuple with the ParentObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareProtectionGroupStandbyResourceParams) GetParentObjectIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentObjectId.Get(), o.ParentObjectId.IsSet()
}

// HasParentObjectId returns a boolean if a field has been set.
func (o *VmwareProtectionGroupStandbyResourceParams) HasParentObjectId() bool {
	if o != nil && o.ParentObjectId.IsSet() {
		return true
	}

	return false
}

// SetParentObjectId gets a reference to the given NullableInt64 and assigns it to the ParentObjectId field.
func (o *VmwareProtectionGroupStandbyResourceParams) SetParentObjectId(v int64) {
	o.ParentObjectId.Set(&v)
}
// SetParentObjectIdNil sets the value for ParentObjectId to be an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParams) SetParentObjectIdNil() {
	o.ParentObjectId.Set(nil)
}

// UnsetParentObjectId ensures that no value is present for ParentObjectId, not even an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParams) UnsetParentObjectId() {
	o.ParentObjectId.Unset()
}

// GetRenameRestoredObjectParams returns the RenameRestoredObjectParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareProtectionGroupStandbyResourceParams) GetRenameRestoredObjectParams() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.RenameRestoredObjectParams
}

// GetRenameRestoredObjectParamsOk returns a tuple with the RenameRestoredObjectParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareProtectionGroupStandbyResourceParams) GetRenameRestoredObjectParamsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.RenameRestoredObjectParams) {
		return map[string]interface{}{}, false
	}
	return o.RenameRestoredObjectParams, true
}

// HasRenameRestoredObjectParams returns a boolean if a field has been set.
func (o *VmwareProtectionGroupStandbyResourceParams) HasRenameRestoredObjectParams() bool {
	if o != nil && !IsNil(o.RenameRestoredObjectParams) {
		return true
	}

	return false
}

// SetRenameRestoredObjectParams gets a reference to the given map[string]interface{} and assigns it to the RenameRestoredObjectParams field.
func (o *VmwareProtectionGroupStandbyResourceParams) SetRenameRestoredObjectParams(v map[string]interface{}) {
	o.RenameRestoredObjectParams = v
}

// GetResourcePoolObjectId returns the ResourcePoolObjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareProtectionGroupStandbyResourceParams) GetResourcePoolObjectId() int64 {
	if o == nil || IsNil(o.ResourcePoolObjectId.Get()) {
		var ret int64
		return ret
	}
	return *o.ResourcePoolObjectId.Get()
}

// GetResourcePoolObjectIdOk returns a tuple with the ResourcePoolObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareProtectionGroupStandbyResourceParams) GetResourcePoolObjectIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourcePoolObjectId.Get(), o.ResourcePoolObjectId.IsSet()
}

// HasResourcePoolObjectId returns a boolean if a field has been set.
func (o *VmwareProtectionGroupStandbyResourceParams) HasResourcePoolObjectId() bool {
	if o != nil && o.ResourcePoolObjectId.IsSet() {
		return true
	}

	return false
}

// SetResourcePoolObjectId gets a reference to the given NullableInt64 and assigns it to the ResourcePoolObjectId field.
func (o *VmwareProtectionGroupStandbyResourceParams) SetResourcePoolObjectId(v int64) {
	o.ResourcePoolObjectId.Set(&v)
}
// SetResourcePoolObjectIdNil sets the value for ResourcePoolObjectId to be an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParams) SetResourcePoolObjectIdNil() {
	o.ResourcePoolObjectId.Set(nil)
}

// UnsetResourcePoolObjectId ensures that no value is present for ResourcePoolObjectId, not even an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParams) UnsetResourcePoolObjectId() {
	o.ResourcePoolObjectId.Unset()
}

// GetTargetDatastoreFolderObjectId returns the TargetDatastoreFolderObjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareProtectionGroupStandbyResourceParams) GetTargetDatastoreFolderObjectId() int64 {
	if o == nil || IsNil(o.TargetDatastoreFolderObjectId.Get()) {
		var ret int64
		return ret
	}
	return *o.TargetDatastoreFolderObjectId.Get()
}

// GetTargetDatastoreFolderObjectIdOk returns a tuple with the TargetDatastoreFolderObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareProtectionGroupStandbyResourceParams) GetTargetDatastoreFolderObjectIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetDatastoreFolderObjectId.Get(), o.TargetDatastoreFolderObjectId.IsSet()
}

// HasTargetDatastoreFolderObjectId returns a boolean if a field has been set.
func (o *VmwareProtectionGroupStandbyResourceParams) HasTargetDatastoreFolderObjectId() bool {
	if o != nil && o.TargetDatastoreFolderObjectId.IsSet() {
		return true
	}

	return false
}

// SetTargetDatastoreFolderObjectId gets a reference to the given NullableInt64 and assigns it to the TargetDatastoreFolderObjectId field.
func (o *VmwareProtectionGroupStandbyResourceParams) SetTargetDatastoreFolderObjectId(v int64) {
	o.TargetDatastoreFolderObjectId.Set(&v)
}
// SetTargetDatastoreFolderObjectIdNil sets the value for TargetDatastoreFolderObjectId to be an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParams) SetTargetDatastoreFolderObjectIdNil() {
	o.TargetDatastoreFolderObjectId.Set(nil)
}

// UnsetTargetDatastoreFolderObjectId ensures that no value is present for TargetDatastoreFolderObjectId, not even an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParams) UnsetTargetDatastoreFolderObjectId() {
	o.TargetDatastoreFolderObjectId.Unset()
}

// GetTargetFolderObjectId returns the TargetFolderObjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareProtectionGroupStandbyResourceParams) GetTargetFolderObjectId() int64 {
	if o == nil || IsNil(o.TargetFolderObjectId.Get()) {
		var ret int64
		return ret
	}
	return *o.TargetFolderObjectId.Get()
}

// GetTargetFolderObjectIdOk returns a tuple with the TargetFolderObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareProtectionGroupStandbyResourceParams) GetTargetFolderObjectIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetFolderObjectId.Get(), o.TargetFolderObjectId.IsSet()
}

// HasTargetFolderObjectId returns a boolean if a field has been set.
func (o *VmwareProtectionGroupStandbyResourceParams) HasTargetFolderObjectId() bool {
	if o != nil && o.TargetFolderObjectId.IsSet() {
		return true
	}

	return false
}

// SetTargetFolderObjectId gets a reference to the given NullableInt64 and assigns it to the TargetFolderObjectId field.
func (o *VmwareProtectionGroupStandbyResourceParams) SetTargetFolderObjectId(v int64) {
	o.TargetFolderObjectId.Set(&v)
}
// SetTargetFolderObjectIdNil sets the value for TargetFolderObjectId to be an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParams) SetTargetFolderObjectIdNil() {
	o.TargetFolderObjectId.Set(nil)
}

// UnsetTargetFolderObjectId ensures that no value is present for TargetFolderObjectId, not even an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParams) UnsetTargetFolderObjectId() {
	o.TargetFolderObjectId.Unset()
}

func (o VmwareProtectionGroupStandbyResourceParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VmwareProtectionGroupStandbyResourceParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.RecoveryPointObjectiveSecs.IsSet() {
		toSerialize["recoveryPointObjectiveSecs"] = o.RecoveryPointObjectiveSecs.Get()
	}
	if !IsNil(o.DatastoreObjectIds) {
		toSerialize["datastoreObjectIds"] = o.DatastoreObjectIds
	}
	if o.NetworkConfig != nil {
		toSerialize["networkConfig"] = o.NetworkConfig
	}
	if o.ParentObjectId.IsSet() {
		toSerialize["parentObjectId"] = o.ParentObjectId.Get()
	}
	if o.RenameRestoredObjectParams != nil {
		toSerialize["renameRestoredObjectParams"] = o.RenameRestoredObjectParams
	}
	if o.ResourcePoolObjectId.IsSet() {
		toSerialize["resourcePoolObjectId"] = o.ResourcePoolObjectId.Get()
	}
	if o.TargetDatastoreFolderObjectId.IsSet() {
		toSerialize["targetDatastoreFolderObjectId"] = o.TargetDatastoreFolderObjectId.Get()
	}
	if o.TargetFolderObjectId.IsSet() {
		toSerialize["targetFolderObjectId"] = o.TargetFolderObjectId.Get()
	}
	return toSerialize, nil
}

type NullableVmwareProtectionGroupStandbyResourceParams struct {
	value *VmwareProtectionGroupStandbyResourceParams
	isSet bool
}

func (v NullableVmwareProtectionGroupStandbyResourceParams) Get() *VmwareProtectionGroupStandbyResourceParams {
	return v.value
}

func (v *NullableVmwareProtectionGroupStandbyResourceParams) Set(val *VmwareProtectionGroupStandbyResourceParams) {
	v.value = val
	v.isSet = true
}

func (v NullableVmwareProtectionGroupStandbyResourceParams) IsSet() bool {
	return v.isSet
}

func (v *NullableVmwareProtectionGroupStandbyResourceParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmwareProtectionGroupStandbyResourceParams(val *VmwareProtectionGroupStandbyResourceParams) *NullableVmwareProtectionGroupStandbyResourceParams {
	return &NullableVmwareProtectionGroupStandbyResourceParams{value: val, isSet: true}
}

func (v NullableVmwareProtectionGroupStandbyResourceParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmwareProtectionGroupStandbyResourceParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


