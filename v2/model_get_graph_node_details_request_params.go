/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the GetGraphNodeDetailsRequestParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetGraphNodeDetailsRequestParams{}

// GetGraphNodeDetailsRequestParams Specifies the request parameters to query graph node relations for a given node id.
type GetGraphNodeDetailsRequestParams struct {
	// If set to false the response will only return name, type and is_root fields filled in each node/relation. If set to true all the attributes for the nodes and its relations are also returned. Defaults to true.
	IncludeAttributes NullableBool `json:"includeAttributes,omitempty"`
	// If set to false only the node info will be returned, else the relations matching the below relation filters will be returned. Defaults to false.
	QueryRelations NullableBool `json:"queryRelations,omitempty"`
	// Specifies the filter params for graph node relations.
	RelationFilter NullableGraphNodeRelationFilterParams `json:"relationFilter,omitempty"`
}

// NewGetGraphNodeDetailsRequestParams instantiates a new GetGraphNodeDetailsRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetGraphNodeDetailsRequestParams() *GetGraphNodeDetailsRequestParams {
	this := GetGraphNodeDetailsRequestParams{}
	return &this
}

// NewGetGraphNodeDetailsRequestParamsWithDefaults instantiates a new GetGraphNodeDetailsRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetGraphNodeDetailsRequestParamsWithDefaults() *GetGraphNodeDetailsRequestParams {
	this := GetGraphNodeDetailsRequestParams{}
	return &this
}

// GetIncludeAttributes returns the IncludeAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetGraphNodeDetailsRequestParams) GetIncludeAttributes() bool {
	if o == nil || IsNil(o.IncludeAttributes.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeAttributes.Get()
}

// GetIncludeAttributesOk returns a tuple with the IncludeAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetGraphNodeDetailsRequestParams) GetIncludeAttributesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeAttributes.Get(), o.IncludeAttributes.IsSet()
}

// HasIncludeAttributes returns a boolean if a field has been set.
func (o *GetGraphNodeDetailsRequestParams) HasIncludeAttributes() bool {
	if o != nil && o.IncludeAttributes.IsSet() {
		return true
	}

	return false
}

// SetIncludeAttributes gets a reference to the given NullableBool and assigns it to the IncludeAttributes field.
func (o *GetGraphNodeDetailsRequestParams) SetIncludeAttributes(v bool) {
	o.IncludeAttributes.Set(&v)
}
// SetIncludeAttributesNil sets the value for IncludeAttributes to be an explicit nil
func (o *GetGraphNodeDetailsRequestParams) SetIncludeAttributesNil() {
	o.IncludeAttributes.Set(nil)
}

// UnsetIncludeAttributes ensures that no value is present for IncludeAttributes, not even an explicit nil
func (o *GetGraphNodeDetailsRequestParams) UnsetIncludeAttributes() {
	o.IncludeAttributes.Unset()
}

// GetQueryRelations returns the QueryRelations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetGraphNodeDetailsRequestParams) GetQueryRelations() bool {
	if o == nil || IsNil(o.QueryRelations.Get()) {
		var ret bool
		return ret
	}
	return *o.QueryRelations.Get()
}

// GetQueryRelationsOk returns a tuple with the QueryRelations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetGraphNodeDetailsRequestParams) GetQueryRelationsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.QueryRelations.Get(), o.QueryRelations.IsSet()
}

// HasQueryRelations returns a boolean if a field has been set.
func (o *GetGraphNodeDetailsRequestParams) HasQueryRelations() bool {
	if o != nil && o.QueryRelations.IsSet() {
		return true
	}

	return false
}

// SetQueryRelations gets a reference to the given NullableBool and assigns it to the QueryRelations field.
func (o *GetGraphNodeDetailsRequestParams) SetQueryRelations(v bool) {
	o.QueryRelations.Set(&v)
}
// SetQueryRelationsNil sets the value for QueryRelations to be an explicit nil
func (o *GetGraphNodeDetailsRequestParams) SetQueryRelationsNil() {
	o.QueryRelations.Set(nil)
}

// UnsetQueryRelations ensures that no value is present for QueryRelations, not even an explicit nil
func (o *GetGraphNodeDetailsRequestParams) UnsetQueryRelations() {
	o.QueryRelations.Unset()
}

// GetRelationFilter returns the RelationFilter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetGraphNodeDetailsRequestParams) GetRelationFilter() GraphNodeRelationFilterParams {
	if o == nil || IsNil(o.RelationFilter.Get()) {
		var ret GraphNodeRelationFilterParams
		return ret
	}
	return *o.RelationFilter.Get()
}

// GetRelationFilterOk returns a tuple with the RelationFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetGraphNodeDetailsRequestParams) GetRelationFilterOk() (*GraphNodeRelationFilterParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.RelationFilter.Get(), o.RelationFilter.IsSet()
}

// HasRelationFilter returns a boolean if a field has been set.
func (o *GetGraphNodeDetailsRequestParams) HasRelationFilter() bool {
	if o != nil && o.RelationFilter.IsSet() {
		return true
	}

	return false
}

// SetRelationFilter gets a reference to the given NullableGraphNodeRelationFilterParams and assigns it to the RelationFilter field.
func (o *GetGraphNodeDetailsRequestParams) SetRelationFilter(v GraphNodeRelationFilterParams) {
	o.RelationFilter.Set(&v)
}
// SetRelationFilterNil sets the value for RelationFilter to be an explicit nil
func (o *GetGraphNodeDetailsRequestParams) SetRelationFilterNil() {
	o.RelationFilter.Set(nil)
}

// UnsetRelationFilter ensures that no value is present for RelationFilter, not even an explicit nil
func (o *GetGraphNodeDetailsRequestParams) UnsetRelationFilter() {
	o.RelationFilter.Unset()
}

func (o GetGraphNodeDetailsRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetGraphNodeDetailsRequestParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludeAttributes.IsSet() {
		toSerialize["includeAttributes"] = o.IncludeAttributes.Get()
	}
	if o.QueryRelations.IsSet() {
		toSerialize["queryRelations"] = o.QueryRelations.Get()
	}
	if o.RelationFilter.IsSet() {
		toSerialize["relationFilter"] = o.RelationFilter.Get()
	}
	return toSerialize, nil
}

type NullableGetGraphNodeDetailsRequestParams struct {
	value *GetGraphNodeDetailsRequestParams
	isSet bool
}

func (v NullableGetGraphNodeDetailsRequestParams) Get() *GetGraphNodeDetailsRequestParams {
	return v.value
}

func (v *NullableGetGraphNodeDetailsRequestParams) Set(val *GetGraphNodeDetailsRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGraphNodeDetailsRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGraphNodeDetailsRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGraphNodeDetailsRequestParams(val *GetGraphNodeDetailsRequestParams) *NullableGetGraphNodeDetailsRequestParams {
	return &NullableGetGraphNodeDetailsRequestParams{value: val, isSet: true}
}

func (v NullableGetGraphNodeDetailsRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGraphNodeDetailsRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


