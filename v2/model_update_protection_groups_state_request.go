/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateProtectionGroupsStateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProtectionGroupsStateRequest{}

// UpdateProtectionGroupsStateRequest Specifies the parameters to perform an action of list of Protection Groups.
type UpdateProtectionGroupsStateRequest struct {
	// Specifies the action to be performed on all the specfied Protection Groups. 'kActivate' specifies that Protection Group should be activated. 'kDeactivate' sepcifies that Protection Group should be deactivated. 'kPause' specifies that Protection Group should be paused. 'kResume' specifies that Protection Group should be resumed.
	Action NullableString `json:"action"`
	// Specifies a list of Protection Group ids for which the state should change.
	Ids []string `json:"ids"`
	// Specifies the reason why the protection group was paused
	LastPauseReason NullableString `json:"lastPauseReason,omitempty"`
	// Specifies the tenant id who has access to these protection groups.
	TenantId NullableString `json:"tenantId,omitempty"`
}

type _UpdateProtectionGroupsStateRequest UpdateProtectionGroupsStateRequest

// NewUpdateProtectionGroupsStateRequest instantiates a new UpdateProtectionGroupsStateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProtectionGroupsStateRequest(action NullableString, ids []string) *UpdateProtectionGroupsStateRequest {
	this := UpdateProtectionGroupsStateRequest{}
	this.Action = action
	this.Ids = ids
	return &this
}

// NewUpdateProtectionGroupsStateRequestWithDefaults instantiates a new UpdateProtectionGroupsStateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProtectionGroupsStateRequestWithDefaults() *UpdateProtectionGroupsStateRequest {
	this := UpdateProtectionGroupsStateRequest{}
	return &this
}

// GetAction returns the Action field value
// If the value is explicit nil, the zero value for string will be returned
func (o *UpdateProtectionGroupsStateRequest) GetAction() string {
	if o == nil || o.Action.Get() == nil {
		var ret string
		return ret
	}

	return *o.Action.Get()
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionGroupsStateRequest) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Action.Get(), o.Action.IsSet()
}

// SetAction sets field value
func (o *UpdateProtectionGroupsStateRequest) SetAction(v string) {
	o.Action.Set(&v)
}

// GetIds returns the Ids field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *UpdateProtectionGroupsStateRequest) GetIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionGroupsStateRequest) GetIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// SetIds sets field value
func (o *UpdateProtectionGroupsStateRequest) SetIds(v []string) {
	o.Ids = v
}

// GetLastPauseReason returns the LastPauseReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionGroupsStateRequest) GetLastPauseReason() string {
	if o == nil || IsNil(o.LastPauseReason.Get()) {
		var ret string
		return ret
	}
	return *o.LastPauseReason.Get()
}

// GetLastPauseReasonOk returns a tuple with the LastPauseReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionGroupsStateRequest) GetLastPauseReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastPauseReason.Get(), o.LastPauseReason.IsSet()
}

// HasLastPauseReason returns a boolean if a field has been set.
func (o *UpdateProtectionGroupsStateRequest) HasLastPauseReason() bool {
	if o != nil && o.LastPauseReason.IsSet() {
		return true
	}

	return false
}

// SetLastPauseReason gets a reference to the given NullableString and assigns it to the LastPauseReason field.
func (o *UpdateProtectionGroupsStateRequest) SetLastPauseReason(v string) {
	o.LastPauseReason.Set(&v)
}
// SetLastPauseReasonNil sets the value for LastPauseReason to be an explicit nil
func (o *UpdateProtectionGroupsStateRequest) SetLastPauseReasonNil() {
	o.LastPauseReason.Set(nil)
}

// UnsetLastPauseReason ensures that no value is present for LastPauseReason, not even an explicit nil
func (o *UpdateProtectionGroupsStateRequest) UnsetLastPauseReason() {
	o.LastPauseReason.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionGroupsStateRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionGroupsStateRequest) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *UpdateProtectionGroupsStateRequest) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *UpdateProtectionGroupsStateRequest) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *UpdateProtectionGroupsStateRequest) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *UpdateProtectionGroupsStateRequest) UnsetTenantId() {
	o.TenantId.Unset()
}

func (o UpdateProtectionGroupsStateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProtectionGroupsStateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action.Get()
	if o.Ids != nil {
		toSerialize["ids"] = o.Ids
	}
	if o.LastPauseReason.IsSet() {
		toSerialize["lastPauseReason"] = o.LastPauseReason.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	return toSerialize, nil
}

func (o *UpdateProtectionGroupsStateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
		"ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateProtectionGroupsStateRequest := _UpdateProtectionGroupsStateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateProtectionGroupsStateRequest)

	if err != nil {
		return err
	}

	*o = UpdateProtectionGroupsStateRequest(varUpdateProtectionGroupsStateRequest)

	return err
}

type NullableUpdateProtectionGroupsStateRequest struct {
	value *UpdateProtectionGroupsStateRequest
	isSet bool
}

func (v NullableUpdateProtectionGroupsStateRequest) Get() *UpdateProtectionGroupsStateRequest {
	return v.value
}

func (v *NullableUpdateProtectionGroupsStateRequest) Set(val *UpdateProtectionGroupsStateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProtectionGroupsStateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProtectionGroupsStateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProtectionGroupsStateRequest(val *UpdateProtectionGroupsStateRequest) *NullableUpdateProtectionGroupsStateRequest {
	return &NullableUpdateProtectionGroupsStateRequest{value: val, isSet: true}
}

func (v NullableUpdateProtectionGroupsStateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProtectionGroupsStateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


