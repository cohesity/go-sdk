/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ProtectionRunsStatsList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProtectionRunsStatsList{}

// ProtectionRunsStatsList Specifies the statistics of protection runs at the specific time.
type ProtectionRunsStatsList struct {
	// Specifies the protection runs stats.
	Stats []ProtectionRunsStats `json:"stats,omitempty"`
	// Specifies a Unix epoch Timestamp (in microseconds) of this statistics.
	Timestamp NullableInt64 `json:"timestamp,omitempty"`
}

// NewProtectionRunsStatsList instantiates a new ProtectionRunsStatsList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionRunsStatsList() *ProtectionRunsStatsList {
	this := ProtectionRunsStatsList{}
	return &this
}

// NewProtectionRunsStatsListWithDefaults instantiates a new ProtectionRunsStatsList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionRunsStatsListWithDefaults() *ProtectionRunsStatsList {
	this := ProtectionRunsStatsList{}
	return &this
}

// GetStats returns the Stats field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunsStatsList) GetStats() []ProtectionRunsStats {
	if o == nil {
		var ret []ProtectionRunsStats
		return ret
	}
	return o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunsStatsList) GetStatsOk() ([]ProtectionRunsStats, bool) {
	if o == nil || IsNil(o.Stats) {
		return nil, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *ProtectionRunsStatsList) HasStats() bool {
	if o != nil && !IsNil(o.Stats) {
		return true
	}

	return false
}

// SetStats gets a reference to the given []ProtectionRunsStats and assigns it to the Stats field.
func (o *ProtectionRunsStatsList) SetStats(v []ProtectionRunsStats) {
	o.Stats = v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunsStatsList) GetTimestamp() int64 {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret int64
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunsStatsList) GetTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ProtectionRunsStatsList) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableInt64 and assigns it to the Timestamp field.
func (o *ProtectionRunsStatsList) SetTimestamp(v int64) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *ProtectionRunsStatsList) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *ProtectionRunsStatsList) UnsetTimestamp() {
	o.Timestamp.Unset()
}

func (o ProtectionRunsStatsList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProtectionRunsStatsList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Stats != nil {
		toSerialize["stats"] = o.Stats
	}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	return toSerialize, nil
}

type NullableProtectionRunsStatsList struct {
	value *ProtectionRunsStatsList
	isSet bool
}

func (v NullableProtectionRunsStatsList) Get() *ProtectionRunsStatsList {
	return v.value
}

func (v *NullableProtectionRunsStatsList) Set(val *ProtectionRunsStatsList) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionRunsStatsList) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionRunsStatsList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionRunsStatsList(val *ProtectionRunsStatsList) *NullableProtectionRunsStatsList {
	return &NullableProtectionRunsStatsList{value: val, isSet: true}
}

func (v NullableProtectionRunsStatsList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionRunsStatsList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


