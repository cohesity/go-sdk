/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RecoverO365ParamsRecoverMsGroupParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecoverO365ParamsRecoverMsGroupParams{}

// RecoverO365ParamsRecoverMsGroupParams Specifies the parameters to recover Microsoft 365 Group.
type RecoverO365ParamsRecoverMsGroupParams struct {
	// Specifies whether to continue recovering other MS groups if one of MS groups failed to recover. Default value is false.
	ContinueOnError NullableBool `json:"continueOnError,omitempty"`
	// Specifies a list of groups getting restored.
	MsGroups []MsGroupParam `json:"msGroups"`
	// Specifies whether or not all groups are restored to original location.
	RestoreToOriginal NullableBool `json:"restoreToOriginal,omitempty"`
	// Specifies target group nickname in case restoreToOriginal is false. This needs to be specifid when restoreToOriginal is false.
	TargetGroup NullableString `json:"targetGroup,omitempty"`
	// Specifies target group name in case restore_to_original is false. This needs to be specifid when restoreToOriginal is false. However, this will be ignored if restoring to alternate existing group (i.e. to a group the nickname of which is same as the one supplied by the end user).
	TargetGroupName NullableString `json:"targetGroupName,omitempty"`
}

type _RecoverO365ParamsRecoverMsGroupParams RecoverO365ParamsRecoverMsGroupParams

// NewRecoverO365ParamsRecoverMsGroupParams instantiates a new RecoverO365ParamsRecoverMsGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverO365ParamsRecoverMsGroupParams(msGroups []MsGroupParam) *RecoverO365ParamsRecoverMsGroupParams {
	this := RecoverO365ParamsRecoverMsGroupParams{}
	this.MsGroups = msGroups
	return &this
}

// NewRecoverO365ParamsRecoverMsGroupParamsWithDefaults instantiates a new RecoverO365ParamsRecoverMsGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverO365ParamsRecoverMsGroupParamsWithDefaults() *RecoverO365ParamsRecoverMsGroupParams {
	this := RecoverO365ParamsRecoverMsGroupParams{}
	return &this
}

// GetContinueOnError returns the ContinueOnError field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverO365ParamsRecoverMsGroupParams) GetContinueOnError() bool {
	if o == nil || IsNil(o.ContinueOnError.Get()) {
		var ret bool
		return ret
	}
	return *o.ContinueOnError.Get()
}

// GetContinueOnErrorOk returns a tuple with the ContinueOnError field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverO365ParamsRecoverMsGroupParams) GetContinueOnErrorOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContinueOnError.Get(), o.ContinueOnError.IsSet()
}

// HasContinueOnError returns a boolean if a field has been set.
func (o *RecoverO365ParamsRecoverMsGroupParams) HasContinueOnError() bool {
	if o != nil && o.ContinueOnError.IsSet() {
		return true
	}

	return false
}

// SetContinueOnError gets a reference to the given NullableBool and assigns it to the ContinueOnError field.
func (o *RecoverO365ParamsRecoverMsGroupParams) SetContinueOnError(v bool) {
	o.ContinueOnError.Set(&v)
}
// SetContinueOnErrorNil sets the value for ContinueOnError to be an explicit nil
func (o *RecoverO365ParamsRecoverMsGroupParams) SetContinueOnErrorNil() {
	o.ContinueOnError.Set(nil)
}

// UnsetContinueOnError ensures that no value is present for ContinueOnError, not even an explicit nil
func (o *RecoverO365ParamsRecoverMsGroupParams) UnsetContinueOnError() {
	o.ContinueOnError.Unset()
}

// GetMsGroups returns the MsGroups field value
// If the value is explicit nil, the zero value for []MsGroupParam will be returned
func (o *RecoverO365ParamsRecoverMsGroupParams) GetMsGroups() []MsGroupParam {
	if o == nil {
		var ret []MsGroupParam
		return ret
	}

	return o.MsGroups
}

// GetMsGroupsOk returns a tuple with the MsGroups field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverO365ParamsRecoverMsGroupParams) GetMsGroupsOk() ([]MsGroupParam, bool) {
	if o == nil || IsNil(o.MsGroups) {
		return nil, false
	}
	return o.MsGroups, true
}

// SetMsGroups sets field value
func (o *RecoverO365ParamsRecoverMsGroupParams) SetMsGroups(v []MsGroupParam) {
	o.MsGroups = v
}

// GetRestoreToOriginal returns the RestoreToOriginal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverO365ParamsRecoverMsGroupParams) GetRestoreToOriginal() bool {
	if o == nil || IsNil(o.RestoreToOriginal.Get()) {
		var ret bool
		return ret
	}
	return *o.RestoreToOriginal.Get()
}

// GetRestoreToOriginalOk returns a tuple with the RestoreToOriginal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverO365ParamsRecoverMsGroupParams) GetRestoreToOriginalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestoreToOriginal.Get(), o.RestoreToOriginal.IsSet()
}

// HasRestoreToOriginal returns a boolean if a field has been set.
func (o *RecoverO365ParamsRecoverMsGroupParams) HasRestoreToOriginal() bool {
	if o != nil && o.RestoreToOriginal.IsSet() {
		return true
	}

	return false
}

// SetRestoreToOriginal gets a reference to the given NullableBool and assigns it to the RestoreToOriginal field.
func (o *RecoverO365ParamsRecoverMsGroupParams) SetRestoreToOriginal(v bool) {
	o.RestoreToOriginal.Set(&v)
}
// SetRestoreToOriginalNil sets the value for RestoreToOriginal to be an explicit nil
func (o *RecoverO365ParamsRecoverMsGroupParams) SetRestoreToOriginalNil() {
	o.RestoreToOriginal.Set(nil)
}

// UnsetRestoreToOriginal ensures that no value is present for RestoreToOriginal, not even an explicit nil
func (o *RecoverO365ParamsRecoverMsGroupParams) UnsetRestoreToOriginal() {
	o.RestoreToOriginal.Unset()
}

// GetTargetGroup returns the TargetGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverO365ParamsRecoverMsGroupParams) GetTargetGroup() string {
	if o == nil || IsNil(o.TargetGroup.Get()) {
		var ret string
		return ret
	}
	return *o.TargetGroup.Get()
}

// GetTargetGroupOk returns a tuple with the TargetGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverO365ParamsRecoverMsGroupParams) GetTargetGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetGroup.Get(), o.TargetGroup.IsSet()
}

// HasTargetGroup returns a boolean if a field has been set.
func (o *RecoverO365ParamsRecoverMsGroupParams) HasTargetGroup() bool {
	if o != nil && o.TargetGroup.IsSet() {
		return true
	}

	return false
}

// SetTargetGroup gets a reference to the given NullableString and assigns it to the TargetGroup field.
func (o *RecoverO365ParamsRecoverMsGroupParams) SetTargetGroup(v string) {
	o.TargetGroup.Set(&v)
}
// SetTargetGroupNil sets the value for TargetGroup to be an explicit nil
func (o *RecoverO365ParamsRecoverMsGroupParams) SetTargetGroupNil() {
	o.TargetGroup.Set(nil)
}

// UnsetTargetGroup ensures that no value is present for TargetGroup, not even an explicit nil
func (o *RecoverO365ParamsRecoverMsGroupParams) UnsetTargetGroup() {
	o.TargetGroup.Unset()
}

// GetTargetGroupName returns the TargetGroupName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverO365ParamsRecoverMsGroupParams) GetTargetGroupName() string {
	if o == nil || IsNil(o.TargetGroupName.Get()) {
		var ret string
		return ret
	}
	return *o.TargetGroupName.Get()
}

// GetTargetGroupNameOk returns a tuple with the TargetGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverO365ParamsRecoverMsGroupParams) GetTargetGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetGroupName.Get(), o.TargetGroupName.IsSet()
}

// HasTargetGroupName returns a boolean if a field has been set.
func (o *RecoverO365ParamsRecoverMsGroupParams) HasTargetGroupName() bool {
	if o != nil && o.TargetGroupName.IsSet() {
		return true
	}

	return false
}

// SetTargetGroupName gets a reference to the given NullableString and assigns it to the TargetGroupName field.
func (o *RecoverO365ParamsRecoverMsGroupParams) SetTargetGroupName(v string) {
	o.TargetGroupName.Set(&v)
}
// SetTargetGroupNameNil sets the value for TargetGroupName to be an explicit nil
func (o *RecoverO365ParamsRecoverMsGroupParams) SetTargetGroupNameNil() {
	o.TargetGroupName.Set(nil)
}

// UnsetTargetGroupName ensures that no value is present for TargetGroupName, not even an explicit nil
func (o *RecoverO365ParamsRecoverMsGroupParams) UnsetTargetGroupName() {
	o.TargetGroupName.Unset()
}

func (o RecoverO365ParamsRecoverMsGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecoverO365ParamsRecoverMsGroupParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ContinueOnError.IsSet() {
		toSerialize["continueOnError"] = o.ContinueOnError.Get()
	}
	if o.MsGroups != nil {
		toSerialize["msGroups"] = o.MsGroups
	}
	if o.RestoreToOriginal.IsSet() {
		toSerialize["restoreToOriginal"] = o.RestoreToOriginal.Get()
	}
	if o.TargetGroup.IsSet() {
		toSerialize["targetGroup"] = o.TargetGroup.Get()
	}
	if o.TargetGroupName.IsSet() {
		toSerialize["targetGroupName"] = o.TargetGroupName.Get()
	}
	return toSerialize, nil
}

func (o *RecoverO365ParamsRecoverMsGroupParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"msGroups",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRecoverO365ParamsRecoverMsGroupParams := _RecoverO365ParamsRecoverMsGroupParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRecoverO365ParamsRecoverMsGroupParams)

	if err != nil {
		return err
	}

	*o = RecoverO365ParamsRecoverMsGroupParams(varRecoverO365ParamsRecoverMsGroupParams)

	return err
}

type NullableRecoverO365ParamsRecoverMsGroupParams struct {
	value *RecoverO365ParamsRecoverMsGroupParams
	isSet bool
}

func (v NullableRecoverO365ParamsRecoverMsGroupParams) Get() *RecoverO365ParamsRecoverMsGroupParams {
	return v.value
}

func (v *NullableRecoverO365ParamsRecoverMsGroupParams) Set(val *RecoverO365ParamsRecoverMsGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverO365ParamsRecoverMsGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverO365ParamsRecoverMsGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverO365ParamsRecoverMsGroupParams(val *RecoverO365ParamsRecoverMsGroupParams) *NullableRecoverO365ParamsRecoverMsGroupParams {
	return &NullableRecoverO365ParamsRecoverMsGroupParams{value: val, isSet: true}
}

func (v NullableRecoverO365ParamsRecoverMsGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverO365ParamsRecoverMsGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


