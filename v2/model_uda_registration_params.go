/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the UdaRegistrationParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UdaRegistrationParams{}

// UdaRegistrationParams Parameters to customize registration workflow.
type UdaRegistrationParams struct {
	DynamicForm NullableUdaDynamicFormParams `json:"dynamicForm,omitempty"`
	PrimaryFields NullableUdaRegistrationParamsPrimaryFields `json:"primaryFields,omitempty"`
}

// NewUdaRegistrationParams instantiates a new UdaRegistrationParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUdaRegistrationParams() *UdaRegistrationParams {
	this := UdaRegistrationParams{}
	return &this
}

// NewUdaRegistrationParamsWithDefaults instantiates a new UdaRegistrationParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUdaRegistrationParamsWithDefaults() *UdaRegistrationParams {
	this := UdaRegistrationParams{}
	return &this
}

// GetDynamicForm returns the DynamicForm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaRegistrationParams) GetDynamicForm() UdaDynamicFormParams {
	if o == nil || IsNil(o.DynamicForm.Get()) {
		var ret UdaDynamicFormParams
		return ret
	}
	return *o.DynamicForm.Get()
}

// GetDynamicFormOk returns a tuple with the DynamicForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaRegistrationParams) GetDynamicFormOk() (*UdaDynamicFormParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.DynamicForm.Get(), o.DynamicForm.IsSet()
}

// HasDynamicForm returns a boolean if a field has been set.
func (o *UdaRegistrationParams) HasDynamicForm() bool {
	if o != nil && o.DynamicForm.IsSet() {
		return true
	}

	return false
}

// SetDynamicForm gets a reference to the given NullableUdaDynamicFormParams and assigns it to the DynamicForm field.
func (o *UdaRegistrationParams) SetDynamicForm(v UdaDynamicFormParams) {
	o.DynamicForm.Set(&v)
}
// SetDynamicFormNil sets the value for DynamicForm to be an explicit nil
func (o *UdaRegistrationParams) SetDynamicFormNil() {
	o.DynamicForm.Set(nil)
}

// UnsetDynamicForm ensures that no value is present for DynamicForm, not even an explicit nil
func (o *UdaRegistrationParams) UnsetDynamicForm() {
	o.DynamicForm.Unset()
}

// GetPrimaryFields returns the PrimaryFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaRegistrationParams) GetPrimaryFields() UdaRegistrationParamsPrimaryFields {
	if o == nil || IsNil(o.PrimaryFields.Get()) {
		var ret UdaRegistrationParamsPrimaryFields
		return ret
	}
	return *o.PrimaryFields.Get()
}

// GetPrimaryFieldsOk returns a tuple with the PrimaryFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaRegistrationParams) GetPrimaryFieldsOk() (*UdaRegistrationParamsPrimaryFields, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryFields.Get(), o.PrimaryFields.IsSet()
}

// HasPrimaryFields returns a boolean if a field has been set.
func (o *UdaRegistrationParams) HasPrimaryFields() bool {
	if o != nil && o.PrimaryFields.IsSet() {
		return true
	}

	return false
}

// SetPrimaryFields gets a reference to the given NullableUdaRegistrationParamsPrimaryFields and assigns it to the PrimaryFields field.
func (o *UdaRegistrationParams) SetPrimaryFields(v UdaRegistrationParamsPrimaryFields) {
	o.PrimaryFields.Set(&v)
}
// SetPrimaryFieldsNil sets the value for PrimaryFields to be an explicit nil
func (o *UdaRegistrationParams) SetPrimaryFieldsNil() {
	o.PrimaryFields.Set(nil)
}

// UnsetPrimaryFields ensures that no value is present for PrimaryFields, not even an explicit nil
func (o *UdaRegistrationParams) UnsetPrimaryFields() {
	o.PrimaryFields.Unset()
}

func (o UdaRegistrationParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UdaRegistrationParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DynamicForm.IsSet() {
		toSerialize["dynamicForm"] = o.DynamicForm.Get()
	}
	if o.PrimaryFields.IsSet() {
		toSerialize["primaryFields"] = o.PrimaryFields.Get()
	}
	return toSerialize, nil
}

type NullableUdaRegistrationParams struct {
	value *UdaRegistrationParams
	isSet bool
}

func (v NullableUdaRegistrationParams) Get() *UdaRegistrationParams {
	return v.value
}

func (v *NullableUdaRegistrationParams) Set(val *UdaRegistrationParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUdaRegistrationParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUdaRegistrationParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUdaRegistrationParams(val *UdaRegistrationParams) *NullableUdaRegistrationParams {
	return &NullableUdaRegistrationParams{value: val, isSet: true}
}

func (v NullableUdaRegistrationParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUdaRegistrationParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


