/*
Cohesity REST API

Testing NodeGroupAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package v2

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/cohesity/go-sdk"
)

func Test_v2_NodeGroupAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test NodeGroupAPIService CreateNodeGroup", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.NodeGroupAPI.CreateNodeGroup(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NodeGroupAPIService DeleteNodeGroup", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var groupName string

		httpRes, err := apiClient.NodeGroupAPI.DeleteNodeGroup(context.Background(), groupName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NodeGroupAPIService GetNodeGroups", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.NodeGroupAPI.GetNodeGroups(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NodeGroupAPIService UpdateNodeGroup", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var groupName string

		resp, httpRes, err := apiClient.NodeGroupAPI.UpdateNodeGroup(context.Background(), groupName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
