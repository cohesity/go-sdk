/*
Cohesity REST API

Testing DataAccessorAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package v2

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/cohesity/go-sdk"
)

func Test_v2_DataAccessorAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DataAccessorAPIService CreateDataAccessSession", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.DataAccessorAPI.CreateDataAccessSession(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DataAccessorAPIService DifferenceOfGraphNodes", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var sessionId string

		resp, httpRes, err := apiClient.DataAccessorAPI.DifferenceOfGraphNodes(context.Background(), sessionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DataAccessorAPIService GetDataAccessSessions", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.DataAccessorAPI.GetDataAccessSessions(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DataAccessorAPIService GetGraphNodeDetails", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var sessionId string
		var nodeId string

		resp, httpRes, err := apiClient.DataAccessorAPI.GetGraphNodeDetails(context.Background(), sessionId, nodeId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DataAccessorAPIService GetGraphNodeRelationsDifferences", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var sessionId string
		var nodeId string

		resp, httpRes, err := apiClient.DataAccessorAPI.GetGraphNodeRelationsDifferences(context.Background(), sessionId, nodeId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DataAccessorAPIService SearchGraphNodes", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.DataAccessorAPI.SearchGraphNodes(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DataAccessorAPIService TearDownDataAccessSession", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var sessionId string

		httpRes, err := apiClient.DataAccessorAPI.TearDownDataAccessSession(context.Background(), sessionId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
