/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AssociateEntityMetadataResultParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssociateEntityMetadataResultParams{}

// AssociateEntityMetadataResultParams Specifies the response parameters for the AssociateEntityMetadataRequest.
type AssociateEntityMetadataResultParams struct {
	// Specifies the entity id of the object.
	EntityId *int64 `json:"entityId,omitempty"`
	// Specifies an error message (if any) corresponding to this entityId.
	ErrorMessage NullableString `json:"errorMessage,omitempty"`
	// Specifies an error type(if any) corresponding to this entityId.
	ErrorType NullableString `json:"errorType,omitempty"`
}

// NewAssociateEntityMetadataResultParams instantiates a new AssociateEntityMetadataResultParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssociateEntityMetadataResultParams() *AssociateEntityMetadataResultParams {
	this := AssociateEntityMetadataResultParams{}
	return &this
}

// NewAssociateEntityMetadataResultParamsWithDefaults instantiates a new AssociateEntityMetadataResultParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssociateEntityMetadataResultParamsWithDefaults() *AssociateEntityMetadataResultParams {
	this := AssociateEntityMetadataResultParams{}
	return &this
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *AssociateEntityMetadataResultParams) GetEntityId() int64 {
	if o == nil || IsNil(o.EntityId) {
		var ret int64
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociateEntityMetadataResultParams) GetEntityIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *AssociateEntityMetadataResultParams) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given int64 and assigns it to the EntityId field.
func (o *AssociateEntityMetadataResultParams) SetEntityId(v int64) {
	o.EntityId = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssociateEntityMetadataResultParams) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssociateEntityMetadataResultParams) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *AssociateEntityMetadataResultParams) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *AssociateEntityMetadataResultParams) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *AssociateEntityMetadataResultParams) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *AssociateEntityMetadataResultParams) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetErrorType returns the ErrorType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssociateEntityMetadataResultParams) GetErrorType() string {
	if o == nil || IsNil(o.ErrorType.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorType.Get()
}

// GetErrorTypeOk returns a tuple with the ErrorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssociateEntityMetadataResultParams) GetErrorTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorType.Get(), o.ErrorType.IsSet()
}

// HasErrorType returns a boolean if a field has been set.
func (o *AssociateEntityMetadataResultParams) HasErrorType() bool {
	if o != nil && o.ErrorType.IsSet() {
		return true
	}

	return false
}

// SetErrorType gets a reference to the given NullableString and assigns it to the ErrorType field.
func (o *AssociateEntityMetadataResultParams) SetErrorType(v string) {
	o.ErrorType.Set(&v)
}
// SetErrorTypeNil sets the value for ErrorType to be an explicit nil
func (o *AssociateEntityMetadataResultParams) SetErrorTypeNil() {
	o.ErrorType.Set(nil)
}

// UnsetErrorType ensures that no value is present for ErrorType, not even an explicit nil
func (o *AssociateEntityMetadataResultParams) UnsetErrorType() {
	o.ErrorType.Unset()
}

func (o AssociateEntityMetadataResultParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssociateEntityMetadataResultParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntityId) {
		toSerialize["entityId"] = o.EntityId
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["errorMessage"] = o.ErrorMessage.Get()
	}
	if o.ErrorType.IsSet() {
		toSerialize["errorType"] = o.ErrorType.Get()
	}
	return toSerialize, nil
}

type NullableAssociateEntityMetadataResultParams struct {
	value *AssociateEntityMetadataResultParams
	isSet bool
}

func (v NullableAssociateEntityMetadataResultParams) Get() *AssociateEntityMetadataResultParams {
	return v.value
}

func (v *NullableAssociateEntityMetadataResultParams) Set(val *AssociateEntityMetadataResultParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAssociateEntityMetadataResultParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAssociateEntityMetadataResultParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssociateEntityMetadataResultParams(val *AssociateEntityMetadataResultParams) *NullableAssociateEntityMetadataResultParams {
	return &NullableAssociateEntityMetadataResultParams{value: val, isSet: true}
}

func (v NullableAssociateEntityMetadataResultParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssociateEntityMetadataResultParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


