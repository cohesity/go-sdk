/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the InterfaceNetworkParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterfaceNetworkParams{}

// InterfaceNetworkParams Interface network parameters.
type InterfaceNetworkParams struct {
	BondInterfaceParams *BondInterfaceNetworkParams `json:"bondInterfaceParams,omitempty"`
	// MTU of the network interface.
	Mtu NullableInt32 `json:"mtu,omitempty"`
}

// NewInterfaceNetworkParams instantiates a new InterfaceNetworkParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfaceNetworkParams() *InterfaceNetworkParams {
	this := InterfaceNetworkParams{}
	return &this
}

// NewInterfaceNetworkParamsWithDefaults instantiates a new InterfaceNetworkParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfaceNetworkParamsWithDefaults() *InterfaceNetworkParams {
	this := InterfaceNetworkParams{}
	return &this
}

// GetBondInterfaceParams returns the BondInterfaceParams field value if set, zero value otherwise.
func (o *InterfaceNetworkParams) GetBondInterfaceParams() BondInterfaceNetworkParams {
	if o == nil || IsNil(o.BondInterfaceParams) {
		var ret BondInterfaceNetworkParams
		return ret
	}
	return *o.BondInterfaceParams
}

// GetBondInterfaceParamsOk returns a tuple with the BondInterfaceParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceNetworkParams) GetBondInterfaceParamsOk() (*BondInterfaceNetworkParams, bool) {
	if o == nil || IsNil(o.BondInterfaceParams) {
		return nil, false
	}
	return o.BondInterfaceParams, true
}

// HasBondInterfaceParams returns a boolean if a field has been set.
func (o *InterfaceNetworkParams) HasBondInterfaceParams() bool {
	if o != nil && !IsNil(o.BondInterfaceParams) {
		return true
	}

	return false
}

// SetBondInterfaceParams gets a reference to the given BondInterfaceNetworkParams and assigns it to the BondInterfaceParams field.
func (o *InterfaceNetworkParams) SetBondInterfaceParams(v BondInterfaceNetworkParams) {
	o.BondInterfaceParams = &v
}

// GetMtu returns the Mtu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InterfaceNetworkParams) GetMtu() int32 {
	if o == nil || IsNil(o.Mtu.Get()) {
		var ret int32
		return ret
	}
	return *o.Mtu.Get()
}

// GetMtuOk returns a tuple with the Mtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InterfaceNetworkParams) GetMtuOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mtu.Get(), o.Mtu.IsSet()
}

// HasMtu returns a boolean if a field has been set.
func (o *InterfaceNetworkParams) HasMtu() bool {
	if o != nil && o.Mtu.IsSet() {
		return true
	}

	return false
}

// SetMtu gets a reference to the given NullableInt32 and assigns it to the Mtu field.
func (o *InterfaceNetworkParams) SetMtu(v int32) {
	o.Mtu.Set(&v)
}
// SetMtuNil sets the value for Mtu to be an explicit nil
func (o *InterfaceNetworkParams) SetMtuNil() {
	o.Mtu.Set(nil)
}

// UnsetMtu ensures that no value is present for Mtu, not even an explicit nil
func (o *InterfaceNetworkParams) UnsetMtu() {
	o.Mtu.Unset()
}

func (o InterfaceNetworkParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterfaceNetworkParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BondInterfaceParams) {
		toSerialize["bondInterfaceParams"] = o.BondInterfaceParams
	}
	if o.Mtu.IsSet() {
		toSerialize["mtu"] = o.Mtu.Get()
	}
	return toSerialize, nil
}

type NullableInterfaceNetworkParams struct {
	value *InterfaceNetworkParams
	isSet bool
}

func (v NullableInterfaceNetworkParams) Get() *InterfaceNetworkParams {
	return v.value
}

func (v *NullableInterfaceNetworkParams) Set(val *InterfaceNetworkParams) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfaceNetworkParams) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfaceNetworkParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfaceNetworkParams(val *InterfaceNetworkParams) *NullableInterfaceNetworkParams {
	return &NullableInterfaceNetworkParams{value: val, isSet: true}
}

func (v NullableInterfaceNetworkParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfaceNetworkParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


