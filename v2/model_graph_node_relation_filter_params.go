/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the GraphNodeRelationFilterParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GraphNodeRelationFilterParams{}

// GraphNodeRelationFilterParams Determines filter that can be applied to query edge of a graph node.
type GraphNodeRelationFilterParams struct {
	// Specifies the aad adapter specific relation filter params.
	AadParams NullableAadRelationFilterParams `json:"aadParams,omitempty"`
}

// NewGraphNodeRelationFilterParams instantiates a new GraphNodeRelationFilterParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphNodeRelationFilterParams() *GraphNodeRelationFilterParams {
	this := GraphNodeRelationFilterParams{}
	return &this
}

// NewGraphNodeRelationFilterParamsWithDefaults instantiates a new GraphNodeRelationFilterParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphNodeRelationFilterParamsWithDefaults() *GraphNodeRelationFilterParams {
	this := GraphNodeRelationFilterParams{}
	return &this
}

// GetAadParams returns the AadParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GraphNodeRelationFilterParams) GetAadParams() AadRelationFilterParams {
	if o == nil || IsNil(o.AadParams.Get()) {
		var ret AadRelationFilterParams
		return ret
	}
	return *o.AadParams.Get()
}

// GetAadParamsOk returns a tuple with the AadParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GraphNodeRelationFilterParams) GetAadParamsOk() (*AadRelationFilterParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.AadParams.Get(), o.AadParams.IsSet()
}

// HasAadParams returns a boolean if a field has been set.
func (o *GraphNodeRelationFilterParams) HasAadParams() bool {
	if o != nil && o.AadParams.IsSet() {
		return true
	}

	return false
}

// SetAadParams gets a reference to the given NullableAadRelationFilterParams and assigns it to the AadParams field.
func (o *GraphNodeRelationFilterParams) SetAadParams(v AadRelationFilterParams) {
	o.AadParams.Set(&v)
}
// SetAadParamsNil sets the value for AadParams to be an explicit nil
func (o *GraphNodeRelationFilterParams) SetAadParamsNil() {
	o.AadParams.Set(nil)
}

// UnsetAadParams ensures that no value is present for AadParams, not even an explicit nil
func (o *GraphNodeRelationFilterParams) UnsetAadParams() {
	o.AadParams.Unset()
}

func (o GraphNodeRelationFilterParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GraphNodeRelationFilterParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AadParams.IsSet() {
		toSerialize["aadParams"] = o.AadParams.Get()
	}
	return toSerialize, nil
}

type NullableGraphNodeRelationFilterParams struct {
	value *GraphNodeRelationFilterParams
	isSet bool
}

func (v NullableGraphNodeRelationFilterParams) Get() *GraphNodeRelationFilterParams {
	return v.value
}

func (v *NullableGraphNodeRelationFilterParams) Set(val *GraphNodeRelationFilterParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphNodeRelationFilterParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphNodeRelationFilterParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphNodeRelationFilterParams(val *GraphNodeRelationFilterParams) *NullableGraphNodeRelationFilterParams {
	return &NullableGraphNodeRelationFilterParams{value: val, isSet: true}
}

func (v NullableGraphNodeRelationFilterParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphNodeRelationFilterParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


