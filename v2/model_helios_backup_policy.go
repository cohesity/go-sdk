/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the HeliosBackupPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeliosBackupPolicy{}

// HeliosBackupPolicy Specifies the backup schedule and retentions of a Protection Policy.
type HeliosBackupPolicy struct {
	Bmr *HeliosBmrBackupPolicy `json:"bmr,omitempty"`
	Cdp *HeliosCdpBackupPolicy `json:"cdp,omitempty"`
	Log *HeliosLogBackupPolicy `json:"log,omitempty"`
	Regular *HeliosRegularBackupPolicy `json:"regular,omitempty"`
	StorageArraySnapshot *HeliosStorageArraySnapshotBackupPolicy `json:"storageArraySnapshot,omitempty"`
}

// NewHeliosBackupPolicy instantiates a new HeliosBackupPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosBackupPolicy() *HeliosBackupPolicy {
	this := HeliosBackupPolicy{}
	return &this
}

// NewHeliosBackupPolicyWithDefaults instantiates a new HeliosBackupPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosBackupPolicyWithDefaults() *HeliosBackupPolicy {
	this := HeliosBackupPolicy{}
	return &this
}

// GetBmr returns the Bmr field value if set, zero value otherwise.
func (o *HeliosBackupPolicy) GetBmr() HeliosBmrBackupPolicy {
	if o == nil || IsNil(o.Bmr) {
		var ret HeliosBmrBackupPolicy
		return ret
	}
	return *o.Bmr
}

// GetBmrOk returns a tuple with the Bmr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosBackupPolicy) GetBmrOk() (*HeliosBmrBackupPolicy, bool) {
	if o == nil || IsNil(o.Bmr) {
		return nil, false
	}
	return o.Bmr, true
}

// HasBmr returns a boolean if a field has been set.
func (o *HeliosBackupPolicy) HasBmr() bool {
	if o != nil && !IsNil(o.Bmr) {
		return true
	}

	return false
}

// SetBmr gets a reference to the given HeliosBmrBackupPolicy and assigns it to the Bmr field.
func (o *HeliosBackupPolicy) SetBmr(v HeliosBmrBackupPolicy) {
	o.Bmr = &v
}

// GetCdp returns the Cdp field value if set, zero value otherwise.
func (o *HeliosBackupPolicy) GetCdp() HeliosCdpBackupPolicy {
	if o == nil || IsNil(o.Cdp) {
		var ret HeliosCdpBackupPolicy
		return ret
	}
	return *o.Cdp
}

// GetCdpOk returns a tuple with the Cdp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosBackupPolicy) GetCdpOk() (*HeliosCdpBackupPolicy, bool) {
	if o == nil || IsNil(o.Cdp) {
		return nil, false
	}
	return o.Cdp, true
}

// HasCdp returns a boolean if a field has been set.
func (o *HeliosBackupPolicy) HasCdp() bool {
	if o != nil && !IsNil(o.Cdp) {
		return true
	}

	return false
}

// SetCdp gets a reference to the given HeliosCdpBackupPolicy and assigns it to the Cdp field.
func (o *HeliosBackupPolicy) SetCdp(v HeliosCdpBackupPolicy) {
	o.Cdp = &v
}

// GetLog returns the Log field value if set, zero value otherwise.
func (o *HeliosBackupPolicy) GetLog() HeliosLogBackupPolicy {
	if o == nil || IsNil(o.Log) {
		var ret HeliosLogBackupPolicy
		return ret
	}
	return *o.Log
}

// GetLogOk returns a tuple with the Log field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosBackupPolicy) GetLogOk() (*HeliosLogBackupPolicy, bool) {
	if o == nil || IsNil(o.Log) {
		return nil, false
	}
	return o.Log, true
}

// HasLog returns a boolean if a field has been set.
func (o *HeliosBackupPolicy) HasLog() bool {
	if o != nil && !IsNil(o.Log) {
		return true
	}

	return false
}

// SetLog gets a reference to the given HeliosLogBackupPolicy and assigns it to the Log field.
func (o *HeliosBackupPolicy) SetLog(v HeliosLogBackupPolicy) {
	o.Log = &v
}

// GetRegular returns the Regular field value if set, zero value otherwise.
func (o *HeliosBackupPolicy) GetRegular() HeliosRegularBackupPolicy {
	if o == nil || IsNil(o.Regular) {
		var ret HeliosRegularBackupPolicy
		return ret
	}
	return *o.Regular
}

// GetRegularOk returns a tuple with the Regular field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosBackupPolicy) GetRegularOk() (*HeliosRegularBackupPolicy, bool) {
	if o == nil || IsNil(o.Regular) {
		return nil, false
	}
	return o.Regular, true
}

// HasRegular returns a boolean if a field has been set.
func (o *HeliosBackupPolicy) HasRegular() bool {
	if o != nil && !IsNil(o.Regular) {
		return true
	}

	return false
}

// SetRegular gets a reference to the given HeliosRegularBackupPolicy and assigns it to the Regular field.
func (o *HeliosBackupPolicy) SetRegular(v HeliosRegularBackupPolicy) {
	o.Regular = &v
}

// GetStorageArraySnapshot returns the StorageArraySnapshot field value if set, zero value otherwise.
func (o *HeliosBackupPolicy) GetStorageArraySnapshot() HeliosStorageArraySnapshotBackupPolicy {
	if o == nil || IsNil(o.StorageArraySnapshot) {
		var ret HeliosStorageArraySnapshotBackupPolicy
		return ret
	}
	return *o.StorageArraySnapshot
}

// GetStorageArraySnapshotOk returns a tuple with the StorageArraySnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosBackupPolicy) GetStorageArraySnapshotOk() (*HeliosStorageArraySnapshotBackupPolicy, bool) {
	if o == nil || IsNil(o.StorageArraySnapshot) {
		return nil, false
	}
	return o.StorageArraySnapshot, true
}

// HasStorageArraySnapshot returns a boolean if a field has been set.
func (o *HeliosBackupPolicy) HasStorageArraySnapshot() bool {
	if o != nil && !IsNil(o.StorageArraySnapshot) {
		return true
	}

	return false
}

// SetStorageArraySnapshot gets a reference to the given HeliosStorageArraySnapshotBackupPolicy and assigns it to the StorageArraySnapshot field.
func (o *HeliosBackupPolicy) SetStorageArraySnapshot(v HeliosStorageArraySnapshotBackupPolicy) {
	o.StorageArraySnapshot = &v
}

func (o HeliosBackupPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeliosBackupPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bmr) {
		toSerialize["bmr"] = o.Bmr
	}
	if !IsNil(o.Cdp) {
		toSerialize["cdp"] = o.Cdp
	}
	if !IsNil(o.Log) {
		toSerialize["log"] = o.Log
	}
	if !IsNil(o.Regular) {
		toSerialize["regular"] = o.Regular
	}
	if !IsNil(o.StorageArraySnapshot) {
		toSerialize["storageArraySnapshot"] = o.StorageArraySnapshot
	}
	return toSerialize, nil
}

type NullableHeliosBackupPolicy struct {
	value *HeliosBackupPolicy
	isSet bool
}

func (v NullableHeliosBackupPolicy) Get() *HeliosBackupPolicy {
	return v.value
}

func (v *NullableHeliosBackupPolicy) Set(val *HeliosBackupPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosBackupPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosBackupPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosBackupPolicy(val *HeliosBackupPolicy) *NullableHeliosBackupPolicy {
	return &NullableHeliosBackupPolicy{value: val, isSet: true}
}

func (v NullableHeliosBackupPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosBackupPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


