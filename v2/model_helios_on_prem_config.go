/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HeliosOnPremConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeliosOnPremConfig{}

// HeliosOnPremConfig Params for Helios OnPrem VM Configuration.
type HeliosOnPremConfig struct {
	// Specifies the ID of the Cluster.
	ClusterId NullableInt64 `json:"clusterId,omitempty"`
	// Subnet to use for setting up the Kubernetes cluster's internal network on which Cohesity Helios will run.
	KubernetesSubnetCidr NullableString `json:"kubernetesSubnetCidr"`
	// Name of the new Helios OnPrem VM.
	Name NullableString `json:"name"`
	NetworkConfig *ClusterCreateNetworkConfig `json:"networkConfig,omitempty"`
	// Specifies the Nodes present in this Cluster.
	Nodes []HeliosOnPremVMNode `json:"nodes,omitempty"`
	ProxyServerConfig NullableClusterProxyServerConfig `json:"proxyServerConfig,omitempty"`
	SshConfig *HeliosOnPremSSHConfig `json:"sshConfig,omitempty"`
}

type _HeliosOnPremConfig HeliosOnPremConfig

// NewHeliosOnPremConfig instantiates a new HeliosOnPremConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosOnPremConfig(kubernetesSubnetCidr NullableString, name NullableString) *HeliosOnPremConfig {
	this := HeliosOnPremConfig{}
	this.KubernetesSubnetCidr = kubernetesSubnetCidr
	this.Name = name
	return &this
}

// NewHeliosOnPremConfigWithDefaults instantiates a new HeliosOnPremConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosOnPremConfigWithDefaults() *HeliosOnPremConfig {
	this := HeliosOnPremConfig{}
	return &this
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosOnPremConfig) GetClusterId() int64 {
	if o == nil || IsNil(o.ClusterId.Get()) {
		var ret int64
		return ret
	}
	return *o.ClusterId.Get()
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosOnPremConfig) GetClusterIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterId.Get(), o.ClusterId.IsSet()
}

// HasClusterId returns a boolean if a field has been set.
func (o *HeliosOnPremConfig) HasClusterId() bool {
	if o != nil && o.ClusterId.IsSet() {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given NullableInt64 and assigns it to the ClusterId field.
func (o *HeliosOnPremConfig) SetClusterId(v int64) {
	o.ClusterId.Set(&v)
}
// SetClusterIdNil sets the value for ClusterId to be an explicit nil
func (o *HeliosOnPremConfig) SetClusterIdNil() {
	o.ClusterId.Set(nil)
}

// UnsetClusterId ensures that no value is present for ClusterId, not even an explicit nil
func (o *HeliosOnPremConfig) UnsetClusterId() {
	o.ClusterId.Unset()
}

// GetKubernetesSubnetCidr returns the KubernetesSubnetCidr field value
// If the value is explicit nil, the zero value for string will be returned
func (o *HeliosOnPremConfig) GetKubernetesSubnetCidr() string {
	if o == nil || o.KubernetesSubnetCidr.Get() == nil {
		var ret string
		return ret
	}

	return *o.KubernetesSubnetCidr.Get()
}

// GetKubernetesSubnetCidrOk returns a tuple with the KubernetesSubnetCidr field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosOnPremConfig) GetKubernetesSubnetCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubernetesSubnetCidr.Get(), o.KubernetesSubnetCidr.IsSet()
}

// SetKubernetesSubnetCidr sets field value
func (o *HeliosOnPremConfig) SetKubernetesSubnetCidr(v string) {
	o.KubernetesSubnetCidr.Set(&v)
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *HeliosOnPremConfig) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosOnPremConfig) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *HeliosOnPremConfig) SetName(v string) {
	o.Name.Set(&v)
}

// GetNetworkConfig returns the NetworkConfig field value if set, zero value otherwise.
func (o *HeliosOnPremConfig) GetNetworkConfig() ClusterCreateNetworkConfig {
	if o == nil || IsNil(o.NetworkConfig) {
		var ret ClusterCreateNetworkConfig
		return ret
	}
	return *o.NetworkConfig
}

// GetNetworkConfigOk returns a tuple with the NetworkConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosOnPremConfig) GetNetworkConfigOk() (*ClusterCreateNetworkConfig, bool) {
	if o == nil || IsNil(o.NetworkConfig) {
		return nil, false
	}
	return o.NetworkConfig, true
}

// HasNetworkConfig returns a boolean if a field has been set.
func (o *HeliosOnPremConfig) HasNetworkConfig() bool {
	if o != nil && !IsNil(o.NetworkConfig) {
		return true
	}

	return false
}

// SetNetworkConfig gets a reference to the given ClusterCreateNetworkConfig and assigns it to the NetworkConfig field.
func (o *HeliosOnPremConfig) SetNetworkConfig(v ClusterCreateNetworkConfig) {
	o.NetworkConfig = &v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *HeliosOnPremConfig) GetNodes() []HeliosOnPremVMNode {
	if o == nil || IsNil(o.Nodes) {
		var ret []HeliosOnPremVMNode
		return ret
	}
	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosOnPremConfig) GetNodesOk() ([]HeliosOnPremVMNode, bool) {
	if o == nil || IsNil(o.Nodes) {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *HeliosOnPremConfig) HasNodes() bool {
	if o != nil && !IsNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given []HeliosOnPremVMNode and assigns it to the Nodes field.
func (o *HeliosOnPremConfig) SetNodes(v []HeliosOnPremVMNode) {
	o.Nodes = v
}

// GetProxyServerConfig returns the ProxyServerConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosOnPremConfig) GetProxyServerConfig() ClusterProxyServerConfig {
	if o == nil || IsNil(o.ProxyServerConfig.Get()) {
		var ret ClusterProxyServerConfig
		return ret
	}
	return *o.ProxyServerConfig.Get()
}

// GetProxyServerConfigOk returns a tuple with the ProxyServerConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosOnPremConfig) GetProxyServerConfigOk() (*ClusterProxyServerConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProxyServerConfig.Get(), o.ProxyServerConfig.IsSet()
}

// HasProxyServerConfig returns a boolean if a field has been set.
func (o *HeliosOnPremConfig) HasProxyServerConfig() bool {
	if o != nil && o.ProxyServerConfig.IsSet() {
		return true
	}

	return false
}

// SetProxyServerConfig gets a reference to the given NullableClusterProxyServerConfig and assigns it to the ProxyServerConfig field.
func (o *HeliosOnPremConfig) SetProxyServerConfig(v ClusterProxyServerConfig) {
	o.ProxyServerConfig.Set(&v)
}
// SetProxyServerConfigNil sets the value for ProxyServerConfig to be an explicit nil
func (o *HeliosOnPremConfig) SetProxyServerConfigNil() {
	o.ProxyServerConfig.Set(nil)
}

// UnsetProxyServerConfig ensures that no value is present for ProxyServerConfig, not even an explicit nil
func (o *HeliosOnPremConfig) UnsetProxyServerConfig() {
	o.ProxyServerConfig.Unset()
}

// GetSshConfig returns the SshConfig field value if set, zero value otherwise.
func (o *HeliosOnPremConfig) GetSshConfig() HeliosOnPremSSHConfig {
	if o == nil || IsNil(o.SshConfig) {
		var ret HeliosOnPremSSHConfig
		return ret
	}
	return *o.SshConfig
}

// GetSshConfigOk returns a tuple with the SshConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosOnPremConfig) GetSshConfigOk() (*HeliosOnPremSSHConfig, bool) {
	if o == nil || IsNil(o.SshConfig) {
		return nil, false
	}
	return o.SshConfig, true
}

// HasSshConfig returns a boolean if a field has been set.
func (o *HeliosOnPremConfig) HasSshConfig() bool {
	if o != nil && !IsNil(o.SshConfig) {
		return true
	}

	return false
}

// SetSshConfig gets a reference to the given HeliosOnPremSSHConfig and assigns it to the SshConfig field.
func (o *HeliosOnPremConfig) SetSshConfig(v HeliosOnPremSSHConfig) {
	o.SshConfig = &v
}

func (o HeliosOnPremConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeliosOnPremConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterId.IsSet() {
		toSerialize["clusterId"] = o.ClusterId.Get()
	}
	toSerialize["kubernetesSubnetCidr"] = o.KubernetesSubnetCidr.Get()
	toSerialize["name"] = o.Name.Get()
	if !IsNil(o.NetworkConfig) {
		toSerialize["networkConfig"] = o.NetworkConfig
	}
	if !IsNil(o.Nodes) {
		toSerialize["nodes"] = o.Nodes
	}
	if o.ProxyServerConfig.IsSet() {
		toSerialize["proxyServerConfig"] = o.ProxyServerConfig.Get()
	}
	if !IsNil(o.SshConfig) {
		toSerialize["sshConfig"] = o.SshConfig
	}
	return toSerialize, nil
}

func (o *HeliosOnPremConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"kubernetesSubnetCidr",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHeliosOnPremConfig := _HeliosOnPremConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHeliosOnPremConfig)

	if err != nil {
		return err
	}

	*o = HeliosOnPremConfig(varHeliosOnPremConfig)

	return err
}

type NullableHeliosOnPremConfig struct {
	value *HeliosOnPremConfig
	isSet bool
}

func (v NullableHeliosOnPremConfig) Get() *HeliosOnPremConfig {
	return v.value
}

func (v *NullableHeliosOnPremConfig) Set(val *HeliosOnPremConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosOnPremConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosOnPremConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosOnPremConfig(val *HeliosOnPremConfig) *NullableHeliosOnPremConfig {
	return &NullableHeliosOnPremConfig{value: val, isSet: true}
}

func (v NullableHeliosOnPremConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosOnPremConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


