/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the IcapUriConnectionStatusList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IcapUriConnectionStatusList{}

// IcapUriConnectionStatusList Specifies a list of ICAP Uri connection status.
type IcapUriConnectionStatusList struct {
	// Specifies the list of ICAP Uri connection status.
	IcapUriConnectionStatusList []IcapUriConnectionStatus `json:"icapUriConnectionStatusList,omitempty"`
}

// NewIcapUriConnectionStatusList instantiates a new IcapUriConnectionStatusList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIcapUriConnectionStatusList() *IcapUriConnectionStatusList {
	this := IcapUriConnectionStatusList{}
	return &this
}

// NewIcapUriConnectionStatusListWithDefaults instantiates a new IcapUriConnectionStatusList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIcapUriConnectionStatusListWithDefaults() *IcapUriConnectionStatusList {
	this := IcapUriConnectionStatusList{}
	return &this
}

// GetIcapUriConnectionStatusList returns the IcapUriConnectionStatusList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IcapUriConnectionStatusList) GetIcapUriConnectionStatusList() []IcapUriConnectionStatus {
	if o == nil {
		var ret []IcapUriConnectionStatus
		return ret
	}
	return o.IcapUriConnectionStatusList
}

// GetIcapUriConnectionStatusListOk returns a tuple with the IcapUriConnectionStatusList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IcapUriConnectionStatusList) GetIcapUriConnectionStatusListOk() ([]IcapUriConnectionStatus, bool) {
	if o == nil || IsNil(o.IcapUriConnectionStatusList) {
		return nil, false
	}
	return o.IcapUriConnectionStatusList, true
}

// HasIcapUriConnectionStatusList returns a boolean if a field has been set.
func (o *IcapUriConnectionStatusList) HasIcapUriConnectionStatusList() bool {
	if o != nil && !IsNil(o.IcapUriConnectionStatusList) {
		return true
	}

	return false
}

// SetIcapUriConnectionStatusList gets a reference to the given []IcapUriConnectionStatus and assigns it to the IcapUriConnectionStatusList field.
func (o *IcapUriConnectionStatusList) SetIcapUriConnectionStatusList(v []IcapUriConnectionStatus) {
	o.IcapUriConnectionStatusList = v
}

func (o IcapUriConnectionStatusList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IcapUriConnectionStatusList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IcapUriConnectionStatusList != nil {
		toSerialize["icapUriConnectionStatusList"] = o.IcapUriConnectionStatusList
	}
	return toSerialize, nil
}

type NullableIcapUriConnectionStatusList struct {
	value *IcapUriConnectionStatusList
	isSet bool
}

func (v NullableIcapUriConnectionStatusList) Get() *IcapUriConnectionStatusList {
	return v.value
}

func (v *NullableIcapUriConnectionStatusList) Set(val *IcapUriConnectionStatusList) {
	v.value = val
	v.isSet = true
}

func (v NullableIcapUriConnectionStatusList) IsSet() bool {
	return v.isSet
}

func (v *NullableIcapUriConnectionStatusList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIcapUriConnectionStatusList(val *IcapUriConnectionStatusList) *NullableIcapUriConnectionStatusList {
	return &NullableIcapUriConnectionStatusList{value: val, isSet: true}
}

func (v NullableIcapUriConnectionStatusList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIcapUriConnectionStatusList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


