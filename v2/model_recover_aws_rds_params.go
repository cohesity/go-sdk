/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RecoverAwsRdsParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecoverAwsRdsParams{}

// RecoverAwsRdsParams Specifies the parameters to recover AWS RDS.
type RecoverAwsRdsParams struct {
	AwsTargetParams NullableRecoverAwsRdsParamsAwsTargetParams `json:"awsTargetParams,omitempty"`
	// Specifies the Protection Group Runs params to recover. All the RDS instances that are successfully backed up by specified Runs will be recovered. This can be specified along with individual snapshots of RDS instances. User has to make sure that specified Object snapshots and Protection Group Runs should not have any intersection. For example, user cannot specify multiple Runs which has same Object or an Object snapshot and a Run which has same Object's snapshot.
	RecoverProtectionGroupRunsParams []RecoverProtectionGroupRunParams `json:"recoverProtectionGroupRunsParams,omitempty"`
	// Specifies the environment of the recovery target. The corresponding params below must be filled out.
	TargetEnvironment string `json:"targetEnvironment"`
}

type _RecoverAwsRdsParams RecoverAwsRdsParams

// NewRecoverAwsRdsParams instantiates a new RecoverAwsRdsParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverAwsRdsParams(targetEnvironment string) *RecoverAwsRdsParams {
	this := RecoverAwsRdsParams{}
	this.TargetEnvironment = targetEnvironment
	return &this
}

// NewRecoverAwsRdsParamsWithDefaults instantiates a new RecoverAwsRdsParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverAwsRdsParamsWithDefaults() *RecoverAwsRdsParams {
	this := RecoverAwsRdsParams{}
	return &this
}

// GetAwsTargetParams returns the AwsTargetParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverAwsRdsParams) GetAwsTargetParams() RecoverAwsRdsParamsAwsTargetParams {
	if o == nil || IsNil(o.AwsTargetParams.Get()) {
		var ret RecoverAwsRdsParamsAwsTargetParams
		return ret
	}
	return *o.AwsTargetParams.Get()
}

// GetAwsTargetParamsOk returns a tuple with the AwsTargetParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAwsRdsParams) GetAwsTargetParamsOk() (*RecoverAwsRdsParamsAwsTargetParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.AwsTargetParams.Get(), o.AwsTargetParams.IsSet()
}

// HasAwsTargetParams returns a boolean if a field has been set.
func (o *RecoverAwsRdsParams) HasAwsTargetParams() bool {
	if o != nil && o.AwsTargetParams.IsSet() {
		return true
	}

	return false
}

// SetAwsTargetParams gets a reference to the given NullableRecoverAwsRdsParamsAwsTargetParams and assigns it to the AwsTargetParams field.
func (o *RecoverAwsRdsParams) SetAwsTargetParams(v RecoverAwsRdsParamsAwsTargetParams) {
	o.AwsTargetParams.Set(&v)
}
// SetAwsTargetParamsNil sets the value for AwsTargetParams to be an explicit nil
func (o *RecoverAwsRdsParams) SetAwsTargetParamsNil() {
	o.AwsTargetParams.Set(nil)
}

// UnsetAwsTargetParams ensures that no value is present for AwsTargetParams, not even an explicit nil
func (o *RecoverAwsRdsParams) UnsetAwsTargetParams() {
	o.AwsTargetParams.Unset()
}

// GetRecoverProtectionGroupRunsParams returns the RecoverProtectionGroupRunsParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverAwsRdsParams) GetRecoverProtectionGroupRunsParams() []RecoverProtectionGroupRunParams {
	if o == nil {
		var ret []RecoverProtectionGroupRunParams
		return ret
	}
	return o.RecoverProtectionGroupRunsParams
}

// GetRecoverProtectionGroupRunsParamsOk returns a tuple with the RecoverProtectionGroupRunsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAwsRdsParams) GetRecoverProtectionGroupRunsParamsOk() ([]RecoverProtectionGroupRunParams, bool) {
	if o == nil || IsNil(o.RecoverProtectionGroupRunsParams) {
		return nil, false
	}
	return o.RecoverProtectionGroupRunsParams, true
}

// HasRecoverProtectionGroupRunsParams returns a boolean if a field has been set.
func (o *RecoverAwsRdsParams) HasRecoverProtectionGroupRunsParams() bool {
	if o != nil && !IsNil(o.RecoverProtectionGroupRunsParams) {
		return true
	}

	return false
}

// SetRecoverProtectionGroupRunsParams gets a reference to the given []RecoverProtectionGroupRunParams and assigns it to the RecoverProtectionGroupRunsParams field.
func (o *RecoverAwsRdsParams) SetRecoverProtectionGroupRunsParams(v []RecoverProtectionGroupRunParams) {
	o.RecoverProtectionGroupRunsParams = v
}

// GetTargetEnvironment returns the TargetEnvironment field value
func (o *RecoverAwsRdsParams) GetTargetEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetEnvironment
}

// GetTargetEnvironmentOk returns a tuple with the TargetEnvironment field value
// and a boolean to check if the value has been set.
func (o *RecoverAwsRdsParams) GetTargetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetEnvironment, true
}

// SetTargetEnvironment sets field value
func (o *RecoverAwsRdsParams) SetTargetEnvironment(v string) {
	o.TargetEnvironment = v
}

func (o RecoverAwsRdsParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecoverAwsRdsParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AwsTargetParams.IsSet() {
		toSerialize["awsTargetParams"] = o.AwsTargetParams.Get()
	}
	if o.RecoverProtectionGroupRunsParams != nil {
		toSerialize["recoverProtectionGroupRunsParams"] = o.RecoverProtectionGroupRunsParams
	}
	toSerialize["targetEnvironment"] = o.TargetEnvironment
	return toSerialize, nil
}

func (o *RecoverAwsRdsParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"targetEnvironment",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRecoverAwsRdsParams := _RecoverAwsRdsParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRecoverAwsRdsParams)

	if err != nil {
		return err
	}

	*o = RecoverAwsRdsParams(varRecoverAwsRdsParams)

	return err
}

type NullableRecoverAwsRdsParams struct {
	value *RecoverAwsRdsParams
	isSet bool
}

func (v NullableRecoverAwsRdsParams) Get() *RecoverAwsRdsParams {
	return v.value
}

func (v *NullableRecoverAwsRdsParams) Set(val *RecoverAwsRdsParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverAwsRdsParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverAwsRdsParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverAwsRdsParams(val *RecoverAwsRdsParams) *NullableRecoverAwsRdsParams {
	return &NullableRecoverAwsRdsParams{value: val, isSet: true}
}

func (v NullableRecoverAwsRdsParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverAwsRdsParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


