/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the EnvironmentTypeJobParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentTypeJobParams{}

// EnvironmentTypeJobParams Specifies the policy level additional environment specific backup params. If this is not specified, default actions will be taken, for example for NAS environments, all objects within the source will be backed up.
type EnvironmentTypeJobParams struct {
	AwsSnapshotParams *AwsSnapshotManagerParams `json:"awsSnapshotParams,omitempty"`
	ExchangeParams *ExchangeEnvJobParams `json:"exchangeParams,omitempty"`
	ExternallyTriggeredJobParams *ExternallyTriggeredJobParams `json:"externallyTriggeredJobParams,omitempty"`
	HypervParams *HypervEnvJobParams `json:"hypervParams,omitempty"`
	NasParams *NasEnvJobParams `json:"nasParams,omitempty"`
	Office365Params *O365EnvJobParams `json:"office365Params,omitempty"`
	OracleParams *OracleEnvJobParams `json:"oracleParams,omitempty"`
	PhysicalParams *PhysicalEnvJobParams `json:"physicalParams,omitempty"`
	PureParams *SanEnvJobParams `json:"pureParams,omitempty"`
	SqlParams *CommonMSSQLProtectionGroupParams `json:"sqlParams,omitempty"`
	VmwareParams *VmwareEnvJobParams `json:"vmwareParams,omitempty"`
}

// NewEnvironmentTypeJobParams instantiates a new EnvironmentTypeJobParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentTypeJobParams() *EnvironmentTypeJobParams {
	this := EnvironmentTypeJobParams{}
	return &this
}

// NewEnvironmentTypeJobParamsWithDefaults instantiates a new EnvironmentTypeJobParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentTypeJobParamsWithDefaults() *EnvironmentTypeJobParams {
	this := EnvironmentTypeJobParams{}
	return &this
}

// GetAwsSnapshotParams returns the AwsSnapshotParams field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParams) GetAwsSnapshotParams() AwsSnapshotManagerParams {
	if o == nil || IsNil(o.AwsSnapshotParams) {
		var ret AwsSnapshotManagerParams
		return ret
	}
	return *o.AwsSnapshotParams
}

// GetAwsSnapshotParamsOk returns a tuple with the AwsSnapshotParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParams) GetAwsSnapshotParamsOk() (*AwsSnapshotManagerParams, bool) {
	if o == nil || IsNil(o.AwsSnapshotParams) {
		return nil, false
	}
	return o.AwsSnapshotParams, true
}

// HasAwsSnapshotParams returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParams) HasAwsSnapshotParams() bool {
	if o != nil && !IsNil(o.AwsSnapshotParams) {
		return true
	}

	return false
}

// SetAwsSnapshotParams gets a reference to the given AwsSnapshotManagerParams and assigns it to the AwsSnapshotParams field.
func (o *EnvironmentTypeJobParams) SetAwsSnapshotParams(v AwsSnapshotManagerParams) {
	o.AwsSnapshotParams = &v
}

// GetExchangeParams returns the ExchangeParams field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParams) GetExchangeParams() ExchangeEnvJobParams {
	if o == nil || IsNil(o.ExchangeParams) {
		var ret ExchangeEnvJobParams
		return ret
	}
	return *o.ExchangeParams
}

// GetExchangeParamsOk returns a tuple with the ExchangeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParams) GetExchangeParamsOk() (*ExchangeEnvJobParams, bool) {
	if o == nil || IsNil(o.ExchangeParams) {
		return nil, false
	}
	return o.ExchangeParams, true
}

// HasExchangeParams returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParams) HasExchangeParams() bool {
	if o != nil && !IsNil(o.ExchangeParams) {
		return true
	}

	return false
}

// SetExchangeParams gets a reference to the given ExchangeEnvJobParams and assigns it to the ExchangeParams field.
func (o *EnvironmentTypeJobParams) SetExchangeParams(v ExchangeEnvJobParams) {
	o.ExchangeParams = &v
}

// GetExternallyTriggeredJobParams returns the ExternallyTriggeredJobParams field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParams) GetExternallyTriggeredJobParams() ExternallyTriggeredJobParams {
	if o == nil || IsNil(o.ExternallyTriggeredJobParams) {
		var ret ExternallyTriggeredJobParams
		return ret
	}
	return *o.ExternallyTriggeredJobParams
}

// GetExternallyTriggeredJobParamsOk returns a tuple with the ExternallyTriggeredJobParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParams) GetExternallyTriggeredJobParamsOk() (*ExternallyTriggeredJobParams, bool) {
	if o == nil || IsNil(o.ExternallyTriggeredJobParams) {
		return nil, false
	}
	return o.ExternallyTriggeredJobParams, true
}

// HasExternallyTriggeredJobParams returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParams) HasExternallyTriggeredJobParams() bool {
	if o != nil && !IsNil(o.ExternallyTriggeredJobParams) {
		return true
	}

	return false
}

// SetExternallyTriggeredJobParams gets a reference to the given ExternallyTriggeredJobParams and assigns it to the ExternallyTriggeredJobParams field.
func (o *EnvironmentTypeJobParams) SetExternallyTriggeredJobParams(v ExternallyTriggeredJobParams) {
	o.ExternallyTriggeredJobParams = &v
}

// GetHypervParams returns the HypervParams field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParams) GetHypervParams() HypervEnvJobParams {
	if o == nil || IsNil(o.HypervParams) {
		var ret HypervEnvJobParams
		return ret
	}
	return *o.HypervParams
}

// GetHypervParamsOk returns a tuple with the HypervParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParams) GetHypervParamsOk() (*HypervEnvJobParams, bool) {
	if o == nil || IsNil(o.HypervParams) {
		return nil, false
	}
	return o.HypervParams, true
}

// HasHypervParams returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParams) HasHypervParams() bool {
	if o != nil && !IsNil(o.HypervParams) {
		return true
	}

	return false
}

// SetHypervParams gets a reference to the given HypervEnvJobParams and assigns it to the HypervParams field.
func (o *EnvironmentTypeJobParams) SetHypervParams(v HypervEnvJobParams) {
	o.HypervParams = &v
}

// GetNasParams returns the NasParams field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParams) GetNasParams() NasEnvJobParams {
	if o == nil || IsNil(o.NasParams) {
		var ret NasEnvJobParams
		return ret
	}
	return *o.NasParams
}

// GetNasParamsOk returns a tuple with the NasParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParams) GetNasParamsOk() (*NasEnvJobParams, bool) {
	if o == nil || IsNil(o.NasParams) {
		return nil, false
	}
	return o.NasParams, true
}

// HasNasParams returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParams) HasNasParams() bool {
	if o != nil && !IsNil(o.NasParams) {
		return true
	}

	return false
}

// SetNasParams gets a reference to the given NasEnvJobParams and assigns it to the NasParams field.
func (o *EnvironmentTypeJobParams) SetNasParams(v NasEnvJobParams) {
	o.NasParams = &v
}

// GetOffice365Params returns the Office365Params field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParams) GetOffice365Params() O365EnvJobParams {
	if o == nil || IsNil(o.Office365Params) {
		var ret O365EnvJobParams
		return ret
	}
	return *o.Office365Params
}

// GetOffice365ParamsOk returns a tuple with the Office365Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParams) GetOffice365ParamsOk() (*O365EnvJobParams, bool) {
	if o == nil || IsNil(o.Office365Params) {
		return nil, false
	}
	return o.Office365Params, true
}

// HasOffice365Params returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParams) HasOffice365Params() bool {
	if o != nil && !IsNil(o.Office365Params) {
		return true
	}

	return false
}

// SetOffice365Params gets a reference to the given O365EnvJobParams and assigns it to the Office365Params field.
func (o *EnvironmentTypeJobParams) SetOffice365Params(v O365EnvJobParams) {
	o.Office365Params = &v
}

// GetOracleParams returns the OracleParams field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParams) GetOracleParams() OracleEnvJobParams {
	if o == nil || IsNil(o.OracleParams) {
		var ret OracleEnvJobParams
		return ret
	}
	return *o.OracleParams
}

// GetOracleParamsOk returns a tuple with the OracleParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParams) GetOracleParamsOk() (*OracleEnvJobParams, bool) {
	if o == nil || IsNil(o.OracleParams) {
		return nil, false
	}
	return o.OracleParams, true
}

// HasOracleParams returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParams) HasOracleParams() bool {
	if o != nil && !IsNil(o.OracleParams) {
		return true
	}

	return false
}

// SetOracleParams gets a reference to the given OracleEnvJobParams and assigns it to the OracleParams field.
func (o *EnvironmentTypeJobParams) SetOracleParams(v OracleEnvJobParams) {
	o.OracleParams = &v
}

// GetPhysicalParams returns the PhysicalParams field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParams) GetPhysicalParams() PhysicalEnvJobParams {
	if o == nil || IsNil(o.PhysicalParams) {
		var ret PhysicalEnvJobParams
		return ret
	}
	return *o.PhysicalParams
}

// GetPhysicalParamsOk returns a tuple with the PhysicalParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParams) GetPhysicalParamsOk() (*PhysicalEnvJobParams, bool) {
	if o == nil || IsNil(o.PhysicalParams) {
		return nil, false
	}
	return o.PhysicalParams, true
}

// HasPhysicalParams returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParams) HasPhysicalParams() bool {
	if o != nil && !IsNil(o.PhysicalParams) {
		return true
	}

	return false
}

// SetPhysicalParams gets a reference to the given PhysicalEnvJobParams and assigns it to the PhysicalParams field.
func (o *EnvironmentTypeJobParams) SetPhysicalParams(v PhysicalEnvJobParams) {
	o.PhysicalParams = &v
}

// GetPureParams returns the PureParams field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParams) GetPureParams() SanEnvJobParams {
	if o == nil || IsNil(o.PureParams) {
		var ret SanEnvJobParams
		return ret
	}
	return *o.PureParams
}

// GetPureParamsOk returns a tuple with the PureParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParams) GetPureParamsOk() (*SanEnvJobParams, bool) {
	if o == nil || IsNil(o.PureParams) {
		return nil, false
	}
	return o.PureParams, true
}

// HasPureParams returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParams) HasPureParams() bool {
	if o != nil && !IsNil(o.PureParams) {
		return true
	}

	return false
}

// SetPureParams gets a reference to the given SanEnvJobParams and assigns it to the PureParams field.
func (o *EnvironmentTypeJobParams) SetPureParams(v SanEnvJobParams) {
	o.PureParams = &v
}

// GetSqlParams returns the SqlParams field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParams) GetSqlParams() CommonMSSQLProtectionGroupParams {
	if o == nil || IsNil(o.SqlParams) {
		var ret CommonMSSQLProtectionGroupParams
		return ret
	}
	return *o.SqlParams
}

// GetSqlParamsOk returns a tuple with the SqlParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParams) GetSqlParamsOk() (*CommonMSSQLProtectionGroupParams, bool) {
	if o == nil || IsNil(o.SqlParams) {
		return nil, false
	}
	return o.SqlParams, true
}

// HasSqlParams returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParams) HasSqlParams() bool {
	if o != nil && !IsNil(o.SqlParams) {
		return true
	}

	return false
}

// SetSqlParams gets a reference to the given CommonMSSQLProtectionGroupParams and assigns it to the SqlParams field.
func (o *EnvironmentTypeJobParams) SetSqlParams(v CommonMSSQLProtectionGroupParams) {
	o.SqlParams = &v
}

// GetVmwareParams returns the VmwareParams field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParams) GetVmwareParams() VmwareEnvJobParams {
	if o == nil || IsNil(o.VmwareParams) {
		var ret VmwareEnvJobParams
		return ret
	}
	return *o.VmwareParams
}

// GetVmwareParamsOk returns a tuple with the VmwareParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParams) GetVmwareParamsOk() (*VmwareEnvJobParams, bool) {
	if o == nil || IsNil(o.VmwareParams) {
		return nil, false
	}
	return o.VmwareParams, true
}

// HasVmwareParams returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParams) HasVmwareParams() bool {
	if o != nil && !IsNil(o.VmwareParams) {
		return true
	}

	return false
}

// SetVmwareParams gets a reference to the given VmwareEnvJobParams and assigns it to the VmwareParams field.
func (o *EnvironmentTypeJobParams) SetVmwareParams(v VmwareEnvJobParams) {
	o.VmwareParams = &v
}

func (o EnvironmentTypeJobParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentTypeJobParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AwsSnapshotParams) {
		toSerialize["awsSnapshotParams"] = o.AwsSnapshotParams
	}
	if !IsNil(o.ExchangeParams) {
		toSerialize["exchangeParams"] = o.ExchangeParams
	}
	if !IsNil(o.ExternallyTriggeredJobParams) {
		toSerialize["externallyTriggeredJobParams"] = o.ExternallyTriggeredJobParams
	}
	if !IsNil(o.HypervParams) {
		toSerialize["hypervParams"] = o.HypervParams
	}
	if !IsNil(o.NasParams) {
		toSerialize["nasParams"] = o.NasParams
	}
	if !IsNil(o.Office365Params) {
		toSerialize["office365Params"] = o.Office365Params
	}
	if !IsNil(o.OracleParams) {
		toSerialize["oracleParams"] = o.OracleParams
	}
	if !IsNil(o.PhysicalParams) {
		toSerialize["physicalParams"] = o.PhysicalParams
	}
	if !IsNil(o.PureParams) {
		toSerialize["pureParams"] = o.PureParams
	}
	if !IsNil(o.SqlParams) {
		toSerialize["sqlParams"] = o.SqlParams
	}
	if !IsNil(o.VmwareParams) {
		toSerialize["vmwareParams"] = o.VmwareParams
	}
	return toSerialize, nil
}

type NullableEnvironmentTypeJobParams struct {
	value *EnvironmentTypeJobParams
	isSet bool
}

func (v NullableEnvironmentTypeJobParams) Get() *EnvironmentTypeJobParams {
	return v.value
}

func (v *NullableEnvironmentTypeJobParams) Set(val *EnvironmentTypeJobParams) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentTypeJobParams) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentTypeJobParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentTypeJobParams(val *EnvironmentTypeJobParams) *NullableEnvironmentTypeJobParams {
	return &NullableEnvironmentTypeJobParams{value: val, isSet: true}
}

func (v NullableEnvironmentTypeJobParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentTypeJobParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


