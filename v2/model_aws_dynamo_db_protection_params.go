/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AwsDynamoDBProtectionParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsDynamoDBProtectionParams{}

// AwsDynamoDBProtectionParams Specifies the parameters which are specific to AWS Dynamo DB related Object protection.
type AwsDynamoDBProtectionParams struct {
	// Specifies the objects to be protected.
	Objects []AwsObjectLevelParams `json:"objects,omitempty"`
}

// NewAwsDynamoDBProtectionParams instantiates a new AwsDynamoDBProtectionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsDynamoDBProtectionParams() *AwsDynamoDBProtectionParams {
	this := AwsDynamoDBProtectionParams{}
	return &this
}

// NewAwsDynamoDBProtectionParamsWithDefaults instantiates a new AwsDynamoDBProtectionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsDynamoDBProtectionParamsWithDefaults() *AwsDynamoDBProtectionParams {
	this := AwsDynamoDBProtectionParams{}
	return &this
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *AwsDynamoDBProtectionParams) GetObjects() []AwsObjectLevelParams {
	if o == nil || IsNil(o.Objects) {
		var ret []AwsObjectLevelParams
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsDynamoDBProtectionParams) GetObjectsOk() ([]AwsObjectLevelParams, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *AwsDynamoDBProtectionParams) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []AwsObjectLevelParams and assigns it to the Objects field.
func (o *AwsDynamoDBProtectionParams) SetObjects(v []AwsObjectLevelParams) {
	o.Objects = v
}

func (o AwsDynamoDBProtectionParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsDynamoDBProtectionParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Objects) {
		toSerialize["objects"] = o.Objects
	}
	return toSerialize, nil
}

type NullableAwsDynamoDBProtectionParams struct {
	value *AwsDynamoDBProtectionParams
	isSet bool
}

func (v NullableAwsDynamoDBProtectionParams) Get() *AwsDynamoDBProtectionParams {
	return v.value
}

func (v *NullableAwsDynamoDBProtectionParams) Set(val *AwsDynamoDBProtectionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsDynamoDBProtectionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsDynamoDBProtectionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsDynamoDBProtectionParams(val *AwsDynamoDBProtectionParams) *NullableAwsDynamoDBProtectionParams {
	return &NullableAwsDynamoDBProtectionParams{value: val, isSet: true}
}

func (v NullableAwsDynamoDBProtectionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsDynamoDBProtectionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


