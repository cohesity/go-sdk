/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the VmwareObjectProtectionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VmwareObjectProtectionResponse{}

// VmwareObjectProtectionResponse Specifies the input for a protection object in the VMware environment.
type VmwareObjectProtectionResponse struct {
	// Specifies a list of disks to exclude from being protected. This is only applicable to VM objects.
	ExcludeDisks []DiskInfo `json:"excludeDisks,omitempty"`
	// Specifies whether or not to truncate MS Exchange logs while taking an app consistent snapshot of this object. This is only applicable to objects which have a registered MS Exchange app.
	TruncateExchangeLogs NullableBool `json:"truncateExchangeLogs,omitempty"`
	CdpInfo *VmwareCdpObject `json:"cdpInfo,omitempty"`
	// Specifies the list of IDs of the objects to not be protected in this backup. This field only applies if provided object id is non leaf entity such as Tag or a folder. This can be used to ignore specific objects under a parent object which has been included for protection.
	ExcludeObjectIds []*int64 `json:"excludeObjectIds,omitempty"`
	StandbyInfo *VmwareStandbyObject `json:"standbyInfo,omitempty"`
}

// NewVmwareObjectProtectionResponse instantiates a new VmwareObjectProtectionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmwareObjectProtectionResponse() *VmwareObjectProtectionResponse {
	this := VmwareObjectProtectionResponse{}
	return &this
}

// NewVmwareObjectProtectionResponseWithDefaults instantiates a new VmwareObjectProtectionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmwareObjectProtectionResponseWithDefaults() *VmwareObjectProtectionResponse {
	this := VmwareObjectProtectionResponse{}
	return &this
}

// GetExcludeDisks returns the ExcludeDisks field value if set, zero value otherwise.
func (o *VmwareObjectProtectionResponse) GetExcludeDisks() []DiskInfo {
	if o == nil || IsNil(o.ExcludeDisks) {
		var ret []DiskInfo
		return ret
	}
	return o.ExcludeDisks
}

// GetExcludeDisksOk returns a tuple with the ExcludeDisks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmwareObjectProtectionResponse) GetExcludeDisksOk() ([]DiskInfo, bool) {
	if o == nil || IsNil(o.ExcludeDisks) {
		return nil, false
	}
	return o.ExcludeDisks, true
}

// HasExcludeDisks returns a boolean if a field has been set.
func (o *VmwareObjectProtectionResponse) HasExcludeDisks() bool {
	if o != nil && !IsNil(o.ExcludeDisks) {
		return true
	}

	return false
}

// SetExcludeDisks gets a reference to the given []DiskInfo and assigns it to the ExcludeDisks field.
func (o *VmwareObjectProtectionResponse) SetExcludeDisks(v []DiskInfo) {
	o.ExcludeDisks = v
}

// GetTruncateExchangeLogs returns the TruncateExchangeLogs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareObjectProtectionResponse) GetTruncateExchangeLogs() bool {
	if o == nil || IsNil(o.TruncateExchangeLogs.Get()) {
		var ret bool
		return ret
	}
	return *o.TruncateExchangeLogs.Get()
}

// GetTruncateExchangeLogsOk returns a tuple with the TruncateExchangeLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareObjectProtectionResponse) GetTruncateExchangeLogsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TruncateExchangeLogs.Get(), o.TruncateExchangeLogs.IsSet()
}

// HasTruncateExchangeLogs returns a boolean if a field has been set.
func (o *VmwareObjectProtectionResponse) HasTruncateExchangeLogs() bool {
	if o != nil && o.TruncateExchangeLogs.IsSet() {
		return true
	}

	return false
}

// SetTruncateExchangeLogs gets a reference to the given NullableBool and assigns it to the TruncateExchangeLogs field.
func (o *VmwareObjectProtectionResponse) SetTruncateExchangeLogs(v bool) {
	o.TruncateExchangeLogs.Set(&v)
}
// SetTruncateExchangeLogsNil sets the value for TruncateExchangeLogs to be an explicit nil
func (o *VmwareObjectProtectionResponse) SetTruncateExchangeLogsNil() {
	o.TruncateExchangeLogs.Set(nil)
}

// UnsetTruncateExchangeLogs ensures that no value is present for TruncateExchangeLogs, not even an explicit nil
func (o *VmwareObjectProtectionResponse) UnsetTruncateExchangeLogs() {
	o.TruncateExchangeLogs.Unset()
}

// GetCdpInfo returns the CdpInfo field value if set, zero value otherwise.
func (o *VmwareObjectProtectionResponse) GetCdpInfo() VmwareCdpObject {
	if o == nil || IsNil(o.CdpInfo) {
		var ret VmwareCdpObject
		return ret
	}
	return *o.CdpInfo
}

// GetCdpInfoOk returns a tuple with the CdpInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmwareObjectProtectionResponse) GetCdpInfoOk() (*VmwareCdpObject, bool) {
	if o == nil || IsNil(o.CdpInfo) {
		return nil, false
	}
	return o.CdpInfo, true
}

// HasCdpInfo returns a boolean if a field has been set.
func (o *VmwareObjectProtectionResponse) HasCdpInfo() bool {
	if o != nil && !IsNil(o.CdpInfo) {
		return true
	}

	return false
}

// SetCdpInfo gets a reference to the given VmwareCdpObject and assigns it to the CdpInfo field.
func (o *VmwareObjectProtectionResponse) SetCdpInfo(v VmwareCdpObject) {
	o.CdpInfo = &v
}

// GetExcludeObjectIds returns the ExcludeObjectIds field value if set, zero value otherwise.
func (o *VmwareObjectProtectionResponse) GetExcludeObjectIds() []*int64 {
	if o == nil || IsNil(o.ExcludeObjectIds) {
		var ret []*int64
		return ret
	}
	return o.ExcludeObjectIds
}

// GetExcludeObjectIdsOk returns a tuple with the ExcludeObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmwareObjectProtectionResponse) GetExcludeObjectIdsOk() ([]*int64, bool) {
	if o == nil || IsNil(o.ExcludeObjectIds) {
		return nil, false
	}
	return o.ExcludeObjectIds, true
}

// HasExcludeObjectIds returns a boolean if a field has been set.
func (o *VmwareObjectProtectionResponse) HasExcludeObjectIds() bool {
	if o != nil && !IsNil(o.ExcludeObjectIds) {
		return true
	}

	return false
}

// SetExcludeObjectIds gets a reference to the given []*int64 and assigns it to the ExcludeObjectIds field.
func (o *VmwareObjectProtectionResponse) SetExcludeObjectIds(v []*int64) {
	o.ExcludeObjectIds = v
}

// GetStandbyInfo returns the StandbyInfo field value if set, zero value otherwise.
func (o *VmwareObjectProtectionResponse) GetStandbyInfo() VmwareStandbyObject {
	if o == nil || IsNil(o.StandbyInfo) {
		var ret VmwareStandbyObject
		return ret
	}
	return *o.StandbyInfo
}

// GetStandbyInfoOk returns a tuple with the StandbyInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmwareObjectProtectionResponse) GetStandbyInfoOk() (*VmwareStandbyObject, bool) {
	if o == nil || IsNil(o.StandbyInfo) {
		return nil, false
	}
	return o.StandbyInfo, true
}

// HasStandbyInfo returns a boolean if a field has been set.
func (o *VmwareObjectProtectionResponse) HasStandbyInfo() bool {
	if o != nil && !IsNil(o.StandbyInfo) {
		return true
	}

	return false
}

// SetStandbyInfo gets a reference to the given VmwareStandbyObject and assigns it to the StandbyInfo field.
func (o *VmwareObjectProtectionResponse) SetStandbyInfo(v VmwareStandbyObject) {
	o.StandbyInfo = &v
}

func (o VmwareObjectProtectionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VmwareObjectProtectionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExcludeDisks) {
		toSerialize["excludeDisks"] = o.ExcludeDisks
	}
	if o.TruncateExchangeLogs.IsSet() {
		toSerialize["truncateExchangeLogs"] = o.TruncateExchangeLogs.Get()
	}
	if !IsNil(o.CdpInfo) {
		toSerialize["cdpInfo"] = o.CdpInfo
	}
	if !IsNil(o.ExcludeObjectIds) {
		toSerialize["excludeObjectIds"] = o.ExcludeObjectIds
	}
	if !IsNil(o.StandbyInfo) {
		toSerialize["standbyInfo"] = o.StandbyInfo
	}
	return toSerialize, nil
}

type NullableVmwareObjectProtectionResponse struct {
	value *VmwareObjectProtectionResponse
	isSet bool
}

func (v NullableVmwareObjectProtectionResponse) Get() *VmwareObjectProtectionResponse {
	return v.value
}

func (v *NullableVmwareObjectProtectionResponse) Set(val *VmwareObjectProtectionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVmwareObjectProtectionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVmwareObjectProtectionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmwareObjectProtectionResponse(val *VmwareObjectProtectionResponse) *NullableVmwareObjectProtectionResponse {
	return &NullableVmwareObjectProtectionResponse{value: val, isSet: true}
}

func (v NullableVmwareObjectProtectionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmwareObjectProtectionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


