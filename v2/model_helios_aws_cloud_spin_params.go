/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HeliosAwsCloudSpinParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeliosAwsCloudSpinParams{}

// HeliosAwsCloudSpinParams Specifies various resources when converting and deploying a VM to AWS.
type HeliosAwsCloudSpinParams struct {
	// Specifies id of the AWS region in which to deploy the VM.
	Region NullableInt64 `json:"region"`
	// Specifies id of the subnet within above VPC.
	SubnetId NullableInt64 `json:"subnetId,omitempty"`
	// Specifies id of the Virtual Private Cloud to chose for the instance type.
	VpcId NullableInt64 `json:"vpcId,omitempty"`
}

type _HeliosAwsCloudSpinParams HeliosAwsCloudSpinParams

// NewHeliosAwsCloudSpinParams instantiates a new HeliosAwsCloudSpinParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosAwsCloudSpinParams(region NullableInt64) *HeliosAwsCloudSpinParams {
	this := HeliosAwsCloudSpinParams{}
	this.Region = region
	return &this
}

// NewHeliosAwsCloudSpinParamsWithDefaults instantiates a new HeliosAwsCloudSpinParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosAwsCloudSpinParamsWithDefaults() *HeliosAwsCloudSpinParams {
	this := HeliosAwsCloudSpinParams{}
	return &this
}

// GetRegion returns the Region field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *HeliosAwsCloudSpinParams) GetRegion() int64 {
	if o == nil || o.Region.Get() == nil {
		var ret int64
		return ret
	}

	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosAwsCloudSpinParams) GetRegionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// SetRegion sets field value
func (o *HeliosAwsCloudSpinParams) SetRegion(v int64) {
	o.Region.Set(&v)
}

// GetSubnetId returns the SubnetId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosAwsCloudSpinParams) GetSubnetId() int64 {
	if o == nil || IsNil(o.SubnetId.Get()) {
		var ret int64
		return ret
	}
	return *o.SubnetId.Get()
}

// GetSubnetIdOk returns a tuple with the SubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosAwsCloudSpinParams) GetSubnetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubnetId.Get(), o.SubnetId.IsSet()
}

// HasSubnetId returns a boolean if a field has been set.
func (o *HeliosAwsCloudSpinParams) HasSubnetId() bool {
	if o != nil && o.SubnetId.IsSet() {
		return true
	}

	return false
}

// SetSubnetId gets a reference to the given NullableInt64 and assigns it to the SubnetId field.
func (o *HeliosAwsCloudSpinParams) SetSubnetId(v int64) {
	o.SubnetId.Set(&v)
}
// SetSubnetIdNil sets the value for SubnetId to be an explicit nil
func (o *HeliosAwsCloudSpinParams) SetSubnetIdNil() {
	o.SubnetId.Set(nil)
}

// UnsetSubnetId ensures that no value is present for SubnetId, not even an explicit nil
func (o *HeliosAwsCloudSpinParams) UnsetSubnetId() {
	o.SubnetId.Unset()
}

// GetVpcId returns the VpcId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosAwsCloudSpinParams) GetVpcId() int64 {
	if o == nil || IsNil(o.VpcId.Get()) {
		var ret int64
		return ret
	}
	return *o.VpcId.Get()
}

// GetVpcIdOk returns a tuple with the VpcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosAwsCloudSpinParams) GetVpcIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpcId.Get(), o.VpcId.IsSet()
}

// HasVpcId returns a boolean if a field has been set.
func (o *HeliosAwsCloudSpinParams) HasVpcId() bool {
	if o != nil && o.VpcId.IsSet() {
		return true
	}

	return false
}

// SetVpcId gets a reference to the given NullableInt64 and assigns it to the VpcId field.
func (o *HeliosAwsCloudSpinParams) SetVpcId(v int64) {
	o.VpcId.Set(&v)
}
// SetVpcIdNil sets the value for VpcId to be an explicit nil
func (o *HeliosAwsCloudSpinParams) SetVpcIdNil() {
	o.VpcId.Set(nil)
}

// UnsetVpcId ensures that no value is present for VpcId, not even an explicit nil
func (o *HeliosAwsCloudSpinParams) UnsetVpcId() {
	o.VpcId.Unset()
}

func (o HeliosAwsCloudSpinParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeliosAwsCloudSpinParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["region"] = o.Region.Get()
	if o.SubnetId.IsSet() {
		toSerialize["subnetId"] = o.SubnetId.Get()
	}
	if o.VpcId.IsSet() {
		toSerialize["vpcId"] = o.VpcId.Get()
	}
	return toSerialize, nil
}

func (o *HeliosAwsCloudSpinParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"region",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHeliosAwsCloudSpinParams := _HeliosAwsCloudSpinParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHeliosAwsCloudSpinParams)

	if err != nil {
		return err
	}

	*o = HeliosAwsCloudSpinParams(varHeliosAwsCloudSpinParams)

	return err
}

type NullableHeliosAwsCloudSpinParams struct {
	value *HeliosAwsCloudSpinParams
	isSet bool
}

func (v NullableHeliosAwsCloudSpinParams) Get() *HeliosAwsCloudSpinParams {
	return v.value
}

func (v *NullableHeliosAwsCloudSpinParams) Set(val *HeliosAwsCloudSpinParams) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosAwsCloudSpinParams) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosAwsCloudSpinParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosAwsCloudSpinParams(val *HeliosAwsCloudSpinParams) *NullableHeliosAwsCloudSpinParams {
	return &NullableHeliosAwsCloudSpinParams{value: val, isSet: true}
}

func (v NullableHeliosAwsCloudSpinParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosAwsCloudSpinParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


