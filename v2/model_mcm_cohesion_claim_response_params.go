/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the McmCohesionClaimResponseParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &McmCohesionClaimResponseParams{}

// McmCohesionClaimResponseParams Specifies the response of claiming a Cohesion Appliance to Helios.
type McmCohesionClaimResponseParams struct {
	// Unique id of the cohesion appliance with AWS
	ApplianceId NullableString `json:"applianceId,omitempty"`
	// Specifies the name of the cohesion appliance.
	ApplianceName NullableString `json:"applianceName,omitempty"`
	// Specifies the CA chain that is used to sign the Cohesion Appliance certificate.
	CaChain NullableString `json:"caChain,omitempty"`
	// Specifies the Cohesion Appliance certificate.
	Certificate NullableString `json:"certificate,omitempty"`
	// Specifies the cluster id of the appliance.
	ClusterId NullableInt64 `json:"clusterId,omitempty"`
	// Specifies the cluster incarnation id of the appliance.
	ClusterIncarnationId NullableInt64 `json:"clusterIncarnationId,omitempty"`
	// Specifies the Helios certificate that can be used to authenticate api calls made from Helios to Cohesion Appliance
	HeliosCertificate NullableString `json:"heliosCertificate,omitempty"`
	// Specifies the passphrase (if used) to encrypt the Cohesion Appliance private key.
	Passphrase NullableString `json:"passphrase,omitempty"`
	// Specifies the Cohesion Appliance private key.
	PrivateKey NullableString `json:"privateKey,omitempty"`
}

// NewMcmCohesionClaimResponseParams instantiates a new McmCohesionClaimResponseParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcmCohesionClaimResponseParams() *McmCohesionClaimResponseParams {
	this := McmCohesionClaimResponseParams{}
	return &this
}

// NewMcmCohesionClaimResponseParamsWithDefaults instantiates a new McmCohesionClaimResponseParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcmCohesionClaimResponseParamsWithDefaults() *McmCohesionClaimResponseParams {
	this := McmCohesionClaimResponseParams{}
	return &this
}

// GetApplianceId returns the ApplianceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmCohesionClaimResponseParams) GetApplianceId() string {
	if o == nil || IsNil(o.ApplianceId.Get()) {
		var ret string
		return ret
	}
	return *o.ApplianceId.Get()
}

// GetApplianceIdOk returns a tuple with the ApplianceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmCohesionClaimResponseParams) GetApplianceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApplianceId.Get(), o.ApplianceId.IsSet()
}

// HasApplianceId returns a boolean if a field has been set.
func (o *McmCohesionClaimResponseParams) HasApplianceId() bool {
	if o != nil && o.ApplianceId.IsSet() {
		return true
	}

	return false
}

// SetApplianceId gets a reference to the given NullableString and assigns it to the ApplianceId field.
func (o *McmCohesionClaimResponseParams) SetApplianceId(v string) {
	o.ApplianceId.Set(&v)
}
// SetApplianceIdNil sets the value for ApplianceId to be an explicit nil
func (o *McmCohesionClaimResponseParams) SetApplianceIdNil() {
	o.ApplianceId.Set(nil)
}

// UnsetApplianceId ensures that no value is present for ApplianceId, not even an explicit nil
func (o *McmCohesionClaimResponseParams) UnsetApplianceId() {
	o.ApplianceId.Unset()
}

// GetApplianceName returns the ApplianceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmCohesionClaimResponseParams) GetApplianceName() string {
	if o == nil || IsNil(o.ApplianceName.Get()) {
		var ret string
		return ret
	}
	return *o.ApplianceName.Get()
}

// GetApplianceNameOk returns a tuple with the ApplianceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmCohesionClaimResponseParams) GetApplianceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApplianceName.Get(), o.ApplianceName.IsSet()
}

// HasApplianceName returns a boolean if a field has been set.
func (o *McmCohesionClaimResponseParams) HasApplianceName() bool {
	if o != nil && o.ApplianceName.IsSet() {
		return true
	}

	return false
}

// SetApplianceName gets a reference to the given NullableString and assigns it to the ApplianceName field.
func (o *McmCohesionClaimResponseParams) SetApplianceName(v string) {
	o.ApplianceName.Set(&v)
}
// SetApplianceNameNil sets the value for ApplianceName to be an explicit nil
func (o *McmCohesionClaimResponseParams) SetApplianceNameNil() {
	o.ApplianceName.Set(nil)
}

// UnsetApplianceName ensures that no value is present for ApplianceName, not even an explicit nil
func (o *McmCohesionClaimResponseParams) UnsetApplianceName() {
	o.ApplianceName.Unset()
}

// GetCaChain returns the CaChain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmCohesionClaimResponseParams) GetCaChain() string {
	if o == nil || IsNil(o.CaChain.Get()) {
		var ret string
		return ret
	}
	return *o.CaChain.Get()
}

// GetCaChainOk returns a tuple with the CaChain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmCohesionClaimResponseParams) GetCaChainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CaChain.Get(), o.CaChain.IsSet()
}

// HasCaChain returns a boolean if a field has been set.
func (o *McmCohesionClaimResponseParams) HasCaChain() bool {
	if o != nil && o.CaChain.IsSet() {
		return true
	}

	return false
}

// SetCaChain gets a reference to the given NullableString and assigns it to the CaChain field.
func (o *McmCohesionClaimResponseParams) SetCaChain(v string) {
	o.CaChain.Set(&v)
}
// SetCaChainNil sets the value for CaChain to be an explicit nil
func (o *McmCohesionClaimResponseParams) SetCaChainNil() {
	o.CaChain.Set(nil)
}

// UnsetCaChain ensures that no value is present for CaChain, not even an explicit nil
func (o *McmCohesionClaimResponseParams) UnsetCaChain() {
	o.CaChain.Unset()
}

// GetCertificate returns the Certificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmCohesionClaimResponseParams) GetCertificate() string {
	if o == nil || IsNil(o.Certificate.Get()) {
		var ret string
		return ret
	}
	return *o.Certificate.Get()
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmCohesionClaimResponseParams) GetCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Certificate.Get(), o.Certificate.IsSet()
}

// HasCertificate returns a boolean if a field has been set.
func (o *McmCohesionClaimResponseParams) HasCertificate() bool {
	if o != nil && o.Certificate.IsSet() {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given NullableString and assigns it to the Certificate field.
func (o *McmCohesionClaimResponseParams) SetCertificate(v string) {
	o.Certificate.Set(&v)
}
// SetCertificateNil sets the value for Certificate to be an explicit nil
func (o *McmCohesionClaimResponseParams) SetCertificateNil() {
	o.Certificate.Set(nil)
}

// UnsetCertificate ensures that no value is present for Certificate, not even an explicit nil
func (o *McmCohesionClaimResponseParams) UnsetCertificate() {
	o.Certificate.Unset()
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmCohesionClaimResponseParams) GetClusterId() int64 {
	if o == nil || IsNil(o.ClusterId.Get()) {
		var ret int64
		return ret
	}
	return *o.ClusterId.Get()
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmCohesionClaimResponseParams) GetClusterIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterId.Get(), o.ClusterId.IsSet()
}

// HasClusterId returns a boolean if a field has been set.
func (o *McmCohesionClaimResponseParams) HasClusterId() bool {
	if o != nil && o.ClusterId.IsSet() {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given NullableInt64 and assigns it to the ClusterId field.
func (o *McmCohesionClaimResponseParams) SetClusterId(v int64) {
	o.ClusterId.Set(&v)
}
// SetClusterIdNil sets the value for ClusterId to be an explicit nil
func (o *McmCohesionClaimResponseParams) SetClusterIdNil() {
	o.ClusterId.Set(nil)
}

// UnsetClusterId ensures that no value is present for ClusterId, not even an explicit nil
func (o *McmCohesionClaimResponseParams) UnsetClusterId() {
	o.ClusterId.Unset()
}

// GetClusterIncarnationId returns the ClusterIncarnationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmCohesionClaimResponseParams) GetClusterIncarnationId() int64 {
	if o == nil || IsNil(o.ClusterIncarnationId.Get()) {
		var ret int64
		return ret
	}
	return *o.ClusterIncarnationId.Get()
}

// GetClusterIncarnationIdOk returns a tuple with the ClusterIncarnationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmCohesionClaimResponseParams) GetClusterIncarnationIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterIncarnationId.Get(), o.ClusterIncarnationId.IsSet()
}

// HasClusterIncarnationId returns a boolean if a field has been set.
func (o *McmCohesionClaimResponseParams) HasClusterIncarnationId() bool {
	if o != nil && o.ClusterIncarnationId.IsSet() {
		return true
	}

	return false
}

// SetClusterIncarnationId gets a reference to the given NullableInt64 and assigns it to the ClusterIncarnationId field.
func (o *McmCohesionClaimResponseParams) SetClusterIncarnationId(v int64) {
	o.ClusterIncarnationId.Set(&v)
}
// SetClusterIncarnationIdNil sets the value for ClusterIncarnationId to be an explicit nil
func (o *McmCohesionClaimResponseParams) SetClusterIncarnationIdNil() {
	o.ClusterIncarnationId.Set(nil)
}

// UnsetClusterIncarnationId ensures that no value is present for ClusterIncarnationId, not even an explicit nil
func (o *McmCohesionClaimResponseParams) UnsetClusterIncarnationId() {
	o.ClusterIncarnationId.Unset()
}

// GetHeliosCertificate returns the HeliosCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmCohesionClaimResponseParams) GetHeliosCertificate() string {
	if o == nil || IsNil(o.HeliosCertificate.Get()) {
		var ret string
		return ret
	}
	return *o.HeliosCertificate.Get()
}

// GetHeliosCertificateOk returns a tuple with the HeliosCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmCohesionClaimResponseParams) GetHeliosCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HeliosCertificate.Get(), o.HeliosCertificate.IsSet()
}

// HasHeliosCertificate returns a boolean if a field has been set.
func (o *McmCohesionClaimResponseParams) HasHeliosCertificate() bool {
	if o != nil && o.HeliosCertificate.IsSet() {
		return true
	}

	return false
}

// SetHeliosCertificate gets a reference to the given NullableString and assigns it to the HeliosCertificate field.
func (o *McmCohesionClaimResponseParams) SetHeliosCertificate(v string) {
	o.HeliosCertificate.Set(&v)
}
// SetHeliosCertificateNil sets the value for HeliosCertificate to be an explicit nil
func (o *McmCohesionClaimResponseParams) SetHeliosCertificateNil() {
	o.HeliosCertificate.Set(nil)
}

// UnsetHeliosCertificate ensures that no value is present for HeliosCertificate, not even an explicit nil
func (o *McmCohesionClaimResponseParams) UnsetHeliosCertificate() {
	o.HeliosCertificate.Unset()
}

// GetPassphrase returns the Passphrase field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmCohesionClaimResponseParams) GetPassphrase() string {
	if o == nil || IsNil(o.Passphrase.Get()) {
		var ret string
		return ret
	}
	return *o.Passphrase.Get()
}

// GetPassphraseOk returns a tuple with the Passphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmCohesionClaimResponseParams) GetPassphraseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Passphrase.Get(), o.Passphrase.IsSet()
}

// HasPassphrase returns a boolean if a field has been set.
func (o *McmCohesionClaimResponseParams) HasPassphrase() bool {
	if o != nil && o.Passphrase.IsSet() {
		return true
	}

	return false
}

// SetPassphrase gets a reference to the given NullableString and assigns it to the Passphrase field.
func (o *McmCohesionClaimResponseParams) SetPassphrase(v string) {
	o.Passphrase.Set(&v)
}
// SetPassphraseNil sets the value for Passphrase to be an explicit nil
func (o *McmCohesionClaimResponseParams) SetPassphraseNil() {
	o.Passphrase.Set(nil)
}

// UnsetPassphrase ensures that no value is present for Passphrase, not even an explicit nil
func (o *McmCohesionClaimResponseParams) UnsetPassphrase() {
	o.Passphrase.Unset()
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmCohesionClaimResponseParams) GetPrivateKey() string {
	if o == nil || IsNil(o.PrivateKey.Get()) {
		var ret string
		return ret
	}
	return *o.PrivateKey.Get()
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmCohesionClaimResponseParams) GetPrivateKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrivateKey.Get(), o.PrivateKey.IsSet()
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *McmCohesionClaimResponseParams) HasPrivateKey() bool {
	if o != nil && o.PrivateKey.IsSet() {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given NullableString and assigns it to the PrivateKey field.
func (o *McmCohesionClaimResponseParams) SetPrivateKey(v string) {
	o.PrivateKey.Set(&v)
}
// SetPrivateKeyNil sets the value for PrivateKey to be an explicit nil
func (o *McmCohesionClaimResponseParams) SetPrivateKeyNil() {
	o.PrivateKey.Set(nil)
}

// UnsetPrivateKey ensures that no value is present for PrivateKey, not even an explicit nil
func (o *McmCohesionClaimResponseParams) UnsetPrivateKey() {
	o.PrivateKey.Unset()
}

func (o McmCohesionClaimResponseParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o McmCohesionClaimResponseParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplianceId.IsSet() {
		toSerialize["applianceId"] = o.ApplianceId.Get()
	}
	if o.ApplianceName.IsSet() {
		toSerialize["applianceName"] = o.ApplianceName.Get()
	}
	if o.CaChain.IsSet() {
		toSerialize["caChain"] = o.CaChain.Get()
	}
	if o.Certificate.IsSet() {
		toSerialize["certificate"] = o.Certificate.Get()
	}
	if o.ClusterId.IsSet() {
		toSerialize["clusterId"] = o.ClusterId.Get()
	}
	if o.ClusterIncarnationId.IsSet() {
		toSerialize["clusterIncarnationId"] = o.ClusterIncarnationId.Get()
	}
	if o.HeliosCertificate.IsSet() {
		toSerialize["heliosCertificate"] = o.HeliosCertificate.Get()
	}
	if o.Passphrase.IsSet() {
		toSerialize["passphrase"] = o.Passphrase.Get()
	}
	if o.PrivateKey.IsSet() {
		toSerialize["privateKey"] = o.PrivateKey.Get()
	}
	return toSerialize, nil
}

type NullableMcmCohesionClaimResponseParams struct {
	value *McmCohesionClaimResponseParams
	isSet bool
}

func (v NullableMcmCohesionClaimResponseParams) Get() *McmCohesionClaimResponseParams {
	return v.value
}

func (v *NullableMcmCohesionClaimResponseParams) Set(val *McmCohesionClaimResponseParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMcmCohesionClaimResponseParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMcmCohesionClaimResponseParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcmCohesionClaimResponseParams(val *McmCohesionClaimResponseParams) *NullableMcmCohesionClaimResponseParams {
	return &NullableMcmCohesionClaimResponseParams{value: val, isSet: true}
}

func (v NullableMcmCohesionClaimResponseParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcmCohesionClaimResponseParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


