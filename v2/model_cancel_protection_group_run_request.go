/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CancelProtectionGroupRunRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CancelProtectionGroupRunRequest{}

// CancelProtectionGroupRunRequest Specifies the request to cancel a protection run.
type CancelProtectionGroupRunRequest struct {
	// Specifies the task id of the archival run.
	ArchivalTaskId []string `json:"archivalTaskId,omitempty"`
	// Specifies the task id of the cloudSpin run.
	CloudSpinTaskId []string `json:"cloudSpinTaskId,omitempty"`
	// Specifies the task id of the local run.
	LocalTaskId NullableString `json:"localTaskId,omitempty" validate:"regexp=^\\\\d+:\\\\d+:\\\\d+$"`
	// List of entity ids for which we need to cancel the backup tasks. If this is provided it will not cancel the complete run but will cancel only subset of backup tasks (if backup tasks are cancelled correspoding copy task will also get cancelled). If the backup tasks are completed successfully it will not cancel those backup tasks.
	ObjectIds []int64 `json:"objectIds,omitempty"`
	// Specifies the task id of the replication run.
	ReplicationTaskId []string `json:"replicationTaskId,omitempty"`
	// Specifies a unique run id of the Protection Group run.
	RunId NullableString `json:"runId" validate:"regexp=^\\\\d+:\\\\d+$"`
}

type _CancelProtectionGroupRunRequest CancelProtectionGroupRunRequest

// NewCancelProtectionGroupRunRequest instantiates a new CancelProtectionGroupRunRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancelProtectionGroupRunRequest(runId NullableString) *CancelProtectionGroupRunRequest {
	this := CancelProtectionGroupRunRequest{}
	this.RunId = runId
	return &this
}

// NewCancelProtectionGroupRunRequestWithDefaults instantiates a new CancelProtectionGroupRunRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancelProtectionGroupRunRequestWithDefaults() *CancelProtectionGroupRunRequest {
	this := CancelProtectionGroupRunRequest{}
	return &this
}

// GetArchivalTaskId returns the ArchivalTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CancelProtectionGroupRunRequest) GetArchivalTaskId() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ArchivalTaskId
}

// GetArchivalTaskIdOk returns a tuple with the ArchivalTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CancelProtectionGroupRunRequest) GetArchivalTaskIdOk() ([]string, bool) {
	if o == nil || IsNil(o.ArchivalTaskId) {
		return nil, false
	}
	return o.ArchivalTaskId, true
}

// HasArchivalTaskId returns a boolean if a field has been set.
func (o *CancelProtectionGroupRunRequest) HasArchivalTaskId() bool {
	if o != nil && !IsNil(o.ArchivalTaskId) {
		return true
	}

	return false
}

// SetArchivalTaskId gets a reference to the given []string and assigns it to the ArchivalTaskId field.
func (o *CancelProtectionGroupRunRequest) SetArchivalTaskId(v []string) {
	o.ArchivalTaskId = v
}

// GetCloudSpinTaskId returns the CloudSpinTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CancelProtectionGroupRunRequest) GetCloudSpinTaskId() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.CloudSpinTaskId
}

// GetCloudSpinTaskIdOk returns a tuple with the CloudSpinTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CancelProtectionGroupRunRequest) GetCloudSpinTaskIdOk() ([]string, bool) {
	if o == nil || IsNil(o.CloudSpinTaskId) {
		return nil, false
	}
	return o.CloudSpinTaskId, true
}

// HasCloudSpinTaskId returns a boolean if a field has been set.
func (o *CancelProtectionGroupRunRequest) HasCloudSpinTaskId() bool {
	if o != nil && !IsNil(o.CloudSpinTaskId) {
		return true
	}

	return false
}

// SetCloudSpinTaskId gets a reference to the given []string and assigns it to the CloudSpinTaskId field.
func (o *CancelProtectionGroupRunRequest) SetCloudSpinTaskId(v []string) {
	o.CloudSpinTaskId = v
}

// GetLocalTaskId returns the LocalTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CancelProtectionGroupRunRequest) GetLocalTaskId() string {
	if o == nil || IsNil(o.LocalTaskId.Get()) {
		var ret string
		return ret
	}
	return *o.LocalTaskId.Get()
}

// GetLocalTaskIdOk returns a tuple with the LocalTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CancelProtectionGroupRunRequest) GetLocalTaskIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalTaskId.Get(), o.LocalTaskId.IsSet()
}

// HasLocalTaskId returns a boolean if a field has been set.
func (o *CancelProtectionGroupRunRequest) HasLocalTaskId() bool {
	if o != nil && o.LocalTaskId.IsSet() {
		return true
	}

	return false
}

// SetLocalTaskId gets a reference to the given NullableString and assigns it to the LocalTaskId field.
func (o *CancelProtectionGroupRunRequest) SetLocalTaskId(v string) {
	o.LocalTaskId.Set(&v)
}
// SetLocalTaskIdNil sets the value for LocalTaskId to be an explicit nil
func (o *CancelProtectionGroupRunRequest) SetLocalTaskIdNil() {
	o.LocalTaskId.Set(nil)
}

// UnsetLocalTaskId ensures that no value is present for LocalTaskId, not even an explicit nil
func (o *CancelProtectionGroupRunRequest) UnsetLocalTaskId() {
	o.LocalTaskId.Unset()
}

// GetObjectIds returns the ObjectIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CancelProtectionGroupRunRequest) GetObjectIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.ObjectIds
}

// GetObjectIdsOk returns a tuple with the ObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CancelProtectionGroupRunRequest) GetObjectIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.ObjectIds) {
		return nil, false
	}
	return o.ObjectIds, true
}

// HasObjectIds returns a boolean if a field has been set.
func (o *CancelProtectionGroupRunRequest) HasObjectIds() bool {
	if o != nil && !IsNil(o.ObjectIds) {
		return true
	}

	return false
}

// SetObjectIds gets a reference to the given []int64 and assigns it to the ObjectIds field.
func (o *CancelProtectionGroupRunRequest) SetObjectIds(v []int64) {
	o.ObjectIds = v
}

// GetReplicationTaskId returns the ReplicationTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CancelProtectionGroupRunRequest) GetReplicationTaskId() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ReplicationTaskId
}

// GetReplicationTaskIdOk returns a tuple with the ReplicationTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CancelProtectionGroupRunRequest) GetReplicationTaskIdOk() ([]string, bool) {
	if o == nil || IsNil(o.ReplicationTaskId) {
		return nil, false
	}
	return o.ReplicationTaskId, true
}

// HasReplicationTaskId returns a boolean if a field has been set.
func (o *CancelProtectionGroupRunRequest) HasReplicationTaskId() bool {
	if o != nil && !IsNil(o.ReplicationTaskId) {
		return true
	}

	return false
}

// SetReplicationTaskId gets a reference to the given []string and assigns it to the ReplicationTaskId field.
func (o *CancelProtectionGroupRunRequest) SetReplicationTaskId(v []string) {
	o.ReplicationTaskId = v
}

// GetRunId returns the RunId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CancelProtectionGroupRunRequest) GetRunId() string {
	if o == nil || o.RunId.Get() == nil {
		var ret string
		return ret
	}

	return *o.RunId.Get()
}

// GetRunIdOk returns a tuple with the RunId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CancelProtectionGroupRunRequest) GetRunIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunId.Get(), o.RunId.IsSet()
}

// SetRunId sets field value
func (o *CancelProtectionGroupRunRequest) SetRunId(v string) {
	o.RunId.Set(&v)
}

func (o CancelProtectionGroupRunRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CancelProtectionGroupRunRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ArchivalTaskId != nil {
		toSerialize["archivalTaskId"] = o.ArchivalTaskId
	}
	if o.CloudSpinTaskId != nil {
		toSerialize["cloudSpinTaskId"] = o.CloudSpinTaskId
	}
	if o.LocalTaskId.IsSet() {
		toSerialize["localTaskId"] = o.LocalTaskId.Get()
	}
	if o.ObjectIds != nil {
		toSerialize["objectIds"] = o.ObjectIds
	}
	if o.ReplicationTaskId != nil {
		toSerialize["replicationTaskId"] = o.ReplicationTaskId
	}
	toSerialize["runId"] = o.RunId.Get()
	return toSerialize, nil
}

func (o *CancelProtectionGroupRunRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"runId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCancelProtectionGroupRunRequest := _CancelProtectionGroupRunRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCancelProtectionGroupRunRequest)

	if err != nil {
		return err
	}

	*o = CancelProtectionGroupRunRequest(varCancelProtectionGroupRunRequest)

	return err
}

type NullableCancelProtectionGroupRunRequest struct {
	value *CancelProtectionGroupRunRequest
	isSet bool
}

func (v NullableCancelProtectionGroupRunRequest) Get() *CancelProtectionGroupRunRequest {
	return v.value
}

func (v *NullableCancelProtectionGroupRunRequest) Set(val *CancelProtectionGroupRunRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCancelProtectionGroupRunRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCancelProtectionGroupRunRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancelProtectionGroupRunRequest(val *CancelProtectionGroupRunRequest) *NullableCancelProtectionGroupRunRequest {
	return &NullableCancelProtectionGroupRunRequest{value: val, isSet: true}
}

func (v NullableCancelProtectionGroupRunRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancelProtectionGroupRunRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


