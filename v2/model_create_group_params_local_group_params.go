/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CreateGroupParamsLocalGroupParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateGroupParamsLocalGroupParams{}

// CreateGroupParamsLocalGroupParams Specifies the LOCAL group properties.
type CreateGroupParamsLocalGroupParams struct {
	// Specifies the LOCAL users which are part of this group.
	UserSids []string `json:"userSids,omitempty"`
	// Specifies the usernames of the LOCAL users which are part of this group.
	Usernames []string `json:"usernames,omitempty"`
}

// NewCreateGroupParamsLocalGroupParams instantiates a new CreateGroupParamsLocalGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateGroupParamsLocalGroupParams() *CreateGroupParamsLocalGroupParams {
	this := CreateGroupParamsLocalGroupParams{}
	return &this
}

// NewCreateGroupParamsLocalGroupParamsWithDefaults instantiates a new CreateGroupParamsLocalGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateGroupParamsLocalGroupParamsWithDefaults() *CreateGroupParamsLocalGroupParams {
	this := CreateGroupParamsLocalGroupParams{}
	return &this
}

// GetUserSids returns the UserSids field value if set, zero value otherwise.
func (o *CreateGroupParamsLocalGroupParams) GetUserSids() []string {
	if o == nil || IsNil(o.UserSids) {
		var ret []string
		return ret
	}
	return o.UserSids
}

// GetUserSidsOk returns a tuple with the UserSids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGroupParamsLocalGroupParams) GetUserSidsOk() ([]string, bool) {
	if o == nil || IsNil(o.UserSids) {
		return nil, false
	}
	return o.UserSids, true
}

// HasUserSids returns a boolean if a field has been set.
func (o *CreateGroupParamsLocalGroupParams) HasUserSids() bool {
	if o != nil && !IsNil(o.UserSids) {
		return true
	}

	return false
}

// SetUserSids gets a reference to the given []string and assigns it to the UserSids field.
func (o *CreateGroupParamsLocalGroupParams) SetUserSids(v []string) {
	o.UserSids = v
}

// GetUsernames returns the Usernames field value if set, zero value otherwise.
func (o *CreateGroupParamsLocalGroupParams) GetUsernames() []string {
	if o == nil || IsNil(o.Usernames) {
		var ret []string
		return ret
	}
	return o.Usernames
}

// GetUsernamesOk returns a tuple with the Usernames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGroupParamsLocalGroupParams) GetUsernamesOk() ([]string, bool) {
	if o == nil || IsNil(o.Usernames) {
		return nil, false
	}
	return o.Usernames, true
}

// HasUsernames returns a boolean if a field has been set.
func (o *CreateGroupParamsLocalGroupParams) HasUsernames() bool {
	if o != nil && !IsNil(o.Usernames) {
		return true
	}

	return false
}

// SetUsernames gets a reference to the given []string and assigns it to the Usernames field.
func (o *CreateGroupParamsLocalGroupParams) SetUsernames(v []string) {
	o.Usernames = v
}

func (o CreateGroupParamsLocalGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateGroupParamsLocalGroupParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserSids) {
		toSerialize["userSids"] = o.UserSids
	}
	if !IsNil(o.Usernames) {
		toSerialize["usernames"] = o.Usernames
	}
	return toSerialize, nil
}

type NullableCreateGroupParamsLocalGroupParams struct {
	value *CreateGroupParamsLocalGroupParams
	isSet bool
}

func (v NullableCreateGroupParamsLocalGroupParams) Get() *CreateGroupParamsLocalGroupParams {
	return v.value
}

func (v *NullableCreateGroupParamsLocalGroupParams) Set(val *CreateGroupParamsLocalGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateGroupParamsLocalGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateGroupParamsLocalGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateGroupParamsLocalGroupParams(val *CreateGroupParamsLocalGroupParams) *NullableCreateGroupParamsLocalGroupParams {
	return &NullableCreateGroupParamsLocalGroupParams{value: val, isSet: true}
}

func (v NullableCreateGroupParamsLocalGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateGroupParamsLocalGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


