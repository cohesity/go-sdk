/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the BackupRunStatsInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupRunStatsInfo{}

// BackupRunStatsInfo Specifies the stats of a local backup run.
type BackupRunStatsInfo struct {
	BackupGenericStats *BackupGenericStats `json:"backupGenericStats,omitempty"`
	NasStats *BackupNasStats `json:"nasStats,omitempty"`
	// Specifies stats for objects.
	Objects []ObjectStatsInfo `json:"objects,omitempty"`
}

// NewBackupRunStatsInfo instantiates a new BackupRunStatsInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupRunStatsInfo() *BackupRunStatsInfo {
	this := BackupRunStatsInfo{}
	return &this
}

// NewBackupRunStatsInfoWithDefaults instantiates a new BackupRunStatsInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupRunStatsInfoWithDefaults() *BackupRunStatsInfo {
	this := BackupRunStatsInfo{}
	return &this
}

// GetBackupGenericStats returns the BackupGenericStats field value if set, zero value otherwise.
func (o *BackupRunStatsInfo) GetBackupGenericStats() BackupGenericStats {
	if o == nil || IsNil(o.BackupGenericStats) {
		var ret BackupGenericStats
		return ret
	}
	return *o.BackupGenericStats
}

// GetBackupGenericStatsOk returns a tuple with the BackupGenericStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRunStatsInfo) GetBackupGenericStatsOk() (*BackupGenericStats, bool) {
	if o == nil || IsNil(o.BackupGenericStats) {
		return nil, false
	}
	return o.BackupGenericStats, true
}

// HasBackupGenericStats returns a boolean if a field has been set.
func (o *BackupRunStatsInfo) HasBackupGenericStats() bool {
	if o != nil && !IsNil(o.BackupGenericStats) {
		return true
	}

	return false
}

// SetBackupGenericStats gets a reference to the given BackupGenericStats and assigns it to the BackupGenericStats field.
func (o *BackupRunStatsInfo) SetBackupGenericStats(v BackupGenericStats) {
	o.BackupGenericStats = &v
}

// GetNasStats returns the NasStats field value if set, zero value otherwise.
func (o *BackupRunStatsInfo) GetNasStats() BackupNasStats {
	if o == nil || IsNil(o.NasStats) {
		var ret BackupNasStats
		return ret
	}
	return *o.NasStats
}

// GetNasStatsOk returns a tuple with the NasStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRunStatsInfo) GetNasStatsOk() (*BackupNasStats, bool) {
	if o == nil || IsNil(o.NasStats) {
		return nil, false
	}
	return o.NasStats, true
}

// HasNasStats returns a boolean if a field has been set.
func (o *BackupRunStatsInfo) HasNasStats() bool {
	if o != nil && !IsNil(o.NasStats) {
		return true
	}

	return false
}

// SetNasStats gets a reference to the given BackupNasStats and assigns it to the NasStats field.
func (o *BackupRunStatsInfo) SetNasStats(v BackupNasStats) {
	o.NasStats = &v
}

// GetObjects returns the Objects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupRunStatsInfo) GetObjects() []ObjectStatsInfo {
	if o == nil {
		var ret []ObjectStatsInfo
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupRunStatsInfo) GetObjectsOk() ([]ObjectStatsInfo, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *BackupRunStatsInfo) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []ObjectStatsInfo and assigns it to the Objects field.
func (o *BackupRunStatsInfo) SetObjects(v []ObjectStatsInfo) {
	o.Objects = v
}

func (o BackupRunStatsInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupRunStatsInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackupGenericStats) {
		toSerialize["backupGenericStats"] = o.BackupGenericStats
	}
	if !IsNil(o.NasStats) {
		toSerialize["nasStats"] = o.NasStats
	}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	return toSerialize, nil
}

type NullableBackupRunStatsInfo struct {
	value *BackupRunStatsInfo
	isSet bool
}

func (v NullableBackupRunStatsInfo) Get() *BackupRunStatsInfo {
	return v.value
}

func (v *NullableBackupRunStatsInfo) Set(val *BackupRunStatsInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupRunStatsInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupRunStatsInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupRunStatsInfo(val *BackupRunStatsInfo) *NullableBackupRunStatsInfo {
	return &NullableBackupRunStatsInfo{value: val, isSet: true}
}

func (v NullableBackupRunStatsInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupRunStatsInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


