/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MsGroupParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MsGroupParam{}

// MsGroupParam Specifies parameters to recover MS group.
type MsGroupParam struct {
	MailboxRestoreParams *MsGroupParamMailboxRestoreParams `json:"mailboxRestoreParams,omitempty"`
	// Specifies whether mailbox restore is full or granular.
	MailboxRestoreType NullableString `json:"mailboxRestoreType,omitempty"`
	// Specifies if the entire Group (mailbox + site) is to be restored.
	RecoverEntireGroup NullableBool `json:"recoverEntireGroup,omitempty"`
	RecoverObject MsGroupParamRecoverObject `json:"recoverObject"`
	// Specifies the parameters to recover a MSGroup site document.
	SiteRestoreParams []OneDriveParam `json:"siteRestoreParams,omitempty"`
	// Specifies whether site restore is full or granular.
	SiteRestoreType NullableString `json:"siteRestoreType,omitempty"`
}

type _MsGroupParam MsGroupParam

// NewMsGroupParam instantiates a new MsGroupParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMsGroupParam(recoverObject MsGroupParamRecoverObject) *MsGroupParam {
	this := MsGroupParam{}
	this.RecoverObject = recoverObject
	return &this
}

// NewMsGroupParamWithDefaults instantiates a new MsGroupParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMsGroupParamWithDefaults() *MsGroupParam {
	this := MsGroupParam{}
	return &this
}

// GetMailboxRestoreParams returns the MailboxRestoreParams field value if set, zero value otherwise.
func (o *MsGroupParam) GetMailboxRestoreParams() MsGroupParamMailboxRestoreParams {
	if o == nil || IsNil(o.MailboxRestoreParams) {
		var ret MsGroupParamMailboxRestoreParams
		return ret
	}
	return *o.MailboxRestoreParams
}

// GetMailboxRestoreParamsOk returns a tuple with the MailboxRestoreParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsGroupParam) GetMailboxRestoreParamsOk() (*MsGroupParamMailboxRestoreParams, bool) {
	if o == nil || IsNil(o.MailboxRestoreParams) {
		return nil, false
	}
	return o.MailboxRestoreParams, true
}

// HasMailboxRestoreParams returns a boolean if a field has been set.
func (o *MsGroupParam) HasMailboxRestoreParams() bool {
	if o != nil && !IsNil(o.MailboxRestoreParams) {
		return true
	}

	return false
}

// SetMailboxRestoreParams gets a reference to the given MsGroupParamMailboxRestoreParams and assigns it to the MailboxRestoreParams field.
func (o *MsGroupParam) SetMailboxRestoreParams(v MsGroupParamMailboxRestoreParams) {
	o.MailboxRestoreParams = &v
}

// GetMailboxRestoreType returns the MailboxRestoreType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MsGroupParam) GetMailboxRestoreType() string {
	if o == nil || IsNil(o.MailboxRestoreType.Get()) {
		var ret string
		return ret
	}
	return *o.MailboxRestoreType.Get()
}

// GetMailboxRestoreTypeOk returns a tuple with the MailboxRestoreType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MsGroupParam) GetMailboxRestoreTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MailboxRestoreType.Get(), o.MailboxRestoreType.IsSet()
}

// HasMailboxRestoreType returns a boolean if a field has been set.
func (o *MsGroupParam) HasMailboxRestoreType() bool {
	if o != nil && o.MailboxRestoreType.IsSet() {
		return true
	}

	return false
}

// SetMailboxRestoreType gets a reference to the given NullableString and assigns it to the MailboxRestoreType field.
func (o *MsGroupParam) SetMailboxRestoreType(v string) {
	o.MailboxRestoreType.Set(&v)
}
// SetMailboxRestoreTypeNil sets the value for MailboxRestoreType to be an explicit nil
func (o *MsGroupParam) SetMailboxRestoreTypeNil() {
	o.MailboxRestoreType.Set(nil)
}

// UnsetMailboxRestoreType ensures that no value is present for MailboxRestoreType, not even an explicit nil
func (o *MsGroupParam) UnsetMailboxRestoreType() {
	o.MailboxRestoreType.Unset()
}

// GetRecoverEntireGroup returns the RecoverEntireGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MsGroupParam) GetRecoverEntireGroup() bool {
	if o == nil || IsNil(o.RecoverEntireGroup.Get()) {
		var ret bool
		return ret
	}
	return *o.RecoverEntireGroup.Get()
}

// GetRecoverEntireGroupOk returns a tuple with the RecoverEntireGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MsGroupParam) GetRecoverEntireGroupOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecoverEntireGroup.Get(), o.RecoverEntireGroup.IsSet()
}

// HasRecoverEntireGroup returns a boolean if a field has been set.
func (o *MsGroupParam) HasRecoverEntireGroup() bool {
	if o != nil && o.RecoverEntireGroup.IsSet() {
		return true
	}

	return false
}

// SetRecoverEntireGroup gets a reference to the given NullableBool and assigns it to the RecoverEntireGroup field.
func (o *MsGroupParam) SetRecoverEntireGroup(v bool) {
	o.RecoverEntireGroup.Set(&v)
}
// SetRecoverEntireGroupNil sets the value for RecoverEntireGroup to be an explicit nil
func (o *MsGroupParam) SetRecoverEntireGroupNil() {
	o.RecoverEntireGroup.Set(nil)
}

// UnsetRecoverEntireGroup ensures that no value is present for RecoverEntireGroup, not even an explicit nil
func (o *MsGroupParam) UnsetRecoverEntireGroup() {
	o.RecoverEntireGroup.Unset()
}

// GetRecoverObject returns the RecoverObject field value
func (o *MsGroupParam) GetRecoverObject() MsGroupParamRecoverObject {
	if o == nil {
		var ret MsGroupParamRecoverObject
		return ret
	}

	return o.RecoverObject
}

// GetRecoverObjectOk returns a tuple with the RecoverObject field value
// and a boolean to check if the value has been set.
func (o *MsGroupParam) GetRecoverObjectOk() (*MsGroupParamRecoverObject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecoverObject, true
}

// SetRecoverObject sets field value
func (o *MsGroupParam) SetRecoverObject(v MsGroupParamRecoverObject) {
	o.RecoverObject = v
}

// GetSiteRestoreParams returns the SiteRestoreParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MsGroupParam) GetSiteRestoreParams() []OneDriveParam {
	if o == nil {
		var ret []OneDriveParam
		return ret
	}
	return o.SiteRestoreParams
}

// GetSiteRestoreParamsOk returns a tuple with the SiteRestoreParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MsGroupParam) GetSiteRestoreParamsOk() ([]OneDriveParam, bool) {
	if o == nil || IsNil(o.SiteRestoreParams) {
		return nil, false
	}
	return o.SiteRestoreParams, true
}

// HasSiteRestoreParams returns a boolean if a field has been set.
func (o *MsGroupParam) HasSiteRestoreParams() bool {
	if o != nil && !IsNil(o.SiteRestoreParams) {
		return true
	}

	return false
}

// SetSiteRestoreParams gets a reference to the given []OneDriveParam and assigns it to the SiteRestoreParams field.
func (o *MsGroupParam) SetSiteRestoreParams(v []OneDriveParam) {
	o.SiteRestoreParams = v
}

// GetSiteRestoreType returns the SiteRestoreType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MsGroupParam) GetSiteRestoreType() string {
	if o == nil || IsNil(o.SiteRestoreType.Get()) {
		var ret string
		return ret
	}
	return *o.SiteRestoreType.Get()
}

// GetSiteRestoreTypeOk returns a tuple with the SiteRestoreType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MsGroupParam) GetSiteRestoreTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SiteRestoreType.Get(), o.SiteRestoreType.IsSet()
}

// HasSiteRestoreType returns a boolean if a field has been set.
func (o *MsGroupParam) HasSiteRestoreType() bool {
	if o != nil && o.SiteRestoreType.IsSet() {
		return true
	}

	return false
}

// SetSiteRestoreType gets a reference to the given NullableString and assigns it to the SiteRestoreType field.
func (o *MsGroupParam) SetSiteRestoreType(v string) {
	o.SiteRestoreType.Set(&v)
}
// SetSiteRestoreTypeNil sets the value for SiteRestoreType to be an explicit nil
func (o *MsGroupParam) SetSiteRestoreTypeNil() {
	o.SiteRestoreType.Set(nil)
}

// UnsetSiteRestoreType ensures that no value is present for SiteRestoreType, not even an explicit nil
func (o *MsGroupParam) UnsetSiteRestoreType() {
	o.SiteRestoreType.Unset()
}

func (o MsGroupParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MsGroupParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MailboxRestoreParams) {
		toSerialize["mailboxRestoreParams"] = o.MailboxRestoreParams
	}
	if o.MailboxRestoreType.IsSet() {
		toSerialize["mailboxRestoreType"] = o.MailboxRestoreType.Get()
	}
	if o.RecoverEntireGroup.IsSet() {
		toSerialize["recoverEntireGroup"] = o.RecoverEntireGroup.Get()
	}
	toSerialize["recoverObject"] = o.RecoverObject
	if o.SiteRestoreParams != nil {
		toSerialize["siteRestoreParams"] = o.SiteRestoreParams
	}
	if o.SiteRestoreType.IsSet() {
		toSerialize["siteRestoreType"] = o.SiteRestoreType.Get()
	}
	return toSerialize, nil
}

func (o *MsGroupParam) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"recoverObject",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMsGroupParam := _MsGroupParam{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMsGroupParam)

	if err != nil {
		return err
	}

	*o = MsGroupParam(varMsGroupParam)

	return err
}

type NullableMsGroupParam struct {
	value *MsGroupParam
	isSet bool
}

func (v NullableMsGroupParam) Get() *MsGroupParam {
	return v.value
}

func (v *NullableMsGroupParam) Set(val *MsGroupParam) {
	v.value = val
	v.isSet = true
}

func (v NullableMsGroupParam) IsSet() bool {
	return v.isSet
}

func (v *NullableMsGroupParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMsGroupParam(val *MsGroupParam) *NullableMsGroupParam {
	return &NullableMsGroupParam{value: val, isSet: true}
}

func (v NullableMsGroupParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMsGroupParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


