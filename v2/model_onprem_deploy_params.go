/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the OnpremDeployParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnpremDeployParams{}

// OnpremDeployParams Specifies the details about OnpremDeploy target where backup snapshots may be converted and deployed.
type OnpremDeployParams struct {
	// Specifies the unique id of the onprem entity.
	Id NullableInt64 `json:"id,omitempty"`
	RestoreVMwareParams *RestoreVMwareVMParams `json:"restoreVMwareParams,omitempty"`
}

// NewOnpremDeployParams instantiates a new OnpremDeployParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnpremDeployParams() *OnpremDeployParams {
	this := OnpremDeployParams{}
	return &this
}

// NewOnpremDeployParamsWithDefaults instantiates a new OnpremDeployParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnpremDeployParamsWithDefaults() *OnpremDeployParams {
	this := OnpremDeployParams{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OnpremDeployParams) GetId() int64 {
	if o == nil || IsNil(o.Id.Get()) {
		var ret int64
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OnpremDeployParams) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *OnpremDeployParams) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt64 and assigns it to the Id field.
func (o *OnpremDeployParams) SetId(v int64) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *OnpremDeployParams) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *OnpremDeployParams) UnsetId() {
	o.Id.Unset()
}

// GetRestoreVMwareParams returns the RestoreVMwareParams field value if set, zero value otherwise.
func (o *OnpremDeployParams) GetRestoreVMwareParams() RestoreVMwareVMParams {
	if o == nil || IsNil(o.RestoreVMwareParams) {
		var ret RestoreVMwareVMParams
		return ret
	}
	return *o.RestoreVMwareParams
}

// GetRestoreVMwareParamsOk returns a tuple with the RestoreVMwareParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnpremDeployParams) GetRestoreVMwareParamsOk() (*RestoreVMwareVMParams, bool) {
	if o == nil || IsNil(o.RestoreVMwareParams) {
		return nil, false
	}
	return o.RestoreVMwareParams, true
}

// HasRestoreVMwareParams returns a boolean if a field has been set.
func (o *OnpremDeployParams) HasRestoreVMwareParams() bool {
	if o != nil && !IsNil(o.RestoreVMwareParams) {
		return true
	}

	return false
}

// SetRestoreVMwareParams gets a reference to the given RestoreVMwareVMParams and assigns it to the RestoreVMwareParams field.
func (o *OnpremDeployParams) SetRestoreVMwareParams(v RestoreVMwareVMParams) {
	o.RestoreVMwareParams = &v
}

func (o OnpremDeployParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnpremDeployParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !IsNil(o.RestoreVMwareParams) {
		toSerialize["restoreVMwareParams"] = o.RestoreVMwareParams
	}
	return toSerialize, nil
}

type NullableOnpremDeployParams struct {
	value *OnpremDeployParams
	isSet bool
}

func (v NullableOnpremDeployParams) Get() *OnpremDeployParams {
	return v.value
}

func (v *NullableOnpremDeployParams) Set(val *OnpremDeployParams) {
	v.value = val
	v.isSet = true
}

func (v NullableOnpremDeployParams) IsSet() bool {
	return v.isSet
}

func (v *NullableOnpremDeployParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnpremDeployParams(val *OnpremDeployParams) *NullableOnpremDeployParams {
	return &NullableOnpremDeployParams{value: val, isSet: true}
}

func (v NullableOnpremDeployParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnpremDeployParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


