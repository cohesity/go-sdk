/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the HeliosFullBackupPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeliosFullBackupPolicy{}

// HeliosFullBackupPolicy Specifies full backup settings for a Protection Group.
type HeliosFullBackupPolicy struct {
	Schedule *HeliosFullSchedule `json:"schedule,omitempty"`
}

// NewHeliosFullBackupPolicy instantiates a new HeliosFullBackupPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosFullBackupPolicy() *HeliosFullBackupPolicy {
	this := HeliosFullBackupPolicy{}
	return &this
}

// NewHeliosFullBackupPolicyWithDefaults instantiates a new HeliosFullBackupPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosFullBackupPolicyWithDefaults() *HeliosFullBackupPolicy {
	this := HeliosFullBackupPolicy{}
	return &this
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *HeliosFullBackupPolicy) GetSchedule() HeliosFullSchedule {
	if o == nil || IsNil(o.Schedule) {
		var ret HeliosFullSchedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosFullBackupPolicy) GetScheduleOk() (*HeliosFullSchedule, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *HeliosFullBackupPolicy) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given HeliosFullSchedule and assigns it to the Schedule field.
func (o *HeliosFullBackupPolicy) SetSchedule(v HeliosFullSchedule) {
	o.Schedule = &v
}

func (o HeliosFullBackupPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeliosFullBackupPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	return toSerialize, nil
}

type NullableHeliosFullBackupPolicy struct {
	value *HeliosFullBackupPolicy
	isSet bool
}

func (v NullableHeliosFullBackupPolicy) Get() *HeliosFullBackupPolicy {
	return v.value
}

func (v *NullableHeliosFullBackupPolicy) Set(val *HeliosFullBackupPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosFullBackupPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosFullBackupPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosFullBackupPolicy(val *HeliosFullBackupPolicy) *NullableHeliosFullBackupPolicy {
	return &NullableHeliosFullBackupPolicy{value: val, isSet: true}
}

func (v NullableHeliosFullBackupPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosFullBackupPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


