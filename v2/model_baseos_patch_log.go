/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the BaseosPatchLog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BaseosPatchLog{}

// BaseosPatchLog Baseos patch Log and status.
type BaseosPatchLog struct {
	// Baseos patch Log file.
	Log *string `json:"log,omitempty"`
	// Baseos patch application status
	Status *string `json:"status,omitempty"`
}

// NewBaseosPatchLog instantiates a new BaseosPatchLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseosPatchLog() *BaseosPatchLog {
	this := BaseosPatchLog{}
	return &this
}

// NewBaseosPatchLogWithDefaults instantiates a new BaseosPatchLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseosPatchLogWithDefaults() *BaseosPatchLog {
	this := BaseosPatchLog{}
	return &this
}

// GetLog returns the Log field value if set, zero value otherwise.
func (o *BaseosPatchLog) GetLog() string {
	if o == nil || IsNil(o.Log) {
		var ret string
		return ret
	}
	return *o.Log
}

// GetLogOk returns a tuple with the Log field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseosPatchLog) GetLogOk() (*string, bool) {
	if o == nil || IsNil(o.Log) {
		return nil, false
	}
	return o.Log, true
}

// HasLog returns a boolean if a field has been set.
func (o *BaseosPatchLog) HasLog() bool {
	if o != nil && !IsNil(o.Log) {
		return true
	}

	return false
}

// SetLog gets a reference to the given string and assigns it to the Log field.
func (o *BaseosPatchLog) SetLog(v string) {
	o.Log = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BaseosPatchLog) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseosPatchLog) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BaseosPatchLog) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BaseosPatchLog) SetStatus(v string) {
	o.Status = &v
}

func (o BaseosPatchLog) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BaseosPatchLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Log) {
		toSerialize["log"] = o.Log
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableBaseosPatchLog struct {
	value *BaseosPatchLog
	isSet bool
}

func (v NullableBaseosPatchLog) Get() *BaseosPatchLog {
	return v.value
}

func (v *NullableBaseosPatchLog) Set(val *BaseosPatchLog) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseosPatchLog) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseosPatchLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseosPatchLog(val *BaseosPatchLog) *NullableBaseosPatchLog {
	return &NullableBaseosPatchLog{value: val, isSet: true}
}

func (v NullableBaseosPatchLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseosPatchLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


