/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CassandraProtectionRunParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CassandraProtectionRunParams{}

// CassandraProtectionRunParams Specifies the parameters for Cassandra Adapter protection run.
type CassandraProtectionRunParams struct {
	// Specifies the parameters to set this cluster as primary and trigger a new protection run for Log backup job. Default value is false.
	SetPrimaryForLog NullableBool `json:"setPrimaryForLog,omitempty"`
}

// NewCassandraProtectionRunParams instantiates a new CassandraProtectionRunParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCassandraProtectionRunParams() *CassandraProtectionRunParams {
	this := CassandraProtectionRunParams{}
	var setPrimaryForLog bool = false
	this.SetPrimaryForLog = *NewNullableBool(&setPrimaryForLog)
	return &this
}

// NewCassandraProtectionRunParamsWithDefaults instantiates a new CassandraProtectionRunParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCassandraProtectionRunParamsWithDefaults() *CassandraProtectionRunParams {
	this := CassandraProtectionRunParams{}
	var setPrimaryForLog bool = false
	this.SetPrimaryForLog = *NewNullableBool(&setPrimaryForLog)
	return &this
}

// GetSetPrimaryForLog returns the SetPrimaryForLog field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionRunParams) GetSetPrimaryForLog() bool {
	if o == nil || IsNil(o.SetPrimaryForLog.Get()) {
		var ret bool
		return ret
	}
	return *o.SetPrimaryForLog.Get()
}

// GetSetPrimaryForLogOk returns a tuple with the SetPrimaryForLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionRunParams) GetSetPrimaryForLogOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SetPrimaryForLog.Get(), o.SetPrimaryForLog.IsSet()
}

// HasSetPrimaryForLog returns a boolean if a field has been set.
func (o *CassandraProtectionRunParams) HasSetPrimaryForLog() bool {
	if o != nil && o.SetPrimaryForLog.IsSet() {
		return true
	}

	return false
}

// SetSetPrimaryForLog gets a reference to the given NullableBool and assigns it to the SetPrimaryForLog field.
func (o *CassandraProtectionRunParams) SetSetPrimaryForLog(v bool) {
	o.SetPrimaryForLog.Set(&v)
}
// SetSetPrimaryForLogNil sets the value for SetPrimaryForLog to be an explicit nil
func (o *CassandraProtectionRunParams) SetSetPrimaryForLogNil() {
	o.SetPrimaryForLog.Set(nil)
}

// UnsetSetPrimaryForLog ensures that no value is present for SetPrimaryForLog, not even an explicit nil
func (o *CassandraProtectionRunParams) UnsetSetPrimaryForLog() {
	o.SetPrimaryForLog.Unset()
}

func (o CassandraProtectionRunParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CassandraProtectionRunParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SetPrimaryForLog.IsSet() {
		toSerialize["setPrimaryForLog"] = o.SetPrimaryForLog.Get()
	}
	return toSerialize, nil
}

type NullableCassandraProtectionRunParams struct {
	value *CassandraProtectionRunParams
	isSet bool
}

func (v NullableCassandraProtectionRunParams) Get() *CassandraProtectionRunParams {
	return v.value
}

func (v *NullableCassandraProtectionRunParams) Set(val *CassandraProtectionRunParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCassandraProtectionRunParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCassandraProtectionRunParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCassandraProtectionRunParams(val *CassandraProtectionRunParams) *NullableCassandraProtectionRunParams {
	return &NullableCassandraProtectionRunParams{value: val, isSet: true}
}

func (v NullableCassandraProtectionRunParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCassandraProtectionRunParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


