/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CommonAzureExternalTargetParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonAzureExternalTargetParams{}

// CommonAzureExternalTargetParams Specifies the common parameters which are specific to Azure related External Targets.
type CommonAzureExternalTargetParams struct {
	// Specifies the client id of the managed identity assigned to the cluster This is used only for clusters running as Azure VMs where authentication is done using AD.
	ClientId NullableString `json:"clientId,omitempty"`
	// Specifies the container name of the external target.
	ContainerName NullableString `json:"containerName"`
	// Specifies region of the External Target. This is only populated for FortKnox vaults.
	Region NullableString `json:"region,omitempty"`
	// Specifies the storage access key of the external target.
	StorageAccessKey NullableString `json:"storageAccessKey,omitempty"`
	// Specifies the storage account name of the external target.
	StorageAccountName NullableString `json:"storageAccountName"`
}

type _CommonAzureExternalTargetParams CommonAzureExternalTargetParams

// NewCommonAzureExternalTargetParams instantiates a new CommonAzureExternalTargetParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonAzureExternalTargetParams(containerName NullableString, storageAccountName NullableString) *CommonAzureExternalTargetParams {
	this := CommonAzureExternalTargetParams{}
	this.ContainerName = containerName
	this.StorageAccountName = storageAccountName
	return &this
}

// NewCommonAzureExternalTargetParamsWithDefaults instantiates a new CommonAzureExternalTargetParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonAzureExternalTargetParamsWithDefaults() *CommonAzureExternalTargetParams {
	this := CommonAzureExternalTargetParams{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonAzureExternalTargetParams) GetClientId() string {
	if o == nil || IsNil(o.ClientId.Get()) {
		var ret string
		return ret
	}
	return *o.ClientId.Get()
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonAzureExternalTargetParams) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientId.Get(), o.ClientId.IsSet()
}

// HasClientId returns a boolean if a field has been set.
func (o *CommonAzureExternalTargetParams) HasClientId() bool {
	if o != nil && o.ClientId.IsSet() {
		return true
	}

	return false
}

// SetClientId gets a reference to the given NullableString and assigns it to the ClientId field.
func (o *CommonAzureExternalTargetParams) SetClientId(v string) {
	o.ClientId.Set(&v)
}
// SetClientIdNil sets the value for ClientId to be an explicit nil
func (o *CommonAzureExternalTargetParams) SetClientIdNil() {
	o.ClientId.Set(nil)
}

// UnsetClientId ensures that no value is present for ClientId, not even an explicit nil
func (o *CommonAzureExternalTargetParams) UnsetClientId() {
	o.ClientId.Unset()
}

// GetContainerName returns the ContainerName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CommonAzureExternalTargetParams) GetContainerName() string {
	if o == nil || o.ContainerName.Get() == nil {
		var ret string
		return ret
	}

	return *o.ContainerName.Get()
}

// GetContainerNameOk returns a tuple with the ContainerName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonAzureExternalTargetParams) GetContainerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContainerName.Get(), o.ContainerName.IsSet()
}

// SetContainerName sets field value
func (o *CommonAzureExternalTargetParams) SetContainerName(v string) {
	o.ContainerName.Set(&v)
}

// GetRegion returns the Region field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonAzureExternalTargetParams) GetRegion() string {
	if o == nil || IsNil(o.Region.Get()) {
		var ret string
		return ret
	}
	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonAzureExternalTargetParams) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// HasRegion returns a boolean if a field has been set.
func (o *CommonAzureExternalTargetParams) HasRegion() bool {
	if o != nil && o.Region.IsSet() {
		return true
	}

	return false
}

// SetRegion gets a reference to the given NullableString and assigns it to the Region field.
func (o *CommonAzureExternalTargetParams) SetRegion(v string) {
	o.Region.Set(&v)
}
// SetRegionNil sets the value for Region to be an explicit nil
func (o *CommonAzureExternalTargetParams) SetRegionNil() {
	o.Region.Set(nil)
}

// UnsetRegion ensures that no value is present for Region, not even an explicit nil
func (o *CommonAzureExternalTargetParams) UnsetRegion() {
	o.Region.Unset()
}

// GetStorageAccessKey returns the StorageAccessKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonAzureExternalTargetParams) GetStorageAccessKey() string {
	if o == nil || IsNil(o.StorageAccessKey.Get()) {
		var ret string
		return ret
	}
	return *o.StorageAccessKey.Get()
}

// GetStorageAccessKeyOk returns a tuple with the StorageAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonAzureExternalTargetParams) GetStorageAccessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageAccessKey.Get(), o.StorageAccessKey.IsSet()
}

// HasStorageAccessKey returns a boolean if a field has been set.
func (o *CommonAzureExternalTargetParams) HasStorageAccessKey() bool {
	if o != nil && o.StorageAccessKey.IsSet() {
		return true
	}

	return false
}

// SetStorageAccessKey gets a reference to the given NullableString and assigns it to the StorageAccessKey field.
func (o *CommonAzureExternalTargetParams) SetStorageAccessKey(v string) {
	o.StorageAccessKey.Set(&v)
}
// SetStorageAccessKeyNil sets the value for StorageAccessKey to be an explicit nil
func (o *CommonAzureExternalTargetParams) SetStorageAccessKeyNil() {
	o.StorageAccessKey.Set(nil)
}

// UnsetStorageAccessKey ensures that no value is present for StorageAccessKey, not even an explicit nil
func (o *CommonAzureExternalTargetParams) UnsetStorageAccessKey() {
	o.StorageAccessKey.Unset()
}

// GetStorageAccountName returns the StorageAccountName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CommonAzureExternalTargetParams) GetStorageAccountName() string {
	if o == nil || o.StorageAccountName.Get() == nil {
		var ret string
		return ret
	}

	return *o.StorageAccountName.Get()
}

// GetStorageAccountNameOk returns a tuple with the StorageAccountName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonAzureExternalTargetParams) GetStorageAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageAccountName.Get(), o.StorageAccountName.IsSet()
}

// SetStorageAccountName sets field value
func (o *CommonAzureExternalTargetParams) SetStorageAccountName(v string) {
	o.StorageAccountName.Set(&v)
}

func (o CommonAzureExternalTargetParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonAzureExternalTargetParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId.IsSet() {
		toSerialize["clientId"] = o.ClientId.Get()
	}
	toSerialize["containerName"] = o.ContainerName.Get()
	if o.Region.IsSet() {
		toSerialize["region"] = o.Region.Get()
	}
	if o.StorageAccessKey.IsSet() {
		toSerialize["storageAccessKey"] = o.StorageAccessKey.Get()
	}
	toSerialize["storageAccountName"] = o.StorageAccountName.Get()
	return toSerialize, nil
}

func (o *CommonAzureExternalTargetParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"containerName",
		"storageAccountName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCommonAzureExternalTargetParams := _CommonAzureExternalTargetParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCommonAzureExternalTargetParams)

	if err != nil {
		return err
	}

	*o = CommonAzureExternalTargetParams(varCommonAzureExternalTargetParams)

	return err
}

type NullableCommonAzureExternalTargetParams struct {
	value *CommonAzureExternalTargetParams
	isSet bool
}

func (v NullableCommonAzureExternalTargetParams) Get() *CommonAzureExternalTargetParams {
	return v.value
}

func (v *NullableCommonAzureExternalTargetParams) Set(val *CommonAzureExternalTargetParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonAzureExternalTargetParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonAzureExternalTargetParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonAzureExternalTargetParams(val *CommonAzureExternalTargetParams) *NullableCommonAzureExternalTargetParams {
	return &NullableCommonAzureExternalTargetParams{value: val, isSet: true}
}

func (v NullableCommonAzureExternalTargetParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonAzureExternalTargetParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


