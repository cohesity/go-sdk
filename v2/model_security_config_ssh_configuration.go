/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the SecurityConfigSshConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityConfigSshConfiguration{}

// SecurityConfigSshConfiguration Specifies security config for ssh configuration of cluster.
type SecurityConfigSshConfiguration struct {
	// Specifies the number of minutes of remaining idle before session timeout.
	SshTimeoutInMins NullableInt32 `json:"sshTimeoutInMins,omitempty"`
}

// NewSecurityConfigSshConfiguration instantiates a new SecurityConfigSshConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityConfigSshConfiguration() *SecurityConfigSshConfiguration {
	this := SecurityConfigSshConfiguration{}
	return &this
}

// NewSecurityConfigSshConfigurationWithDefaults instantiates a new SecurityConfigSshConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityConfigSshConfigurationWithDefaults() *SecurityConfigSshConfiguration {
	this := SecurityConfigSshConfiguration{}
	return &this
}

// GetSshTimeoutInMins returns the SshTimeoutInMins field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityConfigSshConfiguration) GetSshTimeoutInMins() int32 {
	if o == nil || IsNil(o.SshTimeoutInMins.Get()) {
		var ret int32
		return ret
	}
	return *o.SshTimeoutInMins.Get()
}

// GetSshTimeoutInMinsOk returns a tuple with the SshTimeoutInMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityConfigSshConfiguration) GetSshTimeoutInMinsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SshTimeoutInMins.Get(), o.SshTimeoutInMins.IsSet()
}

// HasSshTimeoutInMins returns a boolean if a field has been set.
func (o *SecurityConfigSshConfiguration) HasSshTimeoutInMins() bool {
	if o != nil && o.SshTimeoutInMins.IsSet() {
		return true
	}

	return false
}

// SetSshTimeoutInMins gets a reference to the given NullableInt32 and assigns it to the SshTimeoutInMins field.
func (o *SecurityConfigSshConfiguration) SetSshTimeoutInMins(v int32) {
	o.SshTimeoutInMins.Set(&v)
}
// SetSshTimeoutInMinsNil sets the value for SshTimeoutInMins to be an explicit nil
func (o *SecurityConfigSshConfiguration) SetSshTimeoutInMinsNil() {
	o.SshTimeoutInMins.Set(nil)
}

// UnsetSshTimeoutInMins ensures that no value is present for SshTimeoutInMins, not even an explicit nil
func (o *SecurityConfigSshConfiguration) UnsetSshTimeoutInMins() {
	o.SshTimeoutInMins.Unset()
}

func (o SecurityConfigSshConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityConfigSshConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SshTimeoutInMins.IsSet() {
		toSerialize["sshTimeoutInMins"] = o.SshTimeoutInMins.Get()
	}
	return toSerialize, nil
}

type NullableSecurityConfigSshConfiguration struct {
	value *SecurityConfigSshConfiguration
	isSet bool
}

func (v NullableSecurityConfigSshConfiguration) Get() *SecurityConfigSshConfiguration {
	return v.value
}

func (v *NullableSecurityConfigSshConfiguration) Set(val *SecurityConfigSshConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityConfigSshConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityConfigSshConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityConfigSshConfiguration(val *SecurityConfigSshConfiguration) *NullableSecurityConfigSshConfiguration {
	return &NullableSecurityConfigSshConfiguration{value: val, isSet: true}
}

func (v NullableSecurityConfigSshConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityConfigSshConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


