/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the GaiaGenericParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GaiaGenericParams{}

// GaiaGenericParams Specifies the Gaia generic params.
type GaiaGenericParams struct {
	// Specifies the Grpc Method type.
	GrpcMethod NullableString `json:"grpc_method,omitempty"`
	// Specifies the serialized parameters.
	GrpcReqSerialized NullableString `json:"grpc_req_serialized,omitempty"`
}

// NewGaiaGenericParams instantiates a new GaiaGenericParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGaiaGenericParams() *GaiaGenericParams {
	this := GaiaGenericParams{}
	return &this
}

// NewGaiaGenericParamsWithDefaults instantiates a new GaiaGenericParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGaiaGenericParamsWithDefaults() *GaiaGenericParams {
	this := GaiaGenericParams{}
	return &this
}

// GetGrpcMethod returns the GrpcMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GaiaGenericParams) GetGrpcMethod() string {
	if o == nil || IsNil(o.GrpcMethod.Get()) {
		var ret string
		return ret
	}
	return *o.GrpcMethod.Get()
}

// GetGrpcMethodOk returns a tuple with the GrpcMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GaiaGenericParams) GetGrpcMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GrpcMethod.Get(), o.GrpcMethod.IsSet()
}

// HasGrpcMethod returns a boolean if a field has been set.
func (o *GaiaGenericParams) HasGrpcMethod() bool {
	if o != nil && o.GrpcMethod.IsSet() {
		return true
	}

	return false
}

// SetGrpcMethod gets a reference to the given NullableString and assigns it to the GrpcMethod field.
func (o *GaiaGenericParams) SetGrpcMethod(v string) {
	o.GrpcMethod.Set(&v)
}
// SetGrpcMethodNil sets the value for GrpcMethod to be an explicit nil
func (o *GaiaGenericParams) SetGrpcMethodNil() {
	o.GrpcMethod.Set(nil)
}

// UnsetGrpcMethod ensures that no value is present for GrpcMethod, not even an explicit nil
func (o *GaiaGenericParams) UnsetGrpcMethod() {
	o.GrpcMethod.Unset()
}

// GetGrpcReqSerialized returns the GrpcReqSerialized field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GaiaGenericParams) GetGrpcReqSerialized() string {
	if o == nil || IsNil(o.GrpcReqSerialized.Get()) {
		var ret string
		return ret
	}
	return *o.GrpcReqSerialized.Get()
}

// GetGrpcReqSerializedOk returns a tuple with the GrpcReqSerialized field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GaiaGenericParams) GetGrpcReqSerializedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GrpcReqSerialized.Get(), o.GrpcReqSerialized.IsSet()
}

// HasGrpcReqSerialized returns a boolean if a field has been set.
func (o *GaiaGenericParams) HasGrpcReqSerialized() bool {
	if o != nil && o.GrpcReqSerialized.IsSet() {
		return true
	}

	return false
}

// SetGrpcReqSerialized gets a reference to the given NullableString and assigns it to the GrpcReqSerialized field.
func (o *GaiaGenericParams) SetGrpcReqSerialized(v string) {
	o.GrpcReqSerialized.Set(&v)
}
// SetGrpcReqSerializedNil sets the value for GrpcReqSerialized to be an explicit nil
func (o *GaiaGenericParams) SetGrpcReqSerializedNil() {
	o.GrpcReqSerialized.Set(nil)
}

// UnsetGrpcReqSerialized ensures that no value is present for GrpcReqSerialized, not even an explicit nil
func (o *GaiaGenericParams) UnsetGrpcReqSerialized() {
	o.GrpcReqSerialized.Unset()
}

func (o GaiaGenericParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GaiaGenericParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.GrpcMethod.IsSet() {
		toSerialize["grpc_method"] = o.GrpcMethod.Get()
	}
	if o.GrpcReqSerialized.IsSet() {
		toSerialize["grpc_req_serialized"] = o.GrpcReqSerialized.Get()
	}
	return toSerialize, nil
}

type NullableGaiaGenericParams struct {
	value *GaiaGenericParams
	isSet bool
}

func (v NullableGaiaGenericParams) Get() *GaiaGenericParams {
	return v.value
}

func (v *NullableGaiaGenericParams) Set(val *GaiaGenericParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGaiaGenericParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGaiaGenericParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGaiaGenericParams(val *GaiaGenericParams) *NullableGaiaGenericParams {
	return &NullableGaiaGenericParams{value: val, isSet: true}
}

func (v NullableGaiaGenericParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGaiaGenericParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


