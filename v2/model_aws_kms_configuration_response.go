/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AwsKmsConfigurationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsKmsConfigurationResponse{}

// AwsKmsConfigurationResponse AWS KMS configuration parameters.
type AwsKmsConfigurationResponse struct {
	// AWS account access key id. Required when 'iamRoleArn' is not given.
	AccessKeyId NullableString `json:"accessKeyId,omitempty"`
	// AWS CMK alias. Only need one of cmkAlias, cmkArn, cmkKeyId to connect to AWS KMS.
	CmkAlias NullableString `json:"cmkAlias,omitempty"`
	// AWS CMK Amazon resource number. Only need one of cmkAlias, cmkArn, cmkKeyId to connect to AWS KMS.
	CmkArn NullableString `json:"cmkArn,omitempty"`
	// AWS CMK key id. Only need one of cmkAlias, cmkArn, cmkKeyId to connect to AWS KMS.
	CmkKeyId NullableString `json:"cmkKeyId,omitempty"`
	// The IAM role which will be used to authenticate with AWS KMS. Required when 'accessKeyId' and 'secretAccessKey' fields are not provided.
	IamRoleArn NullableString `json:"iamRoleArn,omitempty"`
	// AWS region, e.g. us-east-1, us-west-2, for the AWS Glacier service to be used to authenticate resources within this region by the configured AWS account.
	Region NullableString `json:"region,omitempty"`
	// Enable SSL verification or not.
	VerifySSL NullableBool `json:"verifySSL,omitempty"`
}

// NewAwsKmsConfigurationResponse instantiates a new AwsKmsConfigurationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsKmsConfigurationResponse() *AwsKmsConfigurationResponse {
	this := AwsKmsConfigurationResponse{}
	var verifySSL bool = true
	this.VerifySSL = *NewNullableBool(&verifySSL)
	return &this
}

// NewAwsKmsConfigurationResponseWithDefaults instantiates a new AwsKmsConfigurationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsKmsConfigurationResponseWithDefaults() *AwsKmsConfigurationResponse {
	this := AwsKmsConfigurationResponse{}
	var verifySSL bool = true
	this.VerifySSL = *NewNullableBool(&verifySSL)
	return &this
}

// GetAccessKeyId returns the AccessKeyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsKmsConfigurationResponse) GetAccessKeyId() string {
	if o == nil || IsNil(o.AccessKeyId.Get()) {
		var ret string
		return ret
	}
	return *o.AccessKeyId.Get()
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsKmsConfigurationResponse) GetAccessKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessKeyId.Get(), o.AccessKeyId.IsSet()
}

// HasAccessKeyId returns a boolean if a field has been set.
func (o *AwsKmsConfigurationResponse) HasAccessKeyId() bool {
	if o != nil && o.AccessKeyId.IsSet() {
		return true
	}

	return false
}

// SetAccessKeyId gets a reference to the given NullableString and assigns it to the AccessKeyId field.
func (o *AwsKmsConfigurationResponse) SetAccessKeyId(v string) {
	o.AccessKeyId.Set(&v)
}
// SetAccessKeyIdNil sets the value for AccessKeyId to be an explicit nil
func (o *AwsKmsConfigurationResponse) SetAccessKeyIdNil() {
	o.AccessKeyId.Set(nil)
}

// UnsetAccessKeyId ensures that no value is present for AccessKeyId, not even an explicit nil
func (o *AwsKmsConfigurationResponse) UnsetAccessKeyId() {
	o.AccessKeyId.Unset()
}

// GetCmkAlias returns the CmkAlias field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsKmsConfigurationResponse) GetCmkAlias() string {
	if o == nil || IsNil(o.CmkAlias.Get()) {
		var ret string
		return ret
	}
	return *o.CmkAlias.Get()
}

// GetCmkAliasOk returns a tuple with the CmkAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsKmsConfigurationResponse) GetCmkAliasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CmkAlias.Get(), o.CmkAlias.IsSet()
}

// HasCmkAlias returns a boolean if a field has been set.
func (o *AwsKmsConfigurationResponse) HasCmkAlias() bool {
	if o != nil && o.CmkAlias.IsSet() {
		return true
	}

	return false
}

// SetCmkAlias gets a reference to the given NullableString and assigns it to the CmkAlias field.
func (o *AwsKmsConfigurationResponse) SetCmkAlias(v string) {
	o.CmkAlias.Set(&v)
}
// SetCmkAliasNil sets the value for CmkAlias to be an explicit nil
func (o *AwsKmsConfigurationResponse) SetCmkAliasNil() {
	o.CmkAlias.Set(nil)
}

// UnsetCmkAlias ensures that no value is present for CmkAlias, not even an explicit nil
func (o *AwsKmsConfigurationResponse) UnsetCmkAlias() {
	o.CmkAlias.Unset()
}

// GetCmkArn returns the CmkArn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsKmsConfigurationResponse) GetCmkArn() string {
	if o == nil || IsNil(o.CmkArn.Get()) {
		var ret string
		return ret
	}
	return *o.CmkArn.Get()
}

// GetCmkArnOk returns a tuple with the CmkArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsKmsConfigurationResponse) GetCmkArnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CmkArn.Get(), o.CmkArn.IsSet()
}

// HasCmkArn returns a boolean if a field has been set.
func (o *AwsKmsConfigurationResponse) HasCmkArn() bool {
	if o != nil && o.CmkArn.IsSet() {
		return true
	}

	return false
}

// SetCmkArn gets a reference to the given NullableString and assigns it to the CmkArn field.
func (o *AwsKmsConfigurationResponse) SetCmkArn(v string) {
	o.CmkArn.Set(&v)
}
// SetCmkArnNil sets the value for CmkArn to be an explicit nil
func (o *AwsKmsConfigurationResponse) SetCmkArnNil() {
	o.CmkArn.Set(nil)
}

// UnsetCmkArn ensures that no value is present for CmkArn, not even an explicit nil
func (o *AwsKmsConfigurationResponse) UnsetCmkArn() {
	o.CmkArn.Unset()
}

// GetCmkKeyId returns the CmkKeyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsKmsConfigurationResponse) GetCmkKeyId() string {
	if o == nil || IsNil(o.CmkKeyId.Get()) {
		var ret string
		return ret
	}
	return *o.CmkKeyId.Get()
}

// GetCmkKeyIdOk returns a tuple with the CmkKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsKmsConfigurationResponse) GetCmkKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CmkKeyId.Get(), o.CmkKeyId.IsSet()
}

// HasCmkKeyId returns a boolean if a field has been set.
func (o *AwsKmsConfigurationResponse) HasCmkKeyId() bool {
	if o != nil && o.CmkKeyId.IsSet() {
		return true
	}

	return false
}

// SetCmkKeyId gets a reference to the given NullableString and assigns it to the CmkKeyId field.
func (o *AwsKmsConfigurationResponse) SetCmkKeyId(v string) {
	o.CmkKeyId.Set(&v)
}
// SetCmkKeyIdNil sets the value for CmkKeyId to be an explicit nil
func (o *AwsKmsConfigurationResponse) SetCmkKeyIdNil() {
	o.CmkKeyId.Set(nil)
}

// UnsetCmkKeyId ensures that no value is present for CmkKeyId, not even an explicit nil
func (o *AwsKmsConfigurationResponse) UnsetCmkKeyId() {
	o.CmkKeyId.Unset()
}

// GetIamRoleArn returns the IamRoleArn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsKmsConfigurationResponse) GetIamRoleArn() string {
	if o == nil || IsNil(o.IamRoleArn.Get()) {
		var ret string
		return ret
	}
	return *o.IamRoleArn.Get()
}

// GetIamRoleArnOk returns a tuple with the IamRoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsKmsConfigurationResponse) GetIamRoleArnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IamRoleArn.Get(), o.IamRoleArn.IsSet()
}

// HasIamRoleArn returns a boolean if a field has been set.
func (o *AwsKmsConfigurationResponse) HasIamRoleArn() bool {
	if o != nil && o.IamRoleArn.IsSet() {
		return true
	}

	return false
}

// SetIamRoleArn gets a reference to the given NullableString and assigns it to the IamRoleArn field.
func (o *AwsKmsConfigurationResponse) SetIamRoleArn(v string) {
	o.IamRoleArn.Set(&v)
}
// SetIamRoleArnNil sets the value for IamRoleArn to be an explicit nil
func (o *AwsKmsConfigurationResponse) SetIamRoleArnNil() {
	o.IamRoleArn.Set(nil)
}

// UnsetIamRoleArn ensures that no value is present for IamRoleArn, not even an explicit nil
func (o *AwsKmsConfigurationResponse) UnsetIamRoleArn() {
	o.IamRoleArn.Unset()
}

// GetRegion returns the Region field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsKmsConfigurationResponse) GetRegion() string {
	if o == nil || IsNil(o.Region.Get()) {
		var ret string
		return ret
	}
	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsKmsConfigurationResponse) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// HasRegion returns a boolean if a field has been set.
func (o *AwsKmsConfigurationResponse) HasRegion() bool {
	if o != nil && o.Region.IsSet() {
		return true
	}

	return false
}

// SetRegion gets a reference to the given NullableString and assigns it to the Region field.
func (o *AwsKmsConfigurationResponse) SetRegion(v string) {
	o.Region.Set(&v)
}
// SetRegionNil sets the value for Region to be an explicit nil
func (o *AwsKmsConfigurationResponse) SetRegionNil() {
	o.Region.Set(nil)
}

// UnsetRegion ensures that no value is present for Region, not even an explicit nil
func (o *AwsKmsConfigurationResponse) UnsetRegion() {
	o.Region.Unset()
}

// GetVerifySSL returns the VerifySSL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsKmsConfigurationResponse) GetVerifySSL() bool {
	if o == nil || IsNil(o.VerifySSL.Get()) {
		var ret bool
		return ret
	}
	return *o.VerifySSL.Get()
}

// GetVerifySSLOk returns a tuple with the VerifySSL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsKmsConfigurationResponse) GetVerifySSLOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.VerifySSL.Get(), o.VerifySSL.IsSet()
}

// HasVerifySSL returns a boolean if a field has been set.
func (o *AwsKmsConfigurationResponse) HasVerifySSL() bool {
	if o != nil && o.VerifySSL.IsSet() {
		return true
	}

	return false
}

// SetVerifySSL gets a reference to the given NullableBool and assigns it to the VerifySSL field.
func (o *AwsKmsConfigurationResponse) SetVerifySSL(v bool) {
	o.VerifySSL.Set(&v)
}
// SetVerifySSLNil sets the value for VerifySSL to be an explicit nil
func (o *AwsKmsConfigurationResponse) SetVerifySSLNil() {
	o.VerifySSL.Set(nil)
}

// UnsetVerifySSL ensures that no value is present for VerifySSL, not even an explicit nil
func (o *AwsKmsConfigurationResponse) UnsetVerifySSL() {
	o.VerifySSL.Unset()
}

func (o AwsKmsConfigurationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsKmsConfigurationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKeyId.IsSet() {
		toSerialize["accessKeyId"] = o.AccessKeyId.Get()
	}
	if o.CmkAlias.IsSet() {
		toSerialize["cmkAlias"] = o.CmkAlias.Get()
	}
	if o.CmkArn.IsSet() {
		toSerialize["cmkArn"] = o.CmkArn.Get()
	}
	if o.CmkKeyId.IsSet() {
		toSerialize["cmkKeyId"] = o.CmkKeyId.Get()
	}
	if o.IamRoleArn.IsSet() {
		toSerialize["iamRoleArn"] = o.IamRoleArn.Get()
	}
	if o.Region.IsSet() {
		toSerialize["region"] = o.Region.Get()
	}
	if o.VerifySSL.IsSet() {
		toSerialize["verifySSL"] = o.VerifySSL.Get()
	}
	return toSerialize, nil
}

type NullableAwsKmsConfigurationResponse struct {
	value *AwsKmsConfigurationResponse
	isSet bool
}

func (v NullableAwsKmsConfigurationResponse) Get() *AwsKmsConfigurationResponse {
	return v.value
}

func (v *NullableAwsKmsConfigurationResponse) Set(val *AwsKmsConfigurationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsKmsConfigurationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsKmsConfigurationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsKmsConfigurationResponse(val *AwsKmsConfigurationResponse) *NullableAwsKmsConfigurationResponse {
	return &NullableAwsKmsConfigurationResponse{value: val, isSet: true}
}

func (v NullableAwsKmsConfigurationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsKmsConfigurationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


