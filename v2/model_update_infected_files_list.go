/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the UpdateInfectedFilesList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInfectedFilesList{}

// UpdateInfectedFilesList Specifies a list of infected entities.
type UpdateInfectedFilesList struct {
	// Specifies the list of infected entities that failed update.
	UpdateFailedInfectedFiles []InfectedFile `json:"updateFailedInfectedFiles,omitempty"`
	// Specifies the list of infected entities that are successfully updated.
	UpdateSucceededInfectedFiles []InfectedFile `json:"updateSucceededInfectedFiles,omitempty"`
}

// NewUpdateInfectedFilesList instantiates a new UpdateInfectedFilesList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInfectedFilesList() *UpdateInfectedFilesList {
	this := UpdateInfectedFilesList{}
	return &this
}

// NewUpdateInfectedFilesListWithDefaults instantiates a new UpdateInfectedFilesList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInfectedFilesListWithDefaults() *UpdateInfectedFilesList {
	this := UpdateInfectedFilesList{}
	return &this
}

// GetUpdateFailedInfectedFiles returns the UpdateFailedInfectedFiles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateInfectedFilesList) GetUpdateFailedInfectedFiles() []InfectedFile {
	if o == nil {
		var ret []InfectedFile
		return ret
	}
	return o.UpdateFailedInfectedFiles
}

// GetUpdateFailedInfectedFilesOk returns a tuple with the UpdateFailedInfectedFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateInfectedFilesList) GetUpdateFailedInfectedFilesOk() ([]InfectedFile, bool) {
	if o == nil || IsNil(o.UpdateFailedInfectedFiles) {
		return nil, false
	}
	return o.UpdateFailedInfectedFiles, true
}

// HasUpdateFailedInfectedFiles returns a boolean if a field has been set.
func (o *UpdateInfectedFilesList) HasUpdateFailedInfectedFiles() bool {
	if o != nil && !IsNil(o.UpdateFailedInfectedFiles) {
		return true
	}

	return false
}

// SetUpdateFailedInfectedFiles gets a reference to the given []InfectedFile and assigns it to the UpdateFailedInfectedFiles field.
func (o *UpdateInfectedFilesList) SetUpdateFailedInfectedFiles(v []InfectedFile) {
	o.UpdateFailedInfectedFiles = v
}

// GetUpdateSucceededInfectedFiles returns the UpdateSucceededInfectedFiles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateInfectedFilesList) GetUpdateSucceededInfectedFiles() []InfectedFile {
	if o == nil {
		var ret []InfectedFile
		return ret
	}
	return o.UpdateSucceededInfectedFiles
}

// GetUpdateSucceededInfectedFilesOk returns a tuple with the UpdateSucceededInfectedFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateInfectedFilesList) GetUpdateSucceededInfectedFilesOk() ([]InfectedFile, bool) {
	if o == nil || IsNil(o.UpdateSucceededInfectedFiles) {
		return nil, false
	}
	return o.UpdateSucceededInfectedFiles, true
}

// HasUpdateSucceededInfectedFiles returns a boolean if a field has been set.
func (o *UpdateInfectedFilesList) HasUpdateSucceededInfectedFiles() bool {
	if o != nil && !IsNil(o.UpdateSucceededInfectedFiles) {
		return true
	}

	return false
}

// SetUpdateSucceededInfectedFiles gets a reference to the given []InfectedFile and assigns it to the UpdateSucceededInfectedFiles field.
func (o *UpdateInfectedFilesList) SetUpdateSucceededInfectedFiles(v []InfectedFile) {
	o.UpdateSucceededInfectedFiles = v
}

func (o UpdateInfectedFilesList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInfectedFilesList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.UpdateFailedInfectedFiles != nil {
		toSerialize["updateFailedInfectedFiles"] = o.UpdateFailedInfectedFiles
	}
	if o.UpdateSucceededInfectedFiles != nil {
		toSerialize["updateSucceededInfectedFiles"] = o.UpdateSucceededInfectedFiles
	}
	return toSerialize, nil
}

type NullableUpdateInfectedFilesList struct {
	value *UpdateInfectedFilesList
	isSet bool
}

func (v NullableUpdateInfectedFilesList) Get() *UpdateInfectedFilesList {
	return v.value
}

func (v *NullableUpdateInfectedFilesList) Set(val *UpdateInfectedFilesList) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInfectedFilesList) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInfectedFilesList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInfectedFilesList(val *UpdateInfectedFilesList) *NullableUpdateInfectedFilesList {
	return &NullableUpdateInfectedFilesList{value: val, isSet: true}
}

func (v NullableUpdateInfectedFilesList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInfectedFilesList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


