/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AwsRegionId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsRegionId{}

// AwsRegionId Specifies the AWS region id.
type AwsRegionId struct {
	// Specifies the AWS region id.
	AwsRegionId *string `json:"awsRegionId,omitempty"`
}

// NewAwsRegionId instantiates a new AwsRegionId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsRegionId() *AwsRegionId {
	this := AwsRegionId{}
	return &this
}

// NewAwsRegionIdWithDefaults instantiates a new AwsRegionId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsRegionIdWithDefaults() *AwsRegionId {
	this := AwsRegionId{}
	return &this
}

// GetAwsRegionId returns the AwsRegionId field value if set, zero value otherwise.
func (o *AwsRegionId) GetAwsRegionId() string {
	if o == nil || IsNil(o.AwsRegionId) {
		var ret string
		return ret
	}
	return *o.AwsRegionId
}

// GetAwsRegionIdOk returns a tuple with the AwsRegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRegionId) GetAwsRegionIdOk() (*string, bool) {
	if o == nil || IsNil(o.AwsRegionId) {
		return nil, false
	}
	return o.AwsRegionId, true
}

// HasAwsRegionId returns a boolean if a field has been set.
func (o *AwsRegionId) HasAwsRegionId() bool {
	if o != nil && !IsNil(o.AwsRegionId) {
		return true
	}

	return false
}

// SetAwsRegionId gets a reference to the given string and assigns it to the AwsRegionId field.
func (o *AwsRegionId) SetAwsRegionId(v string) {
	o.AwsRegionId = &v
}

func (o AwsRegionId) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsRegionId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AwsRegionId) {
		toSerialize["awsRegionId"] = o.AwsRegionId
	}
	return toSerialize, nil
}

type NullableAwsRegionId struct {
	value *AwsRegionId
	isSet bool
}

func (v NullableAwsRegionId) Get() *AwsRegionId {
	return v.value
}

func (v *NullableAwsRegionId) Set(val *AwsRegionId) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsRegionId) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsRegionId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsRegionId(val *AwsRegionId) *NullableAwsRegionId {
	return &NullableAwsRegionId{value: val, isSet: true}
}

func (v NullableAwsRegionId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsRegionId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


