/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HeliosAWSTargetConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeliosAWSTargetConfig{}

// HeliosAWSTargetConfig Specifies the configuration for adding AWS as repilcation target
type HeliosAWSTargetConfig struct {
	// Specifies the name of the AWS Replication target.
	Name NullableString `json:"name,omitempty"`
	// Specifies id of the AWS region in which to replicate the Snapshot to. Applicable if replication target is AWS target.
	Region NullableInt64 `json:"region"`
	// Specifies name of the AWS region in which to replicate the Snapshot to. Applicable if replication target is AWS target.
	RegionName NullableString `json:"regionName,omitempty"`
	// Specifies the source id of the AWS protection source registered on Cohesity cluster.
	SourceId NullableInt64 `json:"sourceId"`
}

type _HeliosAWSTargetConfig HeliosAWSTargetConfig

// NewHeliosAWSTargetConfig instantiates a new HeliosAWSTargetConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosAWSTargetConfig(region NullableInt64, sourceId NullableInt64) *HeliosAWSTargetConfig {
	this := HeliosAWSTargetConfig{}
	this.Region = region
	this.SourceId = sourceId
	return &this
}

// NewHeliosAWSTargetConfigWithDefaults instantiates a new HeliosAWSTargetConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosAWSTargetConfigWithDefaults() *HeliosAWSTargetConfig {
	this := HeliosAWSTargetConfig{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosAWSTargetConfig) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosAWSTargetConfig) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *HeliosAWSTargetConfig) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *HeliosAWSTargetConfig) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *HeliosAWSTargetConfig) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *HeliosAWSTargetConfig) UnsetName() {
	o.Name.Unset()
}

// GetRegion returns the Region field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *HeliosAWSTargetConfig) GetRegion() int64 {
	if o == nil || o.Region.Get() == nil {
		var ret int64
		return ret
	}

	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosAWSTargetConfig) GetRegionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// SetRegion sets field value
func (o *HeliosAWSTargetConfig) SetRegion(v int64) {
	o.Region.Set(&v)
}

// GetRegionName returns the RegionName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosAWSTargetConfig) GetRegionName() string {
	if o == nil || IsNil(o.RegionName.Get()) {
		var ret string
		return ret
	}
	return *o.RegionName.Get()
}

// GetRegionNameOk returns a tuple with the RegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosAWSTargetConfig) GetRegionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RegionName.Get(), o.RegionName.IsSet()
}

// HasRegionName returns a boolean if a field has been set.
func (o *HeliosAWSTargetConfig) HasRegionName() bool {
	if o != nil && o.RegionName.IsSet() {
		return true
	}

	return false
}

// SetRegionName gets a reference to the given NullableString and assigns it to the RegionName field.
func (o *HeliosAWSTargetConfig) SetRegionName(v string) {
	o.RegionName.Set(&v)
}
// SetRegionNameNil sets the value for RegionName to be an explicit nil
func (o *HeliosAWSTargetConfig) SetRegionNameNil() {
	o.RegionName.Set(nil)
}

// UnsetRegionName ensures that no value is present for RegionName, not even an explicit nil
func (o *HeliosAWSTargetConfig) UnsetRegionName() {
	o.RegionName.Unset()
}

// GetSourceId returns the SourceId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *HeliosAWSTargetConfig) GetSourceId() int64 {
	if o == nil || o.SourceId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosAWSTargetConfig) GetSourceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// SetSourceId sets field value
func (o *HeliosAWSTargetConfig) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}

func (o HeliosAWSTargetConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeliosAWSTargetConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	toSerialize["region"] = o.Region.Get()
	if o.RegionName.IsSet() {
		toSerialize["regionName"] = o.RegionName.Get()
	}
	toSerialize["sourceId"] = o.SourceId.Get()
	return toSerialize, nil
}

func (o *HeliosAWSTargetConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"region",
		"sourceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHeliosAWSTargetConfig := _HeliosAWSTargetConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHeliosAWSTargetConfig)

	if err != nil {
		return err
	}

	*o = HeliosAWSTargetConfig(varHeliosAWSTargetConfig)

	return err
}

type NullableHeliosAWSTargetConfig struct {
	value *HeliosAWSTargetConfig
	isSet bool
}

func (v NullableHeliosAWSTargetConfig) Get() *HeliosAWSTargetConfig {
	return v.value
}

func (v *NullableHeliosAWSTargetConfig) Set(val *HeliosAWSTargetConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosAWSTargetConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosAWSTargetConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosAWSTargetConfig(val *HeliosAWSTargetConfig) *NullableHeliosAWSTargetConfig {
	return &NullableHeliosAWSTargetConfig{value: val, isSet: true}
}

func (v NullableHeliosAWSTargetConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosAWSTargetConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


