/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CohesionRegistrationConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CohesionRegistrationConfig{}

// CohesionRegistrationConfig Specifies the Cohesion Registration Config.
type CohesionRegistrationConfig struct {
	HeliosConnectionInfo *CohesionHeliosConnectionInfo `json:"heliosConnectionInfo,omitempty"`
	HeliosRegInfo *CohesionHeliosRegistrationInfo `json:"heliosRegInfo,omitempty"`
}

// NewCohesionRegistrationConfig instantiates a new CohesionRegistrationConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCohesionRegistrationConfig() *CohesionRegistrationConfig {
	this := CohesionRegistrationConfig{}
	return &this
}

// NewCohesionRegistrationConfigWithDefaults instantiates a new CohesionRegistrationConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCohesionRegistrationConfigWithDefaults() *CohesionRegistrationConfig {
	this := CohesionRegistrationConfig{}
	return &this
}

// GetHeliosConnectionInfo returns the HeliosConnectionInfo field value if set, zero value otherwise.
func (o *CohesionRegistrationConfig) GetHeliosConnectionInfo() CohesionHeliosConnectionInfo {
	if o == nil || IsNil(o.HeliosConnectionInfo) {
		var ret CohesionHeliosConnectionInfo
		return ret
	}
	return *o.HeliosConnectionInfo
}

// GetHeliosConnectionInfoOk returns a tuple with the HeliosConnectionInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CohesionRegistrationConfig) GetHeliosConnectionInfoOk() (*CohesionHeliosConnectionInfo, bool) {
	if o == nil || IsNil(o.HeliosConnectionInfo) {
		return nil, false
	}
	return o.HeliosConnectionInfo, true
}

// HasHeliosConnectionInfo returns a boolean if a field has been set.
func (o *CohesionRegistrationConfig) HasHeliosConnectionInfo() bool {
	if o != nil && !IsNil(o.HeliosConnectionInfo) {
		return true
	}

	return false
}

// SetHeliosConnectionInfo gets a reference to the given CohesionHeliosConnectionInfo and assigns it to the HeliosConnectionInfo field.
func (o *CohesionRegistrationConfig) SetHeliosConnectionInfo(v CohesionHeliosConnectionInfo) {
	o.HeliosConnectionInfo = &v
}

// GetHeliosRegInfo returns the HeliosRegInfo field value if set, zero value otherwise.
func (o *CohesionRegistrationConfig) GetHeliosRegInfo() CohesionHeliosRegistrationInfo {
	if o == nil || IsNil(o.HeliosRegInfo) {
		var ret CohesionHeliosRegistrationInfo
		return ret
	}
	return *o.HeliosRegInfo
}

// GetHeliosRegInfoOk returns a tuple with the HeliosRegInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CohesionRegistrationConfig) GetHeliosRegInfoOk() (*CohesionHeliosRegistrationInfo, bool) {
	if o == nil || IsNil(o.HeliosRegInfo) {
		return nil, false
	}
	return o.HeliosRegInfo, true
}

// HasHeliosRegInfo returns a boolean if a field has been set.
func (o *CohesionRegistrationConfig) HasHeliosRegInfo() bool {
	if o != nil && !IsNil(o.HeliosRegInfo) {
		return true
	}

	return false
}

// SetHeliosRegInfo gets a reference to the given CohesionHeliosRegistrationInfo and assigns it to the HeliosRegInfo field.
func (o *CohesionRegistrationConfig) SetHeliosRegInfo(v CohesionHeliosRegistrationInfo) {
	o.HeliosRegInfo = &v
}

func (o CohesionRegistrationConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CohesionRegistrationConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HeliosConnectionInfo) {
		toSerialize["heliosConnectionInfo"] = o.HeliosConnectionInfo
	}
	if !IsNil(o.HeliosRegInfo) {
		toSerialize["heliosRegInfo"] = o.HeliosRegInfo
	}
	return toSerialize, nil
}

type NullableCohesionRegistrationConfig struct {
	value *CohesionRegistrationConfig
	isSet bool
}

func (v NullableCohesionRegistrationConfig) Get() *CohesionRegistrationConfig {
	return v.value
}

func (v *NullableCohesionRegistrationConfig) Set(val *CohesionRegistrationConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCohesionRegistrationConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCohesionRegistrationConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCohesionRegistrationConfig(val *CohesionRegistrationConfig) *NullableCohesionRegistrationConfig {
	return &NullableCohesionRegistrationConfig{value: val, isSet: true}
}

func (v NullableCohesionRegistrationConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCohesionRegistrationConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


