/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the SnapshotActions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotActions{}

// SnapshotActions Snapshot Actions
type SnapshotActions struct {
	// Snapshot Actions
	SnapshotActions *string `json:"snapshotActions,omitempty"`
}

// NewSnapshotActions instantiates a new SnapshotActions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotActions() *SnapshotActions {
	this := SnapshotActions{}
	return &this
}

// NewSnapshotActionsWithDefaults instantiates a new SnapshotActions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotActionsWithDefaults() *SnapshotActions {
	this := SnapshotActions{}
	return &this
}

// GetSnapshotActions returns the SnapshotActions field value if set, zero value otherwise.
func (o *SnapshotActions) GetSnapshotActions() string {
	if o == nil || IsNil(o.SnapshotActions) {
		var ret string
		return ret
	}
	return *o.SnapshotActions
}

// GetSnapshotActionsOk returns a tuple with the SnapshotActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotActions) GetSnapshotActionsOk() (*string, bool) {
	if o == nil || IsNil(o.SnapshotActions) {
		return nil, false
	}
	return o.SnapshotActions, true
}

// HasSnapshotActions returns a boolean if a field has been set.
func (o *SnapshotActions) HasSnapshotActions() bool {
	if o != nil && !IsNil(o.SnapshotActions) {
		return true
	}

	return false
}

// SetSnapshotActions gets a reference to the given string and assigns it to the SnapshotActions field.
func (o *SnapshotActions) SetSnapshotActions(v string) {
	o.SnapshotActions = &v
}

func (o SnapshotActions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotActions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SnapshotActions) {
		toSerialize["snapshotActions"] = o.SnapshotActions
	}
	return toSerialize, nil
}

type NullableSnapshotActions struct {
	value *SnapshotActions
	isSet bool
}

func (v NullableSnapshotActions) Get() *SnapshotActions {
	return v.value
}

func (v *NullableSnapshotActions) Set(val *SnapshotActions) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotActions) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotActions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotActions(val *SnapshotActions) *NullableSnapshotActions {
	return &NullableSnapshotActions{value: val, isSet: true}
}

func (v NullableSnapshotActions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotActions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


