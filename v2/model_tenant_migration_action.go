/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TenantMigrationAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenantMigrationAction{}

// TenantMigrationAction Specifies a tenant action.
type TenantMigrationAction struct {
	// Specifies the action which will be performed on the tenant.
	Action NullableString `json:"action"`
	// Retry count for the action. If an action needs to be retried, then clients will increment action_incarnation_id and can send the same request again
	ActionIncarnationId NullableInt32 `json:"actionIncarnationId,omitempty"`
	// Specifies the cluster service on which this action needs to be performed.
	Service NullableString `json:"service,omitempty"`
	// Specifies the target on which the action is performed.
	Target NullableString `json:"target,omitempty"`
	// Specifies the tenant ID of the user on which the action is being performed.
	TenantId NullableString `json:"tenantId,omitempty"`
	// Specifies the tenant migration ID. This ID should be unique across clusters and should be generated by clients
	TenantMigrationUuid NullableString `json:"tenantMigrationUuid,omitempty"`
	// API version
	Version NullableInt32 `json:"version,omitempty"`
}

type _TenantMigrationAction TenantMigrationAction

// NewTenantMigrationAction instantiates a new TenantMigrationAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantMigrationAction(action NullableString) *TenantMigrationAction {
	this := TenantMigrationAction{}
	this.Action = action
	return &this
}

// NewTenantMigrationActionWithDefaults instantiates a new TenantMigrationAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantMigrationActionWithDefaults() *TenantMigrationAction {
	this := TenantMigrationAction{}
	return &this
}

// GetAction returns the Action field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TenantMigrationAction) GetAction() string {
	if o == nil || o.Action.Get() == nil {
		var ret string
		return ret
	}

	return *o.Action.Get()
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantMigrationAction) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Action.Get(), o.Action.IsSet()
}

// SetAction sets field value
func (o *TenantMigrationAction) SetAction(v string) {
	o.Action.Set(&v)
}

// GetActionIncarnationId returns the ActionIncarnationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantMigrationAction) GetActionIncarnationId() int32 {
	if o == nil || IsNil(o.ActionIncarnationId.Get()) {
		var ret int32
		return ret
	}
	return *o.ActionIncarnationId.Get()
}

// GetActionIncarnationIdOk returns a tuple with the ActionIncarnationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantMigrationAction) GetActionIncarnationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActionIncarnationId.Get(), o.ActionIncarnationId.IsSet()
}

// HasActionIncarnationId returns a boolean if a field has been set.
func (o *TenantMigrationAction) HasActionIncarnationId() bool {
	if o != nil && o.ActionIncarnationId.IsSet() {
		return true
	}

	return false
}

// SetActionIncarnationId gets a reference to the given NullableInt32 and assigns it to the ActionIncarnationId field.
func (o *TenantMigrationAction) SetActionIncarnationId(v int32) {
	o.ActionIncarnationId.Set(&v)
}
// SetActionIncarnationIdNil sets the value for ActionIncarnationId to be an explicit nil
func (o *TenantMigrationAction) SetActionIncarnationIdNil() {
	o.ActionIncarnationId.Set(nil)
}

// UnsetActionIncarnationId ensures that no value is present for ActionIncarnationId, not even an explicit nil
func (o *TenantMigrationAction) UnsetActionIncarnationId() {
	o.ActionIncarnationId.Unset()
}

// GetService returns the Service field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantMigrationAction) GetService() string {
	if o == nil || IsNil(o.Service.Get()) {
		var ret string
		return ret
	}
	return *o.Service.Get()
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantMigrationAction) GetServiceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Service.Get(), o.Service.IsSet()
}

// HasService returns a boolean if a field has been set.
func (o *TenantMigrationAction) HasService() bool {
	if o != nil && o.Service.IsSet() {
		return true
	}

	return false
}

// SetService gets a reference to the given NullableString and assigns it to the Service field.
func (o *TenantMigrationAction) SetService(v string) {
	o.Service.Set(&v)
}
// SetServiceNil sets the value for Service to be an explicit nil
func (o *TenantMigrationAction) SetServiceNil() {
	o.Service.Set(nil)
}

// UnsetService ensures that no value is present for Service, not even an explicit nil
func (o *TenantMigrationAction) UnsetService() {
	o.Service.Unset()
}

// GetTarget returns the Target field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantMigrationAction) GetTarget() string {
	if o == nil || IsNil(o.Target.Get()) {
		var ret string
		return ret
	}
	return *o.Target.Get()
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantMigrationAction) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Target.Get(), o.Target.IsSet()
}

// HasTarget returns a boolean if a field has been set.
func (o *TenantMigrationAction) HasTarget() bool {
	if o != nil && o.Target.IsSet() {
		return true
	}

	return false
}

// SetTarget gets a reference to the given NullableString and assigns it to the Target field.
func (o *TenantMigrationAction) SetTarget(v string) {
	o.Target.Set(&v)
}
// SetTargetNil sets the value for Target to be an explicit nil
func (o *TenantMigrationAction) SetTargetNil() {
	o.Target.Set(nil)
}

// UnsetTarget ensures that no value is present for Target, not even an explicit nil
func (o *TenantMigrationAction) UnsetTarget() {
	o.Target.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantMigrationAction) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantMigrationAction) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *TenantMigrationAction) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *TenantMigrationAction) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *TenantMigrationAction) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *TenantMigrationAction) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetTenantMigrationUuid returns the TenantMigrationUuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantMigrationAction) GetTenantMigrationUuid() string {
	if o == nil || IsNil(o.TenantMigrationUuid.Get()) {
		var ret string
		return ret
	}
	return *o.TenantMigrationUuid.Get()
}

// GetTenantMigrationUuidOk returns a tuple with the TenantMigrationUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantMigrationAction) GetTenantMigrationUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantMigrationUuid.Get(), o.TenantMigrationUuid.IsSet()
}

// HasTenantMigrationUuid returns a boolean if a field has been set.
func (o *TenantMigrationAction) HasTenantMigrationUuid() bool {
	if o != nil && o.TenantMigrationUuid.IsSet() {
		return true
	}

	return false
}

// SetTenantMigrationUuid gets a reference to the given NullableString and assigns it to the TenantMigrationUuid field.
func (o *TenantMigrationAction) SetTenantMigrationUuid(v string) {
	o.TenantMigrationUuid.Set(&v)
}
// SetTenantMigrationUuidNil sets the value for TenantMigrationUuid to be an explicit nil
func (o *TenantMigrationAction) SetTenantMigrationUuidNil() {
	o.TenantMigrationUuid.Set(nil)
}

// UnsetTenantMigrationUuid ensures that no value is present for TenantMigrationUuid, not even an explicit nil
func (o *TenantMigrationAction) UnsetTenantMigrationUuid() {
	o.TenantMigrationUuid.Unset()
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantMigrationAction) GetVersion() int32 {
	if o == nil || IsNil(o.Version.Get()) {
		var ret int32
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantMigrationAction) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *TenantMigrationAction) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableInt32 and assigns it to the Version field.
func (o *TenantMigrationAction) SetVersion(v int32) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *TenantMigrationAction) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *TenantMigrationAction) UnsetVersion() {
	o.Version.Unset()
}

func (o TenantMigrationAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantMigrationAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action.Get()
	if o.ActionIncarnationId.IsSet() {
		toSerialize["actionIncarnationId"] = o.ActionIncarnationId.Get()
	}
	if o.Service.IsSet() {
		toSerialize["service"] = o.Service.Get()
	}
	if o.Target.IsSet() {
		toSerialize["target"] = o.Target.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.TenantMigrationUuid.IsSet() {
		toSerialize["tenantMigrationUuid"] = o.TenantMigrationUuid.Get()
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	return toSerialize, nil
}

func (o *TenantMigrationAction) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTenantMigrationAction := _TenantMigrationAction{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTenantMigrationAction)

	if err != nil {
		return err
	}

	*o = TenantMigrationAction(varTenantMigrationAction)

	return err
}

type NullableTenantMigrationAction struct {
	value *TenantMigrationAction
	isSet bool
}

func (v NullableTenantMigrationAction) Get() *TenantMigrationAction {
	return v.value
}

func (v *NullableTenantMigrationAction) Set(val *TenantMigrationAction) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantMigrationAction) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantMigrationAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantMigrationAction(val *TenantMigrationAction) *NullableTenantMigrationAction {
	return &NullableTenantMigrationAction{value: val, isSet: true}
}

func (v NullableTenantMigrationAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantMigrationAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


