/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the SnapshotsSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotsSummary{}

// SnapshotsSummary Specifies a summary of the object snapshots.
type SnapshotsSummary struct {
	// Specifies the cluster id where the snapshots is stored.
	ClusterId NullableInt64 `json:"clusterId,omitempty"`
	// Specifies the cluster incarnation id where the snapshots is stored.
	ClusterIncarnationId NullableInt64 `json:"clusterIncarnationId,omitempty"`
	ExternalTargetInfo NullableSnapshotsSummaryExternalTargetInfo `json:"externalTargetInfo,omitempty"`
	// Specifies the timestamp in Unix time epoch in microseconds representing the latest end time.
	LatestEndTimeUsecs NullableInt64 `json:"latestEndTimeUsecs,omitempty"`
	// Specifies the timestamp in Unix time epoch in microseconds when the latest run started.
	LatestRunStartTimeUsecs NullableInt64 `json:"latestRunStartTimeUsecs,omitempty"`
	// Specifies the status of latest run.
	LatestRunStatus NullableString `json:"latestRunStatus,omitempty"`
	// Specifies the timestamp in Unix time epoch in microseconds when the latest snapshot is taken.
	LatestSnapshotTimestampUsecs NullableInt64 `json:"latestSnapshotTimestampUsecs,omitempty"`
	// Specifies the ownership context of the snapshot target.
	OwnershipContext NullableString `json:"ownershipContext,omitempty"`
	// Specifies the cluster indentifier where the snapshots is stored.
	RegionId NullableString `json:"regionId,omitempty"`
	// Specifies the number of snapshots of this type and target.
	SnapshotCount NullableInt64 `json:"snapshotCount,omitempty"`
	// Specifies the target type where the Object's snapshot resides.
	SnapshotTargetType NullableString `json:"snapshotTargetType,omitempty"`
}

// NewSnapshotsSummary instantiates a new SnapshotsSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotsSummary() *SnapshotsSummary {
	this := SnapshotsSummary{}
	return &this
}

// NewSnapshotsSummaryWithDefaults instantiates a new SnapshotsSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotsSummaryWithDefaults() *SnapshotsSummary {
	this := SnapshotsSummary{}
	return &this
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotsSummary) GetClusterId() int64 {
	if o == nil || IsNil(o.ClusterId.Get()) {
		var ret int64
		return ret
	}
	return *o.ClusterId.Get()
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotsSummary) GetClusterIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterId.Get(), o.ClusterId.IsSet()
}

// HasClusterId returns a boolean if a field has been set.
func (o *SnapshotsSummary) HasClusterId() bool {
	if o != nil && o.ClusterId.IsSet() {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given NullableInt64 and assigns it to the ClusterId field.
func (o *SnapshotsSummary) SetClusterId(v int64) {
	o.ClusterId.Set(&v)
}
// SetClusterIdNil sets the value for ClusterId to be an explicit nil
func (o *SnapshotsSummary) SetClusterIdNil() {
	o.ClusterId.Set(nil)
}

// UnsetClusterId ensures that no value is present for ClusterId, not even an explicit nil
func (o *SnapshotsSummary) UnsetClusterId() {
	o.ClusterId.Unset()
}

// GetClusterIncarnationId returns the ClusterIncarnationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotsSummary) GetClusterIncarnationId() int64 {
	if o == nil || IsNil(o.ClusterIncarnationId.Get()) {
		var ret int64
		return ret
	}
	return *o.ClusterIncarnationId.Get()
}

// GetClusterIncarnationIdOk returns a tuple with the ClusterIncarnationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotsSummary) GetClusterIncarnationIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterIncarnationId.Get(), o.ClusterIncarnationId.IsSet()
}

// HasClusterIncarnationId returns a boolean if a field has been set.
func (o *SnapshotsSummary) HasClusterIncarnationId() bool {
	if o != nil && o.ClusterIncarnationId.IsSet() {
		return true
	}

	return false
}

// SetClusterIncarnationId gets a reference to the given NullableInt64 and assigns it to the ClusterIncarnationId field.
func (o *SnapshotsSummary) SetClusterIncarnationId(v int64) {
	o.ClusterIncarnationId.Set(&v)
}
// SetClusterIncarnationIdNil sets the value for ClusterIncarnationId to be an explicit nil
func (o *SnapshotsSummary) SetClusterIncarnationIdNil() {
	o.ClusterIncarnationId.Set(nil)
}

// UnsetClusterIncarnationId ensures that no value is present for ClusterIncarnationId, not even an explicit nil
func (o *SnapshotsSummary) UnsetClusterIncarnationId() {
	o.ClusterIncarnationId.Unset()
}

// GetExternalTargetInfo returns the ExternalTargetInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotsSummary) GetExternalTargetInfo() SnapshotsSummaryExternalTargetInfo {
	if o == nil || IsNil(o.ExternalTargetInfo.Get()) {
		var ret SnapshotsSummaryExternalTargetInfo
		return ret
	}
	return *o.ExternalTargetInfo.Get()
}

// GetExternalTargetInfoOk returns a tuple with the ExternalTargetInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotsSummary) GetExternalTargetInfoOk() (*SnapshotsSummaryExternalTargetInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalTargetInfo.Get(), o.ExternalTargetInfo.IsSet()
}

// HasExternalTargetInfo returns a boolean if a field has been set.
func (o *SnapshotsSummary) HasExternalTargetInfo() bool {
	if o != nil && o.ExternalTargetInfo.IsSet() {
		return true
	}

	return false
}

// SetExternalTargetInfo gets a reference to the given NullableSnapshotsSummaryExternalTargetInfo and assigns it to the ExternalTargetInfo field.
func (o *SnapshotsSummary) SetExternalTargetInfo(v SnapshotsSummaryExternalTargetInfo) {
	o.ExternalTargetInfo.Set(&v)
}
// SetExternalTargetInfoNil sets the value for ExternalTargetInfo to be an explicit nil
func (o *SnapshotsSummary) SetExternalTargetInfoNil() {
	o.ExternalTargetInfo.Set(nil)
}

// UnsetExternalTargetInfo ensures that no value is present for ExternalTargetInfo, not even an explicit nil
func (o *SnapshotsSummary) UnsetExternalTargetInfo() {
	o.ExternalTargetInfo.Unset()
}

// GetLatestEndTimeUsecs returns the LatestEndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotsSummary) GetLatestEndTimeUsecs() int64 {
	if o == nil || IsNil(o.LatestEndTimeUsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.LatestEndTimeUsecs.Get()
}

// GetLatestEndTimeUsecsOk returns a tuple with the LatestEndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotsSummary) GetLatestEndTimeUsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LatestEndTimeUsecs.Get(), o.LatestEndTimeUsecs.IsSet()
}

// HasLatestEndTimeUsecs returns a boolean if a field has been set.
func (o *SnapshotsSummary) HasLatestEndTimeUsecs() bool {
	if o != nil && o.LatestEndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetLatestEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the LatestEndTimeUsecs field.
func (o *SnapshotsSummary) SetLatestEndTimeUsecs(v int64) {
	o.LatestEndTimeUsecs.Set(&v)
}
// SetLatestEndTimeUsecsNil sets the value for LatestEndTimeUsecs to be an explicit nil
func (o *SnapshotsSummary) SetLatestEndTimeUsecsNil() {
	o.LatestEndTimeUsecs.Set(nil)
}

// UnsetLatestEndTimeUsecs ensures that no value is present for LatestEndTimeUsecs, not even an explicit nil
func (o *SnapshotsSummary) UnsetLatestEndTimeUsecs() {
	o.LatestEndTimeUsecs.Unset()
}

// GetLatestRunStartTimeUsecs returns the LatestRunStartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotsSummary) GetLatestRunStartTimeUsecs() int64 {
	if o == nil || IsNil(o.LatestRunStartTimeUsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.LatestRunStartTimeUsecs.Get()
}

// GetLatestRunStartTimeUsecsOk returns a tuple with the LatestRunStartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotsSummary) GetLatestRunStartTimeUsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LatestRunStartTimeUsecs.Get(), o.LatestRunStartTimeUsecs.IsSet()
}

// HasLatestRunStartTimeUsecs returns a boolean if a field has been set.
func (o *SnapshotsSummary) HasLatestRunStartTimeUsecs() bool {
	if o != nil && o.LatestRunStartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetLatestRunStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the LatestRunStartTimeUsecs field.
func (o *SnapshotsSummary) SetLatestRunStartTimeUsecs(v int64) {
	o.LatestRunStartTimeUsecs.Set(&v)
}
// SetLatestRunStartTimeUsecsNil sets the value for LatestRunStartTimeUsecs to be an explicit nil
func (o *SnapshotsSummary) SetLatestRunStartTimeUsecsNil() {
	o.LatestRunStartTimeUsecs.Set(nil)
}

// UnsetLatestRunStartTimeUsecs ensures that no value is present for LatestRunStartTimeUsecs, not even an explicit nil
func (o *SnapshotsSummary) UnsetLatestRunStartTimeUsecs() {
	o.LatestRunStartTimeUsecs.Unset()
}

// GetLatestRunStatus returns the LatestRunStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotsSummary) GetLatestRunStatus() string {
	if o == nil || IsNil(o.LatestRunStatus.Get()) {
		var ret string
		return ret
	}
	return *o.LatestRunStatus.Get()
}

// GetLatestRunStatusOk returns a tuple with the LatestRunStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotsSummary) GetLatestRunStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LatestRunStatus.Get(), o.LatestRunStatus.IsSet()
}

// HasLatestRunStatus returns a boolean if a field has been set.
func (o *SnapshotsSummary) HasLatestRunStatus() bool {
	if o != nil && o.LatestRunStatus.IsSet() {
		return true
	}

	return false
}

// SetLatestRunStatus gets a reference to the given NullableString and assigns it to the LatestRunStatus field.
func (o *SnapshotsSummary) SetLatestRunStatus(v string) {
	o.LatestRunStatus.Set(&v)
}
// SetLatestRunStatusNil sets the value for LatestRunStatus to be an explicit nil
func (o *SnapshotsSummary) SetLatestRunStatusNil() {
	o.LatestRunStatus.Set(nil)
}

// UnsetLatestRunStatus ensures that no value is present for LatestRunStatus, not even an explicit nil
func (o *SnapshotsSummary) UnsetLatestRunStatus() {
	o.LatestRunStatus.Unset()
}

// GetLatestSnapshotTimestampUsecs returns the LatestSnapshotTimestampUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotsSummary) GetLatestSnapshotTimestampUsecs() int64 {
	if o == nil || IsNil(o.LatestSnapshotTimestampUsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.LatestSnapshotTimestampUsecs.Get()
}

// GetLatestSnapshotTimestampUsecsOk returns a tuple with the LatestSnapshotTimestampUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotsSummary) GetLatestSnapshotTimestampUsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LatestSnapshotTimestampUsecs.Get(), o.LatestSnapshotTimestampUsecs.IsSet()
}

// HasLatestSnapshotTimestampUsecs returns a boolean if a field has been set.
func (o *SnapshotsSummary) HasLatestSnapshotTimestampUsecs() bool {
	if o != nil && o.LatestSnapshotTimestampUsecs.IsSet() {
		return true
	}

	return false
}

// SetLatestSnapshotTimestampUsecs gets a reference to the given NullableInt64 and assigns it to the LatestSnapshotTimestampUsecs field.
func (o *SnapshotsSummary) SetLatestSnapshotTimestampUsecs(v int64) {
	o.LatestSnapshotTimestampUsecs.Set(&v)
}
// SetLatestSnapshotTimestampUsecsNil sets the value for LatestSnapshotTimestampUsecs to be an explicit nil
func (o *SnapshotsSummary) SetLatestSnapshotTimestampUsecsNil() {
	o.LatestSnapshotTimestampUsecs.Set(nil)
}

// UnsetLatestSnapshotTimestampUsecs ensures that no value is present for LatestSnapshotTimestampUsecs, not even an explicit nil
func (o *SnapshotsSummary) UnsetLatestSnapshotTimestampUsecs() {
	o.LatestSnapshotTimestampUsecs.Unset()
}

// GetOwnershipContext returns the OwnershipContext field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotsSummary) GetOwnershipContext() string {
	if o == nil || IsNil(o.OwnershipContext.Get()) {
		var ret string
		return ret
	}
	return *o.OwnershipContext.Get()
}

// GetOwnershipContextOk returns a tuple with the OwnershipContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotsSummary) GetOwnershipContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OwnershipContext.Get(), o.OwnershipContext.IsSet()
}

// HasOwnershipContext returns a boolean if a field has been set.
func (o *SnapshotsSummary) HasOwnershipContext() bool {
	if o != nil && o.OwnershipContext.IsSet() {
		return true
	}

	return false
}

// SetOwnershipContext gets a reference to the given NullableString and assigns it to the OwnershipContext field.
func (o *SnapshotsSummary) SetOwnershipContext(v string) {
	o.OwnershipContext.Set(&v)
}
// SetOwnershipContextNil sets the value for OwnershipContext to be an explicit nil
func (o *SnapshotsSummary) SetOwnershipContextNil() {
	o.OwnershipContext.Set(nil)
}

// UnsetOwnershipContext ensures that no value is present for OwnershipContext, not even an explicit nil
func (o *SnapshotsSummary) UnsetOwnershipContext() {
	o.OwnershipContext.Unset()
}

// GetRegionId returns the RegionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotsSummary) GetRegionId() string {
	if o == nil || IsNil(o.RegionId.Get()) {
		var ret string
		return ret
	}
	return *o.RegionId.Get()
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotsSummary) GetRegionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RegionId.Get(), o.RegionId.IsSet()
}

// HasRegionId returns a boolean if a field has been set.
func (o *SnapshotsSummary) HasRegionId() bool {
	if o != nil && o.RegionId.IsSet() {
		return true
	}

	return false
}

// SetRegionId gets a reference to the given NullableString and assigns it to the RegionId field.
func (o *SnapshotsSummary) SetRegionId(v string) {
	o.RegionId.Set(&v)
}
// SetRegionIdNil sets the value for RegionId to be an explicit nil
func (o *SnapshotsSummary) SetRegionIdNil() {
	o.RegionId.Set(nil)
}

// UnsetRegionId ensures that no value is present for RegionId, not even an explicit nil
func (o *SnapshotsSummary) UnsetRegionId() {
	o.RegionId.Unset()
}

// GetSnapshotCount returns the SnapshotCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotsSummary) GetSnapshotCount() int64 {
	if o == nil || IsNil(o.SnapshotCount.Get()) {
		var ret int64
		return ret
	}
	return *o.SnapshotCount.Get()
}

// GetSnapshotCountOk returns a tuple with the SnapshotCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotsSummary) GetSnapshotCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SnapshotCount.Get(), o.SnapshotCount.IsSet()
}

// HasSnapshotCount returns a boolean if a field has been set.
func (o *SnapshotsSummary) HasSnapshotCount() bool {
	if o != nil && o.SnapshotCount.IsSet() {
		return true
	}

	return false
}

// SetSnapshotCount gets a reference to the given NullableInt64 and assigns it to the SnapshotCount field.
func (o *SnapshotsSummary) SetSnapshotCount(v int64) {
	o.SnapshotCount.Set(&v)
}
// SetSnapshotCountNil sets the value for SnapshotCount to be an explicit nil
func (o *SnapshotsSummary) SetSnapshotCountNil() {
	o.SnapshotCount.Set(nil)
}

// UnsetSnapshotCount ensures that no value is present for SnapshotCount, not even an explicit nil
func (o *SnapshotsSummary) UnsetSnapshotCount() {
	o.SnapshotCount.Unset()
}

// GetSnapshotTargetType returns the SnapshotTargetType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotsSummary) GetSnapshotTargetType() string {
	if o == nil || IsNil(o.SnapshotTargetType.Get()) {
		var ret string
		return ret
	}
	return *o.SnapshotTargetType.Get()
}

// GetSnapshotTargetTypeOk returns a tuple with the SnapshotTargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotsSummary) GetSnapshotTargetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SnapshotTargetType.Get(), o.SnapshotTargetType.IsSet()
}

// HasSnapshotTargetType returns a boolean if a field has been set.
func (o *SnapshotsSummary) HasSnapshotTargetType() bool {
	if o != nil && o.SnapshotTargetType.IsSet() {
		return true
	}

	return false
}

// SetSnapshotTargetType gets a reference to the given NullableString and assigns it to the SnapshotTargetType field.
func (o *SnapshotsSummary) SetSnapshotTargetType(v string) {
	o.SnapshotTargetType.Set(&v)
}
// SetSnapshotTargetTypeNil sets the value for SnapshotTargetType to be an explicit nil
func (o *SnapshotsSummary) SetSnapshotTargetTypeNil() {
	o.SnapshotTargetType.Set(nil)
}

// UnsetSnapshotTargetType ensures that no value is present for SnapshotTargetType, not even an explicit nil
func (o *SnapshotsSummary) UnsetSnapshotTargetType() {
	o.SnapshotTargetType.Unset()
}

func (o SnapshotsSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotsSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterId.IsSet() {
		toSerialize["clusterId"] = o.ClusterId.Get()
	}
	if o.ClusterIncarnationId.IsSet() {
		toSerialize["clusterIncarnationId"] = o.ClusterIncarnationId.Get()
	}
	if o.ExternalTargetInfo.IsSet() {
		toSerialize["externalTargetInfo"] = o.ExternalTargetInfo.Get()
	}
	if o.LatestEndTimeUsecs.IsSet() {
		toSerialize["latestEndTimeUsecs"] = o.LatestEndTimeUsecs.Get()
	}
	if o.LatestRunStartTimeUsecs.IsSet() {
		toSerialize["latestRunStartTimeUsecs"] = o.LatestRunStartTimeUsecs.Get()
	}
	if o.LatestRunStatus.IsSet() {
		toSerialize["latestRunStatus"] = o.LatestRunStatus.Get()
	}
	if o.LatestSnapshotTimestampUsecs.IsSet() {
		toSerialize["latestSnapshotTimestampUsecs"] = o.LatestSnapshotTimestampUsecs.Get()
	}
	if o.OwnershipContext.IsSet() {
		toSerialize["ownershipContext"] = o.OwnershipContext.Get()
	}
	if o.RegionId.IsSet() {
		toSerialize["regionId"] = o.RegionId.Get()
	}
	if o.SnapshotCount.IsSet() {
		toSerialize["snapshotCount"] = o.SnapshotCount.Get()
	}
	if o.SnapshotTargetType.IsSet() {
		toSerialize["snapshotTargetType"] = o.SnapshotTargetType.Get()
	}
	return toSerialize, nil
}

type NullableSnapshotsSummary struct {
	value *SnapshotsSummary
	isSet bool
}

func (v NullableSnapshotsSummary) Get() *SnapshotsSummary {
	return v.value
}

func (v *NullableSnapshotsSummary) Set(val *SnapshotsSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotsSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotsSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotsSummary(val *SnapshotsSummary) *NullableSnapshotsSummary {
	return &NullableSnapshotsSummary{value: val, isSet: true}
}

func (v NullableSnapshotsSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotsSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


