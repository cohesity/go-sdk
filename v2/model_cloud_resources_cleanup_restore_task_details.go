/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CloudResourcesCleanupRestoreTaskDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudResourcesCleanupRestoreTaskDetails{}

// CloudResourcesCleanupRestoreTaskDetails Specifies the details about the restore task for cloud resources cleanup.
type CloudResourcesCleanupRestoreTaskDetails struct {
	// Specifies the mapping between AMI ID and the EC2 instance created.
	AmiInstanceIds []CloudResourcesCleanupAmiInstanceId `json:"amiInstanceIds,omitempty"`
	// Specifies the ID of the restore task which was used to spawn the clones.
	TaskId NullableFloat32 `json:"taskId"`
}

type _CloudResourcesCleanupRestoreTaskDetails CloudResourcesCleanupRestoreTaskDetails

// NewCloudResourcesCleanupRestoreTaskDetails instantiates a new CloudResourcesCleanupRestoreTaskDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudResourcesCleanupRestoreTaskDetails(taskId NullableFloat32) *CloudResourcesCleanupRestoreTaskDetails {
	this := CloudResourcesCleanupRestoreTaskDetails{}
	this.TaskId = taskId
	return &this
}

// NewCloudResourcesCleanupRestoreTaskDetailsWithDefaults instantiates a new CloudResourcesCleanupRestoreTaskDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudResourcesCleanupRestoreTaskDetailsWithDefaults() *CloudResourcesCleanupRestoreTaskDetails {
	this := CloudResourcesCleanupRestoreTaskDetails{}
	return &this
}

// GetAmiInstanceIds returns the AmiInstanceIds field value if set, zero value otherwise.
func (o *CloudResourcesCleanupRestoreTaskDetails) GetAmiInstanceIds() []CloudResourcesCleanupAmiInstanceId {
	if o == nil || IsNil(o.AmiInstanceIds) {
		var ret []CloudResourcesCleanupAmiInstanceId
		return ret
	}
	return o.AmiInstanceIds
}

// GetAmiInstanceIdsOk returns a tuple with the AmiInstanceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResourcesCleanupRestoreTaskDetails) GetAmiInstanceIdsOk() ([]CloudResourcesCleanupAmiInstanceId, bool) {
	if o == nil || IsNil(o.AmiInstanceIds) {
		return nil, false
	}
	return o.AmiInstanceIds, true
}

// HasAmiInstanceIds returns a boolean if a field has been set.
func (o *CloudResourcesCleanupRestoreTaskDetails) HasAmiInstanceIds() bool {
	if o != nil && !IsNil(o.AmiInstanceIds) {
		return true
	}

	return false
}

// SetAmiInstanceIds gets a reference to the given []CloudResourcesCleanupAmiInstanceId and assigns it to the AmiInstanceIds field.
func (o *CloudResourcesCleanupRestoreTaskDetails) SetAmiInstanceIds(v []CloudResourcesCleanupAmiInstanceId) {
	o.AmiInstanceIds = v
}

// GetTaskId returns the TaskId field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *CloudResourcesCleanupRestoreTaskDetails) GetTaskId() float32 {
	if o == nil || o.TaskId.Get() == nil {
		var ret float32
		return ret
	}

	return *o.TaskId.Get()
}

// GetTaskIdOk returns a tuple with the TaskId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudResourcesCleanupRestoreTaskDetails) GetTaskIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaskId.Get(), o.TaskId.IsSet()
}

// SetTaskId sets field value
func (o *CloudResourcesCleanupRestoreTaskDetails) SetTaskId(v float32) {
	o.TaskId.Set(&v)
}

func (o CloudResourcesCleanupRestoreTaskDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudResourcesCleanupRestoreTaskDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AmiInstanceIds) {
		toSerialize["amiInstanceIds"] = o.AmiInstanceIds
	}
	toSerialize["taskId"] = o.TaskId.Get()
	return toSerialize, nil
}

func (o *CloudResourcesCleanupRestoreTaskDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"taskId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCloudResourcesCleanupRestoreTaskDetails := _CloudResourcesCleanupRestoreTaskDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCloudResourcesCleanupRestoreTaskDetails)

	if err != nil {
		return err
	}

	*o = CloudResourcesCleanupRestoreTaskDetails(varCloudResourcesCleanupRestoreTaskDetails)

	return err
}

type NullableCloudResourcesCleanupRestoreTaskDetails struct {
	value *CloudResourcesCleanupRestoreTaskDetails
	isSet bool
}

func (v NullableCloudResourcesCleanupRestoreTaskDetails) Get() *CloudResourcesCleanupRestoreTaskDetails {
	return v.value
}

func (v *NullableCloudResourcesCleanupRestoreTaskDetails) Set(val *CloudResourcesCleanupRestoreTaskDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudResourcesCleanupRestoreTaskDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudResourcesCleanupRestoreTaskDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudResourcesCleanupRestoreTaskDetails(val *CloudResourcesCleanupRestoreTaskDetails) *NullableCloudResourcesCleanupRestoreTaskDetails {
	return &NullableCloudResourcesCleanupRestoreTaskDetails{value: val, isSet: true}
}

func (v NullableCloudResourcesCleanupRestoreTaskDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudResourcesCleanupRestoreTaskDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


