/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PstParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PstParam{}

// PstParam Specifies the PST conversion specific parameters.
type PstParam struct {
	// Specifies if create a PST or MSG for input items.
	CreatePst NullableBool `json:"createPst,omitempty"`
	// Specifies Password to be set for generated PSTs.
	Password NullableString `json:"password"`
	// Specifies PST size threshold in bytes.
	SizeThresholdBytes NullableInt64 `json:"sizeThresholdBytes,omitempty"`
}

type _PstParam PstParam

// NewPstParam instantiates a new PstParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPstParam(password NullableString) *PstParam {
	this := PstParam{}
	this.Password = password
	return &this
}

// NewPstParamWithDefaults instantiates a new PstParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPstParamWithDefaults() *PstParam {
	this := PstParam{}
	return &this
}

// GetCreatePst returns the CreatePst field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PstParam) GetCreatePst() bool {
	if o == nil || IsNil(o.CreatePst.Get()) {
		var ret bool
		return ret
	}
	return *o.CreatePst.Get()
}

// GetCreatePstOk returns a tuple with the CreatePst field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PstParam) GetCreatePstOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatePst.Get(), o.CreatePst.IsSet()
}

// HasCreatePst returns a boolean if a field has been set.
func (o *PstParam) HasCreatePst() bool {
	if o != nil && o.CreatePst.IsSet() {
		return true
	}

	return false
}

// SetCreatePst gets a reference to the given NullableBool and assigns it to the CreatePst field.
func (o *PstParam) SetCreatePst(v bool) {
	o.CreatePst.Set(&v)
}
// SetCreatePstNil sets the value for CreatePst to be an explicit nil
func (o *PstParam) SetCreatePstNil() {
	o.CreatePst.Set(nil)
}

// UnsetCreatePst ensures that no value is present for CreatePst, not even an explicit nil
func (o *PstParam) UnsetCreatePst() {
	o.CreatePst.Unset()
}

// GetPassword returns the Password field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PstParam) GetPassword() string {
	if o == nil || o.Password.Get() == nil {
		var ret string
		return ret
	}

	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PstParam) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// SetPassword sets field value
func (o *PstParam) SetPassword(v string) {
	o.Password.Set(&v)
}

// GetSizeThresholdBytes returns the SizeThresholdBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PstParam) GetSizeThresholdBytes() int64 {
	if o == nil || IsNil(o.SizeThresholdBytes.Get()) {
		var ret int64
		return ret
	}
	return *o.SizeThresholdBytes.Get()
}

// GetSizeThresholdBytesOk returns a tuple with the SizeThresholdBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PstParam) GetSizeThresholdBytesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SizeThresholdBytes.Get(), o.SizeThresholdBytes.IsSet()
}

// HasSizeThresholdBytes returns a boolean if a field has been set.
func (o *PstParam) HasSizeThresholdBytes() bool {
	if o != nil && o.SizeThresholdBytes.IsSet() {
		return true
	}

	return false
}

// SetSizeThresholdBytes gets a reference to the given NullableInt64 and assigns it to the SizeThresholdBytes field.
func (o *PstParam) SetSizeThresholdBytes(v int64) {
	o.SizeThresholdBytes.Set(&v)
}
// SetSizeThresholdBytesNil sets the value for SizeThresholdBytes to be an explicit nil
func (o *PstParam) SetSizeThresholdBytesNil() {
	o.SizeThresholdBytes.Set(nil)
}

// UnsetSizeThresholdBytes ensures that no value is present for SizeThresholdBytes, not even an explicit nil
func (o *PstParam) UnsetSizeThresholdBytes() {
	o.SizeThresholdBytes.Unset()
}

func (o PstParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PstParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatePst.IsSet() {
		toSerialize["createPst"] = o.CreatePst.Get()
	}
	toSerialize["password"] = o.Password.Get()
	if o.SizeThresholdBytes.IsSet() {
		toSerialize["sizeThresholdBytes"] = o.SizeThresholdBytes.Get()
	}
	return toSerialize, nil
}

func (o *PstParam) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"password",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPstParam := _PstParam{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPstParam)

	if err != nil {
		return err
	}

	*o = PstParam(varPstParam)

	return err
}

type NullablePstParam struct {
	value *PstParam
	isSet bool
}

func (v NullablePstParam) Get() *PstParam {
	return v.value
}

func (v *NullablePstParam) Set(val *PstParam) {
	v.value = val
	v.isSet = true
}

func (v NullablePstParam) IsSet() bool {
	return v.isSet
}

func (v *NullablePstParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePstParam(val *PstParam) *NullablePstParam {
	return &NullablePstParam{value: val, isSet: true}
}

func (v NullablePstParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePstParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


