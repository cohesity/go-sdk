/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ProtectedObjectActionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProtectedObjectActionResponse{}

// ProtectedObjectActionResponse Specifies the response upon performing an action on protected objects.
type ProtectedObjectActionResponse struct {
	// Specifies the action type to be performed on object getting protected. Based on selected action, provide the action params.
	Action *string `json:"action,omitempty"`
	// Specifies the list of objects on which the provided action was performed.
	Objects []ActionObjectLevelResponse `json:"objects,omitempty"`
}

// NewProtectedObjectActionResponse instantiates a new ProtectedObjectActionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectedObjectActionResponse() *ProtectedObjectActionResponse {
	this := ProtectedObjectActionResponse{}
	return &this
}

// NewProtectedObjectActionResponseWithDefaults instantiates a new ProtectedObjectActionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectedObjectActionResponseWithDefaults() *ProtectedObjectActionResponse {
	this := ProtectedObjectActionResponse{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ProtectedObjectActionResponse) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectActionResponse) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ProtectedObjectActionResponse) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *ProtectedObjectActionResponse) SetAction(v string) {
	o.Action = &v
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *ProtectedObjectActionResponse) GetObjects() []ActionObjectLevelResponse {
	if o == nil || IsNil(o.Objects) {
		var ret []ActionObjectLevelResponse
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectActionResponse) GetObjectsOk() ([]ActionObjectLevelResponse, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *ProtectedObjectActionResponse) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []ActionObjectLevelResponse and assigns it to the Objects field.
func (o *ProtectedObjectActionResponse) SetObjects(v []ActionObjectLevelResponse) {
	o.Objects = v
}

func (o ProtectedObjectActionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProtectedObjectActionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Objects) {
		toSerialize["objects"] = o.Objects
	}
	return toSerialize, nil
}

type NullableProtectedObjectActionResponse struct {
	value *ProtectedObjectActionResponse
	isSet bool
}

func (v NullableProtectedObjectActionResponse) Get() *ProtectedObjectActionResponse {
	return v.value
}

func (v *NullableProtectedObjectActionResponse) Set(val *ProtectedObjectActionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectedObjectActionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectedObjectActionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectedObjectActionResponse(val *ProtectedObjectActionResponse) *NullableProtectedObjectActionResponse {
	return &NullableProtectedObjectActionResponse{value: val, isSet: true}
}

func (v NullableProtectedObjectActionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectedObjectActionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


