/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the SupportTotpKeyInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SupportTotpKeyInfo{}

// SupportTotpKeyInfo Specifies the TOTP key info
type SupportTotpKeyInfo struct {
	// Specifies the TOTP account name to be configured for support user.
	AccountName *string `json:"accountName,omitempty"`
	// Specifies the TOTP secret key.
	TotpSecretKey *string `json:"totpSecretKey,omitempty"`
	// Specifies the TOTP key URI for generating MFA QR code.
	TotpUri *string `json:"totpUri,omitempty"`
}

// NewSupportTotpKeyInfo instantiates a new SupportTotpKeyInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupportTotpKeyInfo() *SupportTotpKeyInfo {
	this := SupportTotpKeyInfo{}
	return &this
}

// NewSupportTotpKeyInfoWithDefaults instantiates a new SupportTotpKeyInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupportTotpKeyInfoWithDefaults() *SupportTotpKeyInfo {
	this := SupportTotpKeyInfo{}
	return &this
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *SupportTotpKeyInfo) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportTotpKeyInfo) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *SupportTotpKeyInfo) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *SupportTotpKeyInfo) SetAccountName(v string) {
	o.AccountName = &v
}

// GetTotpSecretKey returns the TotpSecretKey field value if set, zero value otherwise.
func (o *SupportTotpKeyInfo) GetTotpSecretKey() string {
	if o == nil || IsNil(o.TotpSecretKey) {
		var ret string
		return ret
	}
	return *o.TotpSecretKey
}

// GetTotpSecretKeyOk returns a tuple with the TotpSecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportTotpKeyInfo) GetTotpSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.TotpSecretKey) {
		return nil, false
	}
	return o.TotpSecretKey, true
}

// HasTotpSecretKey returns a boolean if a field has been set.
func (o *SupportTotpKeyInfo) HasTotpSecretKey() bool {
	if o != nil && !IsNil(o.TotpSecretKey) {
		return true
	}

	return false
}

// SetTotpSecretKey gets a reference to the given string and assigns it to the TotpSecretKey field.
func (o *SupportTotpKeyInfo) SetTotpSecretKey(v string) {
	o.TotpSecretKey = &v
}

// GetTotpUri returns the TotpUri field value if set, zero value otherwise.
func (o *SupportTotpKeyInfo) GetTotpUri() string {
	if o == nil || IsNil(o.TotpUri) {
		var ret string
		return ret
	}
	return *o.TotpUri
}

// GetTotpUriOk returns a tuple with the TotpUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportTotpKeyInfo) GetTotpUriOk() (*string, bool) {
	if o == nil || IsNil(o.TotpUri) {
		return nil, false
	}
	return o.TotpUri, true
}

// HasTotpUri returns a boolean if a field has been set.
func (o *SupportTotpKeyInfo) HasTotpUri() bool {
	if o != nil && !IsNil(o.TotpUri) {
		return true
	}

	return false
}

// SetTotpUri gets a reference to the given string and assigns it to the TotpUri field.
func (o *SupportTotpKeyInfo) SetTotpUri(v string) {
	o.TotpUri = &v
}

func (o SupportTotpKeyInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SupportTotpKeyInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountName) {
		toSerialize["accountName"] = o.AccountName
	}
	if !IsNil(o.TotpSecretKey) {
		toSerialize["totpSecretKey"] = o.TotpSecretKey
	}
	if !IsNil(o.TotpUri) {
		toSerialize["totpUri"] = o.TotpUri
	}
	return toSerialize, nil
}

type NullableSupportTotpKeyInfo struct {
	value *SupportTotpKeyInfo
	isSet bool
}

func (v NullableSupportTotpKeyInfo) Get() *SupportTotpKeyInfo {
	return v.value
}

func (v *NullableSupportTotpKeyInfo) Set(val *SupportTotpKeyInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSupportTotpKeyInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSupportTotpKeyInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupportTotpKeyInfo(val *SupportTotpKeyInfo) *NullableSupportTotpKeyInfo {
	return &NullableSupportTotpKeyInfo{value: val, isSet: true}
}

func (v NullableSupportTotpKeyInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupportTotpKeyInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


