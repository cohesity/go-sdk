/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ConstructMetaInfoResultSfdcParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConstructMetaInfoResultSfdcParams{}

// ConstructMetaInfoResultSfdcParams Specifies the meta info params for salesforce object.
type ConstructMetaInfoResultSfdcParams struct {
	// Specifies the list of child objects.
	ChildObjects []SfdcDependentObject `json:"childObjects,omitempty"`
	// Specifies the list of parent objects.
	ParentObjects []SfdcDependentObject `json:"parentObjects,omitempty"`
}

// NewConstructMetaInfoResultSfdcParams instantiates a new ConstructMetaInfoResultSfdcParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConstructMetaInfoResultSfdcParams() *ConstructMetaInfoResultSfdcParams {
	this := ConstructMetaInfoResultSfdcParams{}
	return &this
}

// NewConstructMetaInfoResultSfdcParamsWithDefaults instantiates a new ConstructMetaInfoResultSfdcParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConstructMetaInfoResultSfdcParamsWithDefaults() *ConstructMetaInfoResultSfdcParams {
	this := ConstructMetaInfoResultSfdcParams{}
	return &this
}

// GetChildObjects returns the ChildObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConstructMetaInfoResultSfdcParams) GetChildObjects() []SfdcDependentObject {
	if o == nil {
		var ret []SfdcDependentObject
		return ret
	}
	return o.ChildObjects
}

// GetChildObjectsOk returns a tuple with the ChildObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructMetaInfoResultSfdcParams) GetChildObjectsOk() ([]SfdcDependentObject, bool) {
	if o == nil || IsNil(o.ChildObjects) {
		return nil, false
	}
	return o.ChildObjects, true
}

// HasChildObjects returns a boolean if a field has been set.
func (o *ConstructMetaInfoResultSfdcParams) HasChildObjects() bool {
	if o != nil && !IsNil(o.ChildObjects) {
		return true
	}

	return false
}

// SetChildObjects gets a reference to the given []SfdcDependentObject and assigns it to the ChildObjects field.
func (o *ConstructMetaInfoResultSfdcParams) SetChildObjects(v []SfdcDependentObject) {
	o.ChildObjects = v
}

// GetParentObjects returns the ParentObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConstructMetaInfoResultSfdcParams) GetParentObjects() []SfdcDependentObject {
	if o == nil {
		var ret []SfdcDependentObject
		return ret
	}
	return o.ParentObjects
}

// GetParentObjectsOk returns a tuple with the ParentObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructMetaInfoResultSfdcParams) GetParentObjectsOk() ([]SfdcDependentObject, bool) {
	if o == nil || IsNil(o.ParentObjects) {
		return nil, false
	}
	return o.ParentObjects, true
}

// HasParentObjects returns a boolean if a field has been set.
func (o *ConstructMetaInfoResultSfdcParams) HasParentObjects() bool {
	if o != nil && !IsNil(o.ParentObjects) {
		return true
	}

	return false
}

// SetParentObjects gets a reference to the given []SfdcDependentObject and assigns it to the ParentObjects field.
func (o *ConstructMetaInfoResultSfdcParams) SetParentObjects(v []SfdcDependentObject) {
	o.ParentObjects = v
}

func (o ConstructMetaInfoResultSfdcParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConstructMetaInfoResultSfdcParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ChildObjects != nil {
		toSerialize["childObjects"] = o.ChildObjects
	}
	if o.ParentObjects != nil {
		toSerialize["parentObjects"] = o.ParentObjects
	}
	return toSerialize, nil
}

type NullableConstructMetaInfoResultSfdcParams struct {
	value *ConstructMetaInfoResultSfdcParams
	isSet bool
}

func (v NullableConstructMetaInfoResultSfdcParams) Get() *ConstructMetaInfoResultSfdcParams {
	return v.value
}

func (v *NullableConstructMetaInfoResultSfdcParams) Set(val *ConstructMetaInfoResultSfdcParams) {
	v.value = val
	v.isSet = true
}

func (v NullableConstructMetaInfoResultSfdcParams) IsSet() bool {
	return v.isSet
}

func (v *NullableConstructMetaInfoResultSfdcParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConstructMetaInfoResultSfdcParams(val *ConstructMetaInfoResultSfdcParams) *NullableConstructMetaInfoResultSfdcParams {
	return &NullableConstructMetaInfoResultSfdcParams{value: val, isSet: true}
}

func (v NullableConstructMetaInfoResultSfdcParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConstructMetaInfoResultSfdcParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


