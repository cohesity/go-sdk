/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AzureSqlSkuOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureSqlSkuOptions{}

// AzureSqlSkuOptions Specifies the SQL SKU parameters which are specific to Azure related Object Protection & Recovery.
type AzureSqlSkuOptions struct {
	// Specifies the capacity of the sku. For azure sql dbs, this is the number of cores. Default value is 4.
	Capacity NullableInt32 `json:"capacity,omitempty"`
	// Specifies the sku name for azure sql databases and by default Hyperscale is selected.
	Name NullableString `json:"name,omitempty"`
	// Specifies the sku tier selection for azure sql databases and by default HS_Gen5 is selected. The tiers must match their sku name selected.
	TierType NullableString `json:"tierType,omitempty"`
}

// NewAzureSqlSkuOptions instantiates a new AzureSqlSkuOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureSqlSkuOptions() *AzureSqlSkuOptions {
	this := AzureSqlSkuOptions{}
	return &this
}

// NewAzureSqlSkuOptionsWithDefaults instantiates a new AzureSqlSkuOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureSqlSkuOptionsWithDefaults() *AzureSqlSkuOptions {
	this := AzureSqlSkuOptions{}
	return &this
}

// GetCapacity returns the Capacity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureSqlSkuOptions) GetCapacity() int32 {
	if o == nil || IsNil(o.Capacity.Get()) {
		var ret int32
		return ret
	}
	return *o.Capacity.Get()
}

// GetCapacityOk returns a tuple with the Capacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureSqlSkuOptions) GetCapacityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Capacity.Get(), o.Capacity.IsSet()
}

// HasCapacity returns a boolean if a field has been set.
func (o *AzureSqlSkuOptions) HasCapacity() bool {
	if o != nil && o.Capacity.IsSet() {
		return true
	}

	return false
}

// SetCapacity gets a reference to the given NullableInt32 and assigns it to the Capacity field.
func (o *AzureSqlSkuOptions) SetCapacity(v int32) {
	o.Capacity.Set(&v)
}
// SetCapacityNil sets the value for Capacity to be an explicit nil
func (o *AzureSqlSkuOptions) SetCapacityNil() {
	o.Capacity.Set(nil)
}

// UnsetCapacity ensures that no value is present for Capacity, not even an explicit nil
func (o *AzureSqlSkuOptions) UnsetCapacity() {
	o.Capacity.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureSqlSkuOptions) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureSqlSkuOptions) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AzureSqlSkuOptions) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AzureSqlSkuOptions) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *AzureSqlSkuOptions) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AzureSqlSkuOptions) UnsetName() {
	o.Name.Unset()
}

// GetTierType returns the TierType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureSqlSkuOptions) GetTierType() string {
	if o == nil || IsNil(o.TierType.Get()) {
		var ret string
		return ret
	}
	return *o.TierType.Get()
}

// GetTierTypeOk returns a tuple with the TierType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureSqlSkuOptions) GetTierTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TierType.Get(), o.TierType.IsSet()
}

// HasTierType returns a boolean if a field has been set.
func (o *AzureSqlSkuOptions) HasTierType() bool {
	if o != nil && o.TierType.IsSet() {
		return true
	}

	return false
}

// SetTierType gets a reference to the given NullableString and assigns it to the TierType field.
func (o *AzureSqlSkuOptions) SetTierType(v string) {
	o.TierType.Set(&v)
}
// SetTierTypeNil sets the value for TierType to be an explicit nil
func (o *AzureSqlSkuOptions) SetTierTypeNil() {
	o.TierType.Set(nil)
}

// UnsetTierType ensures that no value is present for TierType, not even an explicit nil
func (o *AzureSqlSkuOptions) UnsetTierType() {
	o.TierType.Unset()
}

func (o AzureSqlSkuOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureSqlSkuOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Capacity.IsSet() {
		toSerialize["capacity"] = o.Capacity.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.TierType.IsSet() {
		toSerialize["tierType"] = o.TierType.Get()
	}
	return toSerialize, nil
}

type NullableAzureSqlSkuOptions struct {
	value *AzureSqlSkuOptions
	isSet bool
}

func (v NullableAzureSqlSkuOptions) Get() *AzureSqlSkuOptions {
	return v.value
}

func (v *NullableAzureSqlSkuOptions) Set(val *AzureSqlSkuOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureSqlSkuOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureSqlSkuOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureSqlSkuOptions(val *AzureSqlSkuOptions) *NullableAzureSqlSkuOptions {
	return &NullableAzureSqlSkuOptions{value: val, isSet: true}
}

func (v NullableAzureSqlSkuOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureSqlSkuOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


