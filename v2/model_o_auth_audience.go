/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OAuthAudience type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OAuthAudience{}

// OAuthAudience OAuth 2 Audience
type OAuthAudience struct {
	// Specifies the ID of this audience. This must match the 'aud' field in the token at login time.
	AudienceId NullableString `json:"audienceId"`
	// Specifies the list of client IDs which should be allowed to log in via this audience. The 'appid' in the token must match one of the values specified here.
	ClientIds []string `json:"clientIds"`
}

type _OAuthAudience OAuthAudience

// NewOAuthAudience instantiates a new OAuthAudience object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuthAudience(audienceId NullableString, clientIds []string) *OAuthAudience {
	this := OAuthAudience{}
	this.AudienceId = audienceId
	this.ClientIds = clientIds
	return &this
}

// NewOAuthAudienceWithDefaults instantiates a new OAuthAudience object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuthAudienceWithDefaults() *OAuthAudience {
	this := OAuthAudience{}
	return &this
}

// GetAudienceId returns the AudienceId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *OAuthAudience) GetAudienceId() string {
	if o == nil || o.AudienceId.Get() == nil {
		var ret string
		return ret
	}

	return *o.AudienceId.Get()
}

// GetAudienceIdOk returns a tuple with the AudienceId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OAuthAudience) GetAudienceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AudienceId.Get(), o.AudienceId.IsSet()
}

// SetAudienceId sets field value
func (o *OAuthAudience) SetAudienceId(v string) {
	o.AudienceId.Set(&v)
}

// GetClientIds returns the ClientIds field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *OAuthAudience) GetClientIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ClientIds
}

// GetClientIdsOk returns a tuple with the ClientIds field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OAuthAudience) GetClientIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ClientIds) {
		return nil, false
	}
	return o.ClientIds, true
}

// SetClientIds sets field value
func (o *OAuthAudience) SetClientIds(v []string) {
	o.ClientIds = v
}

func (o OAuthAudience) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OAuthAudience) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["audienceId"] = o.AudienceId.Get()
	if o.ClientIds != nil {
		toSerialize["clientIds"] = o.ClientIds
	}
	return toSerialize, nil
}

func (o *OAuthAudience) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"audienceId",
		"clientIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOAuthAudience := _OAuthAudience{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOAuthAudience)

	if err != nil {
		return err
	}

	*o = OAuthAudience(varOAuthAudience)

	return err
}

type NullableOAuthAudience struct {
	value *OAuthAudience
	isSet bool
}

func (v NullableOAuthAudience) Get() *OAuthAudience {
	return v.value
}

func (v *NullableOAuthAudience) Set(val *OAuthAudience) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuthAudience) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuthAudience) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuthAudience(val *OAuthAudience) *NullableOAuthAudience {
	return &NullableOAuthAudience{value: val, isSet: true}
}

func (v NullableOAuthAudience) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuthAudience) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


