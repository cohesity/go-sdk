/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the NoSqlProtectionGroupParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NoSqlProtectionGroupParams{}

// NoSqlProtectionGroupParams Specifies the source specific parameters for this Protection Group.
type NoSqlProtectionGroupParams struct {
	// Specifies the maximum network bandwidth that each concurrent IO Stream can use for exchanging data with the cluster.
	BandwidthMBPS NullableInt64 `json:"bandwidthMBPS,omitempty"`
	// Specifies the maximum number of concurrent IO Streams that will be created to exchange data with the cluster.
	Concurrency NullableInt32 `json:"concurrency,omitempty"`
	// The user specified name for the Source on which this protection was run.
	CustomSourceName NullableString `json:"customSourceName,omitempty"`
	// Specifies the objects to be excluded in the Protection Group.
	ExcludeObjectIds []int64 `json:"excludeObjectIds,omitempty"`
	// Specifies the list of fully qualified name of the entities to exclude for protection.
	ExcludeObjectlist []string `json:"excludeObjectlist,omitempty"`
	// Specifies the list of fully qualified name of the entities to include for protection.
	IncludeObjectlist []string `json:"includeObjectlist,omitempty"`
	// Specifies the objects to be included in the Protection Group.
	Objects []NoSqlProtectionGroupObjectParams `json:"objects,omitempty"`
	// If disabled - The excludeObjectlist is merged with the existing exclude_sources_vec, preserving any existing elements while incorporating new ones.
	OverwriteExcludeObjectlist NullableBool `json:"overwriteExcludeObjectlist,omitempty"`
	// If disabled - The includeObjectlist is merged with the existing sources_vec, preserving any existing elements while incorporating new ones.
	OverwriteIncludeObjectlist NullableBool `json:"overwriteIncludeObjectlist,omitempty"`
	// Object ID of the Source on which this protection was run .
	SourceId NullableInt64 `json:"sourceId,omitempty"`
	// Specifies the name of the Source on which this protection was run.
	SourceName NullableString `json:"sourceName,omitempty"`
}

// NewNoSqlProtectionGroupParams instantiates a new NoSqlProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNoSqlProtectionGroupParams() *NoSqlProtectionGroupParams {
	this := NoSqlProtectionGroupParams{}
	var overwriteExcludeObjectlist bool = true
	this.OverwriteExcludeObjectlist = *NewNullableBool(&overwriteExcludeObjectlist)
	var overwriteIncludeObjectlist bool = true
	this.OverwriteIncludeObjectlist = *NewNullableBool(&overwriteIncludeObjectlist)
	return &this
}

// NewNoSqlProtectionGroupParamsWithDefaults instantiates a new NoSqlProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNoSqlProtectionGroupParamsWithDefaults() *NoSqlProtectionGroupParams {
	this := NoSqlProtectionGroupParams{}
	var overwriteExcludeObjectlist bool = true
	this.OverwriteExcludeObjectlist = *NewNullableBool(&overwriteExcludeObjectlist)
	var overwriteIncludeObjectlist bool = true
	this.OverwriteIncludeObjectlist = *NewNullableBool(&overwriteIncludeObjectlist)
	return &this
}

// GetBandwidthMBPS returns the BandwidthMBPS field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NoSqlProtectionGroupParams) GetBandwidthMBPS() int64 {
	if o == nil || IsNil(o.BandwidthMBPS.Get()) {
		var ret int64
		return ret
	}
	return *o.BandwidthMBPS.Get()
}

// GetBandwidthMBPSOk returns a tuple with the BandwidthMBPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NoSqlProtectionGroupParams) GetBandwidthMBPSOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.BandwidthMBPS.Get(), o.BandwidthMBPS.IsSet()
}

// HasBandwidthMBPS returns a boolean if a field has been set.
func (o *NoSqlProtectionGroupParams) HasBandwidthMBPS() bool {
	if o != nil && o.BandwidthMBPS.IsSet() {
		return true
	}

	return false
}

// SetBandwidthMBPS gets a reference to the given NullableInt64 and assigns it to the BandwidthMBPS field.
func (o *NoSqlProtectionGroupParams) SetBandwidthMBPS(v int64) {
	o.BandwidthMBPS.Set(&v)
}
// SetBandwidthMBPSNil sets the value for BandwidthMBPS to be an explicit nil
func (o *NoSqlProtectionGroupParams) SetBandwidthMBPSNil() {
	o.BandwidthMBPS.Set(nil)
}

// UnsetBandwidthMBPS ensures that no value is present for BandwidthMBPS, not even an explicit nil
func (o *NoSqlProtectionGroupParams) UnsetBandwidthMBPS() {
	o.BandwidthMBPS.Unset()
}

// GetConcurrency returns the Concurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NoSqlProtectionGroupParams) GetConcurrency() int32 {
	if o == nil || IsNil(o.Concurrency.Get()) {
		var ret int32
		return ret
	}
	return *o.Concurrency.Get()
}

// GetConcurrencyOk returns a tuple with the Concurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NoSqlProtectionGroupParams) GetConcurrencyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Concurrency.Get(), o.Concurrency.IsSet()
}

// HasConcurrency returns a boolean if a field has been set.
func (o *NoSqlProtectionGroupParams) HasConcurrency() bool {
	if o != nil && o.Concurrency.IsSet() {
		return true
	}

	return false
}

// SetConcurrency gets a reference to the given NullableInt32 and assigns it to the Concurrency field.
func (o *NoSqlProtectionGroupParams) SetConcurrency(v int32) {
	o.Concurrency.Set(&v)
}
// SetConcurrencyNil sets the value for Concurrency to be an explicit nil
func (o *NoSqlProtectionGroupParams) SetConcurrencyNil() {
	o.Concurrency.Set(nil)
}

// UnsetConcurrency ensures that no value is present for Concurrency, not even an explicit nil
func (o *NoSqlProtectionGroupParams) UnsetConcurrency() {
	o.Concurrency.Unset()
}

// GetCustomSourceName returns the CustomSourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NoSqlProtectionGroupParams) GetCustomSourceName() string {
	if o == nil || IsNil(o.CustomSourceName.Get()) {
		var ret string
		return ret
	}
	return *o.CustomSourceName.Get()
}

// GetCustomSourceNameOk returns a tuple with the CustomSourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NoSqlProtectionGroupParams) GetCustomSourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomSourceName.Get(), o.CustomSourceName.IsSet()
}

// HasCustomSourceName returns a boolean if a field has been set.
func (o *NoSqlProtectionGroupParams) HasCustomSourceName() bool {
	if o != nil && o.CustomSourceName.IsSet() {
		return true
	}

	return false
}

// SetCustomSourceName gets a reference to the given NullableString and assigns it to the CustomSourceName field.
func (o *NoSqlProtectionGroupParams) SetCustomSourceName(v string) {
	o.CustomSourceName.Set(&v)
}
// SetCustomSourceNameNil sets the value for CustomSourceName to be an explicit nil
func (o *NoSqlProtectionGroupParams) SetCustomSourceNameNil() {
	o.CustomSourceName.Set(nil)
}

// UnsetCustomSourceName ensures that no value is present for CustomSourceName, not even an explicit nil
func (o *NoSqlProtectionGroupParams) UnsetCustomSourceName() {
	o.CustomSourceName.Unset()
}

// GetExcludeObjectIds returns the ExcludeObjectIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NoSqlProtectionGroupParams) GetExcludeObjectIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.ExcludeObjectIds
}

// GetExcludeObjectIdsOk returns a tuple with the ExcludeObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NoSqlProtectionGroupParams) GetExcludeObjectIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.ExcludeObjectIds) {
		return nil, false
	}
	return o.ExcludeObjectIds, true
}

// HasExcludeObjectIds returns a boolean if a field has been set.
func (o *NoSqlProtectionGroupParams) HasExcludeObjectIds() bool {
	if o != nil && !IsNil(o.ExcludeObjectIds) {
		return true
	}

	return false
}

// SetExcludeObjectIds gets a reference to the given []int64 and assigns it to the ExcludeObjectIds field.
func (o *NoSqlProtectionGroupParams) SetExcludeObjectIds(v []int64) {
	o.ExcludeObjectIds = v
}

// GetExcludeObjectlist returns the ExcludeObjectlist field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NoSqlProtectionGroupParams) GetExcludeObjectlist() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ExcludeObjectlist
}

// GetExcludeObjectlistOk returns a tuple with the ExcludeObjectlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NoSqlProtectionGroupParams) GetExcludeObjectlistOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludeObjectlist) {
		return nil, false
	}
	return o.ExcludeObjectlist, true
}

// HasExcludeObjectlist returns a boolean if a field has been set.
func (o *NoSqlProtectionGroupParams) HasExcludeObjectlist() bool {
	if o != nil && !IsNil(o.ExcludeObjectlist) {
		return true
	}

	return false
}

// SetExcludeObjectlist gets a reference to the given []string and assigns it to the ExcludeObjectlist field.
func (o *NoSqlProtectionGroupParams) SetExcludeObjectlist(v []string) {
	o.ExcludeObjectlist = v
}

// GetIncludeObjectlist returns the IncludeObjectlist field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NoSqlProtectionGroupParams) GetIncludeObjectlist() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.IncludeObjectlist
}

// GetIncludeObjectlistOk returns a tuple with the IncludeObjectlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NoSqlProtectionGroupParams) GetIncludeObjectlistOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludeObjectlist) {
		return nil, false
	}
	return o.IncludeObjectlist, true
}

// HasIncludeObjectlist returns a boolean if a field has been set.
func (o *NoSqlProtectionGroupParams) HasIncludeObjectlist() bool {
	if o != nil && !IsNil(o.IncludeObjectlist) {
		return true
	}

	return false
}

// SetIncludeObjectlist gets a reference to the given []string and assigns it to the IncludeObjectlist field.
func (o *NoSqlProtectionGroupParams) SetIncludeObjectlist(v []string) {
	o.IncludeObjectlist = v
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *NoSqlProtectionGroupParams) GetObjects() []NoSqlProtectionGroupObjectParams {
	if o == nil || IsNil(o.Objects) {
		var ret []NoSqlProtectionGroupObjectParams
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoSqlProtectionGroupParams) GetObjectsOk() ([]NoSqlProtectionGroupObjectParams, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *NoSqlProtectionGroupParams) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []NoSqlProtectionGroupObjectParams and assigns it to the Objects field.
func (o *NoSqlProtectionGroupParams) SetObjects(v []NoSqlProtectionGroupObjectParams) {
	o.Objects = v
}

// GetOverwriteExcludeObjectlist returns the OverwriteExcludeObjectlist field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NoSqlProtectionGroupParams) GetOverwriteExcludeObjectlist() bool {
	if o == nil || IsNil(o.OverwriteExcludeObjectlist.Get()) {
		var ret bool
		return ret
	}
	return *o.OverwriteExcludeObjectlist.Get()
}

// GetOverwriteExcludeObjectlistOk returns a tuple with the OverwriteExcludeObjectlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NoSqlProtectionGroupParams) GetOverwriteExcludeObjectlistOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.OverwriteExcludeObjectlist.Get(), o.OverwriteExcludeObjectlist.IsSet()
}

// HasOverwriteExcludeObjectlist returns a boolean if a field has been set.
func (o *NoSqlProtectionGroupParams) HasOverwriteExcludeObjectlist() bool {
	if o != nil && o.OverwriteExcludeObjectlist.IsSet() {
		return true
	}

	return false
}

// SetOverwriteExcludeObjectlist gets a reference to the given NullableBool and assigns it to the OverwriteExcludeObjectlist field.
func (o *NoSqlProtectionGroupParams) SetOverwriteExcludeObjectlist(v bool) {
	o.OverwriteExcludeObjectlist.Set(&v)
}
// SetOverwriteExcludeObjectlistNil sets the value for OverwriteExcludeObjectlist to be an explicit nil
func (o *NoSqlProtectionGroupParams) SetOverwriteExcludeObjectlistNil() {
	o.OverwriteExcludeObjectlist.Set(nil)
}

// UnsetOverwriteExcludeObjectlist ensures that no value is present for OverwriteExcludeObjectlist, not even an explicit nil
func (o *NoSqlProtectionGroupParams) UnsetOverwriteExcludeObjectlist() {
	o.OverwriteExcludeObjectlist.Unset()
}

// GetOverwriteIncludeObjectlist returns the OverwriteIncludeObjectlist field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NoSqlProtectionGroupParams) GetOverwriteIncludeObjectlist() bool {
	if o == nil || IsNil(o.OverwriteIncludeObjectlist.Get()) {
		var ret bool
		return ret
	}
	return *o.OverwriteIncludeObjectlist.Get()
}

// GetOverwriteIncludeObjectlistOk returns a tuple with the OverwriteIncludeObjectlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NoSqlProtectionGroupParams) GetOverwriteIncludeObjectlistOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.OverwriteIncludeObjectlist.Get(), o.OverwriteIncludeObjectlist.IsSet()
}

// HasOverwriteIncludeObjectlist returns a boolean if a field has been set.
func (o *NoSqlProtectionGroupParams) HasOverwriteIncludeObjectlist() bool {
	if o != nil && o.OverwriteIncludeObjectlist.IsSet() {
		return true
	}

	return false
}

// SetOverwriteIncludeObjectlist gets a reference to the given NullableBool and assigns it to the OverwriteIncludeObjectlist field.
func (o *NoSqlProtectionGroupParams) SetOverwriteIncludeObjectlist(v bool) {
	o.OverwriteIncludeObjectlist.Set(&v)
}
// SetOverwriteIncludeObjectlistNil sets the value for OverwriteIncludeObjectlist to be an explicit nil
func (o *NoSqlProtectionGroupParams) SetOverwriteIncludeObjectlistNil() {
	o.OverwriteIncludeObjectlist.Set(nil)
}

// UnsetOverwriteIncludeObjectlist ensures that no value is present for OverwriteIncludeObjectlist, not even an explicit nil
func (o *NoSqlProtectionGroupParams) UnsetOverwriteIncludeObjectlist() {
	o.OverwriteIncludeObjectlist.Unset()
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NoSqlProtectionGroupParams) GetSourceId() int64 {
	if o == nil || IsNil(o.SourceId.Get()) {
		var ret int64
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NoSqlProtectionGroupParams) GetSourceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *NoSqlProtectionGroupParams) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableInt64 and assigns it to the SourceId field.
func (o *NoSqlProtectionGroupParams) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *NoSqlProtectionGroupParams) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *NoSqlProtectionGroupParams) UnsetSourceId() {
	o.SourceId.Unset()
}

// GetSourceName returns the SourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NoSqlProtectionGroupParams) GetSourceName() string {
	if o == nil || IsNil(o.SourceName.Get()) {
		var ret string
		return ret
	}
	return *o.SourceName.Get()
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NoSqlProtectionGroupParams) GetSourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceName.Get(), o.SourceName.IsSet()
}

// HasSourceName returns a boolean if a field has been set.
func (o *NoSqlProtectionGroupParams) HasSourceName() bool {
	if o != nil && o.SourceName.IsSet() {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given NullableString and assigns it to the SourceName field.
func (o *NoSqlProtectionGroupParams) SetSourceName(v string) {
	o.SourceName.Set(&v)
}
// SetSourceNameNil sets the value for SourceName to be an explicit nil
func (o *NoSqlProtectionGroupParams) SetSourceNameNil() {
	o.SourceName.Set(nil)
}

// UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil
func (o *NoSqlProtectionGroupParams) UnsetSourceName() {
	o.SourceName.Unset()
}

func (o NoSqlProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NoSqlProtectionGroupParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BandwidthMBPS.IsSet() {
		toSerialize["bandwidthMBPS"] = o.BandwidthMBPS.Get()
	}
	if o.Concurrency.IsSet() {
		toSerialize["concurrency"] = o.Concurrency.Get()
	}
	if o.CustomSourceName.IsSet() {
		toSerialize["customSourceName"] = o.CustomSourceName.Get()
	}
	if o.ExcludeObjectIds != nil {
		toSerialize["excludeObjectIds"] = o.ExcludeObjectIds
	}
	if o.ExcludeObjectlist != nil {
		toSerialize["excludeObjectlist"] = o.ExcludeObjectlist
	}
	if o.IncludeObjectlist != nil {
		toSerialize["includeObjectlist"] = o.IncludeObjectlist
	}
	if !IsNil(o.Objects) {
		toSerialize["objects"] = o.Objects
	}
	if o.OverwriteExcludeObjectlist.IsSet() {
		toSerialize["overwriteExcludeObjectlist"] = o.OverwriteExcludeObjectlist.Get()
	}
	if o.OverwriteIncludeObjectlist.IsSet() {
		toSerialize["overwriteIncludeObjectlist"] = o.OverwriteIncludeObjectlist.Get()
	}
	if o.SourceId.IsSet() {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if o.SourceName.IsSet() {
		toSerialize["sourceName"] = o.SourceName.Get()
	}
	return toSerialize, nil
}

type NullableNoSqlProtectionGroupParams struct {
	value *NoSqlProtectionGroupParams
	isSet bool
}

func (v NullableNoSqlProtectionGroupParams) Get() *NoSqlProtectionGroupParams {
	return v.value
}

func (v *NullableNoSqlProtectionGroupParams) Set(val *NoSqlProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableNoSqlProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableNoSqlProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNoSqlProtectionGroupParams(val *NoSqlProtectionGroupParams) *NullableNoSqlProtectionGroupParams {
	return &NullableNoSqlProtectionGroupParams{value: val, isSet: true}
}

func (v NullableNoSqlProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNoSqlProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


