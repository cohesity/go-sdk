/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ResetPatchDownloadProgressResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResetPatchDownloadProgressResult{}

// ResetPatchDownloadProgressResult Specifies the result of resetting patch download progress.
type ResetPatchDownloadProgressResult struct {
	// Specifies the result of resetting patch download progress.
	Message NullableString `json:"message,omitempty"`
}

// NewResetPatchDownloadProgressResult instantiates a new ResetPatchDownloadProgressResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResetPatchDownloadProgressResult() *ResetPatchDownloadProgressResult {
	this := ResetPatchDownloadProgressResult{}
	return &this
}

// NewResetPatchDownloadProgressResultWithDefaults instantiates a new ResetPatchDownloadProgressResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResetPatchDownloadProgressResultWithDefaults() *ResetPatchDownloadProgressResult {
	this := ResetPatchDownloadProgressResult{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResetPatchDownloadProgressResult) GetMessage() string {
	if o == nil || IsNil(o.Message.Get()) {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResetPatchDownloadProgressResult) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *ResetPatchDownloadProgressResult) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *ResetPatchDownloadProgressResult) SetMessage(v string) {
	o.Message.Set(&v)
}
// SetMessageNil sets the value for Message to be an explicit nil
func (o *ResetPatchDownloadProgressResult) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *ResetPatchDownloadProgressResult) UnsetMessage() {
	o.Message.Unset()
}

func (o ResetPatchDownloadProgressResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResetPatchDownloadProgressResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	return toSerialize, nil
}

type NullableResetPatchDownloadProgressResult struct {
	value *ResetPatchDownloadProgressResult
	isSet bool
}

func (v NullableResetPatchDownloadProgressResult) Get() *ResetPatchDownloadProgressResult {
	return v.value
}

func (v *NullableResetPatchDownloadProgressResult) Set(val *ResetPatchDownloadProgressResult) {
	v.value = val
	v.isSet = true
}

func (v NullableResetPatchDownloadProgressResult) IsSet() bool {
	return v.isSet
}

func (v *NullableResetPatchDownloadProgressResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResetPatchDownloadProgressResult(val *ResetPatchDownloadProgressResult) *NullableResetPatchDownloadProgressResult {
	return &NullableResetPatchDownloadProgressResult{value: val, isSet: true}
}

func (v NullableResetPatchDownloadProgressResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResetPatchDownloadProgressResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


