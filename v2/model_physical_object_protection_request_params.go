/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PhysicalObjectProtectionRequestParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PhysicalObjectProtectionRequestParams{}

// PhysicalObjectProtectionRequestParams Specifies the request parameters specific to Physical object protection.
type PhysicalObjectProtectionRequestParams struct {
	FileObjectProtectionTypeParams NullablePhysicalFileProtectionGroupParams `json:"fileObjectProtectionTypeParams,omitempty"`
	// Specifies the Physical Object Protection type.
	ObjectProtectionType NullableString `json:"objectProtectionType"`
	VolumeObjectProtectionTypeParams NullablePhysicalVolumeProtectionGroupParams `json:"volumeObjectProtectionTypeParams,omitempty"`
}

type _PhysicalObjectProtectionRequestParams PhysicalObjectProtectionRequestParams

// NewPhysicalObjectProtectionRequestParams instantiates a new PhysicalObjectProtectionRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhysicalObjectProtectionRequestParams(objectProtectionType NullableString) *PhysicalObjectProtectionRequestParams {
	this := PhysicalObjectProtectionRequestParams{}
	this.ObjectProtectionType = objectProtectionType
	return &this
}

// NewPhysicalObjectProtectionRequestParamsWithDefaults instantiates a new PhysicalObjectProtectionRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhysicalObjectProtectionRequestParamsWithDefaults() *PhysicalObjectProtectionRequestParams {
	this := PhysicalObjectProtectionRequestParams{}
	return &this
}

// GetFileObjectProtectionTypeParams returns the FileObjectProtectionTypeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhysicalObjectProtectionRequestParams) GetFileObjectProtectionTypeParams() PhysicalFileProtectionGroupParams {
	if o == nil || IsNil(o.FileObjectProtectionTypeParams.Get()) {
		var ret PhysicalFileProtectionGroupParams
		return ret
	}
	return *o.FileObjectProtectionTypeParams.Get()
}

// GetFileObjectProtectionTypeParamsOk returns a tuple with the FileObjectProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalObjectProtectionRequestParams) GetFileObjectProtectionTypeParamsOk() (*PhysicalFileProtectionGroupParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileObjectProtectionTypeParams.Get(), o.FileObjectProtectionTypeParams.IsSet()
}

// HasFileObjectProtectionTypeParams returns a boolean if a field has been set.
func (o *PhysicalObjectProtectionRequestParams) HasFileObjectProtectionTypeParams() bool {
	if o != nil && o.FileObjectProtectionTypeParams.IsSet() {
		return true
	}

	return false
}

// SetFileObjectProtectionTypeParams gets a reference to the given NullablePhysicalFileProtectionGroupParams and assigns it to the FileObjectProtectionTypeParams field.
func (o *PhysicalObjectProtectionRequestParams) SetFileObjectProtectionTypeParams(v PhysicalFileProtectionGroupParams) {
	o.FileObjectProtectionTypeParams.Set(&v)
}
// SetFileObjectProtectionTypeParamsNil sets the value for FileObjectProtectionTypeParams to be an explicit nil
func (o *PhysicalObjectProtectionRequestParams) SetFileObjectProtectionTypeParamsNil() {
	o.FileObjectProtectionTypeParams.Set(nil)
}

// UnsetFileObjectProtectionTypeParams ensures that no value is present for FileObjectProtectionTypeParams, not even an explicit nil
func (o *PhysicalObjectProtectionRequestParams) UnsetFileObjectProtectionTypeParams() {
	o.FileObjectProtectionTypeParams.Unset()
}

// GetObjectProtectionType returns the ObjectProtectionType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PhysicalObjectProtectionRequestParams) GetObjectProtectionType() string {
	if o == nil || o.ObjectProtectionType.Get() == nil {
		var ret string
		return ret
	}

	return *o.ObjectProtectionType.Get()
}

// GetObjectProtectionTypeOk returns a tuple with the ObjectProtectionType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalObjectProtectionRequestParams) GetObjectProtectionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectProtectionType.Get(), o.ObjectProtectionType.IsSet()
}

// SetObjectProtectionType sets field value
func (o *PhysicalObjectProtectionRequestParams) SetObjectProtectionType(v string) {
	o.ObjectProtectionType.Set(&v)
}

// GetVolumeObjectProtectionTypeParams returns the VolumeObjectProtectionTypeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhysicalObjectProtectionRequestParams) GetVolumeObjectProtectionTypeParams() PhysicalVolumeProtectionGroupParams {
	if o == nil || IsNil(o.VolumeObjectProtectionTypeParams.Get()) {
		var ret PhysicalVolumeProtectionGroupParams
		return ret
	}
	return *o.VolumeObjectProtectionTypeParams.Get()
}

// GetVolumeObjectProtectionTypeParamsOk returns a tuple with the VolumeObjectProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalObjectProtectionRequestParams) GetVolumeObjectProtectionTypeParamsOk() (*PhysicalVolumeProtectionGroupParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeObjectProtectionTypeParams.Get(), o.VolumeObjectProtectionTypeParams.IsSet()
}

// HasVolumeObjectProtectionTypeParams returns a boolean if a field has been set.
func (o *PhysicalObjectProtectionRequestParams) HasVolumeObjectProtectionTypeParams() bool {
	if o != nil && o.VolumeObjectProtectionTypeParams.IsSet() {
		return true
	}

	return false
}

// SetVolumeObjectProtectionTypeParams gets a reference to the given NullablePhysicalVolumeProtectionGroupParams and assigns it to the VolumeObjectProtectionTypeParams field.
func (o *PhysicalObjectProtectionRequestParams) SetVolumeObjectProtectionTypeParams(v PhysicalVolumeProtectionGroupParams) {
	o.VolumeObjectProtectionTypeParams.Set(&v)
}
// SetVolumeObjectProtectionTypeParamsNil sets the value for VolumeObjectProtectionTypeParams to be an explicit nil
func (o *PhysicalObjectProtectionRequestParams) SetVolumeObjectProtectionTypeParamsNil() {
	o.VolumeObjectProtectionTypeParams.Set(nil)
}

// UnsetVolumeObjectProtectionTypeParams ensures that no value is present for VolumeObjectProtectionTypeParams, not even an explicit nil
func (o *PhysicalObjectProtectionRequestParams) UnsetVolumeObjectProtectionTypeParams() {
	o.VolumeObjectProtectionTypeParams.Unset()
}

func (o PhysicalObjectProtectionRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PhysicalObjectProtectionRequestParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FileObjectProtectionTypeParams.IsSet() {
		toSerialize["fileObjectProtectionTypeParams"] = o.FileObjectProtectionTypeParams.Get()
	}
	toSerialize["objectProtectionType"] = o.ObjectProtectionType.Get()
	if o.VolumeObjectProtectionTypeParams.IsSet() {
		toSerialize["volumeObjectProtectionTypeParams"] = o.VolumeObjectProtectionTypeParams.Get()
	}
	return toSerialize, nil
}

func (o *PhysicalObjectProtectionRequestParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objectProtectionType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPhysicalObjectProtectionRequestParams := _PhysicalObjectProtectionRequestParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPhysicalObjectProtectionRequestParams)

	if err != nil {
		return err
	}

	*o = PhysicalObjectProtectionRequestParams(varPhysicalObjectProtectionRequestParams)

	return err
}

type NullablePhysicalObjectProtectionRequestParams struct {
	value *PhysicalObjectProtectionRequestParams
	isSet bool
}

func (v NullablePhysicalObjectProtectionRequestParams) Get() *PhysicalObjectProtectionRequestParams {
	return v.value
}

func (v *NullablePhysicalObjectProtectionRequestParams) Set(val *PhysicalObjectProtectionRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullablePhysicalObjectProtectionRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullablePhysicalObjectProtectionRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhysicalObjectProtectionRequestParams(val *PhysicalObjectProtectionRequestParams) *NullablePhysicalObjectProtectionRequestParams {
	return &NullablePhysicalObjectProtectionRequestParams{value: val, isSet: true}
}

func (v NullablePhysicalObjectProtectionRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhysicalObjectProtectionRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


