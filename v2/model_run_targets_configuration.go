/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the RunTargetsConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunTargetsConfiguration{}

// RunTargetsConfiguration Specifies the replication and archival targets.
type RunTargetsConfiguration struct {
	// Specifies a list of archival targets configurations.
	Archivals []RunArchivalConfig `json:"archivals,omitempty"`
	// Specifies a list of cloud replication targets configurations.
	CloudReplications []RunCloudReplicationConfig `json:"cloudReplications,omitempty"`
	// Specifies a list of replication targets configurations.
	Replications []RunReplicationConfig `json:"replications,omitempty"`
	// Specifies whether to use default policy settings or not. If specified as true then 'replications' and 'arcihvals' should not be specified. In case of true value, replicatioan targets congfigured in the policy will be added internally.
	UsePolicyDefaults NullableBool `json:"usePolicyDefaults,omitempty"`
}

// NewRunTargetsConfiguration instantiates a new RunTargetsConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunTargetsConfiguration() *RunTargetsConfiguration {
	this := RunTargetsConfiguration{}
	var usePolicyDefaults bool = false
	this.UsePolicyDefaults = *NewNullableBool(&usePolicyDefaults)
	return &this
}

// NewRunTargetsConfigurationWithDefaults instantiates a new RunTargetsConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunTargetsConfigurationWithDefaults() *RunTargetsConfiguration {
	this := RunTargetsConfiguration{}
	var usePolicyDefaults bool = false
	this.UsePolicyDefaults = *NewNullableBool(&usePolicyDefaults)
	return &this
}

// GetArchivals returns the Archivals field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunTargetsConfiguration) GetArchivals() []RunArchivalConfig {
	if o == nil {
		var ret []RunArchivalConfig
		return ret
	}
	return o.Archivals
}

// GetArchivalsOk returns a tuple with the Archivals field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunTargetsConfiguration) GetArchivalsOk() ([]RunArchivalConfig, bool) {
	if o == nil || IsNil(o.Archivals) {
		return nil, false
	}
	return o.Archivals, true
}

// HasArchivals returns a boolean if a field has been set.
func (o *RunTargetsConfiguration) HasArchivals() bool {
	if o != nil && !IsNil(o.Archivals) {
		return true
	}

	return false
}

// SetArchivals gets a reference to the given []RunArchivalConfig and assigns it to the Archivals field.
func (o *RunTargetsConfiguration) SetArchivals(v []RunArchivalConfig) {
	o.Archivals = v
}

// GetCloudReplications returns the CloudReplications field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunTargetsConfiguration) GetCloudReplications() []RunCloudReplicationConfig {
	if o == nil {
		var ret []RunCloudReplicationConfig
		return ret
	}
	return o.CloudReplications
}

// GetCloudReplicationsOk returns a tuple with the CloudReplications field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunTargetsConfiguration) GetCloudReplicationsOk() ([]RunCloudReplicationConfig, bool) {
	if o == nil || IsNil(o.CloudReplications) {
		return nil, false
	}
	return o.CloudReplications, true
}

// HasCloudReplications returns a boolean if a field has been set.
func (o *RunTargetsConfiguration) HasCloudReplications() bool {
	if o != nil && !IsNil(o.CloudReplications) {
		return true
	}

	return false
}

// SetCloudReplications gets a reference to the given []RunCloudReplicationConfig and assigns it to the CloudReplications field.
func (o *RunTargetsConfiguration) SetCloudReplications(v []RunCloudReplicationConfig) {
	o.CloudReplications = v
}

// GetReplications returns the Replications field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunTargetsConfiguration) GetReplications() []RunReplicationConfig {
	if o == nil {
		var ret []RunReplicationConfig
		return ret
	}
	return o.Replications
}

// GetReplicationsOk returns a tuple with the Replications field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunTargetsConfiguration) GetReplicationsOk() ([]RunReplicationConfig, bool) {
	if o == nil || IsNil(o.Replications) {
		return nil, false
	}
	return o.Replications, true
}

// HasReplications returns a boolean if a field has been set.
func (o *RunTargetsConfiguration) HasReplications() bool {
	if o != nil && !IsNil(o.Replications) {
		return true
	}

	return false
}

// SetReplications gets a reference to the given []RunReplicationConfig and assigns it to the Replications field.
func (o *RunTargetsConfiguration) SetReplications(v []RunReplicationConfig) {
	o.Replications = v
}

// GetUsePolicyDefaults returns the UsePolicyDefaults field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunTargetsConfiguration) GetUsePolicyDefaults() bool {
	if o == nil || IsNil(o.UsePolicyDefaults.Get()) {
		var ret bool
		return ret
	}
	return *o.UsePolicyDefaults.Get()
}

// GetUsePolicyDefaultsOk returns a tuple with the UsePolicyDefaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunTargetsConfiguration) GetUsePolicyDefaultsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.UsePolicyDefaults.Get(), o.UsePolicyDefaults.IsSet()
}

// HasUsePolicyDefaults returns a boolean if a field has been set.
func (o *RunTargetsConfiguration) HasUsePolicyDefaults() bool {
	if o != nil && o.UsePolicyDefaults.IsSet() {
		return true
	}

	return false
}

// SetUsePolicyDefaults gets a reference to the given NullableBool and assigns it to the UsePolicyDefaults field.
func (o *RunTargetsConfiguration) SetUsePolicyDefaults(v bool) {
	o.UsePolicyDefaults.Set(&v)
}
// SetUsePolicyDefaultsNil sets the value for UsePolicyDefaults to be an explicit nil
func (o *RunTargetsConfiguration) SetUsePolicyDefaultsNil() {
	o.UsePolicyDefaults.Set(nil)
}

// UnsetUsePolicyDefaults ensures that no value is present for UsePolicyDefaults, not even an explicit nil
func (o *RunTargetsConfiguration) UnsetUsePolicyDefaults() {
	o.UsePolicyDefaults.Unset()
}

func (o RunTargetsConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunTargetsConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Archivals != nil {
		toSerialize["archivals"] = o.Archivals
	}
	if o.CloudReplications != nil {
		toSerialize["cloudReplications"] = o.CloudReplications
	}
	if o.Replications != nil {
		toSerialize["replications"] = o.Replications
	}
	if o.UsePolicyDefaults.IsSet() {
		toSerialize["usePolicyDefaults"] = o.UsePolicyDefaults.Get()
	}
	return toSerialize, nil
}

type NullableRunTargetsConfiguration struct {
	value *RunTargetsConfiguration
	isSet bool
}

func (v NullableRunTargetsConfiguration) Get() *RunTargetsConfiguration {
	return v.value
}

func (v *NullableRunTargetsConfiguration) Set(val *RunTargetsConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableRunTargetsConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableRunTargetsConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunTargetsConfiguration(val *RunTargetsConfiguration) *NullableRunTargetsConfiguration {
	return &NullableRunTargetsConfiguration{value: val, isSet: true}
}

func (v NullableRunTargetsConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunTargetsConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


