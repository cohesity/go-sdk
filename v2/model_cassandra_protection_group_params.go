/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CassandraProtectionGroupParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CassandraProtectionGroupParams{}

// CassandraProtectionGroupParams Specifies the parameters for Cassandra Protection Group.
type CassandraProtectionGroupParams struct {
	// Specifies the maximum network bandwidth that each concurrent IO Stream can use for exchanging data with the cluster.
	BandwidthMBPS NullableInt64 `json:"bandwidthMBPS,omitempty"`
	// Specifies the maximum number of concurrent IO Streams that will be created to exchange data with the cluster.
	Concurrency NullableInt32 `json:"concurrency,omitempty"`
	// The user specified name for the Source on which this protection was run.
	CustomSourceName NullableString `json:"customSourceName,omitempty"`
	// Specifies the objects to be excluded in the Protection Group.
	ExcludeObjectIds []int64 `json:"excludeObjectIds,omitempty"`
	// Specifies the list of fully qualified name of the entities to exclude for protection.
	ExcludeObjectlist []string `json:"excludeObjectlist,omitempty"`
	// Specifies the list of fully qualified name of the entities to include for protection.
	IncludeObjectlist []string `json:"includeObjectlist,omitempty"`
	// Specifies the objects to be included in the Protection Group.
	Objects []NoSqlProtectionGroupObjectParams `json:"objects,omitempty"`
	// If disabled - The excludeObjectlist is merged with the existing exclude_sources_vec, preserving any existing elements while incorporating new ones.
	OverwriteExcludeObjectlist NullableBool `json:"overwriteExcludeObjectlist,omitempty"`
	// If disabled - The includeObjectlist is merged with the existing sources_vec, preserving any existing elements while incorporating new ones.
	OverwriteIncludeObjectlist NullableBool `json:"overwriteIncludeObjectlist,omitempty"`
	// Object ID of the Source on which this protection was run .
	SourceId NullableInt64 `json:"sourceId,omitempty"`
	// Specifies the name of the Source on which this protection was run.
	SourceName NullableString `json:"sourceName,omitempty"`
	// Only the specified data centers will be considered while taking backup. The keyspaces having replication strategy 'Simple' can be backed up only if all the datacenters for the cassandra cluster are specified. For any keyspace having replication strategy as 'Network', all the associated data centers should be specified.
	DataCenters []string `json:"dataCenters,omitempty"`
	// Specifies the type of job for Cassandra. If true, only log backup job will be scheduled for the source. This requires a policy with log Backup option enabled.
	IsLogBackup NullableBool `json:"isLogBackup,omitempty"`
	// Specifies whether this ia a system keyspace backup job.
	IsSystemKeyspaceBackup NullableBool `json:"isSystemKeyspaceBackup,omitempty"`
}

// NewCassandraProtectionGroupParams instantiates a new CassandraProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCassandraProtectionGroupParams() *CassandraProtectionGroupParams {
	this := CassandraProtectionGroupParams{}
	var overwriteExcludeObjectlist bool = true
	this.OverwriteExcludeObjectlist = *NewNullableBool(&overwriteExcludeObjectlist)
	var overwriteIncludeObjectlist bool = true
	this.OverwriteIncludeObjectlist = *NewNullableBool(&overwriteIncludeObjectlist)
	return &this
}

// NewCassandraProtectionGroupParamsWithDefaults instantiates a new CassandraProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCassandraProtectionGroupParamsWithDefaults() *CassandraProtectionGroupParams {
	this := CassandraProtectionGroupParams{}
	var overwriteExcludeObjectlist bool = true
	this.OverwriteExcludeObjectlist = *NewNullableBool(&overwriteExcludeObjectlist)
	var overwriteIncludeObjectlist bool = true
	this.OverwriteIncludeObjectlist = *NewNullableBool(&overwriteIncludeObjectlist)
	return &this
}

// GetBandwidthMBPS returns the BandwidthMBPS field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionGroupParams) GetBandwidthMBPS() int64 {
	if o == nil || IsNil(o.BandwidthMBPS.Get()) {
		var ret int64
		return ret
	}
	return *o.BandwidthMBPS.Get()
}

// GetBandwidthMBPSOk returns a tuple with the BandwidthMBPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionGroupParams) GetBandwidthMBPSOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.BandwidthMBPS.Get(), o.BandwidthMBPS.IsSet()
}

// HasBandwidthMBPS returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasBandwidthMBPS() bool {
	if o != nil && o.BandwidthMBPS.IsSet() {
		return true
	}

	return false
}

// SetBandwidthMBPS gets a reference to the given NullableInt64 and assigns it to the BandwidthMBPS field.
func (o *CassandraProtectionGroupParams) SetBandwidthMBPS(v int64) {
	o.BandwidthMBPS.Set(&v)
}
// SetBandwidthMBPSNil sets the value for BandwidthMBPS to be an explicit nil
func (o *CassandraProtectionGroupParams) SetBandwidthMBPSNil() {
	o.BandwidthMBPS.Set(nil)
}

// UnsetBandwidthMBPS ensures that no value is present for BandwidthMBPS, not even an explicit nil
func (o *CassandraProtectionGroupParams) UnsetBandwidthMBPS() {
	o.BandwidthMBPS.Unset()
}

// GetConcurrency returns the Concurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionGroupParams) GetConcurrency() int32 {
	if o == nil || IsNil(o.Concurrency.Get()) {
		var ret int32
		return ret
	}
	return *o.Concurrency.Get()
}

// GetConcurrencyOk returns a tuple with the Concurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionGroupParams) GetConcurrencyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Concurrency.Get(), o.Concurrency.IsSet()
}

// HasConcurrency returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasConcurrency() bool {
	if o != nil && o.Concurrency.IsSet() {
		return true
	}

	return false
}

// SetConcurrency gets a reference to the given NullableInt32 and assigns it to the Concurrency field.
func (o *CassandraProtectionGroupParams) SetConcurrency(v int32) {
	o.Concurrency.Set(&v)
}
// SetConcurrencyNil sets the value for Concurrency to be an explicit nil
func (o *CassandraProtectionGroupParams) SetConcurrencyNil() {
	o.Concurrency.Set(nil)
}

// UnsetConcurrency ensures that no value is present for Concurrency, not even an explicit nil
func (o *CassandraProtectionGroupParams) UnsetConcurrency() {
	o.Concurrency.Unset()
}

// GetCustomSourceName returns the CustomSourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionGroupParams) GetCustomSourceName() string {
	if o == nil || IsNil(o.CustomSourceName.Get()) {
		var ret string
		return ret
	}
	return *o.CustomSourceName.Get()
}

// GetCustomSourceNameOk returns a tuple with the CustomSourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionGroupParams) GetCustomSourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomSourceName.Get(), o.CustomSourceName.IsSet()
}

// HasCustomSourceName returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasCustomSourceName() bool {
	if o != nil && o.CustomSourceName.IsSet() {
		return true
	}

	return false
}

// SetCustomSourceName gets a reference to the given NullableString and assigns it to the CustomSourceName field.
func (o *CassandraProtectionGroupParams) SetCustomSourceName(v string) {
	o.CustomSourceName.Set(&v)
}
// SetCustomSourceNameNil sets the value for CustomSourceName to be an explicit nil
func (o *CassandraProtectionGroupParams) SetCustomSourceNameNil() {
	o.CustomSourceName.Set(nil)
}

// UnsetCustomSourceName ensures that no value is present for CustomSourceName, not even an explicit nil
func (o *CassandraProtectionGroupParams) UnsetCustomSourceName() {
	o.CustomSourceName.Unset()
}

// GetExcludeObjectIds returns the ExcludeObjectIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionGroupParams) GetExcludeObjectIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.ExcludeObjectIds
}

// GetExcludeObjectIdsOk returns a tuple with the ExcludeObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionGroupParams) GetExcludeObjectIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.ExcludeObjectIds) {
		return nil, false
	}
	return o.ExcludeObjectIds, true
}

// HasExcludeObjectIds returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasExcludeObjectIds() bool {
	if o != nil && !IsNil(o.ExcludeObjectIds) {
		return true
	}

	return false
}

// SetExcludeObjectIds gets a reference to the given []int64 and assigns it to the ExcludeObjectIds field.
func (o *CassandraProtectionGroupParams) SetExcludeObjectIds(v []int64) {
	o.ExcludeObjectIds = v
}

// GetExcludeObjectlist returns the ExcludeObjectlist field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionGroupParams) GetExcludeObjectlist() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ExcludeObjectlist
}

// GetExcludeObjectlistOk returns a tuple with the ExcludeObjectlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionGroupParams) GetExcludeObjectlistOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludeObjectlist) {
		return nil, false
	}
	return o.ExcludeObjectlist, true
}

// HasExcludeObjectlist returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasExcludeObjectlist() bool {
	if o != nil && !IsNil(o.ExcludeObjectlist) {
		return true
	}

	return false
}

// SetExcludeObjectlist gets a reference to the given []string and assigns it to the ExcludeObjectlist field.
func (o *CassandraProtectionGroupParams) SetExcludeObjectlist(v []string) {
	o.ExcludeObjectlist = v
}

// GetIncludeObjectlist returns the IncludeObjectlist field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionGroupParams) GetIncludeObjectlist() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.IncludeObjectlist
}

// GetIncludeObjectlistOk returns a tuple with the IncludeObjectlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionGroupParams) GetIncludeObjectlistOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludeObjectlist) {
		return nil, false
	}
	return o.IncludeObjectlist, true
}

// HasIncludeObjectlist returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasIncludeObjectlist() bool {
	if o != nil && !IsNil(o.IncludeObjectlist) {
		return true
	}

	return false
}

// SetIncludeObjectlist gets a reference to the given []string and assigns it to the IncludeObjectlist field.
func (o *CassandraProtectionGroupParams) SetIncludeObjectlist(v []string) {
	o.IncludeObjectlist = v
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *CassandraProtectionGroupParams) GetObjects() []NoSqlProtectionGroupObjectParams {
	if o == nil || IsNil(o.Objects) {
		var ret []NoSqlProtectionGroupObjectParams
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CassandraProtectionGroupParams) GetObjectsOk() ([]NoSqlProtectionGroupObjectParams, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []NoSqlProtectionGroupObjectParams and assigns it to the Objects field.
func (o *CassandraProtectionGroupParams) SetObjects(v []NoSqlProtectionGroupObjectParams) {
	o.Objects = v
}

// GetOverwriteExcludeObjectlist returns the OverwriteExcludeObjectlist field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionGroupParams) GetOverwriteExcludeObjectlist() bool {
	if o == nil || IsNil(o.OverwriteExcludeObjectlist.Get()) {
		var ret bool
		return ret
	}
	return *o.OverwriteExcludeObjectlist.Get()
}

// GetOverwriteExcludeObjectlistOk returns a tuple with the OverwriteExcludeObjectlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionGroupParams) GetOverwriteExcludeObjectlistOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.OverwriteExcludeObjectlist.Get(), o.OverwriteExcludeObjectlist.IsSet()
}

// HasOverwriteExcludeObjectlist returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasOverwriteExcludeObjectlist() bool {
	if o != nil && o.OverwriteExcludeObjectlist.IsSet() {
		return true
	}

	return false
}

// SetOverwriteExcludeObjectlist gets a reference to the given NullableBool and assigns it to the OverwriteExcludeObjectlist field.
func (o *CassandraProtectionGroupParams) SetOverwriteExcludeObjectlist(v bool) {
	o.OverwriteExcludeObjectlist.Set(&v)
}
// SetOverwriteExcludeObjectlistNil sets the value for OverwriteExcludeObjectlist to be an explicit nil
func (o *CassandraProtectionGroupParams) SetOverwriteExcludeObjectlistNil() {
	o.OverwriteExcludeObjectlist.Set(nil)
}

// UnsetOverwriteExcludeObjectlist ensures that no value is present for OverwriteExcludeObjectlist, not even an explicit nil
func (o *CassandraProtectionGroupParams) UnsetOverwriteExcludeObjectlist() {
	o.OverwriteExcludeObjectlist.Unset()
}

// GetOverwriteIncludeObjectlist returns the OverwriteIncludeObjectlist field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionGroupParams) GetOverwriteIncludeObjectlist() bool {
	if o == nil || IsNil(o.OverwriteIncludeObjectlist.Get()) {
		var ret bool
		return ret
	}
	return *o.OverwriteIncludeObjectlist.Get()
}

// GetOverwriteIncludeObjectlistOk returns a tuple with the OverwriteIncludeObjectlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionGroupParams) GetOverwriteIncludeObjectlistOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.OverwriteIncludeObjectlist.Get(), o.OverwriteIncludeObjectlist.IsSet()
}

// HasOverwriteIncludeObjectlist returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasOverwriteIncludeObjectlist() bool {
	if o != nil && o.OverwriteIncludeObjectlist.IsSet() {
		return true
	}

	return false
}

// SetOverwriteIncludeObjectlist gets a reference to the given NullableBool and assigns it to the OverwriteIncludeObjectlist field.
func (o *CassandraProtectionGroupParams) SetOverwriteIncludeObjectlist(v bool) {
	o.OverwriteIncludeObjectlist.Set(&v)
}
// SetOverwriteIncludeObjectlistNil sets the value for OverwriteIncludeObjectlist to be an explicit nil
func (o *CassandraProtectionGroupParams) SetOverwriteIncludeObjectlistNil() {
	o.OverwriteIncludeObjectlist.Set(nil)
}

// UnsetOverwriteIncludeObjectlist ensures that no value is present for OverwriteIncludeObjectlist, not even an explicit nil
func (o *CassandraProtectionGroupParams) UnsetOverwriteIncludeObjectlist() {
	o.OverwriteIncludeObjectlist.Unset()
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionGroupParams) GetSourceId() int64 {
	if o == nil || IsNil(o.SourceId.Get()) {
		var ret int64
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionGroupParams) GetSourceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableInt64 and assigns it to the SourceId field.
func (o *CassandraProtectionGroupParams) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *CassandraProtectionGroupParams) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *CassandraProtectionGroupParams) UnsetSourceId() {
	o.SourceId.Unset()
}

// GetSourceName returns the SourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionGroupParams) GetSourceName() string {
	if o == nil || IsNil(o.SourceName.Get()) {
		var ret string
		return ret
	}
	return *o.SourceName.Get()
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionGroupParams) GetSourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceName.Get(), o.SourceName.IsSet()
}

// HasSourceName returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasSourceName() bool {
	if o != nil && o.SourceName.IsSet() {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given NullableString and assigns it to the SourceName field.
func (o *CassandraProtectionGroupParams) SetSourceName(v string) {
	o.SourceName.Set(&v)
}
// SetSourceNameNil sets the value for SourceName to be an explicit nil
func (o *CassandraProtectionGroupParams) SetSourceNameNil() {
	o.SourceName.Set(nil)
}

// UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil
func (o *CassandraProtectionGroupParams) UnsetSourceName() {
	o.SourceName.Unset()
}

// GetDataCenters returns the DataCenters field value if set, zero value otherwise.
func (o *CassandraProtectionGroupParams) GetDataCenters() []string {
	if o == nil || IsNil(o.DataCenters) {
		var ret []string
		return ret
	}
	return o.DataCenters
}

// GetDataCentersOk returns a tuple with the DataCenters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CassandraProtectionGroupParams) GetDataCentersOk() ([]string, bool) {
	if o == nil || IsNil(o.DataCenters) {
		return nil, false
	}
	return o.DataCenters, true
}

// HasDataCenters returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasDataCenters() bool {
	if o != nil && !IsNil(o.DataCenters) {
		return true
	}

	return false
}

// SetDataCenters gets a reference to the given []string and assigns it to the DataCenters field.
func (o *CassandraProtectionGroupParams) SetDataCenters(v []string) {
	o.DataCenters = v
}

// GetIsLogBackup returns the IsLogBackup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionGroupParams) GetIsLogBackup() bool {
	if o == nil || IsNil(o.IsLogBackup.Get()) {
		var ret bool
		return ret
	}
	return *o.IsLogBackup.Get()
}

// GetIsLogBackupOk returns a tuple with the IsLogBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionGroupParams) GetIsLogBackupOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsLogBackup.Get(), o.IsLogBackup.IsSet()
}

// HasIsLogBackup returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasIsLogBackup() bool {
	if o != nil && o.IsLogBackup.IsSet() {
		return true
	}

	return false
}

// SetIsLogBackup gets a reference to the given NullableBool and assigns it to the IsLogBackup field.
func (o *CassandraProtectionGroupParams) SetIsLogBackup(v bool) {
	o.IsLogBackup.Set(&v)
}
// SetIsLogBackupNil sets the value for IsLogBackup to be an explicit nil
func (o *CassandraProtectionGroupParams) SetIsLogBackupNil() {
	o.IsLogBackup.Set(nil)
}

// UnsetIsLogBackup ensures that no value is present for IsLogBackup, not even an explicit nil
func (o *CassandraProtectionGroupParams) UnsetIsLogBackup() {
	o.IsLogBackup.Unset()
}

// GetIsSystemKeyspaceBackup returns the IsSystemKeyspaceBackup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionGroupParams) GetIsSystemKeyspaceBackup() bool {
	if o == nil || IsNil(o.IsSystemKeyspaceBackup.Get()) {
		var ret bool
		return ret
	}
	return *o.IsSystemKeyspaceBackup.Get()
}

// GetIsSystemKeyspaceBackupOk returns a tuple with the IsSystemKeyspaceBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionGroupParams) GetIsSystemKeyspaceBackupOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsSystemKeyspaceBackup.Get(), o.IsSystemKeyspaceBackup.IsSet()
}

// HasIsSystemKeyspaceBackup returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasIsSystemKeyspaceBackup() bool {
	if o != nil && o.IsSystemKeyspaceBackup.IsSet() {
		return true
	}

	return false
}

// SetIsSystemKeyspaceBackup gets a reference to the given NullableBool and assigns it to the IsSystemKeyspaceBackup field.
func (o *CassandraProtectionGroupParams) SetIsSystemKeyspaceBackup(v bool) {
	o.IsSystemKeyspaceBackup.Set(&v)
}
// SetIsSystemKeyspaceBackupNil sets the value for IsSystemKeyspaceBackup to be an explicit nil
func (o *CassandraProtectionGroupParams) SetIsSystemKeyspaceBackupNil() {
	o.IsSystemKeyspaceBackup.Set(nil)
}

// UnsetIsSystemKeyspaceBackup ensures that no value is present for IsSystemKeyspaceBackup, not even an explicit nil
func (o *CassandraProtectionGroupParams) UnsetIsSystemKeyspaceBackup() {
	o.IsSystemKeyspaceBackup.Unset()
}

func (o CassandraProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CassandraProtectionGroupParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BandwidthMBPS.IsSet() {
		toSerialize["bandwidthMBPS"] = o.BandwidthMBPS.Get()
	}
	if o.Concurrency.IsSet() {
		toSerialize["concurrency"] = o.Concurrency.Get()
	}
	if o.CustomSourceName.IsSet() {
		toSerialize["customSourceName"] = o.CustomSourceName.Get()
	}
	if o.ExcludeObjectIds != nil {
		toSerialize["excludeObjectIds"] = o.ExcludeObjectIds
	}
	if o.ExcludeObjectlist != nil {
		toSerialize["excludeObjectlist"] = o.ExcludeObjectlist
	}
	if o.IncludeObjectlist != nil {
		toSerialize["includeObjectlist"] = o.IncludeObjectlist
	}
	if !IsNil(o.Objects) {
		toSerialize["objects"] = o.Objects
	}
	if o.OverwriteExcludeObjectlist.IsSet() {
		toSerialize["overwriteExcludeObjectlist"] = o.OverwriteExcludeObjectlist.Get()
	}
	if o.OverwriteIncludeObjectlist.IsSet() {
		toSerialize["overwriteIncludeObjectlist"] = o.OverwriteIncludeObjectlist.Get()
	}
	if o.SourceId.IsSet() {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if o.SourceName.IsSet() {
		toSerialize["sourceName"] = o.SourceName.Get()
	}
	if !IsNil(o.DataCenters) {
		toSerialize["dataCenters"] = o.DataCenters
	}
	if o.IsLogBackup.IsSet() {
		toSerialize["isLogBackup"] = o.IsLogBackup.Get()
	}
	if o.IsSystemKeyspaceBackup.IsSet() {
		toSerialize["isSystemKeyspaceBackup"] = o.IsSystemKeyspaceBackup.Get()
	}
	return toSerialize, nil
}

type NullableCassandraProtectionGroupParams struct {
	value *CassandraProtectionGroupParams
	isSet bool
}

func (v NullableCassandraProtectionGroupParams) Get() *CassandraProtectionGroupParams {
	return v.value
}

func (v *NullableCassandraProtectionGroupParams) Set(val *CassandraProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCassandraProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCassandraProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCassandraProtectionGroupParams(val *CassandraProtectionGroupParams) *NullableCassandraProtectionGroupParams {
	return &NullableCassandraProtectionGroupParams{value: val, isSet: true}
}

func (v NullableCassandraProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCassandraProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


