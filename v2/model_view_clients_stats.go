/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ViewClientsStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ViewClientsStats{}

// ViewClientsStats Specifies a list of View Client stats.
type ViewClientsStats struct {
	// Specifies the list of View Client stats.
	ViewClientsStats []ViewClientStats `json:"viewClientsStats,omitempty"`
}

// NewViewClientsStats instantiates a new ViewClientsStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewClientsStats() *ViewClientsStats {
	this := ViewClientsStats{}
	return &this
}

// NewViewClientsStatsWithDefaults instantiates a new ViewClientsStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewClientsStatsWithDefaults() *ViewClientsStats {
	this := ViewClientsStats{}
	return &this
}

// GetViewClientsStats returns the ViewClientsStats field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewClientsStats) GetViewClientsStats() []ViewClientStats {
	if o == nil {
		var ret []ViewClientStats
		return ret
	}
	return o.ViewClientsStats
}

// GetViewClientsStatsOk returns a tuple with the ViewClientsStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewClientsStats) GetViewClientsStatsOk() ([]ViewClientStats, bool) {
	if o == nil || IsNil(o.ViewClientsStats) {
		return nil, false
	}
	return o.ViewClientsStats, true
}

// HasViewClientsStats returns a boolean if a field has been set.
func (o *ViewClientsStats) HasViewClientsStats() bool {
	if o != nil && !IsNil(o.ViewClientsStats) {
		return true
	}

	return false
}

// SetViewClientsStats gets a reference to the given []ViewClientStats and assigns it to the ViewClientsStats field.
func (o *ViewClientsStats) SetViewClientsStats(v []ViewClientStats) {
	o.ViewClientsStats = v
}

func (o ViewClientsStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ViewClientsStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ViewClientsStats != nil {
		toSerialize["viewClientsStats"] = o.ViewClientsStats
	}
	return toSerialize, nil
}

type NullableViewClientsStats struct {
	value *ViewClientsStats
	isSet bool
}

func (v NullableViewClientsStats) Get() *ViewClientsStats {
	return v.value
}

func (v *NullableViewClientsStats) Set(val *ViewClientsStats) {
	v.value = val
	v.isSet = true
}

func (v NullableViewClientsStats) IsSet() bool {
	return v.isSet
}

func (v *NullableViewClientsStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewClientsStats(val *ViewClientsStats) *NullableViewClientsStats {
	return &NullableViewClientsStats{value: val, isSet: true}
}

func (v NullableViewClientsStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewClientsStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


