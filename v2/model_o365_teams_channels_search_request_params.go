/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the O365TeamsChannelsSearchRequestParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &O365TeamsChannelsSearchRequestParams{}

// O365TeamsChannelsSearchRequestParams Specifies the request parameters related to channels for Microsoft365 teams
type O365TeamsChannelsSearchRequestParams struct {
	// Specifies the email id of the channel.
	ChannelEmail NullableString `json:"channelEmail,omitempty"`
	// Specifies the unique id of the channel.
	ChannelId NullableString `json:"channelId,omitempty"`
	// Specifies the name of the channel. Only items within the specified channel will be returned.
	ChannelName NullableString `json:"channelName,omitempty"`
	// Specifies whether to include private channels in the response. Default is true.
	IncludePrivateChannels NullableBool `json:"includePrivateChannels,omitempty"`
	// Specifies whether to include public channels in the response. Default is true.
	IncludePublicChannels NullableBool `json:"includePublicChannels,omitempty"`
}

// NewO365TeamsChannelsSearchRequestParams instantiates a new O365TeamsChannelsSearchRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewO365TeamsChannelsSearchRequestParams() *O365TeamsChannelsSearchRequestParams {
	this := O365TeamsChannelsSearchRequestParams{}
	var includePrivateChannels bool = true
	this.IncludePrivateChannels = *NewNullableBool(&includePrivateChannels)
	var includePublicChannels bool = true
	this.IncludePublicChannels = *NewNullableBool(&includePublicChannels)
	return &this
}

// NewO365TeamsChannelsSearchRequestParamsWithDefaults instantiates a new O365TeamsChannelsSearchRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewO365TeamsChannelsSearchRequestParamsWithDefaults() *O365TeamsChannelsSearchRequestParams {
	this := O365TeamsChannelsSearchRequestParams{}
	var includePrivateChannels bool = true
	this.IncludePrivateChannels = *NewNullableBool(&includePrivateChannels)
	var includePublicChannels bool = true
	this.IncludePublicChannels = *NewNullableBool(&includePublicChannels)
	return &this
}

// GetChannelEmail returns the ChannelEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *O365TeamsChannelsSearchRequestParams) GetChannelEmail() string {
	if o == nil || IsNil(o.ChannelEmail.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelEmail.Get()
}

// GetChannelEmailOk returns a tuple with the ChannelEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *O365TeamsChannelsSearchRequestParams) GetChannelEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelEmail.Get(), o.ChannelEmail.IsSet()
}

// HasChannelEmail returns a boolean if a field has been set.
func (o *O365TeamsChannelsSearchRequestParams) HasChannelEmail() bool {
	if o != nil && o.ChannelEmail.IsSet() {
		return true
	}

	return false
}

// SetChannelEmail gets a reference to the given NullableString and assigns it to the ChannelEmail field.
func (o *O365TeamsChannelsSearchRequestParams) SetChannelEmail(v string) {
	o.ChannelEmail.Set(&v)
}
// SetChannelEmailNil sets the value for ChannelEmail to be an explicit nil
func (o *O365TeamsChannelsSearchRequestParams) SetChannelEmailNil() {
	o.ChannelEmail.Set(nil)
}

// UnsetChannelEmail ensures that no value is present for ChannelEmail, not even an explicit nil
func (o *O365TeamsChannelsSearchRequestParams) UnsetChannelEmail() {
	o.ChannelEmail.Unset()
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *O365TeamsChannelsSearchRequestParams) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelId.Get()
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *O365TeamsChannelsSearchRequestParams) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelId.Get(), o.ChannelId.IsSet()
}

// HasChannelId returns a boolean if a field has been set.
func (o *O365TeamsChannelsSearchRequestParams) HasChannelId() bool {
	if o != nil && o.ChannelId.IsSet() {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given NullableString and assigns it to the ChannelId field.
func (o *O365TeamsChannelsSearchRequestParams) SetChannelId(v string) {
	o.ChannelId.Set(&v)
}
// SetChannelIdNil sets the value for ChannelId to be an explicit nil
func (o *O365TeamsChannelsSearchRequestParams) SetChannelIdNil() {
	o.ChannelId.Set(nil)
}

// UnsetChannelId ensures that no value is present for ChannelId, not even an explicit nil
func (o *O365TeamsChannelsSearchRequestParams) UnsetChannelId() {
	o.ChannelId.Unset()
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *O365TeamsChannelsSearchRequestParams) GetChannelName() string {
	if o == nil || IsNil(o.ChannelName.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelName.Get()
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *O365TeamsChannelsSearchRequestParams) GetChannelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelName.Get(), o.ChannelName.IsSet()
}

// HasChannelName returns a boolean if a field has been set.
func (o *O365TeamsChannelsSearchRequestParams) HasChannelName() bool {
	if o != nil && o.ChannelName.IsSet() {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given NullableString and assigns it to the ChannelName field.
func (o *O365TeamsChannelsSearchRequestParams) SetChannelName(v string) {
	o.ChannelName.Set(&v)
}
// SetChannelNameNil sets the value for ChannelName to be an explicit nil
func (o *O365TeamsChannelsSearchRequestParams) SetChannelNameNil() {
	o.ChannelName.Set(nil)
}

// UnsetChannelName ensures that no value is present for ChannelName, not even an explicit nil
func (o *O365TeamsChannelsSearchRequestParams) UnsetChannelName() {
	o.ChannelName.Unset()
}

// GetIncludePrivateChannels returns the IncludePrivateChannels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *O365TeamsChannelsSearchRequestParams) GetIncludePrivateChannels() bool {
	if o == nil || IsNil(o.IncludePrivateChannels.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludePrivateChannels.Get()
}

// GetIncludePrivateChannelsOk returns a tuple with the IncludePrivateChannels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *O365TeamsChannelsSearchRequestParams) GetIncludePrivateChannelsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludePrivateChannels.Get(), o.IncludePrivateChannels.IsSet()
}

// HasIncludePrivateChannels returns a boolean if a field has been set.
func (o *O365TeamsChannelsSearchRequestParams) HasIncludePrivateChannels() bool {
	if o != nil && o.IncludePrivateChannels.IsSet() {
		return true
	}

	return false
}

// SetIncludePrivateChannels gets a reference to the given NullableBool and assigns it to the IncludePrivateChannels field.
func (o *O365TeamsChannelsSearchRequestParams) SetIncludePrivateChannels(v bool) {
	o.IncludePrivateChannels.Set(&v)
}
// SetIncludePrivateChannelsNil sets the value for IncludePrivateChannels to be an explicit nil
func (o *O365TeamsChannelsSearchRequestParams) SetIncludePrivateChannelsNil() {
	o.IncludePrivateChannels.Set(nil)
}

// UnsetIncludePrivateChannels ensures that no value is present for IncludePrivateChannels, not even an explicit nil
func (o *O365TeamsChannelsSearchRequestParams) UnsetIncludePrivateChannels() {
	o.IncludePrivateChannels.Unset()
}

// GetIncludePublicChannels returns the IncludePublicChannels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *O365TeamsChannelsSearchRequestParams) GetIncludePublicChannels() bool {
	if o == nil || IsNil(o.IncludePublicChannels.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludePublicChannels.Get()
}

// GetIncludePublicChannelsOk returns a tuple with the IncludePublicChannels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *O365TeamsChannelsSearchRequestParams) GetIncludePublicChannelsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludePublicChannels.Get(), o.IncludePublicChannels.IsSet()
}

// HasIncludePublicChannels returns a boolean if a field has been set.
func (o *O365TeamsChannelsSearchRequestParams) HasIncludePublicChannels() bool {
	if o != nil && o.IncludePublicChannels.IsSet() {
		return true
	}

	return false
}

// SetIncludePublicChannels gets a reference to the given NullableBool and assigns it to the IncludePublicChannels field.
func (o *O365TeamsChannelsSearchRequestParams) SetIncludePublicChannels(v bool) {
	o.IncludePublicChannels.Set(&v)
}
// SetIncludePublicChannelsNil sets the value for IncludePublicChannels to be an explicit nil
func (o *O365TeamsChannelsSearchRequestParams) SetIncludePublicChannelsNil() {
	o.IncludePublicChannels.Set(nil)
}

// UnsetIncludePublicChannels ensures that no value is present for IncludePublicChannels, not even an explicit nil
func (o *O365TeamsChannelsSearchRequestParams) UnsetIncludePublicChannels() {
	o.IncludePublicChannels.Unset()
}

func (o O365TeamsChannelsSearchRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o O365TeamsChannelsSearchRequestParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ChannelEmail.IsSet() {
		toSerialize["channelEmail"] = o.ChannelEmail.Get()
	}
	if o.ChannelId.IsSet() {
		toSerialize["channelId"] = o.ChannelId.Get()
	}
	if o.ChannelName.IsSet() {
		toSerialize["channelName"] = o.ChannelName.Get()
	}
	if o.IncludePrivateChannels.IsSet() {
		toSerialize["includePrivateChannels"] = o.IncludePrivateChannels.Get()
	}
	if o.IncludePublicChannels.IsSet() {
		toSerialize["includePublicChannels"] = o.IncludePublicChannels.Get()
	}
	return toSerialize, nil
}

type NullableO365TeamsChannelsSearchRequestParams struct {
	value *O365TeamsChannelsSearchRequestParams
	isSet bool
}

func (v NullableO365TeamsChannelsSearchRequestParams) Get() *O365TeamsChannelsSearchRequestParams {
	return v.value
}

func (v *NullableO365TeamsChannelsSearchRequestParams) Set(val *O365TeamsChannelsSearchRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableO365TeamsChannelsSearchRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableO365TeamsChannelsSearchRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableO365TeamsChannelsSearchRequestParams(val *O365TeamsChannelsSearchRequestParams) *NullableO365TeamsChannelsSearchRequestParams {
	return &NullableO365TeamsChannelsSearchRequestParams{value: val, isSet: true}
}

func (v NullableO365TeamsChannelsSearchRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableO365TeamsChannelsSearchRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


