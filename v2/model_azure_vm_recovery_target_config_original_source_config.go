/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AzureVmRecoveryTargetConfigOriginalSourceConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureVmRecoveryTargetConfigOriginalSourceConfig{}

// AzureVmRecoveryTargetConfigOriginalSourceConfig Specifies the Source configuration if VM's are being recovered to Original Source.
type AzureVmRecoveryTargetConfigOriginalSourceConfig struct {
	DataTransferInfo *DataTransferInfo `json:"dataTransferInfo,omitempty"`
}

// NewAzureVmRecoveryTargetConfigOriginalSourceConfig instantiates a new AzureVmRecoveryTargetConfigOriginalSourceConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureVmRecoveryTargetConfigOriginalSourceConfig() *AzureVmRecoveryTargetConfigOriginalSourceConfig {
	this := AzureVmRecoveryTargetConfigOriginalSourceConfig{}
	return &this
}

// NewAzureVmRecoveryTargetConfigOriginalSourceConfigWithDefaults instantiates a new AzureVmRecoveryTargetConfigOriginalSourceConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureVmRecoveryTargetConfigOriginalSourceConfigWithDefaults() *AzureVmRecoveryTargetConfigOriginalSourceConfig {
	this := AzureVmRecoveryTargetConfigOriginalSourceConfig{}
	return &this
}

// GetDataTransferInfo returns the DataTransferInfo field value if set, zero value otherwise.
func (o *AzureVmRecoveryTargetConfigOriginalSourceConfig) GetDataTransferInfo() DataTransferInfo {
	if o == nil || IsNil(o.DataTransferInfo) {
		var ret DataTransferInfo
		return ret
	}
	return *o.DataTransferInfo
}

// GetDataTransferInfoOk returns a tuple with the DataTransferInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVmRecoveryTargetConfigOriginalSourceConfig) GetDataTransferInfoOk() (*DataTransferInfo, bool) {
	if o == nil || IsNil(o.DataTransferInfo) {
		return nil, false
	}
	return o.DataTransferInfo, true
}

// HasDataTransferInfo returns a boolean if a field has been set.
func (o *AzureVmRecoveryTargetConfigOriginalSourceConfig) HasDataTransferInfo() bool {
	if o != nil && !IsNil(o.DataTransferInfo) {
		return true
	}

	return false
}

// SetDataTransferInfo gets a reference to the given DataTransferInfo and assigns it to the DataTransferInfo field.
func (o *AzureVmRecoveryTargetConfigOriginalSourceConfig) SetDataTransferInfo(v DataTransferInfo) {
	o.DataTransferInfo = &v
}

func (o AzureVmRecoveryTargetConfigOriginalSourceConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureVmRecoveryTargetConfigOriginalSourceConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataTransferInfo) {
		toSerialize["dataTransferInfo"] = o.DataTransferInfo
	}
	return toSerialize, nil
}

type NullableAzureVmRecoveryTargetConfigOriginalSourceConfig struct {
	value *AzureVmRecoveryTargetConfigOriginalSourceConfig
	isSet bool
}

func (v NullableAzureVmRecoveryTargetConfigOriginalSourceConfig) Get() *AzureVmRecoveryTargetConfigOriginalSourceConfig {
	return v.value
}

func (v *NullableAzureVmRecoveryTargetConfigOriginalSourceConfig) Set(val *AzureVmRecoveryTargetConfigOriginalSourceConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureVmRecoveryTargetConfigOriginalSourceConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureVmRecoveryTargetConfigOriginalSourceConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureVmRecoveryTargetConfigOriginalSourceConfig(val *AzureVmRecoveryTargetConfigOriginalSourceConfig) *NullableAzureVmRecoveryTargetConfigOriginalSourceConfig {
	return &NullableAzureVmRecoveryTargetConfigOriginalSourceConfig{value: val, isSet: true}
}

func (v NullableAzureVmRecoveryTargetConfigOriginalSourceConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureVmRecoveryTargetConfigOriginalSourceConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


