/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RecoverO365ParamsDownloadChatsParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecoverO365ParamsDownloadChatsParams{}

// RecoverO365ParamsDownloadChatsParams Specifies the download chats specific parameters for downloading posts for a team/channel or downloading private chats for a user.
type RecoverO365ParamsDownloadChatsParams struct {
	// Specifies channel IDs whose posts needs to be downloaded. If channelIds is nil or empty then full teams' posts will be downloaded.
	ChannelIds []string `json:"channelIds,omitempty"`
	// Specifies the file type for the downloaded content.
	DownloadFileType string `json:"downloadFileType"`
	// Specifies the html template for the downloaded chats.
	HtmlTemplate NullableString `json:"htmlTemplate,omitempty"`
}

type _RecoverO365ParamsDownloadChatsParams RecoverO365ParamsDownloadChatsParams

// NewRecoverO365ParamsDownloadChatsParams instantiates a new RecoverO365ParamsDownloadChatsParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverO365ParamsDownloadChatsParams(downloadFileType string) *RecoverO365ParamsDownloadChatsParams {
	this := RecoverO365ParamsDownloadChatsParams{}
	this.DownloadFileType = downloadFileType
	return &this
}

// NewRecoverO365ParamsDownloadChatsParamsWithDefaults instantiates a new RecoverO365ParamsDownloadChatsParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverO365ParamsDownloadChatsParamsWithDefaults() *RecoverO365ParamsDownloadChatsParams {
	this := RecoverO365ParamsDownloadChatsParams{}
	return &this
}

// GetChannelIds returns the ChannelIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverO365ParamsDownloadChatsParams) GetChannelIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ChannelIds
}

// GetChannelIdsOk returns a tuple with the ChannelIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverO365ParamsDownloadChatsParams) GetChannelIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ChannelIds) {
		return nil, false
	}
	return o.ChannelIds, true
}

// HasChannelIds returns a boolean if a field has been set.
func (o *RecoverO365ParamsDownloadChatsParams) HasChannelIds() bool {
	if o != nil && !IsNil(o.ChannelIds) {
		return true
	}

	return false
}

// SetChannelIds gets a reference to the given []string and assigns it to the ChannelIds field.
func (o *RecoverO365ParamsDownloadChatsParams) SetChannelIds(v []string) {
	o.ChannelIds = v
}

// GetDownloadFileType returns the DownloadFileType field value
func (o *RecoverO365ParamsDownloadChatsParams) GetDownloadFileType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DownloadFileType
}

// GetDownloadFileTypeOk returns a tuple with the DownloadFileType field value
// and a boolean to check if the value has been set.
func (o *RecoverO365ParamsDownloadChatsParams) GetDownloadFileTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DownloadFileType, true
}

// SetDownloadFileType sets field value
func (o *RecoverO365ParamsDownloadChatsParams) SetDownloadFileType(v string) {
	o.DownloadFileType = v
}

// GetHtmlTemplate returns the HtmlTemplate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverO365ParamsDownloadChatsParams) GetHtmlTemplate() string {
	if o == nil || IsNil(o.HtmlTemplate.Get()) {
		var ret string
		return ret
	}
	return *o.HtmlTemplate.Get()
}

// GetHtmlTemplateOk returns a tuple with the HtmlTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverO365ParamsDownloadChatsParams) GetHtmlTemplateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HtmlTemplate.Get(), o.HtmlTemplate.IsSet()
}

// HasHtmlTemplate returns a boolean if a field has been set.
func (o *RecoverO365ParamsDownloadChatsParams) HasHtmlTemplate() bool {
	if o != nil && o.HtmlTemplate.IsSet() {
		return true
	}

	return false
}

// SetHtmlTemplate gets a reference to the given NullableString and assigns it to the HtmlTemplate field.
func (o *RecoverO365ParamsDownloadChatsParams) SetHtmlTemplate(v string) {
	o.HtmlTemplate.Set(&v)
}
// SetHtmlTemplateNil sets the value for HtmlTemplate to be an explicit nil
func (o *RecoverO365ParamsDownloadChatsParams) SetHtmlTemplateNil() {
	o.HtmlTemplate.Set(nil)
}

// UnsetHtmlTemplate ensures that no value is present for HtmlTemplate, not even an explicit nil
func (o *RecoverO365ParamsDownloadChatsParams) UnsetHtmlTemplate() {
	o.HtmlTemplate.Unset()
}

func (o RecoverO365ParamsDownloadChatsParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecoverO365ParamsDownloadChatsParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ChannelIds != nil {
		toSerialize["channelIds"] = o.ChannelIds
	}
	toSerialize["downloadFileType"] = o.DownloadFileType
	if o.HtmlTemplate.IsSet() {
		toSerialize["htmlTemplate"] = o.HtmlTemplate.Get()
	}
	return toSerialize, nil
}

func (o *RecoverO365ParamsDownloadChatsParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"downloadFileType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRecoverO365ParamsDownloadChatsParams := _RecoverO365ParamsDownloadChatsParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRecoverO365ParamsDownloadChatsParams)

	if err != nil {
		return err
	}

	*o = RecoverO365ParamsDownloadChatsParams(varRecoverO365ParamsDownloadChatsParams)

	return err
}

type NullableRecoverO365ParamsDownloadChatsParams struct {
	value *RecoverO365ParamsDownloadChatsParams
	isSet bool
}

func (v NullableRecoverO365ParamsDownloadChatsParams) Get() *RecoverO365ParamsDownloadChatsParams {
	return v.value
}

func (v *NullableRecoverO365ParamsDownloadChatsParams) Set(val *RecoverO365ParamsDownloadChatsParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverO365ParamsDownloadChatsParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverO365ParamsDownloadChatsParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverO365ParamsDownloadChatsParams(val *RecoverO365ParamsDownloadChatsParams) *NullableRecoverO365ParamsDownloadChatsParams {
	return &NullableRecoverO365ParamsDownloadChatsParams{value: val, isSet: true}
}

func (v NullableRecoverO365ParamsDownloadChatsParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverO365ParamsDownloadChatsParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


