/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the O365SearchRequestParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &O365SearchRequestParams{}

// O365SearchRequestParams Specifies O365 specific params search request params to search for indexed items.
type O365SearchRequestParams struct {
	// Specifies the domain Ids in which indexed items are searched.
	DomainIds []int64 `json:"domainIds,omitempty"`
	// Specifies the Group ids across which the indexed items needs to be searched.
	GroupIds []int64 `json:"groupIds,omitempty"`
	// Specifies the Sharepoint site ids across which the indexed items needs to be searched.
	SiteIds []int64 `json:"siteIds,omitempty"`
	// Specifies the Teams ids across which the indexed items needs to be searched.
	TeamsIds []int64 `json:"teamsIds,omitempty"`
	// Specifies the user ids across which the indexed items needs to be searched.
	UserIds []int64 `json:"userIds,omitempty"`
}

// NewO365SearchRequestParams instantiates a new O365SearchRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewO365SearchRequestParams() *O365SearchRequestParams {
	this := O365SearchRequestParams{}
	return &this
}

// NewO365SearchRequestParamsWithDefaults instantiates a new O365SearchRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewO365SearchRequestParamsWithDefaults() *O365SearchRequestParams {
	this := O365SearchRequestParams{}
	return &this
}

// GetDomainIds returns the DomainIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *O365SearchRequestParams) GetDomainIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.DomainIds
}

// GetDomainIdsOk returns a tuple with the DomainIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *O365SearchRequestParams) GetDomainIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.DomainIds) {
		return nil, false
	}
	return o.DomainIds, true
}

// HasDomainIds returns a boolean if a field has been set.
func (o *O365SearchRequestParams) HasDomainIds() bool {
	if o != nil && !IsNil(o.DomainIds) {
		return true
	}

	return false
}

// SetDomainIds gets a reference to the given []int64 and assigns it to the DomainIds field.
func (o *O365SearchRequestParams) SetDomainIds(v []int64) {
	o.DomainIds = v
}

// GetGroupIds returns the GroupIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *O365SearchRequestParams) GetGroupIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.GroupIds
}

// GetGroupIdsOk returns a tuple with the GroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *O365SearchRequestParams) GetGroupIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.GroupIds) {
		return nil, false
	}
	return o.GroupIds, true
}

// HasGroupIds returns a boolean if a field has been set.
func (o *O365SearchRequestParams) HasGroupIds() bool {
	if o != nil && !IsNil(o.GroupIds) {
		return true
	}

	return false
}

// SetGroupIds gets a reference to the given []int64 and assigns it to the GroupIds field.
func (o *O365SearchRequestParams) SetGroupIds(v []int64) {
	o.GroupIds = v
}

// GetSiteIds returns the SiteIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *O365SearchRequestParams) GetSiteIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.SiteIds
}

// GetSiteIdsOk returns a tuple with the SiteIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *O365SearchRequestParams) GetSiteIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.SiteIds) {
		return nil, false
	}
	return o.SiteIds, true
}

// HasSiteIds returns a boolean if a field has been set.
func (o *O365SearchRequestParams) HasSiteIds() bool {
	if o != nil && !IsNil(o.SiteIds) {
		return true
	}

	return false
}

// SetSiteIds gets a reference to the given []int64 and assigns it to the SiteIds field.
func (o *O365SearchRequestParams) SetSiteIds(v []int64) {
	o.SiteIds = v
}

// GetTeamsIds returns the TeamsIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *O365SearchRequestParams) GetTeamsIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.TeamsIds
}

// GetTeamsIdsOk returns a tuple with the TeamsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *O365SearchRequestParams) GetTeamsIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.TeamsIds) {
		return nil, false
	}
	return o.TeamsIds, true
}

// HasTeamsIds returns a boolean if a field has been set.
func (o *O365SearchRequestParams) HasTeamsIds() bool {
	if o != nil && !IsNil(o.TeamsIds) {
		return true
	}

	return false
}

// SetTeamsIds gets a reference to the given []int64 and assigns it to the TeamsIds field.
func (o *O365SearchRequestParams) SetTeamsIds(v []int64) {
	o.TeamsIds = v
}

// GetUserIds returns the UserIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *O365SearchRequestParams) GetUserIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *O365SearchRequestParams) GetUserIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.UserIds) {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *O365SearchRequestParams) HasUserIds() bool {
	if o != nil && !IsNil(o.UserIds) {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []int64 and assigns it to the UserIds field.
func (o *O365SearchRequestParams) SetUserIds(v []int64) {
	o.UserIds = v
}

func (o O365SearchRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o O365SearchRequestParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DomainIds != nil {
		toSerialize["domainIds"] = o.DomainIds
	}
	if o.GroupIds != nil {
		toSerialize["groupIds"] = o.GroupIds
	}
	if o.SiteIds != nil {
		toSerialize["siteIds"] = o.SiteIds
	}
	if o.TeamsIds != nil {
		toSerialize["teamsIds"] = o.TeamsIds
	}
	if o.UserIds != nil {
		toSerialize["userIds"] = o.UserIds
	}
	return toSerialize, nil
}

type NullableO365SearchRequestParams struct {
	value *O365SearchRequestParams
	isSet bool
}

func (v NullableO365SearchRequestParams) Get() *O365SearchRequestParams {
	return v.value
}

func (v *NullableO365SearchRequestParams) Set(val *O365SearchRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableO365SearchRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableO365SearchRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableO365SearchRequestParams(val *O365SearchRequestParams) *NullableO365SearchRequestParams {
	return &NullableO365SearchRequestParams{value: val, isSet: true}
}

func (v NullableO365SearchRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableO365SearchRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


