/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CommonAWSCategoryParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonAWSCategoryParams{}

// CommonAWSCategoryParams Specifies the cloud category parameter which are specific to AWS related External Targets.
type CommonAWSCategoryParams struct {
	// Specifies the AWS External Target type.
	CloudType NullableString `json:"cloudType"`
}

type _CommonAWSCategoryParams CommonAWSCategoryParams

// NewCommonAWSCategoryParams instantiates a new CommonAWSCategoryParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonAWSCategoryParams(cloudType NullableString) *CommonAWSCategoryParams {
	this := CommonAWSCategoryParams{}
	this.CloudType = cloudType
	return &this
}

// NewCommonAWSCategoryParamsWithDefaults instantiates a new CommonAWSCategoryParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonAWSCategoryParamsWithDefaults() *CommonAWSCategoryParams {
	this := CommonAWSCategoryParams{}
	return &this
}

// GetCloudType returns the CloudType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CommonAWSCategoryParams) GetCloudType() string {
	if o == nil || o.CloudType.Get() == nil {
		var ret string
		return ret
	}

	return *o.CloudType.Get()
}

// GetCloudTypeOk returns a tuple with the CloudType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonAWSCategoryParams) GetCloudTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloudType.Get(), o.CloudType.IsSet()
}

// SetCloudType sets field value
func (o *CommonAWSCategoryParams) SetCloudType(v string) {
	o.CloudType.Set(&v)
}

func (o CommonAWSCategoryParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonAWSCategoryParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cloudType"] = o.CloudType.Get()
	return toSerialize, nil
}

func (o *CommonAWSCategoryParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloudType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCommonAWSCategoryParams := _CommonAWSCategoryParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCommonAWSCategoryParams)

	if err != nil {
		return err
	}

	*o = CommonAWSCategoryParams(varCommonAWSCategoryParams)

	return err
}

type NullableCommonAWSCategoryParams struct {
	value *CommonAWSCategoryParams
	isSet bool
}

func (v NullableCommonAWSCategoryParams) Get() *CommonAWSCategoryParams {
	return v.value
}

func (v *NullableCommonAWSCategoryParams) Set(val *CommonAWSCategoryParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonAWSCategoryParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonAWSCategoryParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonAWSCategoryParams(val *CommonAWSCategoryParams) *NullableCommonAWSCategoryParams {
	return &NullableCommonAWSCategoryParams{value: val, isSet: true}
}

func (v NullableCommonAWSCategoryParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonAWSCategoryParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


