/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateOrUpdateDataTieringTaskRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateDataTieringTaskRequest{}

// CreateOrUpdateDataTieringTaskRequest Specifies the request to create or update a data tiering task.
type CreateOrUpdateDataTieringTaskRequest struct {
	AlertPolicy *ProtectionGroupAlertingPolicy `json:"alertPolicy,omitempty"`
	// Specifies a description of the data tiering task.
	Description NullableString `json:"description,omitempty"`
	// Specifies the name of the data tiering task.
	Name NullableString `json:"name"`
	Schedule *DataTieringSchedule `json:"schedule,omitempty"`
	Source *DataTieringSource `json:"source,omitempty"`
	Target NullableDataTieringTarget `json:"target,omitempty"`
	// Type of data tiering task. 'Downtier' indicates downtiering task. 'Uptier' indicates uptiering task.
	Type NullableString `json:"type"`
	DowntieringPolicy *DowntieringPolicy `json:"downtieringPolicy,omitempty"`
	UptieringPolicy *UptieringPolicy `json:"uptieringPolicy,omitempty"`
}

type _CreateOrUpdateDataTieringTaskRequest CreateOrUpdateDataTieringTaskRequest

// NewCreateOrUpdateDataTieringTaskRequest instantiates a new CreateOrUpdateDataTieringTaskRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateDataTieringTaskRequest(name NullableString, type_ NullableString) *CreateOrUpdateDataTieringTaskRequest {
	this := CreateOrUpdateDataTieringTaskRequest{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewCreateOrUpdateDataTieringTaskRequestWithDefaults instantiates a new CreateOrUpdateDataTieringTaskRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateDataTieringTaskRequestWithDefaults() *CreateOrUpdateDataTieringTaskRequest {
	this := CreateOrUpdateDataTieringTaskRequest{}
	return &this
}

// GetAlertPolicy returns the AlertPolicy field value if set, zero value otherwise.
func (o *CreateOrUpdateDataTieringTaskRequest) GetAlertPolicy() ProtectionGroupAlertingPolicy {
	if o == nil || IsNil(o.AlertPolicy) {
		var ret ProtectionGroupAlertingPolicy
		return ret
	}
	return *o.AlertPolicy
}

// GetAlertPolicyOk returns a tuple with the AlertPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDataTieringTaskRequest) GetAlertPolicyOk() (*ProtectionGroupAlertingPolicy, bool) {
	if o == nil || IsNil(o.AlertPolicy) {
		return nil, false
	}
	return o.AlertPolicy, true
}

// HasAlertPolicy returns a boolean if a field has been set.
func (o *CreateOrUpdateDataTieringTaskRequest) HasAlertPolicy() bool {
	if o != nil && !IsNil(o.AlertPolicy) {
		return true
	}

	return false
}

// SetAlertPolicy gets a reference to the given ProtectionGroupAlertingPolicy and assigns it to the AlertPolicy field.
func (o *CreateOrUpdateDataTieringTaskRequest) SetAlertPolicy(v ProtectionGroupAlertingPolicy) {
	o.AlertPolicy = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateDataTieringTaskRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateDataTieringTaskRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateOrUpdateDataTieringTaskRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateOrUpdateDataTieringTaskRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateOrUpdateDataTieringTaskRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateOrUpdateDataTieringTaskRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateOrUpdateDataTieringTaskRequest) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateDataTieringTaskRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *CreateOrUpdateDataTieringTaskRequest) SetName(v string) {
	o.Name.Set(&v)
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *CreateOrUpdateDataTieringTaskRequest) GetSchedule() DataTieringSchedule {
	if o == nil || IsNil(o.Schedule) {
		var ret DataTieringSchedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDataTieringTaskRequest) GetScheduleOk() (*DataTieringSchedule, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *CreateOrUpdateDataTieringTaskRequest) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given DataTieringSchedule and assigns it to the Schedule field.
func (o *CreateOrUpdateDataTieringTaskRequest) SetSchedule(v DataTieringSchedule) {
	o.Schedule = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *CreateOrUpdateDataTieringTaskRequest) GetSource() DataTieringSource {
	if o == nil || IsNil(o.Source) {
		var ret DataTieringSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDataTieringTaskRequest) GetSourceOk() (*DataTieringSource, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *CreateOrUpdateDataTieringTaskRequest) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given DataTieringSource and assigns it to the Source field.
func (o *CreateOrUpdateDataTieringTaskRequest) SetSource(v DataTieringSource) {
	o.Source = &v
}

// GetTarget returns the Target field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateDataTieringTaskRequest) GetTarget() DataTieringTarget {
	if o == nil || IsNil(o.Target.Get()) {
		var ret DataTieringTarget
		return ret
	}
	return *o.Target.Get()
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateDataTieringTaskRequest) GetTargetOk() (*DataTieringTarget, bool) {
	if o == nil {
		return nil, false
	}
	return o.Target.Get(), o.Target.IsSet()
}

// HasTarget returns a boolean if a field has been set.
func (o *CreateOrUpdateDataTieringTaskRequest) HasTarget() bool {
	if o != nil && o.Target.IsSet() {
		return true
	}

	return false
}

// SetTarget gets a reference to the given NullableDataTieringTarget and assigns it to the Target field.
func (o *CreateOrUpdateDataTieringTaskRequest) SetTarget(v DataTieringTarget) {
	o.Target.Set(&v)
}
// SetTargetNil sets the value for Target to be an explicit nil
func (o *CreateOrUpdateDataTieringTaskRequest) SetTargetNil() {
	o.Target.Set(nil)
}

// UnsetTarget ensures that no value is present for Target, not even an explicit nil
func (o *CreateOrUpdateDataTieringTaskRequest) UnsetTarget() {
	o.Target.Unset()
}

// GetType returns the Type field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateOrUpdateDataTieringTaskRequest) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}

	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateDataTieringTaskRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// SetType sets field value
func (o *CreateOrUpdateDataTieringTaskRequest) SetType(v string) {
	o.Type.Set(&v)
}

// GetDowntieringPolicy returns the DowntieringPolicy field value if set, zero value otherwise.
func (o *CreateOrUpdateDataTieringTaskRequest) GetDowntieringPolicy() DowntieringPolicy {
	if o == nil || IsNil(o.DowntieringPolicy) {
		var ret DowntieringPolicy
		return ret
	}
	return *o.DowntieringPolicy
}

// GetDowntieringPolicyOk returns a tuple with the DowntieringPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDataTieringTaskRequest) GetDowntieringPolicyOk() (*DowntieringPolicy, bool) {
	if o == nil || IsNil(o.DowntieringPolicy) {
		return nil, false
	}
	return o.DowntieringPolicy, true
}

// HasDowntieringPolicy returns a boolean if a field has been set.
func (o *CreateOrUpdateDataTieringTaskRequest) HasDowntieringPolicy() bool {
	if o != nil && !IsNil(o.DowntieringPolicy) {
		return true
	}

	return false
}

// SetDowntieringPolicy gets a reference to the given DowntieringPolicy and assigns it to the DowntieringPolicy field.
func (o *CreateOrUpdateDataTieringTaskRequest) SetDowntieringPolicy(v DowntieringPolicy) {
	o.DowntieringPolicy = &v
}

// GetUptieringPolicy returns the UptieringPolicy field value if set, zero value otherwise.
func (o *CreateOrUpdateDataTieringTaskRequest) GetUptieringPolicy() UptieringPolicy {
	if o == nil || IsNil(o.UptieringPolicy) {
		var ret UptieringPolicy
		return ret
	}
	return *o.UptieringPolicy
}

// GetUptieringPolicyOk returns a tuple with the UptieringPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDataTieringTaskRequest) GetUptieringPolicyOk() (*UptieringPolicy, bool) {
	if o == nil || IsNil(o.UptieringPolicy) {
		return nil, false
	}
	return o.UptieringPolicy, true
}

// HasUptieringPolicy returns a boolean if a field has been set.
func (o *CreateOrUpdateDataTieringTaskRequest) HasUptieringPolicy() bool {
	if o != nil && !IsNil(o.UptieringPolicy) {
		return true
	}

	return false
}

// SetUptieringPolicy gets a reference to the given UptieringPolicy and assigns it to the UptieringPolicy field.
func (o *CreateOrUpdateDataTieringTaskRequest) SetUptieringPolicy(v UptieringPolicy) {
	o.UptieringPolicy = &v
}

func (o CreateOrUpdateDataTieringTaskRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateDataTieringTaskRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertPolicy) {
		toSerialize["alertPolicy"] = o.AlertPolicy
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["name"] = o.Name.Get()
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if o.Target.IsSet() {
		toSerialize["target"] = o.Target.Get()
	}
	toSerialize["type"] = o.Type.Get()
	if !IsNil(o.DowntieringPolicy) {
		toSerialize["downtieringPolicy"] = o.DowntieringPolicy
	}
	if !IsNil(o.UptieringPolicy) {
		toSerialize["uptieringPolicy"] = o.UptieringPolicy
	}
	return toSerialize, nil
}

func (o *CreateOrUpdateDataTieringTaskRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrUpdateDataTieringTaskRequest := _CreateOrUpdateDataTieringTaskRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrUpdateDataTieringTaskRequest)

	if err != nil {
		return err
	}

	*o = CreateOrUpdateDataTieringTaskRequest(varCreateOrUpdateDataTieringTaskRequest)

	return err
}

type NullableCreateOrUpdateDataTieringTaskRequest struct {
	value *CreateOrUpdateDataTieringTaskRequest
	isSet bool
}

func (v NullableCreateOrUpdateDataTieringTaskRequest) Get() *CreateOrUpdateDataTieringTaskRequest {
	return v.value
}

func (v *NullableCreateOrUpdateDataTieringTaskRequest) Set(val *CreateOrUpdateDataTieringTaskRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateDataTieringTaskRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateDataTieringTaskRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateDataTieringTaskRequest(val *CreateOrUpdateDataTieringTaskRequest) *NullableCreateOrUpdateDataTieringTaskRequest {
	return &NullableCreateOrUpdateDataTieringTaskRequest{value: val, isSet: true}
}

func (v NullableCreateOrUpdateDataTieringTaskRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateDataTieringTaskRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


