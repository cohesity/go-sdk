/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CreateEmailOtpRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEmailOtpRequestBody{}

// CreateEmailOtpRequestBody Specifies user session request parameters
type CreateEmailOtpRequestBody struct {
	// Specifies the domain the user is logging in to. For a local user the domain is LOCAL. For LDAP/AD user, the domain will map to a LDAP connection string. A user is uniquely identified by a combination of username and domain. LOCAL is the default domain. 
	Domain NullableString `json:"domain,omitempty"`
	// Specifies the password of the Cohesity user
	Password NullableString `json:"password,omitempty"`
	// Specifies the login name of the Cohesity user
	Username NullableString `json:"username,omitempty"`
}

// NewCreateEmailOtpRequestBody instantiates a new CreateEmailOtpRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEmailOtpRequestBody() *CreateEmailOtpRequestBody {
	this := CreateEmailOtpRequestBody{}
	return &this
}

// NewCreateEmailOtpRequestBodyWithDefaults instantiates a new CreateEmailOtpRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEmailOtpRequestBodyWithDefaults() *CreateEmailOtpRequestBody {
	this := CreateEmailOtpRequestBody{}
	return &this
}

// GetDomain returns the Domain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEmailOtpRequestBody) GetDomain() string {
	if o == nil || IsNil(o.Domain.Get()) {
		var ret string
		return ret
	}
	return *o.Domain.Get()
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEmailOtpRequestBody) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Domain.Get(), o.Domain.IsSet()
}

// HasDomain returns a boolean if a field has been set.
func (o *CreateEmailOtpRequestBody) HasDomain() bool {
	if o != nil && o.Domain.IsSet() {
		return true
	}

	return false
}

// SetDomain gets a reference to the given NullableString and assigns it to the Domain field.
func (o *CreateEmailOtpRequestBody) SetDomain(v string) {
	o.Domain.Set(&v)
}
// SetDomainNil sets the value for Domain to be an explicit nil
func (o *CreateEmailOtpRequestBody) SetDomainNil() {
	o.Domain.Set(nil)
}

// UnsetDomain ensures that no value is present for Domain, not even an explicit nil
func (o *CreateEmailOtpRequestBody) UnsetDomain() {
	o.Domain.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEmailOtpRequestBody) GetPassword() string {
	if o == nil || IsNil(o.Password.Get()) {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEmailOtpRequestBody) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateEmailOtpRequestBody) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *CreateEmailOtpRequestBody) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *CreateEmailOtpRequestBody) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *CreateEmailOtpRequestBody) UnsetPassword() {
	o.Password.Unset()
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEmailOtpRequestBody) GetUsername() string {
	if o == nil || IsNil(o.Username.Get()) {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEmailOtpRequestBody) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *CreateEmailOtpRequestBody) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *CreateEmailOtpRequestBody) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *CreateEmailOtpRequestBody) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *CreateEmailOtpRequestBody) UnsetUsername() {
	o.Username.Unset()
}

func (o CreateEmailOtpRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEmailOtpRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Domain.IsSet() {
		toSerialize["domain"] = o.Domain.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	return toSerialize, nil
}

type NullableCreateEmailOtpRequestBody struct {
	value *CreateEmailOtpRequestBody
	isSet bool
}

func (v NullableCreateEmailOtpRequestBody) Get() *CreateEmailOtpRequestBody {
	return v.value
}

func (v *NullableCreateEmailOtpRequestBody) Set(val *CreateEmailOtpRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEmailOtpRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEmailOtpRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEmailOtpRequestBody(val *CreateEmailOtpRequestBody) *NullableCreateEmailOtpRequestBody {
	return &NullableCreateEmailOtpRequestBody{value: val, isSet: true}
}

func (v NullableCreateEmailOtpRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEmailOtpRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


