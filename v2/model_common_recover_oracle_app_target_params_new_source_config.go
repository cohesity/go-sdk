/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CommonRecoverOracleAppTargetParamsNewSourceConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonRecoverOracleAppTargetParamsNewSourceConfig{}

// CommonRecoverOracleAppTargetParamsNewSourceConfig Specifies the destination Source configuration parameters where the databases will be recovered. This is mandatory if recoverToNewSource is set to true.
type CommonRecoverOracleAppTargetParamsNewSourceConfig struct {
	Host NullableRecoverOracleAppNewSourceConfigHost `json:"host"`
	RecoverDatabaseParams NullableRecoverOracleAppNewSourceConfigRecoverDatabaseParams `json:"recoverDatabaseParams,omitempty"`
	RecoverViewParams NullableRecoverOracleAppNewSourceConfigRecoverViewParams `json:"recoverViewParams,omitempty"`
	// Specifies if recovery target is a database or a view.
	RecoveryTarget NullableString `json:"recoveryTarget,omitempty"`
}

type _CommonRecoverOracleAppTargetParamsNewSourceConfig CommonRecoverOracleAppTargetParamsNewSourceConfig

// NewCommonRecoverOracleAppTargetParamsNewSourceConfig instantiates a new CommonRecoverOracleAppTargetParamsNewSourceConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonRecoverOracleAppTargetParamsNewSourceConfig(host NullableRecoverOracleAppNewSourceConfigHost) *CommonRecoverOracleAppTargetParamsNewSourceConfig {
	this := CommonRecoverOracleAppTargetParamsNewSourceConfig{}
	this.Host = host
	return &this
}

// NewCommonRecoverOracleAppTargetParamsNewSourceConfigWithDefaults instantiates a new CommonRecoverOracleAppTargetParamsNewSourceConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonRecoverOracleAppTargetParamsNewSourceConfigWithDefaults() *CommonRecoverOracleAppTargetParamsNewSourceConfig {
	this := CommonRecoverOracleAppTargetParamsNewSourceConfig{}
	return &this
}

// GetHost returns the Host field value
// If the value is explicit nil, the zero value for RecoverOracleAppNewSourceConfigHost will be returned
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) GetHost() RecoverOracleAppNewSourceConfigHost {
	if o == nil || o.Host.Get() == nil {
		var ret RecoverOracleAppNewSourceConfigHost
		return ret
	}

	return *o.Host.Get()
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) GetHostOk() (*RecoverOracleAppNewSourceConfigHost, bool) {
	if o == nil {
		return nil, false
	}
	return o.Host.Get(), o.Host.IsSet()
}

// SetHost sets field value
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) SetHost(v RecoverOracleAppNewSourceConfigHost) {
	o.Host.Set(&v)
}

// GetRecoverDatabaseParams returns the RecoverDatabaseParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) GetRecoverDatabaseParams() RecoverOracleAppNewSourceConfigRecoverDatabaseParams {
	if o == nil || IsNil(o.RecoverDatabaseParams.Get()) {
		var ret RecoverOracleAppNewSourceConfigRecoverDatabaseParams
		return ret
	}
	return *o.RecoverDatabaseParams.Get()
}

// GetRecoverDatabaseParamsOk returns a tuple with the RecoverDatabaseParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) GetRecoverDatabaseParamsOk() (*RecoverOracleAppNewSourceConfigRecoverDatabaseParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecoverDatabaseParams.Get(), o.RecoverDatabaseParams.IsSet()
}

// HasRecoverDatabaseParams returns a boolean if a field has been set.
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) HasRecoverDatabaseParams() bool {
	if o != nil && o.RecoverDatabaseParams.IsSet() {
		return true
	}

	return false
}

// SetRecoverDatabaseParams gets a reference to the given NullableRecoverOracleAppNewSourceConfigRecoverDatabaseParams and assigns it to the RecoverDatabaseParams field.
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) SetRecoverDatabaseParams(v RecoverOracleAppNewSourceConfigRecoverDatabaseParams) {
	o.RecoverDatabaseParams.Set(&v)
}
// SetRecoverDatabaseParamsNil sets the value for RecoverDatabaseParams to be an explicit nil
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) SetRecoverDatabaseParamsNil() {
	o.RecoverDatabaseParams.Set(nil)
}

// UnsetRecoverDatabaseParams ensures that no value is present for RecoverDatabaseParams, not even an explicit nil
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) UnsetRecoverDatabaseParams() {
	o.RecoverDatabaseParams.Unset()
}

// GetRecoverViewParams returns the RecoverViewParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) GetRecoverViewParams() RecoverOracleAppNewSourceConfigRecoverViewParams {
	if o == nil || IsNil(o.RecoverViewParams.Get()) {
		var ret RecoverOracleAppNewSourceConfigRecoverViewParams
		return ret
	}
	return *o.RecoverViewParams.Get()
}

// GetRecoverViewParamsOk returns a tuple with the RecoverViewParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) GetRecoverViewParamsOk() (*RecoverOracleAppNewSourceConfigRecoverViewParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecoverViewParams.Get(), o.RecoverViewParams.IsSet()
}

// HasRecoverViewParams returns a boolean if a field has been set.
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) HasRecoverViewParams() bool {
	if o != nil && o.RecoverViewParams.IsSet() {
		return true
	}

	return false
}

// SetRecoverViewParams gets a reference to the given NullableRecoverOracleAppNewSourceConfigRecoverViewParams and assigns it to the RecoverViewParams field.
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) SetRecoverViewParams(v RecoverOracleAppNewSourceConfigRecoverViewParams) {
	o.RecoverViewParams.Set(&v)
}
// SetRecoverViewParamsNil sets the value for RecoverViewParams to be an explicit nil
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) SetRecoverViewParamsNil() {
	o.RecoverViewParams.Set(nil)
}

// UnsetRecoverViewParams ensures that no value is present for RecoverViewParams, not even an explicit nil
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) UnsetRecoverViewParams() {
	o.RecoverViewParams.Unset()
}

// GetRecoveryTarget returns the RecoveryTarget field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) GetRecoveryTarget() string {
	if o == nil || IsNil(o.RecoveryTarget.Get()) {
		var ret string
		return ret
	}
	return *o.RecoveryTarget.Get()
}

// GetRecoveryTargetOk returns a tuple with the RecoveryTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) GetRecoveryTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecoveryTarget.Get(), o.RecoveryTarget.IsSet()
}

// HasRecoveryTarget returns a boolean if a field has been set.
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) HasRecoveryTarget() bool {
	if o != nil && o.RecoveryTarget.IsSet() {
		return true
	}

	return false
}

// SetRecoveryTarget gets a reference to the given NullableString and assigns it to the RecoveryTarget field.
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) SetRecoveryTarget(v string) {
	o.RecoveryTarget.Set(&v)
}
// SetRecoveryTargetNil sets the value for RecoveryTarget to be an explicit nil
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) SetRecoveryTargetNil() {
	o.RecoveryTarget.Set(nil)
}

// UnsetRecoveryTarget ensures that no value is present for RecoveryTarget, not even an explicit nil
func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) UnsetRecoveryTarget() {
	o.RecoveryTarget.Unset()
}

func (o CommonRecoverOracleAppTargetParamsNewSourceConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonRecoverOracleAppTargetParamsNewSourceConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["host"] = o.Host.Get()
	if o.RecoverDatabaseParams.IsSet() {
		toSerialize["recoverDatabaseParams"] = o.RecoverDatabaseParams.Get()
	}
	if o.RecoverViewParams.IsSet() {
		toSerialize["recoverViewParams"] = o.RecoverViewParams.Get()
	}
	if o.RecoveryTarget.IsSet() {
		toSerialize["recoveryTarget"] = o.RecoveryTarget.Get()
	}
	return toSerialize, nil
}

func (o *CommonRecoverOracleAppTargetParamsNewSourceConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"host",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCommonRecoverOracleAppTargetParamsNewSourceConfig := _CommonRecoverOracleAppTargetParamsNewSourceConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCommonRecoverOracleAppTargetParamsNewSourceConfig)

	if err != nil {
		return err
	}

	*o = CommonRecoverOracleAppTargetParamsNewSourceConfig(varCommonRecoverOracleAppTargetParamsNewSourceConfig)

	return err
}

type NullableCommonRecoverOracleAppTargetParamsNewSourceConfig struct {
	value *CommonRecoverOracleAppTargetParamsNewSourceConfig
	isSet bool
}

func (v NullableCommonRecoverOracleAppTargetParamsNewSourceConfig) Get() *CommonRecoverOracleAppTargetParamsNewSourceConfig {
	return v.value
}

func (v *NullableCommonRecoverOracleAppTargetParamsNewSourceConfig) Set(val *CommonRecoverOracleAppTargetParamsNewSourceConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonRecoverOracleAppTargetParamsNewSourceConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonRecoverOracleAppTargetParamsNewSourceConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonRecoverOracleAppTargetParamsNewSourceConfig(val *CommonRecoverOracleAppTargetParamsNewSourceConfig) *NullableCommonRecoverOracleAppTargetParamsNewSourceConfig {
	return &NullableCommonRecoverOracleAppTargetParamsNewSourceConfig{value: val, isSet: true}
}

func (v NullableCommonRecoverOracleAppTargetParamsNewSourceConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonRecoverOracleAppTargetParamsNewSourceConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


