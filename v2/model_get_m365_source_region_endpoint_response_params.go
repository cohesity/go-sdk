/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the GetM365SourceRegionEndpointResponseParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetM365SourceRegionEndpointResponseParams{}

// GetM365SourceRegionEndpointResponseParams Specifies the response parameters containing region and various endpoint for Microsoft365 source.
type GetM365SourceRegionEndpointResponseParams struct {
	// Specifies the device authorization endpoint to be used for Microsoft graph calls.
	DeviceAuthEndpoint NullableString `json:"deviceAuthEndpoint,omitempty"`
	// Specifies the Microsoft graph host url to be used for graph calls.
	GraphEndpoint NullableString `json:"graphEndpoint,omitempty"`
	// Specifies the scope of the region. For eg NA for North America or AS for Australia. For Azure Gov cloud it can be USG or USGov.
	Region NullableString `json:"region,omitempty"`
	// Specifies the scope of the sub region.
	SubRegion NullableString `json:"subRegion,omitempty"`
	// Specifies the tenant region for the given domain. This can be either Default(Commercial), GCC, GCC High or DoD. This is different from the Geo location which is represented by the region parameter.
	TenantRegion NullableString `json:"tenantRegion,omitempty"`
	// Specifies the token endpoint of the Microsoft365 source.
	TokenEndpoint NullableString `json:"tokenEndpoint,omitempty"`
}

// NewGetM365SourceRegionEndpointResponseParams instantiates a new GetM365SourceRegionEndpointResponseParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetM365SourceRegionEndpointResponseParams() *GetM365SourceRegionEndpointResponseParams {
	this := GetM365SourceRegionEndpointResponseParams{}
	return &this
}

// NewGetM365SourceRegionEndpointResponseParamsWithDefaults instantiates a new GetM365SourceRegionEndpointResponseParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetM365SourceRegionEndpointResponseParamsWithDefaults() *GetM365SourceRegionEndpointResponseParams {
	this := GetM365SourceRegionEndpointResponseParams{}
	return &this
}

// GetDeviceAuthEndpoint returns the DeviceAuthEndpoint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetM365SourceRegionEndpointResponseParams) GetDeviceAuthEndpoint() string {
	if o == nil || IsNil(o.DeviceAuthEndpoint.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceAuthEndpoint.Get()
}

// GetDeviceAuthEndpointOk returns a tuple with the DeviceAuthEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetM365SourceRegionEndpointResponseParams) GetDeviceAuthEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceAuthEndpoint.Get(), o.DeviceAuthEndpoint.IsSet()
}

// HasDeviceAuthEndpoint returns a boolean if a field has been set.
func (o *GetM365SourceRegionEndpointResponseParams) HasDeviceAuthEndpoint() bool {
	if o != nil && o.DeviceAuthEndpoint.IsSet() {
		return true
	}

	return false
}

// SetDeviceAuthEndpoint gets a reference to the given NullableString and assigns it to the DeviceAuthEndpoint field.
func (o *GetM365SourceRegionEndpointResponseParams) SetDeviceAuthEndpoint(v string) {
	o.DeviceAuthEndpoint.Set(&v)
}
// SetDeviceAuthEndpointNil sets the value for DeviceAuthEndpoint to be an explicit nil
func (o *GetM365SourceRegionEndpointResponseParams) SetDeviceAuthEndpointNil() {
	o.DeviceAuthEndpoint.Set(nil)
}

// UnsetDeviceAuthEndpoint ensures that no value is present for DeviceAuthEndpoint, not even an explicit nil
func (o *GetM365SourceRegionEndpointResponseParams) UnsetDeviceAuthEndpoint() {
	o.DeviceAuthEndpoint.Unset()
}

// GetGraphEndpoint returns the GraphEndpoint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetM365SourceRegionEndpointResponseParams) GetGraphEndpoint() string {
	if o == nil || IsNil(o.GraphEndpoint.Get()) {
		var ret string
		return ret
	}
	return *o.GraphEndpoint.Get()
}

// GetGraphEndpointOk returns a tuple with the GraphEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetM365SourceRegionEndpointResponseParams) GetGraphEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GraphEndpoint.Get(), o.GraphEndpoint.IsSet()
}

// HasGraphEndpoint returns a boolean if a field has been set.
func (o *GetM365SourceRegionEndpointResponseParams) HasGraphEndpoint() bool {
	if o != nil && o.GraphEndpoint.IsSet() {
		return true
	}

	return false
}

// SetGraphEndpoint gets a reference to the given NullableString and assigns it to the GraphEndpoint field.
func (o *GetM365SourceRegionEndpointResponseParams) SetGraphEndpoint(v string) {
	o.GraphEndpoint.Set(&v)
}
// SetGraphEndpointNil sets the value for GraphEndpoint to be an explicit nil
func (o *GetM365SourceRegionEndpointResponseParams) SetGraphEndpointNil() {
	o.GraphEndpoint.Set(nil)
}

// UnsetGraphEndpoint ensures that no value is present for GraphEndpoint, not even an explicit nil
func (o *GetM365SourceRegionEndpointResponseParams) UnsetGraphEndpoint() {
	o.GraphEndpoint.Unset()
}

// GetRegion returns the Region field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetM365SourceRegionEndpointResponseParams) GetRegion() string {
	if o == nil || IsNil(o.Region.Get()) {
		var ret string
		return ret
	}
	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetM365SourceRegionEndpointResponseParams) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// HasRegion returns a boolean if a field has been set.
func (o *GetM365SourceRegionEndpointResponseParams) HasRegion() bool {
	if o != nil && o.Region.IsSet() {
		return true
	}

	return false
}

// SetRegion gets a reference to the given NullableString and assigns it to the Region field.
func (o *GetM365SourceRegionEndpointResponseParams) SetRegion(v string) {
	o.Region.Set(&v)
}
// SetRegionNil sets the value for Region to be an explicit nil
func (o *GetM365SourceRegionEndpointResponseParams) SetRegionNil() {
	o.Region.Set(nil)
}

// UnsetRegion ensures that no value is present for Region, not even an explicit nil
func (o *GetM365SourceRegionEndpointResponseParams) UnsetRegion() {
	o.Region.Unset()
}

// GetSubRegion returns the SubRegion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetM365SourceRegionEndpointResponseParams) GetSubRegion() string {
	if o == nil || IsNil(o.SubRegion.Get()) {
		var ret string
		return ret
	}
	return *o.SubRegion.Get()
}

// GetSubRegionOk returns a tuple with the SubRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetM365SourceRegionEndpointResponseParams) GetSubRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubRegion.Get(), o.SubRegion.IsSet()
}

// HasSubRegion returns a boolean if a field has been set.
func (o *GetM365SourceRegionEndpointResponseParams) HasSubRegion() bool {
	if o != nil && o.SubRegion.IsSet() {
		return true
	}

	return false
}

// SetSubRegion gets a reference to the given NullableString and assigns it to the SubRegion field.
func (o *GetM365SourceRegionEndpointResponseParams) SetSubRegion(v string) {
	o.SubRegion.Set(&v)
}
// SetSubRegionNil sets the value for SubRegion to be an explicit nil
func (o *GetM365SourceRegionEndpointResponseParams) SetSubRegionNil() {
	o.SubRegion.Set(nil)
}

// UnsetSubRegion ensures that no value is present for SubRegion, not even an explicit nil
func (o *GetM365SourceRegionEndpointResponseParams) UnsetSubRegion() {
	o.SubRegion.Unset()
}

// GetTenantRegion returns the TenantRegion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetM365SourceRegionEndpointResponseParams) GetTenantRegion() string {
	if o == nil || IsNil(o.TenantRegion.Get()) {
		var ret string
		return ret
	}
	return *o.TenantRegion.Get()
}

// GetTenantRegionOk returns a tuple with the TenantRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetM365SourceRegionEndpointResponseParams) GetTenantRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantRegion.Get(), o.TenantRegion.IsSet()
}

// HasTenantRegion returns a boolean if a field has been set.
func (o *GetM365SourceRegionEndpointResponseParams) HasTenantRegion() bool {
	if o != nil && o.TenantRegion.IsSet() {
		return true
	}

	return false
}

// SetTenantRegion gets a reference to the given NullableString and assigns it to the TenantRegion field.
func (o *GetM365SourceRegionEndpointResponseParams) SetTenantRegion(v string) {
	o.TenantRegion.Set(&v)
}
// SetTenantRegionNil sets the value for TenantRegion to be an explicit nil
func (o *GetM365SourceRegionEndpointResponseParams) SetTenantRegionNil() {
	o.TenantRegion.Set(nil)
}

// UnsetTenantRegion ensures that no value is present for TenantRegion, not even an explicit nil
func (o *GetM365SourceRegionEndpointResponseParams) UnsetTenantRegion() {
	o.TenantRegion.Unset()
}

// GetTokenEndpoint returns the TokenEndpoint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetM365SourceRegionEndpointResponseParams) GetTokenEndpoint() string {
	if o == nil || IsNil(o.TokenEndpoint.Get()) {
		var ret string
		return ret
	}
	return *o.TokenEndpoint.Get()
}

// GetTokenEndpointOk returns a tuple with the TokenEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetM365SourceRegionEndpointResponseParams) GetTokenEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenEndpoint.Get(), o.TokenEndpoint.IsSet()
}

// HasTokenEndpoint returns a boolean if a field has been set.
func (o *GetM365SourceRegionEndpointResponseParams) HasTokenEndpoint() bool {
	if o != nil && o.TokenEndpoint.IsSet() {
		return true
	}

	return false
}

// SetTokenEndpoint gets a reference to the given NullableString and assigns it to the TokenEndpoint field.
func (o *GetM365SourceRegionEndpointResponseParams) SetTokenEndpoint(v string) {
	o.TokenEndpoint.Set(&v)
}
// SetTokenEndpointNil sets the value for TokenEndpoint to be an explicit nil
func (o *GetM365SourceRegionEndpointResponseParams) SetTokenEndpointNil() {
	o.TokenEndpoint.Set(nil)
}

// UnsetTokenEndpoint ensures that no value is present for TokenEndpoint, not even an explicit nil
func (o *GetM365SourceRegionEndpointResponseParams) UnsetTokenEndpoint() {
	o.TokenEndpoint.Unset()
}

func (o GetM365SourceRegionEndpointResponseParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetM365SourceRegionEndpointResponseParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceAuthEndpoint.IsSet() {
		toSerialize["deviceAuthEndpoint"] = o.DeviceAuthEndpoint.Get()
	}
	if o.GraphEndpoint.IsSet() {
		toSerialize["graphEndpoint"] = o.GraphEndpoint.Get()
	}
	if o.Region.IsSet() {
		toSerialize["region"] = o.Region.Get()
	}
	if o.SubRegion.IsSet() {
		toSerialize["subRegion"] = o.SubRegion.Get()
	}
	if o.TenantRegion.IsSet() {
		toSerialize["tenantRegion"] = o.TenantRegion.Get()
	}
	if o.TokenEndpoint.IsSet() {
		toSerialize["tokenEndpoint"] = o.TokenEndpoint.Get()
	}
	return toSerialize, nil
}

type NullableGetM365SourceRegionEndpointResponseParams struct {
	value *GetM365SourceRegionEndpointResponseParams
	isSet bool
}

func (v NullableGetM365SourceRegionEndpointResponseParams) Get() *GetM365SourceRegionEndpointResponseParams {
	return v.value
}

func (v *NullableGetM365SourceRegionEndpointResponseParams) Set(val *GetM365SourceRegionEndpointResponseParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGetM365SourceRegionEndpointResponseParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGetM365SourceRegionEndpointResponseParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetM365SourceRegionEndpointResponseParams(val *GetM365SourceRegionEndpointResponseParams) *NullableGetM365SourceRegionEndpointResponseParams {
	return &NullableGetM365SourceRegionEndpointResponseParams{value: val, isSet: true}
}

func (v NullableGetM365SourceRegionEndpointResponseParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetM365SourceRegionEndpointResponseParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


