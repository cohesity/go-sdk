/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the UserAPIKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserAPIKey{}

// UserAPIKey Specifies a user API key instance.
type UserAPIKey struct {
	// Specifies the user SID who created the API key.
	CreatedByUserSid NullableString `json:"createdByUserSid,omitempty"`
	// Specifies the time in milliseconds when the API key was created.
	CreatedTimeMsecs NullableInt64 `json:"createdTimeMsecs,omitempty"`
	// Specifies the time in milliseconds when the API key will expire. null signifies no-expiry.
	ExpiryTimeMsecs NullableInt64 `json:"expiryTimeMsecs,omitempty"`
	// Specifies the unique id of the API key.
	Id NullableString `json:"id,omitempty"`
	// Specifies if the API key is active.
	IsActive NullableBool `json:"isActive,omitempty"`
	// Specifies if the API key has expired.
	IsExpired NullableBool `json:"isExpired,omitempty"`
	// Specifies the time in milliseconds when the API key was last rotated.
	LastRotatedTimeMsecs NullableInt64 `json:"lastRotatedTimeMsecs,omitempty"`
	// Specifies the API key name.
	Name NullableString `json:"name,omitempty"`
	// Specifies the user who owns the API key.
	UserSid NullableString `json:"userSid,omitempty"`
}

// NewUserAPIKey instantiates a new UserAPIKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAPIKey() *UserAPIKey {
	this := UserAPIKey{}
	return &this
}

// NewUserAPIKeyWithDefaults instantiates a new UserAPIKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAPIKeyWithDefaults() *UserAPIKey {
	this := UserAPIKey{}
	return &this
}

// GetCreatedByUserSid returns the CreatedByUserSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserAPIKey) GetCreatedByUserSid() string {
	if o == nil || IsNil(o.CreatedByUserSid.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedByUserSid.Get()
}

// GetCreatedByUserSidOk returns a tuple with the CreatedByUserSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserAPIKey) GetCreatedByUserSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedByUserSid.Get(), o.CreatedByUserSid.IsSet()
}

// HasCreatedByUserSid returns a boolean if a field has been set.
func (o *UserAPIKey) HasCreatedByUserSid() bool {
	if o != nil && o.CreatedByUserSid.IsSet() {
		return true
	}

	return false
}

// SetCreatedByUserSid gets a reference to the given NullableString and assigns it to the CreatedByUserSid field.
func (o *UserAPIKey) SetCreatedByUserSid(v string) {
	o.CreatedByUserSid.Set(&v)
}
// SetCreatedByUserSidNil sets the value for CreatedByUserSid to be an explicit nil
func (o *UserAPIKey) SetCreatedByUserSidNil() {
	o.CreatedByUserSid.Set(nil)
}

// UnsetCreatedByUserSid ensures that no value is present for CreatedByUserSid, not even an explicit nil
func (o *UserAPIKey) UnsetCreatedByUserSid() {
	o.CreatedByUserSid.Unset()
}

// GetCreatedTimeMsecs returns the CreatedTimeMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserAPIKey) GetCreatedTimeMsecs() int64 {
	if o == nil || IsNil(o.CreatedTimeMsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.CreatedTimeMsecs.Get()
}

// GetCreatedTimeMsecsOk returns a tuple with the CreatedTimeMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserAPIKey) GetCreatedTimeMsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedTimeMsecs.Get(), o.CreatedTimeMsecs.IsSet()
}

// HasCreatedTimeMsecs returns a boolean if a field has been set.
func (o *UserAPIKey) HasCreatedTimeMsecs() bool {
	if o != nil && o.CreatedTimeMsecs.IsSet() {
		return true
	}

	return false
}

// SetCreatedTimeMsecs gets a reference to the given NullableInt64 and assigns it to the CreatedTimeMsecs field.
func (o *UserAPIKey) SetCreatedTimeMsecs(v int64) {
	o.CreatedTimeMsecs.Set(&v)
}
// SetCreatedTimeMsecsNil sets the value for CreatedTimeMsecs to be an explicit nil
func (o *UserAPIKey) SetCreatedTimeMsecsNil() {
	o.CreatedTimeMsecs.Set(nil)
}

// UnsetCreatedTimeMsecs ensures that no value is present for CreatedTimeMsecs, not even an explicit nil
func (o *UserAPIKey) UnsetCreatedTimeMsecs() {
	o.CreatedTimeMsecs.Unset()
}

// GetExpiryTimeMsecs returns the ExpiryTimeMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserAPIKey) GetExpiryTimeMsecs() int64 {
	if o == nil || IsNil(o.ExpiryTimeMsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.ExpiryTimeMsecs.Get()
}

// GetExpiryTimeMsecsOk returns a tuple with the ExpiryTimeMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserAPIKey) GetExpiryTimeMsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiryTimeMsecs.Get(), o.ExpiryTimeMsecs.IsSet()
}

// HasExpiryTimeMsecs returns a boolean if a field has been set.
func (o *UserAPIKey) HasExpiryTimeMsecs() bool {
	if o != nil && o.ExpiryTimeMsecs.IsSet() {
		return true
	}

	return false
}

// SetExpiryTimeMsecs gets a reference to the given NullableInt64 and assigns it to the ExpiryTimeMsecs field.
func (o *UserAPIKey) SetExpiryTimeMsecs(v int64) {
	o.ExpiryTimeMsecs.Set(&v)
}
// SetExpiryTimeMsecsNil sets the value for ExpiryTimeMsecs to be an explicit nil
func (o *UserAPIKey) SetExpiryTimeMsecsNil() {
	o.ExpiryTimeMsecs.Set(nil)
}

// UnsetExpiryTimeMsecs ensures that no value is present for ExpiryTimeMsecs, not even an explicit nil
func (o *UserAPIKey) UnsetExpiryTimeMsecs() {
	o.ExpiryTimeMsecs.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserAPIKey) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserAPIKey) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *UserAPIKey) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *UserAPIKey) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *UserAPIKey) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *UserAPIKey) UnsetId() {
	o.Id.Unset()
}

// GetIsActive returns the IsActive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserAPIKey) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive.Get()) {
		var ret bool
		return ret
	}
	return *o.IsActive.Get()
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserAPIKey) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsActive.Get(), o.IsActive.IsSet()
}

// HasIsActive returns a boolean if a field has been set.
func (o *UserAPIKey) HasIsActive() bool {
	if o != nil && o.IsActive.IsSet() {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given NullableBool and assigns it to the IsActive field.
func (o *UserAPIKey) SetIsActive(v bool) {
	o.IsActive.Set(&v)
}
// SetIsActiveNil sets the value for IsActive to be an explicit nil
func (o *UserAPIKey) SetIsActiveNil() {
	o.IsActive.Set(nil)
}

// UnsetIsActive ensures that no value is present for IsActive, not even an explicit nil
func (o *UserAPIKey) UnsetIsActive() {
	o.IsActive.Unset()
}

// GetIsExpired returns the IsExpired field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserAPIKey) GetIsExpired() bool {
	if o == nil || IsNil(o.IsExpired.Get()) {
		var ret bool
		return ret
	}
	return *o.IsExpired.Get()
}

// GetIsExpiredOk returns a tuple with the IsExpired field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserAPIKey) GetIsExpiredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsExpired.Get(), o.IsExpired.IsSet()
}

// HasIsExpired returns a boolean if a field has been set.
func (o *UserAPIKey) HasIsExpired() bool {
	if o != nil && o.IsExpired.IsSet() {
		return true
	}

	return false
}

// SetIsExpired gets a reference to the given NullableBool and assigns it to the IsExpired field.
func (o *UserAPIKey) SetIsExpired(v bool) {
	o.IsExpired.Set(&v)
}
// SetIsExpiredNil sets the value for IsExpired to be an explicit nil
func (o *UserAPIKey) SetIsExpiredNil() {
	o.IsExpired.Set(nil)
}

// UnsetIsExpired ensures that no value is present for IsExpired, not even an explicit nil
func (o *UserAPIKey) UnsetIsExpired() {
	o.IsExpired.Unset()
}

// GetLastRotatedTimeMsecs returns the LastRotatedTimeMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserAPIKey) GetLastRotatedTimeMsecs() int64 {
	if o == nil || IsNil(o.LastRotatedTimeMsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.LastRotatedTimeMsecs.Get()
}

// GetLastRotatedTimeMsecsOk returns a tuple with the LastRotatedTimeMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserAPIKey) GetLastRotatedTimeMsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastRotatedTimeMsecs.Get(), o.LastRotatedTimeMsecs.IsSet()
}

// HasLastRotatedTimeMsecs returns a boolean if a field has been set.
func (o *UserAPIKey) HasLastRotatedTimeMsecs() bool {
	if o != nil && o.LastRotatedTimeMsecs.IsSet() {
		return true
	}

	return false
}

// SetLastRotatedTimeMsecs gets a reference to the given NullableInt64 and assigns it to the LastRotatedTimeMsecs field.
func (o *UserAPIKey) SetLastRotatedTimeMsecs(v int64) {
	o.LastRotatedTimeMsecs.Set(&v)
}
// SetLastRotatedTimeMsecsNil sets the value for LastRotatedTimeMsecs to be an explicit nil
func (o *UserAPIKey) SetLastRotatedTimeMsecsNil() {
	o.LastRotatedTimeMsecs.Set(nil)
}

// UnsetLastRotatedTimeMsecs ensures that no value is present for LastRotatedTimeMsecs, not even an explicit nil
func (o *UserAPIKey) UnsetLastRotatedTimeMsecs() {
	o.LastRotatedTimeMsecs.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserAPIKey) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserAPIKey) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *UserAPIKey) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *UserAPIKey) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *UserAPIKey) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *UserAPIKey) UnsetName() {
	o.Name.Unset()
}

// GetUserSid returns the UserSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserAPIKey) GetUserSid() string {
	if o == nil || IsNil(o.UserSid.Get()) {
		var ret string
		return ret
	}
	return *o.UserSid.Get()
}

// GetUserSidOk returns a tuple with the UserSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserAPIKey) GetUserSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserSid.Get(), o.UserSid.IsSet()
}

// HasUserSid returns a boolean if a field has been set.
func (o *UserAPIKey) HasUserSid() bool {
	if o != nil && o.UserSid.IsSet() {
		return true
	}

	return false
}

// SetUserSid gets a reference to the given NullableString and assigns it to the UserSid field.
func (o *UserAPIKey) SetUserSid(v string) {
	o.UserSid.Set(&v)
}
// SetUserSidNil sets the value for UserSid to be an explicit nil
func (o *UserAPIKey) SetUserSidNil() {
	o.UserSid.Set(nil)
}

// UnsetUserSid ensures that no value is present for UserSid, not even an explicit nil
func (o *UserAPIKey) UnsetUserSid() {
	o.UserSid.Unset()
}

func (o UserAPIKey) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserAPIKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedByUserSid.IsSet() {
		toSerialize["createdByUserSid"] = o.CreatedByUserSid.Get()
	}
	if o.CreatedTimeMsecs.IsSet() {
		toSerialize["createdTimeMsecs"] = o.CreatedTimeMsecs.Get()
	}
	if o.ExpiryTimeMsecs.IsSet() {
		toSerialize["expiryTimeMsecs"] = o.ExpiryTimeMsecs.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.IsActive.IsSet() {
		toSerialize["isActive"] = o.IsActive.Get()
	}
	if o.IsExpired.IsSet() {
		toSerialize["isExpired"] = o.IsExpired.Get()
	}
	if o.LastRotatedTimeMsecs.IsSet() {
		toSerialize["lastRotatedTimeMsecs"] = o.LastRotatedTimeMsecs.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.UserSid.IsSet() {
		toSerialize["userSid"] = o.UserSid.Get()
	}
	return toSerialize, nil
}

type NullableUserAPIKey struct {
	value *UserAPIKey
	isSet bool
}

func (v NullableUserAPIKey) Get() *UserAPIKey {
	return v.value
}

func (v *NullableUserAPIKey) Set(val *UserAPIKey) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAPIKey) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAPIKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAPIKey(val *UserAPIKey) *NullableUserAPIKey {
	return &NullableUserAPIKey{value: val, isSet: true}
}

func (v NullableUserAPIKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAPIKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


