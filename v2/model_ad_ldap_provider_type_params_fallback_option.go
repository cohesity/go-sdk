/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AdLdapProviderTypeParamsFallbackOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdLdapProviderTypeParamsFallbackOption{}

// AdLdapProviderTypeParamsFallbackOption Specifies a fallback user id mapping param in case the primary config does not work.
type AdLdapProviderTypeParamsFallbackOption struct {
	FixedTypeParams NullableFallbackUserIdMappingParamsFixedTypeParams `json:"fixedTypeParams,omitempty"`
	// Specifies the type of the mapping.
	Type string `json:"type"`
}

type _AdLdapProviderTypeParamsFallbackOption AdLdapProviderTypeParamsFallbackOption

// NewAdLdapProviderTypeParamsFallbackOption instantiates a new AdLdapProviderTypeParamsFallbackOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdLdapProviderTypeParamsFallbackOption(type_ string) *AdLdapProviderTypeParamsFallbackOption {
	this := AdLdapProviderTypeParamsFallbackOption{}
	this.Type = type_
	return &this
}

// NewAdLdapProviderTypeParamsFallbackOptionWithDefaults instantiates a new AdLdapProviderTypeParamsFallbackOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdLdapProviderTypeParamsFallbackOptionWithDefaults() *AdLdapProviderTypeParamsFallbackOption {
	this := AdLdapProviderTypeParamsFallbackOption{}
	return &this
}

// GetFixedTypeParams returns the FixedTypeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdLdapProviderTypeParamsFallbackOption) GetFixedTypeParams() FallbackUserIdMappingParamsFixedTypeParams {
	if o == nil || IsNil(o.FixedTypeParams.Get()) {
		var ret FallbackUserIdMappingParamsFixedTypeParams
		return ret
	}
	return *o.FixedTypeParams.Get()
}

// GetFixedTypeParamsOk returns a tuple with the FixedTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdLdapProviderTypeParamsFallbackOption) GetFixedTypeParamsOk() (*FallbackUserIdMappingParamsFixedTypeParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.FixedTypeParams.Get(), o.FixedTypeParams.IsSet()
}

// HasFixedTypeParams returns a boolean if a field has been set.
func (o *AdLdapProviderTypeParamsFallbackOption) HasFixedTypeParams() bool {
	if o != nil && o.FixedTypeParams.IsSet() {
		return true
	}

	return false
}

// SetFixedTypeParams gets a reference to the given NullableFallbackUserIdMappingParamsFixedTypeParams and assigns it to the FixedTypeParams field.
func (o *AdLdapProviderTypeParamsFallbackOption) SetFixedTypeParams(v FallbackUserIdMappingParamsFixedTypeParams) {
	o.FixedTypeParams.Set(&v)
}
// SetFixedTypeParamsNil sets the value for FixedTypeParams to be an explicit nil
func (o *AdLdapProviderTypeParamsFallbackOption) SetFixedTypeParamsNil() {
	o.FixedTypeParams.Set(nil)
}

// UnsetFixedTypeParams ensures that no value is present for FixedTypeParams, not even an explicit nil
func (o *AdLdapProviderTypeParamsFallbackOption) UnsetFixedTypeParams() {
	o.FixedTypeParams.Unset()
}

// GetType returns the Type field value
func (o *AdLdapProviderTypeParamsFallbackOption) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AdLdapProviderTypeParamsFallbackOption) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AdLdapProviderTypeParamsFallbackOption) SetType(v string) {
	o.Type = v
}

func (o AdLdapProviderTypeParamsFallbackOption) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdLdapProviderTypeParamsFallbackOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FixedTypeParams.IsSet() {
		toSerialize["fixedTypeParams"] = o.FixedTypeParams.Get()
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *AdLdapProviderTypeParamsFallbackOption) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAdLdapProviderTypeParamsFallbackOption := _AdLdapProviderTypeParamsFallbackOption{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAdLdapProviderTypeParamsFallbackOption)

	if err != nil {
		return err
	}

	*o = AdLdapProviderTypeParamsFallbackOption(varAdLdapProviderTypeParamsFallbackOption)

	return err
}

type NullableAdLdapProviderTypeParamsFallbackOption struct {
	value *AdLdapProviderTypeParamsFallbackOption
	isSet bool
}

func (v NullableAdLdapProviderTypeParamsFallbackOption) Get() *AdLdapProviderTypeParamsFallbackOption {
	return v.value
}

func (v *NullableAdLdapProviderTypeParamsFallbackOption) Set(val *AdLdapProviderTypeParamsFallbackOption) {
	v.value = val
	v.isSet = true
}

func (v NullableAdLdapProviderTypeParamsFallbackOption) IsSet() bool {
	return v.isSet
}

func (v *NullableAdLdapProviderTypeParamsFallbackOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdLdapProviderTypeParamsFallbackOption(val *AdLdapProviderTypeParamsFallbackOption) *NullableAdLdapProviderTypeParamsFallbackOption {
	return &NullableAdLdapProviderTypeParamsFallbackOption{value: val, isSet: true}
}

func (v NullableAdLdapProviderTypeParamsFallbackOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdLdapProviderTypeParamsFallbackOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


