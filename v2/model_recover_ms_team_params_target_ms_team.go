/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the RecoverMsTeamParamsTargetMsTeam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecoverMsTeamParamsTargetMsTeam{}

// RecoverMsTeamParamsTargetMsTeam This field is deprecated. Use targetTeamNickName and targetTeamFullName instead.
type RecoverMsTeamParamsTargetMsTeam struct {
	// Specifies the id of the domain during alternate domain recovery.
	ParentSourceId NullableInt64 `json:"parentSourceId,omitempty"`
	// Specifies the selected existing target team info.
	TargetTeam NullableRecoveryObjectIdentifier `json:"targetTeam,omitempty"`
	TargetTeamsChannelParam *TargetMsTeamParamTargetTeamsChannelParam `json:"targetTeamsChannelParam,omitempty"`
}

// NewRecoverMsTeamParamsTargetMsTeam instantiates a new RecoverMsTeamParamsTargetMsTeam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverMsTeamParamsTargetMsTeam() *RecoverMsTeamParamsTargetMsTeam {
	this := RecoverMsTeamParamsTargetMsTeam{}
	return &this
}

// NewRecoverMsTeamParamsTargetMsTeamWithDefaults instantiates a new RecoverMsTeamParamsTargetMsTeam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverMsTeamParamsTargetMsTeamWithDefaults() *RecoverMsTeamParamsTargetMsTeam {
	this := RecoverMsTeamParamsTargetMsTeam{}
	return &this
}

// GetParentSourceId returns the ParentSourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverMsTeamParamsTargetMsTeam) GetParentSourceId() int64 {
	if o == nil || IsNil(o.ParentSourceId.Get()) {
		var ret int64
		return ret
	}
	return *o.ParentSourceId.Get()
}

// GetParentSourceIdOk returns a tuple with the ParentSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverMsTeamParamsTargetMsTeam) GetParentSourceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentSourceId.Get(), o.ParentSourceId.IsSet()
}

// HasParentSourceId returns a boolean if a field has been set.
func (o *RecoverMsTeamParamsTargetMsTeam) HasParentSourceId() bool {
	if o != nil && o.ParentSourceId.IsSet() {
		return true
	}

	return false
}

// SetParentSourceId gets a reference to the given NullableInt64 and assigns it to the ParentSourceId field.
func (o *RecoverMsTeamParamsTargetMsTeam) SetParentSourceId(v int64) {
	o.ParentSourceId.Set(&v)
}
// SetParentSourceIdNil sets the value for ParentSourceId to be an explicit nil
func (o *RecoverMsTeamParamsTargetMsTeam) SetParentSourceIdNil() {
	o.ParentSourceId.Set(nil)
}

// UnsetParentSourceId ensures that no value is present for ParentSourceId, not even an explicit nil
func (o *RecoverMsTeamParamsTargetMsTeam) UnsetParentSourceId() {
	o.ParentSourceId.Unset()
}

// GetTargetTeam returns the TargetTeam field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverMsTeamParamsTargetMsTeam) GetTargetTeam() RecoveryObjectIdentifier {
	if o == nil || IsNil(o.TargetTeam.Get()) {
		var ret RecoveryObjectIdentifier
		return ret
	}
	return *o.TargetTeam.Get()
}

// GetTargetTeamOk returns a tuple with the TargetTeam field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverMsTeamParamsTargetMsTeam) GetTargetTeamOk() (*RecoveryObjectIdentifier, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetTeam.Get(), o.TargetTeam.IsSet()
}

// HasTargetTeam returns a boolean if a field has been set.
func (o *RecoverMsTeamParamsTargetMsTeam) HasTargetTeam() bool {
	if o != nil && o.TargetTeam.IsSet() {
		return true
	}

	return false
}

// SetTargetTeam gets a reference to the given NullableRecoveryObjectIdentifier and assigns it to the TargetTeam field.
func (o *RecoverMsTeamParamsTargetMsTeam) SetTargetTeam(v RecoveryObjectIdentifier) {
	o.TargetTeam.Set(&v)
}
// SetTargetTeamNil sets the value for TargetTeam to be an explicit nil
func (o *RecoverMsTeamParamsTargetMsTeam) SetTargetTeamNil() {
	o.TargetTeam.Set(nil)
}

// UnsetTargetTeam ensures that no value is present for TargetTeam, not even an explicit nil
func (o *RecoverMsTeamParamsTargetMsTeam) UnsetTargetTeam() {
	o.TargetTeam.Unset()
}

// GetTargetTeamsChannelParam returns the TargetTeamsChannelParam field value if set, zero value otherwise.
func (o *RecoverMsTeamParamsTargetMsTeam) GetTargetTeamsChannelParam() TargetMsTeamParamTargetTeamsChannelParam {
	if o == nil || IsNil(o.TargetTeamsChannelParam) {
		var ret TargetMsTeamParamTargetTeamsChannelParam
		return ret
	}
	return *o.TargetTeamsChannelParam
}

// GetTargetTeamsChannelParamOk returns a tuple with the TargetTeamsChannelParam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverMsTeamParamsTargetMsTeam) GetTargetTeamsChannelParamOk() (*TargetMsTeamParamTargetTeamsChannelParam, bool) {
	if o == nil || IsNil(o.TargetTeamsChannelParam) {
		return nil, false
	}
	return o.TargetTeamsChannelParam, true
}

// HasTargetTeamsChannelParam returns a boolean if a field has been set.
func (o *RecoverMsTeamParamsTargetMsTeam) HasTargetTeamsChannelParam() bool {
	if o != nil && !IsNil(o.TargetTeamsChannelParam) {
		return true
	}

	return false
}

// SetTargetTeamsChannelParam gets a reference to the given TargetMsTeamParamTargetTeamsChannelParam and assigns it to the TargetTeamsChannelParam field.
func (o *RecoverMsTeamParamsTargetMsTeam) SetTargetTeamsChannelParam(v TargetMsTeamParamTargetTeamsChannelParam) {
	o.TargetTeamsChannelParam = &v
}

func (o RecoverMsTeamParamsTargetMsTeam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecoverMsTeamParamsTargetMsTeam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ParentSourceId.IsSet() {
		toSerialize["parentSourceId"] = o.ParentSourceId.Get()
	}
	if o.TargetTeam.IsSet() {
		toSerialize["targetTeam"] = o.TargetTeam.Get()
	}
	if !IsNil(o.TargetTeamsChannelParam) {
		toSerialize["targetTeamsChannelParam"] = o.TargetTeamsChannelParam
	}
	return toSerialize, nil
}

type NullableRecoverMsTeamParamsTargetMsTeam struct {
	value *RecoverMsTeamParamsTargetMsTeam
	isSet bool
}

func (v NullableRecoverMsTeamParamsTargetMsTeam) Get() *RecoverMsTeamParamsTargetMsTeam {
	return v.value
}

func (v *NullableRecoverMsTeamParamsTargetMsTeam) Set(val *RecoverMsTeamParamsTargetMsTeam) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverMsTeamParamsTargetMsTeam) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverMsTeamParamsTargetMsTeam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverMsTeamParamsTargetMsTeam(val *RecoverMsTeamParamsTargetMsTeam) *NullableRecoverMsTeamParamsTargetMsTeam {
	return &NullableRecoverMsTeamParamsTargetMsTeam{value: val, isSet: true}
}

func (v NullableRecoverMsTeamParamsTargetMsTeam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverMsTeamParamsTargetMsTeam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


