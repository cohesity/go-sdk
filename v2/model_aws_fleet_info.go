/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AwsFleetInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsFleetInfo{}

// AwsFleetInfo Specifies the params to add AWS specific fleet env info.
type AwsFleetInfo struct {
	// Specifies the IAM role used to create instances.
	IamRole NullableString `json:"iamRole"`
	// Specifies the Region of the CE cluster.
	Region NullableString `json:"region"`
	// Specifies the security group Id.
	SecurityGroupId NullableString `json:"securityGroupId"`
	// Specifies the Subnet of the CE cluster.
	SubnetId NullableString `json:"subnetId"`
	// Specifies the VPC of the CE cluster.
	VpcId NullableString `json:"vpcId"`
}

type _AwsFleetInfo AwsFleetInfo

// NewAwsFleetInfo instantiates a new AwsFleetInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsFleetInfo(iamRole NullableString, region NullableString, securityGroupId NullableString, subnetId NullableString, vpcId NullableString) *AwsFleetInfo {
	this := AwsFleetInfo{}
	this.IamRole = iamRole
	this.Region = region
	this.SecurityGroupId = securityGroupId
	this.SubnetId = subnetId
	this.VpcId = vpcId
	return &this
}

// NewAwsFleetInfoWithDefaults instantiates a new AwsFleetInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsFleetInfoWithDefaults() *AwsFleetInfo {
	this := AwsFleetInfo{}
	return &this
}

// GetIamRole returns the IamRole field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AwsFleetInfo) GetIamRole() string {
	if o == nil || o.IamRole.Get() == nil {
		var ret string
		return ret
	}

	return *o.IamRole.Get()
}

// GetIamRoleOk returns a tuple with the IamRole field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsFleetInfo) GetIamRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IamRole.Get(), o.IamRole.IsSet()
}

// SetIamRole sets field value
func (o *AwsFleetInfo) SetIamRole(v string) {
	o.IamRole.Set(&v)
}

// GetRegion returns the Region field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AwsFleetInfo) GetRegion() string {
	if o == nil || o.Region.Get() == nil {
		var ret string
		return ret
	}

	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsFleetInfo) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// SetRegion sets field value
func (o *AwsFleetInfo) SetRegion(v string) {
	o.Region.Set(&v)
}

// GetSecurityGroupId returns the SecurityGroupId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AwsFleetInfo) GetSecurityGroupId() string {
	if o == nil || o.SecurityGroupId.Get() == nil {
		var ret string
		return ret
	}

	return *o.SecurityGroupId.Get()
}

// GetSecurityGroupIdOk returns a tuple with the SecurityGroupId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsFleetInfo) GetSecurityGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecurityGroupId.Get(), o.SecurityGroupId.IsSet()
}

// SetSecurityGroupId sets field value
func (o *AwsFleetInfo) SetSecurityGroupId(v string) {
	o.SecurityGroupId.Set(&v)
}

// GetSubnetId returns the SubnetId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AwsFleetInfo) GetSubnetId() string {
	if o == nil || o.SubnetId.Get() == nil {
		var ret string
		return ret
	}

	return *o.SubnetId.Get()
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsFleetInfo) GetSubnetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubnetId.Get(), o.SubnetId.IsSet()
}

// SetSubnetId sets field value
func (o *AwsFleetInfo) SetSubnetId(v string) {
	o.SubnetId.Set(&v)
}

// GetVpcId returns the VpcId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AwsFleetInfo) GetVpcId() string {
	if o == nil || o.VpcId.Get() == nil {
		var ret string
		return ret
	}

	return *o.VpcId.Get()
}

// GetVpcIdOk returns a tuple with the VpcId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsFleetInfo) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpcId.Get(), o.VpcId.IsSet()
}

// SetVpcId sets field value
func (o *AwsFleetInfo) SetVpcId(v string) {
	o.VpcId.Set(&v)
}

func (o AwsFleetInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsFleetInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["iamRole"] = o.IamRole.Get()
	toSerialize["region"] = o.Region.Get()
	toSerialize["securityGroupId"] = o.SecurityGroupId.Get()
	toSerialize["subnetId"] = o.SubnetId.Get()
	toSerialize["vpcId"] = o.VpcId.Get()
	return toSerialize, nil
}

func (o *AwsFleetInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"iamRole",
		"region",
		"securityGroupId",
		"subnetId",
		"vpcId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAwsFleetInfo := _AwsFleetInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAwsFleetInfo)

	if err != nil {
		return err
	}

	*o = AwsFleetInfo(varAwsFleetInfo)

	return err
}

type NullableAwsFleetInfo struct {
	value *AwsFleetInfo
	isSet bool
}

func (v NullableAwsFleetInfo) Get() *AwsFleetInfo {
	return v.value
}

func (v *NullableAwsFleetInfo) Set(val *AwsFleetInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsFleetInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsFleetInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsFleetInfo(val *AwsFleetInfo) *NullableAwsFleetInfo {
	return &NullableAwsFleetInfo{value: val, isSet: true}
}

func (v NullableAwsFleetInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsFleetInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


