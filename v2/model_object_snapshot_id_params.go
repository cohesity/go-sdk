/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ObjectSnapshotIdParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectSnapshotIdParams{}

// ObjectSnapshotIdParams Params to fetch snapshot id for an object.
type ObjectSnapshotIdParams struct {
	// Specifies the protection group id.
	ProtectionGroupId NullableString `json:"protectionGroupId"`
	// Specifies the start time of the snapshot in micro seconds.
	RunStartTimeUsecs NullableInt64 `json:"runStartTimeUsecs,omitempty"`
	// Specifies the instance id of the snapshot.
	SnapshotJobInstanceId NullableInt64 `json:"snapshotJobInstanceId,omitempty"`
	// Specifies the source protection group id.
	SourceGroupId NullableString `json:"sourceGroupId,omitempty"`
	// Specifies the vault id.
	VaultId NullableInt64 `json:"vaultId,omitempty"`
}

type _ObjectSnapshotIdParams ObjectSnapshotIdParams

// NewObjectSnapshotIdParams instantiates a new ObjectSnapshotIdParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectSnapshotIdParams(protectionGroupId NullableString) *ObjectSnapshotIdParams {
	this := ObjectSnapshotIdParams{}
	this.ProtectionGroupId = protectionGroupId
	return &this
}

// NewObjectSnapshotIdParamsWithDefaults instantiates a new ObjectSnapshotIdParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectSnapshotIdParamsWithDefaults() *ObjectSnapshotIdParams {
	this := ObjectSnapshotIdParams{}
	return &this
}

// GetProtectionGroupId returns the ProtectionGroupId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ObjectSnapshotIdParams) GetProtectionGroupId() string {
	if o == nil || o.ProtectionGroupId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProtectionGroupId.Get()
}

// GetProtectionGroupIdOk returns a tuple with the ProtectionGroupId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotIdParams) GetProtectionGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProtectionGroupId.Get(), o.ProtectionGroupId.IsSet()
}

// SetProtectionGroupId sets field value
func (o *ObjectSnapshotIdParams) SetProtectionGroupId(v string) {
	o.ProtectionGroupId.Set(&v)
}

// GetRunStartTimeUsecs returns the RunStartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSnapshotIdParams) GetRunStartTimeUsecs() int64 {
	if o == nil || IsNil(o.RunStartTimeUsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.RunStartTimeUsecs.Get()
}

// GetRunStartTimeUsecsOk returns a tuple with the RunStartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotIdParams) GetRunStartTimeUsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunStartTimeUsecs.Get(), o.RunStartTimeUsecs.IsSet()
}

// HasRunStartTimeUsecs returns a boolean if a field has been set.
func (o *ObjectSnapshotIdParams) HasRunStartTimeUsecs() bool {
	if o != nil && o.RunStartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetRunStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the RunStartTimeUsecs field.
func (o *ObjectSnapshotIdParams) SetRunStartTimeUsecs(v int64) {
	o.RunStartTimeUsecs.Set(&v)
}
// SetRunStartTimeUsecsNil sets the value for RunStartTimeUsecs to be an explicit nil
func (o *ObjectSnapshotIdParams) SetRunStartTimeUsecsNil() {
	o.RunStartTimeUsecs.Set(nil)
}

// UnsetRunStartTimeUsecs ensures that no value is present for RunStartTimeUsecs, not even an explicit nil
func (o *ObjectSnapshotIdParams) UnsetRunStartTimeUsecs() {
	o.RunStartTimeUsecs.Unset()
}

// GetSnapshotJobInstanceId returns the SnapshotJobInstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSnapshotIdParams) GetSnapshotJobInstanceId() int64 {
	if o == nil || IsNil(o.SnapshotJobInstanceId.Get()) {
		var ret int64
		return ret
	}
	return *o.SnapshotJobInstanceId.Get()
}

// GetSnapshotJobInstanceIdOk returns a tuple with the SnapshotJobInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotIdParams) GetSnapshotJobInstanceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SnapshotJobInstanceId.Get(), o.SnapshotJobInstanceId.IsSet()
}

// HasSnapshotJobInstanceId returns a boolean if a field has been set.
func (o *ObjectSnapshotIdParams) HasSnapshotJobInstanceId() bool {
	if o != nil && o.SnapshotJobInstanceId.IsSet() {
		return true
	}

	return false
}

// SetSnapshotJobInstanceId gets a reference to the given NullableInt64 and assigns it to the SnapshotJobInstanceId field.
func (o *ObjectSnapshotIdParams) SetSnapshotJobInstanceId(v int64) {
	o.SnapshotJobInstanceId.Set(&v)
}
// SetSnapshotJobInstanceIdNil sets the value for SnapshotJobInstanceId to be an explicit nil
func (o *ObjectSnapshotIdParams) SetSnapshotJobInstanceIdNil() {
	o.SnapshotJobInstanceId.Set(nil)
}

// UnsetSnapshotJobInstanceId ensures that no value is present for SnapshotJobInstanceId, not even an explicit nil
func (o *ObjectSnapshotIdParams) UnsetSnapshotJobInstanceId() {
	o.SnapshotJobInstanceId.Unset()
}

// GetSourceGroupId returns the SourceGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSnapshotIdParams) GetSourceGroupId() string {
	if o == nil || IsNil(o.SourceGroupId.Get()) {
		var ret string
		return ret
	}
	return *o.SourceGroupId.Get()
}

// GetSourceGroupIdOk returns a tuple with the SourceGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotIdParams) GetSourceGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceGroupId.Get(), o.SourceGroupId.IsSet()
}

// HasSourceGroupId returns a boolean if a field has been set.
func (o *ObjectSnapshotIdParams) HasSourceGroupId() bool {
	if o != nil && o.SourceGroupId.IsSet() {
		return true
	}

	return false
}

// SetSourceGroupId gets a reference to the given NullableString and assigns it to the SourceGroupId field.
func (o *ObjectSnapshotIdParams) SetSourceGroupId(v string) {
	o.SourceGroupId.Set(&v)
}
// SetSourceGroupIdNil sets the value for SourceGroupId to be an explicit nil
func (o *ObjectSnapshotIdParams) SetSourceGroupIdNil() {
	o.SourceGroupId.Set(nil)
}

// UnsetSourceGroupId ensures that no value is present for SourceGroupId, not even an explicit nil
func (o *ObjectSnapshotIdParams) UnsetSourceGroupId() {
	o.SourceGroupId.Unset()
}

// GetVaultId returns the VaultId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSnapshotIdParams) GetVaultId() int64 {
	if o == nil || IsNil(o.VaultId.Get()) {
		var ret int64
		return ret
	}
	return *o.VaultId.Get()
}

// GetVaultIdOk returns a tuple with the VaultId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotIdParams) GetVaultIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.VaultId.Get(), o.VaultId.IsSet()
}

// HasVaultId returns a boolean if a field has been set.
func (o *ObjectSnapshotIdParams) HasVaultId() bool {
	if o != nil && o.VaultId.IsSet() {
		return true
	}

	return false
}

// SetVaultId gets a reference to the given NullableInt64 and assigns it to the VaultId field.
func (o *ObjectSnapshotIdParams) SetVaultId(v int64) {
	o.VaultId.Set(&v)
}
// SetVaultIdNil sets the value for VaultId to be an explicit nil
func (o *ObjectSnapshotIdParams) SetVaultIdNil() {
	o.VaultId.Set(nil)
}

// UnsetVaultId ensures that no value is present for VaultId, not even an explicit nil
func (o *ObjectSnapshotIdParams) UnsetVaultId() {
	o.VaultId.Unset()
}

func (o ObjectSnapshotIdParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectSnapshotIdParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["protectionGroupId"] = o.ProtectionGroupId.Get()
	if o.RunStartTimeUsecs.IsSet() {
		toSerialize["runStartTimeUsecs"] = o.RunStartTimeUsecs.Get()
	}
	if o.SnapshotJobInstanceId.IsSet() {
		toSerialize["snapshotJobInstanceId"] = o.SnapshotJobInstanceId.Get()
	}
	if o.SourceGroupId.IsSet() {
		toSerialize["sourceGroupId"] = o.SourceGroupId.Get()
	}
	if o.VaultId.IsSet() {
		toSerialize["vaultId"] = o.VaultId.Get()
	}
	return toSerialize, nil
}

func (o *ObjectSnapshotIdParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"protectionGroupId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varObjectSnapshotIdParams := _ObjectSnapshotIdParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varObjectSnapshotIdParams)

	if err != nil {
		return err
	}

	*o = ObjectSnapshotIdParams(varObjectSnapshotIdParams)

	return err
}

type NullableObjectSnapshotIdParams struct {
	value *ObjectSnapshotIdParams
	isSet bool
}

func (v NullableObjectSnapshotIdParams) Get() *ObjectSnapshotIdParams {
	return v.value
}

func (v *NullableObjectSnapshotIdParams) Set(val *ObjectSnapshotIdParams) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectSnapshotIdParams) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectSnapshotIdParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectSnapshotIdParams(val *ObjectSnapshotIdParams) *NullableObjectSnapshotIdParams {
	return &NullableObjectSnapshotIdParams{value: val, isSet: true}
}

func (v NullableObjectSnapshotIdParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectSnapshotIdParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


