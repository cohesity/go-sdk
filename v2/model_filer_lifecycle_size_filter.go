/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the FilerLifecycleSizeFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilerLifecycleSizeFilter{}

// FilerLifecycleSizeFilter Specifies the Lifecycle Size Filter information with minimum and maximum values.
type FilerLifecycleSizeFilter struct {
	// Specifies the maximum size in bytes.
	MaxBytes NullableInt32 `json:"maxBytes,omitempty"`
	// Specifies the minimum size in bytes.
	MinBytes NullableInt32 `json:"minBytes,omitempty"`
}

// NewFilerLifecycleSizeFilter instantiates a new FilerLifecycleSizeFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilerLifecycleSizeFilter() *FilerLifecycleSizeFilter {
	this := FilerLifecycleSizeFilter{}
	return &this
}

// NewFilerLifecycleSizeFilterWithDefaults instantiates a new FilerLifecycleSizeFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilerLifecycleSizeFilterWithDefaults() *FilerLifecycleSizeFilter {
	this := FilerLifecycleSizeFilter{}
	return &this
}

// GetMaxBytes returns the MaxBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FilerLifecycleSizeFilter) GetMaxBytes() int32 {
	if o == nil || IsNil(o.MaxBytes.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxBytes.Get()
}

// GetMaxBytesOk returns a tuple with the MaxBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FilerLifecycleSizeFilter) GetMaxBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxBytes.Get(), o.MaxBytes.IsSet()
}

// HasMaxBytes returns a boolean if a field has been set.
func (o *FilerLifecycleSizeFilter) HasMaxBytes() bool {
	if o != nil && o.MaxBytes.IsSet() {
		return true
	}

	return false
}

// SetMaxBytes gets a reference to the given NullableInt32 and assigns it to the MaxBytes field.
func (o *FilerLifecycleSizeFilter) SetMaxBytes(v int32) {
	o.MaxBytes.Set(&v)
}
// SetMaxBytesNil sets the value for MaxBytes to be an explicit nil
func (o *FilerLifecycleSizeFilter) SetMaxBytesNil() {
	o.MaxBytes.Set(nil)
}

// UnsetMaxBytes ensures that no value is present for MaxBytes, not even an explicit nil
func (o *FilerLifecycleSizeFilter) UnsetMaxBytes() {
	o.MaxBytes.Unset()
}

// GetMinBytes returns the MinBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FilerLifecycleSizeFilter) GetMinBytes() int32 {
	if o == nil || IsNil(o.MinBytes.Get()) {
		var ret int32
		return ret
	}
	return *o.MinBytes.Get()
}

// GetMinBytesOk returns a tuple with the MinBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FilerLifecycleSizeFilter) GetMinBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinBytes.Get(), o.MinBytes.IsSet()
}

// HasMinBytes returns a boolean if a field has been set.
func (o *FilerLifecycleSizeFilter) HasMinBytes() bool {
	if o != nil && o.MinBytes.IsSet() {
		return true
	}

	return false
}

// SetMinBytes gets a reference to the given NullableInt32 and assigns it to the MinBytes field.
func (o *FilerLifecycleSizeFilter) SetMinBytes(v int32) {
	o.MinBytes.Set(&v)
}
// SetMinBytesNil sets the value for MinBytes to be an explicit nil
func (o *FilerLifecycleSizeFilter) SetMinBytesNil() {
	o.MinBytes.Set(nil)
}

// UnsetMinBytes ensures that no value is present for MinBytes, not even an explicit nil
func (o *FilerLifecycleSizeFilter) UnsetMinBytes() {
	o.MinBytes.Unset()
}

func (o FilerLifecycleSizeFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilerLifecycleSizeFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxBytes.IsSet() {
		toSerialize["maxBytes"] = o.MaxBytes.Get()
	}
	if o.MinBytes.IsSet() {
		toSerialize["minBytes"] = o.MinBytes.Get()
	}
	return toSerialize, nil
}

type NullableFilerLifecycleSizeFilter struct {
	value *FilerLifecycleSizeFilter
	isSet bool
}

func (v NullableFilerLifecycleSizeFilter) Get() *FilerLifecycleSizeFilter {
	return v.value
}

func (v *NullableFilerLifecycleSizeFilter) Set(val *FilerLifecycleSizeFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableFilerLifecycleSizeFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableFilerLifecycleSizeFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilerLifecycleSizeFilter(val *FilerLifecycleSizeFilter) *NullableFilerLifecycleSizeFilter {
	return &NullableFilerLifecycleSizeFilter{value: val, isSet: true}
}

func (v NullableFilerLifecycleSizeFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilerLifecycleSizeFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


