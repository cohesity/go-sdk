/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ExperimentalAdapterSourceRegistrationParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExperimentalAdapterSourceRegistrationParams{}

// ExperimentalAdapterSourceRegistrationParams Specifies parameters to register an Experimental Adapter source.
type ExperimentalAdapterSourceRegistrationParams struct {
	// Specifies the IPs/hostnames for the nodes forming the Experimental Adapter source cluster.
	Hosts []string `json:"hosts,omitempty"`
	// Specifies the discover source workflow parameters. This is a stringified JSON representation of the parameters.
	WorkflowParams NullableString `json:"workflowParams,omitempty"`
}

// NewExperimentalAdapterSourceRegistrationParams instantiates a new ExperimentalAdapterSourceRegistrationParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExperimentalAdapterSourceRegistrationParams() *ExperimentalAdapterSourceRegistrationParams {
	this := ExperimentalAdapterSourceRegistrationParams{}
	return &this
}

// NewExperimentalAdapterSourceRegistrationParamsWithDefaults instantiates a new ExperimentalAdapterSourceRegistrationParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExperimentalAdapterSourceRegistrationParamsWithDefaults() *ExperimentalAdapterSourceRegistrationParams {
	this := ExperimentalAdapterSourceRegistrationParams{}
	return &this
}

// GetHosts returns the Hosts field value if set, zero value otherwise.
func (o *ExperimentalAdapterSourceRegistrationParams) GetHosts() []string {
	if o == nil || IsNil(o.Hosts) {
		var ret []string
		return ret
	}
	return o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentalAdapterSourceRegistrationParams) GetHostsOk() ([]string, bool) {
	if o == nil || IsNil(o.Hosts) {
		return nil, false
	}
	return o.Hosts, true
}

// HasHosts returns a boolean if a field has been set.
func (o *ExperimentalAdapterSourceRegistrationParams) HasHosts() bool {
	if o != nil && !IsNil(o.Hosts) {
		return true
	}

	return false
}

// SetHosts gets a reference to the given []string and assigns it to the Hosts field.
func (o *ExperimentalAdapterSourceRegistrationParams) SetHosts(v []string) {
	o.Hosts = v
}

// GetWorkflowParams returns the WorkflowParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExperimentalAdapterSourceRegistrationParams) GetWorkflowParams() string {
	if o == nil || IsNil(o.WorkflowParams.Get()) {
		var ret string
		return ret
	}
	return *o.WorkflowParams.Get()
}

// GetWorkflowParamsOk returns a tuple with the WorkflowParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExperimentalAdapterSourceRegistrationParams) GetWorkflowParamsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkflowParams.Get(), o.WorkflowParams.IsSet()
}

// HasWorkflowParams returns a boolean if a field has been set.
func (o *ExperimentalAdapterSourceRegistrationParams) HasWorkflowParams() bool {
	if o != nil && o.WorkflowParams.IsSet() {
		return true
	}

	return false
}

// SetWorkflowParams gets a reference to the given NullableString and assigns it to the WorkflowParams field.
func (o *ExperimentalAdapterSourceRegistrationParams) SetWorkflowParams(v string) {
	o.WorkflowParams.Set(&v)
}
// SetWorkflowParamsNil sets the value for WorkflowParams to be an explicit nil
func (o *ExperimentalAdapterSourceRegistrationParams) SetWorkflowParamsNil() {
	o.WorkflowParams.Set(nil)
}

// UnsetWorkflowParams ensures that no value is present for WorkflowParams, not even an explicit nil
func (o *ExperimentalAdapterSourceRegistrationParams) UnsetWorkflowParams() {
	o.WorkflowParams.Unset()
}

func (o ExperimentalAdapterSourceRegistrationParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExperimentalAdapterSourceRegistrationParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hosts) {
		toSerialize["hosts"] = o.Hosts
	}
	if o.WorkflowParams.IsSet() {
		toSerialize["workflowParams"] = o.WorkflowParams.Get()
	}
	return toSerialize, nil
}

type NullableExperimentalAdapterSourceRegistrationParams struct {
	value *ExperimentalAdapterSourceRegistrationParams
	isSet bool
}

func (v NullableExperimentalAdapterSourceRegistrationParams) Get() *ExperimentalAdapterSourceRegistrationParams {
	return v.value
}

func (v *NullableExperimentalAdapterSourceRegistrationParams) Set(val *ExperimentalAdapterSourceRegistrationParams) {
	v.value = val
	v.isSet = true
}

func (v NullableExperimentalAdapterSourceRegistrationParams) IsSet() bool {
	return v.isSet
}

func (v *NullableExperimentalAdapterSourceRegistrationParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExperimentalAdapterSourceRegistrationParams(val *ExperimentalAdapterSourceRegistrationParams) *NullableExperimentalAdapterSourceRegistrationParams {
	return &NullableExperimentalAdapterSourceRegistrationParams{value: val, isSet: true}
}

func (v NullableExperimentalAdapterSourceRegistrationParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExperimentalAdapterSourceRegistrationParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


