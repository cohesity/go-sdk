/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ClusterOperationAttributeName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterOperationAttributeName{}

// ClusterOperationAttributeName Name of the attribute for a cluster operation.
type ClusterOperationAttributeName struct {
	// Specifies an attribute for a cluster operation.
	Name *string `json:"name,omitempty"`
}

// NewClusterOperationAttributeName instantiates a new ClusterOperationAttributeName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterOperationAttributeName() *ClusterOperationAttributeName {
	this := ClusterOperationAttributeName{}
	return &this
}

// NewClusterOperationAttributeNameWithDefaults instantiates a new ClusterOperationAttributeName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterOperationAttributeNameWithDefaults() *ClusterOperationAttributeName {
	this := ClusterOperationAttributeName{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterOperationAttributeName) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOperationAttributeName) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClusterOperationAttributeName) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterOperationAttributeName) SetName(v string) {
	o.Name = &v
}

func (o ClusterOperationAttributeName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterOperationAttributeName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableClusterOperationAttributeName struct {
	value *ClusterOperationAttributeName
	isSet bool
}

func (v NullableClusterOperationAttributeName) Get() *ClusterOperationAttributeName {
	return v.value
}

func (v *NullableClusterOperationAttributeName) Set(val *ClusterOperationAttributeName) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterOperationAttributeName) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterOperationAttributeName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterOperationAttributeName(val *ClusterOperationAttributeName) *NullableClusterOperationAttributeName {
	return &NullableClusterOperationAttributeName{value: val, isSet: true}
}

func (v NullableClusterOperationAttributeName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterOperationAttributeName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


