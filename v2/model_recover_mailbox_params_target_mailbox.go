/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the RecoverMailboxParamsTargetMailbox type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecoverMailboxParamsTargetMailbox{}

// RecoverMailboxParamsTargetMailbox Specifies the target Mailbox to recover to. If not specified, the objects will be recovered to original location.
type RecoverMailboxParamsTargetMailbox struct {
	// Specifies the id of the target mailbox. Atleast one of id or primarySMTPAddress need to be defined. In case both id and primarySMTPAddress are defined then id takes precedence.
	Id NullableInt64 `json:"id,omitempty"`
	// Specifies the name of the object.
	Name NullableString `json:"name,omitempty"`
	// Specifies the id of the domain for alternate domain recovery.
	ParentSourceId NullableInt64 `json:"parentSourceId,omitempty"`
	// Specifies the primary SMTP address of the target mailbox. Atleast one of id or primarySMTPAddress needs to be defined. In case both id and primarySMTPAddress are defined then id takes precedence.
	PrimarySmtpAddress NullableString `json:"primarySmtpAddress,omitempty"`
	// Specifies the path to the target folder.
	TargetFolderPath NullableString `json:"targetFolderPath,omitempty"`
}

// NewRecoverMailboxParamsTargetMailbox instantiates a new RecoverMailboxParamsTargetMailbox object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverMailboxParamsTargetMailbox() *RecoverMailboxParamsTargetMailbox {
	this := RecoverMailboxParamsTargetMailbox{}
	return &this
}

// NewRecoverMailboxParamsTargetMailboxWithDefaults instantiates a new RecoverMailboxParamsTargetMailbox object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverMailboxParamsTargetMailboxWithDefaults() *RecoverMailboxParamsTargetMailbox {
	this := RecoverMailboxParamsTargetMailbox{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverMailboxParamsTargetMailbox) GetId() int64 {
	if o == nil || IsNil(o.Id.Get()) {
		var ret int64
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverMailboxParamsTargetMailbox) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *RecoverMailboxParamsTargetMailbox) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt64 and assigns it to the Id field.
func (o *RecoverMailboxParamsTargetMailbox) SetId(v int64) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *RecoverMailboxParamsTargetMailbox) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *RecoverMailboxParamsTargetMailbox) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverMailboxParamsTargetMailbox) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverMailboxParamsTargetMailbox) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *RecoverMailboxParamsTargetMailbox) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *RecoverMailboxParamsTargetMailbox) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *RecoverMailboxParamsTargetMailbox) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *RecoverMailboxParamsTargetMailbox) UnsetName() {
	o.Name.Unset()
}

// GetParentSourceId returns the ParentSourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverMailboxParamsTargetMailbox) GetParentSourceId() int64 {
	if o == nil || IsNil(o.ParentSourceId.Get()) {
		var ret int64
		return ret
	}
	return *o.ParentSourceId.Get()
}

// GetParentSourceIdOk returns a tuple with the ParentSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverMailboxParamsTargetMailbox) GetParentSourceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentSourceId.Get(), o.ParentSourceId.IsSet()
}

// HasParentSourceId returns a boolean if a field has been set.
func (o *RecoverMailboxParamsTargetMailbox) HasParentSourceId() bool {
	if o != nil && o.ParentSourceId.IsSet() {
		return true
	}

	return false
}

// SetParentSourceId gets a reference to the given NullableInt64 and assigns it to the ParentSourceId field.
func (o *RecoverMailboxParamsTargetMailbox) SetParentSourceId(v int64) {
	o.ParentSourceId.Set(&v)
}
// SetParentSourceIdNil sets the value for ParentSourceId to be an explicit nil
func (o *RecoverMailboxParamsTargetMailbox) SetParentSourceIdNil() {
	o.ParentSourceId.Set(nil)
}

// UnsetParentSourceId ensures that no value is present for ParentSourceId, not even an explicit nil
func (o *RecoverMailboxParamsTargetMailbox) UnsetParentSourceId() {
	o.ParentSourceId.Unset()
}

// GetPrimarySmtpAddress returns the PrimarySmtpAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverMailboxParamsTargetMailbox) GetPrimarySmtpAddress() string {
	if o == nil || IsNil(o.PrimarySmtpAddress.Get()) {
		var ret string
		return ret
	}
	return *o.PrimarySmtpAddress.Get()
}

// GetPrimarySmtpAddressOk returns a tuple with the PrimarySmtpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverMailboxParamsTargetMailbox) GetPrimarySmtpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimarySmtpAddress.Get(), o.PrimarySmtpAddress.IsSet()
}

// HasPrimarySmtpAddress returns a boolean if a field has been set.
func (o *RecoverMailboxParamsTargetMailbox) HasPrimarySmtpAddress() bool {
	if o != nil && o.PrimarySmtpAddress.IsSet() {
		return true
	}

	return false
}

// SetPrimarySmtpAddress gets a reference to the given NullableString and assigns it to the PrimarySmtpAddress field.
func (o *RecoverMailboxParamsTargetMailbox) SetPrimarySmtpAddress(v string) {
	o.PrimarySmtpAddress.Set(&v)
}
// SetPrimarySmtpAddressNil sets the value for PrimarySmtpAddress to be an explicit nil
func (o *RecoverMailboxParamsTargetMailbox) SetPrimarySmtpAddressNil() {
	o.PrimarySmtpAddress.Set(nil)
}

// UnsetPrimarySmtpAddress ensures that no value is present for PrimarySmtpAddress, not even an explicit nil
func (o *RecoverMailboxParamsTargetMailbox) UnsetPrimarySmtpAddress() {
	o.PrimarySmtpAddress.Unset()
}

// GetTargetFolderPath returns the TargetFolderPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverMailboxParamsTargetMailbox) GetTargetFolderPath() string {
	if o == nil || IsNil(o.TargetFolderPath.Get()) {
		var ret string
		return ret
	}
	return *o.TargetFolderPath.Get()
}

// GetTargetFolderPathOk returns a tuple with the TargetFolderPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverMailboxParamsTargetMailbox) GetTargetFolderPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetFolderPath.Get(), o.TargetFolderPath.IsSet()
}

// HasTargetFolderPath returns a boolean if a field has been set.
func (o *RecoverMailboxParamsTargetMailbox) HasTargetFolderPath() bool {
	if o != nil && o.TargetFolderPath.IsSet() {
		return true
	}

	return false
}

// SetTargetFolderPath gets a reference to the given NullableString and assigns it to the TargetFolderPath field.
func (o *RecoverMailboxParamsTargetMailbox) SetTargetFolderPath(v string) {
	o.TargetFolderPath.Set(&v)
}
// SetTargetFolderPathNil sets the value for TargetFolderPath to be an explicit nil
func (o *RecoverMailboxParamsTargetMailbox) SetTargetFolderPathNil() {
	o.TargetFolderPath.Set(nil)
}

// UnsetTargetFolderPath ensures that no value is present for TargetFolderPath, not even an explicit nil
func (o *RecoverMailboxParamsTargetMailbox) UnsetTargetFolderPath() {
	o.TargetFolderPath.Unset()
}

func (o RecoverMailboxParamsTargetMailbox) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecoverMailboxParamsTargetMailbox) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ParentSourceId.IsSet() {
		toSerialize["parentSourceId"] = o.ParentSourceId.Get()
	}
	if o.PrimarySmtpAddress.IsSet() {
		toSerialize["primarySmtpAddress"] = o.PrimarySmtpAddress.Get()
	}
	if o.TargetFolderPath.IsSet() {
		toSerialize["targetFolderPath"] = o.TargetFolderPath.Get()
	}
	return toSerialize, nil
}

type NullableRecoverMailboxParamsTargetMailbox struct {
	value *RecoverMailboxParamsTargetMailbox
	isSet bool
}

func (v NullableRecoverMailboxParamsTargetMailbox) Get() *RecoverMailboxParamsTargetMailbox {
	return v.value
}

func (v *NullableRecoverMailboxParamsTargetMailbox) Set(val *RecoverMailboxParamsTargetMailbox) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverMailboxParamsTargetMailbox) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverMailboxParamsTargetMailbox) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverMailboxParamsTargetMailbox(val *RecoverMailboxParamsTargetMailbox) *NullableRecoverMailboxParamsTargetMailbox {
	return &NullableRecoverMailboxParamsTargetMailbox{value: val, isSet: true}
}

func (v NullableRecoverMailboxParamsTargetMailbox) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverMailboxParamsTargetMailbox) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


