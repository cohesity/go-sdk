/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AwsTargetParamsForRecoverRds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsTargetParamsForRecoverRds{}

// AwsTargetParamsForRecoverRds Specifies the parameters for an AWS recovery target.
type AwsTargetParamsForRecoverRds struct {
	RdsConfig NullableAwsTargetParamsForRecoverRdsRdsConfig `json:"rdsConfig,omitempty"`
	RecoveryTargetConfig NullableAwsTargetParamsForRecoverRdsRecoveryTargetConfig `json:"recoveryTargetConfig,omitempty"`
}

// NewAwsTargetParamsForRecoverRds instantiates a new AwsTargetParamsForRecoverRds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsTargetParamsForRecoverRds() *AwsTargetParamsForRecoverRds {
	this := AwsTargetParamsForRecoverRds{}
	return &this
}

// NewAwsTargetParamsForRecoverRdsWithDefaults instantiates a new AwsTargetParamsForRecoverRds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsTargetParamsForRecoverRdsWithDefaults() *AwsTargetParamsForRecoverRds {
	this := AwsTargetParamsForRecoverRds{}
	return &this
}

// GetRdsConfig returns the RdsConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsTargetParamsForRecoverRds) GetRdsConfig() AwsTargetParamsForRecoverRdsRdsConfig {
	if o == nil || IsNil(o.RdsConfig.Get()) {
		var ret AwsTargetParamsForRecoverRdsRdsConfig
		return ret
	}
	return *o.RdsConfig.Get()
}

// GetRdsConfigOk returns a tuple with the RdsConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsTargetParamsForRecoverRds) GetRdsConfigOk() (*AwsTargetParamsForRecoverRdsRdsConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.RdsConfig.Get(), o.RdsConfig.IsSet()
}

// HasRdsConfig returns a boolean if a field has been set.
func (o *AwsTargetParamsForRecoverRds) HasRdsConfig() bool {
	if o != nil && o.RdsConfig.IsSet() {
		return true
	}

	return false
}

// SetRdsConfig gets a reference to the given NullableAwsTargetParamsForRecoverRdsRdsConfig and assigns it to the RdsConfig field.
func (o *AwsTargetParamsForRecoverRds) SetRdsConfig(v AwsTargetParamsForRecoverRdsRdsConfig) {
	o.RdsConfig.Set(&v)
}
// SetRdsConfigNil sets the value for RdsConfig to be an explicit nil
func (o *AwsTargetParamsForRecoverRds) SetRdsConfigNil() {
	o.RdsConfig.Set(nil)
}

// UnsetRdsConfig ensures that no value is present for RdsConfig, not even an explicit nil
func (o *AwsTargetParamsForRecoverRds) UnsetRdsConfig() {
	o.RdsConfig.Unset()
}

// GetRecoveryTargetConfig returns the RecoveryTargetConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsTargetParamsForRecoverRds) GetRecoveryTargetConfig() AwsTargetParamsForRecoverRdsRecoveryTargetConfig {
	if o == nil || IsNil(o.RecoveryTargetConfig.Get()) {
		var ret AwsTargetParamsForRecoverRdsRecoveryTargetConfig
		return ret
	}
	return *o.RecoveryTargetConfig.Get()
}

// GetRecoveryTargetConfigOk returns a tuple with the RecoveryTargetConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsTargetParamsForRecoverRds) GetRecoveryTargetConfigOk() (*AwsTargetParamsForRecoverRdsRecoveryTargetConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecoveryTargetConfig.Get(), o.RecoveryTargetConfig.IsSet()
}

// HasRecoveryTargetConfig returns a boolean if a field has been set.
func (o *AwsTargetParamsForRecoverRds) HasRecoveryTargetConfig() bool {
	if o != nil && o.RecoveryTargetConfig.IsSet() {
		return true
	}

	return false
}

// SetRecoveryTargetConfig gets a reference to the given NullableAwsTargetParamsForRecoverRdsRecoveryTargetConfig and assigns it to the RecoveryTargetConfig field.
func (o *AwsTargetParamsForRecoverRds) SetRecoveryTargetConfig(v AwsTargetParamsForRecoverRdsRecoveryTargetConfig) {
	o.RecoveryTargetConfig.Set(&v)
}
// SetRecoveryTargetConfigNil sets the value for RecoveryTargetConfig to be an explicit nil
func (o *AwsTargetParamsForRecoverRds) SetRecoveryTargetConfigNil() {
	o.RecoveryTargetConfig.Set(nil)
}

// UnsetRecoveryTargetConfig ensures that no value is present for RecoveryTargetConfig, not even an explicit nil
func (o *AwsTargetParamsForRecoverRds) UnsetRecoveryTargetConfig() {
	o.RecoveryTargetConfig.Unset()
}

func (o AwsTargetParamsForRecoverRds) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsTargetParamsForRecoverRds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.RdsConfig.IsSet() {
		toSerialize["rdsConfig"] = o.RdsConfig.Get()
	}
	if o.RecoveryTargetConfig.IsSet() {
		toSerialize["recoveryTargetConfig"] = o.RecoveryTargetConfig.Get()
	}
	return toSerialize, nil
}

type NullableAwsTargetParamsForRecoverRds struct {
	value *AwsTargetParamsForRecoverRds
	isSet bool
}

func (v NullableAwsTargetParamsForRecoverRds) Get() *AwsTargetParamsForRecoverRds {
	return v.value
}

func (v *NullableAwsTargetParamsForRecoverRds) Set(val *AwsTargetParamsForRecoverRds) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsTargetParamsForRecoverRds) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsTargetParamsForRecoverRds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsTargetParamsForRecoverRds(val *AwsTargetParamsForRecoverRds) *NullableAwsTargetParamsForRecoverRds {
	return &NullableAwsTargetParamsForRecoverRds{value: val, isSet: true}
}

func (v NullableAwsTargetParamsForRecoverRds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsTargetParamsForRecoverRds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


