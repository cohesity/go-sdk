/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ClusterUpdateIpmiUsers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterUpdateIpmiUsers{}

// ClusterUpdateIpmiUsers Specifies the  cluster level IPMI user name and the list of node level IPMI user names..
type ClusterUpdateIpmiUsers struct {
	// IPMI password at the cluster level for the cluster.
	ClusterIpmiPassword NullableString `json:"clusterIpmiPassword,omitempty"`
	// IPMI user name at the cluster level for the cluster.
	ClusterIpmiUsername NullableString `json:"clusterIpmiUsername,omitempty"`
	// Specifies the ipmi passwords for all the nodes in the cluster.
	NodeIpmiPasswords []string `json:"nodeIpmiPasswords,omitempty"`
	// Specifies the ipmi usernames for all the nodes in the cluster.
	NodeIpmiUsernames []string `json:"nodeIpmiUsernames,omitempty"`
	// Specifies the ip addresses for all the nodes in the cluster.
	NodeIps []string `json:"nodeIps,omitempty"`
}

// NewClusterUpdateIpmiUsers instantiates a new ClusterUpdateIpmiUsers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterUpdateIpmiUsers() *ClusterUpdateIpmiUsers {
	this := ClusterUpdateIpmiUsers{}
	return &this
}

// NewClusterUpdateIpmiUsersWithDefaults instantiates a new ClusterUpdateIpmiUsers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterUpdateIpmiUsersWithDefaults() *ClusterUpdateIpmiUsers {
	this := ClusterUpdateIpmiUsers{}
	return &this
}

// GetClusterIpmiPassword returns the ClusterIpmiPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterUpdateIpmiUsers) GetClusterIpmiPassword() string {
	if o == nil || IsNil(o.ClusterIpmiPassword.Get()) {
		var ret string
		return ret
	}
	return *o.ClusterIpmiPassword.Get()
}

// GetClusterIpmiPasswordOk returns a tuple with the ClusterIpmiPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterUpdateIpmiUsers) GetClusterIpmiPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterIpmiPassword.Get(), o.ClusterIpmiPassword.IsSet()
}

// HasClusterIpmiPassword returns a boolean if a field has been set.
func (o *ClusterUpdateIpmiUsers) HasClusterIpmiPassword() bool {
	if o != nil && o.ClusterIpmiPassword.IsSet() {
		return true
	}

	return false
}

// SetClusterIpmiPassword gets a reference to the given NullableString and assigns it to the ClusterIpmiPassword field.
func (o *ClusterUpdateIpmiUsers) SetClusterIpmiPassword(v string) {
	o.ClusterIpmiPassword.Set(&v)
}
// SetClusterIpmiPasswordNil sets the value for ClusterIpmiPassword to be an explicit nil
func (o *ClusterUpdateIpmiUsers) SetClusterIpmiPasswordNil() {
	o.ClusterIpmiPassword.Set(nil)
}

// UnsetClusterIpmiPassword ensures that no value is present for ClusterIpmiPassword, not even an explicit nil
func (o *ClusterUpdateIpmiUsers) UnsetClusterIpmiPassword() {
	o.ClusterIpmiPassword.Unset()
}

// GetClusterIpmiUsername returns the ClusterIpmiUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterUpdateIpmiUsers) GetClusterIpmiUsername() string {
	if o == nil || IsNil(o.ClusterIpmiUsername.Get()) {
		var ret string
		return ret
	}
	return *o.ClusterIpmiUsername.Get()
}

// GetClusterIpmiUsernameOk returns a tuple with the ClusterIpmiUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterUpdateIpmiUsers) GetClusterIpmiUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterIpmiUsername.Get(), o.ClusterIpmiUsername.IsSet()
}

// HasClusterIpmiUsername returns a boolean if a field has been set.
func (o *ClusterUpdateIpmiUsers) HasClusterIpmiUsername() bool {
	if o != nil && o.ClusterIpmiUsername.IsSet() {
		return true
	}

	return false
}

// SetClusterIpmiUsername gets a reference to the given NullableString and assigns it to the ClusterIpmiUsername field.
func (o *ClusterUpdateIpmiUsers) SetClusterIpmiUsername(v string) {
	o.ClusterIpmiUsername.Set(&v)
}
// SetClusterIpmiUsernameNil sets the value for ClusterIpmiUsername to be an explicit nil
func (o *ClusterUpdateIpmiUsers) SetClusterIpmiUsernameNil() {
	o.ClusterIpmiUsername.Set(nil)
}

// UnsetClusterIpmiUsername ensures that no value is present for ClusterIpmiUsername, not even an explicit nil
func (o *ClusterUpdateIpmiUsers) UnsetClusterIpmiUsername() {
	o.ClusterIpmiUsername.Unset()
}

// GetNodeIpmiPasswords returns the NodeIpmiPasswords field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterUpdateIpmiUsers) GetNodeIpmiPasswords() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.NodeIpmiPasswords
}

// GetNodeIpmiPasswordsOk returns a tuple with the NodeIpmiPasswords field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterUpdateIpmiUsers) GetNodeIpmiPasswordsOk() ([]string, bool) {
	if o == nil || IsNil(o.NodeIpmiPasswords) {
		return nil, false
	}
	return o.NodeIpmiPasswords, true
}

// HasNodeIpmiPasswords returns a boolean if a field has been set.
func (o *ClusterUpdateIpmiUsers) HasNodeIpmiPasswords() bool {
	if o != nil && !IsNil(o.NodeIpmiPasswords) {
		return true
	}

	return false
}

// SetNodeIpmiPasswords gets a reference to the given []string and assigns it to the NodeIpmiPasswords field.
func (o *ClusterUpdateIpmiUsers) SetNodeIpmiPasswords(v []string) {
	o.NodeIpmiPasswords = v
}

// GetNodeIpmiUsernames returns the NodeIpmiUsernames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterUpdateIpmiUsers) GetNodeIpmiUsernames() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.NodeIpmiUsernames
}

// GetNodeIpmiUsernamesOk returns a tuple with the NodeIpmiUsernames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterUpdateIpmiUsers) GetNodeIpmiUsernamesOk() ([]string, bool) {
	if o == nil || IsNil(o.NodeIpmiUsernames) {
		return nil, false
	}
	return o.NodeIpmiUsernames, true
}

// HasNodeIpmiUsernames returns a boolean if a field has been set.
func (o *ClusterUpdateIpmiUsers) HasNodeIpmiUsernames() bool {
	if o != nil && !IsNil(o.NodeIpmiUsernames) {
		return true
	}

	return false
}

// SetNodeIpmiUsernames gets a reference to the given []string and assigns it to the NodeIpmiUsernames field.
func (o *ClusterUpdateIpmiUsers) SetNodeIpmiUsernames(v []string) {
	o.NodeIpmiUsernames = v
}

// GetNodeIps returns the NodeIps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterUpdateIpmiUsers) GetNodeIps() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.NodeIps
}

// GetNodeIpsOk returns a tuple with the NodeIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterUpdateIpmiUsers) GetNodeIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.NodeIps) {
		return nil, false
	}
	return o.NodeIps, true
}

// HasNodeIps returns a boolean if a field has been set.
func (o *ClusterUpdateIpmiUsers) HasNodeIps() bool {
	if o != nil && !IsNil(o.NodeIps) {
		return true
	}

	return false
}

// SetNodeIps gets a reference to the given []string and assigns it to the NodeIps field.
func (o *ClusterUpdateIpmiUsers) SetNodeIps(v []string) {
	o.NodeIps = v
}

func (o ClusterUpdateIpmiUsers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterUpdateIpmiUsers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterIpmiPassword.IsSet() {
		toSerialize["clusterIpmiPassword"] = o.ClusterIpmiPassword.Get()
	}
	if o.ClusterIpmiUsername.IsSet() {
		toSerialize["clusterIpmiUsername"] = o.ClusterIpmiUsername.Get()
	}
	if o.NodeIpmiPasswords != nil {
		toSerialize["nodeIpmiPasswords"] = o.NodeIpmiPasswords
	}
	if o.NodeIpmiUsernames != nil {
		toSerialize["nodeIpmiUsernames"] = o.NodeIpmiUsernames
	}
	if o.NodeIps != nil {
		toSerialize["nodeIps"] = o.NodeIps
	}
	return toSerialize, nil
}

type NullableClusterUpdateIpmiUsers struct {
	value *ClusterUpdateIpmiUsers
	isSet bool
}

func (v NullableClusterUpdateIpmiUsers) Get() *ClusterUpdateIpmiUsers {
	return v.value
}

func (v *NullableClusterUpdateIpmiUsers) Set(val *ClusterUpdateIpmiUsers) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterUpdateIpmiUsers) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterUpdateIpmiUsers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterUpdateIpmiUsers(val *ClusterUpdateIpmiUsers) *NullableClusterUpdateIpmiUsers {
	return &NullableClusterUpdateIpmiUsers{value: val, isSet: true}
}

func (v NullableClusterUpdateIpmiUsers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterUpdateIpmiUsers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


