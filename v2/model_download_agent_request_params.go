/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DownloadAgentRequestParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DownloadAgentRequestParams{}

// DownloadAgentRequestParams Specifies agent download request parameters.
type DownloadAgentRequestParams struct {
	AixParams *AixAgentParams `json:"aixParams,omitempty"`
	LinuxParams *LinuxAgentParams `json:"linuxParams,omitempty"`
	MySqlParams *MySqlAgentParams `json:"mySqlParams,omitempty"`
	// Specifies the platform for which agent needs to be downloaded.
	Platform string `json:"platform"`
	SapHanaParams *SapHanaAgentParams `json:"sapHanaParams,omitempty"`
	SapOracleParams *SapOracleAgentParams `json:"sapOracleParams,omitempty"`
	VmwareCDPFilterParams *VMWareCDPFilterParams `json:"vmwareCDPFilterParams,omitempty"`
}

type _DownloadAgentRequestParams DownloadAgentRequestParams

// NewDownloadAgentRequestParams instantiates a new DownloadAgentRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDownloadAgentRequestParams(platform string) *DownloadAgentRequestParams {
	this := DownloadAgentRequestParams{}
	this.Platform = platform
	return &this
}

// NewDownloadAgentRequestParamsWithDefaults instantiates a new DownloadAgentRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDownloadAgentRequestParamsWithDefaults() *DownloadAgentRequestParams {
	this := DownloadAgentRequestParams{}
	return &this
}

// GetAixParams returns the AixParams field value if set, zero value otherwise.
func (o *DownloadAgentRequestParams) GetAixParams() AixAgentParams {
	if o == nil || IsNil(o.AixParams) {
		var ret AixAgentParams
		return ret
	}
	return *o.AixParams
}

// GetAixParamsOk returns a tuple with the AixParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadAgentRequestParams) GetAixParamsOk() (*AixAgentParams, bool) {
	if o == nil || IsNil(o.AixParams) {
		return nil, false
	}
	return o.AixParams, true
}

// HasAixParams returns a boolean if a field has been set.
func (o *DownloadAgentRequestParams) HasAixParams() bool {
	if o != nil && !IsNil(o.AixParams) {
		return true
	}

	return false
}

// SetAixParams gets a reference to the given AixAgentParams and assigns it to the AixParams field.
func (o *DownloadAgentRequestParams) SetAixParams(v AixAgentParams) {
	o.AixParams = &v
}

// GetLinuxParams returns the LinuxParams field value if set, zero value otherwise.
func (o *DownloadAgentRequestParams) GetLinuxParams() LinuxAgentParams {
	if o == nil || IsNil(o.LinuxParams) {
		var ret LinuxAgentParams
		return ret
	}
	return *o.LinuxParams
}

// GetLinuxParamsOk returns a tuple with the LinuxParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadAgentRequestParams) GetLinuxParamsOk() (*LinuxAgentParams, bool) {
	if o == nil || IsNil(o.LinuxParams) {
		return nil, false
	}
	return o.LinuxParams, true
}

// HasLinuxParams returns a boolean if a field has been set.
func (o *DownloadAgentRequestParams) HasLinuxParams() bool {
	if o != nil && !IsNil(o.LinuxParams) {
		return true
	}

	return false
}

// SetLinuxParams gets a reference to the given LinuxAgentParams and assigns it to the LinuxParams field.
func (o *DownloadAgentRequestParams) SetLinuxParams(v LinuxAgentParams) {
	o.LinuxParams = &v
}

// GetMySqlParams returns the MySqlParams field value if set, zero value otherwise.
func (o *DownloadAgentRequestParams) GetMySqlParams() MySqlAgentParams {
	if o == nil || IsNil(o.MySqlParams) {
		var ret MySqlAgentParams
		return ret
	}
	return *o.MySqlParams
}

// GetMySqlParamsOk returns a tuple with the MySqlParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadAgentRequestParams) GetMySqlParamsOk() (*MySqlAgentParams, bool) {
	if o == nil || IsNil(o.MySqlParams) {
		return nil, false
	}
	return o.MySqlParams, true
}

// HasMySqlParams returns a boolean if a field has been set.
func (o *DownloadAgentRequestParams) HasMySqlParams() bool {
	if o != nil && !IsNil(o.MySqlParams) {
		return true
	}

	return false
}

// SetMySqlParams gets a reference to the given MySqlAgentParams and assigns it to the MySqlParams field.
func (o *DownloadAgentRequestParams) SetMySqlParams(v MySqlAgentParams) {
	o.MySqlParams = &v
}

// GetPlatform returns the Platform field value
func (o *DownloadAgentRequestParams) GetPlatform() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *DownloadAgentRequestParams) GetPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *DownloadAgentRequestParams) SetPlatform(v string) {
	o.Platform = v
}

// GetSapHanaParams returns the SapHanaParams field value if set, zero value otherwise.
func (o *DownloadAgentRequestParams) GetSapHanaParams() SapHanaAgentParams {
	if o == nil || IsNil(o.SapHanaParams) {
		var ret SapHanaAgentParams
		return ret
	}
	return *o.SapHanaParams
}

// GetSapHanaParamsOk returns a tuple with the SapHanaParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadAgentRequestParams) GetSapHanaParamsOk() (*SapHanaAgentParams, bool) {
	if o == nil || IsNil(o.SapHanaParams) {
		return nil, false
	}
	return o.SapHanaParams, true
}

// HasSapHanaParams returns a boolean if a field has been set.
func (o *DownloadAgentRequestParams) HasSapHanaParams() bool {
	if o != nil && !IsNil(o.SapHanaParams) {
		return true
	}

	return false
}

// SetSapHanaParams gets a reference to the given SapHanaAgentParams and assigns it to the SapHanaParams field.
func (o *DownloadAgentRequestParams) SetSapHanaParams(v SapHanaAgentParams) {
	o.SapHanaParams = &v
}

// GetSapOracleParams returns the SapOracleParams field value if set, zero value otherwise.
func (o *DownloadAgentRequestParams) GetSapOracleParams() SapOracleAgentParams {
	if o == nil || IsNil(o.SapOracleParams) {
		var ret SapOracleAgentParams
		return ret
	}
	return *o.SapOracleParams
}

// GetSapOracleParamsOk returns a tuple with the SapOracleParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadAgentRequestParams) GetSapOracleParamsOk() (*SapOracleAgentParams, bool) {
	if o == nil || IsNil(o.SapOracleParams) {
		return nil, false
	}
	return o.SapOracleParams, true
}

// HasSapOracleParams returns a boolean if a field has been set.
func (o *DownloadAgentRequestParams) HasSapOracleParams() bool {
	if o != nil && !IsNil(o.SapOracleParams) {
		return true
	}

	return false
}

// SetSapOracleParams gets a reference to the given SapOracleAgentParams and assigns it to the SapOracleParams field.
func (o *DownloadAgentRequestParams) SetSapOracleParams(v SapOracleAgentParams) {
	o.SapOracleParams = &v
}

// GetVmwareCDPFilterParams returns the VmwareCDPFilterParams field value if set, zero value otherwise.
func (o *DownloadAgentRequestParams) GetVmwareCDPFilterParams() VMWareCDPFilterParams {
	if o == nil || IsNil(o.VmwareCDPFilterParams) {
		var ret VMWareCDPFilterParams
		return ret
	}
	return *o.VmwareCDPFilterParams
}

// GetVmwareCDPFilterParamsOk returns a tuple with the VmwareCDPFilterParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadAgentRequestParams) GetVmwareCDPFilterParamsOk() (*VMWareCDPFilterParams, bool) {
	if o == nil || IsNil(o.VmwareCDPFilterParams) {
		return nil, false
	}
	return o.VmwareCDPFilterParams, true
}

// HasVmwareCDPFilterParams returns a boolean if a field has been set.
func (o *DownloadAgentRequestParams) HasVmwareCDPFilterParams() bool {
	if o != nil && !IsNil(o.VmwareCDPFilterParams) {
		return true
	}

	return false
}

// SetVmwareCDPFilterParams gets a reference to the given VMWareCDPFilterParams and assigns it to the VmwareCDPFilterParams field.
func (o *DownloadAgentRequestParams) SetVmwareCDPFilterParams(v VMWareCDPFilterParams) {
	o.VmwareCDPFilterParams = &v
}

func (o DownloadAgentRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DownloadAgentRequestParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AixParams) {
		toSerialize["aixParams"] = o.AixParams
	}
	if !IsNil(o.LinuxParams) {
		toSerialize["linuxParams"] = o.LinuxParams
	}
	if !IsNil(o.MySqlParams) {
		toSerialize["mySqlParams"] = o.MySqlParams
	}
	toSerialize["platform"] = o.Platform
	if !IsNil(o.SapHanaParams) {
		toSerialize["sapHanaParams"] = o.SapHanaParams
	}
	if !IsNil(o.SapOracleParams) {
		toSerialize["sapOracleParams"] = o.SapOracleParams
	}
	if !IsNil(o.VmwareCDPFilterParams) {
		toSerialize["vmwareCDPFilterParams"] = o.VmwareCDPFilterParams
	}
	return toSerialize, nil
}

func (o *DownloadAgentRequestParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"platform",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDownloadAgentRequestParams := _DownloadAgentRequestParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDownloadAgentRequestParams)

	if err != nil {
		return err
	}

	*o = DownloadAgentRequestParams(varDownloadAgentRequestParams)

	return err
}

type NullableDownloadAgentRequestParams struct {
	value *DownloadAgentRequestParams
	isSet bool
}

func (v NullableDownloadAgentRequestParams) Get() *DownloadAgentRequestParams {
	return v.value
}

func (v *NullableDownloadAgentRequestParams) Set(val *DownloadAgentRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableDownloadAgentRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableDownloadAgentRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDownloadAgentRequestParams(val *DownloadAgentRequestParams) *NullableDownloadAgentRequestParams {
	return &NullableDownloadAgentRequestParams{value: val, isSet: true}
}

func (v NullableDownloadAgentRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDownloadAgentRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


