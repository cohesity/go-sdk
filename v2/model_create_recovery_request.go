/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateRecoveryRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRecoveryRequest{}

// CreateRecoveryRequest Specifies the request parameters to create a Recovery.
type CreateRecoveryRequest struct {
	// Specifies the name of the Recovery.
	Name NullableString `json:"name"`
	// Specifies the type of environment of snapshots for which the Recovery has to be performed.
	SnapshotEnvironment string `json:"snapshotEnvironment"`
	AcropolisParams *RecoverAcropolisParams `json:"acropolisParams,omitempty"`
	AwsParams *RecoverAwsParams `json:"awsParams,omitempty"`
	AzureParams *RecoverAzureParams `json:"azureParams,omitempty"`
	CassandraParams *CassandraParams `json:"cassandraParams,omitempty"`
	CouchbaseParams *CouchbaseParams `json:"couchbaseParams,omitempty"`
	ElastifileParams *RecoverElastifileParams `json:"elastifileParams,omitempty"`
	ExchangeParams *RecoverExchangeParams `json:"exchangeParams,omitempty"`
	ExperimentalAdapterParams *ExperimentalAdapterParams `json:"experimentalAdapterParams,omitempty"`
	FlashbladeParams *RecoverFlashbladeParams `json:"flashbladeParams,omitempty"`
	GcpParams *RecoverGcpParams `json:"gcpParams,omitempty"`
	GenericNasParams *RecoverGenericNasParams `json:"genericNasParams,omitempty"`
	GpfsParams *RecoverGpfsParams `json:"gpfsParams,omitempty"`
	HbaseParams *HbaseParams `json:"hbaseParams,omitempty"`
	HdfsParams *HdfsParams `json:"hdfsParams,omitempty"`
	HiveParams *HiveParams `json:"hiveParams,omitempty"`
	HypervParams *RecoverHyperVParams `json:"hypervParams,omitempty"`
	IbmFlashSystemParams *RecoverPureParams `json:"ibmFlashSystemParams,omitempty"`
	IsilonParams *RecoverIsilonParams `json:"isilonParams,omitempty"`
	KubernetesParams *RecoverKubernetesParams `json:"kubernetesParams,omitempty"`
	KvmParams *RecoverKvmParams `json:"kvmParams,omitempty"`
	MongodbParams *MongodbParams `json:"mongodbParams,omitempty"`
	MssqlParams *RecoverSqlParams `json:"mssqlParams,omitempty"`
	NetappParams *RecoverNetappParams `json:"netappParams,omitempty"`
	Office365Params *RecoverO365Params `json:"office365Params,omitempty"`
	OracleParams *RecoverOracleParams `json:"oracleParams,omitempty"`
	PhysicalParams *RecoverPhysicalParams `json:"physicalParams,omitempty"`
	PureParams *RecoverPureParams `json:"pureParams,omitempty"`
	SapHanaParams *SapHanaParams `json:"sapHanaParams,omitempty"`
	SfdcParams *RecoverSalesforceParams `json:"sfdcParams,omitempty"`
	UdaParams *UdaParams `json:"udaParams,omitempty"`
	ViewParams *RecoverViewParams `json:"viewParams,omitempty"`
	VmwareParams *RecoverVmwareParams `json:"vmwareParams,omitempty"`
}

type _CreateRecoveryRequest CreateRecoveryRequest

// NewCreateRecoveryRequest instantiates a new CreateRecoveryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRecoveryRequest(name NullableString, snapshotEnvironment string) *CreateRecoveryRequest {
	this := CreateRecoveryRequest{}
	this.Name = name
	this.SnapshotEnvironment = snapshotEnvironment
	return &this
}

// NewCreateRecoveryRequestWithDefaults instantiates a new CreateRecoveryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRecoveryRequestWithDefaults() *CreateRecoveryRequest {
	this := CreateRecoveryRequest{}
	return &this
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateRecoveryRequest) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRecoveryRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *CreateRecoveryRequest) SetName(v string) {
	o.Name.Set(&v)
}

// GetSnapshotEnvironment returns the SnapshotEnvironment field value
func (o *CreateRecoveryRequest) GetSnapshotEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SnapshotEnvironment
}

// GetSnapshotEnvironmentOk returns a tuple with the SnapshotEnvironment field value
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetSnapshotEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SnapshotEnvironment, true
}

// SetSnapshotEnvironment sets field value
func (o *CreateRecoveryRequest) SetSnapshotEnvironment(v string) {
	o.SnapshotEnvironment = v
}

// GetAcropolisParams returns the AcropolisParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetAcropolisParams() RecoverAcropolisParams {
	if o == nil || IsNil(o.AcropolisParams) {
		var ret RecoverAcropolisParams
		return ret
	}
	return *o.AcropolisParams
}

// GetAcropolisParamsOk returns a tuple with the AcropolisParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetAcropolisParamsOk() (*RecoverAcropolisParams, bool) {
	if o == nil || IsNil(o.AcropolisParams) {
		return nil, false
	}
	return o.AcropolisParams, true
}

// HasAcropolisParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasAcropolisParams() bool {
	if o != nil && !IsNil(o.AcropolisParams) {
		return true
	}

	return false
}

// SetAcropolisParams gets a reference to the given RecoverAcropolisParams and assigns it to the AcropolisParams field.
func (o *CreateRecoveryRequest) SetAcropolisParams(v RecoverAcropolisParams) {
	o.AcropolisParams = &v
}

// GetAwsParams returns the AwsParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetAwsParams() RecoverAwsParams {
	if o == nil || IsNil(o.AwsParams) {
		var ret RecoverAwsParams
		return ret
	}
	return *o.AwsParams
}

// GetAwsParamsOk returns a tuple with the AwsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetAwsParamsOk() (*RecoverAwsParams, bool) {
	if o == nil || IsNil(o.AwsParams) {
		return nil, false
	}
	return o.AwsParams, true
}

// HasAwsParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasAwsParams() bool {
	if o != nil && !IsNil(o.AwsParams) {
		return true
	}

	return false
}

// SetAwsParams gets a reference to the given RecoverAwsParams and assigns it to the AwsParams field.
func (o *CreateRecoveryRequest) SetAwsParams(v RecoverAwsParams) {
	o.AwsParams = &v
}

// GetAzureParams returns the AzureParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetAzureParams() RecoverAzureParams {
	if o == nil || IsNil(o.AzureParams) {
		var ret RecoverAzureParams
		return ret
	}
	return *o.AzureParams
}

// GetAzureParamsOk returns a tuple with the AzureParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetAzureParamsOk() (*RecoverAzureParams, bool) {
	if o == nil || IsNil(o.AzureParams) {
		return nil, false
	}
	return o.AzureParams, true
}

// HasAzureParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasAzureParams() bool {
	if o != nil && !IsNil(o.AzureParams) {
		return true
	}

	return false
}

// SetAzureParams gets a reference to the given RecoverAzureParams and assigns it to the AzureParams field.
func (o *CreateRecoveryRequest) SetAzureParams(v RecoverAzureParams) {
	o.AzureParams = &v
}

// GetCassandraParams returns the CassandraParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetCassandraParams() CassandraParams {
	if o == nil || IsNil(o.CassandraParams) {
		var ret CassandraParams
		return ret
	}
	return *o.CassandraParams
}

// GetCassandraParamsOk returns a tuple with the CassandraParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetCassandraParamsOk() (*CassandraParams, bool) {
	if o == nil || IsNil(o.CassandraParams) {
		return nil, false
	}
	return o.CassandraParams, true
}

// HasCassandraParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasCassandraParams() bool {
	if o != nil && !IsNil(o.CassandraParams) {
		return true
	}

	return false
}

// SetCassandraParams gets a reference to the given CassandraParams and assigns it to the CassandraParams field.
func (o *CreateRecoveryRequest) SetCassandraParams(v CassandraParams) {
	o.CassandraParams = &v
}

// GetCouchbaseParams returns the CouchbaseParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetCouchbaseParams() CouchbaseParams {
	if o == nil || IsNil(o.CouchbaseParams) {
		var ret CouchbaseParams
		return ret
	}
	return *o.CouchbaseParams
}

// GetCouchbaseParamsOk returns a tuple with the CouchbaseParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetCouchbaseParamsOk() (*CouchbaseParams, bool) {
	if o == nil || IsNil(o.CouchbaseParams) {
		return nil, false
	}
	return o.CouchbaseParams, true
}

// HasCouchbaseParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasCouchbaseParams() bool {
	if o != nil && !IsNil(o.CouchbaseParams) {
		return true
	}

	return false
}

// SetCouchbaseParams gets a reference to the given CouchbaseParams and assigns it to the CouchbaseParams field.
func (o *CreateRecoveryRequest) SetCouchbaseParams(v CouchbaseParams) {
	o.CouchbaseParams = &v
}

// GetElastifileParams returns the ElastifileParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetElastifileParams() RecoverElastifileParams {
	if o == nil || IsNil(o.ElastifileParams) {
		var ret RecoverElastifileParams
		return ret
	}
	return *o.ElastifileParams
}

// GetElastifileParamsOk returns a tuple with the ElastifileParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetElastifileParamsOk() (*RecoverElastifileParams, bool) {
	if o == nil || IsNil(o.ElastifileParams) {
		return nil, false
	}
	return o.ElastifileParams, true
}

// HasElastifileParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasElastifileParams() bool {
	if o != nil && !IsNil(o.ElastifileParams) {
		return true
	}

	return false
}

// SetElastifileParams gets a reference to the given RecoverElastifileParams and assigns it to the ElastifileParams field.
func (o *CreateRecoveryRequest) SetElastifileParams(v RecoverElastifileParams) {
	o.ElastifileParams = &v
}

// GetExchangeParams returns the ExchangeParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetExchangeParams() RecoverExchangeParams {
	if o == nil || IsNil(o.ExchangeParams) {
		var ret RecoverExchangeParams
		return ret
	}
	return *o.ExchangeParams
}

// GetExchangeParamsOk returns a tuple with the ExchangeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetExchangeParamsOk() (*RecoverExchangeParams, bool) {
	if o == nil || IsNil(o.ExchangeParams) {
		return nil, false
	}
	return o.ExchangeParams, true
}

// HasExchangeParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasExchangeParams() bool {
	if o != nil && !IsNil(o.ExchangeParams) {
		return true
	}

	return false
}

// SetExchangeParams gets a reference to the given RecoverExchangeParams and assigns it to the ExchangeParams field.
func (o *CreateRecoveryRequest) SetExchangeParams(v RecoverExchangeParams) {
	o.ExchangeParams = &v
}

// GetExperimentalAdapterParams returns the ExperimentalAdapterParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetExperimentalAdapterParams() ExperimentalAdapterParams {
	if o == nil || IsNil(o.ExperimentalAdapterParams) {
		var ret ExperimentalAdapterParams
		return ret
	}
	return *o.ExperimentalAdapterParams
}

// GetExperimentalAdapterParamsOk returns a tuple with the ExperimentalAdapterParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetExperimentalAdapterParamsOk() (*ExperimentalAdapterParams, bool) {
	if o == nil || IsNil(o.ExperimentalAdapterParams) {
		return nil, false
	}
	return o.ExperimentalAdapterParams, true
}

// HasExperimentalAdapterParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasExperimentalAdapterParams() bool {
	if o != nil && !IsNil(o.ExperimentalAdapterParams) {
		return true
	}

	return false
}

// SetExperimentalAdapterParams gets a reference to the given ExperimentalAdapterParams and assigns it to the ExperimentalAdapterParams field.
func (o *CreateRecoveryRequest) SetExperimentalAdapterParams(v ExperimentalAdapterParams) {
	o.ExperimentalAdapterParams = &v
}

// GetFlashbladeParams returns the FlashbladeParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetFlashbladeParams() RecoverFlashbladeParams {
	if o == nil || IsNil(o.FlashbladeParams) {
		var ret RecoverFlashbladeParams
		return ret
	}
	return *o.FlashbladeParams
}

// GetFlashbladeParamsOk returns a tuple with the FlashbladeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetFlashbladeParamsOk() (*RecoverFlashbladeParams, bool) {
	if o == nil || IsNil(o.FlashbladeParams) {
		return nil, false
	}
	return o.FlashbladeParams, true
}

// HasFlashbladeParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasFlashbladeParams() bool {
	if o != nil && !IsNil(o.FlashbladeParams) {
		return true
	}

	return false
}

// SetFlashbladeParams gets a reference to the given RecoverFlashbladeParams and assigns it to the FlashbladeParams field.
func (o *CreateRecoveryRequest) SetFlashbladeParams(v RecoverFlashbladeParams) {
	o.FlashbladeParams = &v
}

// GetGcpParams returns the GcpParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetGcpParams() RecoverGcpParams {
	if o == nil || IsNil(o.GcpParams) {
		var ret RecoverGcpParams
		return ret
	}
	return *o.GcpParams
}

// GetGcpParamsOk returns a tuple with the GcpParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetGcpParamsOk() (*RecoverGcpParams, bool) {
	if o == nil || IsNil(o.GcpParams) {
		return nil, false
	}
	return o.GcpParams, true
}

// HasGcpParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasGcpParams() bool {
	if o != nil && !IsNil(o.GcpParams) {
		return true
	}

	return false
}

// SetGcpParams gets a reference to the given RecoverGcpParams and assigns it to the GcpParams field.
func (o *CreateRecoveryRequest) SetGcpParams(v RecoverGcpParams) {
	o.GcpParams = &v
}

// GetGenericNasParams returns the GenericNasParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetGenericNasParams() RecoverGenericNasParams {
	if o == nil || IsNil(o.GenericNasParams) {
		var ret RecoverGenericNasParams
		return ret
	}
	return *o.GenericNasParams
}

// GetGenericNasParamsOk returns a tuple with the GenericNasParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetGenericNasParamsOk() (*RecoverGenericNasParams, bool) {
	if o == nil || IsNil(o.GenericNasParams) {
		return nil, false
	}
	return o.GenericNasParams, true
}

// HasGenericNasParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasGenericNasParams() bool {
	if o != nil && !IsNil(o.GenericNasParams) {
		return true
	}

	return false
}

// SetGenericNasParams gets a reference to the given RecoverGenericNasParams and assigns it to the GenericNasParams field.
func (o *CreateRecoveryRequest) SetGenericNasParams(v RecoverGenericNasParams) {
	o.GenericNasParams = &v
}

// GetGpfsParams returns the GpfsParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetGpfsParams() RecoverGpfsParams {
	if o == nil || IsNil(o.GpfsParams) {
		var ret RecoverGpfsParams
		return ret
	}
	return *o.GpfsParams
}

// GetGpfsParamsOk returns a tuple with the GpfsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetGpfsParamsOk() (*RecoverGpfsParams, bool) {
	if o == nil || IsNil(o.GpfsParams) {
		return nil, false
	}
	return o.GpfsParams, true
}

// HasGpfsParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasGpfsParams() bool {
	if o != nil && !IsNil(o.GpfsParams) {
		return true
	}

	return false
}

// SetGpfsParams gets a reference to the given RecoverGpfsParams and assigns it to the GpfsParams field.
func (o *CreateRecoveryRequest) SetGpfsParams(v RecoverGpfsParams) {
	o.GpfsParams = &v
}

// GetHbaseParams returns the HbaseParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetHbaseParams() HbaseParams {
	if o == nil || IsNil(o.HbaseParams) {
		var ret HbaseParams
		return ret
	}
	return *o.HbaseParams
}

// GetHbaseParamsOk returns a tuple with the HbaseParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetHbaseParamsOk() (*HbaseParams, bool) {
	if o == nil || IsNil(o.HbaseParams) {
		return nil, false
	}
	return o.HbaseParams, true
}

// HasHbaseParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasHbaseParams() bool {
	if o != nil && !IsNil(o.HbaseParams) {
		return true
	}

	return false
}

// SetHbaseParams gets a reference to the given HbaseParams and assigns it to the HbaseParams field.
func (o *CreateRecoveryRequest) SetHbaseParams(v HbaseParams) {
	o.HbaseParams = &v
}

// GetHdfsParams returns the HdfsParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetHdfsParams() HdfsParams {
	if o == nil || IsNil(o.HdfsParams) {
		var ret HdfsParams
		return ret
	}
	return *o.HdfsParams
}

// GetHdfsParamsOk returns a tuple with the HdfsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetHdfsParamsOk() (*HdfsParams, bool) {
	if o == nil || IsNil(o.HdfsParams) {
		return nil, false
	}
	return o.HdfsParams, true
}

// HasHdfsParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasHdfsParams() bool {
	if o != nil && !IsNil(o.HdfsParams) {
		return true
	}

	return false
}

// SetHdfsParams gets a reference to the given HdfsParams and assigns it to the HdfsParams field.
func (o *CreateRecoveryRequest) SetHdfsParams(v HdfsParams) {
	o.HdfsParams = &v
}

// GetHiveParams returns the HiveParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetHiveParams() HiveParams {
	if o == nil || IsNil(o.HiveParams) {
		var ret HiveParams
		return ret
	}
	return *o.HiveParams
}

// GetHiveParamsOk returns a tuple with the HiveParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetHiveParamsOk() (*HiveParams, bool) {
	if o == nil || IsNil(o.HiveParams) {
		return nil, false
	}
	return o.HiveParams, true
}

// HasHiveParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasHiveParams() bool {
	if o != nil && !IsNil(o.HiveParams) {
		return true
	}

	return false
}

// SetHiveParams gets a reference to the given HiveParams and assigns it to the HiveParams field.
func (o *CreateRecoveryRequest) SetHiveParams(v HiveParams) {
	o.HiveParams = &v
}

// GetHypervParams returns the HypervParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetHypervParams() RecoverHyperVParams {
	if o == nil || IsNil(o.HypervParams) {
		var ret RecoverHyperVParams
		return ret
	}
	return *o.HypervParams
}

// GetHypervParamsOk returns a tuple with the HypervParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetHypervParamsOk() (*RecoverHyperVParams, bool) {
	if o == nil || IsNil(o.HypervParams) {
		return nil, false
	}
	return o.HypervParams, true
}

// HasHypervParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasHypervParams() bool {
	if o != nil && !IsNil(o.HypervParams) {
		return true
	}

	return false
}

// SetHypervParams gets a reference to the given RecoverHyperVParams and assigns it to the HypervParams field.
func (o *CreateRecoveryRequest) SetHypervParams(v RecoverHyperVParams) {
	o.HypervParams = &v
}

// GetIbmFlashSystemParams returns the IbmFlashSystemParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetIbmFlashSystemParams() RecoverPureParams {
	if o == nil || IsNil(o.IbmFlashSystemParams) {
		var ret RecoverPureParams
		return ret
	}
	return *o.IbmFlashSystemParams
}

// GetIbmFlashSystemParamsOk returns a tuple with the IbmFlashSystemParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetIbmFlashSystemParamsOk() (*RecoverPureParams, bool) {
	if o == nil || IsNil(o.IbmFlashSystemParams) {
		return nil, false
	}
	return o.IbmFlashSystemParams, true
}

// HasIbmFlashSystemParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasIbmFlashSystemParams() bool {
	if o != nil && !IsNil(o.IbmFlashSystemParams) {
		return true
	}

	return false
}

// SetIbmFlashSystemParams gets a reference to the given RecoverPureParams and assigns it to the IbmFlashSystemParams field.
func (o *CreateRecoveryRequest) SetIbmFlashSystemParams(v RecoverPureParams) {
	o.IbmFlashSystemParams = &v
}

// GetIsilonParams returns the IsilonParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetIsilonParams() RecoverIsilonParams {
	if o == nil || IsNil(o.IsilonParams) {
		var ret RecoverIsilonParams
		return ret
	}
	return *o.IsilonParams
}

// GetIsilonParamsOk returns a tuple with the IsilonParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetIsilonParamsOk() (*RecoverIsilonParams, bool) {
	if o == nil || IsNil(o.IsilonParams) {
		return nil, false
	}
	return o.IsilonParams, true
}

// HasIsilonParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasIsilonParams() bool {
	if o != nil && !IsNil(o.IsilonParams) {
		return true
	}

	return false
}

// SetIsilonParams gets a reference to the given RecoverIsilonParams and assigns it to the IsilonParams field.
func (o *CreateRecoveryRequest) SetIsilonParams(v RecoverIsilonParams) {
	o.IsilonParams = &v
}

// GetKubernetesParams returns the KubernetesParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetKubernetesParams() RecoverKubernetesParams {
	if o == nil || IsNil(o.KubernetesParams) {
		var ret RecoverKubernetesParams
		return ret
	}
	return *o.KubernetesParams
}

// GetKubernetesParamsOk returns a tuple with the KubernetesParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetKubernetesParamsOk() (*RecoverKubernetesParams, bool) {
	if o == nil || IsNil(o.KubernetesParams) {
		return nil, false
	}
	return o.KubernetesParams, true
}

// HasKubernetesParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasKubernetesParams() bool {
	if o != nil && !IsNil(o.KubernetesParams) {
		return true
	}

	return false
}

// SetKubernetesParams gets a reference to the given RecoverKubernetesParams and assigns it to the KubernetesParams field.
func (o *CreateRecoveryRequest) SetKubernetesParams(v RecoverKubernetesParams) {
	o.KubernetesParams = &v
}

// GetKvmParams returns the KvmParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetKvmParams() RecoverKvmParams {
	if o == nil || IsNil(o.KvmParams) {
		var ret RecoverKvmParams
		return ret
	}
	return *o.KvmParams
}

// GetKvmParamsOk returns a tuple with the KvmParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetKvmParamsOk() (*RecoverKvmParams, bool) {
	if o == nil || IsNil(o.KvmParams) {
		return nil, false
	}
	return o.KvmParams, true
}

// HasKvmParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasKvmParams() bool {
	if o != nil && !IsNil(o.KvmParams) {
		return true
	}

	return false
}

// SetKvmParams gets a reference to the given RecoverKvmParams and assigns it to the KvmParams field.
func (o *CreateRecoveryRequest) SetKvmParams(v RecoverKvmParams) {
	o.KvmParams = &v
}

// GetMongodbParams returns the MongodbParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetMongodbParams() MongodbParams {
	if o == nil || IsNil(o.MongodbParams) {
		var ret MongodbParams
		return ret
	}
	return *o.MongodbParams
}

// GetMongodbParamsOk returns a tuple with the MongodbParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetMongodbParamsOk() (*MongodbParams, bool) {
	if o == nil || IsNil(o.MongodbParams) {
		return nil, false
	}
	return o.MongodbParams, true
}

// HasMongodbParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasMongodbParams() bool {
	if o != nil && !IsNil(o.MongodbParams) {
		return true
	}

	return false
}

// SetMongodbParams gets a reference to the given MongodbParams and assigns it to the MongodbParams field.
func (o *CreateRecoveryRequest) SetMongodbParams(v MongodbParams) {
	o.MongodbParams = &v
}

// GetMssqlParams returns the MssqlParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetMssqlParams() RecoverSqlParams {
	if o == nil || IsNil(o.MssqlParams) {
		var ret RecoverSqlParams
		return ret
	}
	return *o.MssqlParams
}

// GetMssqlParamsOk returns a tuple with the MssqlParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetMssqlParamsOk() (*RecoverSqlParams, bool) {
	if o == nil || IsNil(o.MssqlParams) {
		return nil, false
	}
	return o.MssqlParams, true
}

// HasMssqlParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasMssqlParams() bool {
	if o != nil && !IsNil(o.MssqlParams) {
		return true
	}

	return false
}

// SetMssqlParams gets a reference to the given RecoverSqlParams and assigns it to the MssqlParams field.
func (o *CreateRecoveryRequest) SetMssqlParams(v RecoverSqlParams) {
	o.MssqlParams = &v
}

// GetNetappParams returns the NetappParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetNetappParams() RecoverNetappParams {
	if o == nil || IsNil(o.NetappParams) {
		var ret RecoverNetappParams
		return ret
	}
	return *o.NetappParams
}

// GetNetappParamsOk returns a tuple with the NetappParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetNetappParamsOk() (*RecoverNetappParams, bool) {
	if o == nil || IsNil(o.NetappParams) {
		return nil, false
	}
	return o.NetappParams, true
}

// HasNetappParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasNetappParams() bool {
	if o != nil && !IsNil(o.NetappParams) {
		return true
	}

	return false
}

// SetNetappParams gets a reference to the given RecoverNetappParams and assigns it to the NetappParams field.
func (o *CreateRecoveryRequest) SetNetappParams(v RecoverNetappParams) {
	o.NetappParams = &v
}

// GetOffice365Params returns the Office365Params field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetOffice365Params() RecoverO365Params {
	if o == nil || IsNil(o.Office365Params) {
		var ret RecoverO365Params
		return ret
	}
	return *o.Office365Params
}

// GetOffice365ParamsOk returns a tuple with the Office365Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetOffice365ParamsOk() (*RecoverO365Params, bool) {
	if o == nil || IsNil(o.Office365Params) {
		return nil, false
	}
	return o.Office365Params, true
}

// HasOffice365Params returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasOffice365Params() bool {
	if o != nil && !IsNil(o.Office365Params) {
		return true
	}

	return false
}

// SetOffice365Params gets a reference to the given RecoverO365Params and assigns it to the Office365Params field.
func (o *CreateRecoveryRequest) SetOffice365Params(v RecoverO365Params) {
	o.Office365Params = &v
}

// GetOracleParams returns the OracleParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetOracleParams() RecoverOracleParams {
	if o == nil || IsNil(o.OracleParams) {
		var ret RecoverOracleParams
		return ret
	}
	return *o.OracleParams
}

// GetOracleParamsOk returns a tuple with the OracleParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetOracleParamsOk() (*RecoverOracleParams, bool) {
	if o == nil || IsNil(o.OracleParams) {
		return nil, false
	}
	return o.OracleParams, true
}

// HasOracleParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasOracleParams() bool {
	if o != nil && !IsNil(o.OracleParams) {
		return true
	}

	return false
}

// SetOracleParams gets a reference to the given RecoverOracleParams and assigns it to the OracleParams field.
func (o *CreateRecoveryRequest) SetOracleParams(v RecoverOracleParams) {
	o.OracleParams = &v
}

// GetPhysicalParams returns the PhysicalParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetPhysicalParams() RecoverPhysicalParams {
	if o == nil || IsNil(o.PhysicalParams) {
		var ret RecoverPhysicalParams
		return ret
	}
	return *o.PhysicalParams
}

// GetPhysicalParamsOk returns a tuple with the PhysicalParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetPhysicalParamsOk() (*RecoverPhysicalParams, bool) {
	if o == nil || IsNil(o.PhysicalParams) {
		return nil, false
	}
	return o.PhysicalParams, true
}

// HasPhysicalParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasPhysicalParams() bool {
	if o != nil && !IsNil(o.PhysicalParams) {
		return true
	}

	return false
}

// SetPhysicalParams gets a reference to the given RecoverPhysicalParams and assigns it to the PhysicalParams field.
func (o *CreateRecoveryRequest) SetPhysicalParams(v RecoverPhysicalParams) {
	o.PhysicalParams = &v
}

// GetPureParams returns the PureParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetPureParams() RecoverPureParams {
	if o == nil || IsNil(o.PureParams) {
		var ret RecoverPureParams
		return ret
	}
	return *o.PureParams
}

// GetPureParamsOk returns a tuple with the PureParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetPureParamsOk() (*RecoverPureParams, bool) {
	if o == nil || IsNil(o.PureParams) {
		return nil, false
	}
	return o.PureParams, true
}

// HasPureParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasPureParams() bool {
	if o != nil && !IsNil(o.PureParams) {
		return true
	}

	return false
}

// SetPureParams gets a reference to the given RecoverPureParams and assigns it to the PureParams field.
func (o *CreateRecoveryRequest) SetPureParams(v RecoverPureParams) {
	o.PureParams = &v
}

// GetSapHanaParams returns the SapHanaParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetSapHanaParams() SapHanaParams {
	if o == nil || IsNil(o.SapHanaParams) {
		var ret SapHanaParams
		return ret
	}
	return *o.SapHanaParams
}

// GetSapHanaParamsOk returns a tuple with the SapHanaParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetSapHanaParamsOk() (*SapHanaParams, bool) {
	if o == nil || IsNil(o.SapHanaParams) {
		return nil, false
	}
	return o.SapHanaParams, true
}

// HasSapHanaParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasSapHanaParams() bool {
	if o != nil && !IsNil(o.SapHanaParams) {
		return true
	}

	return false
}

// SetSapHanaParams gets a reference to the given SapHanaParams and assigns it to the SapHanaParams field.
func (o *CreateRecoveryRequest) SetSapHanaParams(v SapHanaParams) {
	o.SapHanaParams = &v
}

// GetSfdcParams returns the SfdcParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetSfdcParams() RecoverSalesforceParams {
	if o == nil || IsNil(o.SfdcParams) {
		var ret RecoverSalesforceParams
		return ret
	}
	return *o.SfdcParams
}

// GetSfdcParamsOk returns a tuple with the SfdcParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetSfdcParamsOk() (*RecoverSalesforceParams, bool) {
	if o == nil || IsNil(o.SfdcParams) {
		return nil, false
	}
	return o.SfdcParams, true
}

// HasSfdcParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasSfdcParams() bool {
	if o != nil && !IsNil(o.SfdcParams) {
		return true
	}

	return false
}

// SetSfdcParams gets a reference to the given RecoverSalesforceParams and assigns it to the SfdcParams field.
func (o *CreateRecoveryRequest) SetSfdcParams(v RecoverSalesforceParams) {
	o.SfdcParams = &v
}

// GetUdaParams returns the UdaParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetUdaParams() UdaParams {
	if o == nil || IsNil(o.UdaParams) {
		var ret UdaParams
		return ret
	}
	return *o.UdaParams
}

// GetUdaParamsOk returns a tuple with the UdaParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetUdaParamsOk() (*UdaParams, bool) {
	if o == nil || IsNil(o.UdaParams) {
		return nil, false
	}
	return o.UdaParams, true
}

// HasUdaParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasUdaParams() bool {
	if o != nil && !IsNil(o.UdaParams) {
		return true
	}

	return false
}

// SetUdaParams gets a reference to the given UdaParams and assigns it to the UdaParams field.
func (o *CreateRecoveryRequest) SetUdaParams(v UdaParams) {
	o.UdaParams = &v
}

// GetViewParams returns the ViewParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetViewParams() RecoverViewParams {
	if o == nil || IsNil(o.ViewParams) {
		var ret RecoverViewParams
		return ret
	}
	return *o.ViewParams
}

// GetViewParamsOk returns a tuple with the ViewParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetViewParamsOk() (*RecoverViewParams, bool) {
	if o == nil || IsNil(o.ViewParams) {
		return nil, false
	}
	return o.ViewParams, true
}

// HasViewParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasViewParams() bool {
	if o != nil && !IsNil(o.ViewParams) {
		return true
	}

	return false
}

// SetViewParams gets a reference to the given RecoverViewParams and assigns it to the ViewParams field.
func (o *CreateRecoveryRequest) SetViewParams(v RecoverViewParams) {
	o.ViewParams = &v
}

// GetVmwareParams returns the VmwareParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequest) GetVmwareParams() RecoverVmwareParams {
	if o == nil || IsNil(o.VmwareParams) {
		var ret RecoverVmwareParams
		return ret
	}
	return *o.VmwareParams
}

// GetVmwareParamsOk returns a tuple with the VmwareParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequest) GetVmwareParamsOk() (*RecoverVmwareParams, bool) {
	if o == nil || IsNil(o.VmwareParams) {
		return nil, false
	}
	return o.VmwareParams, true
}

// HasVmwareParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequest) HasVmwareParams() bool {
	if o != nil && !IsNil(o.VmwareParams) {
		return true
	}

	return false
}

// SetVmwareParams gets a reference to the given RecoverVmwareParams and assigns it to the VmwareParams field.
func (o *CreateRecoveryRequest) SetVmwareParams(v RecoverVmwareParams) {
	o.VmwareParams = &v
}

func (o CreateRecoveryRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRecoveryRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name.Get()
	toSerialize["snapshotEnvironment"] = o.SnapshotEnvironment
	if !IsNil(o.AcropolisParams) {
		toSerialize["acropolisParams"] = o.AcropolisParams
	}
	if !IsNil(o.AwsParams) {
		toSerialize["awsParams"] = o.AwsParams
	}
	if !IsNil(o.AzureParams) {
		toSerialize["azureParams"] = o.AzureParams
	}
	if !IsNil(o.CassandraParams) {
		toSerialize["cassandraParams"] = o.CassandraParams
	}
	if !IsNil(o.CouchbaseParams) {
		toSerialize["couchbaseParams"] = o.CouchbaseParams
	}
	if !IsNil(o.ElastifileParams) {
		toSerialize["elastifileParams"] = o.ElastifileParams
	}
	if !IsNil(o.ExchangeParams) {
		toSerialize["exchangeParams"] = o.ExchangeParams
	}
	if !IsNil(o.ExperimentalAdapterParams) {
		toSerialize["experimentalAdapterParams"] = o.ExperimentalAdapterParams
	}
	if !IsNil(o.FlashbladeParams) {
		toSerialize["flashbladeParams"] = o.FlashbladeParams
	}
	if !IsNil(o.GcpParams) {
		toSerialize["gcpParams"] = o.GcpParams
	}
	if !IsNil(o.GenericNasParams) {
		toSerialize["genericNasParams"] = o.GenericNasParams
	}
	if !IsNil(o.GpfsParams) {
		toSerialize["gpfsParams"] = o.GpfsParams
	}
	if !IsNil(o.HbaseParams) {
		toSerialize["hbaseParams"] = o.HbaseParams
	}
	if !IsNil(o.HdfsParams) {
		toSerialize["hdfsParams"] = o.HdfsParams
	}
	if !IsNil(o.HiveParams) {
		toSerialize["hiveParams"] = o.HiveParams
	}
	if !IsNil(o.HypervParams) {
		toSerialize["hypervParams"] = o.HypervParams
	}
	if !IsNil(o.IbmFlashSystemParams) {
		toSerialize["ibmFlashSystemParams"] = o.IbmFlashSystemParams
	}
	if !IsNil(o.IsilonParams) {
		toSerialize["isilonParams"] = o.IsilonParams
	}
	if !IsNil(o.KubernetesParams) {
		toSerialize["kubernetesParams"] = o.KubernetesParams
	}
	if !IsNil(o.KvmParams) {
		toSerialize["kvmParams"] = o.KvmParams
	}
	if !IsNil(o.MongodbParams) {
		toSerialize["mongodbParams"] = o.MongodbParams
	}
	if !IsNil(o.MssqlParams) {
		toSerialize["mssqlParams"] = o.MssqlParams
	}
	if !IsNil(o.NetappParams) {
		toSerialize["netappParams"] = o.NetappParams
	}
	if !IsNil(o.Office365Params) {
		toSerialize["office365Params"] = o.Office365Params
	}
	if !IsNil(o.OracleParams) {
		toSerialize["oracleParams"] = o.OracleParams
	}
	if !IsNil(o.PhysicalParams) {
		toSerialize["physicalParams"] = o.PhysicalParams
	}
	if !IsNil(o.PureParams) {
		toSerialize["pureParams"] = o.PureParams
	}
	if !IsNil(o.SapHanaParams) {
		toSerialize["sapHanaParams"] = o.SapHanaParams
	}
	if !IsNil(o.SfdcParams) {
		toSerialize["sfdcParams"] = o.SfdcParams
	}
	if !IsNil(o.UdaParams) {
		toSerialize["udaParams"] = o.UdaParams
	}
	if !IsNil(o.ViewParams) {
		toSerialize["viewParams"] = o.ViewParams
	}
	if !IsNil(o.VmwareParams) {
		toSerialize["vmwareParams"] = o.VmwareParams
	}
	return toSerialize, nil
}

func (o *CreateRecoveryRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"snapshotEnvironment",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateRecoveryRequest := _CreateRecoveryRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateRecoveryRequest)

	if err != nil {
		return err
	}

	*o = CreateRecoveryRequest(varCreateRecoveryRequest)

	return err
}

type NullableCreateRecoveryRequest struct {
	value *CreateRecoveryRequest
	isSet bool
}

func (v NullableCreateRecoveryRequest) Get() *CreateRecoveryRequest {
	return v.value
}

func (v *NullableCreateRecoveryRequest) Set(val *CreateRecoveryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRecoveryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRecoveryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRecoveryRequest(val *CreateRecoveryRequest) *NullableCreateRecoveryRequest {
	return &NullableCreateRecoveryRequest{value: val, isSet: true}
}

func (v NullableCreateRecoveryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRecoveryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


