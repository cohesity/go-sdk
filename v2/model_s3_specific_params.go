/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the S3SpecificParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &S3SpecificParams{}

// S3SpecificParams Specifies the s3 specific parameters for source registration
type S3SpecificParams struct {
	// Specifies the ARN for S3 bucket where inventory reports are to be stored.
	InventoryReportBucket NullableString `json:"inventoryReportBucket,omitempty"`
	// The inventory bucket prefix where inventory reports are to be stored.
	InventoryReportPrefix NullableString `json:"inventoryReportPrefix,omitempty"`
}

// NewS3SpecificParams instantiates a new S3SpecificParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3SpecificParams() *S3SpecificParams {
	this := S3SpecificParams{}
	return &this
}

// NewS3SpecificParamsWithDefaults instantiates a new S3SpecificParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3SpecificParamsWithDefaults() *S3SpecificParams {
	this := S3SpecificParams{}
	return &this
}

// GetInventoryReportBucket returns the InventoryReportBucket field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *S3SpecificParams) GetInventoryReportBucket() string {
	if o == nil || IsNil(o.InventoryReportBucket.Get()) {
		var ret string
		return ret
	}
	return *o.InventoryReportBucket.Get()
}

// GetInventoryReportBucketOk returns a tuple with the InventoryReportBucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *S3SpecificParams) GetInventoryReportBucketOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InventoryReportBucket.Get(), o.InventoryReportBucket.IsSet()
}

// HasInventoryReportBucket returns a boolean if a field has been set.
func (o *S3SpecificParams) HasInventoryReportBucket() bool {
	if o != nil && o.InventoryReportBucket.IsSet() {
		return true
	}

	return false
}

// SetInventoryReportBucket gets a reference to the given NullableString and assigns it to the InventoryReportBucket field.
func (o *S3SpecificParams) SetInventoryReportBucket(v string) {
	o.InventoryReportBucket.Set(&v)
}
// SetInventoryReportBucketNil sets the value for InventoryReportBucket to be an explicit nil
func (o *S3SpecificParams) SetInventoryReportBucketNil() {
	o.InventoryReportBucket.Set(nil)
}

// UnsetInventoryReportBucket ensures that no value is present for InventoryReportBucket, not even an explicit nil
func (o *S3SpecificParams) UnsetInventoryReportBucket() {
	o.InventoryReportBucket.Unset()
}

// GetInventoryReportPrefix returns the InventoryReportPrefix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *S3SpecificParams) GetInventoryReportPrefix() string {
	if o == nil || IsNil(o.InventoryReportPrefix.Get()) {
		var ret string
		return ret
	}
	return *o.InventoryReportPrefix.Get()
}

// GetInventoryReportPrefixOk returns a tuple with the InventoryReportPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *S3SpecificParams) GetInventoryReportPrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InventoryReportPrefix.Get(), o.InventoryReportPrefix.IsSet()
}

// HasInventoryReportPrefix returns a boolean if a field has been set.
func (o *S3SpecificParams) HasInventoryReportPrefix() bool {
	if o != nil && o.InventoryReportPrefix.IsSet() {
		return true
	}

	return false
}

// SetInventoryReportPrefix gets a reference to the given NullableString and assigns it to the InventoryReportPrefix field.
func (o *S3SpecificParams) SetInventoryReportPrefix(v string) {
	o.InventoryReportPrefix.Set(&v)
}
// SetInventoryReportPrefixNil sets the value for InventoryReportPrefix to be an explicit nil
func (o *S3SpecificParams) SetInventoryReportPrefixNil() {
	o.InventoryReportPrefix.Set(nil)
}

// UnsetInventoryReportPrefix ensures that no value is present for InventoryReportPrefix, not even an explicit nil
func (o *S3SpecificParams) UnsetInventoryReportPrefix() {
	o.InventoryReportPrefix.Unset()
}

func (o S3SpecificParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o S3SpecificParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.InventoryReportBucket.IsSet() {
		toSerialize["inventoryReportBucket"] = o.InventoryReportBucket.Get()
	}
	if o.InventoryReportPrefix.IsSet() {
		toSerialize["inventoryReportPrefix"] = o.InventoryReportPrefix.Get()
	}
	return toSerialize, nil
}

type NullableS3SpecificParams struct {
	value *S3SpecificParams
	isSet bool
}

func (v NullableS3SpecificParams) Get() *S3SpecificParams {
	return v.value
}

func (v *NullableS3SpecificParams) Set(val *S3SpecificParams) {
	v.value = val
	v.isSet = true
}

func (v NullableS3SpecificParams) IsSet() bool {
	return v.isSet
}

func (v *NullableS3SpecificParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3SpecificParams(val *S3SpecificParams) *NullableS3SpecificParams {
	return &NullableS3SpecificParams{value: val, isSet: true}
}

func (v NullableS3SpecificParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3SpecificParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


