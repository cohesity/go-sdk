/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AixAgentParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AixAgentParams{}

// AixAgentParams Aix agent parameters.
type AixAgentParams struct {
	// Specifies the type of agent.
	AgentType string `json:"agentType"`
}

type _AixAgentParams AixAgentParams

// NewAixAgentParams instantiates a new AixAgentParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAixAgentParams(agentType string) *AixAgentParams {
	this := AixAgentParams{}
	this.AgentType = agentType
	return &this
}

// NewAixAgentParamsWithDefaults instantiates a new AixAgentParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAixAgentParamsWithDefaults() *AixAgentParams {
	this := AixAgentParams{}
	return &this
}

// GetAgentType returns the AgentType field value
func (o *AixAgentParams) GetAgentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AgentType
}

// GetAgentTypeOk returns a tuple with the AgentType field value
// and a boolean to check if the value has been set.
func (o *AixAgentParams) GetAgentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AgentType, true
}

// SetAgentType sets field value
func (o *AixAgentParams) SetAgentType(v string) {
	o.AgentType = v
}

func (o AixAgentParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AixAgentParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["agentType"] = o.AgentType
	return toSerialize, nil
}

func (o *AixAgentParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"agentType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAixAgentParams := _AixAgentParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAixAgentParams)

	if err != nil {
		return err
	}

	*o = AixAgentParams(varAixAgentParams)

	return err
}

type NullableAixAgentParams struct {
	value *AixAgentParams
	isSet bool
}

func (v NullableAixAgentParams) Get() *AixAgentParams {
	return v.value
}

func (v *NullableAixAgentParams) Set(val *AixAgentParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAixAgentParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAixAgentParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAixAgentParams(val *AixAgentParams) *NullableAixAgentParams {
	return &NullableAixAgentParams{value: val, isSet: true}
}

func (v NullableAixAgentParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAixAgentParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


