/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the IndexedObjectSnapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndexedObjectSnapshot{}

// IndexedObjectSnapshot Specifies a snapshot containing the indexed object.
type IndexedObjectSnapshot struct {
	// Specifies the number of runs have been executed before the run completed successfully.
	Attempts NullableInt64 `json:"attempts,omitempty"`
	ExternalTargetInfo NullableIndexedObjectSnapshotExternalTargetInfo `json:"externalTargetInfo,omitempty"`
	// Specifies the indexed object name.
	IndexedObjectName NullableString `json:"indexedObjectName,omitempty"`
	// Specifies the unique identifier from the source of the item associated with this particular snapshot. It can get changed between the snapshots and therefore will be required for recovery.
	IndexedObjectSourceUuid NullableString `json:"indexedObjectSourceUuid,omitempty"`
	// Specifies the source inode number of the file being recovered.
	InodeId NullableInt64 `json:"inodeId,omitempty"`
	// Specifies the last time file was modified in unix timestamp.
	LastModifiedTimeUsecs NullableInt64 `json:"lastModifiedTimeUsecs,omitempty"`
	// Specifies snapshot id of the object containing this indexed object.
	ObjectSnapshotid NullableString `json:"objectSnapshotid,omitempty"`
	// Specifies the protection group id which contains this snapshot.
	ProtectionGroupId NullableString `json:"protectionGroupId,omitempty"`
	// Specifies the protection group name which contains this snapshot.
	ProtectionGroupName NullableString `json:"protectionGroupName,omitempty"`
	// Specifies the type of protection run created this snapshot.
	RunType NullableString `json:"runType,omitempty"`
	// Specifies the indexed object size in bytes.
	SizeBytes NullableInt64 `json:"sizeBytes,omitempty"`
	// Specifies a unix timestamp when the object snapshot was taken in micro seconds.
	SnapshotTimestampUsecs NullableInt64 `json:"snapshotTimestampUsecs,omitempty"`
	// Specifies the storage domain id containing this snapshot.
	StorageDomainId NullableInt64 `json:"storageDomainId,omitempty"`
}

// NewIndexedObjectSnapshot instantiates a new IndexedObjectSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndexedObjectSnapshot() *IndexedObjectSnapshot {
	this := IndexedObjectSnapshot{}
	return &this
}

// NewIndexedObjectSnapshotWithDefaults instantiates a new IndexedObjectSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndexedObjectSnapshotWithDefaults() *IndexedObjectSnapshot {
	this := IndexedObjectSnapshot{}
	return &this
}

// GetAttempts returns the Attempts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexedObjectSnapshot) GetAttempts() int64 {
	if o == nil || IsNil(o.Attempts.Get()) {
		var ret int64
		return ret
	}
	return *o.Attempts.Get()
}

// GetAttemptsOk returns a tuple with the Attempts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexedObjectSnapshot) GetAttemptsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attempts.Get(), o.Attempts.IsSet()
}

// HasAttempts returns a boolean if a field has been set.
func (o *IndexedObjectSnapshot) HasAttempts() bool {
	if o != nil && o.Attempts.IsSet() {
		return true
	}

	return false
}

// SetAttempts gets a reference to the given NullableInt64 and assigns it to the Attempts field.
func (o *IndexedObjectSnapshot) SetAttempts(v int64) {
	o.Attempts.Set(&v)
}
// SetAttemptsNil sets the value for Attempts to be an explicit nil
func (o *IndexedObjectSnapshot) SetAttemptsNil() {
	o.Attempts.Set(nil)
}

// UnsetAttempts ensures that no value is present for Attempts, not even an explicit nil
func (o *IndexedObjectSnapshot) UnsetAttempts() {
	o.Attempts.Unset()
}

// GetExternalTargetInfo returns the ExternalTargetInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexedObjectSnapshot) GetExternalTargetInfo() IndexedObjectSnapshotExternalTargetInfo {
	if o == nil || IsNil(o.ExternalTargetInfo.Get()) {
		var ret IndexedObjectSnapshotExternalTargetInfo
		return ret
	}
	return *o.ExternalTargetInfo.Get()
}

// GetExternalTargetInfoOk returns a tuple with the ExternalTargetInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexedObjectSnapshot) GetExternalTargetInfoOk() (*IndexedObjectSnapshotExternalTargetInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalTargetInfo.Get(), o.ExternalTargetInfo.IsSet()
}

// HasExternalTargetInfo returns a boolean if a field has been set.
func (o *IndexedObjectSnapshot) HasExternalTargetInfo() bool {
	if o != nil && o.ExternalTargetInfo.IsSet() {
		return true
	}

	return false
}

// SetExternalTargetInfo gets a reference to the given NullableIndexedObjectSnapshotExternalTargetInfo and assigns it to the ExternalTargetInfo field.
func (o *IndexedObjectSnapshot) SetExternalTargetInfo(v IndexedObjectSnapshotExternalTargetInfo) {
	o.ExternalTargetInfo.Set(&v)
}
// SetExternalTargetInfoNil sets the value for ExternalTargetInfo to be an explicit nil
func (o *IndexedObjectSnapshot) SetExternalTargetInfoNil() {
	o.ExternalTargetInfo.Set(nil)
}

// UnsetExternalTargetInfo ensures that no value is present for ExternalTargetInfo, not even an explicit nil
func (o *IndexedObjectSnapshot) UnsetExternalTargetInfo() {
	o.ExternalTargetInfo.Unset()
}

// GetIndexedObjectName returns the IndexedObjectName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexedObjectSnapshot) GetIndexedObjectName() string {
	if o == nil || IsNil(o.IndexedObjectName.Get()) {
		var ret string
		return ret
	}
	return *o.IndexedObjectName.Get()
}

// GetIndexedObjectNameOk returns a tuple with the IndexedObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexedObjectSnapshot) GetIndexedObjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndexedObjectName.Get(), o.IndexedObjectName.IsSet()
}

// HasIndexedObjectName returns a boolean if a field has been set.
func (o *IndexedObjectSnapshot) HasIndexedObjectName() bool {
	if o != nil && o.IndexedObjectName.IsSet() {
		return true
	}

	return false
}

// SetIndexedObjectName gets a reference to the given NullableString and assigns it to the IndexedObjectName field.
func (o *IndexedObjectSnapshot) SetIndexedObjectName(v string) {
	o.IndexedObjectName.Set(&v)
}
// SetIndexedObjectNameNil sets the value for IndexedObjectName to be an explicit nil
func (o *IndexedObjectSnapshot) SetIndexedObjectNameNil() {
	o.IndexedObjectName.Set(nil)
}

// UnsetIndexedObjectName ensures that no value is present for IndexedObjectName, not even an explicit nil
func (o *IndexedObjectSnapshot) UnsetIndexedObjectName() {
	o.IndexedObjectName.Unset()
}

// GetIndexedObjectSourceUuid returns the IndexedObjectSourceUuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexedObjectSnapshot) GetIndexedObjectSourceUuid() string {
	if o == nil || IsNil(o.IndexedObjectSourceUuid.Get()) {
		var ret string
		return ret
	}
	return *o.IndexedObjectSourceUuid.Get()
}

// GetIndexedObjectSourceUuidOk returns a tuple with the IndexedObjectSourceUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexedObjectSnapshot) GetIndexedObjectSourceUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndexedObjectSourceUuid.Get(), o.IndexedObjectSourceUuid.IsSet()
}

// HasIndexedObjectSourceUuid returns a boolean if a field has been set.
func (o *IndexedObjectSnapshot) HasIndexedObjectSourceUuid() bool {
	if o != nil && o.IndexedObjectSourceUuid.IsSet() {
		return true
	}

	return false
}

// SetIndexedObjectSourceUuid gets a reference to the given NullableString and assigns it to the IndexedObjectSourceUuid field.
func (o *IndexedObjectSnapshot) SetIndexedObjectSourceUuid(v string) {
	o.IndexedObjectSourceUuid.Set(&v)
}
// SetIndexedObjectSourceUuidNil sets the value for IndexedObjectSourceUuid to be an explicit nil
func (o *IndexedObjectSnapshot) SetIndexedObjectSourceUuidNil() {
	o.IndexedObjectSourceUuid.Set(nil)
}

// UnsetIndexedObjectSourceUuid ensures that no value is present for IndexedObjectSourceUuid, not even an explicit nil
func (o *IndexedObjectSnapshot) UnsetIndexedObjectSourceUuid() {
	o.IndexedObjectSourceUuid.Unset()
}

// GetInodeId returns the InodeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexedObjectSnapshot) GetInodeId() int64 {
	if o == nil || IsNil(o.InodeId.Get()) {
		var ret int64
		return ret
	}
	return *o.InodeId.Get()
}

// GetInodeIdOk returns a tuple with the InodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexedObjectSnapshot) GetInodeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.InodeId.Get(), o.InodeId.IsSet()
}

// HasInodeId returns a boolean if a field has been set.
func (o *IndexedObjectSnapshot) HasInodeId() bool {
	if o != nil && o.InodeId.IsSet() {
		return true
	}

	return false
}

// SetInodeId gets a reference to the given NullableInt64 and assigns it to the InodeId field.
func (o *IndexedObjectSnapshot) SetInodeId(v int64) {
	o.InodeId.Set(&v)
}
// SetInodeIdNil sets the value for InodeId to be an explicit nil
func (o *IndexedObjectSnapshot) SetInodeIdNil() {
	o.InodeId.Set(nil)
}

// UnsetInodeId ensures that no value is present for InodeId, not even an explicit nil
func (o *IndexedObjectSnapshot) UnsetInodeId() {
	o.InodeId.Unset()
}

// GetLastModifiedTimeUsecs returns the LastModifiedTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexedObjectSnapshot) GetLastModifiedTimeUsecs() int64 {
	if o == nil || IsNil(o.LastModifiedTimeUsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.LastModifiedTimeUsecs.Get()
}

// GetLastModifiedTimeUsecsOk returns a tuple with the LastModifiedTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexedObjectSnapshot) GetLastModifiedTimeUsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModifiedTimeUsecs.Get(), o.LastModifiedTimeUsecs.IsSet()
}

// HasLastModifiedTimeUsecs returns a boolean if a field has been set.
func (o *IndexedObjectSnapshot) HasLastModifiedTimeUsecs() bool {
	if o != nil && o.LastModifiedTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedTimeUsecs gets a reference to the given NullableInt64 and assigns it to the LastModifiedTimeUsecs field.
func (o *IndexedObjectSnapshot) SetLastModifiedTimeUsecs(v int64) {
	o.LastModifiedTimeUsecs.Set(&v)
}
// SetLastModifiedTimeUsecsNil sets the value for LastModifiedTimeUsecs to be an explicit nil
func (o *IndexedObjectSnapshot) SetLastModifiedTimeUsecsNil() {
	o.LastModifiedTimeUsecs.Set(nil)
}

// UnsetLastModifiedTimeUsecs ensures that no value is present for LastModifiedTimeUsecs, not even an explicit nil
func (o *IndexedObjectSnapshot) UnsetLastModifiedTimeUsecs() {
	o.LastModifiedTimeUsecs.Unset()
}

// GetObjectSnapshotid returns the ObjectSnapshotid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexedObjectSnapshot) GetObjectSnapshotid() string {
	if o == nil || IsNil(o.ObjectSnapshotid.Get()) {
		var ret string
		return ret
	}
	return *o.ObjectSnapshotid.Get()
}

// GetObjectSnapshotidOk returns a tuple with the ObjectSnapshotid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexedObjectSnapshot) GetObjectSnapshotidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectSnapshotid.Get(), o.ObjectSnapshotid.IsSet()
}

// HasObjectSnapshotid returns a boolean if a field has been set.
func (o *IndexedObjectSnapshot) HasObjectSnapshotid() bool {
	if o != nil && o.ObjectSnapshotid.IsSet() {
		return true
	}

	return false
}

// SetObjectSnapshotid gets a reference to the given NullableString and assigns it to the ObjectSnapshotid field.
func (o *IndexedObjectSnapshot) SetObjectSnapshotid(v string) {
	o.ObjectSnapshotid.Set(&v)
}
// SetObjectSnapshotidNil sets the value for ObjectSnapshotid to be an explicit nil
func (o *IndexedObjectSnapshot) SetObjectSnapshotidNil() {
	o.ObjectSnapshotid.Set(nil)
}

// UnsetObjectSnapshotid ensures that no value is present for ObjectSnapshotid, not even an explicit nil
func (o *IndexedObjectSnapshot) UnsetObjectSnapshotid() {
	o.ObjectSnapshotid.Unset()
}

// GetProtectionGroupId returns the ProtectionGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexedObjectSnapshot) GetProtectionGroupId() string {
	if o == nil || IsNil(o.ProtectionGroupId.Get()) {
		var ret string
		return ret
	}
	return *o.ProtectionGroupId.Get()
}

// GetProtectionGroupIdOk returns a tuple with the ProtectionGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexedObjectSnapshot) GetProtectionGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProtectionGroupId.Get(), o.ProtectionGroupId.IsSet()
}

// HasProtectionGroupId returns a boolean if a field has been set.
func (o *IndexedObjectSnapshot) HasProtectionGroupId() bool {
	if o != nil && o.ProtectionGroupId.IsSet() {
		return true
	}

	return false
}

// SetProtectionGroupId gets a reference to the given NullableString and assigns it to the ProtectionGroupId field.
func (o *IndexedObjectSnapshot) SetProtectionGroupId(v string) {
	o.ProtectionGroupId.Set(&v)
}
// SetProtectionGroupIdNil sets the value for ProtectionGroupId to be an explicit nil
func (o *IndexedObjectSnapshot) SetProtectionGroupIdNil() {
	o.ProtectionGroupId.Set(nil)
}

// UnsetProtectionGroupId ensures that no value is present for ProtectionGroupId, not even an explicit nil
func (o *IndexedObjectSnapshot) UnsetProtectionGroupId() {
	o.ProtectionGroupId.Unset()
}

// GetProtectionGroupName returns the ProtectionGroupName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexedObjectSnapshot) GetProtectionGroupName() string {
	if o == nil || IsNil(o.ProtectionGroupName.Get()) {
		var ret string
		return ret
	}
	return *o.ProtectionGroupName.Get()
}

// GetProtectionGroupNameOk returns a tuple with the ProtectionGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexedObjectSnapshot) GetProtectionGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProtectionGroupName.Get(), o.ProtectionGroupName.IsSet()
}

// HasProtectionGroupName returns a boolean if a field has been set.
func (o *IndexedObjectSnapshot) HasProtectionGroupName() bool {
	if o != nil && o.ProtectionGroupName.IsSet() {
		return true
	}

	return false
}

// SetProtectionGroupName gets a reference to the given NullableString and assigns it to the ProtectionGroupName field.
func (o *IndexedObjectSnapshot) SetProtectionGroupName(v string) {
	o.ProtectionGroupName.Set(&v)
}
// SetProtectionGroupNameNil sets the value for ProtectionGroupName to be an explicit nil
func (o *IndexedObjectSnapshot) SetProtectionGroupNameNil() {
	o.ProtectionGroupName.Set(nil)
}

// UnsetProtectionGroupName ensures that no value is present for ProtectionGroupName, not even an explicit nil
func (o *IndexedObjectSnapshot) UnsetProtectionGroupName() {
	o.ProtectionGroupName.Unset()
}

// GetRunType returns the RunType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexedObjectSnapshot) GetRunType() string {
	if o == nil || IsNil(o.RunType.Get()) {
		var ret string
		return ret
	}
	return *o.RunType.Get()
}

// GetRunTypeOk returns a tuple with the RunType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexedObjectSnapshot) GetRunTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunType.Get(), o.RunType.IsSet()
}

// HasRunType returns a boolean if a field has been set.
func (o *IndexedObjectSnapshot) HasRunType() bool {
	if o != nil && o.RunType.IsSet() {
		return true
	}

	return false
}

// SetRunType gets a reference to the given NullableString and assigns it to the RunType field.
func (o *IndexedObjectSnapshot) SetRunType(v string) {
	o.RunType.Set(&v)
}
// SetRunTypeNil sets the value for RunType to be an explicit nil
func (o *IndexedObjectSnapshot) SetRunTypeNil() {
	o.RunType.Set(nil)
}

// UnsetRunType ensures that no value is present for RunType, not even an explicit nil
func (o *IndexedObjectSnapshot) UnsetRunType() {
	o.RunType.Unset()
}

// GetSizeBytes returns the SizeBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexedObjectSnapshot) GetSizeBytes() int64 {
	if o == nil || IsNil(o.SizeBytes.Get()) {
		var ret int64
		return ret
	}
	return *o.SizeBytes.Get()
}

// GetSizeBytesOk returns a tuple with the SizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexedObjectSnapshot) GetSizeBytesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SizeBytes.Get(), o.SizeBytes.IsSet()
}

// HasSizeBytes returns a boolean if a field has been set.
func (o *IndexedObjectSnapshot) HasSizeBytes() bool {
	if o != nil && o.SizeBytes.IsSet() {
		return true
	}

	return false
}

// SetSizeBytes gets a reference to the given NullableInt64 and assigns it to the SizeBytes field.
func (o *IndexedObjectSnapshot) SetSizeBytes(v int64) {
	o.SizeBytes.Set(&v)
}
// SetSizeBytesNil sets the value for SizeBytes to be an explicit nil
func (o *IndexedObjectSnapshot) SetSizeBytesNil() {
	o.SizeBytes.Set(nil)
}

// UnsetSizeBytes ensures that no value is present for SizeBytes, not even an explicit nil
func (o *IndexedObjectSnapshot) UnsetSizeBytes() {
	o.SizeBytes.Unset()
}

// GetSnapshotTimestampUsecs returns the SnapshotTimestampUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexedObjectSnapshot) GetSnapshotTimestampUsecs() int64 {
	if o == nil || IsNil(o.SnapshotTimestampUsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.SnapshotTimestampUsecs.Get()
}

// GetSnapshotTimestampUsecsOk returns a tuple with the SnapshotTimestampUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexedObjectSnapshot) GetSnapshotTimestampUsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SnapshotTimestampUsecs.Get(), o.SnapshotTimestampUsecs.IsSet()
}

// HasSnapshotTimestampUsecs returns a boolean if a field has been set.
func (o *IndexedObjectSnapshot) HasSnapshotTimestampUsecs() bool {
	if o != nil && o.SnapshotTimestampUsecs.IsSet() {
		return true
	}

	return false
}

// SetSnapshotTimestampUsecs gets a reference to the given NullableInt64 and assigns it to the SnapshotTimestampUsecs field.
func (o *IndexedObjectSnapshot) SetSnapshotTimestampUsecs(v int64) {
	o.SnapshotTimestampUsecs.Set(&v)
}
// SetSnapshotTimestampUsecsNil sets the value for SnapshotTimestampUsecs to be an explicit nil
func (o *IndexedObjectSnapshot) SetSnapshotTimestampUsecsNil() {
	o.SnapshotTimestampUsecs.Set(nil)
}

// UnsetSnapshotTimestampUsecs ensures that no value is present for SnapshotTimestampUsecs, not even an explicit nil
func (o *IndexedObjectSnapshot) UnsetSnapshotTimestampUsecs() {
	o.SnapshotTimestampUsecs.Unset()
}

// GetStorageDomainId returns the StorageDomainId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexedObjectSnapshot) GetStorageDomainId() int64 {
	if o == nil || IsNil(o.StorageDomainId.Get()) {
		var ret int64
		return ret
	}
	return *o.StorageDomainId.Get()
}

// GetStorageDomainIdOk returns a tuple with the StorageDomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexedObjectSnapshot) GetStorageDomainIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageDomainId.Get(), o.StorageDomainId.IsSet()
}

// HasStorageDomainId returns a boolean if a field has been set.
func (o *IndexedObjectSnapshot) HasStorageDomainId() bool {
	if o != nil && o.StorageDomainId.IsSet() {
		return true
	}

	return false
}

// SetStorageDomainId gets a reference to the given NullableInt64 and assigns it to the StorageDomainId field.
func (o *IndexedObjectSnapshot) SetStorageDomainId(v int64) {
	o.StorageDomainId.Set(&v)
}
// SetStorageDomainIdNil sets the value for StorageDomainId to be an explicit nil
func (o *IndexedObjectSnapshot) SetStorageDomainIdNil() {
	o.StorageDomainId.Set(nil)
}

// UnsetStorageDomainId ensures that no value is present for StorageDomainId, not even an explicit nil
func (o *IndexedObjectSnapshot) UnsetStorageDomainId() {
	o.StorageDomainId.Unset()
}

func (o IndexedObjectSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndexedObjectSnapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Attempts.IsSet() {
		toSerialize["attempts"] = o.Attempts.Get()
	}
	if o.ExternalTargetInfo.IsSet() {
		toSerialize["externalTargetInfo"] = o.ExternalTargetInfo.Get()
	}
	if o.IndexedObjectName.IsSet() {
		toSerialize["indexedObjectName"] = o.IndexedObjectName.Get()
	}
	if o.IndexedObjectSourceUuid.IsSet() {
		toSerialize["indexedObjectSourceUuid"] = o.IndexedObjectSourceUuid.Get()
	}
	if o.InodeId.IsSet() {
		toSerialize["inodeId"] = o.InodeId.Get()
	}
	if o.LastModifiedTimeUsecs.IsSet() {
		toSerialize["lastModifiedTimeUsecs"] = o.LastModifiedTimeUsecs.Get()
	}
	if o.ObjectSnapshotid.IsSet() {
		toSerialize["objectSnapshotid"] = o.ObjectSnapshotid.Get()
	}
	if o.ProtectionGroupId.IsSet() {
		toSerialize["protectionGroupId"] = o.ProtectionGroupId.Get()
	}
	if o.ProtectionGroupName.IsSet() {
		toSerialize["protectionGroupName"] = o.ProtectionGroupName.Get()
	}
	if o.RunType.IsSet() {
		toSerialize["runType"] = o.RunType.Get()
	}
	if o.SizeBytes.IsSet() {
		toSerialize["sizeBytes"] = o.SizeBytes.Get()
	}
	if o.SnapshotTimestampUsecs.IsSet() {
		toSerialize["snapshotTimestampUsecs"] = o.SnapshotTimestampUsecs.Get()
	}
	if o.StorageDomainId.IsSet() {
		toSerialize["storageDomainId"] = o.StorageDomainId.Get()
	}
	return toSerialize, nil
}

type NullableIndexedObjectSnapshot struct {
	value *IndexedObjectSnapshot
	isSet bool
}

func (v NullableIndexedObjectSnapshot) Get() *IndexedObjectSnapshot {
	return v.value
}

func (v *NullableIndexedObjectSnapshot) Set(val *IndexedObjectSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableIndexedObjectSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableIndexedObjectSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndexedObjectSnapshot(val *IndexedObjectSnapshot) *NullableIndexedObjectSnapshot {
	return &NullableIndexedObjectSnapshot{value: val, isSet: true}
}

func (v NullableIndexedObjectSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndexedObjectSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


