/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the SanEnvJobParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SanEnvJobParams{}

// SanEnvJobParams Specifies job parameters applicable for all SAN Environment types Protection Sources in a Protection Job.
type SanEnvJobParams struct {
	// Specifies how many recent snapshots of each backed up entity to retain on the primary environment. If not specified, then snapshots will not be be deleted from the primary environment.
	MaxSnapshotsOnPrimary NullableInt64 `json:"maxSnapshotsOnPrimary,omitempty"`
}

// NewSanEnvJobParams instantiates a new SanEnvJobParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSanEnvJobParams() *SanEnvJobParams {
	this := SanEnvJobParams{}
	return &this
}

// NewSanEnvJobParamsWithDefaults instantiates a new SanEnvJobParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSanEnvJobParamsWithDefaults() *SanEnvJobParams {
	this := SanEnvJobParams{}
	return &this
}

// GetMaxSnapshotsOnPrimary returns the MaxSnapshotsOnPrimary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SanEnvJobParams) GetMaxSnapshotsOnPrimary() int64 {
	if o == nil || IsNil(o.MaxSnapshotsOnPrimary.Get()) {
		var ret int64
		return ret
	}
	return *o.MaxSnapshotsOnPrimary.Get()
}

// GetMaxSnapshotsOnPrimaryOk returns a tuple with the MaxSnapshotsOnPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SanEnvJobParams) GetMaxSnapshotsOnPrimaryOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxSnapshotsOnPrimary.Get(), o.MaxSnapshotsOnPrimary.IsSet()
}

// HasMaxSnapshotsOnPrimary returns a boolean if a field has been set.
func (o *SanEnvJobParams) HasMaxSnapshotsOnPrimary() bool {
	if o != nil && o.MaxSnapshotsOnPrimary.IsSet() {
		return true
	}

	return false
}

// SetMaxSnapshotsOnPrimary gets a reference to the given NullableInt64 and assigns it to the MaxSnapshotsOnPrimary field.
func (o *SanEnvJobParams) SetMaxSnapshotsOnPrimary(v int64) {
	o.MaxSnapshotsOnPrimary.Set(&v)
}
// SetMaxSnapshotsOnPrimaryNil sets the value for MaxSnapshotsOnPrimary to be an explicit nil
func (o *SanEnvJobParams) SetMaxSnapshotsOnPrimaryNil() {
	o.MaxSnapshotsOnPrimary.Set(nil)
}

// UnsetMaxSnapshotsOnPrimary ensures that no value is present for MaxSnapshotsOnPrimary, not even an explicit nil
func (o *SanEnvJobParams) UnsetMaxSnapshotsOnPrimary() {
	o.MaxSnapshotsOnPrimary.Unset()
}

func (o SanEnvJobParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SanEnvJobParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxSnapshotsOnPrimary.IsSet() {
		toSerialize["maxSnapshotsOnPrimary"] = o.MaxSnapshotsOnPrimary.Get()
	}
	return toSerialize, nil
}

type NullableSanEnvJobParams struct {
	value *SanEnvJobParams
	isSet bool
}

func (v NullableSanEnvJobParams) Get() *SanEnvJobParams {
	return v.value
}

func (v *NullableSanEnvJobParams) Set(val *SanEnvJobParams) {
	v.value = val
	v.isSet = true
}

func (v NullableSanEnvJobParams) IsSet() bool {
	return v.isSet
}

func (v *NullableSanEnvJobParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSanEnvJobParams(val *SanEnvJobParams) *NullableSanEnvJobParams {
	return &NullableSanEnvJobParams{value: val, isSet: true}
}

func (v NullableSanEnvJobParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSanEnvJobParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


