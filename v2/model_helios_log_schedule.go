/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the HeliosLogSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeliosLogSchedule{}

// HeliosLogSchedule Specifies settings that defines how frequent log backup will be performed for a Protection Group.
type HeliosLogSchedule struct {
	HourSchedule *HeliosHourSchedule `json:"hourSchedule,omitempty"`
	MinuteSchedule *HeliosMinuteSchedule `json:"minuteSchedule,omitempty"`
	// Specifies how often to start new Protection Group Runs of a Protection Group. <br>'Minutes' specifies that Protection Group run starts periodically after certain number of minutes specified in 'frequency' field. <br>'Hours' specifies that Protection Group run starts periodically after certain number of hours specified in 'frequency' field.
	Unit NullableString `json:"unit,omitempty"`
}

// NewHeliosLogSchedule instantiates a new HeliosLogSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosLogSchedule() *HeliosLogSchedule {
	this := HeliosLogSchedule{}
	return &this
}

// NewHeliosLogScheduleWithDefaults instantiates a new HeliosLogSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosLogScheduleWithDefaults() *HeliosLogSchedule {
	this := HeliosLogSchedule{}
	return &this
}

// GetHourSchedule returns the HourSchedule field value if set, zero value otherwise.
func (o *HeliosLogSchedule) GetHourSchedule() HeliosHourSchedule {
	if o == nil || IsNil(o.HourSchedule) {
		var ret HeliosHourSchedule
		return ret
	}
	return *o.HourSchedule
}

// GetHourScheduleOk returns a tuple with the HourSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosLogSchedule) GetHourScheduleOk() (*HeliosHourSchedule, bool) {
	if o == nil || IsNil(o.HourSchedule) {
		return nil, false
	}
	return o.HourSchedule, true
}

// HasHourSchedule returns a boolean if a field has been set.
func (o *HeliosLogSchedule) HasHourSchedule() bool {
	if o != nil && !IsNil(o.HourSchedule) {
		return true
	}

	return false
}

// SetHourSchedule gets a reference to the given HeliosHourSchedule and assigns it to the HourSchedule field.
func (o *HeliosLogSchedule) SetHourSchedule(v HeliosHourSchedule) {
	o.HourSchedule = &v
}

// GetMinuteSchedule returns the MinuteSchedule field value if set, zero value otherwise.
func (o *HeliosLogSchedule) GetMinuteSchedule() HeliosMinuteSchedule {
	if o == nil || IsNil(o.MinuteSchedule) {
		var ret HeliosMinuteSchedule
		return ret
	}
	return *o.MinuteSchedule
}

// GetMinuteScheduleOk returns a tuple with the MinuteSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosLogSchedule) GetMinuteScheduleOk() (*HeliosMinuteSchedule, bool) {
	if o == nil || IsNil(o.MinuteSchedule) {
		return nil, false
	}
	return o.MinuteSchedule, true
}

// HasMinuteSchedule returns a boolean if a field has been set.
func (o *HeliosLogSchedule) HasMinuteSchedule() bool {
	if o != nil && !IsNil(o.MinuteSchedule) {
		return true
	}

	return false
}

// SetMinuteSchedule gets a reference to the given HeliosMinuteSchedule and assigns it to the MinuteSchedule field.
func (o *HeliosLogSchedule) SetMinuteSchedule(v HeliosMinuteSchedule) {
	o.MinuteSchedule = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosLogSchedule) GetUnit() string {
	if o == nil || IsNil(o.Unit.Get()) {
		var ret string
		return ret
	}
	return *o.Unit.Get()
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosLogSchedule) GetUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Unit.Get(), o.Unit.IsSet()
}

// HasUnit returns a boolean if a field has been set.
func (o *HeliosLogSchedule) HasUnit() bool {
	if o != nil && o.Unit.IsSet() {
		return true
	}

	return false
}

// SetUnit gets a reference to the given NullableString and assigns it to the Unit field.
func (o *HeliosLogSchedule) SetUnit(v string) {
	o.Unit.Set(&v)
}
// SetUnitNil sets the value for Unit to be an explicit nil
func (o *HeliosLogSchedule) SetUnitNil() {
	o.Unit.Set(nil)
}

// UnsetUnit ensures that no value is present for Unit, not even an explicit nil
func (o *HeliosLogSchedule) UnsetUnit() {
	o.Unit.Unset()
}

func (o HeliosLogSchedule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeliosLogSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HourSchedule) {
		toSerialize["hourSchedule"] = o.HourSchedule
	}
	if !IsNil(o.MinuteSchedule) {
		toSerialize["minuteSchedule"] = o.MinuteSchedule
	}
	if o.Unit.IsSet() {
		toSerialize["unit"] = o.Unit.Get()
	}
	return toSerialize, nil
}

type NullableHeliosLogSchedule struct {
	value *HeliosLogSchedule
	isSet bool
}

func (v NullableHeliosLogSchedule) Get() *HeliosLogSchedule {
	return v.value
}

func (v *NullableHeliosLogSchedule) Set(val *HeliosLogSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosLogSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosLogSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosLogSchedule(val *HeliosLogSchedule) *NullableHeliosLogSchedule {
	return &NullableHeliosLogSchedule{value: val, isSet: true}
}

func (v NullableHeliosLogSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosLogSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


