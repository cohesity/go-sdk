/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the MaintenanceModeConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MaintenanceModeConfig{}

// MaintenanceModeConfig Specifies the entity metadata for maintenance mode.
type MaintenanceModeConfig struct {
	// Specifies the absolute intervals where the maintenance schedule is valid, i.e. maintenance_shedule is considered only for these time ranges. (For example, if there is one time range with [now_usecs, now_usecs + 10 days], the action will be done during the maintenance_schedule for the next 10 days.)The start time must be specified. The end time can be -1 which would denote an indefinite maintenance mode.
	ActivationTimeIntervals []TimeRangeUsecs `json:"activationTimeIntervals,omitempty"`
	MaintenanceSchedule *Schedule `json:"maintenanceSchedule,omitempty"`
	// User provided message associated with this maintenance mode.
	UserMessage *string `json:"userMessage,omitempty"`
	// Specifies the type of intervention for different workflows when the source goes into maintenance mode.
	WorkflowInterventionSpecList []WorkflowInterventionSpec `json:"workflowInterventionSpecList,omitempty"`
}

// NewMaintenanceModeConfig instantiates a new MaintenanceModeConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaintenanceModeConfig() *MaintenanceModeConfig {
	this := MaintenanceModeConfig{}
	return &this
}

// NewMaintenanceModeConfigWithDefaults instantiates a new MaintenanceModeConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaintenanceModeConfigWithDefaults() *MaintenanceModeConfig {
	this := MaintenanceModeConfig{}
	return &this
}

// GetActivationTimeIntervals returns the ActivationTimeIntervals field value if set, zero value otherwise.
func (o *MaintenanceModeConfig) GetActivationTimeIntervals() []TimeRangeUsecs {
	if o == nil || IsNil(o.ActivationTimeIntervals) {
		var ret []TimeRangeUsecs
		return ret
	}
	return o.ActivationTimeIntervals
}

// GetActivationTimeIntervalsOk returns a tuple with the ActivationTimeIntervals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceModeConfig) GetActivationTimeIntervalsOk() ([]TimeRangeUsecs, bool) {
	if o == nil || IsNil(o.ActivationTimeIntervals) {
		return nil, false
	}
	return o.ActivationTimeIntervals, true
}

// HasActivationTimeIntervals returns a boolean if a field has been set.
func (o *MaintenanceModeConfig) HasActivationTimeIntervals() bool {
	if o != nil && !IsNil(o.ActivationTimeIntervals) {
		return true
	}

	return false
}

// SetActivationTimeIntervals gets a reference to the given []TimeRangeUsecs and assigns it to the ActivationTimeIntervals field.
func (o *MaintenanceModeConfig) SetActivationTimeIntervals(v []TimeRangeUsecs) {
	o.ActivationTimeIntervals = v
}

// GetMaintenanceSchedule returns the MaintenanceSchedule field value if set, zero value otherwise.
func (o *MaintenanceModeConfig) GetMaintenanceSchedule() Schedule {
	if o == nil || IsNil(o.MaintenanceSchedule) {
		var ret Schedule
		return ret
	}
	return *o.MaintenanceSchedule
}

// GetMaintenanceScheduleOk returns a tuple with the MaintenanceSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceModeConfig) GetMaintenanceScheduleOk() (*Schedule, bool) {
	if o == nil || IsNil(o.MaintenanceSchedule) {
		return nil, false
	}
	return o.MaintenanceSchedule, true
}

// HasMaintenanceSchedule returns a boolean if a field has been set.
func (o *MaintenanceModeConfig) HasMaintenanceSchedule() bool {
	if o != nil && !IsNil(o.MaintenanceSchedule) {
		return true
	}

	return false
}

// SetMaintenanceSchedule gets a reference to the given Schedule and assigns it to the MaintenanceSchedule field.
func (o *MaintenanceModeConfig) SetMaintenanceSchedule(v Schedule) {
	o.MaintenanceSchedule = &v
}

// GetUserMessage returns the UserMessage field value if set, zero value otherwise.
func (o *MaintenanceModeConfig) GetUserMessage() string {
	if o == nil || IsNil(o.UserMessage) {
		var ret string
		return ret
	}
	return *o.UserMessage
}

// GetUserMessageOk returns a tuple with the UserMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceModeConfig) GetUserMessageOk() (*string, bool) {
	if o == nil || IsNil(o.UserMessage) {
		return nil, false
	}
	return o.UserMessage, true
}

// HasUserMessage returns a boolean if a field has been set.
func (o *MaintenanceModeConfig) HasUserMessage() bool {
	if o != nil && !IsNil(o.UserMessage) {
		return true
	}

	return false
}

// SetUserMessage gets a reference to the given string and assigns it to the UserMessage field.
func (o *MaintenanceModeConfig) SetUserMessage(v string) {
	o.UserMessage = &v
}

// GetWorkflowInterventionSpecList returns the WorkflowInterventionSpecList field value if set, zero value otherwise.
func (o *MaintenanceModeConfig) GetWorkflowInterventionSpecList() []WorkflowInterventionSpec {
	if o == nil || IsNil(o.WorkflowInterventionSpecList) {
		var ret []WorkflowInterventionSpec
		return ret
	}
	return o.WorkflowInterventionSpecList
}

// GetWorkflowInterventionSpecListOk returns a tuple with the WorkflowInterventionSpecList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceModeConfig) GetWorkflowInterventionSpecListOk() ([]WorkflowInterventionSpec, bool) {
	if o == nil || IsNil(o.WorkflowInterventionSpecList) {
		return nil, false
	}
	return o.WorkflowInterventionSpecList, true
}

// HasWorkflowInterventionSpecList returns a boolean if a field has been set.
func (o *MaintenanceModeConfig) HasWorkflowInterventionSpecList() bool {
	if o != nil && !IsNil(o.WorkflowInterventionSpecList) {
		return true
	}

	return false
}

// SetWorkflowInterventionSpecList gets a reference to the given []WorkflowInterventionSpec and assigns it to the WorkflowInterventionSpecList field.
func (o *MaintenanceModeConfig) SetWorkflowInterventionSpecList(v []WorkflowInterventionSpec) {
	o.WorkflowInterventionSpecList = v
}

func (o MaintenanceModeConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MaintenanceModeConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActivationTimeIntervals) {
		toSerialize["activationTimeIntervals"] = o.ActivationTimeIntervals
	}
	if !IsNil(o.MaintenanceSchedule) {
		toSerialize["maintenanceSchedule"] = o.MaintenanceSchedule
	}
	if !IsNil(o.UserMessage) {
		toSerialize["userMessage"] = o.UserMessage
	}
	if !IsNil(o.WorkflowInterventionSpecList) {
		toSerialize["workflowInterventionSpecList"] = o.WorkflowInterventionSpecList
	}
	return toSerialize, nil
}

type NullableMaintenanceModeConfig struct {
	value *MaintenanceModeConfig
	isSet bool
}

func (v NullableMaintenanceModeConfig) Get() *MaintenanceModeConfig {
	return v.value
}

func (v *NullableMaintenanceModeConfig) Set(val *MaintenanceModeConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableMaintenanceModeConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableMaintenanceModeConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaintenanceModeConfig(val *MaintenanceModeConfig) *NullableMaintenanceModeConfig {
	return &NullableMaintenanceModeConfig{value: val, isSet: true}
}

func (v NullableMaintenanceModeConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaintenanceModeConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


