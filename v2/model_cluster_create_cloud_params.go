/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ClusterCreateCloudParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterCreateCloudParams{}

// ClusterCreateCloudParams Params for Cloud Edition Cluster Creation
type ClusterCreateCloudParams struct {
	NodeIps []string `json:"nodeIps,omitempty"`
}

// NewClusterCreateCloudParams instantiates a new ClusterCreateCloudParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterCreateCloudParams() *ClusterCreateCloudParams {
	this := ClusterCreateCloudParams{}
	return &this
}

// NewClusterCreateCloudParamsWithDefaults instantiates a new ClusterCreateCloudParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterCreateCloudParamsWithDefaults() *ClusterCreateCloudParams {
	this := ClusterCreateCloudParams{}
	return &this
}

// GetNodeIps returns the NodeIps field value if set, zero value otherwise.
func (o *ClusterCreateCloudParams) GetNodeIps() []string {
	if o == nil || IsNil(o.NodeIps) {
		var ret []string
		return ret
	}
	return o.NodeIps
}

// GetNodeIpsOk returns a tuple with the NodeIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterCreateCloudParams) GetNodeIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.NodeIps) {
		return nil, false
	}
	return o.NodeIps, true
}

// HasNodeIps returns a boolean if a field has been set.
func (o *ClusterCreateCloudParams) HasNodeIps() bool {
	if o != nil && !IsNil(o.NodeIps) {
		return true
	}

	return false
}

// SetNodeIps gets a reference to the given []string and assigns it to the NodeIps field.
func (o *ClusterCreateCloudParams) SetNodeIps(v []string) {
	o.NodeIps = v
}

func (o ClusterCreateCloudParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterCreateCloudParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NodeIps) {
		toSerialize["nodeIps"] = o.NodeIps
	}
	return toSerialize, nil
}

type NullableClusterCreateCloudParams struct {
	value *ClusterCreateCloudParams
	isSet bool
}

func (v NullableClusterCreateCloudParams) Get() *ClusterCreateCloudParams {
	return v.value
}

func (v *NullableClusterCreateCloudParams) Set(val *ClusterCreateCloudParams) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterCreateCloudParams) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterCreateCloudParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterCreateCloudParams(val *ClusterCreateCloudParams) *NullableClusterCreateCloudParams {
	return &NullableClusterCreateCloudParams{value: val, isSet: true}
}

func (v NullableClusterCreateCloudParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterCreateCloudParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


