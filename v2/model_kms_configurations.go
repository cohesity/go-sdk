/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the KmsConfigurations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KmsConfigurations{}

// KmsConfigurations Key management systems configured on the cluster.
type KmsConfigurations struct {
	// Key management systems configured on the cluster.
	KeyManagementSystems []KmsConfiguration `json:"keyManagementSystems,omitempty"`
}

// NewKmsConfigurations instantiates a new KmsConfigurations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKmsConfigurations() *KmsConfigurations {
	this := KmsConfigurations{}
	return &this
}

// NewKmsConfigurationsWithDefaults instantiates a new KmsConfigurations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKmsConfigurationsWithDefaults() *KmsConfigurations {
	this := KmsConfigurations{}
	return &this
}

// GetKeyManagementSystems returns the KeyManagementSystems field value if set, zero value otherwise.
func (o *KmsConfigurations) GetKeyManagementSystems() []KmsConfiguration {
	if o == nil || IsNil(o.KeyManagementSystems) {
		var ret []KmsConfiguration
		return ret
	}
	return o.KeyManagementSystems
}

// GetKeyManagementSystemsOk returns a tuple with the KeyManagementSystems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KmsConfigurations) GetKeyManagementSystemsOk() ([]KmsConfiguration, bool) {
	if o == nil || IsNil(o.KeyManagementSystems) {
		return nil, false
	}
	return o.KeyManagementSystems, true
}

// HasKeyManagementSystems returns a boolean if a field has been set.
func (o *KmsConfigurations) HasKeyManagementSystems() bool {
	if o != nil && !IsNil(o.KeyManagementSystems) {
		return true
	}

	return false
}

// SetKeyManagementSystems gets a reference to the given []KmsConfiguration and assigns it to the KeyManagementSystems field.
func (o *KmsConfigurations) SetKeyManagementSystems(v []KmsConfiguration) {
	o.KeyManagementSystems = v
}

func (o KmsConfigurations) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KmsConfigurations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.KeyManagementSystems) {
		toSerialize["keyManagementSystems"] = o.KeyManagementSystems
	}
	return toSerialize, nil
}

type NullableKmsConfigurations struct {
	value *KmsConfigurations
	isSet bool
}

func (v NullableKmsConfigurations) Get() *KmsConfigurations {
	return v.value
}

func (v *NullableKmsConfigurations) Set(val *KmsConfigurations) {
	v.value = val
	v.isSet = true
}

func (v NullableKmsConfigurations) IsSet() bool {
	return v.isSet
}

func (v *NullableKmsConfigurations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKmsConfigurations(val *KmsConfigurations) *NullableKmsConfigurations {
	return &NullableKmsConfigurations{value: val, isSet: true}
}

func (v NullableKmsConfigurations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKmsConfigurations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


