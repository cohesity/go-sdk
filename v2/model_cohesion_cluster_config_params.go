/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CohesionClusterConfigParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CohesionClusterConfigParams{}

// CohesionClusterConfigParams Specifies the cohesion specific parameters.
type CohesionClusterConfigParams struct {
	// Specifies the global unique appliance ID issued by AWS.
	ApplianceId NullableString `json:"applianceId,omitempty"`
	// Specifies the AWS backup control plane URL.
	AwsControlPlaneUrl NullableString `json:"awsControlPlaneUrl,omitempty"`
	// Specifies the AWS region to which this appliance is connected to.
	AwsRegionId NullableString `json:"awsRegionId,omitempty"`
	// Specifies the AWS Simple Queue Service URL from which the appliance receives the necessary command messages.
	AwsSQSUrl NullableString `json:"awsSQSUrl,omitempty"`
	// Specifies the AWS storage endpoint to which data will be archived.
	AwsStorageEndpointUrl NullableString `json:"awsStorageEndpointUrl,omitempty"`
}

// NewCohesionClusterConfigParams instantiates a new CohesionClusterConfigParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCohesionClusterConfigParams() *CohesionClusterConfigParams {
	this := CohesionClusterConfigParams{}
	return &this
}

// NewCohesionClusterConfigParamsWithDefaults instantiates a new CohesionClusterConfigParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCohesionClusterConfigParamsWithDefaults() *CohesionClusterConfigParams {
	this := CohesionClusterConfigParams{}
	return &this
}

// GetApplianceId returns the ApplianceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CohesionClusterConfigParams) GetApplianceId() string {
	if o == nil || IsNil(o.ApplianceId.Get()) {
		var ret string
		return ret
	}
	return *o.ApplianceId.Get()
}

// GetApplianceIdOk returns a tuple with the ApplianceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CohesionClusterConfigParams) GetApplianceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApplianceId.Get(), o.ApplianceId.IsSet()
}

// HasApplianceId returns a boolean if a field has been set.
func (o *CohesionClusterConfigParams) HasApplianceId() bool {
	if o != nil && o.ApplianceId.IsSet() {
		return true
	}

	return false
}

// SetApplianceId gets a reference to the given NullableString and assigns it to the ApplianceId field.
func (o *CohesionClusterConfigParams) SetApplianceId(v string) {
	o.ApplianceId.Set(&v)
}
// SetApplianceIdNil sets the value for ApplianceId to be an explicit nil
func (o *CohesionClusterConfigParams) SetApplianceIdNil() {
	o.ApplianceId.Set(nil)
}

// UnsetApplianceId ensures that no value is present for ApplianceId, not even an explicit nil
func (o *CohesionClusterConfigParams) UnsetApplianceId() {
	o.ApplianceId.Unset()
}

// GetAwsControlPlaneUrl returns the AwsControlPlaneUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CohesionClusterConfigParams) GetAwsControlPlaneUrl() string {
	if o == nil || IsNil(o.AwsControlPlaneUrl.Get()) {
		var ret string
		return ret
	}
	return *o.AwsControlPlaneUrl.Get()
}

// GetAwsControlPlaneUrlOk returns a tuple with the AwsControlPlaneUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CohesionClusterConfigParams) GetAwsControlPlaneUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AwsControlPlaneUrl.Get(), o.AwsControlPlaneUrl.IsSet()
}

// HasAwsControlPlaneUrl returns a boolean if a field has been set.
func (o *CohesionClusterConfigParams) HasAwsControlPlaneUrl() bool {
	if o != nil && o.AwsControlPlaneUrl.IsSet() {
		return true
	}

	return false
}

// SetAwsControlPlaneUrl gets a reference to the given NullableString and assigns it to the AwsControlPlaneUrl field.
func (o *CohesionClusterConfigParams) SetAwsControlPlaneUrl(v string) {
	o.AwsControlPlaneUrl.Set(&v)
}
// SetAwsControlPlaneUrlNil sets the value for AwsControlPlaneUrl to be an explicit nil
func (o *CohesionClusterConfigParams) SetAwsControlPlaneUrlNil() {
	o.AwsControlPlaneUrl.Set(nil)
}

// UnsetAwsControlPlaneUrl ensures that no value is present for AwsControlPlaneUrl, not even an explicit nil
func (o *CohesionClusterConfigParams) UnsetAwsControlPlaneUrl() {
	o.AwsControlPlaneUrl.Unset()
}

// GetAwsRegionId returns the AwsRegionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CohesionClusterConfigParams) GetAwsRegionId() string {
	if o == nil || IsNil(o.AwsRegionId.Get()) {
		var ret string
		return ret
	}
	return *o.AwsRegionId.Get()
}

// GetAwsRegionIdOk returns a tuple with the AwsRegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CohesionClusterConfigParams) GetAwsRegionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AwsRegionId.Get(), o.AwsRegionId.IsSet()
}

// HasAwsRegionId returns a boolean if a field has been set.
func (o *CohesionClusterConfigParams) HasAwsRegionId() bool {
	if o != nil && o.AwsRegionId.IsSet() {
		return true
	}

	return false
}

// SetAwsRegionId gets a reference to the given NullableString and assigns it to the AwsRegionId field.
func (o *CohesionClusterConfigParams) SetAwsRegionId(v string) {
	o.AwsRegionId.Set(&v)
}
// SetAwsRegionIdNil sets the value for AwsRegionId to be an explicit nil
func (o *CohesionClusterConfigParams) SetAwsRegionIdNil() {
	o.AwsRegionId.Set(nil)
}

// UnsetAwsRegionId ensures that no value is present for AwsRegionId, not even an explicit nil
func (o *CohesionClusterConfigParams) UnsetAwsRegionId() {
	o.AwsRegionId.Unset()
}

// GetAwsSQSUrl returns the AwsSQSUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CohesionClusterConfigParams) GetAwsSQSUrl() string {
	if o == nil || IsNil(o.AwsSQSUrl.Get()) {
		var ret string
		return ret
	}
	return *o.AwsSQSUrl.Get()
}

// GetAwsSQSUrlOk returns a tuple with the AwsSQSUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CohesionClusterConfigParams) GetAwsSQSUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AwsSQSUrl.Get(), o.AwsSQSUrl.IsSet()
}

// HasAwsSQSUrl returns a boolean if a field has been set.
func (o *CohesionClusterConfigParams) HasAwsSQSUrl() bool {
	if o != nil && o.AwsSQSUrl.IsSet() {
		return true
	}

	return false
}

// SetAwsSQSUrl gets a reference to the given NullableString and assigns it to the AwsSQSUrl field.
func (o *CohesionClusterConfigParams) SetAwsSQSUrl(v string) {
	o.AwsSQSUrl.Set(&v)
}
// SetAwsSQSUrlNil sets the value for AwsSQSUrl to be an explicit nil
func (o *CohesionClusterConfigParams) SetAwsSQSUrlNil() {
	o.AwsSQSUrl.Set(nil)
}

// UnsetAwsSQSUrl ensures that no value is present for AwsSQSUrl, not even an explicit nil
func (o *CohesionClusterConfigParams) UnsetAwsSQSUrl() {
	o.AwsSQSUrl.Unset()
}

// GetAwsStorageEndpointUrl returns the AwsStorageEndpointUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CohesionClusterConfigParams) GetAwsStorageEndpointUrl() string {
	if o == nil || IsNil(o.AwsStorageEndpointUrl.Get()) {
		var ret string
		return ret
	}
	return *o.AwsStorageEndpointUrl.Get()
}

// GetAwsStorageEndpointUrlOk returns a tuple with the AwsStorageEndpointUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CohesionClusterConfigParams) GetAwsStorageEndpointUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AwsStorageEndpointUrl.Get(), o.AwsStorageEndpointUrl.IsSet()
}

// HasAwsStorageEndpointUrl returns a boolean if a field has been set.
func (o *CohesionClusterConfigParams) HasAwsStorageEndpointUrl() bool {
	if o != nil && o.AwsStorageEndpointUrl.IsSet() {
		return true
	}

	return false
}

// SetAwsStorageEndpointUrl gets a reference to the given NullableString and assigns it to the AwsStorageEndpointUrl field.
func (o *CohesionClusterConfigParams) SetAwsStorageEndpointUrl(v string) {
	o.AwsStorageEndpointUrl.Set(&v)
}
// SetAwsStorageEndpointUrlNil sets the value for AwsStorageEndpointUrl to be an explicit nil
func (o *CohesionClusterConfigParams) SetAwsStorageEndpointUrlNil() {
	o.AwsStorageEndpointUrl.Set(nil)
}

// UnsetAwsStorageEndpointUrl ensures that no value is present for AwsStorageEndpointUrl, not even an explicit nil
func (o *CohesionClusterConfigParams) UnsetAwsStorageEndpointUrl() {
	o.AwsStorageEndpointUrl.Unset()
}

func (o CohesionClusterConfigParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CohesionClusterConfigParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplianceId.IsSet() {
		toSerialize["applianceId"] = o.ApplianceId.Get()
	}
	if o.AwsControlPlaneUrl.IsSet() {
		toSerialize["awsControlPlaneUrl"] = o.AwsControlPlaneUrl.Get()
	}
	if o.AwsRegionId.IsSet() {
		toSerialize["awsRegionId"] = o.AwsRegionId.Get()
	}
	if o.AwsSQSUrl.IsSet() {
		toSerialize["awsSQSUrl"] = o.AwsSQSUrl.Get()
	}
	if o.AwsStorageEndpointUrl.IsSet() {
		toSerialize["awsStorageEndpointUrl"] = o.AwsStorageEndpointUrl.Get()
	}
	return toSerialize, nil
}

type NullableCohesionClusterConfigParams struct {
	value *CohesionClusterConfigParams
	isSet bool
}

func (v NullableCohesionClusterConfigParams) Get() *CohesionClusterConfigParams {
	return v.value
}

func (v *NullableCohesionClusterConfigParams) Set(val *CohesionClusterConfigParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCohesionClusterConfigParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCohesionClusterConfigParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCohesionClusterConfigParams(val *CohesionClusterConfigParams) *NullableCohesionClusterConfigParams {
	return &NullableCohesionClusterConfigParams{value: val, isSet: true}
}

func (v NullableCohesionClusterConfigParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCohesionClusterConfigParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


