/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the O365EnvJobParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &O365EnvJobParams{}

// O365EnvJobParams Specifies job parameters applicable for all 'kVMware' Environment type Protection Sources in a Protection Job.
type O365EnvJobParams struct {
	OnedriveBackupParams *OnedriveBackupParams `json:"onedriveBackupParams,omitempty"`
	OutlookBackupParams *OutlookBackupParams `json:"outlookBackupParams,omitempty"`
}

// NewO365EnvJobParams instantiates a new O365EnvJobParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewO365EnvJobParams() *O365EnvJobParams {
	this := O365EnvJobParams{}
	return &this
}

// NewO365EnvJobParamsWithDefaults instantiates a new O365EnvJobParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewO365EnvJobParamsWithDefaults() *O365EnvJobParams {
	this := O365EnvJobParams{}
	return &this
}

// GetOnedriveBackupParams returns the OnedriveBackupParams field value if set, zero value otherwise.
func (o *O365EnvJobParams) GetOnedriveBackupParams() OnedriveBackupParams {
	if o == nil || IsNil(o.OnedriveBackupParams) {
		var ret OnedriveBackupParams
		return ret
	}
	return *o.OnedriveBackupParams
}

// GetOnedriveBackupParamsOk returns a tuple with the OnedriveBackupParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *O365EnvJobParams) GetOnedriveBackupParamsOk() (*OnedriveBackupParams, bool) {
	if o == nil || IsNil(o.OnedriveBackupParams) {
		return nil, false
	}
	return o.OnedriveBackupParams, true
}

// HasOnedriveBackupParams returns a boolean if a field has been set.
func (o *O365EnvJobParams) HasOnedriveBackupParams() bool {
	if o != nil && !IsNil(o.OnedriveBackupParams) {
		return true
	}

	return false
}

// SetOnedriveBackupParams gets a reference to the given OnedriveBackupParams and assigns it to the OnedriveBackupParams field.
func (o *O365EnvJobParams) SetOnedriveBackupParams(v OnedriveBackupParams) {
	o.OnedriveBackupParams = &v
}

// GetOutlookBackupParams returns the OutlookBackupParams field value if set, zero value otherwise.
func (o *O365EnvJobParams) GetOutlookBackupParams() OutlookBackupParams {
	if o == nil || IsNil(o.OutlookBackupParams) {
		var ret OutlookBackupParams
		return ret
	}
	return *o.OutlookBackupParams
}

// GetOutlookBackupParamsOk returns a tuple with the OutlookBackupParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *O365EnvJobParams) GetOutlookBackupParamsOk() (*OutlookBackupParams, bool) {
	if o == nil || IsNil(o.OutlookBackupParams) {
		return nil, false
	}
	return o.OutlookBackupParams, true
}

// HasOutlookBackupParams returns a boolean if a field has been set.
func (o *O365EnvJobParams) HasOutlookBackupParams() bool {
	if o != nil && !IsNil(o.OutlookBackupParams) {
		return true
	}

	return false
}

// SetOutlookBackupParams gets a reference to the given OutlookBackupParams and assigns it to the OutlookBackupParams field.
func (o *O365EnvJobParams) SetOutlookBackupParams(v OutlookBackupParams) {
	o.OutlookBackupParams = &v
}

func (o O365EnvJobParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o O365EnvJobParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OnedriveBackupParams) {
		toSerialize["onedriveBackupParams"] = o.OnedriveBackupParams
	}
	if !IsNil(o.OutlookBackupParams) {
		toSerialize["outlookBackupParams"] = o.OutlookBackupParams
	}
	return toSerialize, nil
}

type NullableO365EnvJobParams struct {
	value *O365EnvJobParams
	isSet bool
}

func (v NullableO365EnvJobParams) Get() *O365EnvJobParams {
	return v.value
}

func (v *NullableO365EnvJobParams) Set(val *O365EnvJobParams) {
	v.value = val
	v.isSet = true
}

func (v NullableO365EnvJobParams) IsSet() bool {
	return v.isSet
}

func (v *NullableO365EnvJobParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableO365EnvJobParams(val *O365EnvJobParams) *NullableO365EnvJobParams {
	return &NullableO365EnvJobParams{value: val, isSet: true}
}

func (v NullableO365EnvJobParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableO365EnvJobParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


