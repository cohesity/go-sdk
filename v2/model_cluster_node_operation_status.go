/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ClusterNodeOperationStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterNodeOperationStatus{}

// ClusterNodeOperationStatus Status of operation on a node.
type ClusterNodeOperationStatus struct {
	// Specifies the list of events that took place during the operation. 
	Events []OperationEvents `json:"events,omitempty"`
	// Specifies the ID of the node.
	Id NullableInt64 `json:"id,omitempty"`
	// Specifies the IP address of the node.
	Ip NullableString `json:"ip,omitempty"`
	// Specifies the approximate completion percentage for the operation.
	Percentage *int32 `json:"percentage,omitempty"`
	// Specifies the status of the operation. `Success` indicates the operation is successful. `Failed` indicates the operation failed due to an error. `InProgress` indicates the operation is in progress. 
	Status NullableString `json:"status,omitempty"`
}

// NewClusterNodeOperationStatus instantiates a new ClusterNodeOperationStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterNodeOperationStatus() *ClusterNodeOperationStatus {
	this := ClusterNodeOperationStatus{}
	return &this
}

// NewClusterNodeOperationStatusWithDefaults instantiates a new ClusterNodeOperationStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterNodeOperationStatusWithDefaults() *ClusterNodeOperationStatus {
	this := ClusterNodeOperationStatus{}
	return &this
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *ClusterNodeOperationStatus) GetEvents() []OperationEvents {
	if o == nil || IsNil(o.Events) {
		var ret []OperationEvents
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeOperationStatus) GetEventsOk() ([]OperationEvents, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *ClusterNodeOperationStatus) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []OperationEvents and assigns it to the Events field.
func (o *ClusterNodeOperationStatus) SetEvents(v []OperationEvents) {
	o.Events = v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterNodeOperationStatus) GetId() int64 {
	if o == nil || IsNil(o.Id.Get()) {
		var ret int64
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterNodeOperationStatus) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ClusterNodeOperationStatus) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt64 and assigns it to the Id field.
func (o *ClusterNodeOperationStatus) SetId(v int64) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ClusterNodeOperationStatus) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ClusterNodeOperationStatus) UnsetId() {
	o.Id.Unset()
}

// GetIp returns the Ip field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterNodeOperationStatus) GetIp() string {
	if o == nil || IsNil(o.Ip.Get()) {
		var ret string
		return ret
	}
	return *o.Ip.Get()
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterNodeOperationStatus) GetIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ip.Get(), o.Ip.IsSet()
}

// HasIp returns a boolean if a field has been set.
func (o *ClusterNodeOperationStatus) HasIp() bool {
	if o != nil && o.Ip.IsSet() {
		return true
	}

	return false
}

// SetIp gets a reference to the given NullableString and assigns it to the Ip field.
func (o *ClusterNodeOperationStatus) SetIp(v string) {
	o.Ip.Set(&v)
}
// SetIpNil sets the value for Ip to be an explicit nil
func (o *ClusterNodeOperationStatus) SetIpNil() {
	o.Ip.Set(nil)
}

// UnsetIp ensures that no value is present for Ip, not even an explicit nil
func (o *ClusterNodeOperationStatus) UnsetIp() {
	o.Ip.Unset()
}

// GetPercentage returns the Percentage field value if set, zero value otherwise.
func (o *ClusterNodeOperationStatus) GetPercentage() int32 {
	if o == nil || IsNil(o.Percentage) {
		var ret int32
		return ret
	}
	return *o.Percentage
}

// GetPercentageOk returns a tuple with the Percentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeOperationStatus) GetPercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.Percentage) {
		return nil, false
	}
	return o.Percentage, true
}

// HasPercentage returns a boolean if a field has been set.
func (o *ClusterNodeOperationStatus) HasPercentage() bool {
	if o != nil && !IsNil(o.Percentage) {
		return true
	}

	return false
}

// SetPercentage gets a reference to the given int32 and assigns it to the Percentage field.
func (o *ClusterNodeOperationStatus) SetPercentage(v int32) {
	o.Percentage = &v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterNodeOperationStatus) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterNodeOperationStatus) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ClusterNodeOperationStatus) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *ClusterNodeOperationStatus) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *ClusterNodeOperationStatus) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ClusterNodeOperationStatus) UnsetStatus() {
	o.Status.Unset()
}

func (o ClusterNodeOperationStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterNodeOperationStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Ip.IsSet() {
		toSerialize["ip"] = o.Ip.Get()
	}
	if !IsNil(o.Percentage) {
		toSerialize["percentage"] = o.Percentage
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	return toSerialize, nil
}

type NullableClusterNodeOperationStatus struct {
	value *ClusterNodeOperationStatus
	isSet bool
}

func (v NullableClusterNodeOperationStatus) Get() *ClusterNodeOperationStatus {
	return v.value
}

func (v *NullableClusterNodeOperationStatus) Set(val *ClusterNodeOperationStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterNodeOperationStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterNodeOperationStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterNodeOperationStatus(val *ClusterNodeOperationStatus) *NullableClusterNodeOperationStatus {
	return &NullableClusterNodeOperationStatus{value: val, isSet: true}
}

func (v NullableClusterNodeOperationStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterNodeOperationStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


