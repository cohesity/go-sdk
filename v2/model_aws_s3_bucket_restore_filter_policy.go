/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AwsS3BucketRestoreFilterPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsS3BucketRestoreFilterPolicy{}

// AwsS3BucketRestoreFilterPolicy Specifies the filtering policy for S3 Bucket Restore. This contains a list of include prefixes. If specified, only S3 Objects with a matching prefix will be recovered.
type AwsS3BucketRestoreFilterPolicy struct {
	// List of include prefixes that need to be recovered.
	IncludeList []string `json:"includeList,omitempty"`
}

// NewAwsS3BucketRestoreFilterPolicy instantiates a new AwsS3BucketRestoreFilterPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsS3BucketRestoreFilterPolicy() *AwsS3BucketRestoreFilterPolicy {
	this := AwsS3BucketRestoreFilterPolicy{}
	return &this
}

// NewAwsS3BucketRestoreFilterPolicyWithDefaults instantiates a new AwsS3BucketRestoreFilterPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsS3BucketRestoreFilterPolicyWithDefaults() *AwsS3BucketRestoreFilterPolicy {
	this := AwsS3BucketRestoreFilterPolicy{}
	return &this
}

// GetIncludeList returns the IncludeList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsS3BucketRestoreFilterPolicy) GetIncludeList() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.IncludeList
}

// GetIncludeListOk returns a tuple with the IncludeList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsS3BucketRestoreFilterPolicy) GetIncludeListOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludeList) {
		return nil, false
	}
	return o.IncludeList, true
}

// HasIncludeList returns a boolean if a field has been set.
func (o *AwsS3BucketRestoreFilterPolicy) HasIncludeList() bool {
	if o != nil && !IsNil(o.IncludeList) {
		return true
	}

	return false
}

// SetIncludeList gets a reference to the given []string and assigns it to the IncludeList field.
func (o *AwsS3BucketRestoreFilterPolicy) SetIncludeList(v []string) {
	o.IncludeList = v
}

func (o AwsS3BucketRestoreFilterPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsS3BucketRestoreFilterPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludeList != nil {
		toSerialize["includeList"] = o.IncludeList
	}
	return toSerialize, nil
}

type NullableAwsS3BucketRestoreFilterPolicy struct {
	value *AwsS3BucketRestoreFilterPolicy
	isSet bool
}

func (v NullableAwsS3BucketRestoreFilterPolicy) Get() *AwsS3BucketRestoreFilterPolicy {
	return v.value
}

func (v *NullableAwsS3BucketRestoreFilterPolicy) Set(val *AwsS3BucketRestoreFilterPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsS3BucketRestoreFilterPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsS3BucketRestoreFilterPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsS3BucketRestoreFilterPolicy(val *AwsS3BucketRestoreFilterPolicy) *NullableAwsS3BucketRestoreFilterPolicy {
	return &NullableAwsS3BucketRestoreFilterPolicy{value: val, isSet: true}
}

func (v NullableAwsS3BucketRestoreFilterPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsS3BucketRestoreFilterPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


