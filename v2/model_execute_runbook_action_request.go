/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExecuteRunbookActionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecuteRunbookActionRequest{}

// ExecuteRunbookActionRequest Specifies the request parameters to perform an action.
type ExecuteRunbookActionRequest struct {
	// Specifies the action to be performed.
	Action NullableString `json:"action"`
	PowerOffVmParams *PowerOffVmParams `json:"powerOffVmParams,omitempty"`
}

type _ExecuteRunbookActionRequest ExecuteRunbookActionRequest

// NewExecuteRunbookActionRequest instantiates a new ExecuteRunbookActionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecuteRunbookActionRequest(action NullableString) *ExecuteRunbookActionRequest {
	this := ExecuteRunbookActionRequest{}
	this.Action = action
	return &this
}

// NewExecuteRunbookActionRequestWithDefaults instantiates a new ExecuteRunbookActionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecuteRunbookActionRequestWithDefaults() *ExecuteRunbookActionRequest {
	this := ExecuteRunbookActionRequest{}
	return &this
}

// GetAction returns the Action field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ExecuteRunbookActionRequest) GetAction() string {
	if o == nil || o.Action.Get() == nil {
		var ret string
		return ret
	}

	return *o.Action.Get()
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExecuteRunbookActionRequest) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Action.Get(), o.Action.IsSet()
}

// SetAction sets field value
func (o *ExecuteRunbookActionRequest) SetAction(v string) {
	o.Action.Set(&v)
}

// GetPowerOffVmParams returns the PowerOffVmParams field value if set, zero value otherwise.
func (o *ExecuteRunbookActionRequest) GetPowerOffVmParams() PowerOffVmParams {
	if o == nil || IsNil(o.PowerOffVmParams) {
		var ret PowerOffVmParams
		return ret
	}
	return *o.PowerOffVmParams
}

// GetPowerOffVmParamsOk returns a tuple with the PowerOffVmParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteRunbookActionRequest) GetPowerOffVmParamsOk() (*PowerOffVmParams, bool) {
	if o == nil || IsNil(o.PowerOffVmParams) {
		return nil, false
	}
	return o.PowerOffVmParams, true
}

// HasPowerOffVmParams returns a boolean if a field has been set.
func (o *ExecuteRunbookActionRequest) HasPowerOffVmParams() bool {
	if o != nil && !IsNil(o.PowerOffVmParams) {
		return true
	}

	return false
}

// SetPowerOffVmParams gets a reference to the given PowerOffVmParams and assigns it to the PowerOffVmParams field.
func (o *ExecuteRunbookActionRequest) SetPowerOffVmParams(v PowerOffVmParams) {
	o.PowerOffVmParams = &v
}

func (o ExecuteRunbookActionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecuteRunbookActionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action.Get()
	if !IsNil(o.PowerOffVmParams) {
		toSerialize["powerOffVmParams"] = o.PowerOffVmParams
	}
	return toSerialize, nil
}

func (o *ExecuteRunbookActionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExecuteRunbookActionRequest := _ExecuteRunbookActionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExecuteRunbookActionRequest)

	if err != nil {
		return err
	}

	*o = ExecuteRunbookActionRequest(varExecuteRunbookActionRequest)

	return err
}

type NullableExecuteRunbookActionRequest struct {
	value *ExecuteRunbookActionRequest
	isSet bool
}

func (v NullableExecuteRunbookActionRequest) Get() *ExecuteRunbookActionRequest {
	return v.value
}

func (v *NullableExecuteRunbookActionRequest) Set(val *ExecuteRunbookActionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExecuteRunbookActionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExecuteRunbookActionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecuteRunbookActionRequest(val *ExecuteRunbookActionRequest) *NullableExecuteRunbookActionRequest {
	return &NullableExecuteRunbookActionRequest{value: val, isSet: true}
}

func (v NullableExecuteRunbookActionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecuteRunbookActionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


