/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProtectionGroupAlertingPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProtectionGroupAlertingPolicy{}

// ProtectionGroupAlertingPolicy Specifies a policy for alerting users of the status of a Protection Group.
type ProtectionGroupAlertingPolicy struct {
	// Specifies a list of targets to receive the alerts.
	AlertTargets []AlertTarget `json:"alertTargets,omitempty"`
	// Specifies when to send out alerts. The possible values are kSuccess , kFailure, kSlaViolation and kWarning
	BackupRunStatus []string `json:"backupRunStatus"`
	// Specifies whether object level alerts are raised for backup failures after the backup run.
	RaiseObjectLevelFailureAlert *bool `json:"raiseObjectLevelFailureAlert,omitempty"`
	// Specifies whether object level alerts are raised for backup failures after each backup attempt.
	RaiseObjectLevelFailureAlertAfterEachAttempt *bool `json:"raiseObjectLevelFailureAlertAfterEachAttempt,omitempty"`
	// Specifies whether object level alerts are raised for backup failures after last backup attempt.
	RaiseObjectLevelFailureAlertAfterLastAttempt *bool `json:"raiseObjectLevelFailureAlertAfterLastAttempt,omitempty"`
}

type _ProtectionGroupAlertingPolicy ProtectionGroupAlertingPolicy

// NewProtectionGroupAlertingPolicy instantiates a new ProtectionGroupAlertingPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionGroupAlertingPolicy(backupRunStatus []string) *ProtectionGroupAlertingPolicy {
	this := ProtectionGroupAlertingPolicy{}
	this.BackupRunStatus = backupRunStatus
	return &this
}

// NewProtectionGroupAlertingPolicyWithDefaults instantiates a new ProtectionGroupAlertingPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionGroupAlertingPolicyWithDefaults() *ProtectionGroupAlertingPolicy {
	this := ProtectionGroupAlertingPolicy{}
	return &this
}

// GetAlertTargets returns the AlertTargets field value if set, zero value otherwise.
func (o *ProtectionGroupAlertingPolicy) GetAlertTargets() []AlertTarget {
	if o == nil || IsNil(o.AlertTargets) {
		var ret []AlertTarget
		return ret
	}
	return o.AlertTargets
}

// GetAlertTargetsOk returns a tuple with the AlertTargets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroupAlertingPolicy) GetAlertTargetsOk() ([]AlertTarget, bool) {
	if o == nil || IsNil(o.AlertTargets) {
		return nil, false
	}
	return o.AlertTargets, true
}

// HasAlertTargets returns a boolean if a field has been set.
func (o *ProtectionGroupAlertingPolicy) HasAlertTargets() bool {
	if o != nil && !IsNil(o.AlertTargets) {
		return true
	}

	return false
}

// SetAlertTargets gets a reference to the given []AlertTarget and assigns it to the AlertTargets field.
func (o *ProtectionGroupAlertingPolicy) SetAlertTargets(v []AlertTarget) {
	o.AlertTargets = v
}

// GetBackupRunStatus returns the BackupRunStatus field value
func (o *ProtectionGroupAlertingPolicy) GetBackupRunStatus() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.BackupRunStatus
}

// GetBackupRunStatusOk returns a tuple with the BackupRunStatus field value
// and a boolean to check if the value has been set.
func (o *ProtectionGroupAlertingPolicy) GetBackupRunStatusOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupRunStatus, true
}

// SetBackupRunStatus sets field value
func (o *ProtectionGroupAlertingPolicy) SetBackupRunStatus(v []string) {
	o.BackupRunStatus = v
}

// GetRaiseObjectLevelFailureAlert returns the RaiseObjectLevelFailureAlert field value if set, zero value otherwise.
func (o *ProtectionGroupAlertingPolicy) GetRaiseObjectLevelFailureAlert() bool {
	if o == nil || IsNil(o.RaiseObjectLevelFailureAlert) {
		var ret bool
		return ret
	}
	return *o.RaiseObjectLevelFailureAlert
}

// GetRaiseObjectLevelFailureAlertOk returns a tuple with the RaiseObjectLevelFailureAlert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroupAlertingPolicy) GetRaiseObjectLevelFailureAlertOk() (*bool, bool) {
	if o == nil || IsNil(o.RaiseObjectLevelFailureAlert) {
		return nil, false
	}
	return o.RaiseObjectLevelFailureAlert, true
}

// HasRaiseObjectLevelFailureAlert returns a boolean if a field has been set.
func (o *ProtectionGroupAlertingPolicy) HasRaiseObjectLevelFailureAlert() bool {
	if o != nil && !IsNil(o.RaiseObjectLevelFailureAlert) {
		return true
	}

	return false
}

// SetRaiseObjectLevelFailureAlert gets a reference to the given bool and assigns it to the RaiseObjectLevelFailureAlert field.
func (o *ProtectionGroupAlertingPolicy) SetRaiseObjectLevelFailureAlert(v bool) {
	o.RaiseObjectLevelFailureAlert = &v
}

// GetRaiseObjectLevelFailureAlertAfterEachAttempt returns the RaiseObjectLevelFailureAlertAfterEachAttempt field value if set, zero value otherwise.
func (o *ProtectionGroupAlertingPolicy) GetRaiseObjectLevelFailureAlertAfterEachAttempt() bool {
	if o == nil || IsNil(o.RaiseObjectLevelFailureAlertAfterEachAttempt) {
		var ret bool
		return ret
	}
	return *o.RaiseObjectLevelFailureAlertAfterEachAttempt
}

// GetRaiseObjectLevelFailureAlertAfterEachAttemptOk returns a tuple with the RaiseObjectLevelFailureAlertAfterEachAttempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroupAlertingPolicy) GetRaiseObjectLevelFailureAlertAfterEachAttemptOk() (*bool, bool) {
	if o == nil || IsNil(o.RaiseObjectLevelFailureAlertAfterEachAttempt) {
		return nil, false
	}
	return o.RaiseObjectLevelFailureAlertAfterEachAttempt, true
}

// HasRaiseObjectLevelFailureAlertAfterEachAttempt returns a boolean if a field has been set.
func (o *ProtectionGroupAlertingPolicy) HasRaiseObjectLevelFailureAlertAfterEachAttempt() bool {
	if o != nil && !IsNil(o.RaiseObjectLevelFailureAlertAfterEachAttempt) {
		return true
	}

	return false
}

// SetRaiseObjectLevelFailureAlertAfterEachAttempt gets a reference to the given bool and assigns it to the RaiseObjectLevelFailureAlertAfterEachAttempt field.
func (o *ProtectionGroupAlertingPolicy) SetRaiseObjectLevelFailureAlertAfterEachAttempt(v bool) {
	o.RaiseObjectLevelFailureAlertAfterEachAttempt = &v
}

// GetRaiseObjectLevelFailureAlertAfterLastAttempt returns the RaiseObjectLevelFailureAlertAfterLastAttempt field value if set, zero value otherwise.
func (o *ProtectionGroupAlertingPolicy) GetRaiseObjectLevelFailureAlertAfterLastAttempt() bool {
	if o == nil || IsNil(o.RaiseObjectLevelFailureAlertAfterLastAttempt) {
		var ret bool
		return ret
	}
	return *o.RaiseObjectLevelFailureAlertAfterLastAttempt
}

// GetRaiseObjectLevelFailureAlertAfterLastAttemptOk returns a tuple with the RaiseObjectLevelFailureAlertAfterLastAttempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroupAlertingPolicy) GetRaiseObjectLevelFailureAlertAfterLastAttemptOk() (*bool, bool) {
	if o == nil || IsNil(o.RaiseObjectLevelFailureAlertAfterLastAttempt) {
		return nil, false
	}
	return o.RaiseObjectLevelFailureAlertAfterLastAttempt, true
}

// HasRaiseObjectLevelFailureAlertAfterLastAttempt returns a boolean if a field has been set.
func (o *ProtectionGroupAlertingPolicy) HasRaiseObjectLevelFailureAlertAfterLastAttempt() bool {
	if o != nil && !IsNil(o.RaiseObjectLevelFailureAlertAfterLastAttempt) {
		return true
	}

	return false
}

// SetRaiseObjectLevelFailureAlertAfterLastAttempt gets a reference to the given bool and assigns it to the RaiseObjectLevelFailureAlertAfterLastAttempt field.
func (o *ProtectionGroupAlertingPolicy) SetRaiseObjectLevelFailureAlertAfterLastAttempt(v bool) {
	o.RaiseObjectLevelFailureAlertAfterLastAttempt = &v
}

func (o ProtectionGroupAlertingPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProtectionGroupAlertingPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertTargets) {
		toSerialize["alertTargets"] = o.AlertTargets
	}
	toSerialize["backupRunStatus"] = o.BackupRunStatus
	if !IsNil(o.RaiseObjectLevelFailureAlert) {
		toSerialize["raiseObjectLevelFailureAlert"] = o.RaiseObjectLevelFailureAlert
	}
	if !IsNil(o.RaiseObjectLevelFailureAlertAfterEachAttempt) {
		toSerialize["raiseObjectLevelFailureAlertAfterEachAttempt"] = o.RaiseObjectLevelFailureAlertAfterEachAttempt
	}
	if !IsNil(o.RaiseObjectLevelFailureAlertAfterLastAttempt) {
		toSerialize["raiseObjectLevelFailureAlertAfterLastAttempt"] = o.RaiseObjectLevelFailureAlertAfterLastAttempt
	}
	return toSerialize, nil
}

func (o *ProtectionGroupAlertingPolicy) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"backupRunStatus",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProtectionGroupAlertingPolicy := _ProtectionGroupAlertingPolicy{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProtectionGroupAlertingPolicy)

	if err != nil {
		return err
	}

	*o = ProtectionGroupAlertingPolicy(varProtectionGroupAlertingPolicy)

	return err
}

type NullableProtectionGroupAlertingPolicy struct {
	value *ProtectionGroupAlertingPolicy
	isSet bool
}

func (v NullableProtectionGroupAlertingPolicy) Get() *ProtectionGroupAlertingPolicy {
	return v.value
}

func (v *NullableProtectionGroupAlertingPolicy) Set(val *ProtectionGroupAlertingPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionGroupAlertingPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionGroupAlertingPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionGroupAlertingPolicy(val *ProtectionGroupAlertingPolicy) *NullableProtectionGroupAlertingPolicy {
	return &NullableProtectionGroupAlertingPolicy{value: val, isSet: true}
}

func (v NullableProtectionGroupAlertingPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionGroupAlertingPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


