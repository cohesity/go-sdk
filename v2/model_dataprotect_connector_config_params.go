/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the DataprotectConnectorConfigParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataprotectConnectorConfigParams{}

// DataprotectConnectorConfigParams Specifies the request parameters to create/update a dataprotect connector config.
type DataprotectConnectorConfigParams struct {
	// Config as serialised yaml string.
	Config NullableString `json:"config,omitempty"`
}

// NewDataprotectConnectorConfigParams instantiates a new DataprotectConnectorConfigParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataprotectConnectorConfigParams() *DataprotectConnectorConfigParams {
	this := DataprotectConnectorConfigParams{}
	return &this
}

// NewDataprotectConnectorConfigParamsWithDefaults instantiates a new DataprotectConnectorConfigParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataprotectConnectorConfigParamsWithDefaults() *DataprotectConnectorConfigParams {
	this := DataprotectConnectorConfigParams{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataprotectConnectorConfigParams) GetConfig() string {
	if o == nil || IsNil(o.Config.Get()) {
		var ret string
		return ret
	}
	return *o.Config.Get()
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataprotectConnectorConfigParams) GetConfigOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Config.Get(), o.Config.IsSet()
}

// HasConfig returns a boolean if a field has been set.
func (o *DataprotectConnectorConfigParams) HasConfig() bool {
	if o != nil && o.Config.IsSet() {
		return true
	}

	return false
}

// SetConfig gets a reference to the given NullableString and assigns it to the Config field.
func (o *DataprotectConnectorConfigParams) SetConfig(v string) {
	o.Config.Set(&v)
}
// SetConfigNil sets the value for Config to be an explicit nil
func (o *DataprotectConnectorConfigParams) SetConfigNil() {
	o.Config.Set(nil)
}

// UnsetConfig ensures that no value is present for Config, not even an explicit nil
func (o *DataprotectConnectorConfigParams) UnsetConfig() {
	o.Config.Unset()
}

func (o DataprotectConnectorConfigParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataprotectConnectorConfigParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Config.IsSet() {
		toSerialize["config"] = o.Config.Get()
	}
	return toSerialize, nil
}

type NullableDataprotectConnectorConfigParams struct {
	value *DataprotectConnectorConfigParams
	isSet bool
}

func (v NullableDataprotectConnectorConfigParams) Get() *DataprotectConnectorConfigParams {
	return v.value
}

func (v *NullableDataprotectConnectorConfigParams) Set(val *DataprotectConnectorConfigParams) {
	v.value = val
	v.isSet = true
}

func (v NullableDataprotectConnectorConfigParams) IsSet() bool {
	return v.isSet
}

func (v *NullableDataprotectConnectorConfigParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataprotectConnectorConfigParams(val *DataprotectConnectorConfigParams) *NullableDataprotectConnectorConfigParams {
	return &NullableDataprotectConnectorConfigParams{value: val, isSet: true}
}

func (v NullableDataprotectConnectorConfigParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataprotectConnectorConfigParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


