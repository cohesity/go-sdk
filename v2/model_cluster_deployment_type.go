/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ClusterDeploymentType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterDeploymentType{}

// ClusterDeploymentType Cluster Deployment Type
type ClusterDeploymentType struct {
	// Specifies the type of deployment for cluster.
	ClusterDeploymentType *string `json:"clusterDeploymentType,omitempty"`
}

// NewClusterDeploymentType instantiates a new ClusterDeploymentType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterDeploymentType() *ClusterDeploymentType {
	this := ClusterDeploymentType{}
	return &this
}

// NewClusterDeploymentTypeWithDefaults instantiates a new ClusterDeploymentType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterDeploymentTypeWithDefaults() *ClusterDeploymentType {
	this := ClusterDeploymentType{}
	return &this
}

// GetClusterDeploymentType returns the ClusterDeploymentType field value if set, zero value otherwise.
func (o *ClusterDeploymentType) GetClusterDeploymentType() string {
	if o == nil || IsNil(o.ClusterDeploymentType) {
		var ret string
		return ret
	}
	return *o.ClusterDeploymentType
}

// GetClusterDeploymentTypeOk returns a tuple with the ClusterDeploymentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDeploymentType) GetClusterDeploymentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterDeploymentType) {
		return nil, false
	}
	return o.ClusterDeploymentType, true
}

// HasClusterDeploymentType returns a boolean if a field has been set.
func (o *ClusterDeploymentType) HasClusterDeploymentType() bool {
	if o != nil && !IsNil(o.ClusterDeploymentType) {
		return true
	}

	return false
}

// SetClusterDeploymentType gets a reference to the given string and assigns it to the ClusterDeploymentType field.
func (o *ClusterDeploymentType) SetClusterDeploymentType(v string) {
	o.ClusterDeploymentType = &v
}

func (o ClusterDeploymentType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterDeploymentType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClusterDeploymentType) {
		toSerialize["clusterDeploymentType"] = o.ClusterDeploymentType
	}
	return toSerialize, nil
}

type NullableClusterDeploymentType struct {
	value *ClusterDeploymentType
	isSet bool
}

func (v NullableClusterDeploymentType) Get() *ClusterDeploymentType {
	return v.value
}

func (v *NullableClusterDeploymentType) Set(val *ClusterDeploymentType) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterDeploymentType) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterDeploymentType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterDeploymentType(val *ClusterDeploymentType) *NullableClusterDeploymentType {
	return &NullableClusterDeploymentType{value: val, isSet: true}
}

func (v NullableClusterDeploymentType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterDeploymentType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


