/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AlertDocument type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertDocument{}

// AlertDocument Specifies the fields of alert document.
type AlertDocument struct {
	// Specifies the cause of alert.
	AlertCause NullableString `json:"alertCause,omitempty"`
	// Specifies the description of alert.
	AlertDescription NullableString `json:"alertDescription,omitempty"`
	// Specifies the help text for alert.
	AlertHelpText NullableString `json:"alertHelpText,omitempty"`
	// Specifies the name of alert.
	AlertName NullableString `json:"alertName,omitempty"`
	// Short description for the alert.
	AlertSummary NullableString `json:"alertSummary,omitempty"`
}

// NewAlertDocument instantiates a new AlertDocument object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertDocument() *AlertDocument {
	this := AlertDocument{}
	return &this
}

// NewAlertDocumentWithDefaults instantiates a new AlertDocument object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertDocumentWithDefaults() *AlertDocument {
	this := AlertDocument{}
	return &this
}

// GetAlertCause returns the AlertCause field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertDocument) GetAlertCause() string {
	if o == nil || IsNil(o.AlertCause.Get()) {
		var ret string
		return ret
	}
	return *o.AlertCause.Get()
}

// GetAlertCauseOk returns a tuple with the AlertCause field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertDocument) GetAlertCauseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlertCause.Get(), o.AlertCause.IsSet()
}

// HasAlertCause returns a boolean if a field has been set.
func (o *AlertDocument) HasAlertCause() bool {
	if o != nil && o.AlertCause.IsSet() {
		return true
	}

	return false
}

// SetAlertCause gets a reference to the given NullableString and assigns it to the AlertCause field.
func (o *AlertDocument) SetAlertCause(v string) {
	o.AlertCause.Set(&v)
}
// SetAlertCauseNil sets the value for AlertCause to be an explicit nil
func (o *AlertDocument) SetAlertCauseNil() {
	o.AlertCause.Set(nil)
}

// UnsetAlertCause ensures that no value is present for AlertCause, not even an explicit nil
func (o *AlertDocument) UnsetAlertCause() {
	o.AlertCause.Unset()
}

// GetAlertDescription returns the AlertDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertDocument) GetAlertDescription() string {
	if o == nil || IsNil(o.AlertDescription.Get()) {
		var ret string
		return ret
	}
	return *o.AlertDescription.Get()
}

// GetAlertDescriptionOk returns a tuple with the AlertDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertDocument) GetAlertDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlertDescription.Get(), o.AlertDescription.IsSet()
}

// HasAlertDescription returns a boolean if a field has been set.
func (o *AlertDocument) HasAlertDescription() bool {
	if o != nil && o.AlertDescription.IsSet() {
		return true
	}

	return false
}

// SetAlertDescription gets a reference to the given NullableString and assigns it to the AlertDescription field.
func (o *AlertDocument) SetAlertDescription(v string) {
	o.AlertDescription.Set(&v)
}
// SetAlertDescriptionNil sets the value for AlertDescription to be an explicit nil
func (o *AlertDocument) SetAlertDescriptionNil() {
	o.AlertDescription.Set(nil)
}

// UnsetAlertDescription ensures that no value is present for AlertDescription, not even an explicit nil
func (o *AlertDocument) UnsetAlertDescription() {
	o.AlertDescription.Unset()
}

// GetAlertHelpText returns the AlertHelpText field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertDocument) GetAlertHelpText() string {
	if o == nil || IsNil(o.AlertHelpText.Get()) {
		var ret string
		return ret
	}
	return *o.AlertHelpText.Get()
}

// GetAlertHelpTextOk returns a tuple with the AlertHelpText field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertDocument) GetAlertHelpTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlertHelpText.Get(), o.AlertHelpText.IsSet()
}

// HasAlertHelpText returns a boolean if a field has been set.
func (o *AlertDocument) HasAlertHelpText() bool {
	if o != nil && o.AlertHelpText.IsSet() {
		return true
	}

	return false
}

// SetAlertHelpText gets a reference to the given NullableString and assigns it to the AlertHelpText field.
func (o *AlertDocument) SetAlertHelpText(v string) {
	o.AlertHelpText.Set(&v)
}
// SetAlertHelpTextNil sets the value for AlertHelpText to be an explicit nil
func (o *AlertDocument) SetAlertHelpTextNil() {
	o.AlertHelpText.Set(nil)
}

// UnsetAlertHelpText ensures that no value is present for AlertHelpText, not even an explicit nil
func (o *AlertDocument) UnsetAlertHelpText() {
	o.AlertHelpText.Unset()
}

// GetAlertName returns the AlertName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertDocument) GetAlertName() string {
	if o == nil || IsNil(o.AlertName.Get()) {
		var ret string
		return ret
	}
	return *o.AlertName.Get()
}

// GetAlertNameOk returns a tuple with the AlertName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertDocument) GetAlertNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlertName.Get(), o.AlertName.IsSet()
}

// HasAlertName returns a boolean if a field has been set.
func (o *AlertDocument) HasAlertName() bool {
	if o != nil && o.AlertName.IsSet() {
		return true
	}

	return false
}

// SetAlertName gets a reference to the given NullableString and assigns it to the AlertName field.
func (o *AlertDocument) SetAlertName(v string) {
	o.AlertName.Set(&v)
}
// SetAlertNameNil sets the value for AlertName to be an explicit nil
func (o *AlertDocument) SetAlertNameNil() {
	o.AlertName.Set(nil)
}

// UnsetAlertName ensures that no value is present for AlertName, not even an explicit nil
func (o *AlertDocument) UnsetAlertName() {
	o.AlertName.Unset()
}

// GetAlertSummary returns the AlertSummary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertDocument) GetAlertSummary() string {
	if o == nil || IsNil(o.AlertSummary.Get()) {
		var ret string
		return ret
	}
	return *o.AlertSummary.Get()
}

// GetAlertSummaryOk returns a tuple with the AlertSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertDocument) GetAlertSummaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlertSummary.Get(), o.AlertSummary.IsSet()
}

// HasAlertSummary returns a boolean if a field has been set.
func (o *AlertDocument) HasAlertSummary() bool {
	if o != nil && o.AlertSummary.IsSet() {
		return true
	}

	return false
}

// SetAlertSummary gets a reference to the given NullableString and assigns it to the AlertSummary field.
func (o *AlertDocument) SetAlertSummary(v string) {
	o.AlertSummary.Set(&v)
}
// SetAlertSummaryNil sets the value for AlertSummary to be an explicit nil
func (o *AlertDocument) SetAlertSummaryNil() {
	o.AlertSummary.Set(nil)
}

// UnsetAlertSummary ensures that no value is present for AlertSummary, not even an explicit nil
func (o *AlertDocument) UnsetAlertSummary() {
	o.AlertSummary.Unset()
}

func (o AlertDocument) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertDocument) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AlertCause.IsSet() {
		toSerialize["alertCause"] = o.AlertCause.Get()
	}
	if o.AlertDescription.IsSet() {
		toSerialize["alertDescription"] = o.AlertDescription.Get()
	}
	if o.AlertHelpText.IsSet() {
		toSerialize["alertHelpText"] = o.AlertHelpText.Get()
	}
	if o.AlertName.IsSet() {
		toSerialize["alertName"] = o.AlertName.Get()
	}
	if o.AlertSummary.IsSet() {
		toSerialize["alertSummary"] = o.AlertSummary.Get()
	}
	return toSerialize, nil
}

type NullableAlertDocument struct {
	value *AlertDocument
	isSet bool
}

func (v NullableAlertDocument) Get() *AlertDocument {
	return v.value
}

func (v *NullableAlertDocument) Set(val *AlertDocument) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertDocument) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertDocument) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertDocument(val *AlertDocument) *NullableAlertDocument {
	return &NullableAlertDocument{value: val, isSet: true}
}

func (v NullableAlertDocument) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertDocument) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


