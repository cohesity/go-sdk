/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the HeliosFullSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeliosFullSchedule{}

// HeliosFullSchedule Specifies settings that defines how frequent full backup will be performed for a Protection Group.
type HeliosFullSchedule struct {
	DaySchedule *HeliosDaySchedule `json:"daySchedule,omitempty"`
	MonthSchedule *HeliosMonthSchedule `json:"monthSchedule,omitempty"`
	// Specifies how often to start new runs of a Protection Group. <br>'Days' specifies that Protection Group run starts periodically on every day. For full backup schedule, currently we only support frequecny of 1 which indicates that full backup will be performed daily. <br>'Weeks' specifies that new Protection Group runs start weekly on certain days specified using 'dayOfWeek' field. <br>'Months' specifies that new Protection Group runs start monthly on certain day of specific week. This schedule needs 'weekOfMonth' and 'dayOfWeek' fields to be set. <br>'ProtectOnce' specifies that groups using this policy option will run only once and after that group will permanently be disabled. <br> Example: To run the Protection Group on Second Sunday of Every Month, following schedule need to be set: <br> unit: 'Month' <br> dayOfWeek: 'Sunday' <br> weekOfMonth: 'Second'
	Unit NullableString `json:"unit,omitempty"`
	WeekSchedule *HeliosWeekSchedule `json:"weekSchedule,omitempty"`
}

// NewHeliosFullSchedule instantiates a new HeliosFullSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosFullSchedule() *HeliosFullSchedule {
	this := HeliosFullSchedule{}
	return &this
}

// NewHeliosFullScheduleWithDefaults instantiates a new HeliosFullSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosFullScheduleWithDefaults() *HeliosFullSchedule {
	this := HeliosFullSchedule{}
	return &this
}

// GetDaySchedule returns the DaySchedule field value if set, zero value otherwise.
func (o *HeliosFullSchedule) GetDaySchedule() HeliosDaySchedule {
	if o == nil || IsNil(o.DaySchedule) {
		var ret HeliosDaySchedule
		return ret
	}
	return *o.DaySchedule
}

// GetDayScheduleOk returns a tuple with the DaySchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosFullSchedule) GetDayScheduleOk() (*HeliosDaySchedule, bool) {
	if o == nil || IsNil(o.DaySchedule) {
		return nil, false
	}
	return o.DaySchedule, true
}

// HasDaySchedule returns a boolean if a field has been set.
func (o *HeliosFullSchedule) HasDaySchedule() bool {
	if o != nil && !IsNil(o.DaySchedule) {
		return true
	}

	return false
}

// SetDaySchedule gets a reference to the given HeliosDaySchedule and assigns it to the DaySchedule field.
func (o *HeliosFullSchedule) SetDaySchedule(v HeliosDaySchedule) {
	o.DaySchedule = &v
}

// GetMonthSchedule returns the MonthSchedule field value if set, zero value otherwise.
func (o *HeliosFullSchedule) GetMonthSchedule() HeliosMonthSchedule {
	if o == nil || IsNil(o.MonthSchedule) {
		var ret HeliosMonthSchedule
		return ret
	}
	return *o.MonthSchedule
}

// GetMonthScheduleOk returns a tuple with the MonthSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosFullSchedule) GetMonthScheduleOk() (*HeliosMonthSchedule, bool) {
	if o == nil || IsNil(o.MonthSchedule) {
		return nil, false
	}
	return o.MonthSchedule, true
}

// HasMonthSchedule returns a boolean if a field has been set.
func (o *HeliosFullSchedule) HasMonthSchedule() bool {
	if o != nil && !IsNil(o.MonthSchedule) {
		return true
	}

	return false
}

// SetMonthSchedule gets a reference to the given HeliosMonthSchedule and assigns it to the MonthSchedule field.
func (o *HeliosFullSchedule) SetMonthSchedule(v HeliosMonthSchedule) {
	o.MonthSchedule = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosFullSchedule) GetUnit() string {
	if o == nil || IsNil(o.Unit.Get()) {
		var ret string
		return ret
	}
	return *o.Unit.Get()
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosFullSchedule) GetUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Unit.Get(), o.Unit.IsSet()
}

// HasUnit returns a boolean if a field has been set.
func (o *HeliosFullSchedule) HasUnit() bool {
	if o != nil && o.Unit.IsSet() {
		return true
	}

	return false
}

// SetUnit gets a reference to the given NullableString and assigns it to the Unit field.
func (o *HeliosFullSchedule) SetUnit(v string) {
	o.Unit.Set(&v)
}
// SetUnitNil sets the value for Unit to be an explicit nil
func (o *HeliosFullSchedule) SetUnitNil() {
	o.Unit.Set(nil)
}

// UnsetUnit ensures that no value is present for Unit, not even an explicit nil
func (o *HeliosFullSchedule) UnsetUnit() {
	o.Unit.Unset()
}

// GetWeekSchedule returns the WeekSchedule field value if set, zero value otherwise.
func (o *HeliosFullSchedule) GetWeekSchedule() HeliosWeekSchedule {
	if o == nil || IsNil(o.WeekSchedule) {
		var ret HeliosWeekSchedule
		return ret
	}
	return *o.WeekSchedule
}

// GetWeekScheduleOk returns a tuple with the WeekSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosFullSchedule) GetWeekScheduleOk() (*HeliosWeekSchedule, bool) {
	if o == nil || IsNil(o.WeekSchedule) {
		return nil, false
	}
	return o.WeekSchedule, true
}

// HasWeekSchedule returns a boolean if a field has been set.
func (o *HeliosFullSchedule) HasWeekSchedule() bool {
	if o != nil && !IsNil(o.WeekSchedule) {
		return true
	}

	return false
}

// SetWeekSchedule gets a reference to the given HeliosWeekSchedule and assigns it to the WeekSchedule field.
func (o *HeliosFullSchedule) SetWeekSchedule(v HeliosWeekSchedule) {
	o.WeekSchedule = &v
}

func (o HeliosFullSchedule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeliosFullSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DaySchedule) {
		toSerialize["daySchedule"] = o.DaySchedule
	}
	if !IsNil(o.MonthSchedule) {
		toSerialize["monthSchedule"] = o.MonthSchedule
	}
	if o.Unit.IsSet() {
		toSerialize["unit"] = o.Unit.Get()
	}
	if !IsNil(o.WeekSchedule) {
		toSerialize["weekSchedule"] = o.WeekSchedule
	}
	return toSerialize, nil
}

type NullableHeliosFullSchedule struct {
	value *HeliosFullSchedule
	isSet bool
}

func (v NullableHeliosFullSchedule) Get() *HeliosFullSchedule {
	return v.value
}

func (v *NullableHeliosFullSchedule) Set(val *HeliosFullSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosFullSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosFullSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosFullSchedule(val *HeliosFullSchedule) *NullableHeliosFullSchedule {
	return &NullableHeliosFullSchedule{value: val, isSet: true}
}

func (v NullableHeliosFullSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosFullSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


