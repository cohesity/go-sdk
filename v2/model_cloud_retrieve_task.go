/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CloudRetrieveTask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudRetrieveTask{}

// CloudRetrieveTask Specifies cloud retrieve task info.
type CloudRetrieveTask struct {
	// Specifies the task end time in microseconds.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	// Message about the cloud retrieve task.
	Message NullableString `json:"message,omitempty"`
	// Specifies the percentage of the task.
	PercentageFinished NullableInt64 `json:"percentageFinished,omitempty"`
	// Specifies the pulse task id.
	PulseTaskId NullableInt32 `json:"pulseTaskId,omitempty"`
	// Specifies the task start time in microseconds.
	StartTimeUsecs NullableInt64 `json:"startTimeUsecs,omitempty"`
	// Specifies the status of the retrieve task.
	Status NullableString `json:"status,omitempty"`
	// Specifies the time remaining to complete the retrieve task.
	TimeRemainingSeconds NullableInt64 `json:"timeRemainingSeconds,omitempty"`
}

// NewCloudRetrieveTask instantiates a new CloudRetrieveTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudRetrieveTask() *CloudRetrieveTask {
	this := CloudRetrieveTask{}
	return &this
}

// NewCloudRetrieveTaskWithDefaults instantiates a new CloudRetrieveTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudRetrieveTaskWithDefaults() *CloudRetrieveTask {
	this := CloudRetrieveTask{}
	return &this
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudRetrieveTask) GetEndTimeUsecs() int64 {
	if o == nil || IsNil(o.EndTimeUsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudRetrieveTask) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *CloudRetrieveTask) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *CloudRetrieveTask) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *CloudRetrieveTask) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *CloudRetrieveTask) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudRetrieveTask) GetMessage() string {
	if o == nil || IsNil(o.Message.Get()) {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudRetrieveTask) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *CloudRetrieveTask) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *CloudRetrieveTask) SetMessage(v string) {
	o.Message.Set(&v)
}
// SetMessageNil sets the value for Message to be an explicit nil
func (o *CloudRetrieveTask) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *CloudRetrieveTask) UnsetMessage() {
	o.Message.Unset()
}

// GetPercentageFinished returns the PercentageFinished field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudRetrieveTask) GetPercentageFinished() int64 {
	if o == nil || IsNil(o.PercentageFinished.Get()) {
		var ret int64
		return ret
	}
	return *o.PercentageFinished.Get()
}

// GetPercentageFinishedOk returns a tuple with the PercentageFinished field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudRetrieveTask) GetPercentageFinishedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PercentageFinished.Get(), o.PercentageFinished.IsSet()
}

// HasPercentageFinished returns a boolean if a field has been set.
func (o *CloudRetrieveTask) HasPercentageFinished() bool {
	if o != nil && o.PercentageFinished.IsSet() {
		return true
	}

	return false
}

// SetPercentageFinished gets a reference to the given NullableInt64 and assigns it to the PercentageFinished field.
func (o *CloudRetrieveTask) SetPercentageFinished(v int64) {
	o.PercentageFinished.Set(&v)
}
// SetPercentageFinishedNil sets the value for PercentageFinished to be an explicit nil
func (o *CloudRetrieveTask) SetPercentageFinishedNil() {
	o.PercentageFinished.Set(nil)
}

// UnsetPercentageFinished ensures that no value is present for PercentageFinished, not even an explicit nil
func (o *CloudRetrieveTask) UnsetPercentageFinished() {
	o.PercentageFinished.Unset()
}

// GetPulseTaskId returns the PulseTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudRetrieveTask) GetPulseTaskId() int32 {
	if o == nil || IsNil(o.PulseTaskId.Get()) {
		var ret int32
		return ret
	}
	return *o.PulseTaskId.Get()
}

// GetPulseTaskIdOk returns a tuple with the PulseTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudRetrieveTask) GetPulseTaskIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PulseTaskId.Get(), o.PulseTaskId.IsSet()
}

// HasPulseTaskId returns a boolean if a field has been set.
func (o *CloudRetrieveTask) HasPulseTaskId() bool {
	if o != nil && o.PulseTaskId.IsSet() {
		return true
	}

	return false
}

// SetPulseTaskId gets a reference to the given NullableInt32 and assigns it to the PulseTaskId field.
func (o *CloudRetrieveTask) SetPulseTaskId(v int32) {
	o.PulseTaskId.Set(&v)
}
// SetPulseTaskIdNil sets the value for PulseTaskId to be an explicit nil
func (o *CloudRetrieveTask) SetPulseTaskIdNil() {
	o.PulseTaskId.Set(nil)
}

// UnsetPulseTaskId ensures that no value is present for PulseTaskId, not even an explicit nil
func (o *CloudRetrieveTask) UnsetPulseTaskId() {
	o.PulseTaskId.Unset()
}

// GetStartTimeUsecs returns the StartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudRetrieveTask) GetStartTimeUsecs() int64 {
	if o == nil || IsNil(o.StartTimeUsecs.Get()) {
		var ret int64
		return ret
	}
	return *o.StartTimeUsecs.Get()
}

// GetStartTimeUsecsOk returns a tuple with the StartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudRetrieveTask) GetStartTimeUsecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartTimeUsecs.Get(), o.StartTimeUsecs.IsSet()
}

// HasStartTimeUsecs returns a boolean if a field has been set.
func (o *CloudRetrieveTask) HasStartTimeUsecs() bool {
	if o != nil && o.StartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the StartTimeUsecs field.
func (o *CloudRetrieveTask) SetStartTimeUsecs(v int64) {
	o.StartTimeUsecs.Set(&v)
}
// SetStartTimeUsecsNil sets the value for StartTimeUsecs to be an explicit nil
func (o *CloudRetrieveTask) SetStartTimeUsecsNil() {
	o.StartTimeUsecs.Set(nil)
}

// UnsetStartTimeUsecs ensures that no value is present for StartTimeUsecs, not even an explicit nil
func (o *CloudRetrieveTask) UnsetStartTimeUsecs() {
	o.StartTimeUsecs.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudRetrieveTask) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudRetrieveTask) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *CloudRetrieveTask) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *CloudRetrieveTask) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *CloudRetrieveTask) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *CloudRetrieveTask) UnsetStatus() {
	o.Status.Unset()
}

// GetTimeRemainingSeconds returns the TimeRemainingSeconds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudRetrieveTask) GetTimeRemainingSeconds() int64 {
	if o == nil || IsNil(o.TimeRemainingSeconds.Get()) {
		var ret int64
		return ret
	}
	return *o.TimeRemainingSeconds.Get()
}

// GetTimeRemainingSecondsOk returns a tuple with the TimeRemainingSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudRetrieveTask) GetTimeRemainingSecondsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeRemainingSeconds.Get(), o.TimeRemainingSeconds.IsSet()
}

// HasTimeRemainingSeconds returns a boolean if a field has been set.
func (o *CloudRetrieveTask) HasTimeRemainingSeconds() bool {
	if o != nil && o.TimeRemainingSeconds.IsSet() {
		return true
	}

	return false
}

// SetTimeRemainingSeconds gets a reference to the given NullableInt64 and assigns it to the TimeRemainingSeconds field.
func (o *CloudRetrieveTask) SetTimeRemainingSeconds(v int64) {
	o.TimeRemainingSeconds.Set(&v)
}
// SetTimeRemainingSecondsNil sets the value for TimeRemainingSeconds to be an explicit nil
func (o *CloudRetrieveTask) SetTimeRemainingSecondsNil() {
	o.TimeRemainingSeconds.Set(nil)
}

// UnsetTimeRemainingSeconds ensures that no value is present for TimeRemainingSeconds, not even an explicit nil
func (o *CloudRetrieveTask) UnsetTimeRemainingSeconds() {
	o.TimeRemainingSeconds.Unset()
}

func (o CloudRetrieveTask) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudRetrieveTask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	if o.PercentageFinished.IsSet() {
		toSerialize["percentageFinished"] = o.PercentageFinished.Get()
	}
	if o.PulseTaskId.IsSet() {
		toSerialize["pulseTaskId"] = o.PulseTaskId.Get()
	}
	if o.StartTimeUsecs.IsSet() {
		toSerialize["startTimeUsecs"] = o.StartTimeUsecs.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.TimeRemainingSeconds.IsSet() {
		toSerialize["timeRemainingSeconds"] = o.TimeRemainingSeconds.Get()
	}
	return toSerialize, nil
}

type NullableCloudRetrieveTask struct {
	value *CloudRetrieveTask
	isSet bool
}

func (v NullableCloudRetrieveTask) Get() *CloudRetrieveTask {
	return v.value
}

func (v *NullableCloudRetrieveTask) Set(val *CloudRetrieveTask) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudRetrieveTask) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudRetrieveTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudRetrieveTask(val *CloudRetrieveTask) *NullableCloudRetrieveTask {
	return &NullableCloudRetrieveTask{value: val, isSet: true}
}

func (v NullableCloudRetrieveTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudRetrieveTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


