/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HadoopConnectionParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HadoopConnectionParams{}

// HadoopConnectionParams Specifies the parameters to connect to a seed node and fetch information from its config file.
type HadoopConnectionParams struct {
	// The directory containing the application specific config file. .
	ConfigurationDirectory string `json:"configurationDirectory"`
	// HDFS Connection Type.
	HdfsConnectionType NullableString `json:"hdfsConnectionType,omitempty"`
	// IP or hostname of any host from which the  configuration file can be read.
	Host string `json:"host"`
	SshPasswordCredentials NullableHadoopConnectionParamsSshPasswordCredentials `json:"sshPasswordCredentials,omitempty"`
	SshPrivateKeyCredentials NullableHadoopConnectionParamsSshPrivateKeyCredentials `json:"sshPrivateKeyCredentials,omitempty"`
}

type _HadoopConnectionParams HadoopConnectionParams

// NewHadoopConnectionParams instantiates a new HadoopConnectionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHadoopConnectionParams(configurationDirectory string, host string) *HadoopConnectionParams {
	this := HadoopConnectionParams{}
	this.ConfigurationDirectory = configurationDirectory
	this.Host = host
	return &this
}

// NewHadoopConnectionParamsWithDefaults instantiates a new HadoopConnectionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHadoopConnectionParamsWithDefaults() *HadoopConnectionParams {
	this := HadoopConnectionParams{}
	return &this
}

// GetConfigurationDirectory returns the ConfigurationDirectory field value
func (o *HadoopConnectionParams) GetConfigurationDirectory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConfigurationDirectory
}

// GetConfigurationDirectoryOk returns a tuple with the ConfigurationDirectory field value
// and a boolean to check if the value has been set.
func (o *HadoopConnectionParams) GetConfigurationDirectoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConfigurationDirectory, true
}

// SetConfigurationDirectory sets field value
func (o *HadoopConnectionParams) SetConfigurationDirectory(v string) {
	o.ConfigurationDirectory = v
}

// GetHdfsConnectionType returns the HdfsConnectionType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HadoopConnectionParams) GetHdfsConnectionType() string {
	if o == nil || IsNil(o.HdfsConnectionType.Get()) {
		var ret string
		return ret
	}
	return *o.HdfsConnectionType.Get()
}

// GetHdfsConnectionTypeOk returns a tuple with the HdfsConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HadoopConnectionParams) GetHdfsConnectionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HdfsConnectionType.Get(), o.HdfsConnectionType.IsSet()
}

// HasHdfsConnectionType returns a boolean if a field has been set.
func (o *HadoopConnectionParams) HasHdfsConnectionType() bool {
	if o != nil && o.HdfsConnectionType.IsSet() {
		return true
	}

	return false
}

// SetHdfsConnectionType gets a reference to the given NullableString and assigns it to the HdfsConnectionType field.
func (o *HadoopConnectionParams) SetHdfsConnectionType(v string) {
	o.HdfsConnectionType.Set(&v)
}
// SetHdfsConnectionTypeNil sets the value for HdfsConnectionType to be an explicit nil
func (o *HadoopConnectionParams) SetHdfsConnectionTypeNil() {
	o.HdfsConnectionType.Set(nil)
}

// UnsetHdfsConnectionType ensures that no value is present for HdfsConnectionType, not even an explicit nil
func (o *HadoopConnectionParams) UnsetHdfsConnectionType() {
	o.HdfsConnectionType.Unset()
}

// GetHost returns the Host field value
func (o *HadoopConnectionParams) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *HadoopConnectionParams) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *HadoopConnectionParams) SetHost(v string) {
	o.Host = v
}

// GetSshPasswordCredentials returns the SshPasswordCredentials field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HadoopConnectionParams) GetSshPasswordCredentials() HadoopConnectionParamsSshPasswordCredentials {
	if o == nil || IsNil(o.SshPasswordCredentials.Get()) {
		var ret HadoopConnectionParamsSshPasswordCredentials
		return ret
	}
	return *o.SshPasswordCredentials.Get()
}

// GetSshPasswordCredentialsOk returns a tuple with the SshPasswordCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HadoopConnectionParams) GetSshPasswordCredentialsOk() (*HadoopConnectionParamsSshPasswordCredentials, bool) {
	if o == nil {
		return nil, false
	}
	return o.SshPasswordCredentials.Get(), o.SshPasswordCredentials.IsSet()
}

// HasSshPasswordCredentials returns a boolean if a field has been set.
func (o *HadoopConnectionParams) HasSshPasswordCredentials() bool {
	if o != nil && o.SshPasswordCredentials.IsSet() {
		return true
	}

	return false
}

// SetSshPasswordCredentials gets a reference to the given NullableHadoopConnectionParamsSshPasswordCredentials and assigns it to the SshPasswordCredentials field.
func (o *HadoopConnectionParams) SetSshPasswordCredentials(v HadoopConnectionParamsSshPasswordCredentials) {
	o.SshPasswordCredentials.Set(&v)
}
// SetSshPasswordCredentialsNil sets the value for SshPasswordCredentials to be an explicit nil
func (o *HadoopConnectionParams) SetSshPasswordCredentialsNil() {
	o.SshPasswordCredentials.Set(nil)
}

// UnsetSshPasswordCredentials ensures that no value is present for SshPasswordCredentials, not even an explicit nil
func (o *HadoopConnectionParams) UnsetSshPasswordCredentials() {
	o.SshPasswordCredentials.Unset()
}

// GetSshPrivateKeyCredentials returns the SshPrivateKeyCredentials field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HadoopConnectionParams) GetSshPrivateKeyCredentials() HadoopConnectionParamsSshPrivateKeyCredentials {
	if o == nil || IsNil(o.SshPrivateKeyCredentials.Get()) {
		var ret HadoopConnectionParamsSshPrivateKeyCredentials
		return ret
	}
	return *o.SshPrivateKeyCredentials.Get()
}

// GetSshPrivateKeyCredentialsOk returns a tuple with the SshPrivateKeyCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HadoopConnectionParams) GetSshPrivateKeyCredentialsOk() (*HadoopConnectionParamsSshPrivateKeyCredentials, bool) {
	if o == nil {
		return nil, false
	}
	return o.SshPrivateKeyCredentials.Get(), o.SshPrivateKeyCredentials.IsSet()
}

// HasSshPrivateKeyCredentials returns a boolean if a field has been set.
func (o *HadoopConnectionParams) HasSshPrivateKeyCredentials() bool {
	if o != nil && o.SshPrivateKeyCredentials.IsSet() {
		return true
	}

	return false
}

// SetSshPrivateKeyCredentials gets a reference to the given NullableHadoopConnectionParamsSshPrivateKeyCredentials and assigns it to the SshPrivateKeyCredentials field.
func (o *HadoopConnectionParams) SetSshPrivateKeyCredentials(v HadoopConnectionParamsSshPrivateKeyCredentials) {
	o.SshPrivateKeyCredentials.Set(&v)
}
// SetSshPrivateKeyCredentialsNil sets the value for SshPrivateKeyCredentials to be an explicit nil
func (o *HadoopConnectionParams) SetSshPrivateKeyCredentialsNil() {
	o.SshPrivateKeyCredentials.Set(nil)
}

// UnsetSshPrivateKeyCredentials ensures that no value is present for SshPrivateKeyCredentials, not even an explicit nil
func (o *HadoopConnectionParams) UnsetSshPrivateKeyCredentials() {
	o.SshPrivateKeyCredentials.Unset()
}

func (o HadoopConnectionParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HadoopConnectionParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["configurationDirectory"] = o.ConfigurationDirectory
	if o.HdfsConnectionType.IsSet() {
		toSerialize["hdfsConnectionType"] = o.HdfsConnectionType.Get()
	}
	toSerialize["host"] = o.Host
	if o.SshPasswordCredentials.IsSet() {
		toSerialize["sshPasswordCredentials"] = o.SshPasswordCredentials.Get()
	}
	if o.SshPrivateKeyCredentials.IsSet() {
		toSerialize["sshPrivateKeyCredentials"] = o.SshPrivateKeyCredentials.Get()
	}
	return toSerialize, nil
}

func (o *HadoopConnectionParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"configurationDirectory",
		"host",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHadoopConnectionParams := _HadoopConnectionParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHadoopConnectionParams)

	if err != nil {
		return err
	}

	*o = HadoopConnectionParams(varHadoopConnectionParams)

	return err
}

type NullableHadoopConnectionParams struct {
	value *HadoopConnectionParams
	isSet bool
}

func (v NullableHadoopConnectionParams) Get() *HadoopConnectionParams {
	return v.value
}

func (v *NullableHadoopConnectionParams) Set(val *HadoopConnectionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableHadoopConnectionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableHadoopConnectionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHadoopConnectionParams(val *HadoopConnectionParams) *NullableHadoopConnectionParams {
	return &NullableHadoopConnectionParams{value: val, isSet: true}
}

func (v NullableHadoopConnectionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHadoopConnectionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


