/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AntivirusScanConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AntivirusScanConfig{}

// AntivirusScanConfig Specifies the antivirus scan config settings for this View.
type AntivirusScanConfig struct {
	// Specifies whether block access to the file when antivirus scan fails.
	BlockAccessOnScanFailure NullableBool `json:"blockAccessOnScanFailure,omitempty"`
	// Specifies whether the antivirus service is enabled or not.
	IsEnabled NullableBool `json:"isEnabled,omitempty"`
	// Specifies maximum file size that will be sent to antivirus server for scanning. if greater than zero, the file size that exceeds this size would be skipped from virus scan.
	MaximumScanFileSize NullableInt64 `json:"maximumScanFileSize,omitempty"`
	PrefixScanFilter *AntivirusScanConfigPrefixScanFilter `json:"prefixScanFilter,omitempty"`
	S3TaggingFilter *AntivirusScanConfigS3TaggingFilter `json:"s3TaggingFilter,omitempty"`
	ScanFilter *AntivirusScanConfigScanFilter `json:"scanFilter,omitempty"`
	// Specifies whether to scan a SMB file or S3 object before it is opened/GET.
	ScanOnAccess NullableBool `json:"scanOnAccess,omitempty"`
	// Specifies whether to scan a SMB file when it is closed after modify.
	ScanOnClose NullableBool `json:"scanOnClose,omitempty"`
	// Specifies whether to scan a S3 object after it is PUT.
	ScanOnPut NullableBool `json:"scanOnPut,omitempty"`
	// Specifies the maximum amount of time that a scan can take before timing out.
	ScanTimeoutUsecs NullableInt32 `json:"scanTimeoutUsecs"`
}

type _AntivirusScanConfig AntivirusScanConfig

// NewAntivirusScanConfig instantiates a new AntivirusScanConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAntivirusScanConfig(scanTimeoutUsecs NullableInt32) *AntivirusScanConfig {
	this := AntivirusScanConfig{}
	this.ScanTimeoutUsecs = scanTimeoutUsecs
	return &this
}

// NewAntivirusScanConfigWithDefaults instantiates a new AntivirusScanConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAntivirusScanConfigWithDefaults() *AntivirusScanConfig {
	this := AntivirusScanConfig{}
	return &this
}

// GetBlockAccessOnScanFailure returns the BlockAccessOnScanFailure field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusScanConfig) GetBlockAccessOnScanFailure() bool {
	if o == nil || IsNil(o.BlockAccessOnScanFailure.Get()) {
		var ret bool
		return ret
	}
	return *o.BlockAccessOnScanFailure.Get()
}

// GetBlockAccessOnScanFailureOk returns a tuple with the BlockAccessOnScanFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusScanConfig) GetBlockAccessOnScanFailureOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BlockAccessOnScanFailure.Get(), o.BlockAccessOnScanFailure.IsSet()
}

// HasBlockAccessOnScanFailure returns a boolean if a field has been set.
func (o *AntivirusScanConfig) HasBlockAccessOnScanFailure() bool {
	if o != nil && o.BlockAccessOnScanFailure.IsSet() {
		return true
	}

	return false
}

// SetBlockAccessOnScanFailure gets a reference to the given NullableBool and assigns it to the BlockAccessOnScanFailure field.
func (o *AntivirusScanConfig) SetBlockAccessOnScanFailure(v bool) {
	o.BlockAccessOnScanFailure.Set(&v)
}
// SetBlockAccessOnScanFailureNil sets the value for BlockAccessOnScanFailure to be an explicit nil
func (o *AntivirusScanConfig) SetBlockAccessOnScanFailureNil() {
	o.BlockAccessOnScanFailure.Set(nil)
}

// UnsetBlockAccessOnScanFailure ensures that no value is present for BlockAccessOnScanFailure, not even an explicit nil
func (o *AntivirusScanConfig) UnsetBlockAccessOnScanFailure() {
	o.BlockAccessOnScanFailure.Unset()
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusScanConfig) GetIsEnabled() bool {
	if o == nil || IsNil(o.IsEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.IsEnabled.Get()
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusScanConfig) GetIsEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsEnabled.Get(), o.IsEnabled.IsSet()
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *AntivirusScanConfig) HasIsEnabled() bool {
	if o != nil && o.IsEnabled.IsSet() {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given NullableBool and assigns it to the IsEnabled field.
func (o *AntivirusScanConfig) SetIsEnabled(v bool) {
	o.IsEnabled.Set(&v)
}
// SetIsEnabledNil sets the value for IsEnabled to be an explicit nil
func (o *AntivirusScanConfig) SetIsEnabledNil() {
	o.IsEnabled.Set(nil)
}

// UnsetIsEnabled ensures that no value is present for IsEnabled, not even an explicit nil
func (o *AntivirusScanConfig) UnsetIsEnabled() {
	o.IsEnabled.Unset()
}

// GetMaximumScanFileSize returns the MaximumScanFileSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusScanConfig) GetMaximumScanFileSize() int64 {
	if o == nil || IsNil(o.MaximumScanFileSize.Get()) {
		var ret int64
		return ret
	}
	return *o.MaximumScanFileSize.Get()
}

// GetMaximumScanFileSizeOk returns a tuple with the MaximumScanFileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusScanConfig) GetMaximumScanFileSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaximumScanFileSize.Get(), o.MaximumScanFileSize.IsSet()
}

// HasMaximumScanFileSize returns a boolean if a field has been set.
func (o *AntivirusScanConfig) HasMaximumScanFileSize() bool {
	if o != nil && o.MaximumScanFileSize.IsSet() {
		return true
	}

	return false
}

// SetMaximumScanFileSize gets a reference to the given NullableInt64 and assigns it to the MaximumScanFileSize field.
func (o *AntivirusScanConfig) SetMaximumScanFileSize(v int64) {
	o.MaximumScanFileSize.Set(&v)
}
// SetMaximumScanFileSizeNil sets the value for MaximumScanFileSize to be an explicit nil
func (o *AntivirusScanConfig) SetMaximumScanFileSizeNil() {
	o.MaximumScanFileSize.Set(nil)
}

// UnsetMaximumScanFileSize ensures that no value is present for MaximumScanFileSize, not even an explicit nil
func (o *AntivirusScanConfig) UnsetMaximumScanFileSize() {
	o.MaximumScanFileSize.Unset()
}

// GetPrefixScanFilter returns the PrefixScanFilter field value if set, zero value otherwise.
func (o *AntivirusScanConfig) GetPrefixScanFilter() AntivirusScanConfigPrefixScanFilter {
	if o == nil || IsNil(o.PrefixScanFilter) {
		var ret AntivirusScanConfigPrefixScanFilter
		return ret
	}
	return *o.PrefixScanFilter
}

// GetPrefixScanFilterOk returns a tuple with the PrefixScanFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntivirusScanConfig) GetPrefixScanFilterOk() (*AntivirusScanConfigPrefixScanFilter, bool) {
	if o == nil || IsNil(o.PrefixScanFilter) {
		return nil, false
	}
	return o.PrefixScanFilter, true
}

// HasPrefixScanFilter returns a boolean if a field has been set.
func (o *AntivirusScanConfig) HasPrefixScanFilter() bool {
	if o != nil && !IsNil(o.PrefixScanFilter) {
		return true
	}

	return false
}

// SetPrefixScanFilter gets a reference to the given AntivirusScanConfigPrefixScanFilter and assigns it to the PrefixScanFilter field.
func (o *AntivirusScanConfig) SetPrefixScanFilter(v AntivirusScanConfigPrefixScanFilter) {
	o.PrefixScanFilter = &v
}

// GetS3TaggingFilter returns the S3TaggingFilter field value if set, zero value otherwise.
func (o *AntivirusScanConfig) GetS3TaggingFilter() AntivirusScanConfigS3TaggingFilter {
	if o == nil || IsNil(o.S3TaggingFilter) {
		var ret AntivirusScanConfigS3TaggingFilter
		return ret
	}
	return *o.S3TaggingFilter
}

// GetS3TaggingFilterOk returns a tuple with the S3TaggingFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntivirusScanConfig) GetS3TaggingFilterOk() (*AntivirusScanConfigS3TaggingFilter, bool) {
	if o == nil || IsNil(o.S3TaggingFilter) {
		return nil, false
	}
	return o.S3TaggingFilter, true
}

// HasS3TaggingFilter returns a boolean if a field has been set.
func (o *AntivirusScanConfig) HasS3TaggingFilter() bool {
	if o != nil && !IsNil(o.S3TaggingFilter) {
		return true
	}

	return false
}

// SetS3TaggingFilter gets a reference to the given AntivirusScanConfigS3TaggingFilter and assigns it to the S3TaggingFilter field.
func (o *AntivirusScanConfig) SetS3TaggingFilter(v AntivirusScanConfigS3TaggingFilter) {
	o.S3TaggingFilter = &v
}

// GetScanFilter returns the ScanFilter field value if set, zero value otherwise.
func (o *AntivirusScanConfig) GetScanFilter() AntivirusScanConfigScanFilter {
	if o == nil || IsNil(o.ScanFilter) {
		var ret AntivirusScanConfigScanFilter
		return ret
	}
	return *o.ScanFilter
}

// GetScanFilterOk returns a tuple with the ScanFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntivirusScanConfig) GetScanFilterOk() (*AntivirusScanConfigScanFilter, bool) {
	if o == nil || IsNil(o.ScanFilter) {
		return nil, false
	}
	return o.ScanFilter, true
}

// HasScanFilter returns a boolean if a field has been set.
func (o *AntivirusScanConfig) HasScanFilter() bool {
	if o != nil && !IsNil(o.ScanFilter) {
		return true
	}

	return false
}

// SetScanFilter gets a reference to the given AntivirusScanConfigScanFilter and assigns it to the ScanFilter field.
func (o *AntivirusScanConfig) SetScanFilter(v AntivirusScanConfigScanFilter) {
	o.ScanFilter = &v
}

// GetScanOnAccess returns the ScanOnAccess field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusScanConfig) GetScanOnAccess() bool {
	if o == nil || IsNil(o.ScanOnAccess.Get()) {
		var ret bool
		return ret
	}
	return *o.ScanOnAccess.Get()
}

// GetScanOnAccessOk returns a tuple with the ScanOnAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusScanConfig) GetScanOnAccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScanOnAccess.Get(), o.ScanOnAccess.IsSet()
}

// HasScanOnAccess returns a boolean if a field has been set.
func (o *AntivirusScanConfig) HasScanOnAccess() bool {
	if o != nil && o.ScanOnAccess.IsSet() {
		return true
	}

	return false
}

// SetScanOnAccess gets a reference to the given NullableBool and assigns it to the ScanOnAccess field.
func (o *AntivirusScanConfig) SetScanOnAccess(v bool) {
	o.ScanOnAccess.Set(&v)
}
// SetScanOnAccessNil sets the value for ScanOnAccess to be an explicit nil
func (o *AntivirusScanConfig) SetScanOnAccessNil() {
	o.ScanOnAccess.Set(nil)
}

// UnsetScanOnAccess ensures that no value is present for ScanOnAccess, not even an explicit nil
func (o *AntivirusScanConfig) UnsetScanOnAccess() {
	o.ScanOnAccess.Unset()
}

// GetScanOnClose returns the ScanOnClose field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusScanConfig) GetScanOnClose() bool {
	if o == nil || IsNil(o.ScanOnClose.Get()) {
		var ret bool
		return ret
	}
	return *o.ScanOnClose.Get()
}

// GetScanOnCloseOk returns a tuple with the ScanOnClose field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusScanConfig) GetScanOnCloseOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScanOnClose.Get(), o.ScanOnClose.IsSet()
}

// HasScanOnClose returns a boolean if a field has been set.
func (o *AntivirusScanConfig) HasScanOnClose() bool {
	if o != nil && o.ScanOnClose.IsSet() {
		return true
	}

	return false
}

// SetScanOnClose gets a reference to the given NullableBool and assigns it to the ScanOnClose field.
func (o *AntivirusScanConfig) SetScanOnClose(v bool) {
	o.ScanOnClose.Set(&v)
}
// SetScanOnCloseNil sets the value for ScanOnClose to be an explicit nil
func (o *AntivirusScanConfig) SetScanOnCloseNil() {
	o.ScanOnClose.Set(nil)
}

// UnsetScanOnClose ensures that no value is present for ScanOnClose, not even an explicit nil
func (o *AntivirusScanConfig) UnsetScanOnClose() {
	o.ScanOnClose.Unset()
}

// GetScanOnPut returns the ScanOnPut field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusScanConfig) GetScanOnPut() bool {
	if o == nil || IsNil(o.ScanOnPut.Get()) {
		var ret bool
		return ret
	}
	return *o.ScanOnPut.Get()
}

// GetScanOnPutOk returns a tuple with the ScanOnPut field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusScanConfig) GetScanOnPutOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScanOnPut.Get(), o.ScanOnPut.IsSet()
}

// HasScanOnPut returns a boolean if a field has been set.
func (o *AntivirusScanConfig) HasScanOnPut() bool {
	if o != nil && o.ScanOnPut.IsSet() {
		return true
	}

	return false
}

// SetScanOnPut gets a reference to the given NullableBool and assigns it to the ScanOnPut field.
func (o *AntivirusScanConfig) SetScanOnPut(v bool) {
	o.ScanOnPut.Set(&v)
}
// SetScanOnPutNil sets the value for ScanOnPut to be an explicit nil
func (o *AntivirusScanConfig) SetScanOnPutNil() {
	o.ScanOnPut.Set(nil)
}

// UnsetScanOnPut ensures that no value is present for ScanOnPut, not even an explicit nil
func (o *AntivirusScanConfig) UnsetScanOnPut() {
	o.ScanOnPut.Unset()
}

// GetScanTimeoutUsecs returns the ScanTimeoutUsecs field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *AntivirusScanConfig) GetScanTimeoutUsecs() int32 {
	if o == nil || o.ScanTimeoutUsecs.Get() == nil {
		var ret int32
		return ret
	}

	return *o.ScanTimeoutUsecs.Get()
}

// GetScanTimeoutUsecsOk returns a tuple with the ScanTimeoutUsecs field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusScanConfig) GetScanTimeoutUsecsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScanTimeoutUsecs.Get(), o.ScanTimeoutUsecs.IsSet()
}

// SetScanTimeoutUsecs sets field value
func (o *AntivirusScanConfig) SetScanTimeoutUsecs(v int32) {
	o.ScanTimeoutUsecs.Set(&v)
}

func (o AntivirusScanConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AntivirusScanConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BlockAccessOnScanFailure.IsSet() {
		toSerialize["blockAccessOnScanFailure"] = o.BlockAccessOnScanFailure.Get()
	}
	if o.IsEnabled.IsSet() {
		toSerialize["isEnabled"] = o.IsEnabled.Get()
	}
	if o.MaximumScanFileSize.IsSet() {
		toSerialize["maximumScanFileSize"] = o.MaximumScanFileSize.Get()
	}
	if !IsNil(o.PrefixScanFilter) {
		toSerialize["prefixScanFilter"] = o.PrefixScanFilter
	}
	if !IsNil(o.S3TaggingFilter) {
		toSerialize["s3TaggingFilter"] = o.S3TaggingFilter
	}
	if !IsNil(o.ScanFilter) {
		toSerialize["scanFilter"] = o.ScanFilter
	}
	if o.ScanOnAccess.IsSet() {
		toSerialize["scanOnAccess"] = o.ScanOnAccess.Get()
	}
	if o.ScanOnClose.IsSet() {
		toSerialize["scanOnClose"] = o.ScanOnClose.Get()
	}
	if o.ScanOnPut.IsSet() {
		toSerialize["scanOnPut"] = o.ScanOnPut.Get()
	}
	toSerialize["scanTimeoutUsecs"] = o.ScanTimeoutUsecs.Get()
	return toSerialize, nil
}

func (o *AntivirusScanConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"scanTimeoutUsecs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAntivirusScanConfig := _AntivirusScanConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAntivirusScanConfig)

	if err != nil {
		return err
	}

	*o = AntivirusScanConfig(varAntivirusScanConfig)

	return err
}

type NullableAntivirusScanConfig struct {
	value *AntivirusScanConfig
	isSet bool
}

func (v NullableAntivirusScanConfig) Get() *AntivirusScanConfig {
	return v.value
}

func (v *NullableAntivirusScanConfig) Set(val *AntivirusScanConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAntivirusScanConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAntivirusScanConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAntivirusScanConfig(val *AntivirusScanConfig) *NullableAntivirusScanConfig {
	return &NullableAntivirusScanConfig{value: val, isSet: true}
}

func (v NullableAntivirusScanConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAntivirusScanConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


