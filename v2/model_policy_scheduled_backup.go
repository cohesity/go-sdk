/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the PolicyScheduledBackup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyScheduledBackup{}

// PolicyScheduledBackup Policy Scheduled Backup type.
type PolicyScheduledBackup struct {
	// Specifies Scheduled Backup type.
	PolicyScheduledBackup *string `json:"PolicyScheduledBackup,omitempty"`
}

// NewPolicyScheduledBackup instantiates a new PolicyScheduledBackup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyScheduledBackup() *PolicyScheduledBackup {
	this := PolicyScheduledBackup{}
	return &this
}

// NewPolicyScheduledBackupWithDefaults instantiates a new PolicyScheduledBackup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyScheduledBackupWithDefaults() *PolicyScheduledBackup {
	this := PolicyScheduledBackup{}
	return &this
}

// GetPolicyScheduledBackup returns the PolicyScheduledBackup field value if set, zero value otherwise.
func (o *PolicyScheduledBackup) GetPolicyScheduledBackup() string {
	if o == nil || IsNil(o.PolicyScheduledBackup) {
		var ret string
		return ret
	}
	return *o.PolicyScheduledBackup
}

// GetPolicyScheduledBackupOk returns a tuple with the PolicyScheduledBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyScheduledBackup) GetPolicyScheduledBackupOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyScheduledBackup) {
		return nil, false
	}
	return o.PolicyScheduledBackup, true
}

// HasPolicyScheduledBackup returns a boolean if a field has been set.
func (o *PolicyScheduledBackup) HasPolicyScheduledBackup() bool {
	if o != nil && !IsNil(o.PolicyScheduledBackup) {
		return true
	}

	return false
}

// SetPolicyScheduledBackup gets a reference to the given string and assigns it to the PolicyScheduledBackup field.
func (o *PolicyScheduledBackup) SetPolicyScheduledBackup(v string) {
	o.PolicyScheduledBackup = &v
}

func (o PolicyScheduledBackup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyScheduledBackup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PolicyScheduledBackup) {
		toSerialize["PolicyScheduledBackup"] = o.PolicyScheduledBackup
	}
	return toSerialize, nil
}

type NullablePolicyScheduledBackup struct {
	value *PolicyScheduledBackup
	isSet bool
}

func (v NullablePolicyScheduledBackup) Get() *PolicyScheduledBackup {
	return v.value
}

func (v *NullablePolicyScheduledBackup) Set(val *PolicyScheduledBackup) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyScheduledBackup) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyScheduledBackup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyScheduledBackup(val *PolicyScheduledBackup) *NullablePolicyScheduledBackup {
	return &NullablePolicyScheduledBackup{value: val, isSet: true}
}

func (v NullablePolicyScheduledBackup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyScheduledBackup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


