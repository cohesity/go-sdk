/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RecoverO365Params type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecoverO365Params{}

// RecoverO365Params Specifies the recovery options specific to Office 365 environment.
type RecoverO365Params struct {
	DownloadChatsParams NullableRecoverO365ParamsDownloadChatsParams `json:"downloadChatsParams,omitempty"`
	DownloadFileAndFolderParams NullableRecoverO365ParamsDownloadFileAndFolderParams `json:"downloadFileAndFolderParams,omitempty"`
	// Specifies the list of recover Object parameters.
	Objects []CommonRecoverObjectSnapshotParams `json:"objects,omitempty"`
	RecoverMailboxParams *RecoverO365ParamsRecoverMailboxParams `json:"recoverMailboxParams,omitempty"`
	RecoverMsGroupParams *RecoverO365ParamsRecoverMsGroupParams `json:"recoverMsGroupParams,omitempty"`
	RecoverMsTeamParams *RecoverO365ParamsRecoverMsTeamParams `json:"recoverMsTeamParams,omitempty"`
	RecoverOneDriveParams *RecoverO365ParamsRecoverOneDriveParams `json:"recoverOneDriveParams,omitempty"`
	RecoverPublicFoldersParams *RecoverO365ParamsRecoverPublicFoldersParams `json:"recoverPublicFoldersParams,omitempty"`
	RecoverSiteParams *RecoverO365ParamsRecoverSiteParams `json:"recoverSiteParams,omitempty"`
	// Specifies the type of recovery action to be performed.
	RecoveryAction string `json:"recoveryAction"`
}

type _RecoverO365Params RecoverO365Params

// NewRecoverO365Params instantiates a new RecoverO365Params object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverO365Params(recoveryAction string) *RecoverO365Params {
	this := RecoverO365Params{}
	this.RecoveryAction = recoveryAction
	return &this
}

// NewRecoverO365ParamsWithDefaults instantiates a new RecoverO365Params object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverO365ParamsWithDefaults() *RecoverO365Params {
	this := RecoverO365Params{}
	return &this
}

// GetDownloadChatsParams returns the DownloadChatsParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverO365Params) GetDownloadChatsParams() RecoverO365ParamsDownloadChatsParams {
	if o == nil || IsNil(o.DownloadChatsParams.Get()) {
		var ret RecoverO365ParamsDownloadChatsParams
		return ret
	}
	return *o.DownloadChatsParams.Get()
}

// GetDownloadChatsParamsOk returns a tuple with the DownloadChatsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverO365Params) GetDownloadChatsParamsOk() (*RecoverO365ParamsDownloadChatsParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.DownloadChatsParams.Get(), o.DownloadChatsParams.IsSet()
}

// HasDownloadChatsParams returns a boolean if a field has been set.
func (o *RecoverO365Params) HasDownloadChatsParams() bool {
	if o != nil && o.DownloadChatsParams.IsSet() {
		return true
	}

	return false
}

// SetDownloadChatsParams gets a reference to the given NullableRecoverO365ParamsDownloadChatsParams and assigns it to the DownloadChatsParams field.
func (o *RecoverO365Params) SetDownloadChatsParams(v RecoverO365ParamsDownloadChatsParams) {
	o.DownloadChatsParams.Set(&v)
}
// SetDownloadChatsParamsNil sets the value for DownloadChatsParams to be an explicit nil
func (o *RecoverO365Params) SetDownloadChatsParamsNil() {
	o.DownloadChatsParams.Set(nil)
}

// UnsetDownloadChatsParams ensures that no value is present for DownloadChatsParams, not even an explicit nil
func (o *RecoverO365Params) UnsetDownloadChatsParams() {
	o.DownloadChatsParams.Unset()
}

// GetDownloadFileAndFolderParams returns the DownloadFileAndFolderParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverO365Params) GetDownloadFileAndFolderParams() RecoverO365ParamsDownloadFileAndFolderParams {
	if o == nil || IsNil(o.DownloadFileAndFolderParams.Get()) {
		var ret RecoverO365ParamsDownloadFileAndFolderParams
		return ret
	}
	return *o.DownloadFileAndFolderParams.Get()
}

// GetDownloadFileAndFolderParamsOk returns a tuple with the DownloadFileAndFolderParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverO365Params) GetDownloadFileAndFolderParamsOk() (*RecoverO365ParamsDownloadFileAndFolderParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.DownloadFileAndFolderParams.Get(), o.DownloadFileAndFolderParams.IsSet()
}

// HasDownloadFileAndFolderParams returns a boolean if a field has been set.
func (o *RecoverO365Params) HasDownloadFileAndFolderParams() bool {
	if o != nil && o.DownloadFileAndFolderParams.IsSet() {
		return true
	}

	return false
}

// SetDownloadFileAndFolderParams gets a reference to the given NullableRecoverO365ParamsDownloadFileAndFolderParams and assigns it to the DownloadFileAndFolderParams field.
func (o *RecoverO365Params) SetDownloadFileAndFolderParams(v RecoverO365ParamsDownloadFileAndFolderParams) {
	o.DownloadFileAndFolderParams.Set(&v)
}
// SetDownloadFileAndFolderParamsNil sets the value for DownloadFileAndFolderParams to be an explicit nil
func (o *RecoverO365Params) SetDownloadFileAndFolderParamsNil() {
	o.DownloadFileAndFolderParams.Set(nil)
}

// UnsetDownloadFileAndFolderParams ensures that no value is present for DownloadFileAndFolderParams, not even an explicit nil
func (o *RecoverO365Params) UnsetDownloadFileAndFolderParams() {
	o.DownloadFileAndFolderParams.Unset()
}

// GetObjects returns the Objects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverO365Params) GetObjects() []CommonRecoverObjectSnapshotParams {
	if o == nil {
		var ret []CommonRecoverObjectSnapshotParams
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverO365Params) GetObjectsOk() ([]CommonRecoverObjectSnapshotParams, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *RecoverO365Params) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []CommonRecoverObjectSnapshotParams and assigns it to the Objects field.
func (o *RecoverO365Params) SetObjects(v []CommonRecoverObjectSnapshotParams) {
	o.Objects = v
}

// GetRecoverMailboxParams returns the RecoverMailboxParams field value if set, zero value otherwise.
func (o *RecoverO365Params) GetRecoverMailboxParams() RecoverO365ParamsRecoverMailboxParams {
	if o == nil || IsNil(o.RecoverMailboxParams) {
		var ret RecoverO365ParamsRecoverMailboxParams
		return ret
	}
	return *o.RecoverMailboxParams
}

// GetRecoverMailboxParamsOk returns a tuple with the RecoverMailboxParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverO365Params) GetRecoverMailboxParamsOk() (*RecoverO365ParamsRecoverMailboxParams, bool) {
	if o == nil || IsNil(o.RecoverMailboxParams) {
		return nil, false
	}
	return o.RecoverMailboxParams, true
}

// HasRecoverMailboxParams returns a boolean if a field has been set.
func (o *RecoverO365Params) HasRecoverMailboxParams() bool {
	if o != nil && !IsNil(o.RecoverMailboxParams) {
		return true
	}

	return false
}

// SetRecoverMailboxParams gets a reference to the given RecoverO365ParamsRecoverMailboxParams and assigns it to the RecoverMailboxParams field.
func (o *RecoverO365Params) SetRecoverMailboxParams(v RecoverO365ParamsRecoverMailboxParams) {
	o.RecoverMailboxParams = &v
}

// GetRecoverMsGroupParams returns the RecoverMsGroupParams field value if set, zero value otherwise.
func (o *RecoverO365Params) GetRecoverMsGroupParams() RecoverO365ParamsRecoverMsGroupParams {
	if o == nil || IsNil(o.RecoverMsGroupParams) {
		var ret RecoverO365ParamsRecoverMsGroupParams
		return ret
	}
	return *o.RecoverMsGroupParams
}

// GetRecoverMsGroupParamsOk returns a tuple with the RecoverMsGroupParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverO365Params) GetRecoverMsGroupParamsOk() (*RecoverO365ParamsRecoverMsGroupParams, bool) {
	if o == nil || IsNil(o.RecoverMsGroupParams) {
		return nil, false
	}
	return o.RecoverMsGroupParams, true
}

// HasRecoverMsGroupParams returns a boolean if a field has been set.
func (o *RecoverO365Params) HasRecoverMsGroupParams() bool {
	if o != nil && !IsNil(o.RecoverMsGroupParams) {
		return true
	}

	return false
}

// SetRecoverMsGroupParams gets a reference to the given RecoverO365ParamsRecoverMsGroupParams and assigns it to the RecoverMsGroupParams field.
func (o *RecoverO365Params) SetRecoverMsGroupParams(v RecoverO365ParamsRecoverMsGroupParams) {
	o.RecoverMsGroupParams = &v
}

// GetRecoverMsTeamParams returns the RecoverMsTeamParams field value if set, zero value otherwise.
func (o *RecoverO365Params) GetRecoverMsTeamParams() RecoverO365ParamsRecoverMsTeamParams {
	if o == nil || IsNil(o.RecoverMsTeamParams) {
		var ret RecoverO365ParamsRecoverMsTeamParams
		return ret
	}
	return *o.RecoverMsTeamParams
}

// GetRecoverMsTeamParamsOk returns a tuple with the RecoverMsTeamParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverO365Params) GetRecoverMsTeamParamsOk() (*RecoverO365ParamsRecoverMsTeamParams, bool) {
	if o == nil || IsNil(o.RecoverMsTeamParams) {
		return nil, false
	}
	return o.RecoverMsTeamParams, true
}

// HasRecoverMsTeamParams returns a boolean if a field has been set.
func (o *RecoverO365Params) HasRecoverMsTeamParams() bool {
	if o != nil && !IsNil(o.RecoverMsTeamParams) {
		return true
	}

	return false
}

// SetRecoverMsTeamParams gets a reference to the given RecoverO365ParamsRecoverMsTeamParams and assigns it to the RecoverMsTeamParams field.
func (o *RecoverO365Params) SetRecoverMsTeamParams(v RecoverO365ParamsRecoverMsTeamParams) {
	o.RecoverMsTeamParams = &v
}

// GetRecoverOneDriveParams returns the RecoverOneDriveParams field value if set, zero value otherwise.
func (o *RecoverO365Params) GetRecoverOneDriveParams() RecoverO365ParamsRecoverOneDriveParams {
	if o == nil || IsNil(o.RecoverOneDriveParams) {
		var ret RecoverO365ParamsRecoverOneDriveParams
		return ret
	}
	return *o.RecoverOneDriveParams
}

// GetRecoverOneDriveParamsOk returns a tuple with the RecoverOneDriveParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverO365Params) GetRecoverOneDriveParamsOk() (*RecoverO365ParamsRecoverOneDriveParams, bool) {
	if o == nil || IsNil(o.RecoverOneDriveParams) {
		return nil, false
	}
	return o.RecoverOneDriveParams, true
}

// HasRecoverOneDriveParams returns a boolean if a field has been set.
func (o *RecoverO365Params) HasRecoverOneDriveParams() bool {
	if o != nil && !IsNil(o.RecoverOneDriveParams) {
		return true
	}

	return false
}

// SetRecoverOneDriveParams gets a reference to the given RecoverO365ParamsRecoverOneDriveParams and assigns it to the RecoverOneDriveParams field.
func (o *RecoverO365Params) SetRecoverOneDriveParams(v RecoverO365ParamsRecoverOneDriveParams) {
	o.RecoverOneDriveParams = &v
}

// GetRecoverPublicFoldersParams returns the RecoverPublicFoldersParams field value if set, zero value otherwise.
func (o *RecoverO365Params) GetRecoverPublicFoldersParams() RecoverO365ParamsRecoverPublicFoldersParams {
	if o == nil || IsNil(o.RecoverPublicFoldersParams) {
		var ret RecoverO365ParamsRecoverPublicFoldersParams
		return ret
	}
	return *o.RecoverPublicFoldersParams
}

// GetRecoverPublicFoldersParamsOk returns a tuple with the RecoverPublicFoldersParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverO365Params) GetRecoverPublicFoldersParamsOk() (*RecoverO365ParamsRecoverPublicFoldersParams, bool) {
	if o == nil || IsNil(o.RecoverPublicFoldersParams) {
		return nil, false
	}
	return o.RecoverPublicFoldersParams, true
}

// HasRecoverPublicFoldersParams returns a boolean if a field has been set.
func (o *RecoverO365Params) HasRecoverPublicFoldersParams() bool {
	if o != nil && !IsNil(o.RecoverPublicFoldersParams) {
		return true
	}

	return false
}

// SetRecoverPublicFoldersParams gets a reference to the given RecoverO365ParamsRecoverPublicFoldersParams and assigns it to the RecoverPublicFoldersParams field.
func (o *RecoverO365Params) SetRecoverPublicFoldersParams(v RecoverO365ParamsRecoverPublicFoldersParams) {
	o.RecoverPublicFoldersParams = &v
}

// GetRecoverSiteParams returns the RecoverSiteParams field value if set, zero value otherwise.
func (o *RecoverO365Params) GetRecoverSiteParams() RecoverO365ParamsRecoverSiteParams {
	if o == nil || IsNil(o.RecoverSiteParams) {
		var ret RecoverO365ParamsRecoverSiteParams
		return ret
	}
	return *o.RecoverSiteParams
}

// GetRecoverSiteParamsOk returns a tuple with the RecoverSiteParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverO365Params) GetRecoverSiteParamsOk() (*RecoverO365ParamsRecoverSiteParams, bool) {
	if o == nil || IsNil(o.RecoverSiteParams) {
		return nil, false
	}
	return o.RecoverSiteParams, true
}

// HasRecoverSiteParams returns a boolean if a field has been set.
func (o *RecoverO365Params) HasRecoverSiteParams() bool {
	if o != nil && !IsNil(o.RecoverSiteParams) {
		return true
	}

	return false
}

// SetRecoverSiteParams gets a reference to the given RecoverO365ParamsRecoverSiteParams and assigns it to the RecoverSiteParams field.
func (o *RecoverO365Params) SetRecoverSiteParams(v RecoverO365ParamsRecoverSiteParams) {
	o.RecoverSiteParams = &v
}

// GetRecoveryAction returns the RecoveryAction field value
func (o *RecoverO365Params) GetRecoveryAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecoveryAction
}

// GetRecoveryActionOk returns a tuple with the RecoveryAction field value
// and a boolean to check if the value has been set.
func (o *RecoverO365Params) GetRecoveryActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecoveryAction, true
}

// SetRecoveryAction sets field value
func (o *RecoverO365Params) SetRecoveryAction(v string) {
	o.RecoveryAction = v
}

func (o RecoverO365Params) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecoverO365Params) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DownloadChatsParams.IsSet() {
		toSerialize["downloadChatsParams"] = o.DownloadChatsParams.Get()
	}
	if o.DownloadFileAndFolderParams.IsSet() {
		toSerialize["downloadFileAndFolderParams"] = o.DownloadFileAndFolderParams.Get()
	}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if !IsNil(o.RecoverMailboxParams) {
		toSerialize["recoverMailboxParams"] = o.RecoverMailboxParams
	}
	if !IsNil(o.RecoverMsGroupParams) {
		toSerialize["recoverMsGroupParams"] = o.RecoverMsGroupParams
	}
	if !IsNil(o.RecoverMsTeamParams) {
		toSerialize["recoverMsTeamParams"] = o.RecoverMsTeamParams
	}
	if !IsNil(o.RecoverOneDriveParams) {
		toSerialize["recoverOneDriveParams"] = o.RecoverOneDriveParams
	}
	if !IsNil(o.RecoverPublicFoldersParams) {
		toSerialize["recoverPublicFoldersParams"] = o.RecoverPublicFoldersParams
	}
	if !IsNil(o.RecoverSiteParams) {
		toSerialize["recoverSiteParams"] = o.RecoverSiteParams
	}
	toSerialize["recoveryAction"] = o.RecoveryAction
	return toSerialize, nil
}

func (o *RecoverO365Params) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"recoveryAction",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRecoverO365Params := _RecoverO365Params{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRecoverO365Params)

	if err != nil {
		return err
	}

	*o = RecoverO365Params(varRecoverO365Params)

	return err
}

type NullableRecoverO365Params struct {
	value *RecoverO365Params
	isSet bool
}

func (v NullableRecoverO365Params) Get() *RecoverO365Params {
	return v.value
}

func (v *NullableRecoverO365Params) Set(val *RecoverO365Params) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverO365Params) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverO365Params) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverO365Params(val *RecoverO365Params) *NullableRecoverO365Params {
	return &NullableRecoverO365Params{value: val, isSet: true}
}

func (v NullableRecoverO365Params) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverO365Params) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


