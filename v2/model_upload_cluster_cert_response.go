/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the UploadClusterCertResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UploadClusterCertResponse{}

// UploadClusterCertResponse Specifies the response of the upload cluster certificate request
type UploadClusterCertResponse struct {
	StatusMessages []string `json:"statusMessages,omitempty"`
}

// NewUploadClusterCertResponse instantiates a new UploadClusterCertResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUploadClusterCertResponse() *UploadClusterCertResponse {
	this := UploadClusterCertResponse{}
	return &this
}

// NewUploadClusterCertResponseWithDefaults instantiates a new UploadClusterCertResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUploadClusterCertResponseWithDefaults() *UploadClusterCertResponse {
	this := UploadClusterCertResponse{}
	return &this
}

// GetStatusMessages returns the StatusMessages field value if set, zero value otherwise.
func (o *UploadClusterCertResponse) GetStatusMessages() []string {
	if o == nil || IsNil(o.StatusMessages) {
		var ret []string
		return ret
	}
	return o.StatusMessages
}

// GetStatusMessagesOk returns a tuple with the StatusMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UploadClusterCertResponse) GetStatusMessagesOk() ([]string, bool) {
	if o == nil || IsNil(o.StatusMessages) {
		return nil, false
	}
	return o.StatusMessages, true
}

// HasStatusMessages returns a boolean if a field has been set.
func (o *UploadClusterCertResponse) HasStatusMessages() bool {
	if o != nil && !IsNil(o.StatusMessages) {
		return true
	}

	return false
}

// SetStatusMessages gets a reference to the given []string and assigns it to the StatusMessages field.
func (o *UploadClusterCertResponse) SetStatusMessages(v []string) {
	o.StatusMessages = v
}

func (o UploadClusterCertResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UploadClusterCertResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StatusMessages) {
		toSerialize["statusMessages"] = o.StatusMessages
	}
	return toSerialize, nil
}

type NullableUploadClusterCertResponse struct {
	value *UploadClusterCertResponse
	isSet bool
}

func (v NullableUploadClusterCertResponse) Get() *UploadClusterCertResponse {
	return v.value
}

func (v *NullableUploadClusterCertResponse) Set(val *UploadClusterCertResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUploadClusterCertResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUploadClusterCertResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUploadClusterCertResponse(val *UploadClusterCertResponse) *NullableUploadClusterCertResponse {
	return &NullableUploadClusterCertResponse{value: val, isSet: true}
}

func (v NullableUploadClusterCertResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUploadClusterCertResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


