/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ViewClientsSummaryInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ViewClientsSummaryInfo{}

// ViewClientsSummaryInfo Specifies the View Client summary info.
type ViewClientsSummaryInfo struct {
	// Specifies the number of NFS clients.
	NfsClientCount NullableInt64 `json:"nfsClientCount,omitempty"`
	// Specifies the node ip the clients are connected to.
	NodeIp NullableString `json:"nodeIp,omitempty"`
	// Specifies the server ip the clients are connected to.
	ServerIp NullableString `json:"serverIp,omitempty"`
	// Specifies the number of SMB clients.
	SmbClientCount NullableInt64 `json:"smbClientCount,omitempty"`
}

// NewViewClientsSummaryInfo instantiates a new ViewClientsSummaryInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewClientsSummaryInfo() *ViewClientsSummaryInfo {
	this := ViewClientsSummaryInfo{}
	return &this
}

// NewViewClientsSummaryInfoWithDefaults instantiates a new ViewClientsSummaryInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewClientsSummaryInfoWithDefaults() *ViewClientsSummaryInfo {
	this := ViewClientsSummaryInfo{}
	return &this
}

// GetNfsClientCount returns the NfsClientCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewClientsSummaryInfo) GetNfsClientCount() int64 {
	if o == nil || IsNil(o.NfsClientCount.Get()) {
		var ret int64
		return ret
	}
	return *o.NfsClientCount.Get()
}

// GetNfsClientCountOk returns a tuple with the NfsClientCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewClientsSummaryInfo) GetNfsClientCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.NfsClientCount.Get(), o.NfsClientCount.IsSet()
}

// HasNfsClientCount returns a boolean if a field has been set.
func (o *ViewClientsSummaryInfo) HasNfsClientCount() bool {
	if o != nil && o.NfsClientCount.IsSet() {
		return true
	}

	return false
}

// SetNfsClientCount gets a reference to the given NullableInt64 and assigns it to the NfsClientCount field.
func (o *ViewClientsSummaryInfo) SetNfsClientCount(v int64) {
	o.NfsClientCount.Set(&v)
}
// SetNfsClientCountNil sets the value for NfsClientCount to be an explicit nil
func (o *ViewClientsSummaryInfo) SetNfsClientCountNil() {
	o.NfsClientCount.Set(nil)
}

// UnsetNfsClientCount ensures that no value is present for NfsClientCount, not even an explicit nil
func (o *ViewClientsSummaryInfo) UnsetNfsClientCount() {
	o.NfsClientCount.Unset()
}

// GetNodeIp returns the NodeIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewClientsSummaryInfo) GetNodeIp() string {
	if o == nil || IsNil(o.NodeIp.Get()) {
		var ret string
		return ret
	}
	return *o.NodeIp.Get()
}

// GetNodeIpOk returns a tuple with the NodeIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewClientsSummaryInfo) GetNodeIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NodeIp.Get(), o.NodeIp.IsSet()
}

// HasNodeIp returns a boolean if a field has been set.
func (o *ViewClientsSummaryInfo) HasNodeIp() bool {
	if o != nil && o.NodeIp.IsSet() {
		return true
	}

	return false
}

// SetNodeIp gets a reference to the given NullableString and assigns it to the NodeIp field.
func (o *ViewClientsSummaryInfo) SetNodeIp(v string) {
	o.NodeIp.Set(&v)
}
// SetNodeIpNil sets the value for NodeIp to be an explicit nil
func (o *ViewClientsSummaryInfo) SetNodeIpNil() {
	o.NodeIp.Set(nil)
}

// UnsetNodeIp ensures that no value is present for NodeIp, not even an explicit nil
func (o *ViewClientsSummaryInfo) UnsetNodeIp() {
	o.NodeIp.Unset()
}

// GetServerIp returns the ServerIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewClientsSummaryInfo) GetServerIp() string {
	if o == nil || IsNil(o.ServerIp.Get()) {
		var ret string
		return ret
	}
	return *o.ServerIp.Get()
}

// GetServerIpOk returns a tuple with the ServerIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewClientsSummaryInfo) GetServerIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerIp.Get(), o.ServerIp.IsSet()
}

// HasServerIp returns a boolean if a field has been set.
func (o *ViewClientsSummaryInfo) HasServerIp() bool {
	if o != nil && o.ServerIp.IsSet() {
		return true
	}

	return false
}

// SetServerIp gets a reference to the given NullableString and assigns it to the ServerIp field.
func (o *ViewClientsSummaryInfo) SetServerIp(v string) {
	o.ServerIp.Set(&v)
}
// SetServerIpNil sets the value for ServerIp to be an explicit nil
func (o *ViewClientsSummaryInfo) SetServerIpNil() {
	o.ServerIp.Set(nil)
}

// UnsetServerIp ensures that no value is present for ServerIp, not even an explicit nil
func (o *ViewClientsSummaryInfo) UnsetServerIp() {
	o.ServerIp.Unset()
}

// GetSmbClientCount returns the SmbClientCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewClientsSummaryInfo) GetSmbClientCount() int64 {
	if o == nil || IsNil(o.SmbClientCount.Get()) {
		var ret int64
		return ret
	}
	return *o.SmbClientCount.Get()
}

// GetSmbClientCountOk returns a tuple with the SmbClientCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewClientsSummaryInfo) GetSmbClientCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SmbClientCount.Get(), o.SmbClientCount.IsSet()
}

// HasSmbClientCount returns a boolean if a field has been set.
func (o *ViewClientsSummaryInfo) HasSmbClientCount() bool {
	if o != nil && o.SmbClientCount.IsSet() {
		return true
	}

	return false
}

// SetSmbClientCount gets a reference to the given NullableInt64 and assigns it to the SmbClientCount field.
func (o *ViewClientsSummaryInfo) SetSmbClientCount(v int64) {
	o.SmbClientCount.Set(&v)
}
// SetSmbClientCountNil sets the value for SmbClientCount to be an explicit nil
func (o *ViewClientsSummaryInfo) SetSmbClientCountNil() {
	o.SmbClientCount.Set(nil)
}

// UnsetSmbClientCount ensures that no value is present for SmbClientCount, not even an explicit nil
func (o *ViewClientsSummaryInfo) UnsetSmbClientCount() {
	o.SmbClientCount.Unset()
}

func (o ViewClientsSummaryInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ViewClientsSummaryInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.NfsClientCount.IsSet() {
		toSerialize["nfsClientCount"] = o.NfsClientCount.Get()
	}
	if o.NodeIp.IsSet() {
		toSerialize["nodeIp"] = o.NodeIp.Get()
	}
	if o.ServerIp.IsSet() {
		toSerialize["serverIp"] = o.ServerIp.Get()
	}
	if o.SmbClientCount.IsSet() {
		toSerialize["smbClientCount"] = o.SmbClientCount.Get()
	}
	return toSerialize, nil
}

type NullableViewClientsSummaryInfo struct {
	value *ViewClientsSummaryInfo
	isSet bool
}

func (v NullableViewClientsSummaryInfo) Get() *ViewClientsSummaryInfo {
	return v.value
}

func (v *NullableViewClientsSummaryInfo) Set(val *ViewClientsSummaryInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableViewClientsSummaryInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableViewClientsSummaryInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewClientsSummaryInfo(val *ViewClientsSummaryInfo) *NullableViewClientsSummaryInfo {
	return &NullableViewClientsSummaryInfo{value: val, isSet: true}
}

func (v NullableViewClientsSummaryInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewClientsSummaryInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


