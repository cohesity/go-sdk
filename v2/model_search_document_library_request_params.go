/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the SearchDocumentLibraryRequestParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchDocumentLibraryRequestParams{}

// SearchDocumentLibraryRequestParams Specifies the request parameters to search for files/folders in document libraries.
type SearchDocumentLibraryRequestParams struct {
	// Specifies a list of document library types. Only items within the given types will be returned.
	CategoryTypes []string `json:"categoryTypes,omitempty"`
	// Specifies the end time in Unix timestamp epoch in seconds when the file/folder is created.
	CreationEndTimeSecs NullableInt64 `json:"creationEndTimeSecs,omitempty"`
	// Specifies the start time in Unix timestamp epoch in seconds when the file/folder is created.
	CreationStartTimeSecs NullableInt64 `json:"creationStartTimeSecs,omitempty"`
	// Specifies whether to include files in the response. Default is true.
	IncludeFiles NullableBool `json:"includeFiles,omitempty"`
	// Specifies whether to include folders in the response. Default is true.
	IncludeFolders NullableBool `json:"includeFolders,omitempty"`
	O365Params *O365SearchRequestParams `json:"o365Params,omitempty"`
	// Specifies the list of owner names to filter on owner of the file/folder.
	OwnerNames []string `json:"ownerNames,omitempty"`
	// Specifies the search string to filter the files/folders. User can specify a wildcard character '*' as a suffix to a string where all item names are matched with the prefix string.
	SearchString NullableString `json:"searchString,omitempty"`
	// Specifies the minimum size of the file in bytes.
	SizeBytesLowerLimit NullableInt64 `json:"sizeBytesLowerLimit,omitempty"`
	// Specifies the maximum size of the file in bytes.
	SizeBytesUpperLimit NullableInt64 `json:"sizeBytesUpperLimit,omitempty"`
}

// NewSearchDocumentLibraryRequestParams instantiates a new SearchDocumentLibraryRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchDocumentLibraryRequestParams() *SearchDocumentLibraryRequestParams {
	this := SearchDocumentLibraryRequestParams{}
	var includeFiles bool = true
	this.IncludeFiles = *NewNullableBool(&includeFiles)
	var includeFolders bool = true
	this.IncludeFolders = *NewNullableBool(&includeFolders)
	return &this
}

// NewSearchDocumentLibraryRequestParamsWithDefaults instantiates a new SearchDocumentLibraryRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchDocumentLibraryRequestParamsWithDefaults() *SearchDocumentLibraryRequestParams {
	this := SearchDocumentLibraryRequestParams{}
	var includeFiles bool = true
	this.IncludeFiles = *NewNullableBool(&includeFiles)
	var includeFolders bool = true
	this.IncludeFolders = *NewNullableBool(&includeFolders)
	return &this
}

// GetCategoryTypes returns the CategoryTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchDocumentLibraryRequestParams) GetCategoryTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.CategoryTypes
}

// GetCategoryTypesOk returns a tuple with the CategoryTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchDocumentLibraryRequestParams) GetCategoryTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.CategoryTypes) {
		return nil, false
	}
	return o.CategoryTypes, true
}

// HasCategoryTypes returns a boolean if a field has been set.
func (o *SearchDocumentLibraryRequestParams) HasCategoryTypes() bool {
	if o != nil && !IsNil(o.CategoryTypes) {
		return true
	}

	return false
}

// SetCategoryTypes gets a reference to the given []string and assigns it to the CategoryTypes field.
func (o *SearchDocumentLibraryRequestParams) SetCategoryTypes(v []string) {
	o.CategoryTypes = v
}

// GetCreationEndTimeSecs returns the CreationEndTimeSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchDocumentLibraryRequestParams) GetCreationEndTimeSecs() int64 {
	if o == nil || IsNil(o.CreationEndTimeSecs.Get()) {
		var ret int64
		return ret
	}
	return *o.CreationEndTimeSecs.Get()
}

// GetCreationEndTimeSecsOk returns a tuple with the CreationEndTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchDocumentLibraryRequestParams) GetCreationEndTimeSecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreationEndTimeSecs.Get(), o.CreationEndTimeSecs.IsSet()
}

// HasCreationEndTimeSecs returns a boolean if a field has been set.
func (o *SearchDocumentLibraryRequestParams) HasCreationEndTimeSecs() bool {
	if o != nil && o.CreationEndTimeSecs.IsSet() {
		return true
	}

	return false
}

// SetCreationEndTimeSecs gets a reference to the given NullableInt64 and assigns it to the CreationEndTimeSecs field.
func (o *SearchDocumentLibraryRequestParams) SetCreationEndTimeSecs(v int64) {
	o.CreationEndTimeSecs.Set(&v)
}
// SetCreationEndTimeSecsNil sets the value for CreationEndTimeSecs to be an explicit nil
func (o *SearchDocumentLibraryRequestParams) SetCreationEndTimeSecsNil() {
	o.CreationEndTimeSecs.Set(nil)
}

// UnsetCreationEndTimeSecs ensures that no value is present for CreationEndTimeSecs, not even an explicit nil
func (o *SearchDocumentLibraryRequestParams) UnsetCreationEndTimeSecs() {
	o.CreationEndTimeSecs.Unset()
}

// GetCreationStartTimeSecs returns the CreationStartTimeSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchDocumentLibraryRequestParams) GetCreationStartTimeSecs() int64 {
	if o == nil || IsNil(o.CreationStartTimeSecs.Get()) {
		var ret int64
		return ret
	}
	return *o.CreationStartTimeSecs.Get()
}

// GetCreationStartTimeSecsOk returns a tuple with the CreationStartTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchDocumentLibraryRequestParams) GetCreationStartTimeSecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreationStartTimeSecs.Get(), o.CreationStartTimeSecs.IsSet()
}

// HasCreationStartTimeSecs returns a boolean if a field has been set.
func (o *SearchDocumentLibraryRequestParams) HasCreationStartTimeSecs() bool {
	if o != nil && o.CreationStartTimeSecs.IsSet() {
		return true
	}

	return false
}

// SetCreationStartTimeSecs gets a reference to the given NullableInt64 and assigns it to the CreationStartTimeSecs field.
func (o *SearchDocumentLibraryRequestParams) SetCreationStartTimeSecs(v int64) {
	o.CreationStartTimeSecs.Set(&v)
}
// SetCreationStartTimeSecsNil sets the value for CreationStartTimeSecs to be an explicit nil
func (o *SearchDocumentLibraryRequestParams) SetCreationStartTimeSecsNil() {
	o.CreationStartTimeSecs.Set(nil)
}

// UnsetCreationStartTimeSecs ensures that no value is present for CreationStartTimeSecs, not even an explicit nil
func (o *SearchDocumentLibraryRequestParams) UnsetCreationStartTimeSecs() {
	o.CreationStartTimeSecs.Unset()
}

// GetIncludeFiles returns the IncludeFiles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchDocumentLibraryRequestParams) GetIncludeFiles() bool {
	if o == nil || IsNil(o.IncludeFiles.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeFiles.Get()
}

// GetIncludeFilesOk returns a tuple with the IncludeFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchDocumentLibraryRequestParams) GetIncludeFilesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeFiles.Get(), o.IncludeFiles.IsSet()
}

// HasIncludeFiles returns a boolean if a field has been set.
func (o *SearchDocumentLibraryRequestParams) HasIncludeFiles() bool {
	if o != nil && o.IncludeFiles.IsSet() {
		return true
	}

	return false
}

// SetIncludeFiles gets a reference to the given NullableBool and assigns it to the IncludeFiles field.
func (o *SearchDocumentLibraryRequestParams) SetIncludeFiles(v bool) {
	o.IncludeFiles.Set(&v)
}
// SetIncludeFilesNil sets the value for IncludeFiles to be an explicit nil
func (o *SearchDocumentLibraryRequestParams) SetIncludeFilesNil() {
	o.IncludeFiles.Set(nil)
}

// UnsetIncludeFiles ensures that no value is present for IncludeFiles, not even an explicit nil
func (o *SearchDocumentLibraryRequestParams) UnsetIncludeFiles() {
	o.IncludeFiles.Unset()
}

// GetIncludeFolders returns the IncludeFolders field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchDocumentLibraryRequestParams) GetIncludeFolders() bool {
	if o == nil || IsNil(o.IncludeFolders.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeFolders.Get()
}

// GetIncludeFoldersOk returns a tuple with the IncludeFolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchDocumentLibraryRequestParams) GetIncludeFoldersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeFolders.Get(), o.IncludeFolders.IsSet()
}

// HasIncludeFolders returns a boolean if a field has been set.
func (o *SearchDocumentLibraryRequestParams) HasIncludeFolders() bool {
	if o != nil && o.IncludeFolders.IsSet() {
		return true
	}

	return false
}

// SetIncludeFolders gets a reference to the given NullableBool and assigns it to the IncludeFolders field.
func (o *SearchDocumentLibraryRequestParams) SetIncludeFolders(v bool) {
	o.IncludeFolders.Set(&v)
}
// SetIncludeFoldersNil sets the value for IncludeFolders to be an explicit nil
func (o *SearchDocumentLibraryRequestParams) SetIncludeFoldersNil() {
	o.IncludeFolders.Set(nil)
}

// UnsetIncludeFolders ensures that no value is present for IncludeFolders, not even an explicit nil
func (o *SearchDocumentLibraryRequestParams) UnsetIncludeFolders() {
	o.IncludeFolders.Unset()
}

// GetO365Params returns the O365Params field value if set, zero value otherwise.
func (o *SearchDocumentLibraryRequestParams) GetO365Params() O365SearchRequestParams {
	if o == nil || IsNil(o.O365Params) {
		var ret O365SearchRequestParams
		return ret
	}
	return *o.O365Params
}

// GetO365ParamsOk returns a tuple with the O365Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchDocumentLibraryRequestParams) GetO365ParamsOk() (*O365SearchRequestParams, bool) {
	if o == nil || IsNil(o.O365Params) {
		return nil, false
	}
	return o.O365Params, true
}

// HasO365Params returns a boolean if a field has been set.
func (o *SearchDocumentLibraryRequestParams) HasO365Params() bool {
	if o != nil && !IsNil(o.O365Params) {
		return true
	}

	return false
}

// SetO365Params gets a reference to the given O365SearchRequestParams and assigns it to the O365Params field.
func (o *SearchDocumentLibraryRequestParams) SetO365Params(v O365SearchRequestParams) {
	o.O365Params = &v
}

// GetOwnerNames returns the OwnerNames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchDocumentLibraryRequestParams) GetOwnerNames() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.OwnerNames
}

// GetOwnerNamesOk returns a tuple with the OwnerNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchDocumentLibraryRequestParams) GetOwnerNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.OwnerNames) {
		return nil, false
	}
	return o.OwnerNames, true
}

// HasOwnerNames returns a boolean if a field has been set.
func (o *SearchDocumentLibraryRequestParams) HasOwnerNames() bool {
	if o != nil && !IsNil(o.OwnerNames) {
		return true
	}

	return false
}

// SetOwnerNames gets a reference to the given []string and assigns it to the OwnerNames field.
func (o *SearchDocumentLibraryRequestParams) SetOwnerNames(v []string) {
	o.OwnerNames = v
}

// GetSearchString returns the SearchString field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchDocumentLibraryRequestParams) GetSearchString() string {
	if o == nil || IsNil(o.SearchString.Get()) {
		var ret string
		return ret
	}
	return *o.SearchString.Get()
}

// GetSearchStringOk returns a tuple with the SearchString field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchDocumentLibraryRequestParams) GetSearchStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SearchString.Get(), o.SearchString.IsSet()
}

// HasSearchString returns a boolean if a field has been set.
func (o *SearchDocumentLibraryRequestParams) HasSearchString() bool {
	if o != nil && o.SearchString.IsSet() {
		return true
	}

	return false
}

// SetSearchString gets a reference to the given NullableString and assigns it to the SearchString field.
func (o *SearchDocumentLibraryRequestParams) SetSearchString(v string) {
	o.SearchString.Set(&v)
}
// SetSearchStringNil sets the value for SearchString to be an explicit nil
func (o *SearchDocumentLibraryRequestParams) SetSearchStringNil() {
	o.SearchString.Set(nil)
}

// UnsetSearchString ensures that no value is present for SearchString, not even an explicit nil
func (o *SearchDocumentLibraryRequestParams) UnsetSearchString() {
	o.SearchString.Unset()
}

// GetSizeBytesLowerLimit returns the SizeBytesLowerLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchDocumentLibraryRequestParams) GetSizeBytesLowerLimit() int64 {
	if o == nil || IsNil(o.SizeBytesLowerLimit.Get()) {
		var ret int64
		return ret
	}
	return *o.SizeBytesLowerLimit.Get()
}

// GetSizeBytesLowerLimitOk returns a tuple with the SizeBytesLowerLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchDocumentLibraryRequestParams) GetSizeBytesLowerLimitOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SizeBytesLowerLimit.Get(), o.SizeBytesLowerLimit.IsSet()
}

// HasSizeBytesLowerLimit returns a boolean if a field has been set.
func (o *SearchDocumentLibraryRequestParams) HasSizeBytesLowerLimit() bool {
	if o != nil && o.SizeBytesLowerLimit.IsSet() {
		return true
	}

	return false
}

// SetSizeBytesLowerLimit gets a reference to the given NullableInt64 and assigns it to the SizeBytesLowerLimit field.
func (o *SearchDocumentLibraryRequestParams) SetSizeBytesLowerLimit(v int64) {
	o.SizeBytesLowerLimit.Set(&v)
}
// SetSizeBytesLowerLimitNil sets the value for SizeBytesLowerLimit to be an explicit nil
func (o *SearchDocumentLibraryRequestParams) SetSizeBytesLowerLimitNil() {
	o.SizeBytesLowerLimit.Set(nil)
}

// UnsetSizeBytesLowerLimit ensures that no value is present for SizeBytesLowerLimit, not even an explicit nil
func (o *SearchDocumentLibraryRequestParams) UnsetSizeBytesLowerLimit() {
	o.SizeBytesLowerLimit.Unset()
}

// GetSizeBytesUpperLimit returns the SizeBytesUpperLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchDocumentLibraryRequestParams) GetSizeBytesUpperLimit() int64 {
	if o == nil || IsNil(o.SizeBytesUpperLimit.Get()) {
		var ret int64
		return ret
	}
	return *o.SizeBytesUpperLimit.Get()
}

// GetSizeBytesUpperLimitOk returns a tuple with the SizeBytesUpperLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchDocumentLibraryRequestParams) GetSizeBytesUpperLimitOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SizeBytesUpperLimit.Get(), o.SizeBytesUpperLimit.IsSet()
}

// HasSizeBytesUpperLimit returns a boolean if a field has been set.
func (o *SearchDocumentLibraryRequestParams) HasSizeBytesUpperLimit() bool {
	if o != nil && o.SizeBytesUpperLimit.IsSet() {
		return true
	}

	return false
}

// SetSizeBytesUpperLimit gets a reference to the given NullableInt64 and assigns it to the SizeBytesUpperLimit field.
func (o *SearchDocumentLibraryRequestParams) SetSizeBytesUpperLimit(v int64) {
	o.SizeBytesUpperLimit.Set(&v)
}
// SetSizeBytesUpperLimitNil sets the value for SizeBytesUpperLimit to be an explicit nil
func (o *SearchDocumentLibraryRequestParams) SetSizeBytesUpperLimitNil() {
	o.SizeBytesUpperLimit.Set(nil)
}

// UnsetSizeBytesUpperLimit ensures that no value is present for SizeBytesUpperLimit, not even an explicit nil
func (o *SearchDocumentLibraryRequestParams) UnsetSizeBytesUpperLimit() {
	o.SizeBytesUpperLimit.Unset()
}

func (o SearchDocumentLibraryRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchDocumentLibraryRequestParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CategoryTypes != nil {
		toSerialize["categoryTypes"] = o.CategoryTypes
	}
	if o.CreationEndTimeSecs.IsSet() {
		toSerialize["creationEndTimeSecs"] = o.CreationEndTimeSecs.Get()
	}
	if o.CreationStartTimeSecs.IsSet() {
		toSerialize["creationStartTimeSecs"] = o.CreationStartTimeSecs.Get()
	}
	if o.IncludeFiles.IsSet() {
		toSerialize["includeFiles"] = o.IncludeFiles.Get()
	}
	if o.IncludeFolders.IsSet() {
		toSerialize["includeFolders"] = o.IncludeFolders.Get()
	}
	if !IsNil(o.O365Params) {
		toSerialize["o365Params"] = o.O365Params
	}
	if o.OwnerNames != nil {
		toSerialize["ownerNames"] = o.OwnerNames
	}
	if o.SearchString.IsSet() {
		toSerialize["searchString"] = o.SearchString.Get()
	}
	if o.SizeBytesLowerLimit.IsSet() {
		toSerialize["sizeBytesLowerLimit"] = o.SizeBytesLowerLimit.Get()
	}
	if o.SizeBytesUpperLimit.IsSet() {
		toSerialize["sizeBytesUpperLimit"] = o.SizeBytesUpperLimit.Get()
	}
	return toSerialize, nil
}

type NullableSearchDocumentLibraryRequestParams struct {
	value *SearchDocumentLibraryRequestParams
	isSet bool
}

func (v NullableSearchDocumentLibraryRequestParams) Get() *SearchDocumentLibraryRequestParams {
	return v.value
}

func (v *NullableSearchDocumentLibraryRequestParams) Set(val *SearchDocumentLibraryRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchDocumentLibraryRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchDocumentLibraryRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchDocumentLibraryRequestParams(val *SearchDocumentLibraryRequestParams) *NullableSearchDocumentLibraryRequestParams {
	return &NullableSearchDocumentLibraryRequestParams{value: val, isSet: true}
}

func (v NullableSearchDocumentLibraryRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchDocumentLibraryRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


