/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the UdaOSIndexConfigParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UdaOSIndexConfigParams{}

// UdaOSIndexConfigParams Specifies the basic configuration for the operating system type.
type UdaOSIndexConfigParams struct {
	// UI feature flag that controls the visibility of the corresponding operating system type for the UDA connector.
	UiFeatureFlag NullableString `json:"uiFeatureFlag,omitempty"`
}

// NewUdaOSIndexConfigParams instantiates a new UdaOSIndexConfigParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUdaOSIndexConfigParams() *UdaOSIndexConfigParams {
	this := UdaOSIndexConfigParams{}
	return &this
}

// NewUdaOSIndexConfigParamsWithDefaults instantiates a new UdaOSIndexConfigParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUdaOSIndexConfigParamsWithDefaults() *UdaOSIndexConfigParams {
	this := UdaOSIndexConfigParams{}
	return &this
}

// GetUiFeatureFlag returns the UiFeatureFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaOSIndexConfigParams) GetUiFeatureFlag() string {
	if o == nil || IsNil(o.UiFeatureFlag.Get()) {
		var ret string
		return ret
	}
	return *o.UiFeatureFlag.Get()
}

// GetUiFeatureFlagOk returns a tuple with the UiFeatureFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaOSIndexConfigParams) GetUiFeatureFlagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UiFeatureFlag.Get(), o.UiFeatureFlag.IsSet()
}

// HasUiFeatureFlag returns a boolean if a field has been set.
func (o *UdaOSIndexConfigParams) HasUiFeatureFlag() bool {
	if o != nil && o.UiFeatureFlag.IsSet() {
		return true
	}

	return false
}

// SetUiFeatureFlag gets a reference to the given NullableString and assigns it to the UiFeatureFlag field.
func (o *UdaOSIndexConfigParams) SetUiFeatureFlag(v string) {
	o.UiFeatureFlag.Set(&v)
}
// SetUiFeatureFlagNil sets the value for UiFeatureFlag to be an explicit nil
func (o *UdaOSIndexConfigParams) SetUiFeatureFlagNil() {
	o.UiFeatureFlag.Set(nil)
}

// UnsetUiFeatureFlag ensures that no value is present for UiFeatureFlag, not even an explicit nil
func (o *UdaOSIndexConfigParams) UnsetUiFeatureFlag() {
	o.UiFeatureFlag.Unset()
}

func (o UdaOSIndexConfigParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UdaOSIndexConfigParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.UiFeatureFlag.IsSet() {
		toSerialize["uiFeatureFlag"] = o.UiFeatureFlag.Get()
	}
	return toSerialize, nil
}

type NullableUdaOSIndexConfigParams struct {
	value *UdaOSIndexConfigParams
	isSet bool
}

func (v NullableUdaOSIndexConfigParams) Get() *UdaOSIndexConfigParams {
	return v.value
}

func (v *NullableUdaOSIndexConfigParams) Set(val *UdaOSIndexConfigParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUdaOSIndexConfigParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUdaOSIndexConfigParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUdaOSIndexConfigParams(val *UdaOSIndexConfigParams) *NullableUdaOSIndexConfigParams {
	return &NullableUdaOSIndexConfigParams{value: val, isSet: true}
}

func (v NullableUdaOSIndexConfigParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUdaOSIndexConfigParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


