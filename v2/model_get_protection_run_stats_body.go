/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the GetProtectionRunStatsBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetProtectionRunStatsBody{}

// GetProtectionRunStatsBody Specifies the stats of a protection run.
type GetProtectionRunStatsBody struct {
	// Stats for the archival run.
	ArchivalRun []ArchivalTargetStatsInfo `json:"archivalRun,omitempty"`
	LocalRun *BackupRunStatsInfo `json:"localRun,omitempty"`
}

// NewGetProtectionRunStatsBody instantiates a new GetProtectionRunStatsBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProtectionRunStatsBody() *GetProtectionRunStatsBody {
	this := GetProtectionRunStatsBody{}
	return &this
}

// NewGetProtectionRunStatsBodyWithDefaults instantiates a new GetProtectionRunStatsBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProtectionRunStatsBodyWithDefaults() *GetProtectionRunStatsBody {
	this := GetProtectionRunStatsBody{}
	return &this
}

// GetArchivalRun returns the ArchivalRun field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetProtectionRunStatsBody) GetArchivalRun() []ArchivalTargetStatsInfo {
	if o == nil {
		var ret []ArchivalTargetStatsInfo
		return ret
	}
	return o.ArchivalRun
}

// GetArchivalRunOk returns a tuple with the ArchivalRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetProtectionRunStatsBody) GetArchivalRunOk() ([]ArchivalTargetStatsInfo, bool) {
	if o == nil || IsNil(o.ArchivalRun) {
		return nil, false
	}
	return o.ArchivalRun, true
}

// HasArchivalRun returns a boolean if a field has been set.
func (o *GetProtectionRunStatsBody) HasArchivalRun() bool {
	if o != nil && !IsNil(o.ArchivalRun) {
		return true
	}

	return false
}

// SetArchivalRun gets a reference to the given []ArchivalTargetStatsInfo and assigns it to the ArchivalRun field.
func (o *GetProtectionRunStatsBody) SetArchivalRun(v []ArchivalTargetStatsInfo) {
	o.ArchivalRun = v
}

// GetLocalRun returns the LocalRun field value if set, zero value otherwise.
func (o *GetProtectionRunStatsBody) GetLocalRun() BackupRunStatsInfo {
	if o == nil || IsNil(o.LocalRun) {
		var ret BackupRunStatsInfo
		return ret
	}
	return *o.LocalRun
}

// GetLocalRunOk returns a tuple with the LocalRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProtectionRunStatsBody) GetLocalRunOk() (*BackupRunStatsInfo, bool) {
	if o == nil || IsNil(o.LocalRun) {
		return nil, false
	}
	return o.LocalRun, true
}

// HasLocalRun returns a boolean if a field has been set.
func (o *GetProtectionRunStatsBody) HasLocalRun() bool {
	if o != nil && !IsNil(o.LocalRun) {
		return true
	}

	return false
}

// SetLocalRun gets a reference to the given BackupRunStatsInfo and assigns it to the LocalRun field.
func (o *GetProtectionRunStatsBody) SetLocalRun(v BackupRunStatsInfo) {
	o.LocalRun = &v
}

func (o GetProtectionRunStatsBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetProtectionRunStatsBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ArchivalRun != nil {
		toSerialize["archivalRun"] = o.ArchivalRun
	}
	if !IsNil(o.LocalRun) {
		toSerialize["localRun"] = o.LocalRun
	}
	return toSerialize, nil
}

type NullableGetProtectionRunStatsBody struct {
	value *GetProtectionRunStatsBody
	isSet bool
}

func (v NullableGetProtectionRunStatsBody) Get() *GetProtectionRunStatsBody {
	return v.value
}

func (v *NullableGetProtectionRunStatsBody) Set(val *GetProtectionRunStatsBody) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProtectionRunStatsBody) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProtectionRunStatsBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProtectionRunStatsBody(val *GetProtectionRunStatsBody) *NullableGetProtectionRunStatsBody {
	return &NullableGetProtectionRunStatsBody{value: val, isSet: true}
}

func (v NullableGetProtectionRunStatsBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProtectionRunStatsBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


