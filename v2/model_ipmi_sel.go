/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the IpmiSel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpmiSel{}

// IpmiSel Specifies the sel for the ipmi.
type IpmiSel struct {
	// Specifies the list of sel entries when verbose=false.
	SelNonVerboseEntries []IpmiSelNonVerboseEntry `json:"selNonVerboseEntries,omitempty"`
	// Specifies the list of sel entries when verbose=true.
	SelVerboseEntries []IpmiSelVerboseEntry `json:"selVerboseEntries,omitempty"`
}

// NewIpmiSel instantiates a new IpmiSel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpmiSel() *IpmiSel {
	this := IpmiSel{}
	return &this
}

// NewIpmiSelWithDefaults instantiates a new IpmiSel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpmiSelWithDefaults() *IpmiSel {
	this := IpmiSel{}
	return &this
}

// GetSelNonVerboseEntries returns the SelNonVerboseEntries field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IpmiSel) GetSelNonVerboseEntries() []IpmiSelNonVerboseEntry {
	if o == nil {
		var ret []IpmiSelNonVerboseEntry
		return ret
	}
	return o.SelNonVerboseEntries
}

// GetSelNonVerboseEntriesOk returns a tuple with the SelNonVerboseEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IpmiSel) GetSelNonVerboseEntriesOk() ([]IpmiSelNonVerboseEntry, bool) {
	if o == nil || IsNil(o.SelNonVerboseEntries) {
		return nil, false
	}
	return o.SelNonVerboseEntries, true
}

// HasSelNonVerboseEntries returns a boolean if a field has been set.
func (o *IpmiSel) HasSelNonVerboseEntries() bool {
	if o != nil && !IsNil(o.SelNonVerboseEntries) {
		return true
	}

	return false
}

// SetSelNonVerboseEntries gets a reference to the given []IpmiSelNonVerboseEntry and assigns it to the SelNonVerboseEntries field.
func (o *IpmiSel) SetSelNonVerboseEntries(v []IpmiSelNonVerboseEntry) {
	o.SelNonVerboseEntries = v
}

// GetSelVerboseEntries returns the SelVerboseEntries field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IpmiSel) GetSelVerboseEntries() []IpmiSelVerboseEntry {
	if o == nil {
		var ret []IpmiSelVerboseEntry
		return ret
	}
	return o.SelVerboseEntries
}

// GetSelVerboseEntriesOk returns a tuple with the SelVerboseEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IpmiSel) GetSelVerboseEntriesOk() ([]IpmiSelVerboseEntry, bool) {
	if o == nil || IsNil(o.SelVerboseEntries) {
		return nil, false
	}
	return o.SelVerboseEntries, true
}

// HasSelVerboseEntries returns a boolean if a field has been set.
func (o *IpmiSel) HasSelVerboseEntries() bool {
	if o != nil && !IsNil(o.SelVerboseEntries) {
		return true
	}

	return false
}

// SetSelVerboseEntries gets a reference to the given []IpmiSelVerboseEntry and assigns it to the SelVerboseEntries field.
func (o *IpmiSel) SetSelVerboseEntries(v []IpmiSelVerboseEntry) {
	o.SelVerboseEntries = v
}

func (o IpmiSel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpmiSel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SelNonVerboseEntries != nil {
		toSerialize["selNonVerboseEntries"] = o.SelNonVerboseEntries
	}
	if o.SelVerboseEntries != nil {
		toSerialize["selVerboseEntries"] = o.SelVerboseEntries
	}
	return toSerialize, nil
}

type NullableIpmiSel struct {
	value *IpmiSel
	isSet bool
}

func (v NullableIpmiSel) Get() *IpmiSel {
	return v.value
}

func (v *NullableIpmiSel) Set(val *IpmiSel) {
	v.value = val
	v.isSet = true
}

func (v NullableIpmiSel) IsSet() bool {
	return v.isSet
}

func (v *NullableIpmiSel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpmiSel(val *IpmiSel) *NullableIpmiSel {
	return &NullableIpmiSel{value: val, isSet: true}
}

func (v NullableIpmiSel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpmiSel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


