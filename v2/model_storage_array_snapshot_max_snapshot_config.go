/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the StorageArraySnapshotMaxSnapshotConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StorageArraySnapshotMaxSnapshotConfig{}

// StorageArraySnapshotMaxSnapshotConfig Specifies max snapshots threshold configuration that can used by snapshots to take storage snapshot.
type StorageArraySnapshotMaxSnapshotConfig struct {
	// Specifies max number of storage snapshots allowed per volume/lun.
	MaxSnapshots NullableInt32 `json:"maxSnapshots,omitempty"`
}

// NewStorageArraySnapshotMaxSnapshotConfig instantiates a new StorageArraySnapshotMaxSnapshotConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageArraySnapshotMaxSnapshotConfig() *StorageArraySnapshotMaxSnapshotConfig {
	this := StorageArraySnapshotMaxSnapshotConfig{}
	return &this
}

// NewStorageArraySnapshotMaxSnapshotConfigWithDefaults instantiates a new StorageArraySnapshotMaxSnapshotConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageArraySnapshotMaxSnapshotConfigWithDefaults() *StorageArraySnapshotMaxSnapshotConfig {
	this := StorageArraySnapshotMaxSnapshotConfig{}
	return &this
}

// GetMaxSnapshots returns the MaxSnapshots field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StorageArraySnapshotMaxSnapshotConfig) GetMaxSnapshots() int32 {
	if o == nil || IsNil(o.MaxSnapshots.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxSnapshots.Get()
}

// GetMaxSnapshotsOk returns a tuple with the MaxSnapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StorageArraySnapshotMaxSnapshotConfig) GetMaxSnapshotsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxSnapshots.Get(), o.MaxSnapshots.IsSet()
}

// HasMaxSnapshots returns a boolean if a field has been set.
func (o *StorageArraySnapshotMaxSnapshotConfig) HasMaxSnapshots() bool {
	if o != nil && o.MaxSnapshots.IsSet() {
		return true
	}

	return false
}

// SetMaxSnapshots gets a reference to the given NullableInt32 and assigns it to the MaxSnapshots field.
func (o *StorageArraySnapshotMaxSnapshotConfig) SetMaxSnapshots(v int32) {
	o.MaxSnapshots.Set(&v)
}
// SetMaxSnapshotsNil sets the value for MaxSnapshots to be an explicit nil
func (o *StorageArraySnapshotMaxSnapshotConfig) SetMaxSnapshotsNil() {
	o.MaxSnapshots.Set(nil)
}

// UnsetMaxSnapshots ensures that no value is present for MaxSnapshots, not even an explicit nil
func (o *StorageArraySnapshotMaxSnapshotConfig) UnsetMaxSnapshots() {
	o.MaxSnapshots.Unset()
}

func (o StorageArraySnapshotMaxSnapshotConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StorageArraySnapshotMaxSnapshotConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxSnapshots.IsSet() {
		toSerialize["maxSnapshots"] = o.MaxSnapshots.Get()
	}
	return toSerialize, nil
}

type NullableStorageArraySnapshotMaxSnapshotConfig struct {
	value *StorageArraySnapshotMaxSnapshotConfig
	isSet bool
}

func (v NullableStorageArraySnapshotMaxSnapshotConfig) Get() *StorageArraySnapshotMaxSnapshotConfig {
	return v.value
}

func (v *NullableStorageArraySnapshotMaxSnapshotConfig) Set(val *StorageArraySnapshotMaxSnapshotConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageArraySnapshotMaxSnapshotConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageArraySnapshotMaxSnapshotConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageArraySnapshotMaxSnapshotConfig(val *StorageArraySnapshotMaxSnapshotConfig) *NullableStorageArraySnapshotMaxSnapshotConfig {
	return &NullableStorageArraySnapshotMaxSnapshotConfig{value: val, isSet: true}
}

func (v NullableStorageArraySnapshotMaxSnapshotConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageArraySnapshotMaxSnapshotConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


