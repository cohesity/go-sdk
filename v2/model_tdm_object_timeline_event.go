/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TdmObjectTimelineEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TdmObjectTimelineEvent{}

// TdmObjectTimelineEvent Specifies a TDM object timeline event.
type TdmObjectTimelineEvent struct {
	// Specifies the action for the event.
	Action NullableString `json:"action"`
	// Specifies the time (in usecs from epoch) at which the event was created.
	CreatedAt NullableInt64 `json:"createdAt,omitempty"`
	// Specifies the user, who triggered the event.
	CreatedByUser NullableUser `json:"createdByUser,omitempty"`
	// Specifies the description of the event, as provided by the user.
	Description NullableString `json:"description,omitempty"`
	// Specifies the error message if the event is in failed state.
	ErrorMessage NullableString `json:"errorMessage,omitempty"`
	// Specifies the ID of the group this event belongs to. Events with same group ID are considered to be a single timeline for the TDM object. Different group IDs mean different timelines for the TDM object.
	EventGroupId NullableString `json:"eventGroupId,omitempty"`
	// Specifies the unique ID of the event.
	Id NullableString `json:"id"`
	// Specifies the current status of the event.
	Status NullableString `json:"status,omitempty"`
	CloneParams *TdmCloneTaskResponseParams `json:"cloneParams,omitempty"`
	SnapshotParams *TdmSnapshot `json:"snapshotParams,omitempty"`
}

type _TdmObjectTimelineEvent TdmObjectTimelineEvent

// NewTdmObjectTimelineEvent instantiates a new TdmObjectTimelineEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTdmObjectTimelineEvent(action NullableString, id NullableString) *TdmObjectTimelineEvent {
	this := TdmObjectTimelineEvent{}
	this.Action = action
	this.Id = id
	return &this
}

// NewTdmObjectTimelineEventWithDefaults instantiates a new TdmObjectTimelineEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTdmObjectTimelineEventWithDefaults() *TdmObjectTimelineEvent {
	this := TdmObjectTimelineEvent{}
	return &this
}

// GetAction returns the Action field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TdmObjectTimelineEvent) GetAction() string {
	if o == nil || o.Action.Get() == nil {
		var ret string
		return ret
	}

	return *o.Action.Get()
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmObjectTimelineEvent) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Action.Get(), o.Action.IsSet()
}

// SetAction sets field value
func (o *TdmObjectTimelineEvent) SetAction(v string) {
	o.Action.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmObjectTimelineEvent) GetCreatedAt() int64 {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret int64
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmObjectTimelineEvent) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TdmObjectTimelineEvent) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableInt64 and assigns it to the CreatedAt field.
func (o *TdmObjectTimelineEvent) SetCreatedAt(v int64) {
	o.CreatedAt.Set(&v)
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *TdmObjectTimelineEvent) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *TdmObjectTimelineEvent) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetCreatedByUser returns the CreatedByUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmObjectTimelineEvent) GetCreatedByUser() User {
	if o == nil || IsNil(o.CreatedByUser.Get()) {
		var ret User
		return ret
	}
	return *o.CreatedByUser.Get()
}

// GetCreatedByUserOk returns a tuple with the CreatedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmObjectTimelineEvent) GetCreatedByUserOk() (*User, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedByUser.Get(), o.CreatedByUser.IsSet()
}

// HasCreatedByUser returns a boolean if a field has been set.
func (o *TdmObjectTimelineEvent) HasCreatedByUser() bool {
	if o != nil && o.CreatedByUser.IsSet() {
		return true
	}

	return false
}

// SetCreatedByUser gets a reference to the given NullableUser and assigns it to the CreatedByUser field.
func (o *TdmObjectTimelineEvent) SetCreatedByUser(v User) {
	o.CreatedByUser.Set(&v)
}
// SetCreatedByUserNil sets the value for CreatedByUser to be an explicit nil
func (o *TdmObjectTimelineEvent) SetCreatedByUserNil() {
	o.CreatedByUser.Set(nil)
}

// UnsetCreatedByUser ensures that no value is present for CreatedByUser, not even an explicit nil
func (o *TdmObjectTimelineEvent) UnsetCreatedByUser() {
	o.CreatedByUser.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmObjectTimelineEvent) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmObjectTimelineEvent) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *TdmObjectTimelineEvent) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *TdmObjectTimelineEvent) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *TdmObjectTimelineEvent) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *TdmObjectTimelineEvent) UnsetDescription() {
	o.Description.Unset()
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmObjectTimelineEvent) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmObjectTimelineEvent) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *TdmObjectTimelineEvent) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *TdmObjectTimelineEvent) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *TdmObjectTimelineEvent) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *TdmObjectTimelineEvent) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetEventGroupId returns the EventGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmObjectTimelineEvent) GetEventGroupId() string {
	if o == nil || IsNil(o.EventGroupId.Get()) {
		var ret string
		return ret
	}
	return *o.EventGroupId.Get()
}

// GetEventGroupIdOk returns a tuple with the EventGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmObjectTimelineEvent) GetEventGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventGroupId.Get(), o.EventGroupId.IsSet()
}

// HasEventGroupId returns a boolean if a field has been set.
func (o *TdmObjectTimelineEvent) HasEventGroupId() bool {
	if o != nil && o.EventGroupId.IsSet() {
		return true
	}

	return false
}

// SetEventGroupId gets a reference to the given NullableString and assigns it to the EventGroupId field.
func (o *TdmObjectTimelineEvent) SetEventGroupId(v string) {
	o.EventGroupId.Set(&v)
}
// SetEventGroupIdNil sets the value for EventGroupId to be an explicit nil
func (o *TdmObjectTimelineEvent) SetEventGroupIdNil() {
	o.EventGroupId.Set(nil)
}

// UnsetEventGroupId ensures that no value is present for EventGroupId, not even an explicit nil
func (o *TdmObjectTimelineEvent) UnsetEventGroupId() {
	o.EventGroupId.Unset()
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TdmObjectTimelineEvent) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}

	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmObjectTimelineEvent) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// SetId sets field value
func (o *TdmObjectTimelineEvent) SetId(v string) {
	o.Id.Set(&v)
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmObjectTimelineEvent) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmObjectTimelineEvent) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *TdmObjectTimelineEvent) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *TdmObjectTimelineEvent) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *TdmObjectTimelineEvent) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *TdmObjectTimelineEvent) UnsetStatus() {
	o.Status.Unset()
}

// GetCloneParams returns the CloneParams field value if set, zero value otherwise.
func (o *TdmObjectTimelineEvent) GetCloneParams() TdmCloneTaskResponseParams {
	if o == nil || IsNil(o.CloneParams) {
		var ret TdmCloneTaskResponseParams
		return ret
	}
	return *o.CloneParams
}

// GetCloneParamsOk returns a tuple with the CloneParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TdmObjectTimelineEvent) GetCloneParamsOk() (*TdmCloneTaskResponseParams, bool) {
	if o == nil || IsNil(o.CloneParams) {
		return nil, false
	}
	return o.CloneParams, true
}

// HasCloneParams returns a boolean if a field has been set.
func (o *TdmObjectTimelineEvent) HasCloneParams() bool {
	if o != nil && !IsNil(o.CloneParams) {
		return true
	}

	return false
}

// SetCloneParams gets a reference to the given TdmCloneTaskResponseParams and assigns it to the CloneParams field.
func (o *TdmObjectTimelineEvent) SetCloneParams(v TdmCloneTaskResponseParams) {
	o.CloneParams = &v
}

// GetSnapshotParams returns the SnapshotParams field value if set, zero value otherwise.
func (o *TdmObjectTimelineEvent) GetSnapshotParams() TdmSnapshot {
	if o == nil || IsNil(o.SnapshotParams) {
		var ret TdmSnapshot
		return ret
	}
	return *o.SnapshotParams
}

// GetSnapshotParamsOk returns a tuple with the SnapshotParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TdmObjectTimelineEvent) GetSnapshotParamsOk() (*TdmSnapshot, bool) {
	if o == nil || IsNil(o.SnapshotParams) {
		return nil, false
	}
	return o.SnapshotParams, true
}

// HasSnapshotParams returns a boolean if a field has been set.
func (o *TdmObjectTimelineEvent) HasSnapshotParams() bool {
	if o != nil && !IsNil(o.SnapshotParams) {
		return true
	}

	return false
}

// SetSnapshotParams gets a reference to the given TdmSnapshot and assigns it to the SnapshotParams field.
func (o *TdmObjectTimelineEvent) SetSnapshotParams(v TdmSnapshot) {
	o.SnapshotParams = &v
}

func (o TdmObjectTimelineEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TdmObjectTimelineEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action.Get()
	if o.CreatedAt.IsSet() {
		toSerialize["createdAt"] = o.CreatedAt.Get()
	}
	if o.CreatedByUser.IsSet() {
		toSerialize["createdByUser"] = o.CreatedByUser.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["errorMessage"] = o.ErrorMessage.Get()
	}
	if o.EventGroupId.IsSet() {
		toSerialize["eventGroupId"] = o.EventGroupId.Get()
	}
	toSerialize["id"] = o.Id.Get()
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if !IsNil(o.CloneParams) {
		toSerialize["cloneParams"] = o.CloneParams
	}
	if !IsNil(o.SnapshotParams) {
		toSerialize["snapshotParams"] = o.SnapshotParams
	}
	return toSerialize, nil
}

func (o *TdmObjectTimelineEvent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTdmObjectTimelineEvent := _TdmObjectTimelineEvent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTdmObjectTimelineEvent)

	if err != nil {
		return err
	}

	*o = TdmObjectTimelineEvent(varTdmObjectTimelineEvent)

	return err
}

type NullableTdmObjectTimelineEvent struct {
	value *TdmObjectTimelineEvent
	isSet bool
}

func (v NullableTdmObjectTimelineEvent) Get() *TdmObjectTimelineEvent {
	return v.value
}

func (v *NullableTdmObjectTimelineEvent) Set(val *TdmObjectTimelineEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableTdmObjectTimelineEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableTdmObjectTimelineEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTdmObjectTimelineEvent(val *TdmObjectTimelineEvent) *NullableTdmObjectTimelineEvent {
	return &NullableTdmObjectTimelineEvent{value: val, isSet: true}
}

func (v NullableTdmObjectTimelineEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTdmObjectTimelineEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


