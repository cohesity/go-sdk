/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExperimentalAdapterObjectProtectionUpdateRequestParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExperimentalAdapterObjectProtectionUpdateRequestParams{}

// ExperimentalAdapterObjectProtectionUpdateRequestParams Specifies the update parameters specific to Experimental Adapter object protection.
type ExperimentalAdapterObjectProtectionUpdateRequestParams struct {
	// Specifies the objects to be included in the Object Protection.
	Objects []ExperimentalAdapterObjectProtectionObjectParams `json:"objects"`
}

type _ExperimentalAdapterObjectProtectionUpdateRequestParams ExperimentalAdapterObjectProtectionUpdateRequestParams

// NewExperimentalAdapterObjectProtectionUpdateRequestParams instantiates a new ExperimentalAdapterObjectProtectionUpdateRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExperimentalAdapterObjectProtectionUpdateRequestParams(objects []ExperimentalAdapterObjectProtectionObjectParams) *ExperimentalAdapterObjectProtectionUpdateRequestParams {
	this := ExperimentalAdapterObjectProtectionUpdateRequestParams{}
	this.Objects = objects
	return &this
}

// NewExperimentalAdapterObjectProtectionUpdateRequestParamsWithDefaults instantiates a new ExperimentalAdapterObjectProtectionUpdateRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExperimentalAdapterObjectProtectionUpdateRequestParamsWithDefaults() *ExperimentalAdapterObjectProtectionUpdateRequestParams {
	this := ExperimentalAdapterObjectProtectionUpdateRequestParams{}
	return &this
}

// GetObjects returns the Objects field value
func (o *ExperimentalAdapterObjectProtectionUpdateRequestParams) GetObjects() []ExperimentalAdapterObjectProtectionObjectParams {
	if o == nil {
		var ret []ExperimentalAdapterObjectProtectionObjectParams
		return ret
	}

	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value
// and a boolean to check if the value has been set.
func (o *ExperimentalAdapterObjectProtectionUpdateRequestParams) GetObjectsOk() ([]ExperimentalAdapterObjectProtectionObjectParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.Objects, true
}

// SetObjects sets field value
func (o *ExperimentalAdapterObjectProtectionUpdateRequestParams) SetObjects(v []ExperimentalAdapterObjectProtectionObjectParams) {
	o.Objects = v
}

func (o ExperimentalAdapterObjectProtectionUpdateRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExperimentalAdapterObjectProtectionUpdateRequestParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objects"] = o.Objects
	return toSerialize, nil
}

func (o *ExperimentalAdapterObjectProtectionUpdateRequestParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objects",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExperimentalAdapterObjectProtectionUpdateRequestParams := _ExperimentalAdapterObjectProtectionUpdateRequestParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExperimentalAdapterObjectProtectionUpdateRequestParams)

	if err != nil {
		return err
	}

	*o = ExperimentalAdapterObjectProtectionUpdateRequestParams(varExperimentalAdapterObjectProtectionUpdateRequestParams)

	return err
}

type NullableExperimentalAdapterObjectProtectionUpdateRequestParams struct {
	value *ExperimentalAdapterObjectProtectionUpdateRequestParams
	isSet bool
}

func (v NullableExperimentalAdapterObjectProtectionUpdateRequestParams) Get() *ExperimentalAdapterObjectProtectionUpdateRequestParams {
	return v.value
}

func (v *NullableExperimentalAdapterObjectProtectionUpdateRequestParams) Set(val *ExperimentalAdapterObjectProtectionUpdateRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableExperimentalAdapterObjectProtectionUpdateRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableExperimentalAdapterObjectProtectionUpdateRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExperimentalAdapterObjectProtectionUpdateRequestParams(val *ExperimentalAdapterObjectProtectionUpdateRequestParams) *NullableExperimentalAdapterObjectProtectionUpdateRequestParams {
	return &NullableExperimentalAdapterObjectProtectionUpdateRequestParams{value: val, isSet: true}
}

func (v NullableExperimentalAdapterObjectProtectionUpdateRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExperimentalAdapterObjectProtectionUpdateRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


