/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the RecoverPhysicalParamsSystemRecoveryParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecoverPhysicalParamsSystemRecoveryParams{}

// RecoverPhysicalParamsSystemRecoveryParams Specifies the parameters to perform a system recovery.
type RecoverPhysicalParamsSystemRecoveryParams struct {
	// Specifies the path to the recovery view.
	FullNasPath NullableString `json:"fullNasPath,omitempty"`
}

// NewRecoverPhysicalParamsSystemRecoveryParams instantiates a new RecoverPhysicalParamsSystemRecoveryParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverPhysicalParamsSystemRecoveryParams() *RecoverPhysicalParamsSystemRecoveryParams {
	this := RecoverPhysicalParamsSystemRecoveryParams{}
	return &this
}

// NewRecoverPhysicalParamsSystemRecoveryParamsWithDefaults instantiates a new RecoverPhysicalParamsSystemRecoveryParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverPhysicalParamsSystemRecoveryParamsWithDefaults() *RecoverPhysicalParamsSystemRecoveryParams {
	this := RecoverPhysicalParamsSystemRecoveryParams{}
	return &this
}

// GetFullNasPath returns the FullNasPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverPhysicalParamsSystemRecoveryParams) GetFullNasPath() string {
	if o == nil || IsNil(o.FullNasPath.Get()) {
		var ret string
		return ret
	}
	return *o.FullNasPath.Get()
}

// GetFullNasPathOk returns a tuple with the FullNasPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverPhysicalParamsSystemRecoveryParams) GetFullNasPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FullNasPath.Get(), o.FullNasPath.IsSet()
}

// HasFullNasPath returns a boolean if a field has been set.
func (o *RecoverPhysicalParamsSystemRecoveryParams) HasFullNasPath() bool {
	if o != nil && o.FullNasPath.IsSet() {
		return true
	}

	return false
}

// SetFullNasPath gets a reference to the given NullableString and assigns it to the FullNasPath field.
func (o *RecoverPhysicalParamsSystemRecoveryParams) SetFullNasPath(v string) {
	o.FullNasPath.Set(&v)
}
// SetFullNasPathNil sets the value for FullNasPath to be an explicit nil
func (o *RecoverPhysicalParamsSystemRecoveryParams) SetFullNasPathNil() {
	o.FullNasPath.Set(nil)
}

// UnsetFullNasPath ensures that no value is present for FullNasPath, not even an explicit nil
func (o *RecoverPhysicalParamsSystemRecoveryParams) UnsetFullNasPath() {
	o.FullNasPath.Unset()
}

func (o RecoverPhysicalParamsSystemRecoveryParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecoverPhysicalParamsSystemRecoveryParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FullNasPath.IsSet() {
		toSerialize["fullNasPath"] = o.FullNasPath.Get()
	}
	return toSerialize, nil
}

type NullableRecoverPhysicalParamsSystemRecoveryParams struct {
	value *RecoverPhysicalParamsSystemRecoveryParams
	isSet bool
}

func (v NullableRecoverPhysicalParamsSystemRecoveryParams) Get() *RecoverPhysicalParamsSystemRecoveryParams {
	return v.value
}

func (v *NullableRecoverPhysicalParamsSystemRecoveryParams) Set(val *RecoverPhysicalParamsSystemRecoveryParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverPhysicalParamsSystemRecoveryParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverPhysicalParamsSystemRecoveryParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverPhysicalParamsSystemRecoveryParams(val *RecoverPhysicalParamsSystemRecoveryParams) *NullableRecoverPhysicalParamsSystemRecoveryParams {
	return &NullableRecoverPhysicalParamsSystemRecoveryParams{value: val, isSet: true}
}

func (v NullableRecoverPhysicalParamsSystemRecoveryParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverPhysicalParamsSystemRecoveryParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


