/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateProtectionGroupRunRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProtectionGroupRunRequestBody{}

// UpdateProtectionGroupRunRequestBody Specifies the params to update a list of Protection Group Runs.
type UpdateProtectionGroupRunRequestBody struct {
	UpdateProtectionGroupRunParams []UpdateProtectionGroupRunParams `json:"updateProtectionGroupRunParams"`
}

type _UpdateProtectionGroupRunRequestBody UpdateProtectionGroupRunRequestBody

// NewUpdateProtectionGroupRunRequestBody instantiates a new UpdateProtectionGroupRunRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProtectionGroupRunRequestBody(updateProtectionGroupRunParams []UpdateProtectionGroupRunParams) *UpdateProtectionGroupRunRequestBody {
	this := UpdateProtectionGroupRunRequestBody{}
	this.UpdateProtectionGroupRunParams = updateProtectionGroupRunParams
	return &this
}

// NewUpdateProtectionGroupRunRequestBodyWithDefaults instantiates a new UpdateProtectionGroupRunRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProtectionGroupRunRequestBodyWithDefaults() *UpdateProtectionGroupRunRequestBody {
	this := UpdateProtectionGroupRunRequestBody{}
	return &this
}

// GetUpdateProtectionGroupRunParams returns the UpdateProtectionGroupRunParams field value
// If the value is explicit nil, the zero value for []UpdateProtectionGroupRunParams will be returned
func (o *UpdateProtectionGroupRunRequestBody) GetUpdateProtectionGroupRunParams() []UpdateProtectionGroupRunParams {
	if o == nil {
		var ret []UpdateProtectionGroupRunParams
		return ret
	}

	return o.UpdateProtectionGroupRunParams
}

// GetUpdateProtectionGroupRunParamsOk returns a tuple with the UpdateProtectionGroupRunParams field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionGroupRunRequestBody) GetUpdateProtectionGroupRunParamsOk() ([]UpdateProtectionGroupRunParams, bool) {
	if o == nil || IsNil(o.UpdateProtectionGroupRunParams) {
		return nil, false
	}
	return o.UpdateProtectionGroupRunParams, true
}

// SetUpdateProtectionGroupRunParams sets field value
func (o *UpdateProtectionGroupRunRequestBody) SetUpdateProtectionGroupRunParams(v []UpdateProtectionGroupRunParams) {
	o.UpdateProtectionGroupRunParams = v
}

func (o UpdateProtectionGroupRunRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProtectionGroupRunRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.UpdateProtectionGroupRunParams != nil {
		toSerialize["updateProtectionGroupRunParams"] = o.UpdateProtectionGroupRunParams
	}
	return toSerialize, nil
}

func (o *UpdateProtectionGroupRunRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"updateProtectionGroupRunParams",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateProtectionGroupRunRequestBody := _UpdateProtectionGroupRunRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateProtectionGroupRunRequestBody)

	if err != nil {
		return err
	}

	*o = UpdateProtectionGroupRunRequestBody(varUpdateProtectionGroupRunRequestBody)

	return err
}

type NullableUpdateProtectionGroupRunRequestBody struct {
	value *UpdateProtectionGroupRunRequestBody
	isSet bool
}

func (v NullableUpdateProtectionGroupRunRequestBody) Get() *UpdateProtectionGroupRunRequestBody {
	return v.value
}

func (v *NullableUpdateProtectionGroupRunRequestBody) Set(val *UpdateProtectionGroupRunRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProtectionGroupRunRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProtectionGroupRunRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProtectionGroupRunRequestBody(val *UpdateProtectionGroupRunRequestBody) *NullableUpdateProtectionGroupRunRequestBody {
	return &NullableUpdateProtectionGroupRunRequestBody{value: val, isSet: true}
}

func (v NullableUpdateProtectionGroupRunRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProtectionGroupRunRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


