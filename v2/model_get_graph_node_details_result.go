/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the GetGraphNodeDetailsResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetGraphNodeDetailsResult{}

// GetGraphNodeDetailsResult Defintion of node relations search query result.
type GetGraphNodeDetailsResult struct {
	// Specifies fetched graph node and their edges information.
	GraphNodeRelation NullableGraphNodeRelation `json:"graphNodeRelation,omitempty"`
}

// NewGetGraphNodeDetailsResult instantiates a new GetGraphNodeDetailsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetGraphNodeDetailsResult() *GetGraphNodeDetailsResult {
	this := GetGraphNodeDetailsResult{}
	return &this
}

// NewGetGraphNodeDetailsResultWithDefaults instantiates a new GetGraphNodeDetailsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetGraphNodeDetailsResultWithDefaults() *GetGraphNodeDetailsResult {
	this := GetGraphNodeDetailsResult{}
	return &this
}

// GetGraphNodeRelation returns the GraphNodeRelation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetGraphNodeDetailsResult) GetGraphNodeRelation() GraphNodeRelation {
	if o == nil || IsNil(o.GraphNodeRelation.Get()) {
		var ret GraphNodeRelation
		return ret
	}
	return *o.GraphNodeRelation.Get()
}

// GetGraphNodeRelationOk returns a tuple with the GraphNodeRelation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetGraphNodeDetailsResult) GetGraphNodeRelationOk() (*GraphNodeRelation, bool) {
	if o == nil {
		return nil, false
	}
	return o.GraphNodeRelation.Get(), o.GraphNodeRelation.IsSet()
}

// HasGraphNodeRelation returns a boolean if a field has been set.
func (o *GetGraphNodeDetailsResult) HasGraphNodeRelation() bool {
	if o != nil && o.GraphNodeRelation.IsSet() {
		return true
	}

	return false
}

// SetGraphNodeRelation gets a reference to the given NullableGraphNodeRelation and assigns it to the GraphNodeRelation field.
func (o *GetGraphNodeDetailsResult) SetGraphNodeRelation(v GraphNodeRelation) {
	o.GraphNodeRelation.Set(&v)
}
// SetGraphNodeRelationNil sets the value for GraphNodeRelation to be an explicit nil
func (o *GetGraphNodeDetailsResult) SetGraphNodeRelationNil() {
	o.GraphNodeRelation.Set(nil)
}

// UnsetGraphNodeRelation ensures that no value is present for GraphNodeRelation, not even an explicit nil
func (o *GetGraphNodeDetailsResult) UnsetGraphNodeRelation() {
	o.GraphNodeRelation.Unset()
}

func (o GetGraphNodeDetailsResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetGraphNodeDetailsResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.GraphNodeRelation.IsSet() {
		toSerialize["graphNodeRelation"] = o.GraphNodeRelation.Get()
	}
	return toSerialize, nil
}

type NullableGetGraphNodeDetailsResult struct {
	value *GetGraphNodeDetailsResult
	isSet bool
}

func (v NullableGetGraphNodeDetailsResult) Get() *GetGraphNodeDetailsResult {
	return v.value
}

func (v *NullableGetGraphNodeDetailsResult) Set(val *GetGraphNodeDetailsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGraphNodeDetailsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGraphNodeDetailsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGraphNodeDetailsResult(val *GetGraphNodeDetailsResult) *NullableGetGraphNodeDetailsResult {
	return &NullableGetGraphNodeDetailsResult{value: val, isSet: true}
}

func (v NullableGetGraphNodeDetailsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGraphNodeDetailsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


