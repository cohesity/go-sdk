// Code generated by go-swagger; DO NOT EDIT.

package platform

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetInterfacesParams creates a new GetInterfacesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInterfacesParams() *GetInterfacesParams {
	return &GetInterfacesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInterfacesParamsWithTimeout creates a new GetInterfacesParams object
// with the ability to set a timeout on a request.
func NewGetInterfacesParamsWithTimeout(timeout time.Duration) *GetInterfacesParams {
	return &GetInterfacesParams{
		timeout: timeout,
	}
}

// NewGetInterfacesParamsWithContext creates a new GetInterfacesParams object
// with the ability to set a context for a request.
func NewGetInterfacesParamsWithContext(ctx context.Context) *GetInterfacesParams {
	return &GetInterfacesParams{
		Context: ctx,
	}
}

// NewGetInterfacesParamsWithHTTPClient creates a new GetInterfacesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInterfacesParamsWithHTTPClient(client *http.Client) *GetInterfacesParams {
	return &GetInterfacesParams{
		HTTPClient: client,
	}
}

/*
GetInterfacesParams contains all the parameters to send to the API endpoint

	for the get interfaces operation.

	Typically these are written to a http.Request.
*/
type GetInterfacesParams struct {

	/* BondInterfaces.

	   Get bond interfaces only.
	*/
	BondInterfaces *bool

	/* BondMember.

	   Include bond member information for bond interfaces.

	   Default: true
	*/
	BondMember *bool

	/* Cache.

	   Get interfaces information from cache.

	   Default: true
	*/
	Cache *bool

	/* ChassisSerial.

	   Chassis serial number, used to get interfaces on a chassis.
	*/
	ChassisSerial *string

	/* InterfaceGroup.

	   Get interfaces assigned to a interface group only.
	*/
	InterfaceGroup *bool

	/* NodeID.

	   Node id, used to get interfaces on a particular node.

	   Format: int64
	*/
	NodeID *int64

	/* Slot.

	   Slot number, used to get interfaces on a slot.

	   Format: int64
	*/
	Slot *int64

	/* Stats.

	   Include interface stats.

	   Default: true
	*/
	Stats *bool

	/* UplinkSwitch.

	   Include uplink switch information.

	   Default: true
	*/
	UplinkSwitch *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get interfaces params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInterfacesParams) WithDefaults() *GetInterfacesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get interfaces params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInterfacesParams) SetDefaults() {
	var (
		bondInterfacesDefault = bool(false)

		bondMemberDefault = bool(true)

		cacheDefault = bool(true)

		interfaceGroupDefault = bool(false)

		statsDefault = bool(true)

		uplinkSwitchDefault = bool(true)
	)

	val := GetInterfacesParams{
		BondInterfaces: &bondInterfacesDefault,
		BondMember:     &bondMemberDefault,
		Cache:          &cacheDefault,
		InterfaceGroup: &interfaceGroupDefault,
		Stats:          &statsDefault,
		UplinkSwitch:   &uplinkSwitchDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get interfaces params
func (o *GetInterfacesParams) WithTimeout(timeout time.Duration) *GetInterfacesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get interfaces params
func (o *GetInterfacesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get interfaces params
func (o *GetInterfacesParams) WithContext(ctx context.Context) *GetInterfacesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get interfaces params
func (o *GetInterfacesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get interfaces params
func (o *GetInterfacesParams) WithHTTPClient(client *http.Client) *GetInterfacesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get interfaces params
func (o *GetInterfacesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBondInterfaces adds the bondInterfaces to the get interfaces params
func (o *GetInterfacesParams) WithBondInterfaces(bondInterfaces *bool) *GetInterfacesParams {
	o.SetBondInterfaces(bondInterfaces)
	return o
}

// SetBondInterfaces adds the bondInterfaces to the get interfaces params
func (o *GetInterfacesParams) SetBondInterfaces(bondInterfaces *bool) {
	o.BondInterfaces = bondInterfaces
}

// WithBondMember adds the bondMember to the get interfaces params
func (o *GetInterfacesParams) WithBondMember(bondMember *bool) *GetInterfacesParams {
	o.SetBondMember(bondMember)
	return o
}

// SetBondMember adds the bondMember to the get interfaces params
func (o *GetInterfacesParams) SetBondMember(bondMember *bool) {
	o.BondMember = bondMember
}

// WithCache adds the cache to the get interfaces params
func (o *GetInterfacesParams) WithCache(cache *bool) *GetInterfacesParams {
	o.SetCache(cache)
	return o
}

// SetCache adds the cache to the get interfaces params
func (o *GetInterfacesParams) SetCache(cache *bool) {
	o.Cache = cache
}

// WithChassisSerial adds the chassisSerial to the get interfaces params
func (o *GetInterfacesParams) WithChassisSerial(chassisSerial *string) *GetInterfacesParams {
	o.SetChassisSerial(chassisSerial)
	return o
}

// SetChassisSerial adds the chassisSerial to the get interfaces params
func (o *GetInterfacesParams) SetChassisSerial(chassisSerial *string) {
	o.ChassisSerial = chassisSerial
}

// WithInterfaceGroup adds the interfaceGroup to the get interfaces params
func (o *GetInterfacesParams) WithInterfaceGroup(interfaceGroup *bool) *GetInterfacesParams {
	o.SetInterfaceGroup(interfaceGroup)
	return o
}

// SetInterfaceGroup adds the interfaceGroup to the get interfaces params
func (o *GetInterfacesParams) SetInterfaceGroup(interfaceGroup *bool) {
	o.InterfaceGroup = interfaceGroup
}

// WithNodeID adds the nodeID to the get interfaces params
func (o *GetInterfacesParams) WithNodeID(nodeID *int64) *GetInterfacesParams {
	o.SetNodeID(nodeID)
	return o
}

// SetNodeID adds the nodeId to the get interfaces params
func (o *GetInterfacesParams) SetNodeID(nodeID *int64) {
	o.NodeID = nodeID
}

// WithSlot adds the slot to the get interfaces params
func (o *GetInterfacesParams) WithSlot(slot *int64) *GetInterfacesParams {
	o.SetSlot(slot)
	return o
}

// SetSlot adds the slot to the get interfaces params
func (o *GetInterfacesParams) SetSlot(slot *int64) {
	o.Slot = slot
}

// WithStats adds the stats to the get interfaces params
func (o *GetInterfacesParams) WithStats(stats *bool) *GetInterfacesParams {
	o.SetStats(stats)
	return o
}

// SetStats adds the stats to the get interfaces params
func (o *GetInterfacesParams) SetStats(stats *bool) {
	o.Stats = stats
}

// WithUplinkSwitch adds the uplinkSwitch to the get interfaces params
func (o *GetInterfacesParams) WithUplinkSwitch(uplinkSwitch *bool) *GetInterfacesParams {
	o.SetUplinkSwitch(uplinkSwitch)
	return o
}

// SetUplinkSwitch adds the uplinkSwitch to the get interfaces params
func (o *GetInterfacesParams) SetUplinkSwitch(uplinkSwitch *bool) {
	o.UplinkSwitch = uplinkSwitch
}

// WriteToRequest writes these params to a swagger request
func (o *GetInterfacesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BondInterfaces != nil {

		// query param bondInterfaces
		var qrBondInterfaces bool

		if o.BondInterfaces != nil {
			qrBondInterfaces = *o.BondInterfaces
		}
		qBondInterfaces := swag.FormatBool(qrBondInterfaces)
		if qBondInterfaces != "" {

			if err := r.SetQueryParam("bondInterfaces", qBondInterfaces); err != nil {
				return err
			}
		}
	}

	if o.BondMember != nil {

		// query param bondMember
		var qrBondMember bool

		if o.BondMember != nil {
			qrBondMember = *o.BondMember
		}
		qBondMember := swag.FormatBool(qrBondMember)
		if qBondMember != "" {

			if err := r.SetQueryParam("bondMember", qBondMember); err != nil {
				return err
			}
		}
	}

	if o.Cache != nil {

		// query param cache
		var qrCache bool

		if o.Cache != nil {
			qrCache = *o.Cache
		}
		qCache := swag.FormatBool(qrCache)
		if qCache != "" {

			if err := r.SetQueryParam("cache", qCache); err != nil {
				return err
			}
		}
	}

	if o.ChassisSerial != nil {

		// query param chassisSerial
		var qrChassisSerial string

		if o.ChassisSerial != nil {
			qrChassisSerial = *o.ChassisSerial
		}
		qChassisSerial := qrChassisSerial
		if qChassisSerial != "" {

			if err := r.SetQueryParam("chassisSerial", qChassisSerial); err != nil {
				return err
			}
		}
	}

	if o.InterfaceGroup != nil {

		// query param interfaceGroup
		var qrInterfaceGroup bool

		if o.InterfaceGroup != nil {
			qrInterfaceGroup = *o.InterfaceGroup
		}
		qInterfaceGroup := swag.FormatBool(qrInterfaceGroup)
		if qInterfaceGroup != "" {

			if err := r.SetQueryParam("interfaceGroup", qInterfaceGroup); err != nil {
				return err
			}
		}
	}

	if o.NodeID != nil {

		// query param nodeId
		var qrNodeID int64

		if o.NodeID != nil {
			qrNodeID = *o.NodeID
		}
		qNodeID := swag.FormatInt64(qrNodeID)
		if qNodeID != "" {

			if err := r.SetQueryParam("nodeId", qNodeID); err != nil {
				return err
			}
		}
	}

	if o.Slot != nil {

		// query param slot
		var qrSlot int64

		if o.Slot != nil {
			qrSlot = *o.Slot
		}
		qSlot := swag.FormatInt64(qrSlot)
		if qSlot != "" {

			if err := r.SetQueryParam("slot", qSlot); err != nil {
				return err
			}
		}
	}

	if o.Stats != nil {

		// query param stats
		var qrStats bool

		if o.Stats != nil {
			qrStats = *o.Stats
		}
		qStats := swag.FormatBool(qrStats)
		if qStats != "" {

			if err := r.SetQueryParam("stats", qStats); err != nil {
				return err
			}
		}
	}

	if o.UplinkSwitch != nil {

		// query param uplinkSwitch
		var qrUplinkSwitch bool

		if o.UplinkSwitch != nil {
			qrUplinkSwitch = *o.UplinkSwitch
		}
		qUplinkSwitch := swag.FormatBool(qrUplinkSwitch)
		if qUplinkSwitch != "" {

			if err := r.SetQueryParam("uplinkSwitch", qUplinkSwitch); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
