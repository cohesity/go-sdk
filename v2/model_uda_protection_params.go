/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the UdaProtectionParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UdaProtectionParams{}

// UdaProtectionParams Parameters to customize protection workflow.
type UdaProtectionParams struct {
	DynamicForm NullableUdaDynamicFormParams `json:"dynamicForm,omitempty"`
	PrimaryFields NullableUdaProtectionParamsPrimaryFields `json:"primaryFields,omitempty"`
}

// NewUdaProtectionParams instantiates a new UdaProtectionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUdaProtectionParams() *UdaProtectionParams {
	this := UdaProtectionParams{}
	return &this
}

// NewUdaProtectionParamsWithDefaults instantiates a new UdaProtectionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUdaProtectionParamsWithDefaults() *UdaProtectionParams {
	this := UdaProtectionParams{}
	return &this
}

// GetDynamicForm returns the DynamicForm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaProtectionParams) GetDynamicForm() UdaDynamicFormParams {
	if o == nil || IsNil(o.DynamicForm.Get()) {
		var ret UdaDynamicFormParams
		return ret
	}
	return *o.DynamicForm.Get()
}

// GetDynamicFormOk returns a tuple with the DynamicForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaProtectionParams) GetDynamicFormOk() (*UdaDynamicFormParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.DynamicForm.Get(), o.DynamicForm.IsSet()
}

// HasDynamicForm returns a boolean if a field has been set.
func (o *UdaProtectionParams) HasDynamicForm() bool {
	if o != nil && o.DynamicForm.IsSet() {
		return true
	}

	return false
}

// SetDynamicForm gets a reference to the given NullableUdaDynamicFormParams and assigns it to the DynamicForm field.
func (o *UdaProtectionParams) SetDynamicForm(v UdaDynamicFormParams) {
	o.DynamicForm.Set(&v)
}
// SetDynamicFormNil sets the value for DynamicForm to be an explicit nil
func (o *UdaProtectionParams) SetDynamicFormNil() {
	o.DynamicForm.Set(nil)
}

// UnsetDynamicForm ensures that no value is present for DynamicForm, not even an explicit nil
func (o *UdaProtectionParams) UnsetDynamicForm() {
	o.DynamicForm.Unset()
}

// GetPrimaryFields returns the PrimaryFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaProtectionParams) GetPrimaryFields() UdaProtectionParamsPrimaryFields {
	if o == nil || IsNil(o.PrimaryFields.Get()) {
		var ret UdaProtectionParamsPrimaryFields
		return ret
	}
	return *o.PrimaryFields.Get()
}

// GetPrimaryFieldsOk returns a tuple with the PrimaryFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaProtectionParams) GetPrimaryFieldsOk() (*UdaProtectionParamsPrimaryFields, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryFields.Get(), o.PrimaryFields.IsSet()
}

// HasPrimaryFields returns a boolean if a field has been set.
func (o *UdaProtectionParams) HasPrimaryFields() bool {
	if o != nil && o.PrimaryFields.IsSet() {
		return true
	}

	return false
}

// SetPrimaryFields gets a reference to the given NullableUdaProtectionParamsPrimaryFields and assigns it to the PrimaryFields field.
func (o *UdaProtectionParams) SetPrimaryFields(v UdaProtectionParamsPrimaryFields) {
	o.PrimaryFields.Set(&v)
}
// SetPrimaryFieldsNil sets the value for PrimaryFields to be an explicit nil
func (o *UdaProtectionParams) SetPrimaryFieldsNil() {
	o.PrimaryFields.Set(nil)
}

// UnsetPrimaryFields ensures that no value is present for PrimaryFields, not even an explicit nil
func (o *UdaProtectionParams) UnsetPrimaryFields() {
	o.PrimaryFields.Unset()
}

func (o UdaProtectionParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UdaProtectionParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DynamicForm.IsSet() {
		toSerialize["dynamicForm"] = o.DynamicForm.Get()
	}
	if o.PrimaryFields.IsSet() {
		toSerialize["primaryFields"] = o.PrimaryFields.Get()
	}
	return toSerialize, nil
}

type NullableUdaProtectionParams struct {
	value *UdaProtectionParams
	isSet bool
}

func (v NullableUdaProtectionParams) Get() *UdaProtectionParams {
	return v.value
}

func (v *NullableUdaProtectionParams) Set(val *UdaProtectionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUdaProtectionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUdaProtectionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUdaProtectionParams(val *UdaProtectionParams) *NullableUdaProtectionParams {
	return &NullableUdaProtectionParams{value: val, isSet: true}
}

func (v NullableUdaProtectionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUdaProtectionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


