/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the RecoverKvmVmParamsKvmTargetParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecoverKvmVmParamsKvmTargetParams{}

// RecoverKvmVmParamsKvmTargetParams Specifies the params for recovering to a KVM target.
type RecoverKvmVmParamsKvmTargetParams struct {
	// Specifies whether to continue recovering other vms if one of vms failed to recover. Default value is false.
	ContinueOnError NullableBool `json:"continueOnError,omitempty"`
	// Specifies whether to power on vms after recovery. If not specified, or false, recovered vms will be in powered off state.
	PowerOnVms NullableBool `json:"powerOnVms,omitempty"`
	RecoveryTargetConfig *KvmTargetParamsForRecoverVmRecoveryTargetConfig `json:"recoveryTargetConfig,omitempty"`
	RenameRecoveredVmsParams *KvmTargetParamsForRecoverVmRenameRecoveredVmsParams `json:"renameRecoveredVmsParams,omitempty"`
	VlanConfig *KvmTargetParamsForRecoverVmVlanConfig `json:"vlanConfig,omitempty"`
}

// NewRecoverKvmVmParamsKvmTargetParams instantiates a new RecoverKvmVmParamsKvmTargetParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverKvmVmParamsKvmTargetParams() *RecoverKvmVmParamsKvmTargetParams {
	this := RecoverKvmVmParamsKvmTargetParams{}
	return &this
}

// NewRecoverKvmVmParamsKvmTargetParamsWithDefaults instantiates a new RecoverKvmVmParamsKvmTargetParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverKvmVmParamsKvmTargetParamsWithDefaults() *RecoverKvmVmParamsKvmTargetParams {
	this := RecoverKvmVmParamsKvmTargetParams{}
	return &this
}

// GetContinueOnError returns the ContinueOnError field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverKvmVmParamsKvmTargetParams) GetContinueOnError() bool {
	if o == nil || IsNil(o.ContinueOnError.Get()) {
		var ret bool
		return ret
	}
	return *o.ContinueOnError.Get()
}

// GetContinueOnErrorOk returns a tuple with the ContinueOnError field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverKvmVmParamsKvmTargetParams) GetContinueOnErrorOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContinueOnError.Get(), o.ContinueOnError.IsSet()
}

// HasContinueOnError returns a boolean if a field has been set.
func (o *RecoverKvmVmParamsKvmTargetParams) HasContinueOnError() bool {
	if o != nil && o.ContinueOnError.IsSet() {
		return true
	}

	return false
}

// SetContinueOnError gets a reference to the given NullableBool and assigns it to the ContinueOnError field.
func (o *RecoverKvmVmParamsKvmTargetParams) SetContinueOnError(v bool) {
	o.ContinueOnError.Set(&v)
}
// SetContinueOnErrorNil sets the value for ContinueOnError to be an explicit nil
func (o *RecoverKvmVmParamsKvmTargetParams) SetContinueOnErrorNil() {
	o.ContinueOnError.Set(nil)
}

// UnsetContinueOnError ensures that no value is present for ContinueOnError, not even an explicit nil
func (o *RecoverKvmVmParamsKvmTargetParams) UnsetContinueOnError() {
	o.ContinueOnError.Unset()
}

// GetPowerOnVms returns the PowerOnVms field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverKvmVmParamsKvmTargetParams) GetPowerOnVms() bool {
	if o == nil || IsNil(o.PowerOnVms.Get()) {
		var ret bool
		return ret
	}
	return *o.PowerOnVms.Get()
}

// GetPowerOnVmsOk returns a tuple with the PowerOnVms field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverKvmVmParamsKvmTargetParams) GetPowerOnVmsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PowerOnVms.Get(), o.PowerOnVms.IsSet()
}

// HasPowerOnVms returns a boolean if a field has been set.
func (o *RecoverKvmVmParamsKvmTargetParams) HasPowerOnVms() bool {
	if o != nil && o.PowerOnVms.IsSet() {
		return true
	}

	return false
}

// SetPowerOnVms gets a reference to the given NullableBool and assigns it to the PowerOnVms field.
func (o *RecoverKvmVmParamsKvmTargetParams) SetPowerOnVms(v bool) {
	o.PowerOnVms.Set(&v)
}
// SetPowerOnVmsNil sets the value for PowerOnVms to be an explicit nil
func (o *RecoverKvmVmParamsKvmTargetParams) SetPowerOnVmsNil() {
	o.PowerOnVms.Set(nil)
}

// UnsetPowerOnVms ensures that no value is present for PowerOnVms, not even an explicit nil
func (o *RecoverKvmVmParamsKvmTargetParams) UnsetPowerOnVms() {
	o.PowerOnVms.Unset()
}

// GetRecoveryTargetConfig returns the RecoveryTargetConfig field value if set, zero value otherwise.
func (o *RecoverKvmVmParamsKvmTargetParams) GetRecoveryTargetConfig() KvmTargetParamsForRecoverVmRecoveryTargetConfig {
	if o == nil || IsNil(o.RecoveryTargetConfig) {
		var ret KvmTargetParamsForRecoverVmRecoveryTargetConfig
		return ret
	}
	return *o.RecoveryTargetConfig
}

// GetRecoveryTargetConfigOk returns a tuple with the RecoveryTargetConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverKvmVmParamsKvmTargetParams) GetRecoveryTargetConfigOk() (*KvmTargetParamsForRecoverVmRecoveryTargetConfig, bool) {
	if o == nil || IsNil(o.RecoveryTargetConfig) {
		return nil, false
	}
	return o.RecoveryTargetConfig, true
}

// HasRecoveryTargetConfig returns a boolean if a field has been set.
func (o *RecoverKvmVmParamsKvmTargetParams) HasRecoveryTargetConfig() bool {
	if o != nil && !IsNil(o.RecoveryTargetConfig) {
		return true
	}

	return false
}

// SetRecoveryTargetConfig gets a reference to the given KvmTargetParamsForRecoverVmRecoveryTargetConfig and assigns it to the RecoveryTargetConfig field.
func (o *RecoverKvmVmParamsKvmTargetParams) SetRecoveryTargetConfig(v KvmTargetParamsForRecoverVmRecoveryTargetConfig) {
	o.RecoveryTargetConfig = &v
}

// GetRenameRecoveredVmsParams returns the RenameRecoveredVmsParams field value if set, zero value otherwise.
func (o *RecoverKvmVmParamsKvmTargetParams) GetRenameRecoveredVmsParams() KvmTargetParamsForRecoverVmRenameRecoveredVmsParams {
	if o == nil || IsNil(o.RenameRecoveredVmsParams) {
		var ret KvmTargetParamsForRecoverVmRenameRecoveredVmsParams
		return ret
	}
	return *o.RenameRecoveredVmsParams
}

// GetRenameRecoveredVmsParamsOk returns a tuple with the RenameRecoveredVmsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverKvmVmParamsKvmTargetParams) GetRenameRecoveredVmsParamsOk() (*KvmTargetParamsForRecoverVmRenameRecoveredVmsParams, bool) {
	if o == nil || IsNil(o.RenameRecoveredVmsParams) {
		return nil, false
	}
	return o.RenameRecoveredVmsParams, true
}

// HasRenameRecoveredVmsParams returns a boolean if a field has been set.
func (o *RecoverKvmVmParamsKvmTargetParams) HasRenameRecoveredVmsParams() bool {
	if o != nil && !IsNil(o.RenameRecoveredVmsParams) {
		return true
	}

	return false
}

// SetRenameRecoveredVmsParams gets a reference to the given KvmTargetParamsForRecoverVmRenameRecoveredVmsParams and assigns it to the RenameRecoveredVmsParams field.
func (o *RecoverKvmVmParamsKvmTargetParams) SetRenameRecoveredVmsParams(v KvmTargetParamsForRecoverVmRenameRecoveredVmsParams) {
	o.RenameRecoveredVmsParams = &v
}

// GetVlanConfig returns the VlanConfig field value if set, zero value otherwise.
func (o *RecoverKvmVmParamsKvmTargetParams) GetVlanConfig() KvmTargetParamsForRecoverVmVlanConfig {
	if o == nil || IsNil(o.VlanConfig) {
		var ret KvmTargetParamsForRecoverVmVlanConfig
		return ret
	}
	return *o.VlanConfig
}

// GetVlanConfigOk returns a tuple with the VlanConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverKvmVmParamsKvmTargetParams) GetVlanConfigOk() (*KvmTargetParamsForRecoverVmVlanConfig, bool) {
	if o == nil || IsNil(o.VlanConfig) {
		return nil, false
	}
	return o.VlanConfig, true
}

// HasVlanConfig returns a boolean if a field has been set.
func (o *RecoverKvmVmParamsKvmTargetParams) HasVlanConfig() bool {
	if o != nil && !IsNil(o.VlanConfig) {
		return true
	}

	return false
}

// SetVlanConfig gets a reference to the given KvmTargetParamsForRecoverVmVlanConfig and assigns it to the VlanConfig field.
func (o *RecoverKvmVmParamsKvmTargetParams) SetVlanConfig(v KvmTargetParamsForRecoverVmVlanConfig) {
	o.VlanConfig = &v
}

func (o RecoverKvmVmParamsKvmTargetParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecoverKvmVmParamsKvmTargetParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ContinueOnError.IsSet() {
		toSerialize["continueOnError"] = o.ContinueOnError.Get()
	}
	if o.PowerOnVms.IsSet() {
		toSerialize["powerOnVms"] = o.PowerOnVms.Get()
	}
	if !IsNil(o.RecoveryTargetConfig) {
		toSerialize["recoveryTargetConfig"] = o.RecoveryTargetConfig
	}
	if !IsNil(o.RenameRecoveredVmsParams) {
		toSerialize["renameRecoveredVmsParams"] = o.RenameRecoveredVmsParams
	}
	if !IsNil(o.VlanConfig) {
		toSerialize["vlanConfig"] = o.VlanConfig
	}
	return toSerialize, nil
}

type NullableRecoverKvmVmParamsKvmTargetParams struct {
	value *RecoverKvmVmParamsKvmTargetParams
	isSet bool
}

func (v NullableRecoverKvmVmParamsKvmTargetParams) Get() *RecoverKvmVmParamsKvmTargetParams {
	return v.value
}

func (v *NullableRecoverKvmVmParamsKvmTargetParams) Set(val *RecoverKvmVmParamsKvmTargetParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverKvmVmParamsKvmTargetParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverKvmVmParamsKvmTargetParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverKvmVmParamsKvmTargetParams(val *RecoverKvmVmParamsKvmTargetParams) *NullableRecoverKvmVmParamsKvmTargetParams {
	return &NullableRecoverKvmVmParamsKvmTargetParams{value: val, isSet: true}
}

func (v NullableRecoverKvmVmParamsKvmTargetParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverKvmVmParamsKvmTargetParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


