/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ProtectedObjectUnProtectActionParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProtectedObjectUnProtectActionParams{}

// ProtectedObjectUnProtectActionParams Specifies the request parameters for Unprotect action on Protected objects.
type ProtectedObjectUnProtectActionParams struct {
	// Specifies the list of objects to perform an action. If provided object id is not explicitly protected by object protection, then given action will not be performed on that.
	Objects []UnprotectActionObjectLevelParams `json:"objects,omitempty"`
}

// NewProtectedObjectUnProtectActionParams instantiates a new ProtectedObjectUnProtectActionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectedObjectUnProtectActionParams() *ProtectedObjectUnProtectActionParams {
	this := ProtectedObjectUnProtectActionParams{}
	return &this
}

// NewProtectedObjectUnProtectActionParamsWithDefaults instantiates a new ProtectedObjectUnProtectActionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectedObjectUnProtectActionParamsWithDefaults() *ProtectedObjectUnProtectActionParams {
	this := ProtectedObjectUnProtectActionParams{}
	return &this
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *ProtectedObjectUnProtectActionParams) GetObjects() []UnprotectActionObjectLevelParams {
	if o == nil || IsNil(o.Objects) {
		var ret []UnprotectActionObjectLevelParams
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectUnProtectActionParams) GetObjectsOk() ([]UnprotectActionObjectLevelParams, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *ProtectedObjectUnProtectActionParams) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []UnprotectActionObjectLevelParams and assigns it to the Objects field.
func (o *ProtectedObjectUnProtectActionParams) SetObjects(v []UnprotectActionObjectLevelParams) {
	o.Objects = v
}

func (o ProtectedObjectUnProtectActionParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProtectedObjectUnProtectActionParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Objects) {
		toSerialize["objects"] = o.Objects
	}
	return toSerialize, nil
}

type NullableProtectedObjectUnProtectActionParams struct {
	value *ProtectedObjectUnProtectActionParams
	isSet bool
}

func (v NullableProtectedObjectUnProtectActionParams) Get() *ProtectedObjectUnProtectActionParams {
	return v.value
}

func (v *NullableProtectedObjectUnProtectActionParams) Set(val *ProtectedObjectUnProtectActionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectedObjectUnProtectActionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectedObjectUnProtectActionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectedObjectUnProtectActionParams(val *ProtectedObjectUnProtectActionParams) *NullableProtectedObjectUnProtectActionParams {
	return &NullableProtectedObjectUnProtectActionParams{value: val, isSet: true}
}

func (v NullableProtectedObjectUnProtectActionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectedObjectUnProtectActionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


