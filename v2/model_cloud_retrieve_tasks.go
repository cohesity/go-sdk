/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CloudRetrieveTasks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudRetrieveTasks{}

// CloudRetrieveTasks List of cloud retrieve tasks.
type CloudRetrieveTasks struct {
	// Specifies the list of cloud retrieve tasks.
	RetrieveTasks []CloudRetrieveTask `json:"retrieveTasks,omitempty"`
}

// NewCloudRetrieveTasks instantiates a new CloudRetrieveTasks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudRetrieveTasks() *CloudRetrieveTasks {
	this := CloudRetrieveTasks{}
	return &this
}

// NewCloudRetrieveTasksWithDefaults instantiates a new CloudRetrieveTasks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudRetrieveTasksWithDefaults() *CloudRetrieveTasks {
	this := CloudRetrieveTasks{}
	return &this
}

// GetRetrieveTasks returns the RetrieveTasks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudRetrieveTasks) GetRetrieveTasks() []CloudRetrieveTask {
	if o == nil {
		var ret []CloudRetrieveTask
		return ret
	}
	return o.RetrieveTasks
}

// GetRetrieveTasksOk returns a tuple with the RetrieveTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudRetrieveTasks) GetRetrieveTasksOk() ([]CloudRetrieveTask, bool) {
	if o == nil || IsNil(o.RetrieveTasks) {
		return nil, false
	}
	return o.RetrieveTasks, true
}

// HasRetrieveTasks returns a boolean if a field has been set.
func (o *CloudRetrieveTasks) HasRetrieveTasks() bool {
	if o != nil && !IsNil(o.RetrieveTasks) {
		return true
	}

	return false
}

// SetRetrieveTasks gets a reference to the given []CloudRetrieveTask and assigns it to the RetrieveTasks field.
func (o *CloudRetrieveTasks) SetRetrieveTasks(v []CloudRetrieveTask) {
	o.RetrieveTasks = v
}

func (o CloudRetrieveTasks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudRetrieveTasks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.RetrieveTasks != nil {
		toSerialize["retrieveTasks"] = o.RetrieveTasks
	}
	return toSerialize, nil
}

type NullableCloudRetrieveTasks struct {
	value *CloudRetrieveTasks
	isSet bool
}

func (v NullableCloudRetrieveTasks) Get() *CloudRetrieveTasks {
	return v.value
}

func (v *NullableCloudRetrieveTasks) Set(val *CloudRetrieveTasks) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudRetrieveTasks) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudRetrieveTasks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudRetrieveTasks(val *CloudRetrieveTasks) *NullableCloudRetrieveTasks {
	return &NullableCloudRetrieveTasks{value: val, isSet: true}
}

func (v NullableCloudRetrieveTasks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudRetrieveTasks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


