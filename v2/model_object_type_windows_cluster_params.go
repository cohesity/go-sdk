/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ObjectTypeWindowsClusterParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectTypeWindowsClusterParams{}

// ObjectTypeWindowsClusterParams struct for ObjectTypeWindowsClusterParams
type ObjectTypeWindowsClusterParams struct {
	// Specifies the type of cluster resource this source represents.
	ClusterSourceType NullableString `json:"clusterSourceType,omitempty"`
}

// NewObjectTypeWindowsClusterParams instantiates a new ObjectTypeWindowsClusterParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectTypeWindowsClusterParams() *ObjectTypeWindowsClusterParams {
	this := ObjectTypeWindowsClusterParams{}
	return &this
}

// NewObjectTypeWindowsClusterParamsWithDefaults instantiates a new ObjectTypeWindowsClusterParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectTypeWindowsClusterParamsWithDefaults() *ObjectTypeWindowsClusterParams {
	this := ObjectTypeWindowsClusterParams{}
	return &this
}

// GetClusterSourceType returns the ClusterSourceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectTypeWindowsClusterParams) GetClusterSourceType() string {
	if o == nil || IsNil(o.ClusterSourceType.Get()) {
		var ret string
		return ret
	}
	return *o.ClusterSourceType.Get()
}

// GetClusterSourceTypeOk returns a tuple with the ClusterSourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectTypeWindowsClusterParams) GetClusterSourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterSourceType.Get(), o.ClusterSourceType.IsSet()
}

// HasClusterSourceType returns a boolean if a field has been set.
func (o *ObjectTypeWindowsClusterParams) HasClusterSourceType() bool {
	if o != nil && o.ClusterSourceType.IsSet() {
		return true
	}

	return false
}

// SetClusterSourceType gets a reference to the given NullableString and assigns it to the ClusterSourceType field.
func (o *ObjectTypeWindowsClusterParams) SetClusterSourceType(v string) {
	o.ClusterSourceType.Set(&v)
}
// SetClusterSourceTypeNil sets the value for ClusterSourceType to be an explicit nil
func (o *ObjectTypeWindowsClusterParams) SetClusterSourceTypeNil() {
	o.ClusterSourceType.Set(nil)
}

// UnsetClusterSourceType ensures that no value is present for ClusterSourceType, not even an explicit nil
func (o *ObjectTypeWindowsClusterParams) UnsetClusterSourceType() {
	o.ClusterSourceType.Unset()
}

func (o ObjectTypeWindowsClusterParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectTypeWindowsClusterParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterSourceType.IsSet() {
		toSerialize["clusterSourceType"] = o.ClusterSourceType.Get()
	}
	return toSerialize, nil
}

type NullableObjectTypeWindowsClusterParams struct {
	value *ObjectTypeWindowsClusterParams
	isSet bool
}

func (v NullableObjectTypeWindowsClusterParams) Get() *ObjectTypeWindowsClusterParams {
	return v.value
}

func (v *NullableObjectTypeWindowsClusterParams) Set(val *ObjectTypeWindowsClusterParams) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectTypeWindowsClusterParams) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectTypeWindowsClusterParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectTypeWindowsClusterParams(val *ObjectTypeWindowsClusterParams) *NullableObjectTypeWindowsClusterParams {
	return &NullableObjectTypeWindowsClusterParams{value: val, isSet: true}
}

func (v NullableObjectTypeWindowsClusterParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectTypeWindowsClusterParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


