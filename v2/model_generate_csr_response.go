/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the GenerateCsrResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenerateCsrResponse{}

// GenerateCsrResponse Specifies the response to generate csr.
type GenerateCsrResponse struct {
	// Specifies csr in pem format.
	CsrPem NullableString `json:"csrPem,omitempty"`
	// Actual private key of the certificate.
	PrivateKey NullableString `json:"privateKey,omitempty"`
}

// NewGenerateCsrResponse instantiates a new GenerateCsrResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateCsrResponse() *GenerateCsrResponse {
	this := GenerateCsrResponse{}
	return &this
}

// NewGenerateCsrResponseWithDefaults instantiates a new GenerateCsrResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateCsrResponseWithDefaults() *GenerateCsrResponse {
	this := GenerateCsrResponse{}
	return &this
}

// GetCsrPem returns the CsrPem field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GenerateCsrResponse) GetCsrPem() string {
	if o == nil || IsNil(o.CsrPem.Get()) {
		var ret string
		return ret
	}
	return *o.CsrPem.Get()
}

// GetCsrPemOk returns a tuple with the CsrPem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GenerateCsrResponse) GetCsrPemOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CsrPem.Get(), o.CsrPem.IsSet()
}

// HasCsrPem returns a boolean if a field has been set.
func (o *GenerateCsrResponse) HasCsrPem() bool {
	if o != nil && o.CsrPem.IsSet() {
		return true
	}

	return false
}

// SetCsrPem gets a reference to the given NullableString and assigns it to the CsrPem field.
func (o *GenerateCsrResponse) SetCsrPem(v string) {
	o.CsrPem.Set(&v)
}
// SetCsrPemNil sets the value for CsrPem to be an explicit nil
func (o *GenerateCsrResponse) SetCsrPemNil() {
	o.CsrPem.Set(nil)
}

// UnsetCsrPem ensures that no value is present for CsrPem, not even an explicit nil
func (o *GenerateCsrResponse) UnsetCsrPem() {
	o.CsrPem.Unset()
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GenerateCsrResponse) GetPrivateKey() string {
	if o == nil || IsNil(o.PrivateKey.Get()) {
		var ret string
		return ret
	}
	return *o.PrivateKey.Get()
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GenerateCsrResponse) GetPrivateKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrivateKey.Get(), o.PrivateKey.IsSet()
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *GenerateCsrResponse) HasPrivateKey() bool {
	if o != nil && o.PrivateKey.IsSet() {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given NullableString and assigns it to the PrivateKey field.
func (o *GenerateCsrResponse) SetPrivateKey(v string) {
	o.PrivateKey.Set(&v)
}
// SetPrivateKeyNil sets the value for PrivateKey to be an explicit nil
func (o *GenerateCsrResponse) SetPrivateKeyNil() {
	o.PrivateKey.Set(nil)
}

// UnsetPrivateKey ensures that no value is present for PrivateKey, not even an explicit nil
func (o *GenerateCsrResponse) UnsetPrivateKey() {
	o.PrivateKey.Unset()
}

func (o GenerateCsrResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateCsrResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CsrPem.IsSet() {
		toSerialize["csrPem"] = o.CsrPem.Get()
	}
	if o.PrivateKey.IsSet() {
		toSerialize["privateKey"] = o.PrivateKey.Get()
	}
	return toSerialize, nil
}

type NullableGenerateCsrResponse struct {
	value *GenerateCsrResponse
	isSet bool
}

func (v NullableGenerateCsrResponse) Get() *GenerateCsrResponse {
	return v.value
}

func (v *NullableGenerateCsrResponse) Set(val *GenerateCsrResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateCsrResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateCsrResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateCsrResponse(val *GenerateCsrResponse) *NullableGenerateCsrResponse {
	return &NullableGenerateCsrResponse{value: val, isSet: true}
}

func (v NullableGenerateCsrResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateCsrResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


