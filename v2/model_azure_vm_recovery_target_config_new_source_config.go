/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AzureVmRecoveryTargetConfigNewSourceConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureVmRecoveryTargetConfigNewSourceConfig{}

// AzureVmRecoveryTargetConfigNewSourceConfig Specifies the new destination Source configuration parameters where the VMs will be recovered. This is mandatory if recoverToNewSource is set to true.
type AzureVmRecoveryTargetConfigNewSourceConfig struct {
	AvailabilitySet NullableRecoverAzureVmNewSourceConfigAvailabilitySet `json:"availabilitySet,omitempty"`
	ComputeOption NullableRecoverAzureVmNewSourceConfigComputeOption `json:"computeOption,omitempty"`
	DataTransferInfo *DataTransferInfo `json:"dataTransferInfo,omitempty"`
	NetworkConfig NullableRecoverAzureVmNewSourceConfigNetworkConfig `json:"networkConfig"`
	Region NullableRecoverAzureVmNewSourceConfigRegion `json:"region,omitempty"`
	ResourceGroup NullableRecoverAzureVmNewSourceConfigResourceGroup `json:"resourceGroup"`
	Source NullableRecoverAcropolisVmNewSourceConfigSource `json:"source"`
	StorageAccount NullableRecoverAzureVmNewSourceConfigStorageAccount `json:"storageAccount,omitempty"`
	StorageContainer NullableRecoverAzureVmNewSourceConfigStorageContainer `json:"storageContainer,omitempty"`
	StorageResourceGroup NullableRecoverAzureVmNewSourceConfigStorageResourceGroup `json:"storageResourceGroup,omitempty"`
	Subscription NullableRecoverAzureVmNewSourceConfigSubscription `json:"subscription,omitempty"`
}

type _AzureVmRecoveryTargetConfigNewSourceConfig AzureVmRecoveryTargetConfigNewSourceConfig

// NewAzureVmRecoveryTargetConfigNewSourceConfig instantiates a new AzureVmRecoveryTargetConfigNewSourceConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureVmRecoveryTargetConfigNewSourceConfig(networkConfig NullableRecoverAzureVmNewSourceConfigNetworkConfig, resourceGroup NullableRecoverAzureVmNewSourceConfigResourceGroup, source NullableRecoverAcropolisVmNewSourceConfigSource) *AzureVmRecoveryTargetConfigNewSourceConfig {
	this := AzureVmRecoveryTargetConfigNewSourceConfig{}
	this.NetworkConfig = networkConfig
	this.ResourceGroup = resourceGroup
	this.Source = source
	return &this
}

// NewAzureVmRecoveryTargetConfigNewSourceConfigWithDefaults instantiates a new AzureVmRecoveryTargetConfigNewSourceConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureVmRecoveryTargetConfigNewSourceConfigWithDefaults() *AzureVmRecoveryTargetConfigNewSourceConfig {
	this := AzureVmRecoveryTargetConfigNewSourceConfig{}
	return &this
}

// GetAvailabilitySet returns the AvailabilitySet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetAvailabilitySet() RecoverAzureVmNewSourceConfigAvailabilitySet {
	if o == nil || IsNil(o.AvailabilitySet.Get()) {
		var ret RecoverAzureVmNewSourceConfigAvailabilitySet
		return ret
	}
	return *o.AvailabilitySet.Get()
}

// GetAvailabilitySetOk returns a tuple with the AvailabilitySet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetAvailabilitySetOk() (*RecoverAzureVmNewSourceConfigAvailabilitySet, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvailabilitySet.Get(), o.AvailabilitySet.IsSet()
}

// HasAvailabilitySet returns a boolean if a field has been set.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) HasAvailabilitySet() bool {
	if o != nil && o.AvailabilitySet.IsSet() {
		return true
	}

	return false
}

// SetAvailabilitySet gets a reference to the given NullableRecoverAzureVmNewSourceConfigAvailabilitySet and assigns it to the AvailabilitySet field.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetAvailabilitySet(v RecoverAzureVmNewSourceConfigAvailabilitySet) {
	o.AvailabilitySet.Set(&v)
}
// SetAvailabilitySetNil sets the value for AvailabilitySet to be an explicit nil
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetAvailabilitySetNil() {
	o.AvailabilitySet.Set(nil)
}

// UnsetAvailabilitySet ensures that no value is present for AvailabilitySet, not even an explicit nil
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) UnsetAvailabilitySet() {
	o.AvailabilitySet.Unset()
}

// GetComputeOption returns the ComputeOption field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetComputeOption() RecoverAzureVmNewSourceConfigComputeOption {
	if o == nil || IsNil(o.ComputeOption.Get()) {
		var ret RecoverAzureVmNewSourceConfigComputeOption
		return ret
	}
	return *o.ComputeOption.Get()
}

// GetComputeOptionOk returns a tuple with the ComputeOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetComputeOptionOk() (*RecoverAzureVmNewSourceConfigComputeOption, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComputeOption.Get(), o.ComputeOption.IsSet()
}

// HasComputeOption returns a boolean if a field has been set.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) HasComputeOption() bool {
	if o != nil && o.ComputeOption.IsSet() {
		return true
	}

	return false
}

// SetComputeOption gets a reference to the given NullableRecoverAzureVmNewSourceConfigComputeOption and assigns it to the ComputeOption field.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetComputeOption(v RecoverAzureVmNewSourceConfigComputeOption) {
	o.ComputeOption.Set(&v)
}
// SetComputeOptionNil sets the value for ComputeOption to be an explicit nil
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetComputeOptionNil() {
	o.ComputeOption.Set(nil)
}

// UnsetComputeOption ensures that no value is present for ComputeOption, not even an explicit nil
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) UnsetComputeOption() {
	o.ComputeOption.Unset()
}

// GetDataTransferInfo returns the DataTransferInfo field value if set, zero value otherwise.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetDataTransferInfo() DataTransferInfo {
	if o == nil || IsNil(o.DataTransferInfo) {
		var ret DataTransferInfo
		return ret
	}
	return *o.DataTransferInfo
}

// GetDataTransferInfoOk returns a tuple with the DataTransferInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetDataTransferInfoOk() (*DataTransferInfo, bool) {
	if o == nil || IsNil(o.DataTransferInfo) {
		return nil, false
	}
	return o.DataTransferInfo, true
}

// HasDataTransferInfo returns a boolean if a field has been set.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) HasDataTransferInfo() bool {
	if o != nil && !IsNil(o.DataTransferInfo) {
		return true
	}

	return false
}

// SetDataTransferInfo gets a reference to the given DataTransferInfo and assigns it to the DataTransferInfo field.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetDataTransferInfo(v DataTransferInfo) {
	o.DataTransferInfo = &v
}

// GetNetworkConfig returns the NetworkConfig field value
// If the value is explicit nil, the zero value for RecoverAzureVmNewSourceConfigNetworkConfig will be returned
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetNetworkConfig() RecoverAzureVmNewSourceConfigNetworkConfig {
	if o == nil || o.NetworkConfig.Get() == nil {
		var ret RecoverAzureVmNewSourceConfigNetworkConfig
		return ret
	}

	return *o.NetworkConfig.Get()
}

// GetNetworkConfigOk returns a tuple with the NetworkConfig field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetNetworkConfigOk() (*RecoverAzureVmNewSourceConfigNetworkConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetworkConfig.Get(), o.NetworkConfig.IsSet()
}

// SetNetworkConfig sets field value
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetNetworkConfig(v RecoverAzureVmNewSourceConfigNetworkConfig) {
	o.NetworkConfig.Set(&v)
}

// GetRegion returns the Region field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetRegion() RecoverAzureVmNewSourceConfigRegion {
	if o == nil || IsNil(o.Region.Get()) {
		var ret RecoverAzureVmNewSourceConfigRegion
		return ret
	}
	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetRegionOk() (*RecoverAzureVmNewSourceConfigRegion, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// HasRegion returns a boolean if a field has been set.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) HasRegion() bool {
	if o != nil && o.Region.IsSet() {
		return true
	}

	return false
}

// SetRegion gets a reference to the given NullableRecoverAzureVmNewSourceConfigRegion and assigns it to the Region field.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetRegion(v RecoverAzureVmNewSourceConfigRegion) {
	o.Region.Set(&v)
}
// SetRegionNil sets the value for Region to be an explicit nil
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetRegionNil() {
	o.Region.Set(nil)
}

// UnsetRegion ensures that no value is present for Region, not even an explicit nil
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) UnsetRegion() {
	o.Region.Unset()
}

// GetResourceGroup returns the ResourceGroup field value
// If the value is explicit nil, the zero value for RecoverAzureVmNewSourceConfigResourceGroup will be returned
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetResourceGroup() RecoverAzureVmNewSourceConfigResourceGroup {
	if o == nil || o.ResourceGroup.Get() == nil {
		var ret RecoverAzureVmNewSourceConfigResourceGroup
		return ret
	}

	return *o.ResourceGroup.Get()
}

// GetResourceGroupOk returns a tuple with the ResourceGroup field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetResourceGroupOk() (*RecoverAzureVmNewSourceConfigResourceGroup, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceGroup.Get(), o.ResourceGroup.IsSet()
}

// SetResourceGroup sets field value
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetResourceGroup(v RecoverAzureVmNewSourceConfigResourceGroup) {
	o.ResourceGroup.Set(&v)
}

// GetSource returns the Source field value
// If the value is explicit nil, the zero value for RecoverAcropolisVmNewSourceConfigSource will be returned
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetSource() RecoverAcropolisVmNewSourceConfigSource {
	if o == nil || o.Source.Get() == nil {
		var ret RecoverAcropolisVmNewSourceConfigSource
		return ret
	}

	return *o.Source.Get()
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetSourceOk() (*RecoverAcropolisVmNewSourceConfigSource, bool) {
	if o == nil {
		return nil, false
	}
	return o.Source.Get(), o.Source.IsSet()
}

// SetSource sets field value
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetSource(v RecoverAcropolisVmNewSourceConfigSource) {
	o.Source.Set(&v)
}

// GetStorageAccount returns the StorageAccount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetStorageAccount() RecoverAzureVmNewSourceConfigStorageAccount {
	if o == nil || IsNil(o.StorageAccount.Get()) {
		var ret RecoverAzureVmNewSourceConfigStorageAccount
		return ret
	}
	return *o.StorageAccount.Get()
}

// GetStorageAccountOk returns a tuple with the StorageAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetStorageAccountOk() (*RecoverAzureVmNewSourceConfigStorageAccount, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageAccount.Get(), o.StorageAccount.IsSet()
}

// HasStorageAccount returns a boolean if a field has been set.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) HasStorageAccount() bool {
	if o != nil && o.StorageAccount.IsSet() {
		return true
	}

	return false
}

// SetStorageAccount gets a reference to the given NullableRecoverAzureVmNewSourceConfigStorageAccount and assigns it to the StorageAccount field.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetStorageAccount(v RecoverAzureVmNewSourceConfigStorageAccount) {
	o.StorageAccount.Set(&v)
}
// SetStorageAccountNil sets the value for StorageAccount to be an explicit nil
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetStorageAccountNil() {
	o.StorageAccount.Set(nil)
}

// UnsetStorageAccount ensures that no value is present for StorageAccount, not even an explicit nil
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) UnsetStorageAccount() {
	o.StorageAccount.Unset()
}

// GetStorageContainer returns the StorageContainer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetStorageContainer() RecoverAzureVmNewSourceConfigStorageContainer {
	if o == nil || IsNil(o.StorageContainer.Get()) {
		var ret RecoverAzureVmNewSourceConfigStorageContainer
		return ret
	}
	return *o.StorageContainer.Get()
}

// GetStorageContainerOk returns a tuple with the StorageContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetStorageContainerOk() (*RecoverAzureVmNewSourceConfigStorageContainer, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageContainer.Get(), o.StorageContainer.IsSet()
}

// HasStorageContainer returns a boolean if a field has been set.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) HasStorageContainer() bool {
	if o != nil && o.StorageContainer.IsSet() {
		return true
	}

	return false
}

// SetStorageContainer gets a reference to the given NullableRecoverAzureVmNewSourceConfigStorageContainer and assigns it to the StorageContainer field.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetStorageContainer(v RecoverAzureVmNewSourceConfigStorageContainer) {
	o.StorageContainer.Set(&v)
}
// SetStorageContainerNil sets the value for StorageContainer to be an explicit nil
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetStorageContainerNil() {
	o.StorageContainer.Set(nil)
}

// UnsetStorageContainer ensures that no value is present for StorageContainer, not even an explicit nil
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) UnsetStorageContainer() {
	o.StorageContainer.Unset()
}

// GetStorageResourceGroup returns the StorageResourceGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetStorageResourceGroup() RecoverAzureVmNewSourceConfigStorageResourceGroup {
	if o == nil || IsNil(o.StorageResourceGroup.Get()) {
		var ret RecoverAzureVmNewSourceConfigStorageResourceGroup
		return ret
	}
	return *o.StorageResourceGroup.Get()
}

// GetStorageResourceGroupOk returns a tuple with the StorageResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetStorageResourceGroupOk() (*RecoverAzureVmNewSourceConfigStorageResourceGroup, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageResourceGroup.Get(), o.StorageResourceGroup.IsSet()
}

// HasStorageResourceGroup returns a boolean if a field has been set.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) HasStorageResourceGroup() bool {
	if o != nil && o.StorageResourceGroup.IsSet() {
		return true
	}

	return false
}

// SetStorageResourceGroup gets a reference to the given NullableRecoverAzureVmNewSourceConfigStorageResourceGroup and assigns it to the StorageResourceGroup field.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetStorageResourceGroup(v RecoverAzureVmNewSourceConfigStorageResourceGroup) {
	o.StorageResourceGroup.Set(&v)
}
// SetStorageResourceGroupNil sets the value for StorageResourceGroup to be an explicit nil
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetStorageResourceGroupNil() {
	o.StorageResourceGroup.Set(nil)
}

// UnsetStorageResourceGroup ensures that no value is present for StorageResourceGroup, not even an explicit nil
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) UnsetStorageResourceGroup() {
	o.StorageResourceGroup.Unset()
}

// GetSubscription returns the Subscription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetSubscription() RecoverAzureVmNewSourceConfigSubscription {
	if o == nil || IsNil(o.Subscription.Get()) {
		var ret RecoverAzureVmNewSourceConfigSubscription
		return ret
	}
	return *o.Subscription.Get()
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) GetSubscriptionOk() (*RecoverAzureVmNewSourceConfigSubscription, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subscription.Get(), o.Subscription.IsSet()
}

// HasSubscription returns a boolean if a field has been set.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) HasSubscription() bool {
	if o != nil && o.Subscription.IsSet() {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given NullableRecoverAzureVmNewSourceConfigSubscription and assigns it to the Subscription field.
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetSubscription(v RecoverAzureVmNewSourceConfigSubscription) {
	o.Subscription.Set(&v)
}
// SetSubscriptionNil sets the value for Subscription to be an explicit nil
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) SetSubscriptionNil() {
	o.Subscription.Set(nil)
}

// UnsetSubscription ensures that no value is present for Subscription, not even an explicit nil
func (o *AzureVmRecoveryTargetConfigNewSourceConfig) UnsetSubscription() {
	o.Subscription.Unset()
}

func (o AzureVmRecoveryTargetConfigNewSourceConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureVmRecoveryTargetConfigNewSourceConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AvailabilitySet.IsSet() {
		toSerialize["availabilitySet"] = o.AvailabilitySet.Get()
	}
	if o.ComputeOption.IsSet() {
		toSerialize["computeOption"] = o.ComputeOption.Get()
	}
	if !IsNil(o.DataTransferInfo) {
		toSerialize["dataTransferInfo"] = o.DataTransferInfo
	}
	toSerialize["networkConfig"] = o.NetworkConfig.Get()
	if o.Region.IsSet() {
		toSerialize["region"] = o.Region.Get()
	}
	toSerialize["resourceGroup"] = o.ResourceGroup.Get()
	toSerialize["source"] = o.Source.Get()
	if o.StorageAccount.IsSet() {
		toSerialize["storageAccount"] = o.StorageAccount.Get()
	}
	if o.StorageContainer.IsSet() {
		toSerialize["storageContainer"] = o.StorageContainer.Get()
	}
	if o.StorageResourceGroup.IsSet() {
		toSerialize["storageResourceGroup"] = o.StorageResourceGroup.Get()
	}
	if o.Subscription.IsSet() {
		toSerialize["subscription"] = o.Subscription.Get()
	}
	return toSerialize, nil
}

func (o *AzureVmRecoveryTargetConfigNewSourceConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"networkConfig",
		"resourceGroup",
		"source",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAzureVmRecoveryTargetConfigNewSourceConfig := _AzureVmRecoveryTargetConfigNewSourceConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAzureVmRecoveryTargetConfigNewSourceConfig)

	if err != nil {
		return err
	}

	*o = AzureVmRecoveryTargetConfigNewSourceConfig(varAzureVmRecoveryTargetConfigNewSourceConfig)

	return err
}

type NullableAzureVmRecoveryTargetConfigNewSourceConfig struct {
	value *AzureVmRecoveryTargetConfigNewSourceConfig
	isSet bool
}

func (v NullableAzureVmRecoveryTargetConfigNewSourceConfig) Get() *AzureVmRecoveryTargetConfigNewSourceConfig {
	return v.value
}

func (v *NullableAzureVmRecoveryTargetConfigNewSourceConfig) Set(val *AzureVmRecoveryTargetConfigNewSourceConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureVmRecoveryTargetConfigNewSourceConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureVmRecoveryTargetConfigNewSourceConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureVmRecoveryTargetConfigNewSourceConfig(val *AzureVmRecoveryTargetConfigNewSourceConfig) *NullableAzureVmRecoveryTargetConfigNewSourceConfig {
	return &NullableAzureVmRecoveryTargetConfigNewSourceConfig{value: val, isSet: true}
}

func (v NullableAzureVmRecoveryTargetConfigNewSourceConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureVmRecoveryTargetConfigNewSourceConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


