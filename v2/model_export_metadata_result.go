/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ExportMetadataResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportMetadataResult{}

// ExportMetadataResult Response of Export Metadata.
type ExportMetadataResult struct {
	// The exporting is a time taking process. This denotes the id for this export task which will be used to poll the status of exporting metadata through QueryExportMetadataStatus. This will not be filled if there is an error.
	ExportOperationId *string `json:"exportOperationId,omitempty"`
}

// NewExportMetadataResult instantiates a new ExportMetadataResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportMetadataResult() *ExportMetadataResult {
	this := ExportMetadataResult{}
	return &this
}

// NewExportMetadataResultWithDefaults instantiates a new ExportMetadataResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportMetadataResultWithDefaults() *ExportMetadataResult {
	this := ExportMetadataResult{}
	return &this
}

// GetExportOperationId returns the ExportOperationId field value if set, zero value otherwise.
func (o *ExportMetadataResult) GetExportOperationId() string {
	if o == nil || IsNil(o.ExportOperationId) {
		var ret string
		return ret
	}
	return *o.ExportOperationId
}

// GetExportOperationIdOk returns a tuple with the ExportOperationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportMetadataResult) GetExportOperationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExportOperationId) {
		return nil, false
	}
	return o.ExportOperationId, true
}

// HasExportOperationId returns a boolean if a field has been set.
func (o *ExportMetadataResult) HasExportOperationId() bool {
	if o != nil && !IsNil(o.ExportOperationId) {
		return true
	}

	return false
}

// SetExportOperationId gets a reference to the given string and assigns it to the ExportOperationId field.
func (o *ExportMetadataResult) SetExportOperationId(v string) {
	o.ExportOperationId = &v
}

func (o ExportMetadataResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportMetadataResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExportOperationId) {
		toSerialize["exportOperationId"] = o.ExportOperationId
	}
	return toSerialize, nil
}

type NullableExportMetadataResult struct {
	value *ExportMetadataResult
	isSet bool
}

func (v NullableExportMetadataResult) Get() *ExportMetadataResult {
	return v.value
}

func (v *NullableExportMetadataResult) Set(val *ExportMetadataResult) {
	v.value = val
	v.isSet = true
}

func (v NullableExportMetadataResult) IsSet() bool {
	return v.isSet
}

func (v *NullableExportMetadataResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportMetadataResult(val *ExportMetadataResult) *NullableExportMetadataResult {
	return &NullableExportMetadataResult{value: val, isSet: true}
}

func (v NullableExportMetadataResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportMetadataResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


