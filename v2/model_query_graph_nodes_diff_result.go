/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the QueryGraphNodesDiffResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryGraphNodesDiffResult{}

// QueryGraphNodesDiffResult Query result for Diff of nodes.
type QueryGraphNodesDiffResult struct {
	// Specifies the list of diff for all the nodes matching the filter
	DiffGraphNodes []QueryGraphNodesDiffResultDiffGraphNodesInner `json:"diffGraphNodes,omitempty"`
	// Specifies the pagination cookie with which subsequent parts of the response can be fetched.
	PaginationCookie NullableString `json:"paginationCookie,omitempty"`
	// Specifies the list of all the graph node ids which are unmodified.
	UnmodifiedGraphNodes []string `json:"unmodifiedGraphNodes,omitempty"`
}

// NewQueryGraphNodesDiffResult instantiates a new QueryGraphNodesDiffResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryGraphNodesDiffResult() *QueryGraphNodesDiffResult {
	this := QueryGraphNodesDiffResult{}
	return &this
}

// NewQueryGraphNodesDiffResultWithDefaults instantiates a new QueryGraphNodesDiffResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryGraphNodesDiffResultWithDefaults() *QueryGraphNodesDiffResult {
	this := QueryGraphNodesDiffResult{}
	return &this
}

// GetDiffGraphNodes returns the DiffGraphNodes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueryGraphNodesDiffResult) GetDiffGraphNodes() []QueryGraphNodesDiffResultDiffGraphNodesInner {
	if o == nil {
		var ret []QueryGraphNodesDiffResultDiffGraphNodesInner
		return ret
	}
	return o.DiffGraphNodes
}

// GetDiffGraphNodesOk returns a tuple with the DiffGraphNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueryGraphNodesDiffResult) GetDiffGraphNodesOk() ([]QueryGraphNodesDiffResultDiffGraphNodesInner, bool) {
	if o == nil || IsNil(o.DiffGraphNodes) {
		return nil, false
	}
	return o.DiffGraphNodes, true
}

// HasDiffGraphNodes returns a boolean if a field has been set.
func (o *QueryGraphNodesDiffResult) HasDiffGraphNodes() bool {
	if o != nil && !IsNil(o.DiffGraphNodes) {
		return true
	}

	return false
}

// SetDiffGraphNodes gets a reference to the given []QueryGraphNodesDiffResultDiffGraphNodesInner and assigns it to the DiffGraphNodes field.
func (o *QueryGraphNodesDiffResult) SetDiffGraphNodes(v []QueryGraphNodesDiffResultDiffGraphNodesInner) {
	o.DiffGraphNodes = v
}

// GetPaginationCookie returns the PaginationCookie field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueryGraphNodesDiffResult) GetPaginationCookie() string {
	if o == nil || IsNil(o.PaginationCookie.Get()) {
		var ret string
		return ret
	}
	return *o.PaginationCookie.Get()
}

// GetPaginationCookieOk returns a tuple with the PaginationCookie field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueryGraphNodesDiffResult) GetPaginationCookieOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaginationCookie.Get(), o.PaginationCookie.IsSet()
}

// HasPaginationCookie returns a boolean if a field has been set.
func (o *QueryGraphNodesDiffResult) HasPaginationCookie() bool {
	if o != nil && o.PaginationCookie.IsSet() {
		return true
	}

	return false
}

// SetPaginationCookie gets a reference to the given NullableString and assigns it to the PaginationCookie field.
func (o *QueryGraphNodesDiffResult) SetPaginationCookie(v string) {
	o.PaginationCookie.Set(&v)
}
// SetPaginationCookieNil sets the value for PaginationCookie to be an explicit nil
func (o *QueryGraphNodesDiffResult) SetPaginationCookieNil() {
	o.PaginationCookie.Set(nil)
}

// UnsetPaginationCookie ensures that no value is present for PaginationCookie, not even an explicit nil
func (o *QueryGraphNodesDiffResult) UnsetPaginationCookie() {
	o.PaginationCookie.Unset()
}

// GetUnmodifiedGraphNodes returns the UnmodifiedGraphNodes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueryGraphNodesDiffResult) GetUnmodifiedGraphNodes() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.UnmodifiedGraphNodes
}

// GetUnmodifiedGraphNodesOk returns a tuple with the UnmodifiedGraphNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueryGraphNodesDiffResult) GetUnmodifiedGraphNodesOk() ([]string, bool) {
	if o == nil || IsNil(o.UnmodifiedGraphNodes) {
		return nil, false
	}
	return o.UnmodifiedGraphNodes, true
}

// HasUnmodifiedGraphNodes returns a boolean if a field has been set.
func (o *QueryGraphNodesDiffResult) HasUnmodifiedGraphNodes() bool {
	if o != nil && !IsNil(o.UnmodifiedGraphNodes) {
		return true
	}

	return false
}

// SetUnmodifiedGraphNodes gets a reference to the given []string and assigns it to the UnmodifiedGraphNodes field.
func (o *QueryGraphNodesDiffResult) SetUnmodifiedGraphNodes(v []string) {
	o.UnmodifiedGraphNodes = v
}

func (o QueryGraphNodesDiffResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryGraphNodesDiffResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DiffGraphNodes != nil {
		toSerialize["diffGraphNodes"] = o.DiffGraphNodes
	}
	if o.PaginationCookie.IsSet() {
		toSerialize["paginationCookie"] = o.PaginationCookie.Get()
	}
	if o.UnmodifiedGraphNodes != nil {
		toSerialize["unmodifiedGraphNodes"] = o.UnmodifiedGraphNodes
	}
	return toSerialize, nil
}

type NullableQueryGraphNodesDiffResult struct {
	value *QueryGraphNodesDiffResult
	isSet bool
}

func (v NullableQueryGraphNodesDiffResult) Get() *QueryGraphNodesDiffResult {
	return v.value
}

func (v *NullableQueryGraphNodesDiffResult) Set(val *QueryGraphNodesDiffResult) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryGraphNodesDiffResult) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryGraphNodesDiffResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryGraphNodesDiffResult(val *QueryGraphNodesDiffResult) *NullableQueryGraphNodesDiffResult {
	return &NullableQueryGraphNodesDiffResult{value: val, isSet: true}
}

func (v NullableQueryGraphNodesDiffResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryGraphNodesDiffResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


