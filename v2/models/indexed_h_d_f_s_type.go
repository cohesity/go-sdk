// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IndexedHDFSType HDFS object Types for search.
//
// HDFS object Types for search.
//
// swagger:model IndexedHDFSType
type IndexedHDFSType struct {

	// Specifies the HDFS object Types for search.
	// Enum: ["HDFSFolders","HDFSFiles"]
	Type string `json:"type,omitempty"`
}

// Validate validates this indexed h d f s type
func (m *IndexedHDFSType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var indexedHDFSTypeTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["HDFSFolders","HDFSFiles"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		indexedHDFSTypeTypeTypePropEnum = append(indexedHDFSTypeTypeTypePropEnum, v)
	}
}

const (

	// IndexedHDFSTypeTypeHDFSFolders captures enum value "HDFSFolders"
	IndexedHDFSTypeTypeHDFSFolders string = "HDFSFolders"

	// IndexedHDFSTypeTypeHDFSFiles captures enum value "HDFSFiles"
	IndexedHDFSTypeTypeHDFSFiles string = "HDFSFiles"
)

// prop value enum
func (m *IndexedHDFSType) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, indexedHDFSTypeTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *IndexedHDFSType) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this indexed h d f s type based on context it is used
func (m *IndexedHDFSType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IndexedHDFSType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IndexedHDFSType) UnmarshalBinary(b []byte) error {
	var res IndexedHDFSType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
