// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AzureSQLMetadataType ObjectMetadataType
//
// Specifies the metadata type for AWS postgres.
//
// swagger:model AzureSqlMetadataType
type AzureSQLMetadataType struct {

	// Specifies the types of metadatas associated to entity.
	// Enum: ["Credentials","ManagedIdentity"]
	EntityMetadataType string `json:"entityMetadataType,omitempty"`
}

// Validate validates this azure Sql metadata type
func (m *AzureSQLMetadataType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEntityMetadataType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var azureSqlMetadataTypeTypeEntityMetadataTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Credentials","ManagedIdentity"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		azureSqlMetadataTypeTypeEntityMetadataTypePropEnum = append(azureSqlMetadataTypeTypeEntityMetadataTypePropEnum, v)
	}
}

const (

	// AzureSQLMetadataTypeEntityMetadataTypeCredentials captures enum value "Credentials"
	AzureSQLMetadataTypeEntityMetadataTypeCredentials string = "Credentials"

	// AzureSQLMetadataTypeEntityMetadataTypeManagedIdentity captures enum value "ManagedIdentity"
	AzureSQLMetadataTypeEntityMetadataTypeManagedIdentity string = "ManagedIdentity"
)

// prop value enum
func (m *AzureSQLMetadataType) validateEntityMetadataTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, azureSqlMetadataTypeTypeEntityMetadataTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AzureSQLMetadataType) validateEntityMetadataType(formats strfmt.Registry) error {
	if swag.IsZero(m.EntityMetadataType) { // not required
		return nil
	}

	// value enum
	if err := m.validateEntityMetadataTypeEnum("entityMetadataType", "body", m.EntityMetadataType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this azure Sql metadata type based on context it is used
func (m *AzureSQLMetadataType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AzureSQLMetadataType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureSQLMetadataType) UnmarshalBinary(b []byte) error {
	var res AzureSQLMetadataType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
