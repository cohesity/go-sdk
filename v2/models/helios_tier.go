// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// HeliosTier Specifies the Helios Tier details.
//
// swagger:model HeliosTier
type HeliosTier struct {

	// Specifies the tier type.
	// Enum: ["kAmazonS3Standard","kAmazonS3Glacier"]
	Type *string `json:"type,omitempty"`

	// Specifies whether the current tier will be the default tier for primary retention.
	IsDefaultTier *bool `json:"isDefaultTier,omitempty"`

	// Specificies the time unit after which backup will be moved to next tier.
	// Enum: ["Days","Weeks","Months","Years"]
	Unit *string `json:"unit,omitempty"`

	// Specifies the duration after which the backup will be moved to next tier.
	MoveAfter *int64 `json:"moveAfter,omitempty"`
}

// Validate validates this helios tier
func (m *HeliosTier) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUnit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var heliosTierTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kAmazonS3Standard","kAmazonS3Glacier"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		heliosTierTypeTypePropEnum = append(heliosTierTypeTypePropEnum, v)
	}
}

const (

	// HeliosTierTypeKAmazonS3Standard captures enum value "kAmazonS3Standard"
	HeliosTierTypeKAmazonS3Standard string = "kAmazonS3Standard"

	// HeliosTierTypeKAmazonS3Glacier captures enum value "kAmazonS3Glacier"
	HeliosTierTypeKAmazonS3Glacier string = "kAmazonS3Glacier"
)

// prop value enum
func (m *HeliosTier) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, heliosTierTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *HeliosTier) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

var heliosTierTypeUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Days","Weeks","Months","Years"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		heliosTierTypeUnitPropEnum = append(heliosTierTypeUnitPropEnum, v)
	}
}

const (

	// HeliosTierUnitDays captures enum value "Days"
	HeliosTierUnitDays string = "Days"

	// HeliosTierUnitWeeks captures enum value "Weeks"
	HeliosTierUnitWeeks string = "Weeks"

	// HeliosTierUnitMonths captures enum value "Months"
	HeliosTierUnitMonths string = "Months"

	// HeliosTierUnitYears captures enum value "Years"
	HeliosTierUnitYears string = "Years"
)

// prop value enum
func (m *HeliosTier) validateUnitEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, heliosTierTypeUnitPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *HeliosTier) validateUnit(formats strfmt.Registry) error {
	if swag.IsZero(m.Unit) { // not required
		return nil
	}

	// value enum
	if err := m.validateUnitEnum("unit", "body", *m.Unit); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this helios tier based on context it is used
func (m *HeliosTier) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HeliosTier) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HeliosTier) UnmarshalBinary(b []byte) error {
	var res HeliosTier
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
