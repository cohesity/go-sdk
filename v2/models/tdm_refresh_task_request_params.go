// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TdmRefreshTaskRequestParams Specifies the parameters to refresh a clone with new data.
//
// swagger:model TdmRefreshTaskRequestParams
type TdmRefreshTaskRequestParams struct {

	// Specifies the ID of the clone, which needs to be refreshed.
	// Required: true
	CloneID *string `json:"cloneId"`

	// Specifies the snapshot ID, using which the clone is to be refreshed.
	// Required: true
	SnapshotID *string `json:"snapshotId"`

	// Specifies the description of the clone refresh task.
	Description *string `json:"description,omitempty"`
}

// Validate validates this tdm refresh task request params
func (m *TdmRefreshTaskRequestParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCloneID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSnapshotID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TdmRefreshTaskRequestParams) validateCloneID(formats strfmt.Registry) error {

	if err := validate.Required("cloneId", "body", m.CloneID); err != nil {
		return err
	}

	return nil
}

func (m *TdmRefreshTaskRequestParams) validateSnapshotID(formats strfmt.Registry) error {

	if err := validate.Required("snapshotId", "body", m.SnapshotID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this tdm refresh task request params based on context it is used
func (m *TdmRefreshTaskRequestParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TdmRefreshTaskRequestParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TdmRefreshTaskRequestParams) UnmarshalBinary(b []byte) error {
	var res TdmRefreshTaskRequestParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
