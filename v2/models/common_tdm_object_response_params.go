// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CommonTdmObjectResponseParams Specifies the common parameters for a TDM object response.
//
// swagger:model CommonTdmObjectResponseParams
type CommonTdmObjectResponseParams struct {

	// Specifies the unique ID of the object.
	// Required: true
	ID *string `json:"id"`

	// Specifies the name of the object.
	Name *string `json:"name,omitempty"`

	// Specifies the current status of the object.
	// Enum: ["scheduled","inProgress","succeeded","failed","canceled"]
	Status *string `json:"status,omitempty"`

	// Specifies the environment of the object.
	// Required: true
	// Enum: ["kSQL","kOracle"]
	Environment *string `json:"environment"`

	// Specifies the user, who created the object.
	CreatedByUser struct {
		User
	} `json:"createdByUser,omitempty"`

	// Specifies the details of the last action performed on this object.
	LastAction struct {
		TdmObjectTimelineEvent
	} `json:"lastAction,omitempty"`

	// Specifies the size (in bytes) of the object.
	SizeBytes *int64 `json:"sizeBytes,omitempty"`

	// Specifies the parent of the object.
	Parent struct {
		ObjectSummary
	} `json:"parent,omitempty"`
}

// Validate validates this common tdm object response params
func (m *CommonTdmObjectResponseParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEnvironment(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreatedByUser(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastAction(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateParent(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CommonTdmObjectResponseParams) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

var commonTdmObjectResponseParamsTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["scheduled","inProgress","succeeded","failed","canceled"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		commonTdmObjectResponseParamsTypeStatusPropEnum = append(commonTdmObjectResponseParamsTypeStatusPropEnum, v)
	}
}

const (

	// CommonTdmObjectResponseParamsStatusScheduled captures enum value "scheduled"
	CommonTdmObjectResponseParamsStatusScheduled string = "scheduled"

	// CommonTdmObjectResponseParamsStatusInProgress captures enum value "inProgress"
	CommonTdmObjectResponseParamsStatusInProgress string = "inProgress"

	// CommonTdmObjectResponseParamsStatusSucceeded captures enum value "succeeded"
	CommonTdmObjectResponseParamsStatusSucceeded string = "succeeded"

	// CommonTdmObjectResponseParamsStatusFailed captures enum value "failed"
	CommonTdmObjectResponseParamsStatusFailed string = "failed"

	// CommonTdmObjectResponseParamsStatusCanceled captures enum value "canceled"
	CommonTdmObjectResponseParamsStatusCanceled string = "canceled"
)

// prop value enum
func (m *CommonTdmObjectResponseParams) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, commonTdmObjectResponseParamsTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CommonTdmObjectResponseParams) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", *m.Status); err != nil {
		return err
	}

	return nil
}

var commonTdmObjectResponseParamsTypeEnvironmentPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kSQL","kOracle"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		commonTdmObjectResponseParamsTypeEnvironmentPropEnum = append(commonTdmObjectResponseParamsTypeEnvironmentPropEnum, v)
	}
}

const (

	// CommonTdmObjectResponseParamsEnvironmentKSQL captures enum value "kSQL"
	CommonTdmObjectResponseParamsEnvironmentKSQL string = "kSQL"

	// CommonTdmObjectResponseParamsEnvironmentKOracle captures enum value "kOracle"
	CommonTdmObjectResponseParamsEnvironmentKOracle string = "kOracle"
)

// prop value enum
func (m *CommonTdmObjectResponseParams) validateEnvironmentEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, commonTdmObjectResponseParamsTypeEnvironmentPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CommonTdmObjectResponseParams) validateEnvironment(formats strfmt.Registry) error {

	if err := validate.Required("environment", "body", m.Environment); err != nil {
		return err
	}

	// value enum
	if err := m.validateEnvironmentEnum("environment", "body", *m.Environment); err != nil {
		return err
	}

	return nil
}

func (m *CommonTdmObjectResponseParams) validateCreatedByUser(formats strfmt.Registry) error {
	if swag.IsZero(m.CreatedByUser) { // not required
		return nil
	}

	return nil
}

func (m *CommonTdmObjectResponseParams) validateLastAction(formats strfmt.Registry) error {
	if swag.IsZero(m.LastAction) { // not required
		return nil
	}

	return nil
}

func (m *CommonTdmObjectResponseParams) validateParent(formats strfmt.Registry) error {
	if swag.IsZero(m.Parent) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this common tdm object response params based on the context it is used
func (m *CommonTdmObjectResponseParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateCreatedByUser(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateLastAction(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateParent(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CommonTdmObjectResponseParams) contextValidateCreatedByUser(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

func (m *CommonTdmObjectResponseParams) contextValidateLastAction(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

func (m *CommonTdmObjectResponseParams) contextValidateParent(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *CommonTdmObjectResponseParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CommonTdmObjectResponseParams) UnmarshalBinary(b []byte) error {
	var res CommonTdmObjectResponseParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
