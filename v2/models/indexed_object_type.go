// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IndexedObjectType Indexed object type.
//
// Indexed object Type.
//
// swagger:model IndexedObjectType
type IndexedObjectType struct {

	// Specifies the indexed object type.
	// Enum: ["Emails","Files","CassandraObjects","CouchbaseObjects","HbaseObjects","HiveObjects","MongoObjects","HDFSObjects","ExchangeObjects","PublicFolders","GroupsObjects","TeamsObjects","SharepointObjects","OneDriveObjects","UdaObjects","SfdcRecords"]
	Type string `json:"type,omitempty"`
}

// Validate validates this indexed object type
func (m *IndexedObjectType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var indexedObjectTypeTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Emails","Files","CassandraObjects","CouchbaseObjects","HbaseObjects","HiveObjects","MongoObjects","HDFSObjects","ExchangeObjects","PublicFolders","GroupsObjects","TeamsObjects","SharepointObjects","OneDriveObjects","UdaObjects","SfdcRecords"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		indexedObjectTypeTypeTypePropEnum = append(indexedObjectTypeTypeTypePropEnum, v)
	}
}

const (

	// IndexedObjectTypeTypeEmails captures enum value "Emails"
	IndexedObjectTypeTypeEmails string = "Emails"

	// IndexedObjectTypeTypeFiles captures enum value "Files"
	IndexedObjectTypeTypeFiles string = "Files"

	// IndexedObjectTypeTypeCassandraObjects captures enum value "CassandraObjects"
	IndexedObjectTypeTypeCassandraObjects string = "CassandraObjects"

	// IndexedObjectTypeTypeCouchbaseObjects captures enum value "CouchbaseObjects"
	IndexedObjectTypeTypeCouchbaseObjects string = "CouchbaseObjects"

	// IndexedObjectTypeTypeHbaseObjects captures enum value "HbaseObjects"
	IndexedObjectTypeTypeHbaseObjects string = "HbaseObjects"

	// IndexedObjectTypeTypeHiveObjects captures enum value "HiveObjects"
	IndexedObjectTypeTypeHiveObjects string = "HiveObjects"

	// IndexedObjectTypeTypeMongoObjects captures enum value "MongoObjects"
	IndexedObjectTypeTypeMongoObjects string = "MongoObjects"

	// IndexedObjectTypeTypeHDFSObjects captures enum value "HDFSObjects"
	IndexedObjectTypeTypeHDFSObjects string = "HDFSObjects"

	// IndexedObjectTypeTypeExchangeObjects captures enum value "ExchangeObjects"
	IndexedObjectTypeTypeExchangeObjects string = "ExchangeObjects"

	// IndexedObjectTypeTypePublicFolders captures enum value "PublicFolders"
	IndexedObjectTypeTypePublicFolders string = "PublicFolders"

	// IndexedObjectTypeTypeGroupsObjects captures enum value "GroupsObjects"
	IndexedObjectTypeTypeGroupsObjects string = "GroupsObjects"

	// IndexedObjectTypeTypeTeamsObjects captures enum value "TeamsObjects"
	IndexedObjectTypeTypeTeamsObjects string = "TeamsObjects"

	// IndexedObjectTypeTypeSharepointObjects captures enum value "SharepointObjects"
	IndexedObjectTypeTypeSharepointObjects string = "SharepointObjects"

	// IndexedObjectTypeTypeOneDriveObjects captures enum value "OneDriveObjects"
	IndexedObjectTypeTypeOneDriveObjects string = "OneDriveObjects"

	// IndexedObjectTypeTypeUdaObjects captures enum value "UdaObjects"
	IndexedObjectTypeTypeUdaObjects string = "UdaObjects"

	// IndexedObjectTypeTypeSfdcRecords captures enum value "SfdcRecords"
	IndexedObjectTypeTypeSfdcRecords string = "SfdcRecords"
)

// prop value enum
func (m *IndexedObjectType) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, indexedObjectTypeTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *IndexedObjectType) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this indexed object type based on context it is used
func (m *IndexedObjectType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IndexedObjectType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IndexedObjectType) UnmarshalBinary(b []byte) error {
	var res IndexedObjectType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
