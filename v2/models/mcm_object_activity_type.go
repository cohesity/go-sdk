// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// McmObjectActivityType Object activity type.
//
// Object activity type.
//
// swagger:model McmObjectActivityType
type McmObjectActivityType struct {

	// Specifies type of the object activity.
	// Enum: ["BackupRun","Restore","ArchivalRun"]
	Type string `json:"type,omitempty"`
}

// Validate validates this mcm object activity type
func (m *McmObjectActivityType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var mcmObjectActivityTypeTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["BackupRun","Restore","ArchivalRun"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mcmObjectActivityTypeTypeTypePropEnum = append(mcmObjectActivityTypeTypeTypePropEnum, v)
	}
}

const (

	// McmObjectActivityTypeTypeBackupRun captures enum value "BackupRun"
	McmObjectActivityTypeTypeBackupRun string = "BackupRun"

	// McmObjectActivityTypeTypeRestore captures enum value "Restore"
	McmObjectActivityTypeTypeRestore string = "Restore"

	// McmObjectActivityTypeTypeArchivalRun captures enum value "ArchivalRun"
	McmObjectActivityTypeTypeArchivalRun string = "ArchivalRun"
)

// prop value enum
func (m *McmObjectActivityType) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, mcmObjectActivityTypeTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *McmObjectActivityType) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this mcm object activity type based on context it is used
func (m *McmObjectActivityType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *McmObjectActivityType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *McmObjectActivityType) UnmarshalBinary(b []byte) error {
	var res McmObjectActivityType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
