// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VmwareDiskProvisionType Vmware Disk provisioning policies.
//
// Specifies the Virtual Disk Provisioning Policies for Vmware VM.
//
// swagger:model VmwareDiskProvisionType
type VmwareDiskProvisionType struct {

	// Specifies the Virtual Disk Provisioning Policies for Vmware VM.
	// Enum: ["kThickLazyZeroed","kThickEagerZero","kThin","kBackedUpDiskType","originalBackUpDisk"]
	Value string `json:"value,omitempty"`
}

// Validate validates this vmware disk provision type
func (m *VmwareDiskProvisionType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var vmwareDiskProvisionTypeTypeValuePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kThickLazyZeroed","kThickEagerZero","kThin","kBackedUpDiskType","originalBackUpDisk"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		vmwareDiskProvisionTypeTypeValuePropEnum = append(vmwareDiskProvisionTypeTypeValuePropEnum, v)
	}
}

const (

	// VmwareDiskProvisionTypeValueKThickLazyZeroed captures enum value "kThickLazyZeroed"
	VmwareDiskProvisionTypeValueKThickLazyZeroed string = "kThickLazyZeroed"

	// VmwareDiskProvisionTypeValueKThickEagerZero captures enum value "kThickEagerZero"
	VmwareDiskProvisionTypeValueKThickEagerZero string = "kThickEagerZero"

	// VmwareDiskProvisionTypeValueKThin captures enum value "kThin"
	VmwareDiskProvisionTypeValueKThin string = "kThin"

	// VmwareDiskProvisionTypeValueKBackedUpDiskType captures enum value "kBackedUpDiskType"
	VmwareDiskProvisionTypeValueKBackedUpDiskType string = "kBackedUpDiskType"

	// VmwareDiskProvisionTypeValueOriginalBackUpDisk captures enum value "originalBackUpDisk"
	VmwareDiskProvisionTypeValueOriginalBackUpDisk string = "originalBackUpDisk"
)

// prop value enum
func (m *VmwareDiskProvisionType) validateValueEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, vmwareDiskProvisionTypeTypeValuePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *VmwareDiskProvisionType) validateValue(formats strfmt.Registry) error {
	if swag.IsZero(m.Value) { // not required
		return nil
	}

	// value enum
	if err := m.validateValueEnum("value", "body", m.Value); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this vmware disk provision type based on context it is used
func (m *VmwareDiskProvisionType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VmwareDiskProvisionType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VmwareDiskProvisionType) UnmarshalBinary(b []byte) error {
	var res VmwareDiskProvisionType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
