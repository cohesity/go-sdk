// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TdmSnapshot Specifies the response params for a TDM snapshot.
//
// swagger:model TdmSnapshot
type TdmSnapshot struct {
	CommonTdmCloneSnapshotParams

	// Specifies the ID of the snapshot.
	// Required: true
	ID *string `json:"id"`

	// Specifies whether the snapshot was taken automatically by the scheduler.
	IsAutomated *bool `json:"isAutomated,omitempty"`

	// Specifies the time (in usecs from epoch) when the snapshot was created.
	CreatedAt *int64 `json:"createdAt,omitempty"`

	// Specifies the time (in usecs from epoch) when the snapshot was last updated.
	UpdatedAt *int64 `json:"updatedAt,omitempty"`

	// Specifies the details of the user, who created the snapshot. This will be null for snapshots, that are taken by system, such as a scheduler.
	CreatedByUser struct {
		User
	} `json:"createdByUser,omitempty"`

	// Specifies the details of the user, who last updated the snapshot.
	UpdatedByUser struct {
		User
	} `json:"updatedByUser,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *TdmSnapshot) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 CommonTdmCloneSnapshotParams
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.CommonTdmCloneSnapshotParams = aO0

	// AO1
	var dataAO1 struct {
		ID *string `json:"id"`

		IsAutomated *bool `json:"isAutomated,omitempty"`

		CreatedAt *int64 `json:"createdAt,omitempty"`

		UpdatedAt *int64 `json:"updatedAt,omitempty"`

		CreatedByUser struct {
			User
		} `json:"createdByUser,omitempty"`

		UpdatedByUser struct {
			User
		} `json:"updatedByUser,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.ID = dataAO1.ID

	m.IsAutomated = dataAO1.IsAutomated

	m.CreatedAt = dataAO1.CreatedAt

	m.UpdatedAt = dataAO1.UpdatedAt

	m.CreatedByUser = dataAO1.CreatedByUser

	m.UpdatedByUser = dataAO1.UpdatedByUser

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m TdmSnapshot) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.CommonTdmCloneSnapshotParams)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)
	var dataAO1 struct {
		ID *string `json:"id"`

		IsAutomated *bool `json:"isAutomated,omitempty"`

		CreatedAt *int64 `json:"createdAt,omitempty"`

		UpdatedAt *int64 `json:"updatedAt,omitempty"`

		CreatedByUser struct {
			User
		} `json:"createdByUser,omitempty"`

		UpdatedByUser struct {
			User
		} `json:"updatedByUser,omitempty"`
	}

	dataAO1.ID = m.ID

	dataAO1.IsAutomated = m.IsAutomated

	dataAO1.CreatedAt = m.CreatedAt

	dataAO1.UpdatedAt = m.UpdatedAt

	dataAO1.CreatedByUser = m.CreatedByUser

	dataAO1.UpdatedByUser = m.UpdatedByUser

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this tdm snapshot
func (m *TdmSnapshot) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with CommonTdmCloneSnapshotParams
	if err := m.CommonTdmCloneSnapshotParams.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreatedByUser(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdatedByUser(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TdmSnapshot) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *TdmSnapshot) validateCreatedByUser(formats strfmt.Registry) error {

	if swag.IsZero(m.CreatedByUser) { // not required
		return nil
	}

	return nil
}

func (m *TdmSnapshot) validateUpdatedByUser(formats strfmt.Registry) error {

	if swag.IsZero(m.UpdatedByUser) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this tdm snapshot based on the context it is used
func (m *TdmSnapshot) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with CommonTdmCloneSnapshotParams
	if err := m.CommonTdmCloneSnapshotParams.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateCreatedByUser(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateUpdatedByUser(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TdmSnapshot) contextValidateCreatedByUser(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

func (m *TdmSnapshot) contextValidateUpdatedByUser(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *TdmSnapshot) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TdmSnapshot) UnmarshalBinary(b []byte) error {
	var res TdmSnapshot
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
