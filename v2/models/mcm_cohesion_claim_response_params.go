// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// McmCohesionClaimResponseParams Response of claiming a Cohesion appliance to Helios.
//
// Specifies the response of claiming a Cohesion Appliance to Helios.
//
// swagger:model McmCohesionClaimResponseParams
type McmCohesionClaimResponseParams struct {

	// Unique id of the cohesion appliance with AWS
	ApplianceID *string `json:"applianceId,omitempty"`

	// Specifies the name of the cohesion appliance.
	ApplianceName *string `json:"applianceName,omitempty"`

	// Specifies the cluster id of the appliance.
	ClusterID *int64 `json:"clusterId,omitempty"`

	// Specifies the cluster incarnation id of the appliance.
	ClusterIncarnationID *int64 `json:"clusterIncarnationId,omitempty"`

	// Specifies the Cohesion Appliance certificate.
	Certificate *string `json:"certificate,omitempty"`

	// Specifies the Cohesion Appliance private key.
	PrivateKey *string `json:"privateKey,omitempty"`

	// Specifies the passphrase (if used) to encrypt the Cohesion Appliance private key.
	Passphrase *string `json:"passphrase,omitempty"`

	// Specifies the CA chain that is used to sign the Cohesion Appliance certificate.
	CaChain *string `json:"caChain,omitempty"`

	// Specifies the Helios certificate that can be used to authenticate api calls made from Helios to Cohesion Appliance
	HeliosCertificate *string `json:"heliosCertificate,omitempty"`
}

// Validate validates this mcm cohesion claim response params
func (m *McmCohesionClaimResponseParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this mcm cohesion claim response params based on context it is used
func (m *McmCohesionClaimResponseParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *McmCohesionClaimResponseParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *McmCohesionClaimResponseParams) UnmarshalBinary(b []byte) error {
	var res McmCohesionClaimResponseParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
