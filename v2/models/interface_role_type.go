// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InterfaceRoleType Interface Role Type
//
// Role of a network interface.
//
// swagger:model InterfaceRoleType
type InterfaceRoleType struct {

	// Specifies the network interface role.
	// Enum: ["Primary","Secondary","Undefined"]
	InterfaceRoleType string `json:"interfaceRoleType,omitempty"`
}

// Validate validates this interface role type
func (m *InterfaceRoleType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInterfaceRoleType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var interfaceRoleTypeTypeInterfaceRoleTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Primary","Secondary","Undefined"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		interfaceRoleTypeTypeInterfaceRoleTypePropEnum = append(interfaceRoleTypeTypeInterfaceRoleTypePropEnum, v)
	}
}

const (

	// InterfaceRoleTypeInterfaceRoleTypePrimary captures enum value "Primary"
	InterfaceRoleTypeInterfaceRoleTypePrimary string = "Primary"

	// InterfaceRoleTypeInterfaceRoleTypeSecondary captures enum value "Secondary"
	InterfaceRoleTypeInterfaceRoleTypeSecondary string = "Secondary"

	// InterfaceRoleTypeInterfaceRoleTypeUndefined captures enum value "Undefined"
	InterfaceRoleTypeInterfaceRoleTypeUndefined string = "Undefined"
)

// prop value enum
func (m *InterfaceRoleType) validateInterfaceRoleTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, interfaceRoleTypeTypeInterfaceRoleTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *InterfaceRoleType) validateInterfaceRoleType(formats strfmt.Registry) error {
	if swag.IsZero(m.InterfaceRoleType) { // not required
		return nil
	}

	// value enum
	if err := m.validateInterfaceRoleTypeEnum("interfaceRoleType", "body", m.InterfaceRoleType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this interface role type based on context it is used
func (m *InterfaceRoleType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *InterfaceRoleType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InterfaceRoleType) UnmarshalBinary(b []byte) error {
	var res InterfaceRoleType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
