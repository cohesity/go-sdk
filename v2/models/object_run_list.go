// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ObjectRunList The response object containing the object summary, a run start time and an error message (if any) pertaining to the edit op of the run
//
// swagger:model ObjectRunList
type ObjectRunList struct {

	// Specifies the id of the object.
	// Required: true
	ObjectID *int64 `json:"objectId"`

	// Specifies the start time of the run that was updated.
	// Required: true
	RunStartTimeUsecs *int64 `json:"runStartTimeUsecs"`

	// Specifies an error (if any) corresponding to this objectId and run.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this object run list
func (m *ObjectRunList) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateObjectID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRunStartTimeUsecs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ObjectRunList) validateObjectID(formats strfmt.Registry) error {

	if err := validate.Required("objectId", "body", m.ObjectID); err != nil {
		return err
	}

	return nil
}

func (m *ObjectRunList) validateRunStartTimeUsecs(formats strfmt.Registry) error {

	if err := validate.Required("runStartTimeUsecs", "body", m.RunStartTimeUsecs); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this object run list based on context it is used
func (m *ObjectRunList) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ObjectRunList) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ObjectRunList) UnmarshalBinary(b []byte) error {
	var res ObjectRunList
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
