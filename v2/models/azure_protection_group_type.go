// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AzureProtectionGroupType Azure Protection Group type.
//
// Azure Protection Group type.
//
// swagger:model AzureProtectionGroupType
type AzureProtectionGroupType struct {

	// Specifies Azure Protection Group type.
	// Enum: ["kAgent","kNative","kSnapshotManager","kAzureSQL"]
	Environment string `json:"environment,omitempty"`
}

// Validate validates this azure protection group type
func (m *AzureProtectionGroupType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnvironment(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var azureProtectionGroupTypeTypeEnvironmentPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kAgent","kNative","kSnapshotManager","kAzureSQL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		azureProtectionGroupTypeTypeEnvironmentPropEnum = append(azureProtectionGroupTypeTypeEnvironmentPropEnum, v)
	}
}

const (

	// AzureProtectionGroupTypeEnvironmentKAgent captures enum value "kAgent"
	AzureProtectionGroupTypeEnvironmentKAgent string = "kAgent"

	// AzureProtectionGroupTypeEnvironmentKNative captures enum value "kNative"
	AzureProtectionGroupTypeEnvironmentKNative string = "kNative"

	// AzureProtectionGroupTypeEnvironmentKSnapshotManager captures enum value "kSnapshotManager"
	AzureProtectionGroupTypeEnvironmentKSnapshotManager string = "kSnapshotManager"

	// AzureProtectionGroupTypeEnvironmentKAzureSQL captures enum value "kAzureSQL"
	AzureProtectionGroupTypeEnvironmentKAzureSQL string = "kAzureSQL"
)

// prop value enum
func (m *AzureProtectionGroupType) validateEnvironmentEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, azureProtectionGroupTypeTypeEnvironmentPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AzureProtectionGroupType) validateEnvironment(formats strfmt.Registry) error {
	if swag.IsZero(m.Environment) { // not required
		return nil
	}

	// value enum
	if err := m.validateEnvironmentEnum("environment", "body", m.Environment); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this azure protection group type based on context it is used
func (m *AzureProtectionGroupType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AzureProtectionGroupType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureProtectionGroupType) UnmarshalBinary(b []byte) error {
	var res AzureProtectionGroupType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
