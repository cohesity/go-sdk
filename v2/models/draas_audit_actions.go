// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DraasAuditActions Draas Audit Actions
//
// # Draas Audit Actions
//
// swagger:model DraasAuditActions
type DraasAuditActions struct {

	// Draas Audit Actions
	// Enum: ["Login","Logout","Create","Activate","Modify","Delete","Fetch","PrepareFailover","TestFailover","Failover","PrepareFailback","TestFailback","Failback","Teardown","RetryReplication","RetryExecution","Cancel","Resume","ForceFinish"]
	Actions string `json:"actions,omitempty"`
}

// Validate validates this draas audit actions
func (m *DraasAuditActions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var draasAuditActionsTypeActionsPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Login","Logout","Create","Activate","Modify","Delete","Fetch","PrepareFailover","TestFailover","Failover","PrepareFailback","TestFailback","Failback","Teardown","RetryReplication","RetryExecution","Cancel","Resume","ForceFinish"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		draasAuditActionsTypeActionsPropEnum = append(draasAuditActionsTypeActionsPropEnum, v)
	}
}

const (

	// DraasAuditActionsActionsLogin captures enum value "Login"
	DraasAuditActionsActionsLogin string = "Login"

	// DraasAuditActionsActionsLogout captures enum value "Logout"
	DraasAuditActionsActionsLogout string = "Logout"

	// DraasAuditActionsActionsCreate captures enum value "Create"
	DraasAuditActionsActionsCreate string = "Create"

	// DraasAuditActionsActionsActivate captures enum value "Activate"
	DraasAuditActionsActionsActivate string = "Activate"

	// DraasAuditActionsActionsModify captures enum value "Modify"
	DraasAuditActionsActionsModify string = "Modify"

	// DraasAuditActionsActionsDelete captures enum value "Delete"
	DraasAuditActionsActionsDelete string = "Delete"

	// DraasAuditActionsActionsFetch captures enum value "Fetch"
	DraasAuditActionsActionsFetch string = "Fetch"

	// DraasAuditActionsActionsPrepareFailover captures enum value "PrepareFailover"
	DraasAuditActionsActionsPrepareFailover string = "PrepareFailover"

	// DraasAuditActionsActionsTestFailover captures enum value "TestFailover"
	DraasAuditActionsActionsTestFailover string = "TestFailover"

	// DraasAuditActionsActionsFailover captures enum value "Failover"
	DraasAuditActionsActionsFailover string = "Failover"

	// DraasAuditActionsActionsPrepareFailback captures enum value "PrepareFailback"
	DraasAuditActionsActionsPrepareFailback string = "PrepareFailback"

	// DraasAuditActionsActionsTestFailback captures enum value "TestFailback"
	DraasAuditActionsActionsTestFailback string = "TestFailback"

	// DraasAuditActionsActionsFailback captures enum value "Failback"
	DraasAuditActionsActionsFailback string = "Failback"

	// DraasAuditActionsActionsTeardown captures enum value "Teardown"
	DraasAuditActionsActionsTeardown string = "Teardown"

	// DraasAuditActionsActionsRetryReplication captures enum value "RetryReplication"
	DraasAuditActionsActionsRetryReplication string = "RetryReplication"

	// DraasAuditActionsActionsRetryExecution captures enum value "RetryExecution"
	DraasAuditActionsActionsRetryExecution string = "RetryExecution"

	// DraasAuditActionsActionsCancel captures enum value "Cancel"
	DraasAuditActionsActionsCancel string = "Cancel"

	// DraasAuditActionsActionsResume captures enum value "Resume"
	DraasAuditActionsActionsResume string = "Resume"

	// DraasAuditActionsActionsForceFinish captures enum value "ForceFinish"
	DraasAuditActionsActionsForceFinish string = "ForceFinish"
)

// prop value enum
func (m *DraasAuditActions) validateActionsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, draasAuditActionsTypeActionsPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DraasAuditActions) validateActions(formats strfmt.Registry) error {
	if swag.IsZero(m.Actions) { // not required
		return nil
	}

	// value enum
	if err := m.validateActionsEnum("actions", "body", m.Actions); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this draas audit actions based on context it is used
func (m *DraasAuditActions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DraasAuditActions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DraasAuditActions) UnmarshalBinary(b []byte) error {
	var res DraasAuditActions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
