// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NicSpeedType NIC Speed Type
//
// Speed of a network interface.
//
// swagger:model NicSpeedType
type NicSpeedType struct {

	// Specifies the network interface speed.
	// Enum: ["1Gbit/s","10Gbit/s","25Gbit/s","40Gbit/s","100Gbit/s","Unknown"]
	NicSpeedType string `json:"nicSpeedType,omitempty"`
}

// Validate validates this nic speed type
func (m *NicSpeedType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNicSpeedType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var nicSpeedTypeTypeNicSpeedTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["1Gbit/s","10Gbit/s","25Gbit/s","40Gbit/s","100Gbit/s","Unknown"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nicSpeedTypeTypeNicSpeedTypePropEnum = append(nicSpeedTypeTypeNicSpeedTypePropEnum, v)
	}
}

const (

	// NicSpeedTypeNicSpeedTypeNr1Gbits captures enum value "1Gbit/s"
	NicSpeedTypeNicSpeedTypeNr1Gbits string = "1Gbit/s"

	// NicSpeedTypeNicSpeedTypeNr10Gbits captures enum value "10Gbit/s"
	NicSpeedTypeNicSpeedTypeNr10Gbits string = "10Gbit/s"

	// NicSpeedTypeNicSpeedTypeNr25Gbits captures enum value "25Gbit/s"
	NicSpeedTypeNicSpeedTypeNr25Gbits string = "25Gbit/s"

	// NicSpeedTypeNicSpeedTypeNr40Gbits captures enum value "40Gbit/s"
	NicSpeedTypeNicSpeedTypeNr40Gbits string = "40Gbit/s"

	// NicSpeedTypeNicSpeedTypeNr100Gbits captures enum value "100Gbit/s"
	NicSpeedTypeNicSpeedTypeNr100Gbits string = "100Gbit/s"

	// NicSpeedTypeNicSpeedTypeUnknown captures enum value "Unknown"
	NicSpeedTypeNicSpeedTypeUnknown string = "Unknown"
)

// prop value enum
func (m *NicSpeedType) validateNicSpeedTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, nicSpeedTypeTypeNicSpeedTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *NicSpeedType) validateNicSpeedType(formats strfmt.Registry) error {
	if swag.IsZero(m.NicSpeedType) { // not required
		return nil
	}

	// value enum
	if err := m.validateNicSpeedTypeEnum("nicSpeedType", "body", m.NicSpeedType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this nic speed type based on context it is used
func (m *NicSpeedType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NicSpeedType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NicSpeedType) UnmarshalBinary(b []byte) error {
	var res NicSpeedType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
