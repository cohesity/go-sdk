// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CommonTdmRefreshTaskResponseParams Specifies the common response params for a TDM refresh task.
//
// swagger:model CommonTdmRefreshTaskResponseParams
type CommonTdmRefreshTaskResponseParams struct {

	// Specifies the environment of the TDM refresh task.
	// Required: true
	// Enum: ["kOracle"]
	Environment *string `json:"environment"`

	// Specifies the details of the parent object of the clone.
	Parent struct {
		ObjectSummary
	} `json:"parent,omitempty"`

	// Specifies the details of the target, where the clone is created.
	Target struct {
		ObjectSummary
	} `json:"target,omitempty"`

	// Specifies the details of the snapshot used for refresh.
	Snapshot struct {
		ObjectSnapshot
	} `json:"snapshot,omitempty"`

	// Specifies the details of the view, which is used for the clone.
	View struct {
		ViewParams
	} `json:"view,omitempty"`
}

// Validate validates this common tdm refresh task response params
func (m *CommonTdmRefreshTaskResponseParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnvironment(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateParent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTarget(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSnapshot(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateView(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var commonTdmRefreshTaskResponseParamsTypeEnvironmentPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kOracle"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		commonTdmRefreshTaskResponseParamsTypeEnvironmentPropEnum = append(commonTdmRefreshTaskResponseParamsTypeEnvironmentPropEnum, v)
	}
}

const (

	// CommonTdmRefreshTaskResponseParamsEnvironmentKOracle captures enum value "kOracle"
	CommonTdmRefreshTaskResponseParamsEnvironmentKOracle string = "kOracle"
)

// prop value enum
func (m *CommonTdmRefreshTaskResponseParams) validateEnvironmentEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, commonTdmRefreshTaskResponseParamsTypeEnvironmentPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CommonTdmRefreshTaskResponseParams) validateEnvironment(formats strfmt.Registry) error {

	if err := validate.Required("environment", "body", m.Environment); err != nil {
		return err
	}

	// value enum
	if err := m.validateEnvironmentEnum("environment", "body", *m.Environment); err != nil {
		return err
	}

	return nil
}

func (m *CommonTdmRefreshTaskResponseParams) validateParent(formats strfmt.Registry) error {
	if swag.IsZero(m.Parent) { // not required
		return nil
	}

	return nil
}

func (m *CommonTdmRefreshTaskResponseParams) validateTarget(formats strfmt.Registry) error {
	if swag.IsZero(m.Target) { // not required
		return nil
	}

	return nil
}

func (m *CommonTdmRefreshTaskResponseParams) validateSnapshot(formats strfmt.Registry) error {
	if swag.IsZero(m.Snapshot) { // not required
		return nil
	}

	return nil
}

func (m *CommonTdmRefreshTaskResponseParams) validateView(formats strfmt.Registry) error {
	if swag.IsZero(m.View) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this common tdm refresh task response params based on the context it is used
func (m *CommonTdmRefreshTaskResponseParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateParent(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateTarget(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateSnapshot(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateView(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CommonTdmRefreshTaskResponseParams) contextValidateParent(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

func (m *CommonTdmRefreshTaskResponseParams) contextValidateTarget(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

func (m *CommonTdmRefreshTaskResponseParams) contextValidateSnapshot(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

func (m *CommonTdmRefreshTaskResponseParams) contextValidateView(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *CommonTdmRefreshTaskResponseParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CommonTdmRefreshTaskResponseParams) UnmarshalBinary(b []byte) error {
	var res CommonTdmRefreshTaskResponseParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
