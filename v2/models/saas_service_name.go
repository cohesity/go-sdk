// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SaasServiceName SaaS Service Name.
//
// saas service name.
//
// swagger:model SaasServiceName
type SaasServiceName struct {

	// Specifies SaaS service name.
	// Enum: ["DataProtect","SiteContinuity","DataHawk","Ransomware","FortKnoxCold","DataInsights"]
	Service string `json:"service,omitempty"`
}

// Validate validates this saas service name
func (m *SaasServiceName) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateService(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var saasServiceNameTypeServicePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DataProtect","SiteContinuity","DataHawk","Ransomware","FortKnoxCold","DataInsights"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		saasServiceNameTypeServicePropEnum = append(saasServiceNameTypeServicePropEnum, v)
	}
}

const (

	// SaasServiceNameServiceDataProtect captures enum value "DataProtect"
	SaasServiceNameServiceDataProtect string = "DataProtect"

	// SaasServiceNameServiceSiteContinuity captures enum value "SiteContinuity"
	SaasServiceNameServiceSiteContinuity string = "SiteContinuity"

	// SaasServiceNameServiceDataHawk captures enum value "DataHawk"
	SaasServiceNameServiceDataHawk string = "DataHawk"

	// SaasServiceNameServiceRansomware captures enum value "Ransomware"
	SaasServiceNameServiceRansomware string = "Ransomware"

	// SaasServiceNameServiceFortKnoxCold captures enum value "FortKnoxCold"
	SaasServiceNameServiceFortKnoxCold string = "FortKnoxCold"

	// SaasServiceNameServiceDataInsights captures enum value "DataInsights"
	SaasServiceNameServiceDataInsights string = "DataInsights"
)

// prop value enum
func (m *SaasServiceName) validateServiceEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, saasServiceNameTypeServicePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *SaasServiceName) validateService(formats strfmt.Registry) error {
	if swag.IsZero(m.Service) { // not required
		return nil
	}

	// value enum
	if err := m.validateServiceEnum("service", "body", m.Service); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this saas service name based on context it is used
func (m *SaasServiceName) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SaasServiceName) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SaasServiceName) UnmarshalBinary(b []byte) error {
	var res SaasServiceName
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
