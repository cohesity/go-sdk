// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CommonTdmObjectTimelineEventsResponseParams Specifies the common parameters for the TDM object timeline events response.
//
// swagger:model CommonTdmObjectTimelineEventsResponseParams
type CommonTdmObjectTimelineEventsResponseParams struct {

	// Specifies the unique ID of the event.
	// Required: true
	ID *string `json:"id"`

	// Specifies the time (in usecs from epoch) at which the event was created.
	CreatedAt *int64 `json:"createdAt,omitempty"`

	// Specifies the user, who triggered the event.
	CreatedByUser struct {
		User
	} `json:"createdByUser,omitempty"`

	// Specifies the current status of the event.
	// Enum: ["scheduled","inProgress","succeeded","failed","canceled"]
	Status *string `json:"status,omitempty"`

	// Specifies the error message if the event is in failed state.
	ErrorMessage *string `json:"errorMessage,omitempty"`

	// Specifies the description of the event, as provided by the user.
	Description *string `json:"description,omitempty"`

	// Specifies the ID of the group this event belongs to. Events with same group ID are considered to be a single timeline for the TDM object. Different group IDs mean different timelines for the TDM object.
	EventGroupID *string `json:"eventGroupId,omitempty"`

	// Specifies the action for the event.
	// Required: true
	// Enum: ["clone","teardown","refresh","snapshot","rewind"]
	Action *string `json:"action"`
}

// Validate validates this common tdm object timeline events response params
func (m *CommonTdmObjectTimelineEventsResponseParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreatedByUser(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAction(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CommonTdmObjectTimelineEventsResponseParams) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *CommonTdmObjectTimelineEventsResponseParams) validateCreatedByUser(formats strfmt.Registry) error {
	if swag.IsZero(m.CreatedByUser) { // not required
		return nil
	}

	return nil
}

var commonTdmObjectTimelineEventsResponseParamsTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["scheduled","inProgress","succeeded","failed","canceled"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		commonTdmObjectTimelineEventsResponseParamsTypeStatusPropEnum = append(commonTdmObjectTimelineEventsResponseParamsTypeStatusPropEnum, v)
	}
}

const (

	// CommonTdmObjectTimelineEventsResponseParamsStatusScheduled captures enum value "scheduled"
	CommonTdmObjectTimelineEventsResponseParamsStatusScheduled string = "scheduled"

	// CommonTdmObjectTimelineEventsResponseParamsStatusInProgress captures enum value "inProgress"
	CommonTdmObjectTimelineEventsResponseParamsStatusInProgress string = "inProgress"

	// CommonTdmObjectTimelineEventsResponseParamsStatusSucceeded captures enum value "succeeded"
	CommonTdmObjectTimelineEventsResponseParamsStatusSucceeded string = "succeeded"

	// CommonTdmObjectTimelineEventsResponseParamsStatusFailed captures enum value "failed"
	CommonTdmObjectTimelineEventsResponseParamsStatusFailed string = "failed"

	// CommonTdmObjectTimelineEventsResponseParamsStatusCanceled captures enum value "canceled"
	CommonTdmObjectTimelineEventsResponseParamsStatusCanceled string = "canceled"
)

// prop value enum
func (m *CommonTdmObjectTimelineEventsResponseParams) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, commonTdmObjectTimelineEventsResponseParamsTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CommonTdmObjectTimelineEventsResponseParams) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", *m.Status); err != nil {
		return err
	}

	return nil
}

var commonTdmObjectTimelineEventsResponseParamsTypeActionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["clone","teardown","refresh","snapshot","rewind"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		commonTdmObjectTimelineEventsResponseParamsTypeActionPropEnum = append(commonTdmObjectTimelineEventsResponseParamsTypeActionPropEnum, v)
	}
}

const (

	// CommonTdmObjectTimelineEventsResponseParamsActionClone captures enum value "clone"
	CommonTdmObjectTimelineEventsResponseParamsActionClone string = "clone"

	// CommonTdmObjectTimelineEventsResponseParamsActionTeardown captures enum value "teardown"
	CommonTdmObjectTimelineEventsResponseParamsActionTeardown string = "teardown"

	// CommonTdmObjectTimelineEventsResponseParamsActionRefresh captures enum value "refresh"
	CommonTdmObjectTimelineEventsResponseParamsActionRefresh string = "refresh"

	// CommonTdmObjectTimelineEventsResponseParamsActionSnapshot captures enum value "snapshot"
	CommonTdmObjectTimelineEventsResponseParamsActionSnapshot string = "snapshot"

	// CommonTdmObjectTimelineEventsResponseParamsActionRewind captures enum value "rewind"
	CommonTdmObjectTimelineEventsResponseParamsActionRewind string = "rewind"
)

// prop value enum
func (m *CommonTdmObjectTimelineEventsResponseParams) validateActionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, commonTdmObjectTimelineEventsResponseParamsTypeActionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CommonTdmObjectTimelineEventsResponseParams) validateAction(formats strfmt.Registry) error {

	if err := validate.Required("action", "body", m.Action); err != nil {
		return err
	}

	// value enum
	if err := m.validateActionEnum("action", "body", *m.Action); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this common tdm object timeline events response params based on the context it is used
func (m *CommonTdmObjectTimelineEventsResponseParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateCreatedByUser(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CommonTdmObjectTimelineEventsResponseParams) contextValidateCreatedByUser(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *CommonTdmObjectTimelineEventsResponseParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CommonTdmObjectTimelineEventsResponseParams) UnmarshalBinary(b []byte) error {
	var res CommonTdmObjectTimelineEventsResponseParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
