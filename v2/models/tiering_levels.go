// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TieringLevels Tiering Levels.
//
// # Tiering Levels
//
// swagger:model TieringLevels
type TieringLevels struct {

	// Tiering Levels
	// Enum: ["kAmazonS3Standard","kAmazonS3StandardIA","kAmazonS3OneZoneIA","kAmazonS3IntelligentTiering","kAmazonS3Glacier","kAmazonS3GlacierDeepArchive","kAzureTierHot","kAzureTierCool","kAzureTierArchive","kGoogleStandard","kGoogleRegional","kGoogleMultiRegional","kGoogleNearline","kGoogleColdline","kOracleTierStandard","kOracleTierArchive"]
	Type string `json:"type,omitempty"`
}

// Validate validates this tiering levels
func (m *TieringLevels) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var tieringLevelsTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kAmazonS3Standard","kAmazonS3StandardIA","kAmazonS3OneZoneIA","kAmazonS3IntelligentTiering","kAmazonS3Glacier","kAmazonS3GlacierDeepArchive","kAzureTierHot","kAzureTierCool","kAzureTierArchive","kGoogleStandard","kGoogleRegional","kGoogleMultiRegional","kGoogleNearline","kGoogleColdline","kOracleTierStandard","kOracleTierArchive"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tieringLevelsTypeTypePropEnum = append(tieringLevelsTypeTypePropEnum, v)
	}
}

const (

	// TieringLevelsTypeKAmazonS3Standard captures enum value "kAmazonS3Standard"
	TieringLevelsTypeKAmazonS3Standard string = "kAmazonS3Standard"

	// TieringLevelsTypeKAmazonS3StandardIA captures enum value "kAmazonS3StandardIA"
	TieringLevelsTypeKAmazonS3StandardIA string = "kAmazonS3StandardIA"

	// TieringLevelsTypeKAmazonS3OneZoneIA captures enum value "kAmazonS3OneZoneIA"
	TieringLevelsTypeKAmazonS3OneZoneIA string = "kAmazonS3OneZoneIA"

	// TieringLevelsTypeKAmazonS3IntelligentTiering captures enum value "kAmazonS3IntelligentTiering"
	TieringLevelsTypeKAmazonS3IntelligentTiering string = "kAmazonS3IntelligentTiering"

	// TieringLevelsTypeKAmazonS3Glacier captures enum value "kAmazonS3Glacier"
	TieringLevelsTypeKAmazonS3Glacier string = "kAmazonS3Glacier"

	// TieringLevelsTypeKAmazonS3GlacierDeepArchive captures enum value "kAmazonS3GlacierDeepArchive"
	TieringLevelsTypeKAmazonS3GlacierDeepArchive string = "kAmazonS3GlacierDeepArchive"

	// TieringLevelsTypeKAzureTierHot captures enum value "kAzureTierHot"
	TieringLevelsTypeKAzureTierHot string = "kAzureTierHot"

	// TieringLevelsTypeKAzureTierCool captures enum value "kAzureTierCool"
	TieringLevelsTypeKAzureTierCool string = "kAzureTierCool"

	// TieringLevelsTypeKAzureTierArchive captures enum value "kAzureTierArchive"
	TieringLevelsTypeKAzureTierArchive string = "kAzureTierArchive"

	// TieringLevelsTypeKGoogleStandard captures enum value "kGoogleStandard"
	TieringLevelsTypeKGoogleStandard string = "kGoogleStandard"

	// TieringLevelsTypeKGoogleRegional captures enum value "kGoogleRegional"
	TieringLevelsTypeKGoogleRegional string = "kGoogleRegional"

	// TieringLevelsTypeKGoogleMultiRegional captures enum value "kGoogleMultiRegional"
	TieringLevelsTypeKGoogleMultiRegional string = "kGoogleMultiRegional"

	// TieringLevelsTypeKGoogleNearline captures enum value "kGoogleNearline"
	TieringLevelsTypeKGoogleNearline string = "kGoogleNearline"

	// TieringLevelsTypeKGoogleColdline captures enum value "kGoogleColdline"
	TieringLevelsTypeKGoogleColdline string = "kGoogleColdline"

	// TieringLevelsTypeKOracleTierStandard captures enum value "kOracleTierStandard"
	TieringLevelsTypeKOracleTierStandard string = "kOracleTierStandard"

	// TieringLevelsTypeKOracleTierArchive captures enum value "kOracleTierArchive"
	TieringLevelsTypeKOracleTierArchive string = "kOracleTierArchive"
)

// prop value enum
func (m *TieringLevels) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, tieringLevelsTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *TieringLevels) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this tiering levels based on context it is used
func (m *TieringLevels) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TieringLevels) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TieringLevels) UnmarshalBinary(b []byte) error {
	var res TieringLevels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
