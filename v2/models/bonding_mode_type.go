// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BondingModeType Bonding Mode Type
//
// Type of bonding mode.
//
// swagger:model BondingModeType
type BondingModeType struct {

	// Specifies the bonding mode type.
	// Enum: ["ActiveBackup","802_3ad","BalanceAlb","Invalid"]
	BondingModeType string `json:"bondingModeType,omitempty"`
}

// Validate validates this bonding mode type
func (m *BondingModeType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBondingModeType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var bondingModeTypeTypeBondingModeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ActiveBackup","802_3ad","BalanceAlb","Invalid"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		bondingModeTypeTypeBondingModeTypePropEnum = append(bondingModeTypeTypeBondingModeTypePropEnum, v)
	}
}

const (

	// BondingModeTypeBondingModeTypeActiveBackup captures enum value "ActiveBackup"
	BondingModeTypeBondingModeTypeActiveBackup string = "ActiveBackup"

	// BondingModeTypeBondingModeTypeNr8023ad captures enum value "802_3ad"
	BondingModeTypeBondingModeTypeNr8023ad string = "802_3ad"

	// BondingModeTypeBondingModeTypeBalanceAlb captures enum value "BalanceAlb"
	BondingModeTypeBondingModeTypeBalanceAlb string = "BalanceAlb"

	// BondingModeTypeBondingModeTypeInvalid captures enum value "Invalid"
	BondingModeTypeBondingModeTypeInvalid string = "Invalid"
)

// prop value enum
func (m *BondingModeType) validateBondingModeTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, bondingModeTypeTypeBondingModeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *BondingModeType) validateBondingModeType(formats strfmt.Registry) error {
	if swag.IsZero(m.BondingModeType) { // not required
		return nil
	}

	// value enum
	if err := m.validateBondingModeTypeEnum("bondingModeType", "body", m.BondingModeType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this bonding mode type based on context it is used
func (m *BondingModeType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *BondingModeType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BondingModeType) UnmarshalBinary(b []byte) error {
	var res BondingModeType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
