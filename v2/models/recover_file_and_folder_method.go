// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RecoverFileAndFolderMethod Recover File and Folder Method
//
// # Recover File and Folder Method
//
// swagger:model RecoverFileAndFolderMethod
type RecoverFileAndFolderMethod struct {

	// Recover File and Folder Method.
	// Enum: ["AutoDeploy","UseExistingAgent","UseHypervisorApis"]
	RecoverFileAndFolderMethod string `json:"recoverFileAndFolderMethod,omitempty"`
}

// Validate validates this recover file and folder method
func (m *RecoverFileAndFolderMethod) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRecoverFileAndFolderMethod(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var recoverFileAndFolderMethodTypeRecoverFileAndFolderMethodPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AutoDeploy","UseExistingAgent","UseHypervisorApis"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		recoverFileAndFolderMethodTypeRecoverFileAndFolderMethodPropEnum = append(recoverFileAndFolderMethodTypeRecoverFileAndFolderMethodPropEnum, v)
	}
}

const (

	// RecoverFileAndFolderMethodRecoverFileAndFolderMethodAutoDeploy captures enum value "AutoDeploy"
	RecoverFileAndFolderMethodRecoverFileAndFolderMethodAutoDeploy string = "AutoDeploy"

	// RecoverFileAndFolderMethodRecoverFileAndFolderMethodUseExistingAgent captures enum value "UseExistingAgent"
	RecoverFileAndFolderMethodRecoverFileAndFolderMethodUseExistingAgent string = "UseExistingAgent"

	// RecoverFileAndFolderMethodRecoverFileAndFolderMethodUseHypervisorApis captures enum value "UseHypervisorApis"
	RecoverFileAndFolderMethodRecoverFileAndFolderMethodUseHypervisorApis string = "UseHypervisorApis"
)

// prop value enum
func (m *RecoverFileAndFolderMethod) validateRecoverFileAndFolderMethodEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, recoverFileAndFolderMethodTypeRecoverFileAndFolderMethodPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *RecoverFileAndFolderMethod) validateRecoverFileAndFolderMethod(formats strfmt.Registry) error {
	if swag.IsZero(m.RecoverFileAndFolderMethod) { // not required
		return nil
	}

	// value enum
	if err := m.validateRecoverFileAndFolderMethodEnum("recoverFileAndFolderMethod", "body", m.RecoverFileAndFolderMethod); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this recover file and folder method based on context it is used
func (m *RecoverFileAndFolderMethod) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RecoverFileAndFolderMethod) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RecoverFileAndFolderMethod) UnmarshalBinary(b []byte) error {
	var res RecoverFileAndFolderMethod
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
