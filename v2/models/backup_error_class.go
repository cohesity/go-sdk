// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BackupErrorClass Backup Error Class.
//
// Specifies the class for an error which occurred during a backup.
//
// swagger:model BackupErrorClass
type BackupErrorClass struct {

	// Specifies a class of error.
	// Enum: ["File","Folder","Persistent","Intermittent","Discovery","Ingestion"]
	Value string `json:"value,omitempty"`
}

// Validate validates this backup error class
func (m *BackupErrorClass) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var backupErrorClassTypeValuePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["File","Folder","Persistent","Intermittent","Discovery","Ingestion"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		backupErrorClassTypeValuePropEnum = append(backupErrorClassTypeValuePropEnum, v)
	}
}

const (

	// BackupErrorClassValueFile captures enum value "File"
	BackupErrorClassValueFile string = "File"

	// BackupErrorClassValueFolder captures enum value "Folder"
	BackupErrorClassValueFolder string = "Folder"

	// BackupErrorClassValuePersistent captures enum value "Persistent"
	BackupErrorClassValuePersistent string = "Persistent"

	// BackupErrorClassValueIntermittent captures enum value "Intermittent"
	BackupErrorClassValueIntermittent string = "Intermittent"

	// BackupErrorClassValueDiscovery captures enum value "Discovery"
	BackupErrorClassValueDiscovery string = "Discovery"

	// BackupErrorClassValueIngestion captures enum value "Ingestion"
	BackupErrorClassValueIngestion string = "Ingestion"
)

// prop value enum
func (m *BackupErrorClass) validateValueEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, backupErrorClassTypeValuePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *BackupErrorClass) validateValue(formats strfmt.Registry) error {
	if swag.IsZero(m.Value) { // not required
		return nil
	}

	// value enum
	if err := m.validateValueEnum("value", "body", m.Value); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this backup error class based on context it is used
func (m *BackupErrorClass) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *BackupErrorClass) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BackupErrorClass) UnmarshalBinary(b []byte) error {
	var res BackupErrorClass
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
