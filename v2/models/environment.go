// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Environment Environment type.
//
// Environment type.
//
// swagger:model Environment
type Environment struct {

	// Specifies Environment type.
	// Enum: ["kVMware","kHyperV","kVCD","kSQL","kView","kRemoteAdapter","kPhysical","kPure","kIbmFlashSystem","kAzure","kNetapp","kGenericNas","kAcropolis","kIsilon","kKVM","kAWS","kAWSNative","kAwsS3","kAWSSnapshotManager","kRDSSnapshotManager","kAuroraSnapshotManager","kAwsRDSPostgresBackup","kAzureNative","kAzureSQL","kAzureSnapshotManager","kExchange","kOracle","kGCP","kFlashBlade","kO365","kHyperFlex","kAD","kGPFS","kKubernetes","kNimble","kElastifile","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kUDA","kO365Sharepoint","kO365PublicFolders","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kSfdc"]
	Environment string `json:"environment,omitempty"`
}

// Validate validates this environment
func (m *Environment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnvironment(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var environmentTypeEnvironmentPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kVMware","kHyperV","kVCD","kSQL","kView","kRemoteAdapter","kPhysical","kPure","kIbmFlashSystem","kAzure","kNetapp","kGenericNas","kAcropolis","kIsilon","kKVM","kAWS","kAWSNative","kAwsS3","kAWSSnapshotManager","kRDSSnapshotManager","kAuroraSnapshotManager","kAwsRDSPostgresBackup","kAzureNative","kAzureSQL","kAzureSnapshotManager","kExchange","kOracle","kGCP","kFlashBlade","kO365","kHyperFlex","kAD","kGPFS","kKubernetes","kNimble","kElastifile","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kUDA","kO365Sharepoint","kO365PublicFolders","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kSfdc"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		environmentTypeEnvironmentPropEnum = append(environmentTypeEnvironmentPropEnum, v)
	}
}

const (

	// EnvironmentEnvironmentKVMware captures enum value "kVMware"
	EnvironmentEnvironmentKVMware string = "kVMware"

	// EnvironmentEnvironmentKHyperV captures enum value "kHyperV"
	EnvironmentEnvironmentKHyperV string = "kHyperV"

	// EnvironmentEnvironmentKVCD captures enum value "kVCD"
	EnvironmentEnvironmentKVCD string = "kVCD"

	// EnvironmentEnvironmentKSQL captures enum value "kSQL"
	EnvironmentEnvironmentKSQL string = "kSQL"

	// EnvironmentEnvironmentKView captures enum value "kView"
	EnvironmentEnvironmentKView string = "kView"

	// EnvironmentEnvironmentKRemoteAdapter captures enum value "kRemoteAdapter"
	EnvironmentEnvironmentKRemoteAdapter string = "kRemoteAdapter"

	// EnvironmentEnvironmentKPhysical captures enum value "kPhysical"
	EnvironmentEnvironmentKPhysical string = "kPhysical"

	// EnvironmentEnvironmentKPure captures enum value "kPure"
	EnvironmentEnvironmentKPure string = "kPure"

	// EnvironmentEnvironmentKIbmFlashSystem captures enum value "kIbmFlashSystem"
	EnvironmentEnvironmentKIbmFlashSystem string = "kIbmFlashSystem"

	// EnvironmentEnvironmentKAzure captures enum value "kAzure"
	EnvironmentEnvironmentKAzure string = "kAzure"

	// EnvironmentEnvironmentKNetapp captures enum value "kNetapp"
	EnvironmentEnvironmentKNetapp string = "kNetapp"

	// EnvironmentEnvironmentKGenericNas captures enum value "kGenericNas"
	EnvironmentEnvironmentKGenericNas string = "kGenericNas"

	// EnvironmentEnvironmentKAcropolis captures enum value "kAcropolis"
	EnvironmentEnvironmentKAcropolis string = "kAcropolis"

	// EnvironmentEnvironmentKIsilon captures enum value "kIsilon"
	EnvironmentEnvironmentKIsilon string = "kIsilon"

	// EnvironmentEnvironmentKKVM captures enum value "kKVM"
	EnvironmentEnvironmentKKVM string = "kKVM"

	// EnvironmentEnvironmentKAWS captures enum value "kAWS"
	EnvironmentEnvironmentKAWS string = "kAWS"

	// EnvironmentEnvironmentKAWSNative captures enum value "kAWSNative"
	EnvironmentEnvironmentKAWSNative string = "kAWSNative"

	// EnvironmentEnvironmentKAwsS3 captures enum value "kAwsS3"
	EnvironmentEnvironmentKAwsS3 string = "kAwsS3"

	// EnvironmentEnvironmentKAWSSnapshotManager captures enum value "kAWSSnapshotManager"
	EnvironmentEnvironmentKAWSSnapshotManager string = "kAWSSnapshotManager"

	// EnvironmentEnvironmentKRDSSnapshotManager captures enum value "kRDSSnapshotManager"
	EnvironmentEnvironmentKRDSSnapshotManager string = "kRDSSnapshotManager"

	// EnvironmentEnvironmentKAuroraSnapshotManager captures enum value "kAuroraSnapshotManager"
	EnvironmentEnvironmentKAuroraSnapshotManager string = "kAuroraSnapshotManager"

	// EnvironmentEnvironmentKAwsRDSPostgresBackup captures enum value "kAwsRDSPostgresBackup"
	EnvironmentEnvironmentKAwsRDSPostgresBackup string = "kAwsRDSPostgresBackup"

	// EnvironmentEnvironmentKAzureNative captures enum value "kAzureNative"
	EnvironmentEnvironmentKAzureNative string = "kAzureNative"

	// EnvironmentEnvironmentKAzureSQL captures enum value "kAzureSQL"
	EnvironmentEnvironmentKAzureSQL string = "kAzureSQL"

	// EnvironmentEnvironmentKAzureSnapshotManager captures enum value "kAzureSnapshotManager"
	EnvironmentEnvironmentKAzureSnapshotManager string = "kAzureSnapshotManager"

	// EnvironmentEnvironmentKExchange captures enum value "kExchange"
	EnvironmentEnvironmentKExchange string = "kExchange"

	// EnvironmentEnvironmentKOracle captures enum value "kOracle"
	EnvironmentEnvironmentKOracle string = "kOracle"

	// EnvironmentEnvironmentKGCP captures enum value "kGCP"
	EnvironmentEnvironmentKGCP string = "kGCP"

	// EnvironmentEnvironmentKFlashBlade captures enum value "kFlashBlade"
	EnvironmentEnvironmentKFlashBlade string = "kFlashBlade"

	// EnvironmentEnvironmentKO365 captures enum value "kO365"
	EnvironmentEnvironmentKO365 string = "kO365"

	// EnvironmentEnvironmentKHyperFlex captures enum value "kHyperFlex"
	EnvironmentEnvironmentKHyperFlex string = "kHyperFlex"

	// EnvironmentEnvironmentKAD captures enum value "kAD"
	EnvironmentEnvironmentKAD string = "kAD"

	// EnvironmentEnvironmentKGPFS captures enum value "kGPFS"
	EnvironmentEnvironmentKGPFS string = "kGPFS"

	// EnvironmentEnvironmentKKubernetes captures enum value "kKubernetes"
	EnvironmentEnvironmentKKubernetes string = "kKubernetes"

	// EnvironmentEnvironmentKNimble captures enum value "kNimble"
	EnvironmentEnvironmentKNimble string = "kNimble"

	// EnvironmentEnvironmentKElastifile captures enum value "kElastifile"
	EnvironmentEnvironmentKElastifile string = "kElastifile"

	// EnvironmentEnvironmentKCassandra captures enum value "kCassandra"
	EnvironmentEnvironmentKCassandra string = "kCassandra"

	// EnvironmentEnvironmentKMongoDB captures enum value "kMongoDB"
	EnvironmentEnvironmentKMongoDB string = "kMongoDB"

	// EnvironmentEnvironmentKCouchbase captures enum value "kCouchbase"
	EnvironmentEnvironmentKCouchbase string = "kCouchbase"

	// EnvironmentEnvironmentKHdfs captures enum value "kHdfs"
	EnvironmentEnvironmentKHdfs string = "kHdfs"

	// EnvironmentEnvironmentKHive captures enum value "kHive"
	EnvironmentEnvironmentKHive string = "kHive"

	// EnvironmentEnvironmentKHBase captures enum value "kHBase"
	EnvironmentEnvironmentKHBase string = "kHBase"

	// EnvironmentEnvironmentKUDA captures enum value "kUDA"
	EnvironmentEnvironmentKUDA string = "kUDA"

	// EnvironmentEnvironmentKO365Sharepoint captures enum value "kO365Sharepoint"
	EnvironmentEnvironmentKO365Sharepoint string = "kO365Sharepoint"

	// EnvironmentEnvironmentKO365PublicFolders captures enum value "kO365PublicFolders"
	EnvironmentEnvironmentKO365PublicFolders string = "kO365PublicFolders"

	// EnvironmentEnvironmentKO365Teams captures enum value "kO365Teams"
	EnvironmentEnvironmentKO365Teams string = "kO365Teams"

	// EnvironmentEnvironmentKO365Group captures enum value "kO365Group"
	EnvironmentEnvironmentKO365Group string = "kO365Group"

	// EnvironmentEnvironmentKO365Exchange captures enum value "kO365Exchange"
	EnvironmentEnvironmentKO365Exchange string = "kO365Exchange"

	// EnvironmentEnvironmentKO365OneDrive captures enum value "kO365OneDrive"
	EnvironmentEnvironmentKO365OneDrive string = "kO365OneDrive"

	// EnvironmentEnvironmentKSfdc captures enum value "kSfdc"
	EnvironmentEnvironmentKSfdc string = "kSfdc"
)

// prop value enum
func (m *Environment) validateEnvironmentEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, environmentTypeEnvironmentPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *Environment) validateEnvironment(formats strfmt.Registry) error {
	if swag.IsZero(m.Environment) { // not required
		return nil
	}

	// value enum
	if err := m.validateEnvironmentEnum("environment", "body", m.Environment); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this environment based on context it is used
func (m *Environment) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Environment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Environment) UnmarshalBinary(b []byte) error {
	var res Environment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
