// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MachineAccountEncryptionType Machine Account Encryption Type
//
// Machine account encryption type.
//
// swagger:model MachineAccountEncryptionType
type MachineAccountEncryptionType struct {

	// Specifies the encryption type of a machine account.
	// Enum: ["DES-CBC-CRC","DES-CBC-MD5","RC4-HMAC","AES128-CTS-HMAC-SHA1-96","AES256-CTS-HMAC-SHA1-96"]
	Type string `json:"type,omitempty"`
}

// Validate validates this machine account encryption type
func (m *MachineAccountEncryptionType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var machineAccountEncryptionTypeTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DES-CBC-CRC","DES-CBC-MD5","RC4-HMAC","AES128-CTS-HMAC-SHA1-96","AES256-CTS-HMAC-SHA1-96"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		machineAccountEncryptionTypeTypeTypePropEnum = append(machineAccountEncryptionTypeTypeTypePropEnum, v)
	}
}

const (

	// MachineAccountEncryptionTypeTypeDESDashCBCDashCRC captures enum value "DES-CBC-CRC"
	MachineAccountEncryptionTypeTypeDESDashCBCDashCRC string = "DES-CBC-CRC"

	// MachineAccountEncryptionTypeTypeDESDashCBCDashMD5 captures enum value "DES-CBC-MD5"
	MachineAccountEncryptionTypeTypeDESDashCBCDashMD5 string = "DES-CBC-MD5"

	// MachineAccountEncryptionTypeTypeRC4DashHMAC captures enum value "RC4-HMAC"
	MachineAccountEncryptionTypeTypeRC4DashHMAC string = "RC4-HMAC"

	// MachineAccountEncryptionTypeTypeAES128DashCTSDashHMACDashSHA1Dash96 captures enum value "AES128-CTS-HMAC-SHA1-96"
	MachineAccountEncryptionTypeTypeAES128DashCTSDashHMACDashSHA1Dash96 string = "AES128-CTS-HMAC-SHA1-96"

	// MachineAccountEncryptionTypeTypeAES256DashCTSDashHMACDashSHA1Dash96 captures enum value "AES256-CTS-HMAC-SHA1-96"
	MachineAccountEncryptionTypeTypeAES256DashCTSDashHMACDashSHA1Dash96 string = "AES256-CTS-HMAC-SHA1-96"
)

// prop value enum
func (m *MachineAccountEncryptionType) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, machineAccountEncryptionTypeTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *MachineAccountEncryptionType) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this machine account encryption type based on context it is used
func (m *MachineAccountEncryptionType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MachineAccountEncryptionType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MachineAccountEncryptionType) UnmarshalBinary(b []byte) error {
	var res MachineAccountEncryptionType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
