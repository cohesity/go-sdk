// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NetappVolumeExtendedStyle Netapp Volume Extended Style
//
// Specifies the Extended Styles in NetApp.
//
// swagger:model NetappVolumeExtendedStyle
type NetappVolumeExtendedStyle struct {

	// Specifies the list of Extended Styles in NetApp.
	// Enum: ["kFlexVol","kFlexGroup"]
	Value string `json:"value,omitempty"`
}

// Validate validates this netapp volume extended style
func (m *NetappVolumeExtendedStyle) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var netappVolumeExtendedStyleTypeValuePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kFlexVol","kFlexGroup"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		netappVolumeExtendedStyleTypeValuePropEnum = append(netappVolumeExtendedStyleTypeValuePropEnum, v)
	}
}

const (

	// NetappVolumeExtendedStyleValueKFlexVol captures enum value "kFlexVol"
	NetappVolumeExtendedStyleValueKFlexVol string = "kFlexVol"

	// NetappVolumeExtendedStyleValueKFlexGroup captures enum value "kFlexGroup"
	NetappVolumeExtendedStyleValueKFlexGroup string = "kFlexGroup"
)

// prop value enum
func (m *NetappVolumeExtendedStyle) validateValueEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, netappVolumeExtendedStyleTypeValuePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *NetappVolumeExtendedStyle) validateValue(formats strfmt.Registry) error {
	if swag.IsZero(m.Value) { // not required
		return nil
	}

	// value enum
	if err := m.validateValueEnum("value", "body", m.Value); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this netapp volume extended style based on context it is used
func (m *NetappVolumeExtendedStyle) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NetappVolumeExtendedStyle) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NetappVolumeExtendedStyle) UnmarshalBinary(b []byte) error {
	var res NetappVolumeExtendedStyle
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
