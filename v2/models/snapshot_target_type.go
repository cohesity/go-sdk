// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SnapshotTargetType Snapshot Target Type
//
// # Snapshot Target Type
//
// swagger:model SnapshotTargetType
type SnapshotTargetType struct {

	// Specifies the snapshot target type.
	// Enum: ["Local","Archival","RpaasArchival","StorageArraySnapshot","Remote"]
	SnapshotTargetType string `json:"snapshotTargetType,omitempty"`
}

// Validate validates this snapshot target type
func (m *SnapshotTargetType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSnapshotTargetType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var snapshotTargetTypeTypeSnapshotTargetTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Local","Archival","RpaasArchival","StorageArraySnapshot","Remote"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		snapshotTargetTypeTypeSnapshotTargetTypePropEnum = append(snapshotTargetTypeTypeSnapshotTargetTypePropEnum, v)
	}
}

const (

	// SnapshotTargetTypeSnapshotTargetTypeLocal captures enum value "Local"
	SnapshotTargetTypeSnapshotTargetTypeLocal string = "Local"

	// SnapshotTargetTypeSnapshotTargetTypeArchival captures enum value "Archival"
	SnapshotTargetTypeSnapshotTargetTypeArchival string = "Archival"

	// SnapshotTargetTypeSnapshotTargetTypeRpaasArchival captures enum value "RpaasArchival"
	SnapshotTargetTypeSnapshotTargetTypeRpaasArchival string = "RpaasArchival"

	// SnapshotTargetTypeSnapshotTargetTypeStorageArraySnapshot captures enum value "StorageArraySnapshot"
	SnapshotTargetTypeSnapshotTargetTypeStorageArraySnapshot string = "StorageArraySnapshot"

	// SnapshotTargetTypeSnapshotTargetTypeRemote captures enum value "Remote"
	SnapshotTargetTypeSnapshotTargetTypeRemote string = "Remote"
)

// prop value enum
func (m *SnapshotTargetType) validateSnapshotTargetTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, snapshotTargetTypeTypeSnapshotTargetTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *SnapshotTargetType) validateSnapshotTargetType(formats strfmt.Registry) error {
	if swag.IsZero(m.SnapshotTargetType) { // not required
		return nil
	}

	// value enum
	if err := m.validateSnapshotTargetTypeEnum("snapshotTargetType", "body", m.SnapshotTargetType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this snapshot target type based on context it is used
func (m *SnapshotTargetType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SnapshotTargetType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SnapshotTargetType) UnmarshalBinary(b []byte) error {
	var res SnapshotTargetType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
