// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RunFilterValues Run Filter Values.
//
// Run Filter Values.
//
// swagger:model RunFilterValues
type RunFilterValues struct {

	// Specifies Run Filter Value.
	// Enum: ["kAll","kHydrateCDP","kSystem","kStorageArraySnapshot","kIncremental","kFull","kLog"]
	RunFilterValues string `json:"runFilterValues,omitempty"`
}

// Validate validates this run filter values
func (m *RunFilterValues) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRunFilterValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var runFilterValuesTypeRunFilterValuesPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kAll","kHydrateCDP","kSystem","kStorageArraySnapshot","kIncremental","kFull","kLog"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		runFilterValuesTypeRunFilterValuesPropEnum = append(runFilterValuesTypeRunFilterValuesPropEnum, v)
	}
}

const (

	// RunFilterValuesRunFilterValuesKAll captures enum value "kAll"
	RunFilterValuesRunFilterValuesKAll string = "kAll"

	// RunFilterValuesRunFilterValuesKHydrateCDP captures enum value "kHydrateCDP"
	RunFilterValuesRunFilterValuesKHydrateCDP string = "kHydrateCDP"

	// RunFilterValuesRunFilterValuesKSystem captures enum value "kSystem"
	RunFilterValuesRunFilterValuesKSystem string = "kSystem"

	// RunFilterValuesRunFilterValuesKStorageArraySnapshot captures enum value "kStorageArraySnapshot"
	RunFilterValuesRunFilterValuesKStorageArraySnapshot string = "kStorageArraySnapshot"

	// RunFilterValuesRunFilterValuesKIncremental captures enum value "kIncremental"
	RunFilterValuesRunFilterValuesKIncremental string = "kIncremental"

	// RunFilterValuesRunFilterValuesKFull captures enum value "kFull"
	RunFilterValuesRunFilterValuesKFull string = "kFull"

	// RunFilterValuesRunFilterValuesKLog captures enum value "kLog"
	RunFilterValuesRunFilterValuesKLog string = "kLog"
)

// prop value enum
func (m *RunFilterValues) validateRunFilterValuesEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, runFilterValuesTypeRunFilterValuesPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *RunFilterValues) validateRunFilterValues(formats strfmt.Registry) error {
	if swag.IsZero(m.RunFilterValues) { // not required
		return nil
	}

	// value enum
	if err := m.validateRunFilterValuesEnum("runFilterValues", "body", m.RunFilterValues); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this run filter values based on context it is used
func (m *RunFilterValues) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RunFilterValues) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RunFilterValues) UnmarshalBinary(b []byte) error {
	var res RunFilterValues
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
