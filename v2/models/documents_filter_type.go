// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DocumentsFilterType Enumeration of all the document filter option.
//
// Enumeration of all the document filter option.
//
// swagger:model DocumentsFilterType
type DocumentsFilterType struct {

	// Enumeration of all the document filter option.
	// Enum: ["NONE","ID","CONTENT"]
	DocumentsFilterType string `json:"DocumentsFilterType,omitempty"`
}

// Validate validates this documents filter type
func (m *DocumentsFilterType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDocumentsFilterType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var documentsFilterTypeTypeDocumentsFilterTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NONE","ID","CONTENT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		documentsFilterTypeTypeDocumentsFilterTypePropEnum = append(documentsFilterTypeTypeDocumentsFilterTypePropEnum, v)
	}
}

const (

	// DocumentsFilterTypeDocumentsFilterTypeNONE captures enum value "NONE"
	DocumentsFilterTypeDocumentsFilterTypeNONE string = "NONE"

	// DocumentsFilterTypeDocumentsFilterTypeID captures enum value "ID"
	DocumentsFilterTypeDocumentsFilterTypeID string = "ID"

	// DocumentsFilterTypeDocumentsFilterTypeCONTENT captures enum value "CONTENT"
	DocumentsFilterTypeDocumentsFilterTypeCONTENT string = "CONTENT"
)

// prop value enum
func (m *DocumentsFilterType) validateDocumentsFilterTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, documentsFilterTypeTypeDocumentsFilterTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DocumentsFilterType) validateDocumentsFilterType(formats strfmt.Registry) error {
	if swag.IsZero(m.DocumentsFilterType) { // not required
		return nil
	}

	// value enum
	if err := m.validateDocumentsFilterTypeEnum("DocumentsFilterType", "body", m.DocumentsFilterType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this documents filter type based on context it is used
func (m *DocumentsFilterType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DocumentsFilterType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DocumentsFilterType) UnmarshalBinary(b []byte) error {
	var res DocumentsFilterType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
