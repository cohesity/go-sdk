// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TieringCloudPlatforms Tiering Cloud Platforms.
//
// Tiering Cloud Platforms.
//
// swagger:model TieringCloudPlatforms
type TieringCloudPlatforms struct {

	// Tiering Cloud Platforms.
	// Enum: ["AWS","Azure","Oracle","Google"]
	Type string `json:"type,omitempty"`
}

// Validate validates this tiering cloud platforms
func (m *TieringCloudPlatforms) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var tieringCloudPlatformsTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AWS","Azure","Oracle","Google"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tieringCloudPlatformsTypeTypePropEnum = append(tieringCloudPlatformsTypeTypePropEnum, v)
	}
}

const (

	// TieringCloudPlatformsTypeAWS captures enum value "AWS"
	TieringCloudPlatformsTypeAWS string = "AWS"

	// TieringCloudPlatformsTypeAzure captures enum value "Azure"
	TieringCloudPlatformsTypeAzure string = "Azure"

	// TieringCloudPlatformsTypeOracle captures enum value "Oracle"
	TieringCloudPlatformsTypeOracle string = "Oracle"

	// TieringCloudPlatformsTypeGoogle captures enum value "Google"
	TieringCloudPlatformsTypeGoogle string = "Google"
)

// prop value enum
func (m *TieringCloudPlatforms) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, tieringCloudPlatformsTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *TieringCloudPlatforms) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this tiering cloud platforms based on context it is used
func (m *TieringCloudPlatforms) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TieringCloudPlatforms) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TieringCloudPlatforms) UnmarshalBinary(b []byte) error {
	var res TieringCloudPlatforms
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
