// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ScheduledBackup Scheduled Backup type.
//
// Scheduled Backup type.
//
// swagger:model ScheduledBackup
type ScheduledBackup struct {

	// Specifies Scheduled Backup type.
	// Enum: ["kRegular","kFull","kLog","kSystem","kHydrateCDP","kStorageArraySnapshot"]
	ScheduledBackup string `json:"scheduledBackup,omitempty"`
}

// Validate validates this scheduled backup
func (m *ScheduledBackup) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateScheduledBackup(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var scheduledBackupTypeScheduledBackupPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kRegular","kFull","kLog","kSystem","kHydrateCDP","kStorageArraySnapshot"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		scheduledBackupTypeScheduledBackupPropEnum = append(scheduledBackupTypeScheduledBackupPropEnum, v)
	}
}

const (

	// ScheduledBackupScheduledBackupKRegular captures enum value "kRegular"
	ScheduledBackupScheduledBackupKRegular string = "kRegular"

	// ScheduledBackupScheduledBackupKFull captures enum value "kFull"
	ScheduledBackupScheduledBackupKFull string = "kFull"

	// ScheduledBackupScheduledBackupKLog captures enum value "kLog"
	ScheduledBackupScheduledBackupKLog string = "kLog"

	// ScheduledBackupScheduledBackupKSystem captures enum value "kSystem"
	ScheduledBackupScheduledBackupKSystem string = "kSystem"

	// ScheduledBackupScheduledBackupKHydrateCDP captures enum value "kHydrateCDP"
	ScheduledBackupScheduledBackupKHydrateCDP string = "kHydrateCDP"

	// ScheduledBackupScheduledBackupKStorageArraySnapshot captures enum value "kStorageArraySnapshot"
	ScheduledBackupScheduledBackupKStorageArraySnapshot string = "kStorageArraySnapshot"
)

// prop value enum
func (m *ScheduledBackup) validateScheduledBackupEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, scheduledBackupTypeScheduledBackupPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ScheduledBackup) validateScheduledBackup(formats strfmt.Registry) error {
	if swag.IsZero(m.ScheduledBackup) { // not required
		return nil
	}

	// value enum
	if err := m.validateScheduledBackupEnum("scheduledBackup", "body", m.ScheduledBackup); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this scheduled backup based on context it is used
func (m *ScheduledBackup) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ScheduledBackup) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ScheduledBackup) UnmarshalBinary(b []byte) error {
	var res ScheduledBackup
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
