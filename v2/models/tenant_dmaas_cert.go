// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TenantDmaasCert Tenant Dmaas Certificate.
//
// Specifies the parameters to of a tenant certificate.
//
// swagger:model TenantDmaasCert
type TenantDmaasCert struct {

	// The id of the tenant.
	TenantID *string `json:"tenantId,omitempty"`

	// Specifies the tenant certificate.
	Certificate *string `json:"certificate,omitempty"`

	// Specifies the tenant private key.
	PrivateKey *string `json:"privateKey,omitempty"`

	// Specifies the CA chain that is used to sign the connector certificate.
	ConnectorCaChain *string `json:"connectorCaChain,omitempty"`

	// Specifies the passphrase used to encode the private key.
	Passphrase *string `json:"passphrase,omitempty"`
}

// Validate validates this tenant dmaas cert
func (m *TenantDmaasCert) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this tenant dmaas cert based on context it is used
func (m *TenantDmaasCert) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TenantDmaasCert) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TenantDmaasCert) UnmarshalBinary(b []byte) error {
	var res TenantDmaasCert
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
