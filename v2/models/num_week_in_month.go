// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NumWeekInMonth Num Week In Month type.
//
// Num Week In Month type.
//
// swagger:model NumWeekInMonth
type NumWeekInMonth struct {

	// Specifies Num Week In Month type.
	// Enum: ["First","Second","Third","Fourth","Last"]
	NumWeekInMonth string `json:"numWeekInMonth,omitempty"`
}

// Validate validates this num week in month
func (m *NumWeekInMonth) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNumWeekInMonth(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var numWeekInMonthTypeNumWeekInMonthPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["First","Second","Third","Fourth","Last"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		numWeekInMonthTypeNumWeekInMonthPropEnum = append(numWeekInMonthTypeNumWeekInMonthPropEnum, v)
	}
}

const (

	// NumWeekInMonthNumWeekInMonthFirst captures enum value "First"
	NumWeekInMonthNumWeekInMonthFirst string = "First"

	// NumWeekInMonthNumWeekInMonthSecond captures enum value "Second"
	NumWeekInMonthNumWeekInMonthSecond string = "Second"

	// NumWeekInMonthNumWeekInMonthThird captures enum value "Third"
	NumWeekInMonthNumWeekInMonthThird string = "Third"

	// NumWeekInMonthNumWeekInMonthFourth captures enum value "Fourth"
	NumWeekInMonthNumWeekInMonthFourth string = "Fourth"

	// NumWeekInMonthNumWeekInMonthLast captures enum value "Last"
	NumWeekInMonthNumWeekInMonthLast string = "Last"
)

// prop value enum
func (m *NumWeekInMonth) validateNumWeekInMonthEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, numWeekInMonthTypeNumWeekInMonthPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *NumWeekInMonth) validateNumWeekInMonth(formats strfmt.Registry) error {
	if swag.IsZero(m.NumWeekInMonth) { // not required
		return nil
	}

	// value enum
	if err := m.validateNumWeekInMonthEnum("numWeekInMonth", "body", m.NumWeekInMonth); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this num week in month based on context it is used
func (m *NumWeekInMonth) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NumWeekInMonth) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NumWeekInMonth) UnmarshalBinary(b []byte) error {
	var res NumWeekInMonth
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
