// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TargetObjectRun The tuple denoting the object run to be acted upon. Here, runStartTimeUsecs is an optional param if we want to update multiple runs of the object. In this scenario, runStartTimeUsecs will be empty, and the start and end time will be populated in the UpdateObjectsRunsMetadataParams
//
// swagger:model TargetObjectRun
type TargetObjectRun struct {

	// Specifies the id of the object
	// Required: true
	ID *string `json:"id"`

	// Specifies the start time of the run pertaining to the object
	RunStartTimeUsecs *int64 `json:"runStartTimeUsecs,omitempty"`
}

// Validate validates this target object run
func (m *TargetObjectRun) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TargetObjectRun) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this target object run based on context it is used
func (m *TargetObjectRun) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TargetObjectRun) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TargetObjectRun) UnmarshalBinary(b []byte) error {
	var res TargetObjectRun
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
