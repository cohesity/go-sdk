// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CommonTdmCloneTaskParams Specifies the common params for a TDM clone task.
//
// swagger:model CommonTdmCloneTaskParams
type CommonTdmCloneTaskParams struct {

	// Specifies the environment of the TDM Clone task.
	// Required: true
	// Enum: ["kSQL","kOracle"]
	Environment *string `json:"environment"`

	// Specifies the ID of an existing protection group, which should start protecting this clone. Specifying this implies that the clone is eligible for automated snapshots based on the policy configuration. If this is specified, policyId should also be specified and protectionGroupName should not be specified.
	ProtectionGroupID *string `json:"protectionGroupId,omitempty"`

	// Specifies the name of a new protection group, which should be created to protect this clone. Specifying this implies that the clone is eligible for automated snapshots based on the policy configuration. If this is specified, policyId should also be specified and protectionGroupId should not be specified.
	ProtectionGroupName *string `json:"protectionGroupName,omitempty"`

	// Specifies the ID of the policy, which should be used to protect this clone. This is useful for automatic snapshots. This must be specified if either of protectionGroupId and protectionGroupName is specified.
	PolicyID *string `json:"policyId,omitempty"`
}

// Validate validates this common tdm clone task params
func (m *CommonTdmCloneTaskParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnvironment(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var commonTdmCloneTaskParamsTypeEnvironmentPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kSQL","kOracle"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		commonTdmCloneTaskParamsTypeEnvironmentPropEnum = append(commonTdmCloneTaskParamsTypeEnvironmentPropEnum, v)
	}
}

const (

	// CommonTdmCloneTaskParamsEnvironmentKSQL captures enum value "kSQL"
	CommonTdmCloneTaskParamsEnvironmentKSQL string = "kSQL"

	// CommonTdmCloneTaskParamsEnvironmentKOracle captures enum value "kOracle"
	CommonTdmCloneTaskParamsEnvironmentKOracle string = "kOracle"
)

// prop value enum
func (m *CommonTdmCloneTaskParams) validateEnvironmentEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, commonTdmCloneTaskParamsTypeEnvironmentPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CommonTdmCloneTaskParams) validateEnvironment(formats strfmt.Registry) error {

	if err := validate.Required("environment", "body", m.Environment); err != nil {
		return err
	}

	// value enum
	if err := m.validateEnvironmentEnum("environment", "body", *m.Environment); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this common tdm clone task params based on context it is used
func (m *CommonTdmCloneTaskParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CommonTdmCloneTaskParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CommonTdmCloneTaskParams) UnmarshalBinary(b []byte) error {
	var res CommonTdmCloneTaskParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
