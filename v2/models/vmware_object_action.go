// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VmwareObjectAction Actions on VMware objects.
//
// Actions on VMware objects.
//
// swagger:model VmwareObjectAction
type VmwareObjectAction struct {

	// Specifies the actions on vmware objects.
	// Enum: ["enableAppProtection","disableAppProtection","upgradeCdpIoFilter","uninstallCdpIoFilter","reEnableCDP"]
	VmwareObjectAction string `json:"vmwareObjectAction,omitempty"`
}

// Validate validates this vmware object action
func (m *VmwareObjectAction) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateVmwareObjectAction(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var vmwareObjectActionTypeVmwareObjectActionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["enableAppProtection","disableAppProtection","upgradeCdpIoFilter","uninstallCdpIoFilter","reEnableCDP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		vmwareObjectActionTypeVmwareObjectActionPropEnum = append(vmwareObjectActionTypeVmwareObjectActionPropEnum, v)
	}
}

const (

	// VmwareObjectActionVmwareObjectActionEnableAppProtection captures enum value "enableAppProtection"
	VmwareObjectActionVmwareObjectActionEnableAppProtection string = "enableAppProtection"

	// VmwareObjectActionVmwareObjectActionDisableAppProtection captures enum value "disableAppProtection"
	VmwareObjectActionVmwareObjectActionDisableAppProtection string = "disableAppProtection"

	// VmwareObjectActionVmwareObjectActionUpgradeCdpIoFilter captures enum value "upgradeCdpIoFilter"
	VmwareObjectActionVmwareObjectActionUpgradeCdpIoFilter string = "upgradeCdpIoFilter"

	// VmwareObjectActionVmwareObjectActionUninstallCdpIoFilter captures enum value "uninstallCdpIoFilter"
	VmwareObjectActionVmwareObjectActionUninstallCdpIoFilter string = "uninstallCdpIoFilter"

	// VmwareObjectActionVmwareObjectActionReEnableCDP captures enum value "reEnableCDP"
	VmwareObjectActionVmwareObjectActionReEnableCDP string = "reEnableCDP"
)

// prop value enum
func (m *VmwareObjectAction) validateVmwareObjectActionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, vmwareObjectActionTypeVmwareObjectActionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *VmwareObjectAction) validateVmwareObjectAction(formats strfmt.Registry) error {
	if swag.IsZero(m.VmwareObjectAction) { // not required
		return nil
	}

	// value enum
	if err := m.validateVmwareObjectActionEnum("vmwareObjectAction", "body", m.VmwareObjectAction); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this vmware object action based on context it is used
func (m *VmwareObjectAction) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VmwareObjectAction) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VmwareObjectAction) UnmarshalBinary(b []byte) error {
	var res VmwareObjectAction
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
