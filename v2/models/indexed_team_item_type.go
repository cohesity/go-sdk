// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IndexedTeamItemType Microsoft365 Teams item types for search.
//
// Microsoft365 Teams item types for search.
//
// swagger:model IndexedTeamItemType
type IndexedTeamItemType struct {

	// Specifies the Teams item types for search.
	// Enum: ["Channel","Chat","Conversation","File","Folder"]
	Type string `json:"type,omitempty"`
}

// Validate validates this indexed team item type
func (m *IndexedTeamItemType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var indexedTeamItemTypeTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Channel","Chat","Conversation","File","Folder"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		indexedTeamItemTypeTypeTypePropEnum = append(indexedTeamItemTypeTypeTypePropEnum, v)
	}
}

const (

	// IndexedTeamItemTypeTypeChannel captures enum value "Channel"
	IndexedTeamItemTypeTypeChannel string = "Channel"

	// IndexedTeamItemTypeTypeChat captures enum value "Chat"
	IndexedTeamItemTypeTypeChat string = "Chat"

	// IndexedTeamItemTypeTypeConversation captures enum value "Conversation"
	IndexedTeamItemTypeTypeConversation string = "Conversation"

	// IndexedTeamItemTypeTypeFile captures enum value "File"
	IndexedTeamItemTypeTypeFile string = "File"

	// IndexedTeamItemTypeTypeFolder captures enum value "Folder"
	IndexedTeamItemTypeTypeFolder string = "Folder"
)

// prop value enum
func (m *IndexedTeamItemType) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, indexedTeamItemTypeTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *IndexedTeamItemType) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this indexed team item type based on context it is used
func (m *IndexedTeamItemType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IndexedTeamItemType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IndexedTeamItemType) UnmarshalBinary(b []byte) error {
	var res IndexedTeamItemType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
