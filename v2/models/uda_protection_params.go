// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UdaProtectionParams Parameters to customize protection workflow.
//
// swagger:model UdaProtectionParams
type UdaProtectionParams struct {

	// dynamic form
	DynamicForm *UdaDynamicFormParams `json:"dynamicForm,omitempty"`

	// primary fields
	PrimaryFields *UdaProtectionParamsPrimaryFields `json:"primaryFields,omitempty"`
}

// Validate validates this uda protection params
func (m *UdaProtectionParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDynamicForm(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePrimaryFields(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UdaProtectionParams) validateDynamicForm(formats strfmt.Registry) error {
	if swag.IsZero(m.DynamicForm) { // not required
		return nil
	}

	if m.DynamicForm != nil {
		if err := m.DynamicForm.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("dynamicForm")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("dynamicForm")
			}
			return err
		}
	}

	return nil
}

func (m *UdaProtectionParams) validatePrimaryFields(formats strfmt.Registry) error {
	if swag.IsZero(m.PrimaryFields) { // not required
		return nil
	}

	if m.PrimaryFields != nil {
		if err := m.PrimaryFields.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("primaryFields")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("primaryFields")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this uda protection params based on the context it is used
func (m *UdaProtectionParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateDynamicForm(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidatePrimaryFields(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UdaProtectionParams) contextValidateDynamicForm(ctx context.Context, formats strfmt.Registry) error {

	if m.DynamicForm != nil {

		if swag.IsZero(m.DynamicForm) { // not required
			return nil
		}

		if err := m.DynamicForm.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("dynamicForm")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("dynamicForm")
			}
			return err
		}
	}

	return nil
}

func (m *UdaProtectionParams) contextValidatePrimaryFields(ctx context.Context, formats strfmt.Registry) error {

	if m.PrimaryFields != nil {

		if swag.IsZero(m.PrimaryFields) { // not required
			return nil
		}

		if err := m.PrimaryFields.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("primaryFields")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("primaryFields")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UdaProtectionParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UdaProtectionParams) UnmarshalBinary(b []byte) error {
	var res UdaProtectionParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// UdaProtectionParamsPrimaryFields Parameters to customize existing/ default form fields.
//
// swagger:model UdaProtectionParamsPrimaryFields
type UdaProtectionParamsPrimaryFields struct {

	// full backup args
	FullBackupArgs *UdaProtectionParamsPrimaryFieldsFullBackupArgs `json:"fullBackupArgs,omitempty"`

	// incr backup args
	IncrBackupArgs *UdaProtectionParamsPrimaryFieldsIncrBackupArgs `json:"incrBackupArgs,omitempty"`

	// log backup args
	LogBackupArgs *UdaProtectionParamsPrimaryFieldsLogBackupArgs `json:"logBackupArgs,omitempty"`
}

// Validate validates this uda protection params primary fields
func (m *UdaProtectionParamsPrimaryFields) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFullBackupArgs(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIncrBackupArgs(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLogBackupArgs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UdaProtectionParamsPrimaryFields) validateFullBackupArgs(formats strfmt.Registry) error {
	if swag.IsZero(m.FullBackupArgs) { // not required
		return nil
	}

	if m.FullBackupArgs != nil {
		if err := m.FullBackupArgs.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("primaryFields" + "." + "fullBackupArgs")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("primaryFields" + "." + "fullBackupArgs")
			}
			return err
		}
	}

	return nil
}

func (m *UdaProtectionParamsPrimaryFields) validateIncrBackupArgs(formats strfmt.Registry) error {
	if swag.IsZero(m.IncrBackupArgs) { // not required
		return nil
	}

	if m.IncrBackupArgs != nil {
		if err := m.IncrBackupArgs.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("primaryFields" + "." + "incrBackupArgs")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("primaryFields" + "." + "incrBackupArgs")
			}
			return err
		}
	}

	return nil
}

func (m *UdaProtectionParamsPrimaryFields) validateLogBackupArgs(formats strfmt.Registry) error {
	if swag.IsZero(m.LogBackupArgs) { // not required
		return nil
	}

	if m.LogBackupArgs != nil {
		if err := m.LogBackupArgs.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("primaryFields" + "." + "logBackupArgs")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("primaryFields" + "." + "logBackupArgs")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this uda protection params primary fields based on the context it is used
func (m *UdaProtectionParamsPrimaryFields) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateFullBackupArgs(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateIncrBackupArgs(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateLogBackupArgs(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UdaProtectionParamsPrimaryFields) contextValidateFullBackupArgs(ctx context.Context, formats strfmt.Registry) error {

	if m.FullBackupArgs != nil {

		if swag.IsZero(m.FullBackupArgs) { // not required
			return nil
		}

		if err := m.FullBackupArgs.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("primaryFields" + "." + "fullBackupArgs")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("primaryFields" + "." + "fullBackupArgs")
			}
			return err
		}
	}

	return nil
}

func (m *UdaProtectionParamsPrimaryFields) contextValidateIncrBackupArgs(ctx context.Context, formats strfmt.Registry) error {

	if m.IncrBackupArgs != nil {

		if swag.IsZero(m.IncrBackupArgs) { // not required
			return nil
		}

		if err := m.IncrBackupArgs.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("primaryFields" + "." + "incrBackupArgs")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("primaryFields" + "." + "incrBackupArgs")
			}
			return err
		}
	}

	return nil
}

func (m *UdaProtectionParamsPrimaryFields) contextValidateLogBackupArgs(ctx context.Context, formats strfmt.Registry) error {

	if m.LogBackupArgs != nil {

		if swag.IsZero(m.LogBackupArgs) { // not required
			return nil
		}

		if err := m.LogBackupArgs.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("primaryFields" + "." + "logBackupArgs")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("primaryFields" + "." + "logBackupArgs")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UdaProtectionParamsPrimaryFields) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UdaProtectionParamsPrimaryFields) UnmarshalBinary(b []byte) error {
	var res UdaProtectionParamsPrimaryFields
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// UdaProtectionParamsPrimaryFieldsFullBackupArgs Specifies the custom arguments to be supplied to the full backup script when a full backup is enabled in the policy.
//
// swagger:model UdaProtectionParamsPrimaryFieldsFullBackupArgs
type UdaProtectionParamsPrimaryFieldsFullBackupArgs struct {

	// Default value for the field.
	DefaultValue *string `json:"defaultValue,omitempty"`

	// Whether the field will be only a readonly field on the UI.
	Readonly *bool `json:"readonly,omitempty"`

	// Specifies if the field will be hidden on the UI screen or not.
	Hidden *bool `json:"hidden,omitempty"`

	// Whether the field is mandatory.
	Required *bool `json:"required,omitempty"`
}

// Validate validates this uda protection params primary fields full backup args
func (m *UdaProtectionParamsPrimaryFieldsFullBackupArgs) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this uda protection params primary fields full backup args based on context it is used
func (m *UdaProtectionParamsPrimaryFieldsFullBackupArgs) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UdaProtectionParamsPrimaryFieldsFullBackupArgs) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UdaProtectionParamsPrimaryFieldsFullBackupArgs) UnmarshalBinary(b []byte) error {
	var res UdaProtectionParamsPrimaryFieldsFullBackupArgs
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// UdaProtectionParamsPrimaryFieldsIncrBackupArgs Specifies the custom arguments to be supplied to the incremental backup script when an incremental backup is enabled in the policy.
//
// swagger:model UdaProtectionParamsPrimaryFieldsIncrBackupArgs
type UdaProtectionParamsPrimaryFieldsIncrBackupArgs struct {

	// Default value for the field.
	DefaultValue *string `json:"defaultValue,omitempty"`

	// Whether the field will be only a readonly field on the UI.
	Readonly *bool `json:"readonly,omitempty"`

	// Specifies if the field will be hidden on the UI screen or not.
	Hidden *bool `json:"hidden,omitempty"`

	// Whether the field is mandatory.
	Required *bool `json:"required,omitempty"`
}

// Validate validates this uda protection params primary fields incr backup args
func (m *UdaProtectionParamsPrimaryFieldsIncrBackupArgs) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this uda protection params primary fields incr backup args based on context it is used
func (m *UdaProtectionParamsPrimaryFieldsIncrBackupArgs) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UdaProtectionParamsPrimaryFieldsIncrBackupArgs) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UdaProtectionParamsPrimaryFieldsIncrBackupArgs) UnmarshalBinary(b []byte) error {
	var res UdaProtectionParamsPrimaryFieldsIncrBackupArgs
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// UdaProtectionParamsPrimaryFieldsLogBackupArgs Specifies the custom arguments to be supplied to the log backup script when a log backup is enabled in the policy.
//
// swagger:model UdaProtectionParamsPrimaryFieldsLogBackupArgs
type UdaProtectionParamsPrimaryFieldsLogBackupArgs struct {

	// Default value for the field.
	DefaultValue *string `json:"defaultValue,omitempty"`

	// Whether the field will be only a readonly field on the UI.
	Readonly *bool `json:"readonly,omitempty"`

	// Specifies if the field will be hidden on the UI screen or not.
	Hidden *bool `json:"hidden,omitempty"`

	// Whether the field is mandatory.
	Required *bool `json:"required,omitempty"`
}

// Validate validates this uda protection params primary fields log backup args
func (m *UdaProtectionParamsPrimaryFieldsLogBackupArgs) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this uda protection params primary fields log backup args based on context it is used
func (m *UdaProtectionParamsPrimaryFieldsLogBackupArgs) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UdaProtectionParamsPrimaryFieldsLogBackupArgs) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UdaProtectionParamsPrimaryFieldsLogBackupArgs) UnmarshalBinary(b []byte) error {
	var res UdaProtectionParamsPrimaryFieldsLogBackupArgs
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
