// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WeekDays Week Days type.
//
// Week Days type.
//
// swagger:model WeekDays
type WeekDays struct {

	// Specifies Week Days type.
	// Enum: ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]
	WeekDays string `json:"weekDays,omitempty"`
}

// Validate validates this week days
func (m *WeekDays) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateWeekDays(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var weekDaysTypeWeekDaysPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		weekDaysTypeWeekDaysPropEnum = append(weekDaysTypeWeekDaysPropEnum, v)
	}
}

const (

	// WeekDaysWeekDaysSunday captures enum value "Sunday"
	WeekDaysWeekDaysSunday string = "Sunday"

	// WeekDaysWeekDaysMonday captures enum value "Monday"
	WeekDaysWeekDaysMonday string = "Monday"

	// WeekDaysWeekDaysTuesday captures enum value "Tuesday"
	WeekDaysWeekDaysTuesday string = "Tuesday"

	// WeekDaysWeekDaysWednesday captures enum value "Wednesday"
	WeekDaysWeekDaysWednesday string = "Wednesday"

	// WeekDaysWeekDaysThursday captures enum value "Thursday"
	WeekDaysWeekDaysThursday string = "Thursday"

	// WeekDaysWeekDaysFriday captures enum value "Friday"
	WeekDaysWeekDaysFriday string = "Friday"

	// WeekDaysWeekDaysSaturday captures enum value "Saturday"
	WeekDaysWeekDaysSaturday string = "Saturday"
)

// prop value enum
func (m *WeekDays) validateWeekDaysEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, weekDaysTypeWeekDaysPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *WeekDays) validateWeekDays(formats strfmt.Registry) error {
	if swag.IsZero(m.WeekDays) { // not required
		return nil
	}

	// value enum
	if err := m.validateWeekDaysEnum("weekDays", "body", m.WeekDays); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this week days based on context it is used
func (m *WeekDays) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WeekDays) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WeekDays) UnmarshalBinary(b []byte) error {
	var res WeekDays
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
