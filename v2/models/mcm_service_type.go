// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// McmServiceType Helios Services
//
// Specifies the different helios services.
//
// swagger:model McmServiceType
type McmServiceType struct {

	// Specifies the different helios services.
	// Enum: ["Dmaas","Mcm","DataGovern","FortKnox","SiteContinuity","SiteContinuity2","DataInsights"]
	Value string `json:"value,omitempty"`
}

// Validate validates this mcm service type
func (m *McmServiceType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var mcmServiceTypeTypeValuePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Dmaas","Mcm","DataGovern","FortKnox","SiteContinuity","SiteContinuity2","DataInsights"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mcmServiceTypeTypeValuePropEnum = append(mcmServiceTypeTypeValuePropEnum, v)
	}
}

const (

	// McmServiceTypeValueDmaas captures enum value "Dmaas"
	McmServiceTypeValueDmaas string = "Dmaas"

	// McmServiceTypeValueMcm captures enum value "Mcm"
	McmServiceTypeValueMcm string = "Mcm"

	// McmServiceTypeValueDataGovern captures enum value "DataGovern"
	McmServiceTypeValueDataGovern string = "DataGovern"

	// McmServiceTypeValueFortKnox captures enum value "FortKnox"
	McmServiceTypeValueFortKnox string = "FortKnox"

	// McmServiceTypeValueSiteContinuity captures enum value "SiteContinuity"
	McmServiceTypeValueSiteContinuity string = "SiteContinuity"

	// McmServiceTypeValueSiteContinuity2 captures enum value "SiteContinuity2"
	McmServiceTypeValueSiteContinuity2 string = "SiteContinuity2"

	// McmServiceTypeValueDataInsights captures enum value "DataInsights"
	McmServiceTypeValueDataInsights string = "DataInsights"
)

// prop value enum
func (m *McmServiceType) validateValueEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, mcmServiceTypeTypeValuePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *McmServiceType) validateValue(formats strfmt.Registry) error {
	if swag.IsZero(m.Value) { // not required
		return nil
	}

	// value enum
	if err := m.validateValueEnum("value", "body", m.Value); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this mcm service type based on context it is used
func (m *McmServiceType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *McmServiceType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *McmServiceType) UnmarshalBinary(b []byte) error {
	var res McmServiceType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
