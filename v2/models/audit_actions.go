// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AuditActions Audit Actions
//
// # Audit Actions
//
// swagger:model AuditActions
type AuditActions struct {

	// Audit Actions
	// Enum: ["Login","Logout","Create","Modify","Delete","Activate","Deactivate","Pause","Resume","RunNow","Clone","Recover","Cancel","Register","Unregister","Update","Refresh","Upgrade","Upload","Download","Rename","Accept","Mark","Close","Join","DisJoin","Overwrite","MarkRemoval","CloudSpin","Assign","Unassign","NotificationRule","ScheduleReport","Install","Uninstall","Stop","Start","Restart","RunDiagnostics","Apply","Revert","Import","Validate","ClusterExpand","Fetch","Search","PrepareFailover","Failover","PrepareFailback","Failback","Teardown","RetryReplication","ManualSync","Protect","RetryExecution","Add","Schedule"]
	Actions string `json:"actions,omitempty"`
}

// Validate validates this audit actions
func (m *AuditActions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var auditActionsTypeActionsPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Login","Logout","Create","Modify","Delete","Activate","Deactivate","Pause","Resume","RunNow","Clone","Recover","Cancel","Register","Unregister","Update","Refresh","Upgrade","Upload","Download","Rename","Accept","Mark","Close","Join","DisJoin","Overwrite","MarkRemoval","CloudSpin","Assign","Unassign","NotificationRule","ScheduleReport","Install","Uninstall","Stop","Start","Restart","RunDiagnostics","Apply","Revert","Import","Validate","ClusterExpand","Fetch","Search","PrepareFailover","Failover","PrepareFailback","Failback","Teardown","RetryReplication","ManualSync","Protect","RetryExecution","Add","Schedule"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		auditActionsTypeActionsPropEnum = append(auditActionsTypeActionsPropEnum, v)
	}
}

const (

	// AuditActionsActionsLogin captures enum value "Login"
	AuditActionsActionsLogin string = "Login"

	// AuditActionsActionsLogout captures enum value "Logout"
	AuditActionsActionsLogout string = "Logout"

	// AuditActionsActionsCreate captures enum value "Create"
	AuditActionsActionsCreate string = "Create"

	// AuditActionsActionsModify captures enum value "Modify"
	AuditActionsActionsModify string = "Modify"

	// AuditActionsActionsDelete captures enum value "Delete"
	AuditActionsActionsDelete string = "Delete"

	// AuditActionsActionsActivate captures enum value "Activate"
	AuditActionsActionsActivate string = "Activate"

	// AuditActionsActionsDeactivate captures enum value "Deactivate"
	AuditActionsActionsDeactivate string = "Deactivate"

	// AuditActionsActionsPause captures enum value "Pause"
	AuditActionsActionsPause string = "Pause"

	// AuditActionsActionsResume captures enum value "Resume"
	AuditActionsActionsResume string = "Resume"

	// AuditActionsActionsRunNow captures enum value "RunNow"
	AuditActionsActionsRunNow string = "RunNow"

	// AuditActionsActionsClone captures enum value "Clone"
	AuditActionsActionsClone string = "Clone"

	// AuditActionsActionsRecover captures enum value "Recover"
	AuditActionsActionsRecover string = "Recover"

	// AuditActionsActionsCancel captures enum value "Cancel"
	AuditActionsActionsCancel string = "Cancel"

	// AuditActionsActionsRegister captures enum value "Register"
	AuditActionsActionsRegister string = "Register"

	// AuditActionsActionsUnregister captures enum value "Unregister"
	AuditActionsActionsUnregister string = "Unregister"

	// AuditActionsActionsUpdate captures enum value "Update"
	AuditActionsActionsUpdate string = "Update"

	// AuditActionsActionsRefresh captures enum value "Refresh"
	AuditActionsActionsRefresh string = "Refresh"

	// AuditActionsActionsUpgrade captures enum value "Upgrade"
	AuditActionsActionsUpgrade string = "Upgrade"

	// AuditActionsActionsUpload captures enum value "Upload"
	AuditActionsActionsUpload string = "Upload"

	// AuditActionsActionsDownload captures enum value "Download"
	AuditActionsActionsDownload string = "Download"

	// AuditActionsActionsRename captures enum value "Rename"
	AuditActionsActionsRename string = "Rename"

	// AuditActionsActionsAccept captures enum value "Accept"
	AuditActionsActionsAccept string = "Accept"

	// AuditActionsActionsMark captures enum value "Mark"
	AuditActionsActionsMark string = "Mark"

	// AuditActionsActionsClose captures enum value "Close"
	AuditActionsActionsClose string = "Close"

	// AuditActionsActionsJoin captures enum value "Join"
	AuditActionsActionsJoin string = "Join"

	// AuditActionsActionsDisJoin captures enum value "DisJoin"
	AuditActionsActionsDisJoin string = "DisJoin"

	// AuditActionsActionsOverwrite captures enum value "Overwrite"
	AuditActionsActionsOverwrite string = "Overwrite"

	// AuditActionsActionsMarkRemoval captures enum value "MarkRemoval"
	AuditActionsActionsMarkRemoval string = "MarkRemoval"

	// AuditActionsActionsCloudSpin captures enum value "CloudSpin"
	AuditActionsActionsCloudSpin string = "CloudSpin"

	// AuditActionsActionsAssign captures enum value "Assign"
	AuditActionsActionsAssign string = "Assign"

	// AuditActionsActionsUnassign captures enum value "Unassign"
	AuditActionsActionsUnassign string = "Unassign"

	// AuditActionsActionsNotificationRule captures enum value "NotificationRule"
	AuditActionsActionsNotificationRule string = "NotificationRule"

	// AuditActionsActionsScheduleReport captures enum value "ScheduleReport"
	AuditActionsActionsScheduleReport string = "ScheduleReport"

	// AuditActionsActionsInstall captures enum value "Install"
	AuditActionsActionsInstall string = "Install"

	// AuditActionsActionsUninstall captures enum value "Uninstall"
	AuditActionsActionsUninstall string = "Uninstall"

	// AuditActionsActionsStop captures enum value "Stop"
	AuditActionsActionsStop string = "Stop"

	// AuditActionsActionsStart captures enum value "Start"
	AuditActionsActionsStart string = "Start"

	// AuditActionsActionsRestart captures enum value "Restart"
	AuditActionsActionsRestart string = "Restart"

	// AuditActionsActionsRunDiagnostics captures enum value "RunDiagnostics"
	AuditActionsActionsRunDiagnostics string = "RunDiagnostics"

	// AuditActionsActionsApply captures enum value "Apply"
	AuditActionsActionsApply string = "Apply"

	// AuditActionsActionsRevert captures enum value "Revert"
	AuditActionsActionsRevert string = "Revert"

	// AuditActionsActionsImport captures enum value "Import"
	AuditActionsActionsImport string = "Import"

	// AuditActionsActionsValidate captures enum value "Validate"
	AuditActionsActionsValidate string = "Validate"

	// AuditActionsActionsClusterExpand captures enum value "ClusterExpand"
	AuditActionsActionsClusterExpand string = "ClusterExpand"

	// AuditActionsActionsFetch captures enum value "Fetch"
	AuditActionsActionsFetch string = "Fetch"

	// AuditActionsActionsSearch captures enum value "Search"
	AuditActionsActionsSearch string = "Search"

	// AuditActionsActionsPrepareFailover captures enum value "PrepareFailover"
	AuditActionsActionsPrepareFailover string = "PrepareFailover"

	// AuditActionsActionsFailover captures enum value "Failover"
	AuditActionsActionsFailover string = "Failover"

	// AuditActionsActionsPrepareFailback captures enum value "PrepareFailback"
	AuditActionsActionsPrepareFailback string = "PrepareFailback"

	// AuditActionsActionsFailback captures enum value "Failback"
	AuditActionsActionsFailback string = "Failback"

	// AuditActionsActionsTeardown captures enum value "Teardown"
	AuditActionsActionsTeardown string = "Teardown"

	// AuditActionsActionsRetryReplication captures enum value "RetryReplication"
	AuditActionsActionsRetryReplication string = "RetryReplication"

	// AuditActionsActionsManualSync captures enum value "ManualSync"
	AuditActionsActionsManualSync string = "ManualSync"

	// AuditActionsActionsProtect captures enum value "Protect"
	AuditActionsActionsProtect string = "Protect"

	// AuditActionsActionsRetryExecution captures enum value "RetryExecution"
	AuditActionsActionsRetryExecution string = "RetryExecution"

	// AuditActionsActionsAdd captures enum value "Add"
	AuditActionsActionsAdd string = "Add"

	// AuditActionsActionsSchedule captures enum value "Schedule"
	AuditActionsActionsSchedule string = "Schedule"
)

// prop value enum
func (m *AuditActions) validateActionsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, auditActionsTypeActionsPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AuditActions) validateActions(formats strfmt.Registry) error {
	if swag.IsZero(m.Actions) { // not required
		return nil
	}

	// value enum
	if err := m.validateActionsEnum("actions", "body", m.Actions); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this audit actions based on context it is used
func (m *AuditActions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AuditActions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AuditActions) UnmarshalBinary(b []byte) error {
	var res AuditActions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
