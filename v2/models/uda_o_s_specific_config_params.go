// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UdaOSSpecificConfigParams UDA operating system configuration params.
//
// Specifices operating system specific config.
//
// swagger:model UdaOSSpecificConfigParams
type UdaOSSpecificConfigParams struct {

	// Name of the operating system.
	OsType string `json:"osType,omitempty"`

	// Specifies the basic configuration for the operating system type as a json string.
	IndexConfig *string `json:"indexConfig,omitempty"`

	// Specifies the registration config as json string.
	RegistrationConfig *string `json:"registrationConfig,omitempty"`

	// Specifies the protection config as json string.
	ProtectionConfig *string `json:"protectionConfig,omitempty"`

	// Specifies the recovery config as json string.
	RecoveryConfig *string `json:"recoveryConfig,omitempty"`
}

// Validate validates this uda o s specific config params
func (m *UdaOSSpecificConfigParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this uda o s specific config params based on context it is used
func (m *UdaOSSpecificConfigParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UdaOSSpecificConfigParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UdaOSSpecificConfigParams) UnmarshalBinary(b []byte) error {
	var res UdaOSSpecificConfigParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
