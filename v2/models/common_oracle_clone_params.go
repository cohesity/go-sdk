// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CommonOracleCloneParams Specifies the common properties of an Oracle clone.
//
// swagger:model CommonOracleCloneParams
type CommonOracleCloneParams struct {

	// Specifies the name of the cloned database.
	// Required: true
	DbName *string `json:"dbName"`

	// Specifies the home folder for the cloned database.
	// Required: true
	HomeFolder *string `json:"homeFolder"`

	// Specifies the base folder of Oracle installation on the target host.
	// Required: true
	BaseFolder *string `json:"baseFolder"`

	// Specifies the System Global Area (SGA) for the clone database.
	Sga *string `json:"sga,omitempty"`
}

// Validate validates this common oracle clone params
func (m *CommonOracleCloneParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDbName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHomeFolder(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBaseFolder(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CommonOracleCloneParams) validateDbName(formats strfmt.Registry) error {

	if err := validate.Required("dbName", "body", m.DbName); err != nil {
		return err
	}

	return nil
}

func (m *CommonOracleCloneParams) validateHomeFolder(formats strfmt.Registry) error {

	if err := validate.Required("homeFolder", "body", m.HomeFolder); err != nil {
		return err
	}

	return nil
}

func (m *CommonOracleCloneParams) validateBaseFolder(formats strfmt.Registry) error {

	if err := validate.Required("baseFolder", "body", m.BaseFolder); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this common oracle clone params based on context it is used
func (m *CommonOracleCloneParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CommonOracleCloneParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CommonOracleCloneParams) UnmarshalBinary(b []byte) error {
	var res CommonOracleCloneParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
