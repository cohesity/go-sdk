// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TearDownStatus TearDownStatus
//
// # Tear Down Status
//
// swagger:model TearDownStatus
type TearDownStatus struct {

	// Specifies the tear down status.
	// Enum: ["DestroyScheduled","Destroying","Destroyed","DestroyError"]
	TearDownStatus string `json:"tearDownStatus,omitempty"`
}

// Validate validates this tear down status
func (m *TearDownStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTearDownStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var tearDownStatusTypeTearDownStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DestroyScheduled","Destroying","Destroyed","DestroyError"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tearDownStatusTypeTearDownStatusPropEnum = append(tearDownStatusTypeTearDownStatusPropEnum, v)
	}
}

const (

	// TearDownStatusTearDownStatusDestroyScheduled captures enum value "DestroyScheduled"
	TearDownStatusTearDownStatusDestroyScheduled string = "DestroyScheduled"

	// TearDownStatusTearDownStatusDestroying captures enum value "Destroying"
	TearDownStatusTearDownStatusDestroying string = "Destroying"

	// TearDownStatusTearDownStatusDestroyed captures enum value "Destroyed"
	TearDownStatusTearDownStatusDestroyed string = "Destroyed"

	// TearDownStatusTearDownStatusDestroyError captures enum value "DestroyError"
	TearDownStatusTearDownStatusDestroyError string = "DestroyError"
)

// prop value enum
func (m *TearDownStatus) validateTearDownStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, tearDownStatusTypeTearDownStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *TearDownStatus) validateTearDownStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.TearDownStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateTearDownStatusEnum("tearDownStatus", "body", m.TearDownStatus); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this tear down status based on context it is used
func (m *TearDownStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TearDownStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TearDownStatus) UnmarshalBinary(b []byte) error {
	var res TearDownStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
