// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PublicFolderItemType Public Folder item types for search.
//
// Public Folder item types for search.
//
// swagger:model PublicFolderItemType
type PublicFolderItemType struct {

	// Specifies the Public Folder item types for search.
	// Enum: ["Calendar","Contact","Post","Folder","Task","Journal","Note"]
	Type string `json:"type,omitempty"`
}

// Validate validates this public folder item type
func (m *PublicFolderItemType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var publicFolderItemTypeTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Calendar","Contact","Post","Folder","Task","Journal","Note"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		publicFolderItemTypeTypeTypePropEnum = append(publicFolderItemTypeTypeTypePropEnum, v)
	}
}

const (

	// PublicFolderItemTypeTypeCalendar captures enum value "Calendar"
	PublicFolderItemTypeTypeCalendar string = "Calendar"

	// PublicFolderItemTypeTypeContact captures enum value "Contact"
	PublicFolderItemTypeTypeContact string = "Contact"

	// PublicFolderItemTypeTypePost captures enum value "Post"
	PublicFolderItemTypeTypePost string = "Post"

	// PublicFolderItemTypeTypeFolder captures enum value "Folder"
	PublicFolderItemTypeTypeFolder string = "Folder"

	// PublicFolderItemTypeTypeTask captures enum value "Task"
	PublicFolderItemTypeTypeTask string = "Task"

	// PublicFolderItemTypeTypeJournal captures enum value "Journal"
	PublicFolderItemTypeTypeJournal string = "Journal"

	// PublicFolderItemTypeTypeNote captures enum value "Note"
	PublicFolderItemTypeTypeNote string = "Note"
)

// prop value enum
func (m *PublicFolderItemType) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, publicFolderItemTypeTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *PublicFolderItemType) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this public folder item type based on context it is used
func (m *PublicFolderItemType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PublicFolderItemType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PublicFolderItemType) UnmarshalBinary(b []byte) error {
	var res PublicFolderItemType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
