// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// McmClusterClaimResponseParams Response of claiming a cluster to Helios.
//
// Specifies the response of claiming a cluster to Helios.
//
// swagger:model McmClusterClaimResponseParams
type McmClusterClaimResponseParams struct {

	// Specifies the cluster id.
	ClusterID *int64 `json:"clusterId,omitempty"`

	// Specifies the cluster incarnation id.
	ClusterIncarnationID *int64 `json:"clusterIncarnationId,omitempty"`

	// Specifies the cluster name.
	ClusterName *string `json:"clusterName,omitempty"`

	// Specifies the Salesforce account id used to claim the cluster.
	SfAccountID *string `json:"sfAccountId,omitempty"`

	// Specifies the cluster certificate.
	ClusterCertificate *string `json:"clusterCertificate,omitempty"`

	// Specifies the cluster private key.
	ClusterPrivateKey *string `json:"clusterPrivateKey,omitempty"`

	// Specifies the passphrase (if used) to encrypt the cluster private key.
	Passphrase *string `json:"passphrase,omitempty"`

	// Specifies the CA chain that is used to sign the cluster certificate.
	ClusterCaChain *string `json:"clusterCaChain,omitempty"`

	// Specifies the Helios certificate that can be used to authenticate API calls made from Helios to cluster.
	HeliosCertificate *string `json:"heliosCertificate,omitempty"`
}

// Validate validates this mcm cluster claim response params
func (m *McmClusterClaimResponseParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this mcm cluster claim response params based on context it is used
func (m *McmClusterClaimResponseParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *McmClusterClaimResponseParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *McmClusterClaimResponseParams) UnmarshalBinary(b []byte) error {
	var res McmClusterClaimResponseParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
