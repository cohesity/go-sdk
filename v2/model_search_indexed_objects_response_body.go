/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the SearchIndexedObjectsResponseBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchIndexedObjectsResponseBody{}

// SearchIndexedObjectsResponseBody Specifies the search indexed objects response body.
type SearchIndexedObjectsResponseBody struct {
	// Specifies the total number of indexed objects that match the filter and search criteria. Use this value to determine how many additional requests are required to get the full result.
	Count NullableInt32 `json:"count,omitempty"`
	// Specifies the object type.
	ObjectType *string `json:"objectType,omitempty"`
	// Specifies cookie for resuming search if pagination is being used.
	PaginationCookie NullableString `json:"paginationCookie,omitempty"`
	// Specifies the indexed Cassandra objects.
	CassandraObjects []CassandraIndexedObject `json:"cassandraObjects,omitempty"`
	// Specifies the indexed Couchbase objects.
	CouchbaseObjects []CouchbaseIndexedObject `json:"couchbaseObjects,omitempty"`
	// Specifies the indexed emails and email folders.
	Emails []Email `json:"emails,omitempty"`
	// Specifies the indexed HDFS objects.
	ExchangeObjects []ExchangeIndexedObject `json:"exchangeObjects,omitempty"`
	// Specifies the indexed files.
	Files []File `json:"files,omitempty"`
	// Specifies the indexed Hbase objects.
	HbaseObjects []HbaseIndexedObject `json:"hbaseObjects,omitempty"`
	// Specifies the indexed HDFS objects.
	HdfsObjects []HDFSIndexedObject `json:"hdfsObjects,omitempty"`
	// Specifies the indexed Hive objects.
	HiveObjects []HiveIndexedObject `json:"hiveObjects,omitempty"`
	// Specifies the indexed Mongo objects.
	MongoObjects []MongoIndexedObject `json:"mongoObjects,omitempty"`
	// Specifies the indexed M365 Groups items like group mail items, files etc.
	MsGroupItems []MsGroupItem `json:"msGroupItems,omitempty"`
	// Specifies the indexed one drive items.
	OneDriveItems []DocumentLibraryItem `json:"oneDriveItems,omitempty"`
	// Specifies the indexed Public folder items.
	PublicFolderItems []PublicFolderItem `json:"publicFolderItems,omitempty"`
	SfdcRecords *SfdcRecords `json:"sfdcRecords,omitempty"`
	// Specifies the indexed Sharepoint items.
	SharepointItems []SharepointItem `json:"sharepointItems,omitempty"`
	// Specifies the indexed M365 Teams items like channels, files etc.
	TeamsItems []TeamsItem `json:"teamsItems,omitempty"`
	// Specifies the indexed Universal Data Adapter objects.
	UdaObjects []UdaIndexedObject `json:"udaObjects,omitempty"`
}

// NewSearchIndexedObjectsResponseBody instantiates a new SearchIndexedObjectsResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchIndexedObjectsResponseBody() *SearchIndexedObjectsResponseBody {
	this := SearchIndexedObjectsResponseBody{}
	return &this
}

// NewSearchIndexedObjectsResponseBodyWithDefaults instantiates a new SearchIndexedObjectsResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchIndexedObjectsResponseBodyWithDefaults() *SearchIndexedObjectsResponseBody {
	this := SearchIndexedObjectsResponseBody{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchIndexedObjectsResponseBody) GetCount() int32 {
	if o == nil || IsNil(o.Count.Get()) {
		var ret int32
		return ret
	}
	return *o.Count.Get()
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchIndexedObjectsResponseBody) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Count.Get(), o.Count.IsSet()
}

// HasCount returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasCount() bool {
	if o != nil && o.Count.IsSet() {
		return true
	}

	return false
}

// SetCount gets a reference to the given NullableInt32 and assigns it to the Count field.
func (o *SearchIndexedObjectsResponseBody) SetCount(v int32) {
	o.Count.Set(&v)
}
// SetCountNil sets the value for Count to be an explicit nil
func (o *SearchIndexedObjectsResponseBody) SetCountNil() {
	o.Count.Set(nil)
}

// UnsetCount ensures that no value is present for Count, not even an explicit nil
func (o *SearchIndexedObjectsResponseBody) UnsetCount() {
	o.Count.Unset()
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *SearchIndexedObjectsResponseBody) GetObjectType() string {
	if o == nil || IsNil(o.ObjectType) {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsResponseBody) GetObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasObjectType() bool {
	if o != nil && !IsNil(o.ObjectType) {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *SearchIndexedObjectsResponseBody) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetPaginationCookie returns the PaginationCookie field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchIndexedObjectsResponseBody) GetPaginationCookie() string {
	if o == nil || IsNil(o.PaginationCookie.Get()) {
		var ret string
		return ret
	}
	return *o.PaginationCookie.Get()
}

// GetPaginationCookieOk returns a tuple with the PaginationCookie field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchIndexedObjectsResponseBody) GetPaginationCookieOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaginationCookie.Get(), o.PaginationCookie.IsSet()
}

// HasPaginationCookie returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasPaginationCookie() bool {
	if o != nil && o.PaginationCookie.IsSet() {
		return true
	}

	return false
}

// SetPaginationCookie gets a reference to the given NullableString and assigns it to the PaginationCookie field.
func (o *SearchIndexedObjectsResponseBody) SetPaginationCookie(v string) {
	o.PaginationCookie.Set(&v)
}
// SetPaginationCookieNil sets the value for PaginationCookie to be an explicit nil
func (o *SearchIndexedObjectsResponseBody) SetPaginationCookieNil() {
	o.PaginationCookie.Set(nil)
}

// UnsetPaginationCookie ensures that no value is present for PaginationCookie, not even an explicit nil
func (o *SearchIndexedObjectsResponseBody) UnsetPaginationCookie() {
	o.PaginationCookie.Unset()
}

// GetCassandraObjects returns the CassandraObjects field value if set, zero value otherwise.
func (o *SearchIndexedObjectsResponseBody) GetCassandraObjects() []CassandraIndexedObject {
	if o == nil || IsNil(o.CassandraObjects) {
		var ret []CassandraIndexedObject
		return ret
	}
	return o.CassandraObjects
}

// GetCassandraObjectsOk returns a tuple with the CassandraObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsResponseBody) GetCassandraObjectsOk() ([]CassandraIndexedObject, bool) {
	if o == nil || IsNil(o.CassandraObjects) {
		return nil, false
	}
	return o.CassandraObjects, true
}

// HasCassandraObjects returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasCassandraObjects() bool {
	if o != nil && !IsNil(o.CassandraObjects) {
		return true
	}

	return false
}

// SetCassandraObjects gets a reference to the given []CassandraIndexedObject and assigns it to the CassandraObjects field.
func (o *SearchIndexedObjectsResponseBody) SetCassandraObjects(v []CassandraIndexedObject) {
	o.CassandraObjects = v
}

// GetCouchbaseObjects returns the CouchbaseObjects field value if set, zero value otherwise.
func (o *SearchIndexedObjectsResponseBody) GetCouchbaseObjects() []CouchbaseIndexedObject {
	if o == nil || IsNil(o.CouchbaseObjects) {
		var ret []CouchbaseIndexedObject
		return ret
	}
	return o.CouchbaseObjects
}

// GetCouchbaseObjectsOk returns a tuple with the CouchbaseObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsResponseBody) GetCouchbaseObjectsOk() ([]CouchbaseIndexedObject, bool) {
	if o == nil || IsNil(o.CouchbaseObjects) {
		return nil, false
	}
	return o.CouchbaseObjects, true
}

// HasCouchbaseObjects returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasCouchbaseObjects() bool {
	if o != nil && !IsNil(o.CouchbaseObjects) {
		return true
	}

	return false
}

// SetCouchbaseObjects gets a reference to the given []CouchbaseIndexedObject and assigns it to the CouchbaseObjects field.
func (o *SearchIndexedObjectsResponseBody) SetCouchbaseObjects(v []CouchbaseIndexedObject) {
	o.CouchbaseObjects = v
}

// GetEmails returns the Emails field value if set, zero value otherwise.
func (o *SearchIndexedObjectsResponseBody) GetEmails() []Email {
	if o == nil || IsNil(o.Emails) {
		var ret []Email
		return ret
	}
	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsResponseBody) GetEmailsOk() ([]Email, bool) {
	if o == nil || IsNil(o.Emails) {
		return nil, false
	}
	return o.Emails, true
}

// HasEmails returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasEmails() bool {
	if o != nil && !IsNil(o.Emails) {
		return true
	}

	return false
}

// SetEmails gets a reference to the given []Email and assigns it to the Emails field.
func (o *SearchIndexedObjectsResponseBody) SetEmails(v []Email) {
	o.Emails = v
}

// GetExchangeObjects returns the ExchangeObjects field value if set, zero value otherwise.
func (o *SearchIndexedObjectsResponseBody) GetExchangeObjects() []ExchangeIndexedObject {
	if o == nil || IsNil(o.ExchangeObjects) {
		var ret []ExchangeIndexedObject
		return ret
	}
	return o.ExchangeObjects
}

// GetExchangeObjectsOk returns a tuple with the ExchangeObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsResponseBody) GetExchangeObjectsOk() ([]ExchangeIndexedObject, bool) {
	if o == nil || IsNil(o.ExchangeObjects) {
		return nil, false
	}
	return o.ExchangeObjects, true
}

// HasExchangeObjects returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasExchangeObjects() bool {
	if o != nil && !IsNil(o.ExchangeObjects) {
		return true
	}

	return false
}

// SetExchangeObjects gets a reference to the given []ExchangeIndexedObject and assigns it to the ExchangeObjects field.
func (o *SearchIndexedObjectsResponseBody) SetExchangeObjects(v []ExchangeIndexedObject) {
	o.ExchangeObjects = v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *SearchIndexedObjectsResponseBody) GetFiles() []File {
	if o == nil || IsNil(o.Files) {
		var ret []File
		return ret
	}
	return o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsResponseBody) GetFilesOk() ([]File, bool) {
	if o == nil || IsNil(o.Files) {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasFiles() bool {
	if o != nil && !IsNil(o.Files) {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []File and assigns it to the Files field.
func (o *SearchIndexedObjectsResponseBody) SetFiles(v []File) {
	o.Files = v
}

// GetHbaseObjects returns the HbaseObjects field value if set, zero value otherwise.
func (o *SearchIndexedObjectsResponseBody) GetHbaseObjects() []HbaseIndexedObject {
	if o == nil || IsNil(o.HbaseObjects) {
		var ret []HbaseIndexedObject
		return ret
	}
	return o.HbaseObjects
}

// GetHbaseObjectsOk returns a tuple with the HbaseObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsResponseBody) GetHbaseObjectsOk() ([]HbaseIndexedObject, bool) {
	if o == nil || IsNil(o.HbaseObjects) {
		return nil, false
	}
	return o.HbaseObjects, true
}

// HasHbaseObjects returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasHbaseObjects() bool {
	if o != nil && !IsNil(o.HbaseObjects) {
		return true
	}

	return false
}

// SetHbaseObjects gets a reference to the given []HbaseIndexedObject and assigns it to the HbaseObjects field.
func (o *SearchIndexedObjectsResponseBody) SetHbaseObjects(v []HbaseIndexedObject) {
	o.HbaseObjects = v
}

// GetHdfsObjects returns the HdfsObjects field value if set, zero value otherwise.
func (o *SearchIndexedObjectsResponseBody) GetHdfsObjects() []HDFSIndexedObject {
	if o == nil || IsNil(o.HdfsObjects) {
		var ret []HDFSIndexedObject
		return ret
	}
	return o.HdfsObjects
}

// GetHdfsObjectsOk returns a tuple with the HdfsObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsResponseBody) GetHdfsObjectsOk() ([]HDFSIndexedObject, bool) {
	if o == nil || IsNil(o.HdfsObjects) {
		return nil, false
	}
	return o.HdfsObjects, true
}

// HasHdfsObjects returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasHdfsObjects() bool {
	if o != nil && !IsNil(o.HdfsObjects) {
		return true
	}

	return false
}

// SetHdfsObjects gets a reference to the given []HDFSIndexedObject and assigns it to the HdfsObjects field.
func (o *SearchIndexedObjectsResponseBody) SetHdfsObjects(v []HDFSIndexedObject) {
	o.HdfsObjects = v
}

// GetHiveObjects returns the HiveObjects field value if set, zero value otherwise.
func (o *SearchIndexedObjectsResponseBody) GetHiveObjects() []HiveIndexedObject {
	if o == nil || IsNil(o.HiveObjects) {
		var ret []HiveIndexedObject
		return ret
	}
	return o.HiveObjects
}

// GetHiveObjectsOk returns a tuple with the HiveObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsResponseBody) GetHiveObjectsOk() ([]HiveIndexedObject, bool) {
	if o == nil || IsNil(o.HiveObjects) {
		return nil, false
	}
	return o.HiveObjects, true
}

// HasHiveObjects returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasHiveObjects() bool {
	if o != nil && !IsNil(o.HiveObjects) {
		return true
	}

	return false
}

// SetHiveObjects gets a reference to the given []HiveIndexedObject and assigns it to the HiveObjects field.
func (o *SearchIndexedObjectsResponseBody) SetHiveObjects(v []HiveIndexedObject) {
	o.HiveObjects = v
}

// GetMongoObjects returns the MongoObjects field value if set, zero value otherwise.
func (o *SearchIndexedObjectsResponseBody) GetMongoObjects() []MongoIndexedObject {
	if o == nil || IsNil(o.MongoObjects) {
		var ret []MongoIndexedObject
		return ret
	}
	return o.MongoObjects
}

// GetMongoObjectsOk returns a tuple with the MongoObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsResponseBody) GetMongoObjectsOk() ([]MongoIndexedObject, bool) {
	if o == nil || IsNil(o.MongoObjects) {
		return nil, false
	}
	return o.MongoObjects, true
}

// HasMongoObjects returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasMongoObjects() bool {
	if o != nil && !IsNil(o.MongoObjects) {
		return true
	}

	return false
}

// SetMongoObjects gets a reference to the given []MongoIndexedObject and assigns it to the MongoObjects field.
func (o *SearchIndexedObjectsResponseBody) SetMongoObjects(v []MongoIndexedObject) {
	o.MongoObjects = v
}

// GetMsGroupItems returns the MsGroupItems field value if set, zero value otherwise.
func (o *SearchIndexedObjectsResponseBody) GetMsGroupItems() []MsGroupItem {
	if o == nil || IsNil(o.MsGroupItems) {
		var ret []MsGroupItem
		return ret
	}
	return o.MsGroupItems
}

// GetMsGroupItemsOk returns a tuple with the MsGroupItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsResponseBody) GetMsGroupItemsOk() ([]MsGroupItem, bool) {
	if o == nil || IsNil(o.MsGroupItems) {
		return nil, false
	}
	return o.MsGroupItems, true
}

// HasMsGroupItems returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasMsGroupItems() bool {
	if o != nil && !IsNil(o.MsGroupItems) {
		return true
	}

	return false
}

// SetMsGroupItems gets a reference to the given []MsGroupItem and assigns it to the MsGroupItems field.
func (o *SearchIndexedObjectsResponseBody) SetMsGroupItems(v []MsGroupItem) {
	o.MsGroupItems = v
}

// GetOneDriveItems returns the OneDriveItems field value if set, zero value otherwise.
func (o *SearchIndexedObjectsResponseBody) GetOneDriveItems() []DocumentLibraryItem {
	if o == nil || IsNil(o.OneDriveItems) {
		var ret []DocumentLibraryItem
		return ret
	}
	return o.OneDriveItems
}

// GetOneDriveItemsOk returns a tuple with the OneDriveItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsResponseBody) GetOneDriveItemsOk() ([]DocumentLibraryItem, bool) {
	if o == nil || IsNil(o.OneDriveItems) {
		return nil, false
	}
	return o.OneDriveItems, true
}

// HasOneDriveItems returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasOneDriveItems() bool {
	if o != nil && !IsNil(o.OneDriveItems) {
		return true
	}

	return false
}

// SetOneDriveItems gets a reference to the given []DocumentLibraryItem and assigns it to the OneDriveItems field.
func (o *SearchIndexedObjectsResponseBody) SetOneDriveItems(v []DocumentLibraryItem) {
	o.OneDriveItems = v
}

// GetPublicFolderItems returns the PublicFolderItems field value if set, zero value otherwise.
func (o *SearchIndexedObjectsResponseBody) GetPublicFolderItems() []PublicFolderItem {
	if o == nil || IsNil(o.PublicFolderItems) {
		var ret []PublicFolderItem
		return ret
	}
	return o.PublicFolderItems
}

// GetPublicFolderItemsOk returns a tuple with the PublicFolderItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsResponseBody) GetPublicFolderItemsOk() ([]PublicFolderItem, bool) {
	if o == nil || IsNil(o.PublicFolderItems) {
		return nil, false
	}
	return o.PublicFolderItems, true
}

// HasPublicFolderItems returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasPublicFolderItems() bool {
	if o != nil && !IsNil(o.PublicFolderItems) {
		return true
	}

	return false
}

// SetPublicFolderItems gets a reference to the given []PublicFolderItem and assigns it to the PublicFolderItems field.
func (o *SearchIndexedObjectsResponseBody) SetPublicFolderItems(v []PublicFolderItem) {
	o.PublicFolderItems = v
}

// GetSfdcRecords returns the SfdcRecords field value if set, zero value otherwise.
func (o *SearchIndexedObjectsResponseBody) GetSfdcRecords() SfdcRecords {
	if o == nil || IsNil(o.SfdcRecords) {
		var ret SfdcRecords
		return ret
	}
	return *o.SfdcRecords
}

// GetSfdcRecordsOk returns a tuple with the SfdcRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsResponseBody) GetSfdcRecordsOk() (*SfdcRecords, bool) {
	if o == nil || IsNil(o.SfdcRecords) {
		return nil, false
	}
	return o.SfdcRecords, true
}

// HasSfdcRecords returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasSfdcRecords() bool {
	if o != nil && !IsNil(o.SfdcRecords) {
		return true
	}

	return false
}

// SetSfdcRecords gets a reference to the given SfdcRecords and assigns it to the SfdcRecords field.
func (o *SearchIndexedObjectsResponseBody) SetSfdcRecords(v SfdcRecords) {
	o.SfdcRecords = &v
}

// GetSharepointItems returns the SharepointItems field value if set, zero value otherwise.
func (o *SearchIndexedObjectsResponseBody) GetSharepointItems() []SharepointItem {
	if o == nil || IsNil(o.SharepointItems) {
		var ret []SharepointItem
		return ret
	}
	return o.SharepointItems
}

// GetSharepointItemsOk returns a tuple with the SharepointItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsResponseBody) GetSharepointItemsOk() ([]SharepointItem, bool) {
	if o == nil || IsNil(o.SharepointItems) {
		return nil, false
	}
	return o.SharepointItems, true
}

// HasSharepointItems returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasSharepointItems() bool {
	if o != nil && !IsNil(o.SharepointItems) {
		return true
	}

	return false
}

// SetSharepointItems gets a reference to the given []SharepointItem and assigns it to the SharepointItems field.
func (o *SearchIndexedObjectsResponseBody) SetSharepointItems(v []SharepointItem) {
	o.SharepointItems = v
}

// GetTeamsItems returns the TeamsItems field value if set, zero value otherwise.
func (o *SearchIndexedObjectsResponseBody) GetTeamsItems() []TeamsItem {
	if o == nil || IsNil(o.TeamsItems) {
		var ret []TeamsItem
		return ret
	}
	return o.TeamsItems
}

// GetTeamsItemsOk returns a tuple with the TeamsItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsResponseBody) GetTeamsItemsOk() ([]TeamsItem, bool) {
	if o == nil || IsNil(o.TeamsItems) {
		return nil, false
	}
	return o.TeamsItems, true
}

// HasTeamsItems returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasTeamsItems() bool {
	if o != nil && !IsNil(o.TeamsItems) {
		return true
	}

	return false
}

// SetTeamsItems gets a reference to the given []TeamsItem and assigns it to the TeamsItems field.
func (o *SearchIndexedObjectsResponseBody) SetTeamsItems(v []TeamsItem) {
	o.TeamsItems = v
}

// GetUdaObjects returns the UdaObjects field value if set, zero value otherwise.
func (o *SearchIndexedObjectsResponseBody) GetUdaObjects() []UdaIndexedObject {
	if o == nil || IsNil(o.UdaObjects) {
		var ret []UdaIndexedObject
		return ret
	}
	return o.UdaObjects
}

// GetUdaObjectsOk returns a tuple with the UdaObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIndexedObjectsResponseBody) GetUdaObjectsOk() ([]UdaIndexedObject, bool) {
	if o == nil || IsNil(o.UdaObjects) {
		return nil, false
	}
	return o.UdaObjects, true
}

// HasUdaObjects returns a boolean if a field has been set.
func (o *SearchIndexedObjectsResponseBody) HasUdaObjects() bool {
	if o != nil && !IsNil(o.UdaObjects) {
		return true
	}

	return false
}

// SetUdaObjects gets a reference to the given []UdaIndexedObject and assigns it to the UdaObjects field.
func (o *SearchIndexedObjectsResponseBody) SetUdaObjects(v []UdaIndexedObject) {
	o.UdaObjects = v
}

func (o SearchIndexedObjectsResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchIndexedObjectsResponseBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Count.IsSet() {
		toSerialize["count"] = o.Count.Get()
	}
	if !IsNil(o.ObjectType) {
		toSerialize["objectType"] = o.ObjectType
	}
	if o.PaginationCookie.IsSet() {
		toSerialize["paginationCookie"] = o.PaginationCookie.Get()
	}
	if !IsNil(o.CassandraObjects) {
		toSerialize["cassandraObjects"] = o.CassandraObjects
	}
	if !IsNil(o.CouchbaseObjects) {
		toSerialize["couchbaseObjects"] = o.CouchbaseObjects
	}
	if !IsNil(o.Emails) {
		toSerialize["emails"] = o.Emails
	}
	if !IsNil(o.ExchangeObjects) {
		toSerialize["exchangeObjects"] = o.ExchangeObjects
	}
	if !IsNil(o.Files) {
		toSerialize["files"] = o.Files
	}
	if !IsNil(o.HbaseObjects) {
		toSerialize["hbaseObjects"] = o.HbaseObjects
	}
	if !IsNil(o.HdfsObjects) {
		toSerialize["hdfsObjects"] = o.HdfsObjects
	}
	if !IsNil(o.HiveObjects) {
		toSerialize["hiveObjects"] = o.HiveObjects
	}
	if !IsNil(o.MongoObjects) {
		toSerialize["mongoObjects"] = o.MongoObjects
	}
	if !IsNil(o.MsGroupItems) {
		toSerialize["msGroupItems"] = o.MsGroupItems
	}
	if !IsNil(o.OneDriveItems) {
		toSerialize["oneDriveItems"] = o.OneDriveItems
	}
	if !IsNil(o.PublicFolderItems) {
		toSerialize["publicFolderItems"] = o.PublicFolderItems
	}
	if !IsNil(o.SfdcRecords) {
		toSerialize["sfdcRecords"] = o.SfdcRecords
	}
	if !IsNil(o.SharepointItems) {
		toSerialize["sharepointItems"] = o.SharepointItems
	}
	if !IsNil(o.TeamsItems) {
		toSerialize["teamsItems"] = o.TeamsItems
	}
	if !IsNil(o.UdaObjects) {
		toSerialize["udaObjects"] = o.UdaObjects
	}
	return toSerialize, nil
}

type NullableSearchIndexedObjectsResponseBody struct {
	value *SearchIndexedObjectsResponseBody
	isSet bool
}

func (v NullableSearchIndexedObjectsResponseBody) Get() *SearchIndexedObjectsResponseBody {
	return v.value
}

func (v *NullableSearchIndexedObjectsResponseBody) Set(val *SearchIndexedObjectsResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchIndexedObjectsResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchIndexedObjectsResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchIndexedObjectsResponseBody(val *SearchIndexedObjectsResponseBody) *NullableSearchIndexedObjectsResponseBody {
	return &NullableSearchIndexedObjectsResponseBody{value: val, isSet: true}
}

func (v NullableSearchIndexedObjectsResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchIndexedObjectsResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


