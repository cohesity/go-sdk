/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the TargetMsTeamParamTargetTeamsChannelParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TargetMsTeamParamTargetTeamsChannelParam{}

// TargetMsTeamParamTargetTeamsChannelParam Specifies the ms team target channel parameters in case of granular restore to alternate location.
type TargetMsTeamParamTargetTeamsChannelParam struct {
	// List of owners for the private channel. At least one owner is needed to create a private channel
	ChannelOwners []RecoveryObjectIdentifier `json:"channelOwners,omitempty"`
	// Specifies whether to create a public or private channel
	ChannelType *string `json:"channelType,omitempty"`
	// Specifies whether we should create a new channel. If this is true name must not be empty
	CreateNewChannel NullableBool `json:"createNewChannel,omitempty"`
	// Specifies the id of the target channel.
	Id NullableString `json:"id,omitempty"`
	// Specifies the name of the target channel.
	Name NullableString `json:"name,omitempty"`
}

// NewTargetMsTeamParamTargetTeamsChannelParam instantiates a new TargetMsTeamParamTargetTeamsChannelParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetMsTeamParamTargetTeamsChannelParam() *TargetMsTeamParamTargetTeamsChannelParam {
	this := TargetMsTeamParamTargetTeamsChannelParam{}
	return &this
}

// NewTargetMsTeamParamTargetTeamsChannelParamWithDefaults instantiates a new TargetMsTeamParamTargetTeamsChannelParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetMsTeamParamTargetTeamsChannelParamWithDefaults() *TargetMsTeamParamTargetTeamsChannelParam {
	this := TargetMsTeamParamTargetTeamsChannelParam{}
	return &this
}

// GetChannelOwners returns the ChannelOwners field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetMsTeamParamTargetTeamsChannelParam) GetChannelOwners() []RecoveryObjectIdentifier {
	if o == nil {
		var ret []RecoveryObjectIdentifier
		return ret
	}
	return o.ChannelOwners
}

// GetChannelOwnersOk returns a tuple with the ChannelOwners field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetMsTeamParamTargetTeamsChannelParam) GetChannelOwnersOk() ([]RecoveryObjectIdentifier, bool) {
	if o == nil || IsNil(o.ChannelOwners) {
		return nil, false
	}
	return o.ChannelOwners, true
}

// HasChannelOwners returns a boolean if a field has been set.
func (o *TargetMsTeamParamTargetTeamsChannelParam) HasChannelOwners() bool {
	if o != nil && !IsNil(o.ChannelOwners) {
		return true
	}

	return false
}

// SetChannelOwners gets a reference to the given []RecoveryObjectIdentifier and assigns it to the ChannelOwners field.
func (o *TargetMsTeamParamTargetTeamsChannelParam) SetChannelOwners(v []RecoveryObjectIdentifier) {
	o.ChannelOwners = v
}

// GetChannelType returns the ChannelType field value if set, zero value otherwise.
func (o *TargetMsTeamParamTargetTeamsChannelParam) GetChannelType() string {
	if o == nil || IsNil(o.ChannelType) {
		var ret string
		return ret
	}
	return *o.ChannelType
}

// GetChannelTypeOk returns a tuple with the ChannelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetMsTeamParamTargetTeamsChannelParam) GetChannelTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelType) {
		return nil, false
	}
	return o.ChannelType, true
}

// HasChannelType returns a boolean if a field has been set.
func (o *TargetMsTeamParamTargetTeamsChannelParam) HasChannelType() bool {
	if o != nil && !IsNil(o.ChannelType) {
		return true
	}

	return false
}

// SetChannelType gets a reference to the given string and assigns it to the ChannelType field.
func (o *TargetMsTeamParamTargetTeamsChannelParam) SetChannelType(v string) {
	o.ChannelType = &v
}

// GetCreateNewChannel returns the CreateNewChannel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetMsTeamParamTargetTeamsChannelParam) GetCreateNewChannel() bool {
	if o == nil || IsNil(o.CreateNewChannel.Get()) {
		var ret bool
		return ret
	}
	return *o.CreateNewChannel.Get()
}

// GetCreateNewChannelOk returns a tuple with the CreateNewChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetMsTeamParamTargetTeamsChannelParam) GetCreateNewChannelOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreateNewChannel.Get(), o.CreateNewChannel.IsSet()
}

// HasCreateNewChannel returns a boolean if a field has been set.
func (o *TargetMsTeamParamTargetTeamsChannelParam) HasCreateNewChannel() bool {
	if o != nil && o.CreateNewChannel.IsSet() {
		return true
	}

	return false
}

// SetCreateNewChannel gets a reference to the given NullableBool and assigns it to the CreateNewChannel field.
func (o *TargetMsTeamParamTargetTeamsChannelParam) SetCreateNewChannel(v bool) {
	o.CreateNewChannel.Set(&v)
}
// SetCreateNewChannelNil sets the value for CreateNewChannel to be an explicit nil
func (o *TargetMsTeamParamTargetTeamsChannelParam) SetCreateNewChannelNil() {
	o.CreateNewChannel.Set(nil)
}

// UnsetCreateNewChannel ensures that no value is present for CreateNewChannel, not even an explicit nil
func (o *TargetMsTeamParamTargetTeamsChannelParam) UnsetCreateNewChannel() {
	o.CreateNewChannel.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetMsTeamParamTargetTeamsChannelParam) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetMsTeamParamTargetTeamsChannelParam) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *TargetMsTeamParamTargetTeamsChannelParam) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *TargetMsTeamParamTargetTeamsChannelParam) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *TargetMsTeamParamTargetTeamsChannelParam) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *TargetMsTeamParamTargetTeamsChannelParam) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetMsTeamParamTargetTeamsChannelParam) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetMsTeamParamTargetTeamsChannelParam) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *TargetMsTeamParamTargetTeamsChannelParam) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *TargetMsTeamParamTargetTeamsChannelParam) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *TargetMsTeamParamTargetTeamsChannelParam) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *TargetMsTeamParamTargetTeamsChannelParam) UnsetName() {
	o.Name.Unset()
}

func (o TargetMsTeamParamTargetTeamsChannelParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TargetMsTeamParamTargetTeamsChannelParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ChannelOwners != nil {
		toSerialize["channelOwners"] = o.ChannelOwners
	}
	if !IsNil(o.ChannelType) {
		toSerialize["channelType"] = o.ChannelType
	}
	if o.CreateNewChannel.IsSet() {
		toSerialize["createNewChannel"] = o.CreateNewChannel.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	return toSerialize, nil
}

type NullableTargetMsTeamParamTargetTeamsChannelParam struct {
	value *TargetMsTeamParamTargetTeamsChannelParam
	isSet bool
}

func (v NullableTargetMsTeamParamTargetTeamsChannelParam) Get() *TargetMsTeamParamTargetTeamsChannelParam {
	return v.value
}

func (v *NullableTargetMsTeamParamTargetTeamsChannelParam) Set(val *TargetMsTeamParamTargetTeamsChannelParam) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetMsTeamParamTargetTeamsChannelParam) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetMsTeamParamTargetTeamsChannelParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetMsTeamParamTargetTeamsChannelParam(val *TargetMsTeamParamTargetTeamsChannelParam) *NullableTargetMsTeamParamTargetTeamsChannelParam {
	return &NullableTargetMsTeamParamTargetTeamsChannelParam{value: val, isSet: true}
}

func (v NullableTargetMsTeamParamTargetTeamsChannelParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetMsTeamParamTargetTeamsChannelParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


