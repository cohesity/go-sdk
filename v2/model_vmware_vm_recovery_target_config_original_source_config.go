/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the VmwareVmRecoveryTargetConfigOriginalSourceConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VmwareVmRecoveryTargetConfigOriginalSourceConfig{}

// VmwareVmRecoveryTargetConfigOriginalSourceConfig Specifies the Source configuration if VM's are being recovered to Original Source. If not specified, all the configuration parameters will be retained.
type VmwareVmRecoveryTargetConfigOriginalSourceConfig struct {
	NetworkConfig NullableRecoverVmwareVmOriginalSourceConfigNetworkConfig `json:"networkConfig,omitempty"`
}

// NewVmwareVmRecoveryTargetConfigOriginalSourceConfig instantiates a new VmwareVmRecoveryTargetConfigOriginalSourceConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmwareVmRecoveryTargetConfigOriginalSourceConfig() *VmwareVmRecoveryTargetConfigOriginalSourceConfig {
	this := VmwareVmRecoveryTargetConfigOriginalSourceConfig{}
	return &this
}

// NewVmwareVmRecoveryTargetConfigOriginalSourceConfigWithDefaults instantiates a new VmwareVmRecoveryTargetConfigOriginalSourceConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmwareVmRecoveryTargetConfigOriginalSourceConfigWithDefaults() *VmwareVmRecoveryTargetConfigOriginalSourceConfig {
	this := VmwareVmRecoveryTargetConfigOriginalSourceConfig{}
	return &this
}

// GetNetworkConfig returns the NetworkConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareVmRecoveryTargetConfigOriginalSourceConfig) GetNetworkConfig() RecoverVmwareVmOriginalSourceConfigNetworkConfig {
	if o == nil || IsNil(o.NetworkConfig.Get()) {
		var ret RecoverVmwareVmOriginalSourceConfigNetworkConfig
		return ret
	}
	return *o.NetworkConfig.Get()
}

// GetNetworkConfigOk returns a tuple with the NetworkConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareVmRecoveryTargetConfigOriginalSourceConfig) GetNetworkConfigOk() (*RecoverVmwareVmOriginalSourceConfigNetworkConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetworkConfig.Get(), o.NetworkConfig.IsSet()
}

// HasNetworkConfig returns a boolean if a field has been set.
func (o *VmwareVmRecoveryTargetConfigOriginalSourceConfig) HasNetworkConfig() bool {
	if o != nil && o.NetworkConfig.IsSet() {
		return true
	}

	return false
}

// SetNetworkConfig gets a reference to the given NullableRecoverVmwareVmOriginalSourceConfigNetworkConfig and assigns it to the NetworkConfig field.
func (o *VmwareVmRecoveryTargetConfigOriginalSourceConfig) SetNetworkConfig(v RecoverVmwareVmOriginalSourceConfigNetworkConfig) {
	o.NetworkConfig.Set(&v)
}
// SetNetworkConfigNil sets the value for NetworkConfig to be an explicit nil
func (o *VmwareVmRecoveryTargetConfigOriginalSourceConfig) SetNetworkConfigNil() {
	o.NetworkConfig.Set(nil)
}

// UnsetNetworkConfig ensures that no value is present for NetworkConfig, not even an explicit nil
func (o *VmwareVmRecoveryTargetConfigOriginalSourceConfig) UnsetNetworkConfig() {
	o.NetworkConfig.Unset()
}

func (o VmwareVmRecoveryTargetConfigOriginalSourceConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VmwareVmRecoveryTargetConfigOriginalSourceConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkConfig.IsSet() {
		toSerialize["networkConfig"] = o.NetworkConfig.Get()
	}
	return toSerialize, nil
}

type NullableVmwareVmRecoveryTargetConfigOriginalSourceConfig struct {
	value *VmwareVmRecoveryTargetConfigOriginalSourceConfig
	isSet bool
}

func (v NullableVmwareVmRecoveryTargetConfigOriginalSourceConfig) Get() *VmwareVmRecoveryTargetConfigOriginalSourceConfig {
	return v.value
}

func (v *NullableVmwareVmRecoveryTargetConfigOriginalSourceConfig) Set(val *VmwareVmRecoveryTargetConfigOriginalSourceConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableVmwareVmRecoveryTargetConfigOriginalSourceConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableVmwareVmRecoveryTargetConfigOriginalSourceConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmwareVmRecoveryTargetConfigOriginalSourceConfig(val *VmwareVmRecoveryTargetConfigOriginalSourceConfig) *NullableVmwareVmRecoveryTargetConfigOriginalSourceConfig {
	return &NullableVmwareVmRecoveryTargetConfigOriginalSourceConfig{value: val, isSet: true}
}

func (v NullableVmwareVmRecoveryTargetConfigOriginalSourceConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmwareVmRecoveryTargetConfigOriginalSourceConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


