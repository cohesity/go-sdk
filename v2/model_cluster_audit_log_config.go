/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ClusterAuditLogConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterAuditLogConfig{}

// ClusterAuditLogConfig Specifies the Cluster audit log configuration.
type ClusterAuditLogConfig struct {
	// Specifies if audit log is enabled.
	Enabled NullableBool `json:"enabled"`
	// Specifies the audit log retention period in days. Audit logs generated before the period of time specified by retentionPeriodDays are removed from the Cohesity Cluster.
	RetentionPeriodDays NullableInt32 `json:"retentionPeriodDays"`
	// Specifies if the Cluster audit logging includes prev value and new value.
	VerboseAudit NullableBool `json:"verboseAudit,omitempty"`
}

type _ClusterAuditLogConfig ClusterAuditLogConfig

// NewClusterAuditLogConfig instantiates a new ClusterAuditLogConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterAuditLogConfig(enabled NullableBool, retentionPeriodDays NullableInt32) *ClusterAuditLogConfig {
	this := ClusterAuditLogConfig{}
	this.Enabled = enabled
	this.RetentionPeriodDays = retentionPeriodDays
	return &this
}

// NewClusterAuditLogConfigWithDefaults instantiates a new ClusterAuditLogConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterAuditLogConfigWithDefaults() *ClusterAuditLogConfig {
	this := ClusterAuditLogConfig{}
	return &this
}

// GetEnabled returns the Enabled field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *ClusterAuditLogConfig) GetEnabled() bool {
	if o == nil || o.Enabled.Get() == nil {
		var ret bool
		return ret
	}

	return *o.Enabled.Get()
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAuditLogConfig) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Enabled.Get(), o.Enabled.IsSet()
}

// SetEnabled sets field value
func (o *ClusterAuditLogConfig) SetEnabled(v bool) {
	o.Enabled.Set(&v)
}

// GetRetentionPeriodDays returns the RetentionPeriodDays field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *ClusterAuditLogConfig) GetRetentionPeriodDays() int32 {
	if o == nil || o.RetentionPeriodDays.Get() == nil {
		var ret int32
		return ret
	}

	return *o.RetentionPeriodDays.Get()
}

// GetRetentionPeriodDaysOk returns a tuple with the RetentionPeriodDays field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAuditLogConfig) GetRetentionPeriodDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RetentionPeriodDays.Get(), o.RetentionPeriodDays.IsSet()
}

// SetRetentionPeriodDays sets field value
func (o *ClusterAuditLogConfig) SetRetentionPeriodDays(v int32) {
	o.RetentionPeriodDays.Set(&v)
}

// GetVerboseAudit returns the VerboseAudit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAuditLogConfig) GetVerboseAudit() bool {
	if o == nil || IsNil(o.VerboseAudit.Get()) {
		var ret bool
		return ret
	}
	return *o.VerboseAudit.Get()
}

// GetVerboseAuditOk returns a tuple with the VerboseAudit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAuditLogConfig) GetVerboseAuditOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.VerboseAudit.Get(), o.VerboseAudit.IsSet()
}

// HasVerboseAudit returns a boolean if a field has been set.
func (o *ClusterAuditLogConfig) HasVerboseAudit() bool {
	if o != nil && o.VerboseAudit.IsSet() {
		return true
	}

	return false
}

// SetVerboseAudit gets a reference to the given NullableBool and assigns it to the VerboseAudit field.
func (o *ClusterAuditLogConfig) SetVerboseAudit(v bool) {
	o.VerboseAudit.Set(&v)
}
// SetVerboseAuditNil sets the value for VerboseAudit to be an explicit nil
func (o *ClusterAuditLogConfig) SetVerboseAuditNil() {
	o.VerboseAudit.Set(nil)
}

// UnsetVerboseAudit ensures that no value is present for VerboseAudit, not even an explicit nil
func (o *ClusterAuditLogConfig) UnsetVerboseAudit() {
	o.VerboseAudit.Unset()
}

func (o ClusterAuditLogConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterAuditLogConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enabled"] = o.Enabled.Get()
	toSerialize["retentionPeriodDays"] = o.RetentionPeriodDays.Get()
	if o.VerboseAudit.IsSet() {
		toSerialize["verboseAudit"] = o.VerboseAudit.Get()
	}
	return toSerialize, nil
}

func (o *ClusterAuditLogConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"enabled",
		"retentionPeriodDays",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterAuditLogConfig := _ClusterAuditLogConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterAuditLogConfig)

	if err != nil {
		return err
	}

	*o = ClusterAuditLogConfig(varClusterAuditLogConfig)

	return err
}

type NullableClusterAuditLogConfig struct {
	value *ClusterAuditLogConfig
	isSet bool
}

func (v NullableClusterAuditLogConfig) Get() *ClusterAuditLogConfig {
	return v.value
}

func (v *NullableClusterAuditLogConfig) Set(val *ClusterAuditLogConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterAuditLogConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterAuditLogConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterAuditLogConfig(val *ClusterAuditLogConfig) *NullableClusterAuditLogConfig {
	return &NullableClusterAuditLogConfig{value: val, isSet: true}
}

func (v NullableClusterAuditLogConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterAuditLogConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


