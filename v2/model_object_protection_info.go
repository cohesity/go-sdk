/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ObjectProtectionInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectProtectionInfo{}

// ObjectProtectionInfo Specifies the object info on cluster.
type ObjectProtectionInfo struct {
	// Specifies the cluster id where this object belongs to.
	ClusterId NullableInt64 `json:"clusterId,omitempty"`
	// Specifies the cluster incarnation id where this object belongs to.
	ClusterIncarnationId NullableInt64 `json:"clusterIncarnationId,omitempty"`
	// Specifies whether the object is deleted. Deleted objects can't be protected but can be recovered or unprotected.
	IsDeleted NullableBool `json:"isDeleted,omitempty"`
	// Specifies the status of the object's last protection run.
	LastRunStatus NullableString `json:"lastRunStatus,omitempty"`
	// Specifies a list of object protections.
	ObjectBackupConfiguration []ProtectionSummary `json:"objectBackupConfiguration,omitempty"`
	// Specifies the object id.
	ObjectId NullableInt64 `json:"objectId,omitempty"`
	// Specifies a list of protection groups protecting this object.
	ProtectionGroups []ObjectProtectionGroupSummary `json:"protectionGroups,omitempty"`
	// Specifies the region id where this object belongs to.
	RegionId NullableString `json:"regionId,omitempty"`
	// Specifies the source id.
	SourceId NullableInt64 `json:"sourceId,omitempty"`
	// List of Tenants the object belongs to.
	TenantIds []string `json:"tenantIds,omitempty"`
	// Specifies the view id for the object.
	ViewId NullableInt64 `json:"viewId,omitempty"`
}

// NewObjectProtectionInfo instantiates a new ObjectProtectionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectProtectionInfo() *ObjectProtectionInfo {
	this := ObjectProtectionInfo{}
	return &this
}

// NewObjectProtectionInfoWithDefaults instantiates a new ObjectProtectionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectProtectionInfoWithDefaults() *ObjectProtectionInfo {
	this := ObjectProtectionInfo{}
	return &this
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionInfo) GetClusterId() int64 {
	if o == nil || IsNil(o.ClusterId.Get()) {
		var ret int64
		return ret
	}
	return *o.ClusterId.Get()
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionInfo) GetClusterIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterId.Get(), o.ClusterId.IsSet()
}

// HasClusterId returns a boolean if a field has been set.
func (o *ObjectProtectionInfo) HasClusterId() bool {
	if o != nil && o.ClusterId.IsSet() {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given NullableInt64 and assigns it to the ClusterId field.
func (o *ObjectProtectionInfo) SetClusterId(v int64) {
	o.ClusterId.Set(&v)
}
// SetClusterIdNil sets the value for ClusterId to be an explicit nil
func (o *ObjectProtectionInfo) SetClusterIdNil() {
	o.ClusterId.Set(nil)
}

// UnsetClusterId ensures that no value is present for ClusterId, not even an explicit nil
func (o *ObjectProtectionInfo) UnsetClusterId() {
	o.ClusterId.Unset()
}

// GetClusterIncarnationId returns the ClusterIncarnationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionInfo) GetClusterIncarnationId() int64 {
	if o == nil || IsNil(o.ClusterIncarnationId.Get()) {
		var ret int64
		return ret
	}
	return *o.ClusterIncarnationId.Get()
}

// GetClusterIncarnationIdOk returns a tuple with the ClusterIncarnationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionInfo) GetClusterIncarnationIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterIncarnationId.Get(), o.ClusterIncarnationId.IsSet()
}

// HasClusterIncarnationId returns a boolean if a field has been set.
func (o *ObjectProtectionInfo) HasClusterIncarnationId() bool {
	if o != nil && o.ClusterIncarnationId.IsSet() {
		return true
	}

	return false
}

// SetClusterIncarnationId gets a reference to the given NullableInt64 and assigns it to the ClusterIncarnationId field.
func (o *ObjectProtectionInfo) SetClusterIncarnationId(v int64) {
	o.ClusterIncarnationId.Set(&v)
}
// SetClusterIncarnationIdNil sets the value for ClusterIncarnationId to be an explicit nil
func (o *ObjectProtectionInfo) SetClusterIncarnationIdNil() {
	o.ClusterIncarnationId.Set(nil)
}

// UnsetClusterIncarnationId ensures that no value is present for ClusterIncarnationId, not even an explicit nil
func (o *ObjectProtectionInfo) UnsetClusterIncarnationId() {
	o.ClusterIncarnationId.Unset()
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionInfo) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted.Get()) {
		var ret bool
		return ret
	}
	return *o.IsDeleted.Get()
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionInfo) GetIsDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsDeleted.Get(), o.IsDeleted.IsSet()
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *ObjectProtectionInfo) HasIsDeleted() bool {
	if o != nil && o.IsDeleted.IsSet() {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given NullableBool and assigns it to the IsDeleted field.
func (o *ObjectProtectionInfo) SetIsDeleted(v bool) {
	o.IsDeleted.Set(&v)
}
// SetIsDeletedNil sets the value for IsDeleted to be an explicit nil
func (o *ObjectProtectionInfo) SetIsDeletedNil() {
	o.IsDeleted.Set(nil)
}

// UnsetIsDeleted ensures that no value is present for IsDeleted, not even an explicit nil
func (o *ObjectProtectionInfo) UnsetIsDeleted() {
	o.IsDeleted.Unset()
}

// GetLastRunStatus returns the LastRunStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionInfo) GetLastRunStatus() string {
	if o == nil || IsNil(o.LastRunStatus.Get()) {
		var ret string
		return ret
	}
	return *o.LastRunStatus.Get()
}

// GetLastRunStatusOk returns a tuple with the LastRunStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionInfo) GetLastRunStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastRunStatus.Get(), o.LastRunStatus.IsSet()
}

// HasLastRunStatus returns a boolean if a field has been set.
func (o *ObjectProtectionInfo) HasLastRunStatus() bool {
	if o != nil && o.LastRunStatus.IsSet() {
		return true
	}

	return false
}

// SetLastRunStatus gets a reference to the given NullableString and assigns it to the LastRunStatus field.
func (o *ObjectProtectionInfo) SetLastRunStatus(v string) {
	o.LastRunStatus.Set(&v)
}
// SetLastRunStatusNil sets the value for LastRunStatus to be an explicit nil
func (o *ObjectProtectionInfo) SetLastRunStatusNil() {
	o.LastRunStatus.Set(nil)
}

// UnsetLastRunStatus ensures that no value is present for LastRunStatus, not even an explicit nil
func (o *ObjectProtectionInfo) UnsetLastRunStatus() {
	o.LastRunStatus.Unset()
}

// GetObjectBackupConfiguration returns the ObjectBackupConfiguration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionInfo) GetObjectBackupConfiguration() []ProtectionSummary {
	if o == nil {
		var ret []ProtectionSummary
		return ret
	}
	return o.ObjectBackupConfiguration
}

// GetObjectBackupConfigurationOk returns a tuple with the ObjectBackupConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionInfo) GetObjectBackupConfigurationOk() ([]ProtectionSummary, bool) {
	if o == nil || IsNil(o.ObjectBackupConfiguration) {
		return nil, false
	}
	return o.ObjectBackupConfiguration, true
}

// HasObjectBackupConfiguration returns a boolean if a field has been set.
func (o *ObjectProtectionInfo) HasObjectBackupConfiguration() bool {
	if o != nil && !IsNil(o.ObjectBackupConfiguration) {
		return true
	}

	return false
}

// SetObjectBackupConfiguration gets a reference to the given []ProtectionSummary and assigns it to the ObjectBackupConfiguration field.
func (o *ObjectProtectionInfo) SetObjectBackupConfiguration(v []ProtectionSummary) {
	o.ObjectBackupConfiguration = v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionInfo) GetObjectId() int64 {
	if o == nil || IsNil(o.ObjectId.Get()) {
		var ret int64
		return ret
	}
	return *o.ObjectId.Get()
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionInfo) GetObjectIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectId.Get(), o.ObjectId.IsSet()
}

// HasObjectId returns a boolean if a field has been set.
func (o *ObjectProtectionInfo) HasObjectId() bool {
	if o != nil && o.ObjectId.IsSet() {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given NullableInt64 and assigns it to the ObjectId field.
func (o *ObjectProtectionInfo) SetObjectId(v int64) {
	o.ObjectId.Set(&v)
}
// SetObjectIdNil sets the value for ObjectId to be an explicit nil
func (o *ObjectProtectionInfo) SetObjectIdNil() {
	o.ObjectId.Set(nil)
}

// UnsetObjectId ensures that no value is present for ObjectId, not even an explicit nil
func (o *ObjectProtectionInfo) UnsetObjectId() {
	o.ObjectId.Unset()
}

// GetProtectionGroups returns the ProtectionGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionInfo) GetProtectionGroups() []ObjectProtectionGroupSummary {
	if o == nil {
		var ret []ObjectProtectionGroupSummary
		return ret
	}
	return o.ProtectionGroups
}

// GetProtectionGroupsOk returns a tuple with the ProtectionGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionInfo) GetProtectionGroupsOk() ([]ObjectProtectionGroupSummary, bool) {
	if o == nil || IsNil(o.ProtectionGroups) {
		return nil, false
	}
	return o.ProtectionGroups, true
}

// HasProtectionGroups returns a boolean if a field has been set.
func (o *ObjectProtectionInfo) HasProtectionGroups() bool {
	if o != nil && !IsNil(o.ProtectionGroups) {
		return true
	}

	return false
}

// SetProtectionGroups gets a reference to the given []ObjectProtectionGroupSummary and assigns it to the ProtectionGroups field.
func (o *ObjectProtectionInfo) SetProtectionGroups(v []ObjectProtectionGroupSummary) {
	o.ProtectionGroups = v
}

// GetRegionId returns the RegionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionInfo) GetRegionId() string {
	if o == nil || IsNil(o.RegionId.Get()) {
		var ret string
		return ret
	}
	return *o.RegionId.Get()
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionInfo) GetRegionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RegionId.Get(), o.RegionId.IsSet()
}

// HasRegionId returns a boolean if a field has been set.
func (o *ObjectProtectionInfo) HasRegionId() bool {
	if o != nil && o.RegionId.IsSet() {
		return true
	}

	return false
}

// SetRegionId gets a reference to the given NullableString and assigns it to the RegionId field.
func (o *ObjectProtectionInfo) SetRegionId(v string) {
	o.RegionId.Set(&v)
}
// SetRegionIdNil sets the value for RegionId to be an explicit nil
func (o *ObjectProtectionInfo) SetRegionIdNil() {
	o.RegionId.Set(nil)
}

// UnsetRegionId ensures that no value is present for RegionId, not even an explicit nil
func (o *ObjectProtectionInfo) UnsetRegionId() {
	o.RegionId.Unset()
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionInfo) GetSourceId() int64 {
	if o == nil || IsNil(o.SourceId.Get()) {
		var ret int64
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionInfo) GetSourceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *ObjectProtectionInfo) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableInt64 and assigns it to the SourceId field.
func (o *ObjectProtectionInfo) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *ObjectProtectionInfo) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *ObjectProtectionInfo) UnsetSourceId() {
	o.SourceId.Unset()
}

// GetTenantIds returns the TenantIds field value if set, zero value otherwise.
func (o *ObjectProtectionInfo) GetTenantIds() []string {
	if o == nil || IsNil(o.TenantIds) {
		var ret []string
		return ret
	}
	return o.TenantIds
}

// GetTenantIdsOk returns a tuple with the TenantIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectProtectionInfo) GetTenantIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TenantIds) {
		return nil, false
	}
	return o.TenantIds, true
}

// HasTenantIds returns a boolean if a field has been set.
func (o *ObjectProtectionInfo) HasTenantIds() bool {
	if o != nil && !IsNil(o.TenantIds) {
		return true
	}

	return false
}

// SetTenantIds gets a reference to the given []string and assigns it to the TenantIds field.
func (o *ObjectProtectionInfo) SetTenantIds(v []string) {
	o.TenantIds = v
}

// GetViewId returns the ViewId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionInfo) GetViewId() int64 {
	if o == nil || IsNil(o.ViewId.Get()) {
		var ret int64
		return ret
	}
	return *o.ViewId.Get()
}

// GetViewIdOk returns a tuple with the ViewId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionInfo) GetViewIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ViewId.Get(), o.ViewId.IsSet()
}

// HasViewId returns a boolean if a field has been set.
func (o *ObjectProtectionInfo) HasViewId() bool {
	if o != nil && o.ViewId.IsSet() {
		return true
	}

	return false
}

// SetViewId gets a reference to the given NullableInt64 and assigns it to the ViewId field.
func (o *ObjectProtectionInfo) SetViewId(v int64) {
	o.ViewId.Set(&v)
}
// SetViewIdNil sets the value for ViewId to be an explicit nil
func (o *ObjectProtectionInfo) SetViewIdNil() {
	o.ViewId.Set(nil)
}

// UnsetViewId ensures that no value is present for ViewId, not even an explicit nil
func (o *ObjectProtectionInfo) UnsetViewId() {
	o.ViewId.Unset()
}

func (o ObjectProtectionInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectProtectionInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterId.IsSet() {
		toSerialize["clusterId"] = o.ClusterId.Get()
	}
	if o.ClusterIncarnationId.IsSet() {
		toSerialize["clusterIncarnationId"] = o.ClusterIncarnationId.Get()
	}
	if o.IsDeleted.IsSet() {
		toSerialize["isDeleted"] = o.IsDeleted.Get()
	}
	if o.LastRunStatus.IsSet() {
		toSerialize["lastRunStatus"] = o.LastRunStatus.Get()
	}
	if o.ObjectBackupConfiguration != nil {
		toSerialize["objectBackupConfiguration"] = o.ObjectBackupConfiguration
	}
	if o.ObjectId.IsSet() {
		toSerialize["objectId"] = o.ObjectId.Get()
	}
	if o.ProtectionGroups != nil {
		toSerialize["protectionGroups"] = o.ProtectionGroups
	}
	if o.RegionId.IsSet() {
		toSerialize["regionId"] = o.RegionId.Get()
	}
	if o.SourceId.IsSet() {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if !IsNil(o.TenantIds) {
		toSerialize["tenantIds"] = o.TenantIds
	}
	if o.ViewId.IsSet() {
		toSerialize["viewId"] = o.ViewId.Get()
	}
	return toSerialize, nil
}

type NullableObjectProtectionInfo struct {
	value *ObjectProtectionInfo
	isSet bool
}

func (v NullableObjectProtectionInfo) Get() *ObjectProtectionInfo {
	return v.value
}

func (v *NullableObjectProtectionInfo) Set(val *ObjectProtectionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectProtectionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectProtectionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectProtectionInfo(val *ObjectProtectionInfo) *NullableObjectProtectionInfo {
	return &NullableObjectProtectionInfo{value: val, isSet: true}
}

func (v NullableObjectProtectionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectProtectionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


