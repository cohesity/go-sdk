/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TdmSnapshotTaskParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TdmSnapshotTaskParams{}

// TdmSnapshotTaskParams Specifies the parameters to create a snapshot of an existing clone.
type TdmSnapshotTaskParams struct {
	// Specifies the label for the snapshot.
	Label NullableString `json:"label,omitempty"`
	// Specifies the ID of the clone.
	CloneId NullableString `json:"cloneId"`
}

type _TdmSnapshotTaskParams TdmSnapshotTaskParams

// NewTdmSnapshotTaskParams instantiates a new TdmSnapshotTaskParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTdmSnapshotTaskParams(cloneId NullableString) *TdmSnapshotTaskParams {
	this := TdmSnapshotTaskParams{}
	this.CloneId = cloneId
	return &this
}

// NewTdmSnapshotTaskParamsWithDefaults instantiates a new TdmSnapshotTaskParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTdmSnapshotTaskParamsWithDefaults() *TdmSnapshotTaskParams {
	this := TdmSnapshotTaskParams{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmSnapshotTaskParams) GetLabel() string {
	if o == nil || IsNil(o.Label.Get()) {
		var ret string
		return ret
	}
	return *o.Label.Get()
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmSnapshotTaskParams) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Label.Get(), o.Label.IsSet()
}

// HasLabel returns a boolean if a field has been set.
func (o *TdmSnapshotTaskParams) HasLabel() bool {
	if o != nil && o.Label.IsSet() {
		return true
	}

	return false
}

// SetLabel gets a reference to the given NullableString and assigns it to the Label field.
func (o *TdmSnapshotTaskParams) SetLabel(v string) {
	o.Label.Set(&v)
}
// SetLabelNil sets the value for Label to be an explicit nil
func (o *TdmSnapshotTaskParams) SetLabelNil() {
	o.Label.Set(nil)
}

// UnsetLabel ensures that no value is present for Label, not even an explicit nil
func (o *TdmSnapshotTaskParams) UnsetLabel() {
	o.Label.Unset()
}

// GetCloneId returns the CloneId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TdmSnapshotTaskParams) GetCloneId() string {
	if o == nil || o.CloneId.Get() == nil {
		var ret string
		return ret
	}

	return *o.CloneId.Get()
}

// GetCloneIdOk returns a tuple with the CloneId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmSnapshotTaskParams) GetCloneIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloneId.Get(), o.CloneId.IsSet()
}

// SetCloneId sets field value
func (o *TdmSnapshotTaskParams) SetCloneId(v string) {
	o.CloneId.Set(&v)
}

func (o TdmSnapshotTaskParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TdmSnapshotTaskParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Label.IsSet() {
		toSerialize["label"] = o.Label.Get()
	}
	toSerialize["cloneId"] = o.CloneId.Get()
	return toSerialize, nil
}

func (o *TdmSnapshotTaskParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloneId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTdmSnapshotTaskParams := _TdmSnapshotTaskParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTdmSnapshotTaskParams)

	if err != nil {
		return err
	}

	*o = TdmSnapshotTaskParams(varTdmSnapshotTaskParams)

	return err
}

type NullableTdmSnapshotTaskParams struct {
	value *TdmSnapshotTaskParams
	isSet bool
}

func (v NullableTdmSnapshotTaskParams) Get() *TdmSnapshotTaskParams {
	return v.value
}

func (v *NullableTdmSnapshotTaskParams) Set(val *TdmSnapshotTaskParams) {
	v.value = val
	v.isSet = true
}

func (v NullableTdmSnapshotTaskParams) IsSet() bool {
	return v.isSet
}

func (v *NullableTdmSnapshotTaskParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTdmSnapshotTaskParams(val *TdmSnapshotTaskParams) *NullableTdmSnapshotTaskParams {
	return &NullableTdmSnapshotTaskParams{value: val, isSet: true}
}

func (v NullableTdmSnapshotTaskParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTdmSnapshotTaskParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


