/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the Email type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Email{}

// Email Specifies an email or an email folder.
type Email struct {
	// Specifies snapshot tags applied to the object.
	SnapshotTags []SnapshotTagInfo `json:"snapshotTags,omitempty"`
	// Specifies tag applied to the object.
	Tags []TagInfo `json:"tags,omitempty"`
	// \"Specifies the email addresses of all the BCC receipients of this email.\"
	BccRecipientAddresses []string `json:"bccRecipientAddresses,omitempty"`
	// \"Specifies the email addresses of all the CC receipients of this email.\"
	CcRecipientAddresses []string `json:"ccRecipientAddresses,omitempty"`
	// \"Specifies the Unix timestamp epoch in seconds at which this item is created.\"
	CreatedTimeSecs NullableInt64 `json:"createdTimeSecs,omitempty"`
	// Specifies the directory path to this mailbox item.
	DirectoryPath NullableString `json:"directoryPath,omitempty"`
	// Specifies the email addresses of a contact.
	EmailAddresses []string `json:"emailAddresses,omitempty"`
	// Specifies the subject of this email.
	EmailSubject NullableString `json:"emailSubject,omitempty"`
	// Specifies the contact's first name.
	FirstName NullableString `json:"firstName,omitempty"`
	// Specify the name of the email folder.
	FolderName NullableString `json:"folderName,omitempty"`
	// Specifies whether email has an attachment.
	HasAttachment NullableBool `json:"hasAttachment,omitempty"`
	// Specifies the id of the email object.
	Id NullableString `json:"id,omitempty"`
	// \"Specifies the name of the person who modified this item.\"
	LastModificationName NullableString `json:"lastModificationName,omitempty"`
	// \"Specifies the Unix timestamp epoch in seconds at which this item was modified.\"
	LastModificationTimeSecs NullableInt64 `json:"lastModificationTimeSecs,omitempty"`
	// Specifies the contact's last name.
	LastName NullableString `json:"lastName,omitempty"`
	// \"Specifies the email addresses of all the optional attendees of this calendar item.\"
	OptionalAttendeesAddresses []string `json:"optionalAttendeesAddresses,omitempty"`
	// \"Specifies the calendar item organizer's email address.\"
	OrganizerAddress NullableString `json:"organizerAddress,omitempty"`
	// Specifies the id of parent folder the mailbox item.
	ParentFolderId NullableInt64 `json:"parentFolderId,omitempty"`
	// Specifies the path to this mailbox item.
	Path NullableString `json:"path,omitempty"`
	// \"Specifies the Protection Group id protecting the mailbox.\"
	ProtectionGroupId NullableString `json:"protectionGroupId,omitempty"`
	// \"Specifies the Protection Group name protecting the mailbox item.\"
	ProtectionGroupName NullableString `json:"protectionGroupName,omitempty"`
	// \"Specifies the Unix timestamp epoch in seconds at which this email is received.\"
	ReceivedTimeSecs NullableInt64 `json:"receivedTimeSecs,omitempty"`
	// \"Specifies the email addresses of all receipients of this email.\"
	RecipientAddresses []string `json:"recipientAddresses,omitempty"`
	// \"Specifies the email addresses of all required attendees of this calendar item.\"
	RequiredAttendeesAddresses []string `json:"requiredAttendeesAddresses,omitempty"`
	// Specifies the sender's email address.
	SenderAddress NullableString `json:"senderAddress,omitempty"`
	// \"Specifies the Unix timestamp epoch in seconds at which this email is sent.\"
	SentTimeSecs NullableInt64 `json:"sentTimeSecs,omitempty"`
	// \"Specifies the Storage Domain id where the backup data of Object is present.\"
	StorageDomainId NullableInt64 `json:"storageDomainId,omitempty"`
	// \"Specifies the Unix timestamp epoch in seconds at which this task item was completed.\"
	TaskCompletionDateTimeSecs NullableInt64 `json:"taskCompletionDateTimeSecs,omitempty"`
	// \"Specifies the Unix timestamp epoch in seconds at which this task item is due.\"
	TaskDueDateTimeSecs NullableInt64 `json:"taskDueDateTimeSecs,omitempty"`
	// Specifies the task item status type.
	TaskStatus NullableString `json:"taskStatus,omitempty"`
	// \"Specify the tenant id to which this email belongs to.\"
	TenantId NullableString `json:"tenantId,omitempty"`
	// Specifies the Mailbox item type.
	Type NullableString `json:"type,omitempty"`
	UserObjectInfo *ObjectSummary `json:"userObjectInfo,omitempty"`
}

// NewEmail instantiates a new Email object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmail() *Email {
	this := Email{}
	return &this
}

// NewEmailWithDefaults instantiates a new Email object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailWithDefaults() *Email {
	this := Email{}
	return &this
}

// GetSnapshotTags returns the SnapshotTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetSnapshotTags() []SnapshotTagInfo {
	if o == nil {
		var ret []SnapshotTagInfo
		return ret
	}
	return o.SnapshotTags
}

// GetSnapshotTagsOk returns a tuple with the SnapshotTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetSnapshotTagsOk() ([]SnapshotTagInfo, bool) {
	if o == nil || IsNil(o.SnapshotTags) {
		return nil, false
	}
	return o.SnapshotTags, true
}

// HasSnapshotTags returns a boolean if a field has been set.
func (o *Email) HasSnapshotTags() bool {
	if o != nil && !IsNil(o.SnapshotTags) {
		return true
	}

	return false
}

// SetSnapshotTags gets a reference to the given []SnapshotTagInfo and assigns it to the SnapshotTags field.
func (o *Email) SetSnapshotTags(v []SnapshotTagInfo) {
	o.SnapshotTags = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetTags() []TagInfo {
	if o == nil {
		var ret []TagInfo
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetTagsOk() ([]TagInfo, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Email) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagInfo and assigns it to the Tags field.
func (o *Email) SetTags(v []TagInfo) {
	o.Tags = v
}

// GetBccRecipientAddresses returns the BccRecipientAddresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetBccRecipientAddresses() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.BccRecipientAddresses
}

// GetBccRecipientAddressesOk returns a tuple with the BccRecipientAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetBccRecipientAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.BccRecipientAddresses) {
		return nil, false
	}
	return o.BccRecipientAddresses, true
}

// HasBccRecipientAddresses returns a boolean if a field has been set.
func (o *Email) HasBccRecipientAddresses() bool {
	if o != nil && !IsNil(o.BccRecipientAddresses) {
		return true
	}

	return false
}

// SetBccRecipientAddresses gets a reference to the given []string and assigns it to the BccRecipientAddresses field.
func (o *Email) SetBccRecipientAddresses(v []string) {
	o.BccRecipientAddresses = v
}

// GetCcRecipientAddresses returns the CcRecipientAddresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetCcRecipientAddresses() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.CcRecipientAddresses
}

// GetCcRecipientAddressesOk returns a tuple with the CcRecipientAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetCcRecipientAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.CcRecipientAddresses) {
		return nil, false
	}
	return o.CcRecipientAddresses, true
}

// HasCcRecipientAddresses returns a boolean if a field has been set.
func (o *Email) HasCcRecipientAddresses() bool {
	if o != nil && !IsNil(o.CcRecipientAddresses) {
		return true
	}

	return false
}

// SetCcRecipientAddresses gets a reference to the given []string and assigns it to the CcRecipientAddresses field.
func (o *Email) SetCcRecipientAddresses(v []string) {
	o.CcRecipientAddresses = v
}

// GetCreatedTimeSecs returns the CreatedTimeSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetCreatedTimeSecs() int64 {
	if o == nil || IsNil(o.CreatedTimeSecs.Get()) {
		var ret int64
		return ret
	}
	return *o.CreatedTimeSecs.Get()
}

// GetCreatedTimeSecsOk returns a tuple with the CreatedTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetCreatedTimeSecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedTimeSecs.Get(), o.CreatedTimeSecs.IsSet()
}

// HasCreatedTimeSecs returns a boolean if a field has been set.
func (o *Email) HasCreatedTimeSecs() bool {
	if o != nil && o.CreatedTimeSecs.IsSet() {
		return true
	}

	return false
}

// SetCreatedTimeSecs gets a reference to the given NullableInt64 and assigns it to the CreatedTimeSecs field.
func (o *Email) SetCreatedTimeSecs(v int64) {
	o.CreatedTimeSecs.Set(&v)
}
// SetCreatedTimeSecsNil sets the value for CreatedTimeSecs to be an explicit nil
func (o *Email) SetCreatedTimeSecsNil() {
	o.CreatedTimeSecs.Set(nil)
}

// UnsetCreatedTimeSecs ensures that no value is present for CreatedTimeSecs, not even an explicit nil
func (o *Email) UnsetCreatedTimeSecs() {
	o.CreatedTimeSecs.Unset()
}

// GetDirectoryPath returns the DirectoryPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetDirectoryPath() string {
	if o == nil || IsNil(o.DirectoryPath.Get()) {
		var ret string
		return ret
	}
	return *o.DirectoryPath.Get()
}

// GetDirectoryPathOk returns a tuple with the DirectoryPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetDirectoryPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DirectoryPath.Get(), o.DirectoryPath.IsSet()
}

// HasDirectoryPath returns a boolean if a field has been set.
func (o *Email) HasDirectoryPath() bool {
	if o != nil && o.DirectoryPath.IsSet() {
		return true
	}

	return false
}

// SetDirectoryPath gets a reference to the given NullableString and assigns it to the DirectoryPath field.
func (o *Email) SetDirectoryPath(v string) {
	o.DirectoryPath.Set(&v)
}
// SetDirectoryPathNil sets the value for DirectoryPath to be an explicit nil
func (o *Email) SetDirectoryPathNil() {
	o.DirectoryPath.Set(nil)
}

// UnsetDirectoryPath ensures that no value is present for DirectoryPath, not even an explicit nil
func (o *Email) UnsetDirectoryPath() {
	o.DirectoryPath.Unset()
}

// GetEmailAddresses returns the EmailAddresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetEmailAddresses() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.EmailAddresses
}

// GetEmailAddressesOk returns a tuple with the EmailAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetEmailAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.EmailAddresses) {
		return nil, false
	}
	return o.EmailAddresses, true
}

// HasEmailAddresses returns a boolean if a field has been set.
func (o *Email) HasEmailAddresses() bool {
	if o != nil && !IsNil(o.EmailAddresses) {
		return true
	}

	return false
}

// SetEmailAddresses gets a reference to the given []string and assigns it to the EmailAddresses field.
func (o *Email) SetEmailAddresses(v []string) {
	o.EmailAddresses = v
}

// GetEmailSubject returns the EmailSubject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetEmailSubject() string {
	if o == nil || IsNil(o.EmailSubject.Get()) {
		var ret string
		return ret
	}
	return *o.EmailSubject.Get()
}

// GetEmailSubjectOk returns a tuple with the EmailSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetEmailSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EmailSubject.Get(), o.EmailSubject.IsSet()
}

// HasEmailSubject returns a boolean if a field has been set.
func (o *Email) HasEmailSubject() bool {
	if o != nil && o.EmailSubject.IsSet() {
		return true
	}

	return false
}

// SetEmailSubject gets a reference to the given NullableString and assigns it to the EmailSubject field.
func (o *Email) SetEmailSubject(v string) {
	o.EmailSubject.Set(&v)
}
// SetEmailSubjectNil sets the value for EmailSubject to be an explicit nil
func (o *Email) SetEmailSubjectNil() {
	o.EmailSubject.Set(nil)
}

// UnsetEmailSubject ensures that no value is present for EmailSubject, not even an explicit nil
func (o *Email) UnsetEmailSubject() {
	o.EmailSubject.Unset()
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetFirstName() string {
	if o == nil || IsNil(o.FirstName.Get()) {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *Email) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *Email) SetFirstName(v string) {
	o.FirstName.Set(&v)
}
// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *Email) SetFirstNameNil() {
	o.FirstName.Set(nil)
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *Email) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetFolderName returns the FolderName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetFolderName() string {
	if o == nil || IsNil(o.FolderName.Get()) {
		var ret string
		return ret
	}
	return *o.FolderName.Get()
}

// GetFolderNameOk returns a tuple with the FolderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetFolderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FolderName.Get(), o.FolderName.IsSet()
}

// HasFolderName returns a boolean if a field has been set.
func (o *Email) HasFolderName() bool {
	if o != nil && o.FolderName.IsSet() {
		return true
	}

	return false
}

// SetFolderName gets a reference to the given NullableString and assigns it to the FolderName field.
func (o *Email) SetFolderName(v string) {
	o.FolderName.Set(&v)
}
// SetFolderNameNil sets the value for FolderName to be an explicit nil
func (o *Email) SetFolderNameNil() {
	o.FolderName.Set(nil)
}

// UnsetFolderName ensures that no value is present for FolderName, not even an explicit nil
func (o *Email) UnsetFolderName() {
	o.FolderName.Unset()
}

// GetHasAttachment returns the HasAttachment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetHasAttachment() bool {
	if o == nil || IsNil(o.HasAttachment.Get()) {
		var ret bool
		return ret
	}
	return *o.HasAttachment.Get()
}

// GetHasAttachmentOk returns a tuple with the HasAttachment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetHasAttachmentOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasAttachment.Get(), o.HasAttachment.IsSet()
}

// HasHasAttachment returns a boolean if a field has been set.
func (o *Email) HasHasAttachment() bool {
	if o != nil && o.HasAttachment.IsSet() {
		return true
	}

	return false
}

// SetHasAttachment gets a reference to the given NullableBool and assigns it to the HasAttachment field.
func (o *Email) SetHasAttachment(v bool) {
	o.HasAttachment.Set(&v)
}
// SetHasAttachmentNil sets the value for HasAttachment to be an explicit nil
func (o *Email) SetHasAttachmentNil() {
	o.HasAttachment.Set(nil)
}

// UnsetHasAttachment ensures that no value is present for HasAttachment, not even an explicit nil
func (o *Email) UnsetHasAttachment() {
	o.HasAttachment.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *Email) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *Email) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *Email) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *Email) UnsetId() {
	o.Id.Unset()
}

// GetLastModificationName returns the LastModificationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetLastModificationName() string {
	if o == nil || IsNil(o.LastModificationName.Get()) {
		var ret string
		return ret
	}
	return *o.LastModificationName.Get()
}

// GetLastModificationNameOk returns a tuple with the LastModificationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetLastModificationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModificationName.Get(), o.LastModificationName.IsSet()
}

// HasLastModificationName returns a boolean if a field has been set.
func (o *Email) HasLastModificationName() bool {
	if o != nil && o.LastModificationName.IsSet() {
		return true
	}

	return false
}

// SetLastModificationName gets a reference to the given NullableString and assigns it to the LastModificationName field.
func (o *Email) SetLastModificationName(v string) {
	o.LastModificationName.Set(&v)
}
// SetLastModificationNameNil sets the value for LastModificationName to be an explicit nil
func (o *Email) SetLastModificationNameNil() {
	o.LastModificationName.Set(nil)
}

// UnsetLastModificationName ensures that no value is present for LastModificationName, not even an explicit nil
func (o *Email) UnsetLastModificationName() {
	o.LastModificationName.Unset()
}

// GetLastModificationTimeSecs returns the LastModificationTimeSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetLastModificationTimeSecs() int64 {
	if o == nil || IsNil(o.LastModificationTimeSecs.Get()) {
		var ret int64
		return ret
	}
	return *o.LastModificationTimeSecs.Get()
}

// GetLastModificationTimeSecsOk returns a tuple with the LastModificationTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetLastModificationTimeSecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModificationTimeSecs.Get(), o.LastModificationTimeSecs.IsSet()
}

// HasLastModificationTimeSecs returns a boolean if a field has been set.
func (o *Email) HasLastModificationTimeSecs() bool {
	if o != nil && o.LastModificationTimeSecs.IsSet() {
		return true
	}

	return false
}

// SetLastModificationTimeSecs gets a reference to the given NullableInt64 and assigns it to the LastModificationTimeSecs field.
func (o *Email) SetLastModificationTimeSecs(v int64) {
	o.LastModificationTimeSecs.Set(&v)
}
// SetLastModificationTimeSecsNil sets the value for LastModificationTimeSecs to be an explicit nil
func (o *Email) SetLastModificationTimeSecsNil() {
	o.LastModificationTimeSecs.Set(nil)
}

// UnsetLastModificationTimeSecs ensures that no value is present for LastModificationTimeSecs, not even an explicit nil
func (o *Email) UnsetLastModificationTimeSecs() {
	o.LastModificationTimeSecs.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetLastName() string {
	if o == nil || IsNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *Email) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *Email) SetLastName(v string) {
	o.LastName.Set(&v)
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *Email) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *Email) UnsetLastName() {
	o.LastName.Unset()
}

// GetOptionalAttendeesAddresses returns the OptionalAttendeesAddresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetOptionalAttendeesAddresses() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.OptionalAttendeesAddresses
}

// GetOptionalAttendeesAddressesOk returns a tuple with the OptionalAttendeesAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetOptionalAttendeesAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.OptionalAttendeesAddresses) {
		return nil, false
	}
	return o.OptionalAttendeesAddresses, true
}

// HasOptionalAttendeesAddresses returns a boolean if a field has been set.
func (o *Email) HasOptionalAttendeesAddresses() bool {
	if o != nil && !IsNil(o.OptionalAttendeesAddresses) {
		return true
	}

	return false
}

// SetOptionalAttendeesAddresses gets a reference to the given []string and assigns it to the OptionalAttendeesAddresses field.
func (o *Email) SetOptionalAttendeesAddresses(v []string) {
	o.OptionalAttendeesAddresses = v
}

// GetOrganizerAddress returns the OrganizerAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetOrganizerAddress() string {
	if o == nil || IsNil(o.OrganizerAddress.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizerAddress.Get()
}

// GetOrganizerAddressOk returns a tuple with the OrganizerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetOrganizerAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizerAddress.Get(), o.OrganizerAddress.IsSet()
}

// HasOrganizerAddress returns a boolean if a field has been set.
func (o *Email) HasOrganizerAddress() bool {
	if o != nil && o.OrganizerAddress.IsSet() {
		return true
	}

	return false
}

// SetOrganizerAddress gets a reference to the given NullableString and assigns it to the OrganizerAddress field.
func (o *Email) SetOrganizerAddress(v string) {
	o.OrganizerAddress.Set(&v)
}
// SetOrganizerAddressNil sets the value for OrganizerAddress to be an explicit nil
func (o *Email) SetOrganizerAddressNil() {
	o.OrganizerAddress.Set(nil)
}

// UnsetOrganizerAddress ensures that no value is present for OrganizerAddress, not even an explicit nil
func (o *Email) UnsetOrganizerAddress() {
	o.OrganizerAddress.Unset()
}

// GetParentFolderId returns the ParentFolderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetParentFolderId() int64 {
	if o == nil || IsNil(o.ParentFolderId.Get()) {
		var ret int64
		return ret
	}
	return *o.ParentFolderId.Get()
}

// GetParentFolderIdOk returns a tuple with the ParentFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetParentFolderIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentFolderId.Get(), o.ParentFolderId.IsSet()
}

// HasParentFolderId returns a boolean if a field has been set.
func (o *Email) HasParentFolderId() bool {
	if o != nil && o.ParentFolderId.IsSet() {
		return true
	}

	return false
}

// SetParentFolderId gets a reference to the given NullableInt64 and assigns it to the ParentFolderId field.
func (o *Email) SetParentFolderId(v int64) {
	o.ParentFolderId.Set(&v)
}
// SetParentFolderIdNil sets the value for ParentFolderId to be an explicit nil
func (o *Email) SetParentFolderIdNil() {
	o.ParentFolderId.Set(nil)
}

// UnsetParentFolderId ensures that no value is present for ParentFolderId, not even an explicit nil
func (o *Email) UnsetParentFolderId() {
	o.ParentFolderId.Unset()
}

// GetPath returns the Path field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetPath() string {
	if o == nil || IsNil(o.Path.Get()) {
		var ret string
		return ret
	}
	return *o.Path.Get()
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Path.Get(), o.Path.IsSet()
}

// HasPath returns a boolean if a field has been set.
func (o *Email) HasPath() bool {
	if o != nil && o.Path.IsSet() {
		return true
	}

	return false
}

// SetPath gets a reference to the given NullableString and assigns it to the Path field.
func (o *Email) SetPath(v string) {
	o.Path.Set(&v)
}
// SetPathNil sets the value for Path to be an explicit nil
func (o *Email) SetPathNil() {
	o.Path.Set(nil)
}

// UnsetPath ensures that no value is present for Path, not even an explicit nil
func (o *Email) UnsetPath() {
	o.Path.Unset()
}

// GetProtectionGroupId returns the ProtectionGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetProtectionGroupId() string {
	if o == nil || IsNil(o.ProtectionGroupId.Get()) {
		var ret string
		return ret
	}
	return *o.ProtectionGroupId.Get()
}

// GetProtectionGroupIdOk returns a tuple with the ProtectionGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetProtectionGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProtectionGroupId.Get(), o.ProtectionGroupId.IsSet()
}

// HasProtectionGroupId returns a boolean if a field has been set.
func (o *Email) HasProtectionGroupId() bool {
	if o != nil && o.ProtectionGroupId.IsSet() {
		return true
	}

	return false
}

// SetProtectionGroupId gets a reference to the given NullableString and assigns it to the ProtectionGroupId field.
func (o *Email) SetProtectionGroupId(v string) {
	o.ProtectionGroupId.Set(&v)
}
// SetProtectionGroupIdNil sets the value for ProtectionGroupId to be an explicit nil
func (o *Email) SetProtectionGroupIdNil() {
	o.ProtectionGroupId.Set(nil)
}

// UnsetProtectionGroupId ensures that no value is present for ProtectionGroupId, not even an explicit nil
func (o *Email) UnsetProtectionGroupId() {
	o.ProtectionGroupId.Unset()
}

// GetProtectionGroupName returns the ProtectionGroupName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetProtectionGroupName() string {
	if o == nil || IsNil(o.ProtectionGroupName.Get()) {
		var ret string
		return ret
	}
	return *o.ProtectionGroupName.Get()
}

// GetProtectionGroupNameOk returns a tuple with the ProtectionGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetProtectionGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProtectionGroupName.Get(), o.ProtectionGroupName.IsSet()
}

// HasProtectionGroupName returns a boolean if a field has been set.
func (o *Email) HasProtectionGroupName() bool {
	if o != nil && o.ProtectionGroupName.IsSet() {
		return true
	}

	return false
}

// SetProtectionGroupName gets a reference to the given NullableString and assigns it to the ProtectionGroupName field.
func (o *Email) SetProtectionGroupName(v string) {
	o.ProtectionGroupName.Set(&v)
}
// SetProtectionGroupNameNil sets the value for ProtectionGroupName to be an explicit nil
func (o *Email) SetProtectionGroupNameNil() {
	o.ProtectionGroupName.Set(nil)
}

// UnsetProtectionGroupName ensures that no value is present for ProtectionGroupName, not even an explicit nil
func (o *Email) UnsetProtectionGroupName() {
	o.ProtectionGroupName.Unset()
}

// GetReceivedTimeSecs returns the ReceivedTimeSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetReceivedTimeSecs() int64 {
	if o == nil || IsNil(o.ReceivedTimeSecs.Get()) {
		var ret int64
		return ret
	}
	return *o.ReceivedTimeSecs.Get()
}

// GetReceivedTimeSecsOk returns a tuple with the ReceivedTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetReceivedTimeSecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceivedTimeSecs.Get(), o.ReceivedTimeSecs.IsSet()
}

// HasReceivedTimeSecs returns a boolean if a field has been set.
func (o *Email) HasReceivedTimeSecs() bool {
	if o != nil && o.ReceivedTimeSecs.IsSet() {
		return true
	}

	return false
}

// SetReceivedTimeSecs gets a reference to the given NullableInt64 and assigns it to the ReceivedTimeSecs field.
func (o *Email) SetReceivedTimeSecs(v int64) {
	o.ReceivedTimeSecs.Set(&v)
}
// SetReceivedTimeSecsNil sets the value for ReceivedTimeSecs to be an explicit nil
func (o *Email) SetReceivedTimeSecsNil() {
	o.ReceivedTimeSecs.Set(nil)
}

// UnsetReceivedTimeSecs ensures that no value is present for ReceivedTimeSecs, not even an explicit nil
func (o *Email) UnsetReceivedTimeSecs() {
	o.ReceivedTimeSecs.Unset()
}

// GetRecipientAddresses returns the RecipientAddresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetRecipientAddresses() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.RecipientAddresses
}

// GetRecipientAddressesOk returns a tuple with the RecipientAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetRecipientAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.RecipientAddresses) {
		return nil, false
	}
	return o.RecipientAddresses, true
}

// HasRecipientAddresses returns a boolean if a field has been set.
func (o *Email) HasRecipientAddresses() bool {
	if o != nil && !IsNil(o.RecipientAddresses) {
		return true
	}

	return false
}

// SetRecipientAddresses gets a reference to the given []string and assigns it to the RecipientAddresses field.
func (o *Email) SetRecipientAddresses(v []string) {
	o.RecipientAddresses = v
}

// GetRequiredAttendeesAddresses returns the RequiredAttendeesAddresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetRequiredAttendeesAddresses() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.RequiredAttendeesAddresses
}

// GetRequiredAttendeesAddressesOk returns a tuple with the RequiredAttendeesAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetRequiredAttendeesAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.RequiredAttendeesAddresses) {
		return nil, false
	}
	return o.RequiredAttendeesAddresses, true
}

// HasRequiredAttendeesAddresses returns a boolean if a field has been set.
func (o *Email) HasRequiredAttendeesAddresses() bool {
	if o != nil && !IsNil(o.RequiredAttendeesAddresses) {
		return true
	}

	return false
}

// SetRequiredAttendeesAddresses gets a reference to the given []string and assigns it to the RequiredAttendeesAddresses field.
func (o *Email) SetRequiredAttendeesAddresses(v []string) {
	o.RequiredAttendeesAddresses = v
}

// GetSenderAddress returns the SenderAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetSenderAddress() string {
	if o == nil || IsNil(o.SenderAddress.Get()) {
		var ret string
		return ret
	}
	return *o.SenderAddress.Get()
}

// GetSenderAddressOk returns a tuple with the SenderAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetSenderAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SenderAddress.Get(), o.SenderAddress.IsSet()
}

// HasSenderAddress returns a boolean if a field has been set.
func (o *Email) HasSenderAddress() bool {
	if o != nil && o.SenderAddress.IsSet() {
		return true
	}

	return false
}

// SetSenderAddress gets a reference to the given NullableString and assigns it to the SenderAddress field.
func (o *Email) SetSenderAddress(v string) {
	o.SenderAddress.Set(&v)
}
// SetSenderAddressNil sets the value for SenderAddress to be an explicit nil
func (o *Email) SetSenderAddressNil() {
	o.SenderAddress.Set(nil)
}

// UnsetSenderAddress ensures that no value is present for SenderAddress, not even an explicit nil
func (o *Email) UnsetSenderAddress() {
	o.SenderAddress.Unset()
}

// GetSentTimeSecs returns the SentTimeSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetSentTimeSecs() int64 {
	if o == nil || IsNil(o.SentTimeSecs.Get()) {
		var ret int64
		return ret
	}
	return *o.SentTimeSecs.Get()
}

// GetSentTimeSecsOk returns a tuple with the SentTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetSentTimeSecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SentTimeSecs.Get(), o.SentTimeSecs.IsSet()
}

// HasSentTimeSecs returns a boolean if a field has been set.
func (o *Email) HasSentTimeSecs() bool {
	if o != nil && o.SentTimeSecs.IsSet() {
		return true
	}

	return false
}

// SetSentTimeSecs gets a reference to the given NullableInt64 and assigns it to the SentTimeSecs field.
func (o *Email) SetSentTimeSecs(v int64) {
	o.SentTimeSecs.Set(&v)
}
// SetSentTimeSecsNil sets the value for SentTimeSecs to be an explicit nil
func (o *Email) SetSentTimeSecsNil() {
	o.SentTimeSecs.Set(nil)
}

// UnsetSentTimeSecs ensures that no value is present for SentTimeSecs, not even an explicit nil
func (o *Email) UnsetSentTimeSecs() {
	o.SentTimeSecs.Unset()
}

// GetStorageDomainId returns the StorageDomainId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetStorageDomainId() int64 {
	if o == nil || IsNil(o.StorageDomainId.Get()) {
		var ret int64
		return ret
	}
	return *o.StorageDomainId.Get()
}

// GetStorageDomainIdOk returns a tuple with the StorageDomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetStorageDomainIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageDomainId.Get(), o.StorageDomainId.IsSet()
}

// HasStorageDomainId returns a boolean if a field has been set.
func (o *Email) HasStorageDomainId() bool {
	if o != nil && o.StorageDomainId.IsSet() {
		return true
	}

	return false
}

// SetStorageDomainId gets a reference to the given NullableInt64 and assigns it to the StorageDomainId field.
func (o *Email) SetStorageDomainId(v int64) {
	o.StorageDomainId.Set(&v)
}
// SetStorageDomainIdNil sets the value for StorageDomainId to be an explicit nil
func (o *Email) SetStorageDomainIdNil() {
	o.StorageDomainId.Set(nil)
}

// UnsetStorageDomainId ensures that no value is present for StorageDomainId, not even an explicit nil
func (o *Email) UnsetStorageDomainId() {
	o.StorageDomainId.Unset()
}

// GetTaskCompletionDateTimeSecs returns the TaskCompletionDateTimeSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetTaskCompletionDateTimeSecs() int64 {
	if o == nil || IsNil(o.TaskCompletionDateTimeSecs.Get()) {
		var ret int64
		return ret
	}
	return *o.TaskCompletionDateTimeSecs.Get()
}

// GetTaskCompletionDateTimeSecsOk returns a tuple with the TaskCompletionDateTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetTaskCompletionDateTimeSecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaskCompletionDateTimeSecs.Get(), o.TaskCompletionDateTimeSecs.IsSet()
}

// HasTaskCompletionDateTimeSecs returns a boolean if a field has been set.
func (o *Email) HasTaskCompletionDateTimeSecs() bool {
	if o != nil && o.TaskCompletionDateTimeSecs.IsSet() {
		return true
	}

	return false
}

// SetTaskCompletionDateTimeSecs gets a reference to the given NullableInt64 and assigns it to the TaskCompletionDateTimeSecs field.
func (o *Email) SetTaskCompletionDateTimeSecs(v int64) {
	o.TaskCompletionDateTimeSecs.Set(&v)
}
// SetTaskCompletionDateTimeSecsNil sets the value for TaskCompletionDateTimeSecs to be an explicit nil
func (o *Email) SetTaskCompletionDateTimeSecsNil() {
	o.TaskCompletionDateTimeSecs.Set(nil)
}

// UnsetTaskCompletionDateTimeSecs ensures that no value is present for TaskCompletionDateTimeSecs, not even an explicit nil
func (o *Email) UnsetTaskCompletionDateTimeSecs() {
	o.TaskCompletionDateTimeSecs.Unset()
}

// GetTaskDueDateTimeSecs returns the TaskDueDateTimeSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetTaskDueDateTimeSecs() int64 {
	if o == nil || IsNil(o.TaskDueDateTimeSecs.Get()) {
		var ret int64
		return ret
	}
	return *o.TaskDueDateTimeSecs.Get()
}

// GetTaskDueDateTimeSecsOk returns a tuple with the TaskDueDateTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetTaskDueDateTimeSecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaskDueDateTimeSecs.Get(), o.TaskDueDateTimeSecs.IsSet()
}

// HasTaskDueDateTimeSecs returns a boolean if a field has been set.
func (o *Email) HasTaskDueDateTimeSecs() bool {
	if o != nil && o.TaskDueDateTimeSecs.IsSet() {
		return true
	}

	return false
}

// SetTaskDueDateTimeSecs gets a reference to the given NullableInt64 and assigns it to the TaskDueDateTimeSecs field.
func (o *Email) SetTaskDueDateTimeSecs(v int64) {
	o.TaskDueDateTimeSecs.Set(&v)
}
// SetTaskDueDateTimeSecsNil sets the value for TaskDueDateTimeSecs to be an explicit nil
func (o *Email) SetTaskDueDateTimeSecsNil() {
	o.TaskDueDateTimeSecs.Set(nil)
}

// UnsetTaskDueDateTimeSecs ensures that no value is present for TaskDueDateTimeSecs, not even an explicit nil
func (o *Email) UnsetTaskDueDateTimeSecs() {
	o.TaskDueDateTimeSecs.Unset()
}

// GetTaskStatus returns the TaskStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetTaskStatus() string {
	if o == nil || IsNil(o.TaskStatus.Get()) {
		var ret string
		return ret
	}
	return *o.TaskStatus.Get()
}

// GetTaskStatusOk returns a tuple with the TaskStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetTaskStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaskStatus.Get(), o.TaskStatus.IsSet()
}

// HasTaskStatus returns a boolean if a field has been set.
func (o *Email) HasTaskStatus() bool {
	if o != nil && o.TaskStatus.IsSet() {
		return true
	}

	return false
}

// SetTaskStatus gets a reference to the given NullableString and assigns it to the TaskStatus field.
func (o *Email) SetTaskStatus(v string) {
	o.TaskStatus.Set(&v)
}
// SetTaskStatusNil sets the value for TaskStatus to be an explicit nil
func (o *Email) SetTaskStatusNil() {
	o.TaskStatus.Set(nil)
}

// UnsetTaskStatus ensures that no value is present for TaskStatus, not even an explicit nil
func (o *Email) UnsetTaskStatus() {
	o.TaskStatus.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *Email) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *Email) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *Email) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *Email) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Email) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Email) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *Email) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *Email) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *Email) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *Email) UnsetType() {
	o.Type.Unset()
}

// GetUserObjectInfo returns the UserObjectInfo field value if set, zero value otherwise.
func (o *Email) GetUserObjectInfo() ObjectSummary {
	if o == nil || IsNil(o.UserObjectInfo) {
		var ret ObjectSummary
		return ret
	}
	return *o.UserObjectInfo
}

// GetUserObjectInfoOk returns a tuple with the UserObjectInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetUserObjectInfoOk() (*ObjectSummary, bool) {
	if o == nil || IsNil(o.UserObjectInfo) {
		return nil, false
	}
	return o.UserObjectInfo, true
}

// HasUserObjectInfo returns a boolean if a field has been set.
func (o *Email) HasUserObjectInfo() bool {
	if o != nil && !IsNil(o.UserObjectInfo) {
		return true
	}

	return false
}

// SetUserObjectInfo gets a reference to the given ObjectSummary and assigns it to the UserObjectInfo field.
func (o *Email) SetUserObjectInfo(v ObjectSummary) {
	o.UserObjectInfo = &v
}

func (o Email) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Email) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SnapshotTags != nil {
		toSerialize["snapshotTags"] = o.SnapshotTags
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.BccRecipientAddresses != nil {
		toSerialize["bccRecipientAddresses"] = o.BccRecipientAddresses
	}
	if o.CcRecipientAddresses != nil {
		toSerialize["ccRecipientAddresses"] = o.CcRecipientAddresses
	}
	if o.CreatedTimeSecs.IsSet() {
		toSerialize["createdTimeSecs"] = o.CreatedTimeSecs.Get()
	}
	if o.DirectoryPath.IsSet() {
		toSerialize["directoryPath"] = o.DirectoryPath.Get()
	}
	if o.EmailAddresses != nil {
		toSerialize["emailAddresses"] = o.EmailAddresses
	}
	if o.EmailSubject.IsSet() {
		toSerialize["emailSubject"] = o.EmailSubject.Get()
	}
	if o.FirstName.IsSet() {
		toSerialize["firstName"] = o.FirstName.Get()
	}
	if o.FolderName.IsSet() {
		toSerialize["folderName"] = o.FolderName.Get()
	}
	if o.HasAttachment.IsSet() {
		toSerialize["hasAttachment"] = o.HasAttachment.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.LastModificationName.IsSet() {
		toSerialize["lastModificationName"] = o.LastModificationName.Get()
	}
	if o.LastModificationTimeSecs.IsSet() {
		toSerialize["lastModificationTimeSecs"] = o.LastModificationTimeSecs.Get()
	}
	if o.LastName.IsSet() {
		toSerialize["lastName"] = o.LastName.Get()
	}
	if o.OptionalAttendeesAddresses != nil {
		toSerialize["optionalAttendeesAddresses"] = o.OptionalAttendeesAddresses
	}
	if o.OrganizerAddress.IsSet() {
		toSerialize["organizerAddress"] = o.OrganizerAddress.Get()
	}
	if o.ParentFolderId.IsSet() {
		toSerialize["parentFolderId"] = o.ParentFolderId.Get()
	}
	if o.Path.IsSet() {
		toSerialize["path"] = o.Path.Get()
	}
	if o.ProtectionGroupId.IsSet() {
		toSerialize["protectionGroupId"] = o.ProtectionGroupId.Get()
	}
	if o.ProtectionGroupName.IsSet() {
		toSerialize["protectionGroupName"] = o.ProtectionGroupName.Get()
	}
	if o.ReceivedTimeSecs.IsSet() {
		toSerialize["receivedTimeSecs"] = o.ReceivedTimeSecs.Get()
	}
	if o.RecipientAddresses != nil {
		toSerialize["recipientAddresses"] = o.RecipientAddresses
	}
	if o.RequiredAttendeesAddresses != nil {
		toSerialize["requiredAttendeesAddresses"] = o.RequiredAttendeesAddresses
	}
	if o.SenderAddress.IsSet() {
		toSerialize["senderAddress"] = o.SenderAddress.Get()
	}
	if o.SentTimeSecs.IsSet() {
		toSerialize["sentTimeSecs"] = o.SentTimeSecs.Get()
	}
	if o.StorageDomainId.IsSet() {
		toSerialize["storageDomainId"] = o.StorageDomainId.Get()
	}
	if o.TaskCompletionDateTimeSecs.IsSet() {
		toSerialize["taskCompletionDateTimeSecs"] = o.TaskCompletionDateTimeSecs.Get()
	}
	if o.TaskDueDateTimeSecs.IsSet() {
		toSerialize["taskDueDateTimeSecs"] = o.TaskDueDateTimeSecs.Get()
	}
	if o.TaskStatus.IsSet() {
		toSerialize["taskStatus"] = o.TaskStatus.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if !IsNil(o.UserObjectInfo) {
		toSerialize["userObjectInfo"] = o.UserObjectInfo
	}
	return toSerialize, nil
}

type NullableEmail struct {
	value *Email
	isSet bool
}

func (v NullableEmail) Get() *Email {
	return v.value
}

func (v *NullableEmail) Set(val *Email) {
	v.value = val
	v.isSet = true
}

func (v NullableEmail) IsSet() bool {
	return v.isSet
}

func (v *NullableEmail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmail(val *Email) *NullableEmail {
	return &NullableEmail{value: val, isSet: true}
}

func (v NullableEmail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


