/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ExternallyTriggeredSbtParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternallyTriggeredSbtParams{}

// ExternallyTriggeredSbtParams Specifies SBT paramters for the externally triggered job.
type ExternallyTriggeredSbtParams struct {
	// Specifies the catalog view for the SBT backup.
	CatalogView NullableString `json:"catalogView,omitempty"`
}

// NewExternallyTriggeredSbtParams instantiates a new ExternallyTriggeredSbtParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternallyTriggeredSbtParams() *ExternallyTriggeredSbtParams {
	this := ExternallyTriggeredSbtParams{}
	return &this
}

// NewExternallyTriggeredSbtParamsWithDefaults instantiates a new ExternallyTriggeredSbtParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternallyTriggeredSbtParamsWithDefaults() *ExternallyTriggeredSbtParams {
	this := ExternallyTriggeredSbtParams{}
	return &this
}

// GetCatalogView returns the CatalogView field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternallyTriggeredSbtParams) GetCatalogView() string {
	if o == nil || IsNil(o.CatalogView.Get()) {
		var ret string
		return ret
	}
	return *o.CatalogView.Get()
}

// GetCatalogViewOk returns a tuple with the CatalogView field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternallyTriggeredSbtParams) GetCatalogViewOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CatalogView.Get(), o.CatalogView.IsSet()
}

// HasCatalogView returns a boolean if a field has been set.
func (o *ExternallyTriggeredSbtParams) HasCatalogView() bool {
	if o != nil && o.CatalogView.IsSet() {
		return true
	}

	return false
}

// SetCatalogView gets a reference to the given NullableString and assigns it to the CatalogView field.
func (o *ExternallyTriggeredSbtParams) SetCatalogView(v string) {
	o.CatalogView.Set(&v)
}
// SetCatalogViewNil sets the value for CatalogView to be an explicit nil
func (o *ExternallyTriggeredSbtParams) SetCatalogViewNil() {
	o.CatalogView.Set(nil)
}

// UnsetCatalogView ensures that no value is present for CatalogView, not even an explicit nil
func (o *ExternallyTriggeredSbtParams) UnsetCatalogView() {
	o.CatalogView.Unset()
}

func (o ExternallyTriggeredSbtParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternallyTriggeredSbtParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CatalogView.IsSet() {
		toSerialize["catalogView"] = o.CatalogView.Get()
	}
	return toSerialize, nil
}

type NullableExternallyTriggeredSbtParams struct {
	value *ExternallyTriggeredSbtParams
	isSet bool
}

func (v NullableExternallyTriggeredSbtParams) Get() *ExternallyTriggeredSbtParams {
	return v.value
}

func (v *NullableExternallyTriggeredSbtParams) Set(val *ExternallyTriggeredSbtParams) {
	v.value = val
	v.isSet = true
}

func (v NullableExternallyTriggeredSbtParams) IsSet() bool {
	return v.isSet
}

func (v *NullableExternallyTriggeredSbtParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternallyTriggeredSbtParams(val *ExternallyTriggeredSbtParams) *NullableExternallyTriggeredSbtParams {
	return &NullableExternallyTriggeredSbtParams{value: val, isSet: true}
}

func (v NullableExternallyTriggeredSbtParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternallyTriggeredSbtParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


