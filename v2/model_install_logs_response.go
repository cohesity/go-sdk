/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the InstallLogsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstallLogsResponse{}

// InstallLogsResponse \"Response containing install logs for services.\" 
type InstallLogsResponse struct {
	// \"The overall install status \" \"(e.g., Success, InProgress, Failed, Pending).\" 
	HeliosInstallStatus *string `json:"heliosInstallStatus,omitempty"`
	// Helios install version.
	HeliosInstallVersion *string `json:"heliosInstallVersion,omitempty"`
	// List of service install logs.
	Services []ServiceInstallLog `json:"services,omitempty"`
}

// NewInstallLogsResponse instantiates a new InstallLogsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstallLogsResponse() *InstallLogsResponse {
	this := InstallLogsResponse{}
	return &this
}

// NewInstallLogsResponseWithDefaults instantiates a new InstallLogsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstallLogsResponseWithDefaults() *InstallLogsResponse {
	this := InstallLogsResponse{}
	return &this
}

// GetHeliosInstallStatus returns the HeliosInstallStatus field value if set, zero value otherwise.
func (o *InstallLogsResponse) GetHeliosInstallStatus() string {
	if o == nil || IsNil(o.HeliosInstallStatus) {
		var ret string
		return ret
	}
	return *o.HeliosInstallStatus
}

// GetHeliosInstallStatusOk returns a tuple with the HeliosInstallStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallLogsResponse) GetHeliosInstallStatusOk() (*string, bool) {
	if o == nil || IsNil(o.HeliosInstallStatus) {
		return nil, false
	}
	return o.HeliosInstallStatus, true
}

// HasHeliosInstallStatus returns a boolean if a field has been set.
func (o *InstallLogsResponse) HasHeliosInstallStatus() bool {
	if o != nil && !IsNil(o.HeliosInstallStatus) {
		return true
	}

	return false
}

// SetHeliosInstallStatus gets a reference to the given string and assigns it to the HeliosInstallStatus field.
func (o *InstallLogsResponse) SetHeliosInstallStatus(v string) {
	o.HeliosInstallStatus = &v
}

// GetHeliosInstallVersion returns the HeliosInstallVersion field value if set, zero value otherwise.
func (o *InstallLogsResponse) GetHeliosInstallVersion() string {
	if o == nil || IsNil(o.HeliosInstallVersion) {
		var ret string
		return ret
	}
	return *o.HeliosInstallVersion
}

// GetHeliosInstallVersionOk returns a tuple with the HeliosInstallVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallLogsResponse) GetHeliosInstallVersionOk() (*string, bool) {
	if o == nil || IsNil(o.HeliosInstallVersion) {
		return nil, false
	}
	return o.HeliosInstallVersion, true
}

// HasHeliosInstallVersion returns a boolean if a field has been set.
func (o *InstallLogsResponse) HasHeliosInstallVersion() bool {
	if o != nil && !IsNil(o.HeliosInstallVersion) {
		return true
	}

	return false
}

// SetHeliosInstallVersion gets a reference to the given string and assigns it to the HeliosInstallVersion field.
func (o *InstallLogsResponse) SetHeliosInstallVersion(v string) {
	o.HeliosInstallVersion = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *InstallLogsResponse) GetServices() []ServiceInstallLog {
	if o == nil || IsNil(o.Services) {
		var ret []ServiceInstallLog
		return ret
	}
	return o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallLogsResponse) GetServicesOk() ([]ServiceInstallLog, bool) {
	if o == nil || IsNil(o.Services) {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *InstallLogsResponse) HasServices() bool {
	if o != nil && !IsNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given []ServiceInstallLog and assigns it to the Services field.
func (o *InstallLogsResponse) SetServices(v []ServiceInstallLog) {
	o.Services = v
}

func (o InstallLogsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstallLogsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HeliosInstallStatus) {
		toSerialize["heliosInstallStatus"] = o.HeliosInstallStatus
	}
	if !IsNil(o.HeliosInstallVersion) {
		toSerialize["heliosInstallVersion"] = o.HeliosInstallVersion
	}
	if !IsNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	return toSerialize, nil
}

type NullableInstallLogsResponse struct {
	value *InstallLogsResponse
	isSet bool
}

func (v NullableInstallLogsResponse) Get() *InstallLogsResponse {
	return v.value
}

func (v *NullableInstallLogsResponse) Set(val *InstallLogsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInstallLogsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInstallLogsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstallLogsResponse(val *InstallLogsResponse) *NullableInstallLogsResponse {
	return &NullableInstallLogsResponse{value: val, isSet: true}
}

func (v NullableInstallLogsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstallLogsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


