/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ProtectedObjectRunNowActionParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProtectedObjectRunNowActionParams{}

// ProtectedObjectRunNowActionParams Specifies the request parameters for RunNow action on Protected objects.
type ProtectedObjectRunNowActionParams struct {
	// Specifies the list of objects to perform an action. If provided object id is not explicitly protected by object protection, then given action will not be performed on that.
	Objects []RunNowActionObjectLevelParams `json:"objects,omitempty"`
	// Specifies a label with which this run is created. Only applicable for user triggered protect now action.
	RunLabel NullableString `json:"runLabel,omitempty"`
}

// NewProtectedObjectRunNowActionParams instantiates a new ProtectedObjectRunNowActionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectedObjectRunNowActionParams() *ProtectedObjectRunNowActionParams {
	this := ProtectedObjectRunNowActionParams{}
	return &this
}

// NewProtectedObjectRunNowActionParamsWithDefaults instantiates a new ProtectedObjectRunNowActionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectedObjectRunNowActionParamsWithDefaults() *ProtectedObjectRunNowActionParams {
	this := ProtectedObjectRunNowActionParams{}
	return &this
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *ProtectedObjectRunNowActionParams) GetObjects() []RunNowActionObjectLevelParams {
	if o == nil || IsNil(o.Objects) {
		var ret []RunNowActionObjectLevelParams
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectRunNowActionParams) GetObjectsOk() ([]RunNowActionObjectLevelParams, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *ProtectedObjectRunNowActionParams) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []RunNowActionObjectLevelParams and assigns it to the Objects field.
func (o *ProtectedObjectRunNowActionParams) SetObjects(v []RunNowActionObjectLevelParams) {
	o.Objects = v
}

// GetRunLabel returns the RunLabel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectRunNowActionParams) GetRunLabel() string {
	if o == nil || IsNil(o.RunLabel.Get()) {
		var ret string
		return ret
	}
	return *o.RunLabel.Get()
}

// GetRunLabelOk returns a tuple with the RunLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectRunNowActionParams) GetRunLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunLabel.Get(), o.RunLabel.IsSet()
}

// HasRunLabel returns a boolean if a field has been set.
func (o *ProtectedObjectRunNowActionParams) HasRunLabel() bool {
	if o != nil && o.RunLabel.IsSet() {
		return true
	}

	return false
}

// SetRunLabel gets a reference to the given NullableString and assigns it to the RunLabel field.
func (o *ProtectedObjectRunNowActionParams) SetRunLabel(v string) {
	o.RunLabel.Set(&v)
}
// SetRunLabelNil sets the value for RunLabel to be an explicit nil
func (o *ProtectedObjectRunNowActionParams) SetRunLabelNil() {
	o.RunLabel.Set(nil)
}

// UnsetRunLabel ensures that no value is present for RunLabel, not even an explicit nil
func (o *ProtectedObjectRunNowActionParams) UnsetRunLabel() {
	o.RunLabel.Unset()
}

func (o ProtectedObjectRunNowActionParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProtectedObjectRunNowActionParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Objects) {
		toSerialize["objects"] = o.Objects
	}
	if o.RunLabel.IsSet() {
		toSerialize["runLabel"] = o.RunLabel.Get()
	}
	return toSerialize, nil
}

type NullableProtectedObjectRunNowActionParams struct {
	value *ProtectedObjectRunNowActionParams
	isSet bool
}

func (v NullableProtectedObjectRunNowActionParams) Get() *ProtectedObjectRunNowActionParams {
	return v.value
}

func (v *NullableProtectedObjectRunNowActionParams) Set(val *ProtectedObjectRunNowActionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectedObjectRunNowActionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectedObjectRunNowActionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectedObjectRunNowActionParams(val *ProtectedObjectRunNowActionParams) *NullableProtectedObjectRunNowActionParams {
	return &NullableProtectedObjectRunNowActionParams{value: val, isSet: true}
}

func (v NullableProtectedObjectRunNowActionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectedObjectRunNowActionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


