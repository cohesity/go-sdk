/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ClientStatsInLastHours type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientStatsInLastHours{}

// ClientStatsInLastHours Specifies the Client stats for last hours.
type ClientStatsInLastHours struct {
	// Specifies the time range.
	LastHours NullableInt64 `json:"lastHours,omitempty"`
	// Specifies the stats value.
	Value NullableInt64 `json:"value,omitempty"`
}

// NewClientStatsInLastHours instantiates a new ClientStatsInLastHours object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientStatsInLastHours() *ClientStatsInLastHours {
	this := ClientStatsInLastHours{}
	return &this
}

// NewClientStatsInLastHoursWithDefaults instantiates a new ClientStatsInLastHours object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientStatsInLastHoursWithDefaults() *ClientStatsInLastHours {
	this := ClientStatsInLastHours{}
	return &this
}

// GetLastHours returns the LastHours field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientStatsInLastHours) GetLastHours() int64 {
	if o == nil || IsNil(o.LastHours.Get()) {
		var ret int64
		return ret
	}
	return *o.LastHours.Get()
}

// GetLastHoursOk returns a tuple with the LastHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientStatsInLastHours) GetLastHoursOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastHours.Get(), o.LastHours.IsSet()
}

// HasLastHours returns a boolean if a field has been set.
func (o *ClientStatsInLastHours) HasLastHours() bool {
	if o != nil && o.LastHours.IsSet() {
		return true
	}

	return false
}

// SetLastHours gets a reference to the given NullableInt64 and assigns it to the LastHours field.
func (o *ClientStatsInLastHours) SetLastHours(v int64) {
	o.LastHours.Set(&v)
}
// SetLastHoursNil sets the value for LastHours to be an explicit nil
func (o *ClientStatsInLastHours) SetLastHoursNil() {
	o.LastHours.Set(nil)
}

// UnsetLastHours ensures that no value is present for LastHours, not even an explicit nil
func (o *ClientStatsInLastHours) UnsetLastHours() {
	o.LastHours.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientStatsInLastHours) GetValue() int64 {
	if o == nil || IsNil(o.Value.Get()) {
		var ret int64
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientStatsInLastHours) GetValueOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *ClientStatsInLastHours) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableInt64 and assigns it to the Value field.
func (o *ClientStatsInLastHours) SetValue(v int64) {
	o.Value.Set(&v)
}
// SetValueNil sets the value for Value to be an explicit nil
func (o *ClientStatsInLastHours) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *ClientStatsInLastHours) UnsetValue() {
	o.Value.Unset()
}

func (o ClientStatsInLastHours) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientStatsInLastHours) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.LastHours.IsSet() {
		toSerialize["lastHours"] = o.LastHours.Get()
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	return toSerialize, nil
}

type NullableClientStatsInLastHours struct {
	value *ClientStatsInLastHours
	isSet bool
}

func (v NullableClientStatsInLastHours) Get() *ClientStatsInLastHours {
	return v.value
}

func (v *NullableClientStatsInLastHours) Set(val *ClientStatsInLastHours) {
	v.value = val
	v.isSet = true
}

func (v NullableClientStatsInLastHours) IsSet() bool {
	return v.isSet
}

func (v *NullableClientStatsInLastHours) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientStatsInLastHours(val *ClientStatsInLastHours) *NullableClientStatsInLastHours {
	return &NullableClientStatsInLastHours{value: val, isSet: true}
}

func (v NullableClientStatsInLastHours) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientStatsInLastHours) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


