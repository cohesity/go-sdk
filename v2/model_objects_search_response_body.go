/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ObjectsSearchResponseBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectsSearchResponseBody{}

// ObjectsSearchResponseBody Specifies the Objects search result.
type ObjectsSearchResponseBody struct {
	// Specifies the number of objects to be fetched for the specified pagination cookie.
	Count NullableInt32 `json:"count,omitempty"`
	// Specifies the list of Objects.
	Objects []SearchObject `json:"objects,omitempty"`
	// Specifies the pagination cookie with which subsequent parts of the response can be fetched.
	PaginationCookie NullableString `json:"paginationCookie,omitempty"`
}

// NewObjectsSearchResponseBody instantiates a new ObjectsSearchResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectsSearchResponseBody() *ObjectsSearchResponseBody {
	this := ObjectsSearchResponseBody{}
	return &this
}

// NewObjectsSearchResponseBodyWithDefaults instantiates a new ObjectsSearchResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectsSearchResponseBodyWithDefaults() *ObjectsSearchResponseBody {
	this := ObjectsSearchResponseBody{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectsSearchResponseBody) GetCount() int32 {
	if o == nil || IsNil(o.Count.Get()) {
		var ret int32
		return ret
	}
	return *o.Count.Get()
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectsSearchResponseBody) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Count.Get(), o.Count.IsSet()
}

// HasCount returns a boolean if a field has been set.
func (o *ObjectsSearchResponseBody) HasCount() bool {
	if o != nil && o.Count.IsSet() {
		return true
	}

	return false
}

// SetCount gets a reference to the given NullableInt32 and assigns it to the Count field.
func (o *ObjectsSearchResponseBody) SetCount(v int32) {
	o.Count.Set(&v)
}
// SetCountNil sets the value for Count to be an explicit nil
func (o *ObjectsSearchResponseBody) SetCountNil() {
	o.Count.Set(nil)
}

// UnsetCount ensures that no value is present for Count, not even an explicit nil
func (o *ObjectsSearchResponseBody) UnsetCount() {
	o.Count.Unset()
}

// GetObjects returns the Objects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectsSearchResponseBody) GetObjects() []SearchObject {
	if o == nil {
		var ret []SearchObject
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectsSearchResponseBody) GetObjectsOk() ([]SearchObject, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *ObjectsSearchResponseBody) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []SearchObject and assigns it to the Objects field.
func (o *ObjectsSearchResponseBody) SetObjects(v []SearchObject) {
	o.Objects = v
}

// GetPaginationCookie returns the PaginationCookie field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectsSearchResponseBody) GetPaginationCookie() string {
	if o == nil || IsNil(o.PaginationCookie.Get()) {
		var ret string
		return ret
	}
	return *o.PaginationCookie.Get()
}

// GetPaginationCookieOk returns a tuple with the PaginationCookie field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectsSearchResponseBody) GetPaginationCookieOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaginationCookie.Get(), o.PaginationCookie.IsSet()
}

// HasPaginationCookie returns a boolean if a field has been set.
func (o *ObjectsSearchResponseBody) HasPaginationCookie() bool {
	if o != nil && o.PaginationCookie.IsSet() {
		return true
	}

	return false
}

// SetPaginationCookie gets a reference to the given NullableString and assigns it to the PaginationCookie field.
func (o *ObjectsSearchResponseBody) SetPaginationCookie(v string) {
	o.PaginationCookie.Set(&v)
}
// SetPaginationCookieNil sets the value for PaginationCookie to be an explicit nil
func (o *ObjectsSearchResponseBody) SetPaginationCookieNil() {
	o.PaginationCookie.Set(nil)
}

// UnsetPaginationCookie ensures that no value is present for PaginationCookie, not even an explicit nil
func (o *ObjectsSearchResponseBody) UnsetPaginationCookie() {
	o.PaginationCookie.Unset()
}

func (o ObjectsSearchResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectsSearchResponseBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Count.IsSet() {
		toSerialize["count"] = o.Count.Get()
	}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if o.PaginationCookie.IsSet() {
		toSerialize["paginationCookie"] = o.PaginationCookie.Get()
	}
	return toSerialize, nil
}

type NullableObjectsSearchResponseBody struct {
	value *ObjectsSearchResponseBody
	isSet bool
}

func (v NullableObjectsSearchResponseBody) Get() *ObjectsSearchResponseBody {
	return v.value
}

func (v *NullableObjectsSearchResponseBody) Set(val *ObjectsSearchResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectsSearchResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectsSearchResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectsSearchResponseBody(val *ObjectsSearchResponseBody) *NullableObjectsSearchResponseBody {
	return &NullableObjectsSearchResponseBody{value: val, isSet: true}
}

func (v NullableObjectsSearchResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectsSearchResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


