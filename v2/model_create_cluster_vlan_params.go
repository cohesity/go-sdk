/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateClusterVlanParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateClusterVlanParams{}

// CreateClusterVlanParams Parameters to create vlan on the cluster.
type CreateClusterVlanParams struct {
	// Allow vlan to be used by all tenants without explicit assignment. Set to true only when the vlan is not assigned to any tenant.
	AllTenantAccess NullableBool `json:"allTenantAccess,omitempty"`
	// Vlan IP addresses for apps.
	AppIps []string `json:"appIps,omitempty"`
	// Description of the vlan.
	Description NullableString `json:"description,omitempty"`
	// DNS delegation zones of the vlan.
	DnsDelegationZones []DnsDelegationZone `json:"dnsDelegationZones,omitempty"`
	// Set to true to enable ECMP in the vlan.
	EcmpEnabled NullableBool `json:"ecmpEnabled,omitempty"`
	// FQDN of the vlan.
	Fqdn NullableString `json:"fqdn,omitempty"`
	// Subnet gateway of the vlan. This can be Ipv4 or Ipv6 gateway based on the IP addresses type.
	Gateway NullableString `json:"gateway,omitempty"`
	// Type of IP addresses. The default value is Ipv4.
	IpAddressesType NullableString `json:"ipAddressesType,omitempty"`
	// IP pools from the vlan ip addresses, the IPs in a pool goes together. One IP from each pool forms a VIP group.
	IpPools []IpPool `json:"ipPools,omitempty"`
	// Vlan IP address ranges, only one of ips or ipRanges parameters should be given.
	IpRanges []IpRange `json:"ipRanges,omitempty"`
	// Vlan IP addresses, only one of ips or ipRanges parameters should be given.
	Ips []string `json:"ips,omitempty"`
	// MTU of the vlan.
	Mtu NullableInt32 `json:"mtu,omitempty"`
	// IPv6 or IPv6 subnet in CIDR format i.e ip-address/prefix. Examples: IPv4 subnet'192.168.0.101/24', '10.10.1.32/27'. IPv6 subnet '3005:1231:2006:0025::0/96', 3005:1231:2006:0025::0/128
	Subnet NullableString `json:"subnet,omitempty"`
	// Tenant id to assign vlan to a tenant.
	TenantId NullableString `json:"tenantId,omitempty"`
	// Name of the Vlan.
	VlanName NullableString `json:"vlanName,omitempty"`
	// Vlan interface name, it should be in interface_group_name.vlan_id format.
	InterfaceName string `json:"interfaceName"`
}

type _CreateClusterVlanParams CreateClusterVlanParams

// NewCreateClusterVlanParams instantiates a new CreateClusterVlanParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateClusterVlanParams(interfaceName string) *CreateClusterVlanParams {
	this := CreateClusterVlanParams{}
	var allTenantAccess bool = false
	this.AllTenantAccess = *NewNullableBool(&allTenantAccess)
	var ecmpEnabled bool = false
	this.EcmpEnabled = *NewNullableBool(&ecmpEnabled)
	this.InterfaceName = interfaceName
	return &this
}

// NewCreateClusterVlanParamsWithDefaults instantiates a new CreateClusterVlanParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateClusterVlanParamsWithDefaults() *CreateClusterVlanParams {
	this := CreateClusterVlanParams{}
	var allTenantAccess bool = false
	this.AllTenantAccess = *NewNullableBool(&allTenantAccess)
	var ecmpEnabled bool = false
	this.EcmpEnabled = *NewNullableBool(&ecmpEnabled)
	return &this
}

// GetAllTenantAccess returns the AllTenantAccess field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterVlanParams) GetAllTenantAccess() bool {
	if o == nil || IsNil(o.AllTenantAccess.Get()) {
		var ret bool
		return ret
	}
	return *o.AllTenantAccess.Get()
}

// GetAllTenantAccessOk returns a tuple with the AllTenantAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterVlanParams) GetAllTenantAccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllTenantAccess.Get(), o.AllTenantAccess.IsSet()
}

// HasAllTenantAccess returns a boolean if a field has been set.
func (o *CreateClusterVlanParams) HasAllTenantAccess() bool {
	if o != nil && o.AllTenantAccess.IsSet() {
		return true
	}

	return false
}

// SetAllTenantAccess gets a reference to the given NullableBool and assigns it to the AllTenantAccess field.
func (o *CreateClusterVlanParams) SetAllTenantAccess(v bool) {
	o.AllTenantAccess.Set(&v)
}
// SetAllTenantAccessNil sets the value for AllTenantAccess to be an explicit nil
func (o *CreateClusterVlanParams) SetAllTenantAccessNil() {
	o.AllTenantAccess.Set(nil)
}

// UnsetAllTenantAccess ensures that no value is present for AllTenantAccess, not even an explicit nil
func (o *CreateClusterVlanParams) UnsetAllTenantAccess() {
	o.AllTenantAccess.Unset()
}

// GetAppIps returns the AppIps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterVlanParams) GetAppIps() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AppIps
}

// GetAppIpsOk returns a tuple with the AppIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterVlanParams) GetAppIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.AppIps) {
		return nil, false
	}
	return o.AppIps, true
}

// HasAppIps returns a boolean if a field has been set.
func (o *CreateClusterVlanParams) HasAppIps() bool {
	if o != nil && !IsNil(o.AppIps) {
		return true
	}

	return false
}

// SetAppIps gets a reference to the given []string and assigns it to the AppIps field.
func (o *CreateClusterVlanParams) SetAppIps(v []string) {
	o.AppIps = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterVlanParams) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterVlanParams) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateClusterVlanParams) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateClusterVlanParams) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateClusterVlanParams) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateClusterVlanParams) UnsetDescription() {
	o.Description.Unset()
}

// GetDnsDelegationZones returns the DnsDelegationZones field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterVlanParams) GetDnsDelegationZones() []DnsDelegationZone {
	if o == nil {
		var ret []DnsDelegationZone
		return ret
	}
	return o.DnsDelegationZones
}

// GetDnsDelegationZonesOk returns a tuple with the DnsDelegationZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterVlanParams) GetDnsDelegationZonesOk() ([]DnsDelegationZone, bool) {
	if o == nil || IsNil(o.DnsDelegationZones) {
		return nil, false
	}
	return o.DnsDelegationZones, true
}

// HasDnsDelegationZones returns a boolean if a field has been set.
func (o *CreateClusterVlanParams) HasDnsDelegationZones() bool {
	if o != nil && !IsNil(o.DnsDelegationZones) {
		return true
	}

	return false
}

// SetDnsDelegationZones gets a reference to the given []DnsDelegationZone and assigns it to the DnsDelegationZones field.
func (o *CreateClusterVlanParams) SetDnsDelegationZones(v []DnsDelegationZone) {
	o.DnsDelegationZones = v
}

// GetEcmpEnabled returns the EcmpEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterVlanParams) GetEcmpEnabled() bool {
	if o == nil || IsNil(o.EcmpEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.EcmpEnabled.Get()
}

// GetEcmpEnabledOk returns a tuple with the EcmpEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterVlanParams) GetEcmpEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EcmpEnabled.Get(), o.EcmpEnabled.IsSet()
}

// HasEcmpEnabled returns a boolean if a field has been set.
func (o *CreateClusterVlanParams) HasEcmpEnabled() bool {
	if o != nil && o.EcmpEnabled.IsSet() {
		return true
	}

	return false
}

// SetEcmpEnabled gets a reference to the given NullableBool and assigns it to the EcmpEnabled field.
func (o *CreateClusterVlanParams) SetEcmpEnabled(v bool) {
	o.EcmpEnabled.Set(&v)
}
// SetEcmpEnabledNil sets the value for EcmpEnabled to be an explicit nil
func (o *CreateClusterVlanParams) SetEcmpEnabledNil() {
	o.EcmpEnabled.Set(nil)
}

// UnsetEcmpEnabled ensures that no value is present for EcmpEnabled, not even an explicit nil
func (o *CreateClusterVlanParams) UnsetEcmpEnabled() {
	o.EcmpEnabled.Unset()
}

// GetFqdn returns the Fqdn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterVlanParams) GetFqdn() string {
	if o == nil || IsNil(o.Fqdn.Get()) {
		var ret string
		return ret
	}
	return *o.Fqdn.Get()
}

// GetFqdnOk returns a tuple with the Fqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterVlanParams) GetFqdnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fqdn.Get(), o.Fqdn.IsSet()
}

// HasFqdn returns a boolean if a field has been set.
func (o *CreateClusterVlanParams) HasFqdn() bool {
	if o != nil && o.Fqdn.IsSet() {
		return true
	}

	return false
}

// SetFqdn gets a reference to the given NullableString and assigns it to the Fqdn field.
func (o *CreateClusterVlanParams) SetFqdn(v string) {
	o.Fqdn.Set(&v)
}
// SetFqdnNil sets the value for Fqdn to be an explicit nil
func (o *CreateClusterVlanParams) SetFqdnNil() {
	o.Fqdn.Set(nil)
}

// UnsetFqdn ensures that no value is present for Fqdn, not even an explicit nil
func (o *CreateClusterVlanParams) UnsetFqdn() {
	o.Fqdn.Unset()
}

// GetGateway returns the Gateway field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterVlanParams) GetGateway() string {
	if o == nil || IsNil(o.Gateway.Get()) {
		var ret string
		return ret
	}
	return *o.Gateway.Get()
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterVlanParams) GetGatewayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gateway.Get(), o.Gateway.IsSet()
}

// HasGateway returns a boolean if a field has been set.
func (o *CreateClusterVlanParams) HasGateway() bool {
	if o != nil && o.Gateway.IsSet() {
		return true
	}

	return false
}

// SetGateway gets a reference to the given NullableString and assigns it to the Gateway field.
func (o *CreateClusterVlanParams) SetGateway(v string) {
	o.Gateway.Set(&v)
}
// SetGatewayNil sets the value for Gateway to be an explicit nil
func (o *CreateClusterVlanParams) SetGatewayNil() {
	o.Gateway.Set(nil)
}

// UnsetGateway ensures that no value is present for Gateway, not even an explicit nil
func (o *CreateClusterVlanParams) UnsetGateway() {
	o.Gateway.Unset()
}

// GetIpAddressesType returns the IpAddressesType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterVlanParams) GetIpAddressesType() string {
	if o == nil || IsNil(o.IpAddressesType.Get()) {
		var ret string
		return ret
	}
	return *o.IpAddressesType.Get()
}

// GetIpAddressesTypeOk returns a tuple with the IpAddressesType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterVlanParams) GetIpAddressesTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IpAddressesType.Get(), o.IpAddressesType.IsSet()
}

// HasIpAddressesType returns a boolean if a field has been set.
func (o *CreateClusterVlanParams) HasIpAddressesType() bool {
	if o != nil && o.IpAddressesType.IsSet() {
		return true
	}

	return false
}

// SetIpAddressesType gets a reference to the given NullableString and assigns it to the IpAddressesType field.
func (o *CreateClusterVlanParams) SetIpAddressesType(v string) {
	o.IpAddressesType.Set(&v)
}
// SetIpAddressesTypeNil sets the value for IpAddressesType to be an explicit nil
func (o *CreateClusterVlanParams) SetIpAddressesTypeNil() {
	o.IpAddressesType.Set(nil)
}

// UnsetIpAddressesType ensures that no value is present for IpAddressesType, not even an explicit nil
func (o *CreateClusterVlanParams) UnsetIpAddressesType() {
	o.IpAddressesType.Unset()
}

// GetIpPools returns the IpPools field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterVlanParams) GetIpPools() []IpPool {
	if o == nil {
		var ret []IpPool
		return ret
	}
	return o.IpPools
}

// GetIpPoolsOk returns a tuple with the IpPools field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterVlanParams) GetIpPoolsOk() ([]IpPool, bool) {
	if o == nil || IsNil(o.IpPools) {
		return nil, false
	}
	return o.IpPools, true
}

// HasIpPools returns a boolean if a field has been set.
func (o *CreateClusterVlanParams) HasIpPools() bool {
	if o != nil && !IsNil(o.IpPools) {
		return true
	}

	return false
}

// SetIpPools gets a reference to the given []IpPool and assigns it to the IpPools field.
func (o *CreateClusterVlanParams) SetIpPools(v []IpPool) {
	o.IpPools = v
}

// GetIpRanges returns the IpRanges field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterVlanParams) GetIpRanges() []IpRange {
	if o == nil {
		var ret []IpRange
		return ret
	}
	return o.IpRanges
}

// GetIpRangesOk returns a tuple with the IpRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterVlanParams) GetIpRangesOk() ([]IpRange, bool) {
	if o == nil || IsNil(o.IpRanges) {
		return nil, false
	}
	return o.IpRanges, true
}

// HasIpRanges returns a boolean if a field has been set.
func (o *CreateClusterVlanParams) HasIpRanges() bool {
	if o != nil && !IsNil(o.IpRanges) {
		return true
	}

	return false
}

// SetIpRanges gets a reference to the given []IpRange and assigns it to the IpRanges field.
func (o *CreateClusterVlanParams) SetIpRanges(v []IpRange) {
	o.IpRanges = v
}

// GetIps returns the Ips field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterVlanParams) GetIps() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Ips
}

// GetIpsOk returns a tuple with the Ips field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterVlanParams) GetIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.Ips) {
		return nil, false
	}
	return o.Ips, true
}

// HasIps returns a boolean if a field has been set.
func (o *CreateClusterVlanParams) HasIps() bool {
	if o != nil && !IsNil(o.Ips) {
		return true
	}

	return false
}

// SetIps gets a reference to the given []string and assigns it to the Ips field.
func (o *CreateClusterVlanParams) SetIps(v []string) {
	o.Ips = v
}

// GetMtu returns the Mtu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterVlanParams) GetMtu() int32 {
	if o == nil || IsNil(o.Mtu.Get()) {
		var ret int32
		return ret
	}
	return *o.Mtu.Get()
}

// GetMtuOk returns a tuple with the Mtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterVlanParams) GetMtuOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mtu.Get(), o.Mtu.IsSet()
}

// HasMtu returns a boolean if a field has been set.
func (o *CreateClusterVlanParams) HasMtu() bool {
	if o != nil && o.Mtu.IsSet() {
		return true
	}

	return false
}

// SetMtu gets a reference to the given NullableInt32 and assigns it to the Mtu field.
func (o *CreateClusterVlanParams) SetMtu(v int32) {
	o.Mtu.Set(&v)
}
// SetMtuNil sets the value for Mtu to be an explicit nil
func (o *CreateClusterVlanParams) SetMtuNil() {
	o.Mtu.Set(nil)
}

// UnsetMtu ensures that no value is present for Mtu, not even an explicit nil
func (o *CreateClusterVlanParams) UnsetMtu() {
	o.Mtu.Unset()
}

// GetSubnet returns the Subnet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterVlanParams) GetSubnet() string {
	if o == nil || IsNil(o.Subnet.Get()) {
		var ret string
		return ret
	}
	return *o.Subnet.Get()
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterVlanParams) GetSubnetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subnet.Get(), o.Subnet.IsSet()
}

// HasSubnet returns a boolean if a field has been set.
func (o *CreateClusterVlanParams) HasSubnet() bool {
	if o != nil && o.Subnet.IsSet() {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given NullableString and assigns it to the Subnet field.
func (o *CreateClusterVlanParams) SetSubnet(v string) {
	o.Subnet.Set(&v)
}
// SetSubnetNil sets the value for Subnet to be an explicit nil
func (o *CreateClusterVlanParams) SetSubnetNil() {
	o.Subnet.Set(nil)
}

// UnsetSubnet ensures that no value is present for Subnet, not even an explicit nil
func (o *CreateClusterVlanParams) UnsetSubnet() {
	o.Subnet.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterVlanParams) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterVlanParams) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *CreateClusterVlanParams) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *CreateClusterVlanParams) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *CreateClusterVlanParams) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *CreateClusterVlanParams) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetVlanName returns the VlanName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterVlanParams) GetVlanName() string {
	if o == nil || IsNil(o.VlanName.Get()) {
		var ret string
		return ret
	}
	return *o.VlanName.Get()
}

// GetVlanNameOk returns a tuple with the VlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterVlanParams) GetVlanNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VlanName.Get(), o.VlanName.IsSet()
}

// HasVlanName returns a boolean if a field has been set.
func (o *CreateClusterVlanParams) HasVlanName() bool {
	if o != nil && o.VlanName.IsSet() {
		return true
	}

	return false
}

// SetVlanName gets a reference to the given NullableString and assigns it to the VlanName field.
func (o *CreateClusterVlanParams) SetVlanName(v string) {
	o.VlanName.Set(&v)
}
// SetVlanNameNil sets the value for VlanName to be an explicit nil
func (o *CreateClusterVlanParams) SetVlanNameNil() {
	o.VlanName.Set(nil)
}

// UnsetVlanName ensures that no value is present for VlanName, not even an explicit nil
func (o *CreateClusterVlanParams) UnsetVlanName() {
	o.VlanName.Unset()
}

// GetInterfaceName returns the InterfaceName field value
func (o *CreateClusterVlanParams) GetInterfaceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InterfaceName
}

// GetInterfaceNameOk returns a tuple with the InterfaceName field value
// and a boolean to check if the value has been set.
func (o *CreateClusterVlanParams) GetInterfaceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InterfaceName, true
}

// SetInterfaceName sets field value
func (o *CreateClusterVlanParams) SetInterfaceName(v string) {
	o.InterfaceName = v
}

func (o CreateClusterVlanParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateClusterVlanParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AllTenantAccess.IsSet() {
		toSerialize["allTenantAccess"] = o.AllTenantAccess.Get()
	}
	if o.AppIps != nil {
		toSerialize["appIps"] = o.AppIps
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DnsDelegationZones != nil {
		toSerialize["dnsDelegationZones"] = o.DnsDelegationZones
	}
	if o.EcmpEnabled.IsSet() {
		toSerialize["ecmpEnabled"] = o.EcmpEnabled.Get()
	}
	if o.Fqdn.IsSet() {
		toSerialize["fqdn"] = o.Fqdn.Get()
	}
	if o.Gateway.IsSet() {
		toSerialize["gateway"] = o.Gateway.Get()
	}
	if o.IpAddressesType.IsSet() {
		toSerialize["ipAddressesType"] = o.IpAddressesType.Get()
	}
	if o.IpPools != nil {
		toSerialize["ipPools"] = o.IpPools
	}
	if o.IpRanges != nil {
		toSerialize["ipRanges"] = o.IpRanges
	}
	if o.Ips != nil {
		toSerialize["ips"] = o.Ips
	}
	if o.Mtu.IsSet() {
		toSerialize["mtu"] = o.Mtu.Get()
	}
	if o.Subnet.IsSet() {
		toSerialize["subnet"] = o.Subnet.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.VlanName.IsSet() {
		toSerialize["vlanName"] = o.VlanName.Get()
	}
	toSerialize["interfaceName"] = o.InterfaceName
	return toSerialize, nil
}

func (o *CreateClusterVlanParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"interfaceName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateClusterVlanParams := _CreateClusterVlanParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateClusterVlanParams)

	if err != nil {
		return err
	}

	*o = CreateClusterVlanParams(varCreateClusterVlanParams)

	return err
}

type NullableCreateClusterVlanParams struct {
	value *CreateClusterVlanParams
	isSet bool
}

func (v NullableCreateClusterVlanParams) Get() *CreateClusterVlanParams {
	return v.value
}

func (v *NullableCreateClusterVlanParams) Set(val *CreateClusterVlanParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateClusterVlanParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateClusterVlanParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateClusterVlanParams(val *CreateClusterVlanParams) *NullableCreateClusterVlanParams {
	return &NullableCreateClusterVlanParams{value: val, isSet: true}
}

func (v NullableCreateClusterVlanParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateClusterVlanParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


