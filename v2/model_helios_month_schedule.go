/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the HeliosMonthSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeliosMonthSchedule{}

// HeliosMonthSchedule Specifies settings that define a schedule for a Protection Group runs to on specific week and specific days of that week.
type HeliosMonthSchedule struct {
	// Specifies a list of days of the week when to start Protection Group Runs. <br> Example: To run a Protection Group on every Monday and Tuesday, set the schedule with following values: <br>  unit: 'Weeks' <br>  dayOfWeek: ['Monday','Tuesday']
	DayOfWeek []string `json:"dayOfWeek,omitempty"`
	// Specifies the week of the month (such as 'Third') in a Monthly Schedule specified by unit field as 'Months'. <br>This field is used in combination with 'dayOfWeek' to define the day in the month to start the Protection Group Run. <br> Example: if 'weekOfMonth' is set to 'Third' and day is set to 'Monday', a backup is performed on the third Monday of every month.
	WeekOfMonth NullableString `json:"weekOfMonth,omitempty"`
}

// NewHeliosMonthSchedule instantiates a new HeliosMonthSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosMonthSchedule() *HeliosMonthSchedule {
	this := HeliosMonthSchedule{}
	return &this
}

// NewHeliosMonthScheduleWithDefaults instantiates a new HeliosMonthSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosMonthScheduleWithDefaults() *HeliosMonthSchedule {
	this := HeliosMonthSchedule{}
	return &this
}

// GetDayOfWeek returns the DayOfWeek field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosMonthSchedule) GetDayOfWeek() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.DayOfWeek
}

// GetDayOfWeekOk returns a tuple with the DayOfWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosMonthSchedule) GetDayOfWeekOk() ([]string, bool) {
	if o == nil || IsNil(o.DayOfWeek) {
		return nil, false
	}
	return o.DayOfWeek, true
}

// HasDayOfWeek returns a boolean if a field has been set.
func (o *HeliosMonthSchedule) HasDayOfWeek() bool {
	if o != nil && !IsNil(o.DayOfWeek) {
		return true
	}

	return false
}

// SetDayOfWeek gets a reference to the given []string and assigns it to the DayOfWeek field.
func (o *HeliosMonthSchedule) SetDayOfWeek(v []string) {
	o.DayOfWeek = v
}

// GetWeekOfMonth returns the WeekOfMonth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosMonthSchedule) GetWeekOfMonth() string {
	if o == nil || IsNil(o.WeekOfMonth.Get()) {
		var ret string
		return ret
	}
	return *o.WeekOfMonth.Get()
}

// GetWeekOfMonthOk returns a tuple with the WeekOfMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosMonthSchedule) GetWeekOfMonthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WeekOfMonth.Get(), o.WeekOfMonth.IsSet()
}

// HasWeekOfMonth returns a boolean if a field has been set.
func (o *HeliosMonthSchedule) HasWeekOfMonth() bool {
	if o != nil && o.WeekOfMonth.IsSet() {
		return true
	}

	return false
}

// SetWeekOfMonth gets a reference to the given NullableString and assigns it to the WeekOfMonth field.
func (o *HeliosMonthSchedule) SetWeekOfMonth(v string) {
	o.WeekOfMonth.Set(&v)
}
// SetWeekOfMonthNil sets the value for WeekOfMonth to be an explicit nil
func (o *HeliosMonthSchedule) SetWeekOfMonthNil() {
	o.WeekOfMonth.Set(nil)
}

// UnsetWeekOfMonth ensures that no value is present for WeekOfMonth, not even an explicit nil
func (o *HeliosMonthSchedule) UnsetWeekOfMonth() {
	o.WeekOfMonth.Unset()
}

func (o HeliosMonthSchedule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeliosMonthSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DayOfWeek != nil {
		toSerialize["dayOfWeek"] = o.DayOfWeek
	}
	if o.WeekOfMonth.IsSet() {
		toSerialize["weekOfMonth"] = o.WeekOfMonth.Get()
	}
	return toSerialize, nil
}

type NullableHeliosMonthSchedule struct {
	value *HeliosMonthSchedule
	isSet bool
}

func (v NullableHeliosMonthSchedule) Get() *HeliosMonthSchedule {
	return v.value
}

func (v *NullableHeliosMonthSchedule) Set(val *HeliosMonthSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosMonthSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosMonthSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosMonthSchedule(val *HeliosMonthSchedule) *NullableHeliosMonthSchedule {
	return &NullableHeliosMonthSchedule{value: val, isSet: true}
}

func (v NullableHeliosMonthSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosMonthSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


