/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ViewStatsInLastHours type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ViewStatsInLastHours{}

// ViewStatsInLastHours Specifies the View stats for last hours.
type ViewStatsInLastHours struct {
	// Specifies the time range.
	LastHours NullableInt64 `json:"lastHours,omitempty"`
	// Specifies the stats value for NFS protocol.
	NfsProtocolValue NullableInt64 `json:"nfsProtocolValue,omitempty"`
	// Specifies the stats value for S3 protocol.
	S3ProtocolValue NullableInt64 `json:"s3ProtocolValue,omitempty"`
	// Specifies the stats value for SMB protocol.
	SmbProtocolValue NullableInt64 `json:"smbProtocolValue,omitempty"`
	// Specifies the stats value for any protocols.
	Value NullableInt64 `json:"value,omitempty"`
}

// NewViewStatsInLastHours instantiates a new ViewStatsInLastHours object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewStatsInLastHours() *ViewStatsInLastHours {
	this := ViewStatsInLastHours{}
	return &this
}

// NewViewStatsInLastHoursWithDefaults instantiates a new ViewStatsInLastHours object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewStatsInLastHoursWithDefaults() *ViewStatsInLastHours {
	this := ViewStatsInLastHours{}
	return &this
}

// GetLastHours returns the LastHours field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewStatsInLastHours) GetLastHours() int64 {
	if o == nil || IsNil(o.LastHours.Get()) {
		var ret int64
		return ret
	}
	return *o.LastHours.Get()
}

// GetLastHoursOk returns a tuple with the LastHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewStatsInLastHours) GetLastHoursOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastHours.Get(), o.LastHours.IsSet()
}

// HasLastHours returns a boolean if a field has been set.
func (o *ViewStatsInLastHours) HasLastHours() bool {
	if o != nil && o.LastHours.IsSet() {
		return true
	}

	return false
}

// SetLastHours gets a reference to the given NullableInt64 and assigns it to the LastHours field.
func (o *ViewStatsInLastHours) SetLastHours(v int64) {
	o.LastHours.Set(&v)
}
// SetLastHoursNil sets the value for LastHours to be an explicit nil
func (o *ViewStatsInLastHours) SetLastHoursNil() {
	o.LastHours.Set(nil)
}

// UnsetLastHours ensures that no value is present for LastHours, not even an explicit nil
func (o *ViewStatsInLastHours) UnsetLastHours() {
	o.LastHours.Unset()
}

// GetNfsProtocolValue returns the NfsProtocolValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewStatsInLastHours) GetNfsProtocolValue() int64 {
	if o == nil || IsNil(o.NfsProtocolValue.Get()) {
		var ret int64
		return ret
	}
	return *o.NfsProtocolValue.Get()
}

// GetNfsProtocolValueOk returns a tuple with the NfsProtocolValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewStatsInLastHours) GetNfsProtocolValueOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.NfsProtocolValue.Get(), o.NfsProtocolValue.IsSet()
}

// HasNfsProtocolValue returns a boolean if a field has been set.
func (o *ViewStatsInLastHours) HasNfsProtocolValue() bool {
	if o != nil && o.NfsProtocolValue.IsSet() {
		return true
	}

	return false
}

// SetNfsProtocolValue gets a reference to the given NullableInt64 and assigns it to the NfsProtocolValue field.
func (o *ViewStatsInLastHours) SetNfsProtocolValue(v int64) {
	o.NfsProtocolValue.Set(&v)
}
// SetNfsProtocolValueNil sets the value for NfsProtocolValue to be an explicit nil
func (o *ViewStatsInLastHours) SetNfsProtocolValueNil() {
	o.NfsProtocolValue.Set(nil)
}

// UnsetNfsProtocolValue ensures that no value is present for NfsProtocolValue, not even an explicit nil
func (o *ViewStatsInLastHours) UnsetNfsProtocolValue() {
	o.NfsProtocolValue.Unset()
}

// GetS3ProtocolValue returns the S3ProtocolValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewStatsInLastHours) GetS3ProtocolValue() int64 {
	if o == nil || IsNil(o.S3ProtocolValue.Get()) {
		var ret int64
		return ret
	}
	return *o.S3ProtocolValue.Get()
}

// GetS3ProtocolValueOk returns a tuple with the S3ProtocolValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewStatsInLastHours) GetS3ProtocolValueOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.S3ProtocolValue.Get(), o.S3ProtocolValue.IsSet()
}

// HasS3ProtocolValue returns a boolean if a field has been set.
func (o *ViewStatsInLastHours) HasS3ProtocolValue() bool {
	if o != nil && o.S3ProtocolValue.IsSet() {
		return true
	}

	return false
}

// SetS3ProtocolValue gets a reference to the given NullableInt64 and assigns it to the S3ProtocolValue field.
func (o *ViewStatsInLastHours) SetS3ProtocolValue(v int64) {
	o.S3ProtocolValue.Set(&v)
}
// SetS3ProtocolValueNil sets the value for S3ProtocolValue to be an explicit nil
func (o *ViewStatsInLastHours) SetS3ProtocolValueNil() {
	o.S3ProtocolValue.Set(nil)
}

// UnsetS3ProtocolValue ensures that no value is present for S3ProtocolValue, not even an explicit nil
func (o *ViewStatsInLastHours) UnsetS3ProtocolValue() {
	o.S3ProtocolValue.Unset()
}

// GetSmbProtocolValue returns the SmbProtocolValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewStatsInLastHours) GetSmbProtocolValue() int64 {
	if o == nil || IsNil(o.SmbProtocolValue.Get()) {
		var ret int64
		return ret
	}
	return *o.SmbProtocolValue.Get()
}

// GetSmbProtocolValueOk returns a tuple with the SmbProtocolValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewStatsInLastHours) GetSmbProtocolValueOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SmbProtocolValue.Get(), o.SmbProtocolValue.IsSet()
}

// HasSmbProtocolValue returns a boolean if a field has been set.
func (o *ViewStatsInLastHours) HasSmbProtocolValue() bool {
	if o != nil && o.SmbProtocolValue.IsSet() {
		return true
	}

	return false
}

// SetSmbProtocolValue gets a reference to the given NullableInt64 and assigns it to the SmbProtocolValue field.
func (o *ViewStatsInLastHours) SetSmbProtocolValue(v int64) {
	o.SmbProtocolValue.Set(&v)
}
// SetSmbProtocolValueNil sets the value for SmbProtocolValue to be an explicit nil
func (o *ViewStatsInLastHours) SetSmbProtocolValueNil() {
	o.SmbProtocolValue.Set(nil)
}

// UnsetSmbProtocolValue ensures that no value is present for SmbProtocolValue, not even an explicit nil
func (o *ViewStatsInLastHours) UnsetSmbProtocolValue() {
	o.SmbProtocolValue.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewStatsInLastHours) GetValue() int64 {
	if o == nil || IsNil(o.Value.Get()) {
		var ret int64
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewStatsInLastHours) GetValueOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *ViewStatsInLastHours) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableInt64 and assigns it to the Value field.
func (o *ViewStatsInLastHours) SetValue(v int64) {
	o.Value.Set(&v)
}
// SetValueNil sets the value for Value to be an explicit nil
func (o *ViewStatsInLastHours) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *ViewStatsInLastHours) UnsetValue() {
	o.Value.Unset()
}

func (o ViewStatsInLastHours) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ViewStatsInLastHours) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.LastHours.IsSet() {
		toSerialize["lastHours"] = o.LastHours.Get()
	}
	if o.NfsProtocolValue.IsSet() {
		toSerialize["nfsProtocolValue"] = o.NfsProtocolValue.Get()
	}
	if o.S3ProtocolValue.IsSet() {
		toSerialize["s3ProtocolValue"] = o.S3ProtocolValue.Get()
	}
	if o.SmbProtocolValue.IsSet() {
		toSerialize["smbProtocolValue"] = o.SmbProtocolValue.Get()
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	return toSerialize, nil
}

type NullableViewStatsInLastHours struct {
	value *ViewStatsInLastHours
	isSet bool
}

func (v NullableViewStatsInLastHours) Get() *ViewStatsInLastHours {
	return v.value
}

func (v *NullableViewStatsInLastHours) Set(val *ViewStatsInLastHours) {
	v.value = val
	v.isSet = true
}

func (v NullableViewStatsInLastHours) IsSet() bool {
	return v.isSet
}

func (v *NullableViewStatsInLastHours) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewStatsInLastHours(val *ViewStatsInLastHours) *NullableViewStatsInLastHours {
	return &NullableViewStatsInLastHours{value: val, isSet: true}
}

func (v NullableViewStatsInLastHours) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewStatsInLastHours) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


