/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExternalVendorTenantMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalVendorTenantMetadata{}

// ExternalVendorTenantMetadata Specifies the additional metadata for the tenant that is specifically set by the external vendors who are responsible for managing tenants. This field will only applicable if tenant creation is happening for a specially provisioned clusters for external vendors.
type ExternalVendorTenantMetadata struct {
	IbmTenantMetadataParams *IbmTenantMetadataParams `json:"ibmTenantMetadataParams,omitempty"`
	// Specifies the type of the external vendor. The type specific parameters must be specified the provided type.
	Type NullableString `json:"type"`
}

type _ExternalVendorTenantMetadata ExternalVendorTenantMetadata

// NewExternalVendorTenantMetadata instantiates a new ExternalVendorTenantMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalVendorTenantMetadata(type_ NullableString) *ExternalVendorTenantMetadata {
	this := ExternalVendorTenantMetadata{}
	this.Type = type_
	return &this
}

// NewExternalVendorTenantMetadataWithDefaults instantiates a new ExternalVendorTenantMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalVendorTenantMetadataWithDefaults() *ExternalVendorTenantMetadata {
	this := ExternalVendorTenantMetadata{}
	return &this
}

// GetIbmTenantMetadataParams returns the IbmTenantMetadataParams field value if set, zero value otherwise.
func (o *ExternalVendorTenantMetadata) GetIbmTenantMetadataParams() IbmTenantMetadataParams {
	if o == nil || IsNil(o.IbmTenantMetadataParams) {
		var ret IbmTenantMetadataParams
		return ret
	}
	return *o.IbmTenantMetadataParams
}

// GetIbmTenantMetadataParamsOk returns a tuple with the IbmTenantMetadataParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalVendorTenantMetadata) GetIbmTenantMetadataParamsOk() (*IbmTenantMetadataParams, bool) {
	if o == nil || IsNil(o.IbmTenantMetadataParams) {
		return nil, false
	}
	return o.IbmTenantMetadataParams, true
}

// HasIbmTenantMetadataParams returns a boolean if a field has been set.
func (o *ExternalVendorTenantMetadata) HasIbmTenantMetadataParams() bool {
	if o != nil && !IsNil(o.IbmTenantMetadataParams) {
		return true
	}

	return false
}

// SetIbmTenantMetadataParams gets a reference to the given IbmTenantMetadataParams and assigns it to the IbmTenantMetadataParams field.
func (o *ExternalVendorTenantMetadata) SetIbmTenantMetadataParams(v IbmTenantMetadataParams) {
	o.IbmTenantMetadataParams = &v
}

// GetType returns the Type field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ExternalVendorTenantMetadata) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}

	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalVendorTenantMetadata) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// SetType sets field value
func (o *ExternalVendorTenantMetadata) SetType(v string) {
	o.Type.Set(&v)
}

func (o ExternalVendorTenantMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalVendorTenantMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IbmTenantMetadataParams) {
		toSerialize["ibmTenantMetadataParams"] = o.IbmTenantMetadataParams
	}
	toSerialize["type"] = o.Type.Get()
	return toSerialize, nil
}

func (o *ExternalVendorTenantMetadata) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalVendorTenantMetadata := _ExternalVendorTenantMetadata{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalVendorTenantMetadata)

	if err != nil {
		return err
	}

	*o = ExternalVendorTenantMetadata(varExternalVendorTenantMetadata)

	return err
}

type NullableExternalVendorTenantMetadata struct {
	value *ExternalVendorTenantMetadata
	isSet bool
}

func (v NullableExternalVendorTenantMetadata) Get() *ExternalVendorTenantMetadata {
	return v.value
}

func (v *NullableExternalVendorTenantMetadata) Set(val *ExternalVendorTenantMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalVendorTenantMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalVendorTenantMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalVendorTenantMetadata(val *ExternalVendorTenantMetadata) *NullableExternalVendorTenantMetadata {
	return &NullableExternalVendorTenantMetadata{value: val, isSet: true}
}

func (v NullableExternalVendorTenantMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalVendorTenantMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


