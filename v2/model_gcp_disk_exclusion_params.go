/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the GcpDiskExclusionParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpDiskExclusionParams{}

// GcpDiskExclusionParams Specifies the paramaters to exclude disks attached to GCP VM instances and exclude VMs without disks.
type GcpDiskExclusionParams struct {
	// Specifies the paramaters to exclude VM without disks.
	ExcludeVmWithNoDisk NullableBool `json:"excludeVmWithNoDisk,omitempty"`
	// Raw boolean query given as input by the user to exclude disk. User can input params in raw query form: (<> AND <> AND <> ..) OR (<> AND <> AND <> ..) OR (..) OR (..) OR .. There cannot be an OR operator inside the bracket. Example query: (K1 = V1 AND K2 = V2 AND K3 != V3) OR (K4 = V4 AND K6 != V6).
	RawQuery NullableString `json:"rawQuery,omitempty"`
}

// NewGcpDiskExclusionParams instantiates a new GcpDiskExclusionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpDiskExclusionParams() *GcpDiskExclusionParams {
	this := GcpDiskExclusionParams{}
	return &this
}

// NewGcpDiskExclusionParamsWithDefaults instantiates a new GcpDiskExclusionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpDiskExclusionParamsWithDefaults() *GcpDiskExclusionParams {
	this := GcpDiskExclusionParams{}
	return &this
}

// GetExcludeVmWithNoDisk returns the ExcludeVmWithNoDisk field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GcpDiskExclusionParams) GetExcludeVmWithNoDisk() bool {
	if o == nil || IsNil(o.ExcludeVmWithNoDisk.Get()) {
		var ret bool
		return ret
	}
	return *o.ExcludeVmWithNoDisk.Get()
}

// GetExcludeVmWithNoDiskOk returns a tuple with the ExcludeVmWithNoDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GcpDiskExclusionParams) GetExcludeVmWithNoDiskOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExcludeVmWithNoDisk.Get(), o.ExcludeVmWithNoDisk.IsSet()
}

// HasExcludeVmWithNoDisk returns a boolean if a field has been set.
func (o *GcpDiskExclusionParams) HasExcludeVmWithNoDisk() bool {
	if o != nil && o.ExcludeVmWithNoDisk.IsSet() {
		return true
	}

	return false
}

// SetExcludeVmWithNoDisk gets a reference to the given NullableBool and assigns it to the ExcludeVmWithNoDisk field.
func (o *GcpDiskExclusionParams) SetExcludeVmWithNoDisk(v bool) {
	o.ExcludeVmWithNoDisk.Set(&v)
}
// SetExcludeVmWithNoDiskNil sets the value for ExcludeVmWithNoDisk to be an explicit nil
func (o *GcpDiskExclusionParams) SetExcludeVmWithNoDiskNil() {
	o.ExcludeVmWithNoDisk.Set(nil)
}

// UnsetExcludeVmWithNoDisk ensures that no value is present for ExcludeVmWithNoDisk, not even an explicit nil
func (o *GcpDiskExclusionParams) UnsetExcludeVmWithNoDisk() {
	o.ExcludeVmWithNoDisk.Unset()
}

// GetRawQuery returns the RawQuery field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GcpDiskExclusionParams) GetRawQuery() string {
	if o == nil || IsNil(o.RawQuery.Get()) {
		var ret string
		return ret
	}
	return *o.RawQuery.Get()
}

// GetRawQueryOk returns a tuple with the RawQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GcpDiskExclusionParams) GetRawQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RawQuery.Get(), o.RawQuery.IsSet()
}

// HasRawQuery returns a boolean if a field has been set.
func (o *GcpDiskExclusionParams) HasRawQuery() bool {
	if o != nil && o.RawQuery.IsSet() {
		return true
	}

	return false
}

// SetRawQuery gets a reference to the given NullableString and assigns it to the RawQuery field.
func (o *GcpDiskExclusionParams) SetRawQuery(v string) {
	o.RawQuery.Set(&v)
}
// SetRawQueryNil sets the value for RawQuery to be an explicit nil
func (o *GcpDiskExclusionParams) SetRawQueryNil() {
	o.RawQuery.Set(nil)
}

// UnsetRawQuery ensures that no value is present for RawQuery, not even an explicit nil
func (o *GcpDiskExclusionParams) UnsetRawQuery() {
	o.RawQuery.Unset()
}

func (o GcpDiskExclusionParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpDiskExclusionParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ExcludeVmWithNoDisk.IsSet() {
		toSerialize["excludeVmWithNoDisk"] = o.ExcludeVmWithNoDisk.Get()
	}
	if o.RawQuery.IsSet() {
		toSerialize["rawQuery"] = o.RawQuery.Get()
	}
	return toSerialize, nil
}

type NullableGcpDiskExclusionParams struct {
	value *GcpDiskExclusionParams
	isSet bool
}

func (v NullableGcpDiskExclusionParams) Get() *GcpDiskExclusionParams {
	return v.value
}

func (v *NullableGcpDiskExclusionParams) Set(val *GcpDiskExclusionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpDiskExclusionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpDiskExclusionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpDiskExclusionParams(val *GcpDiskExclusionParams) *NullableGcpDiskExclusionParams {
	return &NullableGcpDiskExclusionParams{value: val, isSet: true}
}

func (v NullableGcpDiskExclusionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpDiskExclusionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


