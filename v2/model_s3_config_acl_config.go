/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the S3ConfigAclConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &S3ConfigAclConfig{}

// S3ConfigAclConfig Specifies the ACL config of the View as an S3 bucket.
type S3ConfigAclConfig struct {
	// Specifies a list of ACL grants.
	Grants []AclGrant `json:"grants,omitempty"`
}

// NewS3ConfigAclConfig instantiates a new S3ConfigAclConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3ConfigAclConfig() *S3ConfigAclConfig {
	this := S3ConfigAclConfig{}
	return &this
}

// NewS3ConfigAclConfigWithDefaults instantiates a new S3ConfigAclConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3ConfigAclConfigWithDefaults() *S3ConfigAclConfig {
	this := S3ConfigAclConfig{}
	return &this
}

// GetGrants returns the Grants field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *S3ConfigAclConfig) GetGrants() []AclGrant {
	if o == nil {
		var ret []AclGrant
		return ret
	}
	return o.Grants
}

// GetGrantsOk returns a tuple with the Grants field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *S3ConfigAclConfig) GetGrantsOk() ([]AclGrant, bool) {
	if o == nil || IsNil(o.Grants) {
		return nil, false
	}
	return o.Grants, true
}

// HasGrants returns a boolean if a field has been set.
func (o *S3ConfigAclConfig) HasGrants() bool {
	if o != nil && !IsNil(o.Grants) {
		return true
	}

	return false
}

// SetGrants gets a reference to the given []AclGrant and assigns it to the Grants field.
func (o *S3ConfigAclConfig) SetGrants(v []AclGrant) {
	o.Grants = v
}

func (o S3ConfigAclConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o S3ConfigAclConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Grants != nil {
		toSerialize["grants"] = o.Grants
	}
	return toSerialize, nil
}

type NullableS3ConfigAclConfig struct {
	value *S3ConfigAclConfig
	isSet bool
}

func (v NullableS3ConfigAclConfig) Get() *S3ConfigAclConfig {
	return v.value
}

func (v *NullableS3ConfigAclConfig) Set(val *S3ConfigAclConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableS3ConfigAclConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableS3ConfigAclConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3ConfigAclConfig(val *S3ConfigAclConfig) *NullableS3ConfigAclConfig {
	return &NullableS3ConfigAclConfig{value: val, isSet: true}
}

func (v NullableS3ConfigAclConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3ConfigAclConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


