/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ClusterIpmiUsers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterIpmiUsers{}

// ClusterIpmiUsers Specifies the  cluster level IPMI user name and the list of node level IPMI user names..
type ClusterIpmiUsers struct {
	// IPMI user name at the cluster level for the cluster.
	ClusterIpmiUsername NullableString `json:"clusterIpmiUsername,omitempty"`
	// Specifies the ipmi user info for all the nodes in the cluster.
	NodeIpmiUsers []NodeIpmiUser `json:"nodeIpmiUsers,omitempty"`
}

// NewClusterIpmiUsers instantiates a new ClusterIpmiUsers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterIpmiUsers() *ClusterIpmiUsers {
	this := ClusterIpmiUsers{}
	return &this
}

// NewClusterIpmiUsersWithDefaults instantiates a new ClusterIpmiUsers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterIpmiUsersWithDefaults() *ClusterIpmiUsers {
	this := ClusterIpmiUsers{}
	return &this
}

// GetClusterIpmiUsername returns the ClusterIpmiUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterIpmiUsers) GetClusterIpmiUsername() string {
	if o == nil || IsNil(o.ClusterIpmiUsername.Get()) {
		var ret string
		return ret
	}
	return *o.ClusterIpmiUsername.Get()
}

// GetClusterIpmiUsernameOk returns a tuple with the ClusterIpmiUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterIpmiUsers) GetClusterIpmiUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterIpmiUsername.Get(), o.ClusterIpmiUsername.IsSet()
}

// HasClusterIpmiUsername returns a boolean if a field has been set.
func (o *ClusterIpmiUsers) HasClusterIpmiUsername() bool {
	if o != nil && o.ClusterIpmiUsername.IsSet() {
		return true
	}

	return false
}

// SetClusterIpmiUsername gets a reference to the given NullableString and assigns it to the ClusterIpmiUsername field.
func (o *ClusterIpmiUsers) SetClusterIpmiUsername(v string) {
	o.ClusterIpmiUsername.Set(&v)
}
// SetClusterIpmiUsernameNil sets the value for ClusterIpmiUsername to be an explicit nil
func (o *ClusterIpmiUsers) SetClusterIpmiUsernameNil() {
	o.ClusterIpmiUsername.Set(nil)
}

// UnsetClusterIpmiUsername ensures that no value is present for ClusterIpmiUsername, not even an explicit nil
func (o *ClusterIpmiUsers) UnsetClusterIpmiUsername() {
	o.ClusterIpmiUsername.Unset()
}

// GetNodeIpmiUsers returns the NodeIpmiUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterIpmiUsers) GetNodeIpmiUsers() []NodeIpmiUser {
	if o == nil {
		var ret []NodeIpmiUser
		return ret
	}
	return o.NodeIpmiUsers
}

// GetNodeIpmiUsersOk returns a tuple with the NodeIpmiUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterIpmiUsers) GetNodeIpmiUsersOk() ([]NodeIpmiUser, bool) {
	if o == nil || IsNil(o.NodeIpmiUsers) {
		return nil, false
	}
	return o.NodeIpmiUsers, true
}

// HasNodeIpmiUsers returns a boolean if a field has been set.
func (o *ClusterIpmiUsers) HasNodeIpmiUsers() bool {
	if o != nil && !IsNil(o.NodeIpmiUsers) {
		return true
	}

	return false
}

// SetNodeIpmiUsers gets a reference to the given []NodeIpmiUser and assigns it to the NodeIpmiUsers field.
func (o *ClusterIpmiUsers) SetNodeIpmiUsers(v []NodeIpmiUser) {
	o.NodeIpmiUsers = v
}

func (o ClusterIpmiUsers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterIpmiUsers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterIpmiUsername.IsSet() {
		toSerialize["clusterIpmiUsername"] = o.ClusterIpmiUsername.Get()
	}
	if o.NodeIpmiUsers != nil {
		toSerialize["nodeIpmiUsers"] = o.NodeIpmiUsers
	}
	return toSerialize, nil
}

type NullableClusterIpmiUsers struct {
	value *ClusterIpmiUsers
	isSet bool
}

func (v NullableClusterIpmiUsers) Get() *ClusterIpmiUsers {
	return v.value
}

func (v *NullableClusterIpmiUsers) Set(val *ClusterIpmiUsers) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterIpmiUsers) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterIpmiUsers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterIpmiUsers(val *ClusterIpmiUsers) *NullableClusterIpmiUsers {
	return &NullableClusterIpmiUsers{value: val, isSet: true}
}

func (v NullableClusterIpmiUsers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterIpmiUsers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


