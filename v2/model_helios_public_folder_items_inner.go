/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the HeliosPublicFolderItemsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeliosPublicFolderItemsInner{}

// HeliosPublicFolderItemsInner struct for HeliosPublicFolderItemsInner
type HeliosPublicFolderItemsInner struct {
	// List of Clusters Identifiers to filter from. The format is clusterId:clusterIncarnationId.
	ClusterIdentifier NullableString `json:"clusterIdentifier,omitempty" validate:"regexp=^([0-9]+:[0-9]+)$"`
	// Specifies the region id of the cluster. Only valid for DMaaS clusters.
	RegionId NullableString `json:"regionId,omitempty"`
	// Specifies the name of the object.
	Name NullableString `json:"name,omitempty"`
	// Specifies the path of the object.
	Path NullableString `json:"path,omitempty"`
	// Specifies the protection policy id for this file.
	PolicyId NullableString `json:"policyId,omitempty"`
	// Specifies the protection policy name for this file.
	PolicyName NullableString `json:"policyName,omitempty"`
	// \"Specifies the protection group id which contains this object.\"
	ProtectionGroupId NullableString `json:"protectionGroupId,omitempty"`
	// \"Specifies the protection group name which contains this object.\"
	ProtectionGroupName NullableString `json:"protectionGroupName,omitempty"`
	// Specifies the Source Object information.
	SourceInfo map[string]interface{} `json:"sourceInfo,omitempty"`
	// \"Specifies the Storage Domain id where the backup data of Object is present.\"
	StorageDomainId NullableInt64 `json:"storageDomainId,omitempty"`
	// Specifies snapshot tags applied to the object.
	SnapshotTags []SnapshotTagInfo `json:"snapshotTags,omitempty"`
	// Specifies tag applied to the object.
	Tags []TagInfo `json:"tags,omitempty"`
	// Specifies whether the item has any attachments
	HasAttachments NullableBool `json:"hasAttachments,omitempty"`
	// Specifies the id of the indexed item.
	Id NullableString `json:"id,omitempty"`
	// Specifies the item class of the indexed item.
	ItemClass NullableString `json:"itemClass,omitempty"`
	// Specifies the size in bytes for the indexed item.
	ItemSize NullableInt64 `json:"itemSize,omitempty"`
	// Specifies the id of parent folder the indexed item.
	ParentFolderId NullableString `json:"parentFolderId,omitempty"`
	// Specifies the Unix timestamp epoch in seconds at which this item is received.
	ReceivedTimeSecs NullableInt64 `json:"receivedTimeSecs,omitempty"`
	// Specifies the subject of the indexed item.
	Subject NullableString `json:"subject,omitempty"`
	// Specifies the Public folder item type.
	Type NullableString `json:"type,omitempty"`
}

// NewHeliosPublicFolderItemsInner instantiates a new HeliosPublicFolderItemsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosPublicFolderItemsInner() *HeliosPublicFolderItemsInner {
	this := HeliosPublicFolderItemsInner{}
	return &this
}

// NewHeliosPublicFolderItemsInnerWithDefaults instantiates a new HeliosPublicFolderItemsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosPublicFolderItemsInnerWithDefaults() *HeliosPublicFolderItemsInner {
	this := HeliosPublicFolderItemsInner{}
	return &this
}

// GetClusterIdentifier returns the ClusterIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetClusterIdentifier() string {
	if o == nil || IsNil(o.ClusterIdentifier.Get()) {
		var ret string
		return ret
	}
	return *o.ClusterIdentifier.Get()
}

// GetClusterIdentifierOk returns a tuple with the ClusterIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetClusterIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterIdentifier.Get(), o.ClusterIdentifier.IsSet()
}

// HasClusterIdentifier returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasClusterIdentifier() bool {
	if o != nil && o.ClusterIdentifier.IsSet() {
		return true
	}

	return false
}

// SetClusterIdentifier gets a reference to the given NullableString and assigns it to the ClusterIdentifier field.
func (o *HeliosPublicFolderItemsInner) SetClusterIdentifier(v string) {
	o.ClusterIdentifier.Set(&v)
}
// SetClusterIdentifierNil sets the value for ClusterIdentifier to be an explicit nil
func (o *HeliosPublicFolderItemsInner) SetClusterIdentifierNil() {
	o.ClusterIdentifier.Set(nil)
}

// UnsetClusterIdentifier ensures that no value is present for ClusterIdentifier, not even an explicit nil
func (o *HeliosPublicFolderItemsInner) UnsetClusterIdentifier() {
	o.ClusterIdentifier.Unset()
}

// GetRegionId returns the RegionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetRegionId() string {
	if o == nil || IsNil(o.RegionId.Get()) {
		var ret string
		return ret
	}
	return *o.RegionId.Get()
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetRegionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RegionId.Get(), o.RegionId.IsSet()
}

// HasRegionId returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasRegionId() bool {
	if o != nil && o.RegionId.IsSet() {
		return true
	}

	return false
}

// SetRegionId gets a reference to the given NullableString and assigns it to the RegionId field.
func (o *HeliosPublicFolderItemsInner) SetRegionId(v string) {
	o.RegionId.Set(&v)
}
// SetRegionIdNil sets the value for RegionId to be an explicit nil
func (o *HeliosPublicFolderItemsInner) SetRegionIdNil() {
	o.RegionId.Set(nil)
}

// UnsetRegionId ensures that no value is present for RegionId, not even an explicit nil
func (o *HeliosPublicFolderItemsInner) UnsetRegionId() {
	o.RegionId.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *HeliosPublicFolderItemsInner) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *HeliosPublicFolderItemsInner) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *HeliosPublicFolderItemsInner) UnsetName() {
	o.Name.Unset()
}

// GetPath returns the Path field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetPath() string {
	if o == nil || IsNil(o.Path.Get()) {
		var ret string
		return ret
	}
	return *o.Path.Get()
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Path.Get(), o.Path.IsSet()
}

// HasPath returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasPath() bool {
	if o != nil && o.Path.IsSet() {
		return true
	}

	return false
}

// SetPath gets a reference to the given NullableString and assigns it to the Path field.
func (o *HeliosPublicFolderItemsInner) SetPath(v string) {
	o.Path.Set(&v)
}
// SetPathNil sets the value for Path to be an explicit nil
func (o *HeliosPublicFolderItemsInner) SetPathNil() {
	o.Path.Set(nil)
}

// UnsetPath ensures that no value is present for Path, not even an explicit nil
func (o *HeliosPublicFolderItemsInner) UnsetPath() {
	o.Path.Unset()
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetPolicyId() string {
	if o == nil || IsNil(o.PolicyId.Get()) {
		var ret string
		return ret
	}
	return *o.PolicyId.Get()
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetPolicyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolicyId.Get(), o.PolicyId.IsSet()
}

// HasPolicyId returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasPolicyId() bool {
	if o != nil && o.PolicyId.IsSet() {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given NullableString and assigns it to the PolicyId field.
func (o *HeliosPublicFolderItemsInner) SetPolicyId(v string) {
	o.PolicyId.Set(&v)
}
// SetPolicyIdNil sets the value for PolicyId to be an explicit nil
func (o *HeliosPublicFolderItemsInner) SetPolicyIdNil() {
	o.PolicyId.Set(nil)
}

// UnsetPolicyId ensures that no value is present for PolicyId, not even an explicit nil
func (o *HeliosPublicFolderItemsInner) UnsetPolicyId() {
	o.PolicyId.Unset()
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetPolicyName() string {
	if o == nil || IsNil(o.PolicyName.Get()) {
		var ret string
		return ret
	}
	return *o.PolicyName.Get()
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetPolicyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolicyName.Get(), o.PolicyName.IsSet()
}

// HasPolicyName returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasPolicyName() bool {
	if o != nil && o.PolicyName.IsSet() {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given NullableString and assigns it to the PolicyName field.
func (o *HeliosPublicFolderItemsInner) SetPolicyName(v string) {
	o.PolicyName.Set(&v)
}
// SetPolicyNameNil sets the value for PolicyName to be an explicit nil
func (o *HeliosPublicFolderItemsInner) SetPolicyNameNil() {
	o.PolicyName.Set(nil)
}

// UnsetPolicyName ensures that no value is present for PolicyName, not even an explicit nil
func (o *HeliosPublicFolderItemsInner) UnsetPolicyName() {
	o.PolicyName.Unset()
}

// GetProtectionGroupId returns the ProtectionGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetProtectionGroupId() string {
	if o == nil || IsNil(o.ProtectionGroupId.Get()) {
		var ret string
		return ret
	}
	return *o.ProtectionGroupId.Get()
}

// GetProtectionGroupIdOk returns a tuple with the ProtectionGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetProtectionGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProtectionGroupId.Get(), o.ProtectionGroupId.IsSet()
}

// HasProtectionGroupId returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasProtectionGroupId() bool {
	if o != nil && o.ProtectionGroupId.IsSet() {
		return true
	}

	return false
}

// SetProtectionGroupId gets a reference to the given NullableString and assigns it to the ProtectionGroupId field.
func (o *HeliosPublicFolderItemsInner) SetProtectionGroupId(v string) {
	o.ProtectionGroupId.Set(&v)
}
// SetProtectionGroupIdNil sets the value for ProtectionGroupId to be an explicit nil
func (o *HeliosPublicFolderItemsInner) SetProtectionGroupIdNil() {
	o.ProtectionGroupId.Set(nil)
}

// UnsetProtectionGroupId ensures that no value is present for ProtectionGroupId, not even an explicit nil
func (o *HeliosPublicFolderItemsInner) UnsetProtectionGroupId() {
	o.ProtectionGroupId.Unset()
}

// GetProtectionGroupName returns the ProtectionGroupName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetProtectionGroupName() string {
	if o == nil || IsNil(o.ProtectionGroupName.Get()) {
		var ret string
		return ret
	}
	return *o.ProtectionGroupName.Get()
}

// GetProtectionGroupNameOk returns a tuple with the ProtectionGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetProtectionGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProtectionGroupName.Get(), o.ProtectionGroupName.IsSet()
}

// HasProtectionGroupName returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasProtectionGroupName() bool {
	if o != nil && o.ProtectionGroupName.IsSet() {
		return true
	}

	return false
}

// SetProtectionGroupName gets a reference to the given NullableString and assigns it to the ProtectionGroupName field.
func (o *HeliosPublicFolderItemsInner) SetProtectionGroupName(v string) {
	o.ProtectionGroupName.Set(&v)
}
// SetProtectionGroupNameNil sets the value for ProtectionGroupName to be an explicit nil
func (o *HeliosPublicFolderItemsInner) SetProtectionGroupNameNil() {
	o.ProtectionGroupName.Set(nil)
}

// UnsetProtectionGroupName ensures that no value is present for ProtectionGroupName, not even an explicit nil
func (o *HeliosPublicFolderItemsInner) UnsetProtectionGroupName() {
	o.ProtectionGroupName.Unset()
}

// GetSourceInfo returns the SourceInfo field value if set, zero value otherwise.
func (o *HeliosPublicFolderItemsInner) GetSourceInfo() map[string]interface{} {
	if o == nil || IsNil(o.SourceInfo) {
		var ret map[string]interface{}
		return ret
	}
	return o.SourceInfo
}

// GetSourceInfoOk returns a tuple with the SourceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosPublicFolderItemsInner) GetSourceInfoOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.SourceInfo) {
		return map[string]interface{}{}, false
	}
	return o.SourceInfo, true
}

// HasSourceInfo returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasSourceInfo() bool {
	if o != nil && !IsNil(o.SourceInfo) {
		return true
	}

	return false
}

// SetSourceInfo gets a reference to the given map[string]interface{} and assigns it to the SourceInfo field.
func (o *HeliosPublicFolderItemsInner) SetSourceInfo(v map[string]interface{}) {
	o.SourceInfo = v
}

// GetStorageDomainId returns the StorageDomainId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetStorageDomainId() int64 {
	if o == nil || IsNil(o.StorageDomainId.Get()) {
		var ret int64
		return ret
	}
	return *o.StorageDomainId.Get()
}

// GetStorageDomainIdOk returns a tuple with the StorageDomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetStorageDomainIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageDomainId.Get(), o.StorageDomainId.IsSet()
}

// HasStorageDomainId returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasStorageDomainId() bool {
	if o != nil && o.StorageDomainId.IsSet() {
		return true
	}

	return false
}

// SetStorageDomainId gets a reference to the given NullableInt64 and assigns it to the StorageDomainId field.
func (o *HeliosPublicFolderItemsInner) SetStorageDomainId(v int64) {
	o.StorageDomainId.Set(&v)
}
// SetStorageDomainIdNil sets the value for StorageDomainId to be an explicit nil
func (o *HeliosPublicFolderItemsInner) SetStorageDomainIdNil() {
	o.StorageDomainId.Set(nil)
}

// UnsetStorageDomainId ensures that no value is present for StorageDomainId, not even an explicit nil
func (o *HeliosPublicFolderItemsInner) UnsetStorageDomainId() {
	o.StorageDomainId.Unset()
}

// GetSnapshotTags returns the SnapshotTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetSnapshotTags() []SnapshotTagInfo {
	if o == nil {
		var ret []SnapshotTagInfo
		return ret
	}
	return o.SnapshotTags
}

// GetSnapshotTagsOk returns a tuple with the SnapshotTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetSnapshotTagsOk() ([]SnapshotTagInfo, bool) {
	if o == nil || IsNil(o.SnapshotTags) {
		return nil, false
	}
	return o.SnapshotTags, true
}

// HasSnapshotTags returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasSnapshotTags() bool {
	if o != nil && !IsNil(o.SnapshotTags) {
		return true
	}

	return false
}

// SetSnapshotTags gets a reference to the given []SnapshotTagInfo and assigns it to the SnapshotTags field.
func (o *HeliosPublicFolderItemsInner) SetSnapshotTags(v []SnapshotTagInfo) {
	o.SnapshotTags = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetTags() []TagInfo {
	if o == nil {
		var ret []TagInfo
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetTagsOk() ([]TagInfo, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagInfo and assigns it to the Tags field.
func (o *HeliosPublicFolderItemsInner) SetTags(v []TagInfo) {
	o.Tags = v
}

// GetHasAttachments returns the HasAttachments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetHasAttachments() bool {
	if o == nil || IsNil(o.HasAttachments.Get()) {
		var ret bool
		return ret
	}
	return *o.HasAttachments.Get()
}

// GetHasAttachmentsOk returns a tuple with the HasAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetHasAttachmentsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasAttachments.Get(), o.HasAttachments.IsSet()
}

// HasHasAttachments returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasHasAttachments() bool {
	if o != nil && o.HasAttachments.IsSet() {
		return true
	}

	return false
}

// SetHasAttachments gets a reference to the given NullableBool and assigns it to the HasAttachments field.
func (o *HeliosPublicFolderItemsInner) SetHasAttachments(v bool) {
	o.HasAttachments.Set(&v)
}
// SetHasAttachmentsNil sets the value for HasAttachments to be an explicit nil
func (o *HeliosPublicFolderItemsInner) SetHasAttachmentsNil() {
	o.HasAttachments.Set(nil)
}

// UnsetHasAttachments ensures that no value is present for HasAttachments, not even an explicit nil
func (o *HeliosPublicFolderItemsInner) UnsetHasAttachments() {
	o.HasAttachments.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *HeliosPublicFolderItemsInner) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *HeliosPublicFolderItemsInner) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *HeliosPublicFolderItemsInner) UnsetId() {
	o.Id.Unset()
}

// GetItemClass returns the ItemClass field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetItemClass() string {
	if o == nil || IsNil(o.ItemClass.Get()) {
		var ret string
		return ret
	}
	return *o.ItemClass.Get()
}

// GetItemClassOk returns a tuple with the ItemClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetItemClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemClass.Get(), o.ItemClass.IsSet()
}

// HasItemClass returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasItemClass() bool {
	if o != nil && o.ItemClass.IsSet() {
		return true
	}

	return false
}

// SetItemClass gets a reference to the given NullableString and assigns it to the ItemClass field.
func (o *HeliosPublicFolderItemsInner) SetItemClass(v string) {
	o.ItemClass.Set(&v)
}
// SetItemClassNil sets the value for ItemClass to be an explicit nil
func (o *HeliosPublicFolderItemsInner) SetItemClassNil() {
	o.ItemClass.Set(nil)
}

// UnsetItemClass ensures that no value is present for ItemClass, not even an explicit nil
func (o *HeliosPublicFolderItemsInner) UnsetItemClass() {
	o.ItemClass.Unset()
}

// GetItemSize returns the ItemSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetItemSize() int64 {
	if o == nil || IsNil(o.ItemSize.Get()) {
		var ret int64
		return ret
	}
	return *o.ItemSize.Get()
}

// GetItemSizeOk returns a tuple with the ItemSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetItemSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemSize.Get(), o.ItemSize.IsSet()
}

// HasItemSize returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasItemSize() bool {
	if o != nil && o.ItemSize.IsSet() {
		return true
	}

	return false
}

// SetItemSize gets a reference to the given NullableInt64 and assigns it to the ItemSize field.
func (o *HeliosPublicFolderItemsInner) SetItemSize(v int64) {
	o.ItemSize.Set(&v)
}
// SetItemSizeNil sets the value for ItemSize to be an explicit nil
func (o *HeliosPublicFolderItemsInner) SetItemSizeNil() {
	o.ItemSize.Set(nil)
}

// UnsetItemSize ensures that no value is present for ItemSize, not even an explicit nil
func (o *HeliosPublicFolderItemsInner) UnsetItemSize() {
	o.ItemSize.Unset()
}

// GetParentFolderId returns the ParentFolderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetParentFolderId() string {
	if o == nil || IsNil(o.ParentFolderId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentFolderId.Get()
}

// GetParentFolderIdOk returns a tuple with the ParentFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetParentFolderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentFolderId.Get(), o.ParentFolderId.IsSet()
}

// HasParentFolderId returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasParentFolderId() bool {
	if o != nil && o.ParentFolderId.IsSet() {
		return true
	}

	return false
}

// SetParentFolderId gets a reference to the given NullableString and assigns it to the ParentFolderId field.
func (o *HeliosPublicFolderItemsInner) SetParentFolderId(v string) {
	o.ParentFolderId.Set(&v)
}
// SetParentFolderIdNil sets the value for ParentFolderId to be an explicit nil
func (o *HeliosPublicFolderItemsInner) SetParentFolderIdNil() {
	o.ParentFolderId.Set(nil)
}

// UnsetParentFolderId ensures that no value is present for ParentFolderId, not even an explicit nil
func (o *HeliosPublicFolderItemsInner) UnsetParentFolderId() {
	o.ParentFolderId.Unset()
}

// GetReceivedTimeSecs returns the ReceivedTimeSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetReceivedTimeSecs() int64 {
	if o == nil || IsNil(o.ReceivedTimeSecs.Get()) {
		var ret int64
		return ret
	}
	return *o.ReceivedTimeSecs.Get()
}

// GetReceivedTimeSecsOk returns a tuple with the ReceivedTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetReceivedTimeSecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceivedTimeSecs.Get(), o.ReceivedTimeSecs.IsSet()
}

// HasReceivedTimeSecs returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasReceivedTimeSecs() bool {
	if o != nil && o.ReceivedTimeSecs.IsSet() {
		return true
	}

	return false
}

// SetReceivedTimeSecs gets a reference to the given NullableInt64 and assigns it to the ReceivedTimeSecs field.
func (o *HeliosPublicFolderItemsInner) SetReceivedTimeSecs(v int64) {
	o.ReceivedTimeSecs.Set(&v)
}
// SetReceivedTimeSecsNil sets the value for ReceivedTimeSecs to be an explicit nil
func (o *HeliosPublicFolderItemsInner) SetReceivedTimeSecsNil() {
	o.ReceivedTimeSecs.Set(nil)
}

// UnsetReceivedTimeSecs ensures that no value is present for ReceivedTimeSecs, not even an explicit nil
func (o *HeliosPublicFolderItemsInner) UnsetReceivedTimeSecs() {
	o.ReceivedTimeSecs.Unset()
}

// GetSubject returns the Subject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetSubject() string {
	if o == nil || IsNil(o.Subject.Get()) {
		var ret string
		return ret
	}
	return *o.Subject.Get()
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subject.Get(), o.Subject.IsSet()
}

// HasSubject returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasSubject() bool {
	if o != nil && o.Subject.IsSet() {
		return true
	}

	return false
}

// SetSubject gets a reference to the given NullableString and assigns it to the Subject field.
func (o *HeliosPublicFolderItemsInner) SetSubject(v string) {
	o.Subject.Set(&v)
}
// SetSubjectNil sets the value for Subject to be an explicit nil
func (o *HeliosPublicFolderItemsInner) SetSubjectNil() {
	o.Subject.Set(nil)
}

// UnsetSubject ensures that no value is present for Subject, not even an explicit nil
func (o *HeliosPublicFolderItemsInner) UnsetSubject() {
	o.Subject.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPublicFolderItemsInner) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPublicFolderItemsInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *HeliosPublicFolderItemsInner) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *HeliosPublicFolderItemsInner) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *HeliosPublicFolderItemsInner) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *HeliosPublicFolderItemsInner) UnsetType() {
	o.Type.Unset()
}

func (o HeliosPublicFolderItemsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeliosPublicFolderItemsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterIdentifier.IsSet() {
		toSerialize["clusterIdentifier"] = o.ClusterIdentifier.Get()
	}
	if o.RegionId.IsSet() {
		toSerialize["regionId"] = o.RegionId.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Path.IsSet() {
		toSerialize["path"] = o.Path.Get()
	}
	if o.PolicyId.IsSet() {
		toSerialize["policyId"] = o.PolicyId.Get()
	}
	if o.PolicyName.IsSet() {
		toSerialize["policyName"] = o.PolicyName.Get()
	}
	if o.ProtectionGroupId.IsSet() {
		toSerialize["protectionGroupId"] = o.ProtectionGroupId.Get()
	}
	if o.ProtectionGroupName.IsSet() {
		toSerialize["protectionGroupName"] = o.ProtectionGroupName.Get()
	}
	if !IsNil(o.SourceInfo) {
		toSerialize["sourceInfo"] = o.SourceInfo
	}
	if o.StorageDomainId.IsSet() {
		toSerialize["storageDomainId"] = o.StorageDomainId.Get()
	}
	if o.SnapshotTags != nil {
		toSerialize["snapshotTags"] = o.SnapshotTags
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.HasAttachments.IsSet() {
		toSerialize["hasAttachments"] = o.HasAttachments.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.ItemClass.IsSet() {
		toSerialize["itemClass"] = o.ItemClass.Get()
	}
	if o.ItemSize.IsSet() {
		toSerialize["itemSize"] = o.ItemSize.Get()
	}
	if o.ParentFolderId.IsSet() {
		toSerialize["parentFolderId"] = o.ParentFolderId.Get()
	}
	if o.ReceivedTimeSecs.IsSet() {
		toSerialize["receivedTimeSecs"] = o.ReceivedTimeSecs.Get()
	}
	if o.Subject.IsSet() {
		toSerialize["subject"] = o.Subject.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	return toSerialize, nil
}

type NullableHeliosPublicFolderItemsInner struct {
	value *HeliosPublicFolderItemsInner
	isSet bool
}

func (v NullableHeliosPublicFolderItemsInner) Get() *HeliosPublicFolderItemsInner {
	return v.value
}

func (v *NullableHeliosPublicFolderItemsInner) Set(val *HeliosPublicFolderItemsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosPublicFolderItemsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosPublicFolderItemsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosPublicFolderItemsInner(val *HeliosPublicFolderItemsInner) *NullableHeliosPublicFolderItemsInner {
	return &NullableHeliosPublicFolderItemsInner{value: val, isSet: true}
}

func (v NullableHeliosPublicFolderItemsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosPublicFolderItemsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


