/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ViewClients type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ViewClients{}

// ViewClients Specifies a list of View Clients.
type ViewClients struct {
	// Specifies the list of Clients.
	Clients []ViewClient `json:"clients,omitempty"`
}

// NewViewClients instantiates a new ViewClients object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewClients() *ViewClients {
	this := ViewClients{}
	return &this
}

// NewViewClientsWithDefaults instantiates a new ViewClients object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewClientsWithDefaults() *ViewClients {
	this := ViewClients{}
	return &this
}

// GetClients returns the Clients field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewClients) GetClients() []ViewClient {
	if o == nil {
		var ret []ViewClient
		return ret
	}
	return o.Clients
}

// GetClientsOk returns a tuple with the Clients field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewClients) GetClientsOk() ([]ViewClient, bool) {
	if o == nil || IsNil(o.Clients) {
		return nil, false
	}
	return o.Clients, true
}

// HasClients returns a boolean if a field has been set.
func (o *ViewClients) HasClients() bool {
	if o != nil && !IsNil(o.Clients) {
		return true
	}

	return false
}

// SetClients gets a reference to the given []ViewClient and assigns it to the Clients field.
func (o *ViewClients) SetClients(v []ViewClient) {
	o.Clients = v
}

func (o ViewClients) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ViewClients) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Clients != nil {
		toSerialize["clients"] = o.Clients
	}
	return toSerialize, nil
}

type NullableViewClients struct {
	value *ViewClients
	isSet bool
}

func (v NullableViewClients) Get() *ViewClients {
	return v.value
}

func (v *NullableViewClients) Set(val *ViewClients) {
	v.value = val
	v.isSet = true
}

func (v NullableViewClients) IsSet() bool {
	return v.isSet
}

func (v *NullableViewClients) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewClients(val *ViewClients) *NullableViewClients {
	return &NullableViewClients{value: val, isSet: true}
}

func (v NullableViewClients) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewClients) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


