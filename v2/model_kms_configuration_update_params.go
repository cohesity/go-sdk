/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KmsConfigurationUpdateParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KmsConfigurationUpdateParams{}

// KmsConfigurationUpdateParams Parameters to update key management system(KMS) on the cluster.
type KmsConfigurationUpdateParams struct {
	// Ids of external targets used to assign the KMS for encryption. Once an external KMS (AWS KMS or KIMP KMS) is assigned to an external target, it cannot be changed.
	ExternalTargetIds []int64 `json:"externalTargetIds,omitempty"`
	KmipKmsParams *KmipKmsConfiguration `json:"kmipKmsParams,omitempty"`
	// Name of the KMS.
	Name string `json:"name"`
	// Ids of storage domains used to assign the KMS for encryption. Once an external KMS (AWS KMS or KIMP KMS) is assigned to a storage domain, it cannot be changed.
	StorageDomainIds []int64 `json:"storageDomainIds,omitempty"`
	AwsKmsParams *AwsKmsConfigurationUpdateParams `json:"awsKmsParams,omitempty"`
}

type _KmsConfigurationUpdateParams KmsConfigurationUpdateParams

// NewKmsConfigurationUpdateParams instantiates a new KmsConfigurationUpdateParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKmsConfigurationUpdateParams(name string) *KmsConfigurationUpdateParams {
	this := KmsConfigurationUpdateParams{}
	this.Name = name
	return &this
}

// NewKmsConfigurationUpdateParamsWithDefaults instantiates a new KmsConfigurationUpdateParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKmsConfigurationUpdateParamsWithDefaults() *KmsConfigurationUpdateParams {
	this := KmsConfigurationUpdateParams{}
	return &this
}

// GetExternalTargetIds returns the ExternalTargetIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KmsConfigurationUpdateParams) GetExternalTargetIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.ExternalTargetIds
}

// GetExternalTargetIdsOk returns a tuple with the ExternalTargetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KmsConfigurationUpdateParams) GetExternalTargetIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.ExternalTargetIds) {
		return nil, false
	}
	return o.ExternalTargetIds, true
}

// HasExternalTargetIds returns a boolean if a field has been set.
func (o *KmsConfigurationUpdateParams) HasExternalTargetIds() bool {
	if o != nil && !IsNil(o.ExternalTargetIds) {
		return true
	}

	return false
}

// SetExternalTargetIds gets a reference to the given []int64 and assigns it to the ExternalTargetIds field.
func (o *KmsConfigurationUpdateParams) SetExternalTargetIds(v []int64) {
	o.ExternalTargetIds = v
}

// GetKmipKmsParams returns the KmipKmsParams field value if set, zero value otherwise.
func (o *KmsConfigurationUpdateParams) GetKmipKmsParams() KmipKmsConfiguration {
	if o == nil || IsNil(o.KmipKmsParams) {
		var ret KmipKmsConfiguration
		return ret
	}
	return *o.KmipKmsParams
}

// GetKmipKmsParamsOk returns a tuple with the KmipKmsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KmsConfigurationUpdateParams) GetKmipKmsParamsOk() (*KmipKmsConfiguration, bool) {
	if o == nil || IsNil(o.KmipKmsParams) {
		return nil, false
	}
	return o.KmipKmsParams, true
}

// HasKmipKmsParams returns a boolean if a field has been set.
func (o *KmsConfigurationUpdateParams) HasKmipKmsParams() bool {
	if o != nil && !IsNil(o.KmipKmsParams) {
		return true
	}

	return false
}

// SetKmipKmsParams gets a reference to the given KmipKmsConfiguration and assigns it to the KmipKmsParams field.
func (o *KmsConfigurationUpdateParams) SetKmipKmsParams(v KmipKmsConfiguration) {
	o.KmipKmsParams = &v
}

// GetName returns the Name field value
func (o *KmsConfigurationUpdateParams) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *KmsConfigurationUpdateParams) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *KmsConfigurationUpdateParams) SetName(v string) {
	o.Name = v
}

// GetStorageDomainIds returns the StorageDomainIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KmsConfigurationUpdateParams) GetStorageDomainIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.StorageDomainIds
}

// GetStorageDomainIdsOk returns a tuple with the StorageDomainIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KmsConfigurationUpdateParams) GetStorageDomainIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.StorageDomainIds) {
		return nil, false
	}
	return o.StorageDomainIds, true
}

// HasStorageDomainIds returns a boolean if a field has been set.
func (o *KmsConfigurationUpdateParams) HasStorageDomainIds() bool {
	if o != nil && !IsNil(o.StorageDomainIds) {
		return true
	}

	return false
}

// SetStorageDomainIds gets a reference to the given []int64 and assigns it to the StorageDomainIds field.
func (o *KmsConfigurationUpdateParams) SetStorageDomainIds(v []int64) {
	o.StorageDomainIds = v
}

// GetAwsKmsParams returns the AwsKmsParams field value if set, zero value otherwise.
func (o *KmsConfigurationUpdateParams) GetAwsKmsParams() AwsKmsConfigurationUpdateParams {
	if o == nil || IsNil(o.AwsKmsParams) {
		var ret AwsKmsConfigurationUpdateParams
		return ret
	}
	return *o.AwsKmsParams
}

// GetAwsKmsParamsOk returns a tuple with the AwsKmsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KmsConfigurationUpdateParams) GetAwsKmsParamsOk() (*AwsKmsConfigurationUpdateParams, bool) {
	if o == nil || IsNil(o.AwsKmsParams) {
		return nil, false
	}
	return o.AwsKmsParams, true
}

// HasAwsKmsParams returns a boolean if a field has been set.
func (o *KmsConfigurationUpdateParams) HasAwsKmsParams() bool {
	if o != nil && !IsNil(o.AwsKmsParams) {
		return true
	}

	return false
}

// SetAwsKmsParams gets a reference to the given AwsKmsConfigurationUpdateParams and assigns it to the AwsKmsParams field.
func (o *KmsConfigurationUpdateParams) SetAwsKmsParams(v AwsKmsConfigurationUpdateParams) {
	o.AwsKmsParams = &v
}

func (o KmsConfigurationUpdateParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KmsConfigurationUpdateParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ExternalTargetIds != nil {
		toSerialize["externalTargetIds"] = o.ExternalTargetIds
	}
	if !IsNil(o.KmipKmsParams) {
		toSerialize["kmipKmsParams"] = o.KmipKmsParams
	}
	toSerialize["name"] = o.Name
	if o.StorageDomainIds != nil {
		toSerialize["storageDomainIds"] = o.StorageDomainIds
	}
	if !IsNil(o.AwsKmsParams) {
		toSerialize["awsKmsParams"] = o.AwsKmsParams
	}
	return toSerialize, nil
}

func (o *KmsConfigurationUpdateParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKmsConfigurationUpdateParams := _KmsConfigurationUpdateParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKmsConfigurationUpdateParams)

	if err != nil {
		return err
	}

	*o = KmsConfigurationUpdateParams(varKmsConfigurationUpdateParams)

	return err
}

type NullableKmsConfigurationUpdateParams struct {
	value *KmsConfigurationUpdateParams
	isSet bool
}

func (v NullableKmsConfigurationUpdateParams) Get() *KmsConfigurationUpdateParams {
	return v.value
}

func (v *NullableKmsConfigurationUpdateParams) Set(val *KmsConfigurationUpdateParams) {
	v.value = val
	v.isSet = true
}

func (v NullableKmsConfigurationUpdateParams) IsSet() bool {
	return v.isSet
}

func (v *NullableKmsConfigurationUpdateParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKmsConfigurationUpdateParams(val *KmsConfigurationUpdateParams) *NullableKmsConfigurationUpdateParams {
	return &NullableKmsConfigurationUpdateParams{value: val, isSet: true}
}

func (v NullableKmsConfigurationUpdateParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKmsConfigurationUpdateParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


