/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the GetKubernetesStatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetKubernetesStatusResponse{}

// GetKubernetesStatusResponse Kubernetes Infra Overall Health Information
type GetKubernetesStatusResponse struct {
	// specifies the current Kubernetes version
	CurrentKubernetesVersion *string `json:"currentKubernetesVersion,omitempty"`
	// Kubernetes Infra Overall Health Status
	OverallK8SHealthStatus *string `json:"overallK8SHealthStatus,omitempty"`
}

// NewGetKubernetesStatusResponse instantiates a new GetKubernetesStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetKubernetesStatusResponse() *GetKubernetesStatusResponse {
	this := GetKubernetesStatusResponse{}
	return &this
}

// NewGetKubernetesStatusResponseWithDefaults instantiates a new GetKubernetesStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetKubernetesStatusResponseWithDefaults() *GetKubernetesStatusResponse {
	this := GetKubernetesStatusResponse{}
	return &this
}

// GetCurrentKubernetesVersion returns the CurrentKubernetesVersion field value if set, zero value otherwise.
func (o *GetKubernetesStatusResponse) GetCurrentKubernetesVersion() string {
	if o == nil || IsNil(o.CurrentKubernetesVersion) {
		var ret string
		return ret
	}
	return *o.CurrentKubernetesVersion
}

// GetCurrentKubernetesVersionOk returns a tuple with the CurrentKubernetesVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetKubernetesStatusResponse) GetCurrentKubernetesVersionOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentKubernetesVersion) {
		return nil, false
	}
	return o.CurrentKubernetesVersion, true
}

// HasCurrentKubernetesVersion returns a boolean if a field has been set.
func (o *GetKubernetesStatusResponse) HasCurrentKubernetesVersion() bool {
	if o != nil && !IsNil(o.CurrentKubernetesVersion) {
		return true
	}

	return false
}

// SetCurrentKubernetesVersion gets a reference to the given string and assigns it to the CurrentKubernetesVersion field.
func (o *GetKubernetesStatusResponse) SetCurrentKubernetesVersion(v string) {
	o.CurrentKubernetesVersion = &v
}

// GetOverallK8SHealthStatus returns the OverallK8SHealthStatus field value if set, zero value otherwise.
func (o *GetKubernetesStatusResponse) GetOverallK8SHealthStatus() string {
	if o == nil || IsNil(o.OverallK8SHealthStatus) {
		var ret string
		return ret
	}
	return *o.OverallK8SHealthStatus
}

// GetOverallK8SHealthStatusOk returns a tuple with the OverallK8SHealthStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetKubernetesStatusResponse) GetOverallK8SHealthStatusOk() (*string, bool) {
	if o == nil || IsNil(o.OverallK8SHealthStatus) {
		return nil, false
	}
	return o.OverallK8SHealthStatus, true
}

// HasOverallK8SHealthStatus returns a boolean if a field has been set.
func (o *GetKubernetesStatusResponse) HasOverallK8SHealthStatus() bool {
	if o != nil && !IsNil(o.OverallK8SHealthStatus) {
		return true
	}

	return false
}

// SetOverallK8SHealthStatus gets a reference to the given string and assigns it to the OverallK8SHealthStatus field.
func (o *GetKubernetesStatusResponse) SetOverallK8SHealthStatus(v string) {
	o.OverallK8SHealthStatus = &v
}

func (o GetKubernetesStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetKubernetesStatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentKubernetesVersion) {
		toSerialize["currentKubernetesVersion"] = o.CurrentKubernetesVersion
	}
	if !IsNil(o.OverallK8SHealthStatus) {
		toSerialize["overallK8SHealthStatus"] = o.OverallK8SHealthStatus
	}
	return toSerialize, nil
}

type NullableGetKubernetesStatusResponse struct {
	value *GetKubernetesStatusResponse
	isSet bool
}

func (v NullableGetKubernetesStatusResponse) Get() *GetKubernetesStatusResponse {
	return v.value
}

func (v *NullableGetKubernetesStatusResponse) Set(val *GetKubernetesStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetKubernetesStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetKubernetesStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetKubernetesStatusResponse(val *GetKubernetesStatusResponse) *NullableGetKubernetesStatusResponse {
	return &NullableGetKubernetesStatusResponse{value: val, isSet: true}
}

func (v NullableGetKubernetesStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetKubernetesStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


