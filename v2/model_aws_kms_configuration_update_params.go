/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AwsKmsConfigurationUpdateParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsKmsConfigurationUpdateParams{}

// AwsKmsConfigurationUpdateParams AWS KMS configuration updatable parameters.
type AwsKmsConfigurationUpdateParams struct {
	// AWS account access key id. Required when 'iamRoleArn' is not given.
	AccessKeyId NullableString `json:"accessKeyId,omitempty"`
	// Specify the ca certificate.
	CaCertificate NullableString `json:"caCertificate,omitempty"`
	// The IAM role which will be used to authenticate with AWS KMS. Required when 'accessKeyId' and 'secretAccessKey' fields are not provided.
	IamRoleArn NullableString `json:"iamRoleArn,omitempty"`
	// AWS account secret access key. Required when 'iamRoleArn' is not given.
	SecretAccessKey NullableString `json:"secretAccessKey,omitempty"`
	// Enable SSL verification or not.
	VerifySSL NullableBool `json:"verifySSL,omitempty"`
}

// NewAwsKmsConfigurationUpdateParams instantiates a new AwsKmsConfigurationUpdateParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsKmsConfigurationUpdateParams() *AwsKmsConfigurationUpdateParams {
	this := AwsKmsConfigurationUpdateParams{}
	var verifySSL bool = true
	this.VerifySSL = *NewNullableBool(&verifySSL)
	return &this
}

// NewAwsKmsConfigurationUpdateParamsWithDefaults instantiates a new AwsKmsConfigurationUpdateParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsKmsConfigurationUpdateParamsWithDefaults() *AwsKmsConfigurationUpdateParams {
	this := AwsKmsConfigurationUpdateParams{}
	var verifySSL bool = true
	this.VerifySSL = *NewNullableBool(&verifySSL)
	return &this
}

// GetAccessKeyId returns the AccessKeyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsKmsConfigurationUpdateParams) GetAccessKeyId() string {
	if o == nil || IsNil(o.AccessKeyId.Get()) {
		var ret string
		return ret
	}
	return *o.AccessKeyId.Get()
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsKmsConfigurationUpdateParams) GetAccessKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessKeyId.Get(), o.AccessKeyId.IsSet()
}

// HasAccessKeyId returns a boolean if a field has been set.
func (o *AwsKmsConfigurationUpdateParams) HasAccessKeyId() bool {
	if o != nil && o.AccessKeyId.IsSet() {
		return true
	}

	return false
}

// SetAccessKeyId gets a reference to the given NullableString and assigns it to the AccessKeyId field.
func (o *AwsKmsConfigurationUpdateParams) SetAccessKeyId(v string) {
	o.AccessKeyId.Set(&v)
}
// SetAccessKeyIdNil sets the value for AccessKeyId to be an explicit nil
func (o *AwsKmsConfigurationUpdateParams) SetAccessKeyIdNil() {
	o.AccessKeyId.Set(nil)
}

// UnsetAccessKeyId ensures that no value is present for AccessKeyId, not even an explicit nil
func (o *AwsKmsConfigurationUpdateParams) UnsetAccessKeyId() {
	o.AccessKeyId.Unset()
}

// GetCaCertificate returns the CaCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsKmsConfigurationUpdateParams) GetCaCertificate() string {
	if o == nil || IsNil(o.CaCertificate.Get()) {
		var ret string
		return ret
	}
	return *o.CaCertificate.Get()
}

// GetCaCertificateOk returns a tuple with the CaCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsKmsConfigurationUpdateParams) GetCaCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CaCertificate.Get(), o.CaCertificate.IsSet()
}

// HasCaCertificate returns a boolean if a field has been set.
func (o *AwsKmsConfigurationUpdateParams) HasCaCertificate() bool {
	if o != nil && o.CaCertificate.IsSet() {
		return true
	}

	return false
}

// SetCaCertificate gets a reference to the given NullableString and assigns it to the CaCertificate field.
func (o *AwsKmsConfigurationUpdateParams) SetCaCertificate(v string) {
	o.CaCertificate.Set(&v)
}
// SetCaCertificateNil sets the value for CaCertificate to be an explicit nil
func (o *AwsKmsConfigurationUpdateParams) SetCaCertificateNil() {
	o.CaCertificate.Set(nil)
}

// UnsetCaCertificate ensures that no value is present for CaCertificate, not even an explicit nil
func (o *AwsKmsConfigurationUpdateParams) UnsetCaCertificate() {
	o.CaCertificate.Unset()
}

// GetIamRoleArn returns the IamRoleArn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsKmsConfigurationUpdateParams) GetIamRoleArn() string {
	if o == nil || IsNil(o.IamRoleArn.Get()) {
		var ret string
		return ret
	}
	return *o.IamRoleArn.Get()
}

// GetIamRoleArnOk returns a tuple with the IamRoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsKmsConfigurationUpdateParams) GetIamRoleArnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IamRoleArn.Get(), o.IamRoleArn.IsSet()
}

// HasIamRoleArn returns a boolean if a field has been set.
func (o *AwsKmsConfigurationUpdateParams) HasIamRoleArn() bool {
	if o != nil && o.IamRoleArn.IsSet() {
		return true
	}

	return false
}

// SetIamRoleArn gets a reference to the given NullableString and assigns it to the IamRoleArn field.
func (o *AwsKmsConfigurationUpdateParams) SetIamRoleArn(v string) {
	o.IamRoleArn.Set(&v)
}
// SetIamRoleArnNil sets the value for IamRoleArn to be an explicit nil
func (o *AwsKmsConfigurationUpdateParams) SetIamRoleArnNil() {
	o.IamRoleArn.Set(nil)
}

// UnsetIamRoleArn ensures that no value is present for IamRoleArn, not even an explicit nil
func (o *AwsKmsConfigurationUpdateParams) UnsetIamRoleArn() {
	o.IamRoleArn.Unset()
}

// GetSecretAccessKey returns the SecretAccessKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsKmsConfigurationUpdateParams) GetSecretAccessKey() string {
	if o == nil || IsNil(o.SecretAccessKey.Get()) {
		var ret string
		return ret
	}
	return *o.SecretAccessKey.Get()
}

// GetSecretAccessKeyOk returns a tuple with the SecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsKmsConfigurationUpdateParams) GetSecretAccessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecretAccessKey.Get(), o.SecretAccessKey.IsSet()
}

// HasSecretAccessKey returns a boolean if a field has been set.
func (o *AwsKmsConfigurationUpdateParams) HasSecretAccessKey() bool {
	if o != nil && o.SecretAccessKey.IsSet() {
		return true
	}

	return false
}

// SetSecretAccessKey gets a reference to the given NullableString and assigns it to the SecretAccessKey field.
func (o *AwsKmsConfigurationUpdateParams) SetSecretAccessKey(v string) {
	o.SecretAccessKey.Set(&v)
}
// SetSecretAccessKeyNil sets the value for SecretAccessKey to be an explicit nil
func (o *AwsKmsConfigurationUpdateParams) SetSecretAccessKeyNil() {
	o.SecretAccessKey.Set(nil)
}

// UnsetSecretAccessKey ensures that no value is present for SecretAccessKey, not even an explicit nil
func (o *AwsKmsConfigurationUpdateParams) UnsetSecretAccessKey() {
	o.SecretAccessKey.Unset()
}

// GetVerifySSL returns the VerifySSL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsKmsConfigurationUpdateParams) GetVerifySSL() bool {
	if o == nil || IsNil(o.VerifySSL.Get()) {
		var ret bool
		return ret
	}
	return *o.VerifySSL.Get()
}

// GetVerifySSLOk returns a tuple with the VerifySSL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsKmsConfigurationUpdateParams) GetVerifySSLOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.VerifySSL.Get(), o.VerifySSL.IsSet()
}

// HasVerifySSL returns a boolean if a field has been set.
func (o *AwsKmsConfigurationUpdateParams) HasVerifySSL() bool {
	if o != nil && o.VerifySSL.IsSet() {
		return true
	}

	return false
}

// SetVerifySSL gets a reference to the given NullableBool and assigns it to the VerifySSL field.
func (o *AwsKmsConfigurationUpdateParams) SetVerifySSL(v bool) {
	o.VerifySSL.Set(&v)
}
// SetVerifySSLNil sets the value for VerifySSL to be an explicit nil
func (o *AwsKmsConfigurationUpdateParams) SetVerifySSLNil() {
	o.VerifySSL.Set(nil)
}

// UnsetVerifySSL ensures that no value is present for VerifySSL, not even an explicit nil
func (o *AwsKmsConfigurationUpdateParams) UnsetVerifySSL() {
	o.VerifySSL.Unset()
}

func (o AwsKmsConfigurationUpdateParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsKmsConfigurationUpdateParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKeyId.IsSet() {
		toSerialize["accessKeyId"] = o.AccessKeyId.Get()
	}
	if o.CaCertificate.IsSet() {
		toSerialize["caCertificate"] = o.CaCertificate.Get()
	}
	if o.IamRoleArn.IsSet() {
		toSerialize["iamRoleArn"] = o.IamRoleArn.Get()
	}
	if o.SecretAccessKey.IsSet() {
		toSerialize["secretAccessKey"] = o.SecretAccessKey.Get()
	}
	if o.VerifySSL.IsSet() {
		toSerialize["verifySSL"] = o.VerifySSL.Get()
	}
	return toSerialize, nil
}

type NullableAwsKmsConfigurationUpdateParams struct {
	value *AwsKmsConfigurationUpdateParams
	isSet bool
}

func (v NullableAwsKmsConfigurationUpdateParams) Get() *AwsKmsConfigurationUpdateParams {
	return v.value
}

func (v *NullableAwsKmsConfigurationUpdateParams) Set(val *AwsKmsConfigurationUpdateParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsKmsConfigurationUpdateParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsKmsConfigurationUpdateParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsKmsConfigurationUpdateParams(val *AwsKmsConfigurationUpdateParams) *NullableAwsKmsConfigurationUpdateParams {
	return &NullableAwsKmsConfigurationUpdateParams{value: val, isSet: true}
}

func (v NullableAwsKmsConfigurationUpdateParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsKmsConfigurationUpdateParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


