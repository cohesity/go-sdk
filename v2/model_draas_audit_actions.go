/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the DraasAuditActions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DraasAuditActions{}

// DraasAuditActions Draas Audit Actions
type DraasAuditActions struct {
	// Draas Audit Actions
	Actions *string `json:"actions,omitempty"`
}

// NewDraasAuditActions instantiates a new DraasAuditActions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDraasAuditActions() *DraasAuditActions {
	this := DraasAuditActions{}
	return &this
}

// NewDraasAuditActionsWithDefaults instantiates a new DraasAuditActions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDraasAuditActionsWithDefaults() *DraasAuditActions {
	this := DraasAuditActions{}
	return &this
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *DraasAuditActions) GetActions() string {
	if o == nil || IsNil(o.Actions) {
		var ret string
		return ret
	}
	return *o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DraasAuditActions) GetActionsOk() (*string, bool) {
	if o == nil || IsNil(o.Actions) {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *DraasAuditActions) HasActions() bool {
	if o != nil && !IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given string and assigns it to the Actions field.
func (o *DraasAuditActions) SetActions(v string) {
	o.Actions = &v
}

func (o DraasAuditActions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DraasAuditActions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	return toSerialize, nil
}

type NullableDraasAuditActions struct {
	value *DraasAuditActions
	isSet bool
}

func (v NullableDraasAuditActions) Get() *DraasAuditActions {
	return v.value
}

func (v *NullableDraasAuditActions) Set(val *DraasAuditActions) {
	v.value = val
	v.isSet = true
}

func (v NullableDraasAuditActions) IsSet() bool {
	return v.isSet
}

func (v *NullableDraasAuditActions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDraasAuditActions(val *DraasAuditActions) *NullableDraasAuditActions {
	return &NullableDraasAuditActions{value: val, isSet: true}
}

func (v NullableDraasAuditActions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDraasAuditActions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


