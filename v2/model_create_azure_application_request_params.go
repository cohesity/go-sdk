/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateAzureApplicationRequestParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAzureApplicationRequestParams{}

// CreateAzureApplicationRequestParams Specifies the request parameters for creating Azure Applications
type CreateAzureApplicationRequestParams struct {
	// Specifies the access token for Azure Application access.
	AccessToken NullableString `json:"accessToken"`
	// Specifies the count of Azure application to be created.
	AppCount int32 `json:"appCount"`
	// Specifies the Azure Active Directory tenant ID or domain name.
	AzureTenantId NullableString `json:"azureTenantId,omitempty"`
	// Specifies a list of Microsoft365 azure application credentials already added within the Microsoft365 source.
	ExistingMicrosoft365AppCredentialsList []Office365AppCredentials `json:"existingMicrosoft365AppCredentialsList,omitempty"`
	// Specifies the region where Office 365 Exchange environment is.
	Microsoft365Region NullableString `json:"microsoft365Region,omitempty"`
	// The usecases for which the application is to be created.
	UseCases []string `json:"useCases,omitempty"`
	// Specifies the username to access Microsoft365 source.
	Username NullableString `json:"username,omitempty"`
}

type _CreateAzureApplicationRequestParams CreateAzureApplicationRequestParams

// NewCreateAzureApplicationRequestParams instantiates a new CreateAzureApplicationRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAzureApplicationRequestParams(accessToken NullableString, appCount int32) *CreateAzureApplicationRequestParams {
	this := CreateAzureApplicationRequestParams{}
	this.AccessToken = accessToken
	this.AppCount = appCount
	return &this
}

// NewCreateAzureApplicationRequestParamsWithDefaults instantiates a new CreateAzureApplicationRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAzureApplicationRequestParamsWithDefaults() *CreateAzureApplicationRequestParams {
	this := CreateAzureApplicationRequestParams{}
	return &this
}

// GetAccessToken returns the AccessToken field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateAzureApplicationRequestParams) GetAccessToken() string {
	if o == nil || o.AccessToken.Get() == nil {
		var ret string
		return ret
	}

	return *o.AccessToken.Get()
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAzureApplicationRequestParams) GetAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessToken.Get(), o.AccessToken.IsSet()
}

// SetAccessToken sets field value
func (o *CreateAzureApplicationRequestParams) SetAccessToken(v string) {
	o.AccessToken.Set(&v)
}

// GetAppCount returns the AppCount field value
func (o *CreateAzureApplicationRequestParams) GetAppCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AppCount
}

// GetAppCountOk returns a tuple with the AppCount field value
// and a boolean to check if the value has been set.
func (o *CreateAzureApplicationRequestParams) GetAppCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppCount, true
}

// SetAppCount sets field value
func (o *CreateAzureApplicationRequestParams) SetAppCount(v int32) {
	o.AppCount = v
}

// GetAzureTenantId returns the AzureTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAzureApplicationRequestParams) GetAzureTenantId() string {
	if o == nil || IsNil(o.AzureTenantId.Get()) {
		var ret string
		return ret
	}
	return *o.AzureTenantId.Get()
}

// GetAzureTenantIdOk returns a tuple with the AzureTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAzureApplicationRequestParams) GetAzureTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AzureTenantId.Get(), o.AzureTenantId.IsSet()
}

// HasAzureTenantId returns a boolean if a field has been set.
func (o *CreateAzureApplicationRequestParams) HasAzureTenantId() bool {
	if o != nil && o.AzureTenantId.IsSet() {
		return true
	}

	return false
}

// SetAzureTenantId gets a reference to the given NullableString and assigns it to the AzureTenantId field.
func (o *CreateAzureApplicationRequestParams) SetAzureTenantId(v string) {
	o.AzureTenantId.Set(&v)
}
// SetAzureTenantIdNil sets the value for AzureTenantId to be an explicit nil
func (o *CreateAzureApplicationRequestParams) SetAzureTenantIdNil() {
	o.AzureTenantId.Set(nil)
}

// UnsetAzureTenantId ensures that no value is present for AzureTenantId, not even an explicit nil
func (o *CreateAzureApplicationRequestParams) UnsetAzureTenantId() {
	o.AzureTenantId.Unset()
}

// GetExistingMicrosoft365AppCredentialsList returns the ExistingMicrosoft365AppCredentialsList field value if set, zero value otherwise.
func (o *CreateAzureApplicationRequestParams) GetExistingMicrosoft365AppCredentialsList() []Office365AppCredentials {
	if o == nil || IsNil(o.ExistingMicrosoft365AppCredentialsList) {
		var ret []Office365AppCredentials
		return ret
	}
	return o.ExistingMicrosoft365AppCredentialsList
}

// GetExistingMicrosoft365AppCredentialsListOk returns a tuple with the ExistingMicrosoft365AppCredentialsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAzureApplicationRequestParams) GetExistingMicrosoft365AppCredentialsListOk() ([]Office365AppCredentials, bool) {
	if o == nil || IsNil(o.ExistingMicrosoft365AppCredentialsList) {
		return nil, false
	}
	return o.ExistingMicrosoft365AppCredentialsList, true
}

// HasExistingMicrosoft365AppCredentialsList returns a boolean if a field has been set.
func (o *CreateAzureApplicationRequestParams) HasExistingMicrosoft365AppCredentialsList() bool {
	if o != nil && !IsNil(o.ExistingMicrosoft365AppCredentialsList) {
		return true
	}

	return false
}

// SetExistingMicrosoft365AppCredentialsList gets a reference to the given []Office365AppCredentials and assigns it to the ExistingMicrosoft365AppCredentialsList field.
func (o *CreateAzureApplicationRequestParams) SetExistingMicrosoft365AppCredentialsList(v []Office365AppCredentials) {
	o.ExistingMicrosoft365AppCredentialsList = v
}

// GetMicrosoft365Region returns the Microsoft365Region field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAzureApplicationRequestParams) GetMicrosoft365Region() string {
	if o == nil || IsNil(o.Microsoft365Region.Get()) {
		var ret string
		return ret
	}
	return *o.Microsoft365Region.Get()
}

// GetMicrosoft365RegionOk returns a tuple with the Microsoft365Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAzureApplicationRequestParams) GetMicrosoft365RegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Microsoft365Region.Get(), o.Microsoft365Region.IsSet()
}

// HasMicrosoft365Region returns a boolean if a field has been set.
func (o *CreateAzureApplicationRequestParams) HasMicrosoft365Region() bool {
	if o != nil && o.Microsoft365Region.IsSet() {
		return true
	}

	return false
}

// SetMicrosoft365Region gets a reference to the given NullableString and assigns it to the Microsoft365Region field.
func (o *CreateAzureApplicationRequestParams) SetMicrosoft365Region(v string) {
	o.Microsoft365Region.Set(&v)
}
// SetMicrosoft365RegionNil sets the value for Microsoft365Region to be an explicit nil
func (o *CreateAzureApplicationRequestParams) SetMicrosoft365RegionNil() {
	o.Microsoft365Region.Set(nil)
}

// UnsetMicrosoft365Region ensures that no value is present for Microsoft365Region, not even an explicit nil
func (o *CreateAzureApplicationRequestParams) UnsetMicrosoft365Region() {
	o.Microsoft365Region.Unset()
}

// GetUseCases returns the UseCases field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAzureApplicationRequestParams) GetUseCases() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.UseCases
}

// GetUseCasesOk returns a tuple with the UseCases field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAzureApplicationRequestParams) GetUseCasesOk() ([]string, bool) {
	if o == nil || IsNil(o.UseCases) {
		return nil, false
	}
	return o.UseCases, true
}

// HasUseCases returns a boolean if a field has been set.
func (o *CreateAzureApplicationRequestParams) HasUseCases() bool {
	if o != nil && !IsNil(o.UseCases) {
		return true
	}

	return false
}

// SetUseCases gets a reference to the given []string and assigns it to the UseCases field.
func (o *CreateAzureApplicationRequestParams) SetUseCases(v []string) {
	o.UseCases = v
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAzureApplicationRequestParams) GetUsername() string {
	if o == nil || IsNil(o.Username.Get()) {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAzureApplicationRequestParams) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *CreateAzureApplicationRequestParams) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *CreateAzureApplicationRequestParams) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *CreateAzureApplicationRequestParams) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *CreateAzureApplicationRequestParams) UnsetUsername() {
	o.Username.Unset()
}

func (o CreateAzureApplicationRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAzureApplicationRequestParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accessToken"] = o.AccessToken.Get()
	toSerialize["appCount"] = o.AppCount
	if o.AzureTenantId.IsSet() {
		toSerialize["azureTenantId"] = o.AzureTenantId.Get()
	}
	if !IsNil(o.ExistingMicrosoft365AppCredentialsList) {
		toSerialize["existingMicrosoft365AppCredentialsList"] = o.ExistingMicrosoft365AppCredentialsList
	}
	if o.Microsoft365Region.IsSet() {
		toSerialize["microsoft365Region"] = o.Microsoft365Region.Get()
	}
	if o.UseCases != nil {
		toSerialize["useCases"] = o.UseCases
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	return toSerialize, nil
}

func (o *CreateAzureApplicationRequestParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accessToken",
		"appCount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAzureApplicationRequestParams := _CreateAzureApplicationRequestParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateAzureApplicationRequestParams)

	if err != nil {
		return err
	}

	*o = CreateAzureApplicationRequestParams(varCreateAzureApplicationRequestParams)

	return err
}

type NullableCreateAzureApplicationRequestParams struct {
	value *CreateAzureApplicationRequestParams
	isSet bool
}

func (v NullableCreateAzureApplicationRequestParams) Get() *CreateAzureApplicationRequestParams {
	return v.value
}

func (v *NullableCreateAzureApplicationRequestParams) Set(val *CreateAzureApplicationRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAzureApplicationRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAzureApplicationRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAzureApplicationRequestParams(val *CreateAzureApplicationRequestParams) *NullableCreateAzureApplicationRequestParams {
	return &NullableCreateAzureApplicationRequestParams{value: val, isSet: true}
}

func (v NullableCreateAzureApplicationRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAzureApplicationRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


