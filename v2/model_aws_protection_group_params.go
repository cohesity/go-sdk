/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AwsProtectionGroupParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsProtectionGroupParams{}

// AwsProtectionGroupParams Specifies the parameters which are specific to AWS related Protection Groups.
type AwsProtectionGroupParams struct {
	AgentProtectionTypeParams *AwsAgentProtectionGroupParams `json:"agentProtectionTypeParams,omitempty"`
	AuroraProtectionTypeParams *AwsAuroraProtectionGroupParams `json:"auroraProtectionTypeParams,omitempty"`
	NativeProtectionTypeParams *AwsNativeProtectionGroupParams `json:"nativeProtectionTypeParams,omitempty"`
	// Specifies the AWS Protection Group type.
	ProtectionType string `json:"protectionType"`
	RdsPostgresProtectionTypeParams *AwsRdsPostgresProtectionGroupParams `json:"rdsPostgresProtectionTypeParams,omitempty"`
	RdsProtectionTypeParams *AwsRdsProtectionGroupParams `json:"rdsProtectionTypeParams,omitempty"`
	S3ProtectionTypeParams *AwsS3ProtectionGroupParams `json:"s3ProtectionTypeParams,omitempty"`
	SnapshotManagerProtectionTypeParams *AwsSnapshotManagerProtectionGroupParams `json:"snapshotManagerProtectionTypeParams,omitempty"`
}

type _AwsProtectionGroupParams AwsProtectionGroupParams

// NewAwsProtectionGroupParams instantiates a new AwsProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsProtectionGroupParams(protectionType string) *AwsProtectionGroupParams {
	this := AwsProtectionGroupParams{}
	this.ProtectionType = protectionType
	return &this
}

// NewAwsProtectionGroupParamsWithDefaults instantiates a new AwsProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsProtectionGroupParamsWithDefaults() *AwsProtectionGroupParams {
	this := AwsProtectionGroupParams{}
	return &this
}

// GetAgentProtectionTypeParams returns the AgentProtectionTypeParams field value if set, zero value otherwise.
func (o *AwsProtectionGroupParams) GetAgentProtectionTypeParams() AwsAgentProtectionGroupParams {
	if o == nil || IsNil(o.AgentProtectionTypeParams) {
		var ret AwsAgentProtectionGroupParams
		return ret
	}
	return *o.AgentProtectionTypeParams
}

// GetAgentProtectionTypeParamsOk returns a tuple with the AgentProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProtectionGroupParams) GetAgentProtectionTypeParamsOk() (*AwsAgentProtectionGroupParams, bool) {
	if o == nil || IsNil(o.AgentProtectionTypeParams) {
		return nil, false
	}
	return o.AgentProtectionTypeParams, true
}

// HasAgentProtectionTypeParams returns a boolean if a field has been set.
func (o *AwsProtectionGroupParams) HasAgentProtectionTypeParams() bool {
	if o != nil && !IsNil(o.AgentProtectionTypeParams) {
		return true
	}

	return false
}

// SetAgentProtectionTypeParams gets a reference to the given AwsAgentProtectionGroupParams and assigns it to the AgentProtectionTypeParams field.
func (o *AwsProtectionGroupParams) SetAgentProtectionTypeParams(v AwsAgentProtectionGroupParams) {
	o.AgentProtectionTypeParams = &v
}

// GetAuroraProtectionTypeParams returns the AuroraProtectionTypeParams field value if set, zero value otherwise.
func (o *AwsProtectionGroupParams) GetAuroraProtectionTypeParams() AwsAuroraProtectionGroupParams {
	if o == nil || IsNil(o.AuroraProtectionTypeParams) {
		var ret AwsAuroraProtectionGroupParams
		return ret
	}
	return *o.AuroraProtectionTypeParams
}

// GetAuroraProtectionTypeParamsOk returns a tuple with the AuroraProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProtectionGroupParams) GetAuroraProtectionTypeParamsOk() (*AwsAuroraProtectionGroupParams, bool) {
	if o == nil || IsNil(o.AuroraProtectionTypeParams) {
		return nil, false
	}
	return o.AuroraProtectionTypeParams, true
}

// HasAuroraProtectionTypeParams returns a boolean if a field has been set.
func (o *AwsProtectionGroupParams) HasAuroraProtectionTypeParams() bool {
	if o != nil && !IsNil(o.AuroraProtectionTypeParams) {
		return true
	}

	return false
}

// SetAuroraProtectionTypeParams gets a reference to the given AwsAuroraProtectionGroupParams and assigns it to the AuroraProtectionTypeParams field.
func (o *AwsProtectionGroupParams) SetAuroraProtectionTypeParams(v AwsAuroraProtectionGroupParams) {
	o.AuroraProtectionTypeParams = &v
}

// GetNativeProtectionTypeParams returns the NativeProtectionTypeParams field value if set, zero value otherwise.
func (o *AwsProtectionGroupParams) GetNativeProtectionTypeParams() AwsNativeProtectionGroupParams {
	if o == nil || IsNil(o.NativeProtectionTypeParams) {
		var ret AwsNativeProtectionGroupParams
		return ret
	}
	return *o.NativeProtectionTypeParams
}

// GetNativeProtectionTypeParamsOk returns a tuple with the NativeProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProtectionGroupParams) GetNativeProtectionTypeParamsOk() (*AwsNativeProtectionGroupParams, bool) {
	if o == nil || IsNil(o.NativeProtectionTypeParams) {
		return nil, false
	}
	return o.NativeProtectionTypeParams, true
}

// HasNativeProtectionTypeParams returns a boolean if a field has been set.
func (o *AwsProtectionGroupParams) HasNativeProtectionTypeParams() bool {
	if o != nil && !IsNil(o.NativeProtectionTypeParams) {
		return true
	}

	return false
}

// SetNativeProtectionTypeParams gets a reference to the given AwsNativeProtectionGroupParams and assigns it to the NativeProtectionTypeParams field.
func (o *AwsProtectionGroupParams) SetNativeProtectionTypeParams(v AwsNativeProtectionGroupParams) {
	o.NativeProtectionTypeParams = &v
}

// GetProtectionType returns the ProtectionType field value
func (o *AwsProtectionGroupParams) GetProtectionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProtectionType
}

// GetProtectionTypeOk returns a tuple with the ProtectionType field value
// and a boolean to check if the value has been set.
func (o *AwsProtectionGroupParams) GetProtectionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProtectionType, true
}

// SetProtectionType sets field value
func (o *AwsProtectionGroupParams) SetProtectionType(v string) {
	o.ProtectionType = v
}

// GetRdsPostgresProtectionTypeParams returns the RdsPostgresProtectionTypeParams field value if set, zero value otherwise.
func (o *AwsProtectionGroupParams) GetRdsPostgresProtectionTypeParams() AwsRdsPostgresProtectionGroupParams {
	if o == nil || IsNil(o.RdsPostgresProtectionTypeParams) {
		var ret AwsRdsPostgresProtectionGroupParams
		return ret
	}
	return *o.RdsPostgresProtectionTypeParams
}

// GetRdsPostgresProtectionTypeParamsOk returns a tuple with the RdsPostgresProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProtectionGroupParams) GetRdsPostgresProtectionTypeParamsOk() (*AwsRdsPostgresProtectionGroupParams, bool) {
	if o == nil || IsNil(o.RdsPostgresProtectionTypeParams) {
		return nil, false
	}
	return o.RdsPostgresProtectionTypeParams, true
}

// HasRdsPostgresProtectionTypeParams returns a boolean if a field has been set.
func (o *AwsProtectionGroupParams) HasRdsPostgresProtectionTypeParams() bool {
	if o != nil && !IsNil(o.RdsPostgresProtectionTypeParams) {
		return true
	}

	return false
}

// SetRdsPostgresProtectionTypeParams gets a reference to the given AwsRdsPostgresProtectionGroupParams and assigns it to the RdsPostgresProtectionTypeParams field.
func (o *AwsProtectionGroupParams) SetRdsPostgresProtectionTypeParams(v AwsRdsPostgresProtectionGroupParams) {
	o.RdsPostgresProtectionTypeParams = &v
}

// GetRdsProtectionTypeParams returns the RdsProtectionTypeParams field value if set, zero value otherwise.
func (o *AwsProtectionGroupParams) GetRdsProtectionTypeParams() AwsRdsProtectionGroupParams {
	if o == nil || IsNil(o.RdsProtectionTypeParams) {
		var ret AwsRdsProtectionGroupParams
		return ret
	}
	return *o.RdsProtectionTypeParams
}

// GetRdsProtectionTypeParamsOk returns a tuple with the RdsProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProtectionGroupParams) GetRdsProtectionTypeParamsOk() (*AwsRdsProtectionGroupParams, bool) {
	if o == nil || IsNil(o.RdsProtectionTypeParams) {
		return nil, false
	}
	return o.RdsProtectionTypeParams, true
}

// HasRdsProtectionTypeParams returns a boolean if a field has been set.
func (o *AwsProtectionGroupParams) HasRdsProtectionTypeParams() bool {
	if o != nil && !IsNil(o.RdsProtectionTypeParams) {
		return true
	}

	return false
}

// SetRdsProtectionTypeParams gets a reference to the given AwsRdsProtectionGroupParams and assigns it to the RdsProtectionTypeParams field.
func (o *AwsProtectionGroupParams) SetRdsProtectionTypeParams(v AwsRdsProtectionGroupParams) {
	o.RdsProtectionTypeParams = &v
}

// GetS3ProtectionTypeParams returns the S3ProtectionTypeParams field value if set, zero value otherwise.
func (o *AwsProtectionGroupParams) GetS3ProtectionTypeParams() AwsS3ProtectionGroupParams {
	if o == nil || IsNil(o.S3ProtectionTypeParams) {
		var ret AwsS3ProtectionGroupParams
		return ret
	}
	return *o.S3ProtectionTypeParams
}

// GetS3ProtectionTypeParamsOk returns a tuple with the S3ProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProtectionGroupParams) GetS3ProtectionTypeParamsOk() (*AwsS3ProtectionGroupParams, bool) {
	if o == nil || IsNil(o.S3ProtectionTypeParams) {
		return nil, false
	}
	return o.S3ProtectionTypeParams, true
}

// HasS3ProtectionTypeParams returns a boolean if a field has been set.
func (o *AwsProtectionGroupParams) HasS3ProtectionTypeParams() bool {
	if o != nil && !IsNil(o.S3ProtectionTypeParams) {
		return true
	}

	return false
}

// SetS3ProtectionTypeParams gets a reference to the given AwsS3ProtectionGroupParams and assigns it to the S3ProtectionTypeParams field.
func (o *AwsProtectionGroupParams) SetS3ProtectionTypeParams(v AwsS3ProtectionGroupParams) {
	o.S3ProtectionTypeParams = &v
}

// GetSnapshotManagerProtectionTypeParams returns the SnapshotManagerProtectionTypeParams field value if set, zero value otherwise.
func (o *AwsProtectionGroupParams) GetSnapshotManagerProtectionTypeParams() AwsSnapshotManagerProtectionGroupParams {
	if o == nil || IsNil(o.SnapshotManagerProtectionTypeParams) {
		var ret AwsSnapshotManagerProtectionGroupParams
		return ret
	}
	return *o.SnapshotManagerProtectionTypeParams
}

// GetSnapshotManagerProtectionTypeParamsOk returns a tuple with the SnapshotManagerProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProtectionGroupParams) GetSnapshotManagerProtectionTypeParamsOk() (*AwsSnapshotManagerProtectionGroupParams, bool) {
	if o == nil || IsNil(o.SnapshotManagerProtectionTypeParams) {
		return nil, false
	}
	return o.SnapshotManagerProtectionTypeParams, true
}

// HasSnapshotManagerProtectionTypeParams returns a boolean if a field has been set.
func (o *AwsProtectionGroupParams) HasSnapshotManagerProtectionTypeParams() bool {
	if o != nil && !IsNil(o.SnapshotManagerProtectionTypeParams) {
		return true
	}

	return false
}

// SetSnapshotManagerProtectionTypeParams gets a reference to the given AwsSnapshotManagerProtectionGroupParams and assigns it to the SnapshotManagerProtectionTypeParams field.
func (o *AwsProtectionGroupParams) SetSnapshotManagerProtectionTypeParams(v AwsSnapshotManagerProtectionGroupParams) {
	o.SnapshotManagerProtectionTypeParams = &v
}

func (o AwsProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsProtectionGroupParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AgentProtectionTypeParams) {
		toSerialize["agentProtectionTypeParams"] = o.AgentProtectionTypeParams
	}
	if !IsNil(o.AuroraProtectionTypeParams) {
		toSerialize["auroraProtectionTypeParams"] = o.AuroraProtectionTypeParams
	}
	if !IsNil(o.NativeProtectionTypeParams) {
		toSerialize["nativeProtectionTypeParams"] = o.NativeProtectionTypeParams
	}
	toSerialize["protectionType"] = o.ProtectionType
	if !IsNil(o.RdsPostgresProtectionTypeParams) {
		toSerialize["rdsPostgresProtectionTypeParams"] = o.RdsPostgresProtectionTypeParams
	}
	if !IsNil(o.RdsProtectionTypeParams) {
		toSerialize["rdsProtectionTypeParams"] = o.RdsProtectionTypeParams
	}
	if !IsNil(o.S3ProtectionTypeParams) {
		toSerialize["s3ProtectionTypeParams"] = o.S3ProtectionTypeParams
	}
	if !IsNil(o.SnapshotManagerProtectionTypeParams) {
		toSerialize["snapshotManagerProtectionTypeParams"] = o.SnapshotManagerProtectionTypeParams
	}
	return toSerialize, nil
}

func (o *AwsProtectionGroupParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"protectionType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAwsProtectionGroupParams := _AwsProtectionGroupParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAwsProtectionGroupParams)

	if err != nil {
		return err
	}

	*o = AwsProtectionGroupParams(varAwsProtectionGroupParams)

	return err
}

type NullableAwsProtectionGroupParams struct {
	value *AwsProtectionGroupParams
	isSet bool
}

func (v NullableAwsProtectionGroupParams) Get() *AwsProtectionGroupParams {
	return v.value
}

func (v *NullableAwsProtectionGroupParams) Set(val *AwsProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsProtectionGroupParams(val *AwsProtectionGroupParams) *NullableAwsProtectionGroupParams {
	return &NullableAwsProtectionGroupParams{value: val, isSet: true}
}

func (v NullableAwsProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


