/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the DataTieringShareStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataTieringShareStats{}

// DataTieringShareStats Specifies the source shares analysis stats.
type DataTieringShareStats struct {
	// Specifies the access time bucket.
	AccessTimeTag NullableString `json:"accessTimeTag,omitempty"`
	// Specifies the file count.
	FileCount NullableInt32 `json:"fileCount,omitempty"`
	// Specifies the file size bucket.
	FileSizeTag NullableString `json:"fileSizeTag,omitempty"`
	// Specifies the file type bucket.
	FileTypeTag NullableString `json:"fileTypeTag,omitempty"`
	// Specifies the unique identifer for stat.
	Id NullableInt32 `json:"id,omitempty"`
	// Specifies the modification time bucket.
	ModTimeTag NullableString `json:"modTimeTag,omitempty"`
	// Specifies the total count.
	TotalSize NullableInt32 `json:"totalSize,omitempty"`
}

// NewDataTieringShareStats instantiates a new DataTieringShareStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataTieringShareStats() *DataTieringShareStats {
	this := DataTieringShareStats{}
	return &this
}

// NewDataTieringShareStatsWithDefaults instantiates a new DataTieringShareStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataTieringShareStatsWithDefaults() *DataTieringShareStats {
	this := DataTieringShareStats{}
	return &this
}

// GetAccessTimeTag returns the AccessTimeTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataTieringShareStats) GetAccessTimeTag() string {
	if o == nil || IsNil(o.AccessTimeTag.Get()) {
		var ret string
		return ret
	}
	return *o.AccessTimeTag.Get()
}

// GetAccessTimeTagOk returns a tuple with the AccessTimeTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataTieringShareStats) GetAccessTimeTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessTimeTag.Get(), o.AccessTimeTag.IsSet()
}

// HasAccessTimeTag returns a boolean if a field has been set.
func (o *DataTieringShareStats) HasAccessTimeTag() bool {
	if o != nil && o.AccessTimeTag.IsSet() {
		return true
	}

	return false
}

// SetAccessTimeTag gets a reference to the given NullableString and assigns it to the AccessTimeTag field.
func (o *DataTieringShareStats) SetAccessTimeTag(v string) {
	o.AccessTimeTag.Set(&v)
}
// SetAccessTimeTagNil sets the value for AccessTimeTag to be an explicit nil
func (o *DataTieringShareStats) SetAccessTimeTagNil() {
	o.AccessTimeTag.Set(nil)
}

// UnsetAccessTimeTag ensures that no value is present for AccessTimeTag, not even an explicit nil
func (o *DataTieringShareStats) UnsetAccessTimeTag() {
	o.AccessTimeTag.Unset()
}

// GetFileCount returns the FileCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataTieringShareStats) GetFileCount() int32 {
	if o == nil || IsNil(o.FileCount.Get()) {
		var ret int32
		return ret
	}
	return *o.FileCount.Get()
}

// GetFileCountOk returns a tuple with the FileCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataTieringShareStats) GetFileCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileCount.Get(), o.FileCount.IsSet()
}

// HasFileCount returns a boolean if a field has been set.
func (o *DataTieringShareStats) HasFileCount() bool {
	if o != nil && o.FileCount.IsSet() {
		return true
	}

	return false
}

// SetFileCount gets a reference to the given NullableInt32 and assigns it to the FileCount field.
func (o *DataTieringShareStats) SetFileCount(v int32) {
	o.FileCount.Set(&v)
}
// SetFileCountNil sets the value for FileCount to be an explicit nil
func (o *DataTieringShareStats) SetFileCountNil() {
	o.FileCount.Set(nil)
}

// UnsetFileCount ensures that no value is present for FileCount, not even an explicit nil
func (o *DataTieringShareStats) UnsetFileCount() {
	o.FileCount.Unset()
}

// GetFileSizeTag returns the FileSizeTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataTieringShareStats) GetFileSizeTag() string {
	if o == nil || IsNil(o.FileSizeTag.Get()) {
		var ret string
		return ret
	}
	return *o.FileSizeTag.Get()
}

// GetFileSizeTagOk returns a tuple with the FileSizeTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataTieringShareStats) GetFileSizeTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileSizeTag.Get(), o.FileSizeTag.IsSet()
}

// HasFileSizeTag returns a boolean if a field has been set.
func (o *DataTieringShareStats) HasFileSizeTag() bool {
	if o != nil && o.FileSizeTag.IsSet() {
		return true
	}

	return false
}

// SetFileSizeTag gets a reference to the given NullableString and assigns it to the FileSizeTag field.
func (o *DataTieringShareStats) SetFileSizeTag(v string) {
	o.FileSizeTag.Set(&v)
}
// SetFileSizeTagNil sets the value for FileSizeTag to be an explicit nil
func (o *DataTieringShareStats) SetFileSizeTagNil() {
	o.FileSizeTag.Set(nil)
}

// UnsetFileSizeTag ensures that no value is present for FileSizeTag, not even an explicit nil
func (o *DataTieringShareStats) UnsetFileSizeTag() {
	o.FileSizeTag.Unset()
}

// GetFileTypeTag returns the FileTypeTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataTieringShareStats) GetFileTypeTag() string {
	if o == nil || IsNil(o.FileTypeTag.Get()) {
		var ret string
		return ret
	}
	return *o.FileTypeTag.Get()
}

// GetFileTypeTagOk returns a tuple with the FileTypeTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataTieringShareStats) GetFileTypeTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileTypeTag.Get(), o.FileTypeTag.IsSet()
}

// HasFileTypeTag returns a boolean if a field has been set.
func (o *DataTieringShareStats) HasFileTypeTag() bool {
	if o != nil && o.FileTypeTag.IsSet() {
		return true
	}

	return false
}

// SetFileTypeTag gets a reference to the given NullableString and assigns it to the FileTypeTag field.
func (o *DataTieringShareStats) SetFileTypeTag(v string) {
	o.FileTypeTag.Set(&v)
}
// SetFileTypeTagNil sets the value for FileTypeTag to be an explicit nil
func (o *DataTieringShareStats) SetFileTypeTagNil() {
	o.FileTypeTag.Set(nil)
}

// UnsetFileTypeTag ensures that no value is present for FileTypeTag, not even an explicit nil
func (o *DataTieringShareStats) UnsetFileTypeTag() {
	o.FileTypeTag.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataTieringShareStats) GetId() int32 {
	if o == nil || IsNil(o.Id.Get()) {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataTieringShareStats) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *DataTieringShareStats) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt32 and assigns it to the Id field.
func (o *DataTieringShareStats) SetId(v int32) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *DataTieringShareStats) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *DataTieringShareStats) UnsetId() {
	o.Id.Unset()
}

// GetModTimeTag returns the ModTimeTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataTieringShareStats) GetModTimeTag() string {
	if o == nil || IsNil(o.ModTimeTag.Get()) {
		var ret string
		return ret
	}
	return *o.ModTimeTag.Get()
}

// GetModTimeTagOk returns a tuple with the ModTimeTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataTieringShareStats) GetModTimeTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModTimeTag.Get(), o.ModTimeTag.IsSet()
}

// HasModTimeTag returns a boolean if a field has been set.
func (o *DataTieringShareStats) HasModTimeTag() bool {
	if o != nil && o.ModTimeTag.IsSet() {
		return true
	}

	return false
}

// SetModTimeTag gets a reference to the given NullableString and assigns it to the ModTimeTag field.
func (o *DataTieringShareStats) SetModTimeTag(v string) {
	o.ModTimeTag.Set(&v)
}
// SetModTimeTagNil sets the value for ModTimeTag to be an explicit nil
func (o *DataTieringShareStats) SetModTimeTagNil() {
	o.ModTimeTag.Set(nil)
}

// UnsetModTimeTag ensures that no value is present for ModTimeTag, not even an explicit nil
func (o *DataTieringShareStats) UnsetModTimeTag() {
	o.ModTimeTag.Unset()
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataTieringShareStats) GetTotalSize() int32 {
	if o == nil || IsNil(o.TotalSize.Get()) {
		var ret int32
		return ret
	}
	return *o.TotalSize.Get()
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataTieringShareStats) GetTotalSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalSize.Get(), o.TotalSize.IsSet()
}

// HasTotalSize returns a boolean if a field has been set.
func (o *DataTieringShareStats) HasTotalSize() bool {
	if o != nil && o.TotalSize.IsSet() {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given NullableInt32 and assigns it to the TotalSize field.
func (o *DataTieringShareStats) SetTotalSize(v int32) {
	o.TotalSize.Set(&v)
}
// SetTotalSizeNil sets the value for TotalSize to be an explicit nil
func (o *DataTieringShareStats) SetTotalSizeNil() {
	o.TotalSize.Set(nil)
}

// UnsetTotalSize ensures that no value is present for TotalSize, not even an explicit nil
func (o *DataTieringShareStats) UnsetTotalSize() {
	o.TotalSize.Unset()
}

func (o DataTieringShareStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataTieringShareStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessTimeTag.IsSet() {
		toSerialize["accessTimeTag"] = o.AccessTimeTag.Get()
	}
	if o.FileCount.IsSet() {
		toSerialize["fileCount"] = o.FileCount.Get()
	}
	if o.FileSizeTag.IsSet() {
		toSerialize["fileSizeTag"] = o.FileSizeTag.Get()
	}
	if o.FileTypeTag.IsSet() {
		toSerialize["fileTypeTag"] = o.FileTypeTag.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.ModTimeTag.IsSet() {
		toSerialize["modTimeTag"] = o.ModTimeTag.Get()
	}
	if o.TotalSize.IsSet() {
		toSerialize["totalSize"] = o.TotalSize.Get()
	}
	return toSerialize, nil
}

type NullableDataTieringShareStats struct {
	value *DataTieringShareStats
	isSet bool
}

func (v NullableDataTieringShareStats) Get() *DataTieringShareStats {
	return v.value
}

func (v *NullableDataTieringShareStats) Set(val *DataTieringShareStats) {
	v.value = val
	v.isSet = true
}

func (v NullableDataTieringShareStats) IsSet() bool {
	return v.isSet
}

func (v *NullableDataTieringShareStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataTieringShareStats(val *DataTieringShareStats) *NullableDataTieringShareStats {
	return &NullableDataTieringShareStats{value: val, isSet: true}
}

func (v NullableDataTieringShareStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataTieringShareStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


