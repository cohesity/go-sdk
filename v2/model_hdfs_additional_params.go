/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the HdfsAdditionalParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HdfsAdditionalParams{}

// HdfsAdditionalParams Additional params for Hdfs protection source.
type HdfsAdditionalParams struct {
	// Authentication type.
	AuthType NullableString `json:"authType,omitempty"`
	// The HDFS Namenode IP or hostname.
	NamenodeAddress *string `json:"namenodeAddress,omitempty"`
	// The HDFS WebHDFS port.
	WebhdfsPort *int32 `json:"webhdfsPort,omitempty"`
}

// NewHdfsAdditionalParams instantiates a new HdfsAdditionalParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHdfsAdditionalParams() *HdfsAdditionalParams {
	this := HdfsAdditionalParams{}
	return &this
}

// NewHdfsAdditionalParamsWithDefaults instantiates a new HdfsAdditionalParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHdfsAdditionalParamsWithDefaults() *HdfsAdditionalParams {
	this := HdfsAdditionalParams{}
	return &this
}

// GetAuthType returns the AuthType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HdfsAdditionalParams) GetAuthType() string {
	if o == nil || IsNil(o.AuthType.Get()) {
		var ret string
		return ret
	}
	return *o.AuthType.Get()
}

// GetAuthTypeOk returns a tuple with the AuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HdfsAdditionalParams) GetAuthTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthType.Get(), o.AuthType.IsSet()
}

// HasAuthType returns a boolean if a field has been set.
func (o *HdfsAdditionalParams) HasAuthType() bool {
	if o != nil && o.AuthType.IsSet() {
		return true
	}

	return false
}

// SetAuthType gets a reference to the given NullableString and assigns it to the AuthType field.
func (o *HdfsAdditionalParams) SetAuthType(v string) {
	o.AuthType.Set(&v)
}
// SetAuthTypeNil sets the value for AuthType to be an explicit nil
func (o *HdfsAdditionalParams) SetAuthTypeNil() {
	o.AuthType.Set(nil)
}

// UnsetAuthType ensures that no value is present for AuthType, not even an explicit nil
func (o *HdfsAdditionalParams) UnsetAuthType() {
	o.AuthType.Unset()
}

// GetNamenodeAddress returns the NamenodeAddress field value if set, zero value otherwise.
func (o *HdfsAdditionalParams) GetNamenodeAddress() string {
	if o == nil || IsNil(o.NamenodeAddress) {
		var ret string
		return ret
	}
	return *o.NamenodeAddress
}

// GetNamenodeAddressOk returns a tuple with the NamenodeAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HdfsAdditionalParams) GetNamenodeAddressOk() (*string, bool) {
	if o == nil || IsNil(o.NamenodeAddress) {
		return nil, false
	}
	return o.NamenodeAddress, true
}

// HasNamenodeAddress returns a boolean if a field has been set.
func (o *HdfsAdditionalParams) HasNamenodeAddress() bool {
	if o != nil && !IsNil(o.NamenodeAddress) {
		return true
	}

	return false
}

// SetNamenodeAddress gets a reference to the given string and assigns it to the NamenodeAddress field.
func (o *HdfsAdditionalParams) SetNamenodeAddress(v string) {
	o.NamenodeAddress = &v
}

// GetWebhdfsPort returns the WebhdfsPort field value if set, zero value otherwise.
func (o *HdfsAdditionalParams) GetWebhdfsPort() int32 {
	if o == nil || IsNil(o.WebhdfsPort) {
		var ret int32
		return ret
	}
	return *o.WebhdfsPort
}

// GetWebhdfsPortOk returns a tuple with the WebhdfsPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HdfsAdditionalParams) GetWebhdfsPortOk() (*int32, bool) {
	if o == nil || IsNil(o.WebhdfsPort) {
		return nil, false
	}
	return o.WebhdfsPort, true
}

// HasWebhdfsPort returns a boolean if a field has been set.
func (o *HdfsAdditionalParams) HasWebhdfsPort() bool {
	if o != nil && !IsNil(o.WebhdfsPort) {
		return true
	}

	return false
}

// SetWebhdfsPort gets a reference to the given int32 and assigns it to the WebhdfsPort field.
func (o *HdfsAdditionalParams) SetWebhdfsPort(v int32) {
	o.WebhdfsPort = &v
}

func (o HdfsAdditionalParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HdfsAdditionalParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthType.IsSet() {
		toSerialize["authType"] = o.AuthType.Get()
	}
	if !IsNil(o.NamenodeAddress) {
		toSerialize["namenodeAddress"] = o.NamenodeAddress
	}
	if !IsNil(o.WebhdfsPort) {
		toSerialize["webhdfsPort"] = o.WebhdfsPort
	}
	return toSerialize, nil
}

type NullableHdfsAdditionalParams struct {
	value *HdfsAdditionalParams
	isSet bool
}

func (v NullableHdfsAdditionalParams) Get() *HdfsAdditionalParams {
	return v.value
}

func (v *NullableHdfsAdditionalParams) Set(val *HdfsAdditionalParams) {
	v.value = val
	v.isSet = true
}

func (v NullableHdfsAdditionalParams) IsSet() bool {
	return v.isSet
}

func (v *NullableHdfsAdditionalParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHdfsAdditionalParams(val *HdfsAdditionalParams) *NullableHdfsAdditionalParams {
	return &NullableHdfsAdditionalParams{value: val, isSet: true}
}

func (v NullableHdfsAdditionalParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHdfsAdditionalParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


