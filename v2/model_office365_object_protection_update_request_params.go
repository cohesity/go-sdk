/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Office365ObjectProtectionUpdateRequestParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Office365ObjectProtectionUpdateRequestParams{}

// Office365ObjectProtectionUpdateRequestParams Specifies the update parameters specific to Microsoft 365 User Mailbox object protection.
type Office365ObjectProtectionUpdateRequestParams struct {
	GroupsObjectProtectionParams *Office365GroupsObjectProtectionParams `json:"groupsObjectProtectionParams,omitempty"`
	// Specifies the Microsoft 365 Object Protection type.
	ObjectProtectionType string `json:"objectProtectionType"`
	SharepointSiteObjectProtectionParams *Office365SharepointSiteObjectProtectionParams `json:"sharepointSiteObjectProtectionParams,omitempty"`
	TeamsObjectProtectionParams *Office365TeamsObjectProtectionParams `json:"teamsObjectProtectionParams,omitempty"`
	UserMailboxObjectProtectionParams *Office365UserMailboxObjectProtectionParams `json:"userMailboxObjectProtectionParams,omitempty"`
	UserOneDriveObjectProtectionParams *Office365UserOneDriveObjectProtectionParams `json:"userOneDriveObjectProtectionParams,omitempty"`
}

type _Office365ObjectProtectionUpdateRequestParams Office365ObjectProtectionUpdateRequestParams

// NewOffice365ObjectProtectionUpdateRequestParams instantiates a new Office365ObjectProtectionUpdateRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOffice365ObjectProtectionUpdateRequestParams(objectProtectionType string) *Office365ObjectProtectionUpdateRequestParams {
	this := Office365ObjectProtectionUpdateRequestParams{}
	this.ObjectProtectionType = objectProtectionType
	return &this
}

// NewOffice365ObjectProtectionUpdateRequestParamsWithDefaults instantiates a new Office365ObjectProtectionUpdateRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOffice365ObjectProtectionUpdateRequestParamsWithDefaults() *Office365ObjectProtectionUpdateRequestParams {
	this := Office365ObjectProtectionUpdateRequestParams{}
	return &this
}

// GetGroupsObjectProtectionParams returns the GroupsObjectProtectionParams field value if set, zero value otherwise.
func (o *Office365ObjectProtectionUpdateRequestParams) GetGroupsObjectProtectionParams() Office365GroupsObjectProtectionParams {
	if o == nil || IsNil(o.GroupsObjectProtectionParams) {
		var ret Office365GroupsObjectProtectionParams
		return ret
	}
	return *o.GroupsObjectProtectionParams
}

// GetGroupsObjectProtectionParamsOk returns a tuple with the GroupsObjectProtectionParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office365ObjectProtectionUpdateRequestParams) GetGroupsObjectProtectionParamsOk() (*Office365GroupsObjectProtectionParams, bool) {
	if o == nil || IsNil(o.GroupsObjectProtectionParams) {
		return nil, false
	}
	return o.GroupsObjectProtectionParams, true
}

// HasGroupsObjectProtectionParams returns a boolean if a field has been set.
func (o *Office365ObjectProtectionUpdateRequestParams) HasGroupsObjectProtectionParams() bool {
	if o != nil && !IsNil(o.GroupsObjectProtectionParams) {
		return true
	}

	return false
}

// SetGroupsObjectProtectionParams gets a reference to the given Office365GroupsObjectProtectionParams and assigns it to the GroupsObjectProtectionParams field.
func (o *Office365ObjectProtectionUpdateRequestParams) SetGroupsObjectProtectionParams(v Office365GroupsObjectProtectionParams) {
	o.GroupsObjectProtectionParams = &v
}

// GetObjectProtectionType returns the ObjectProtectionType field value
func (o *Office365ObjectProtectionUpdateRequestParams) GetObjectProtectionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectProtectionType
}

// GetObjectProtectionTypeOk returns a tuple with the ObjectProtectionType field value
// and a boolean to check if the value has been set.
func (o *Office365ObjectProtectionUpdateRequestParams) GetObjectProtectionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectProtectionType, true
}

// SetObjectProtectionType sets field value
func (o *Office365ObjectProtectionUpdateRequestParams) SetObjectProtectionType(v string) {
	o.ObjectProtectionType = v
}

// GetSharepointSiteObjectProtectionParams returns the SharepointSiteObjectProtectionParams field value if set, zero value otherwise.
func (o *Office365ObjectProtectionUpdateRequestParams) GetSharepointSiteObjectProtectionParams() Office365SharepointSiteObjectProtectionParams {
	if o == nil || IsNil(o.SharepointSiteObjectProtectionParams) {
		var ret Office365SharepointSiteObjectProtectionParams
		return ret
	}
	return *o.SharepointSiteObjectProtectionParams
}

// GetSharepointSiteObjectProtectionParamsOk returns a tuple with the SharepointSiteObjectProtectionParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office365ObjectProtectionUpdateRequestParams) GetSharepointSiteObjectProtectionParamsOk() (*Office365SharepointSiteObjectProtectionParams, bool) {
	if o == nil || IsNil(o.SharepointSiteObjectProtectionParams) {
		return nil, false
	}
	return o.SharepointSiteObjectProtectionParams, true
}

// HasSharepointSiteObjectProtectionParams returns a boolean if a field has been set.
func (o *Office365ObjectProtectionUpdateRequestParams) HasSharepointSiteObjectProtectionParams() bool {
	if o != nil && !IsNil(o.SharepointSiteObjectProtectionParams) {
		return true
	}

	return false
}

// SetSharepointSiteObjectProtectionParams gets a reference to the given Office365SharepointSiteObjectProtectionParams and assigns it to the SharepointSiteObjectProtectionParams field.
func (o *Office365ObjectProtectionUpdateRequestParams) SetSharepointSiteObjectProtectionParams(v Office365SharepointSiteObjectProtectionParams) {
	o.SharepointSiteObjectProtectionParams = &v
}

// GetTeamsObjectProtectionParams returns the TeamsObjectProtectionParams field value if set, zero value otherwise.
func (o *Office365ObjectProtectionUpdateRequestParams) GetTeamsObjectProtectionParams() Office365TeamsObjectProtectionParams {
	if o == nil || IsNil(o.TeamsObjectProtectionParams) {
		var ret Office365TeamsObjectProtectionParams
		return ret
	}
	return *o.TeamsObjectProtectionParams
}

// GetTeamsObjectProtectionParamsOk returns a tuple with the TeamsObjectProtectionParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office365ObjectProtectionUpdateRequestParams) GetTeamsObjectProtectionParamsOk() (*Office365TeamsObjectProtectionParams, bool) {
	if o == nil || IsNil(o.TeamsObjectProtectionParams) {
		return nil, false
	}
	return o.TeamsObjectProtectionParams, true
}

// HasTeamsObjectProtectionParams returns a boolean if a field has been set.
func (o *Office365ObjectProtectionUpdateRequestParams) HasTeamsObjectProtectionParams() bool {
	if o != nil && !IsNil(o.TeamsObjectProtectionParams) {
		return true
	}

	return false
}

// SetTeamsObjectProtectionParams gets a reference to the given Office365TeamsObjectProtectionParams and assigns it to the TeamsObjectProtectionParams field.
func (o *Office365ObjectProtectionUpdateRequestParams) SetTeamsObjectProtectionParams(v Office365TeamsObjectProtectionParams) {
	o.TeamsObjectProtectionParams = &v
}

// GetUserMailboxObjectProtectionParams returns the UserMailboxObjectProtectionParams field value if set, zero value otherwise.
func (o *Office365ObjectProtectionUpdateRequestParams) GetUserMailboxObjectProtectionParams() Office365UserMailboxObjectProtectionParams {
	if o == nil || IsNil(o.UserMailboxObjectProtectionParams) {
		var ret Office365UserMailboxObjectProtectionParams
		return ret
	}
	return *o.UserMailboxObjectProtectionParams
}

// GetUserMailboxObjectProtectionParamsOk returns a tuple with the UserMailboxObjectProtectionParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office365ObjectProtectionUpdateRequestParams) GetUserMailboxObjectProtectionParamsOk() (*Office365UserMailboxObjectProtectionParams, bool) {
	if o == nil || IsNil(o.UserMailboxObjectProtectionParams) {
		return nil, false
	}
	return o.UserMailboxObjectProtectionParams, true
}

// HasUserMailboxObjectProtectionParams returns a boolean if a field has been set.
func (o *Office365ObjectProtectionUpdateRequestParams) HasUserMailboxObjectProtectionParams() bool {
	if o != nil && !IsNil(o.UserMailboxObjectProtectionParams) {
		return true
	}

	return false
}

// SetUserMailboxObjectProtectionParams gets a reference to the given Office365UserMailboxObjectProtectionParams and assigns it to the UserMailboxObjectProtectionParams field.
func (o *Office365ObjectProtectionUpdateRequestParams) SetUserMailboxObjectProtectionParams(v Office365UserMailboxObjectProtectionParams) {
	o.UserMailboxObjectProtectionParams = &v
}

// GetUserOneDriveObjectProtectionParams returns the UserOneDriveObjectProtectionParams field value if set, zero value otherwise.
func (o *Office365ObjectProtectionUpdateRequestParams) GetUserOneDriveObjectProtectionParams() Office365UserOneDriveObjectProtectionParams {
	if o == nil || IsNil(o.UserOneDriveObjectProtectionParams) {
		var ret Office365UserOneDriveObjectProtectionParams
		return ret
	}
	return *o.UserOneDriveObjectProtectionParams
}

// GetUserOneDriveObjectProtectionParamsOk returns a tuple with the UserOneDriveObjectProtectionParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office365ObjectProtectionUpdateRequestParams) GetUserOneDriveObjectProtectionParamsOk() (*Office365UserOneDriveObjectProtectionParams, bool) {
	if o == nil || IsNil(o.UserOneDriveObjectProtectionParams) {
		return nil, false
	}
	return o.UserOneDriveObjectProtectionParams, true
}

// HasUserOneDriveObjectProtectionParams returns a boolean if a field has been set.
func (o *Office365ObjectProtectionUpdateRequestParams) HasUserOneDriveObjectProtectionParams() bool {
	if o != nil && !IsNil(o.UserOneDriveObjectProtectionParams) {
		return true
	}

	return false
}

// SetUserOneDriveObjectProtectionParams gets a reference to the given Office365UserOneDriveObjectProtectionParams and assigns it to the UserOneDriveObjectProtectionParams field.
func (o *Office365ObjectProtectionUpdateRequestParams) SetUserOneDriveObjectProtectionParams(v Office365UserOneDriveObjectProtectionParams) {
	o.UserOneDriveObjectProtectionParams = &v
}

func (o Office365ObjectProtectionUpdateRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Office365ObjectProtectionUpdateRequestParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupsObjectProtectionParams) {
		toSerialize["groupsObjectProtectionParams"] = o.GroupsObjectProtectionParams
	}
	toSerialize["objectProtectionType"] = o.ObjectProtectionType
	if !IsNil(o.SharepointSiteObjectProtectionParams) {
		toSerialize["sharepointSiteObjectProtectionParams"] = o.SharepointSiteObjectProtectionParams
	}
	if !IsNil(o.TeamsObjectProtectionParams) {
		toSerialize["teamsObjectProtectionParams"] = o.TeamsObjectProtectionParams
	}
	if !IsNil(o.UserMailboxObjectProtectionParams) {
		toSerialize["userMailboxObjectProtectionParams"] = o.UserMailboxObjectProtectionParams
	}
	if !IsNil(o.UserOneDriveObjectProtectionParams) {
		toSerialize["userOneDriveObjectProtectionParams"] = o.UserOneDriveObjectProtectionParams
	}
	return toSerialize, nil
}

func (o *Office365ObjectProtectionUpdateRequestParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objectProtectionType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOffice365ObjectProtectionUpdateRequestParams := _Office365ObjectProtectionUpdateRequestParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOffice365ObjectProtectionUpdateRequestParams)

	if err != nil {
		return err
	}

	*o = Office365ObjectProtectionUpdateRequestParams(varOffice365ObjectProtectionUpdateRequestParams)

	return err
}

type NullableOffice365ObjectProtectionUpdateRequestParams struct {
	value *Office365ObjectProtectionUpdateRequestParams
	isSet bool
}

func (v NullableOffice365ObjectProtectionUpdateRequestParams) Get() *Office365ObjectProtectionUpdateRequestParams {
	return v.value
}

func (v *NullableOffice365ObjectProtectionUpdateRequestParams) Set(val *Office365ObjectProtectionUpdateRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableOffice365ObjectProtectionUpdateRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableOffice365ObjectProtectionUpdateRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOffice365ObjectProtectionUpdateRequestParams(val *Office365ObjectProtectionUpdateRequestParams) *NullableOffice365ObjectProtectionUpdateRequestParams {
	return &NullableOffice365ObjectProtectionUpdateRequestParams{value: val, isSet: true}
}

func (v NullableOffice365ObjectProtectionUpdateRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOffice365ObjectProtectionUpdateRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


