/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ViewsSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ViewsSummary{}

// ViewsSummary Get the summary of the Views.
type ViewsSummary struct {
	// Specifies the data written to all the views in bytes.
	DataWrittenBytes NullableInt64 `json:"dataWrittenBytes,omitempty"`
	// Specifies the data written to all the views in bytes at a specific time.
	DataWrittenBytesPrev NullableInt64 `json:"dataWrittenBytesPrev,omitempty"`
	// Specifies the timestamp in micro seconds when 'dataWrittenBytesPrev' was calculated.
	DataWrittenBytesPrevTimestampUsec NullableInt64 `json:"dataWrittenBytesPrevTimestampUsec,omitempty"`
	// Specifies the timestamp in micro seconds when 'dataWrittenBytes' was calculated.
	DataWrittenBytesTimestampUsec NullableInt64 `json:"dataWrittenBytesTimestampUsec,omitempty"`
	// Specifies the size of the data that has been replicated to other nodes as per RF or Erasure Coding policy.
	LocalTierResiliencyImpactBytes NullableInt64 `json:"localTierResiliencyImpactBytes,omitempty"`
	// Specifies the size of the data that has been replicated to other nodes as per RF or Erasure Coding policy at a specific time.
	LocalTierResiliencyImpactBytesPrev NullableInt64 `json:"localTierResiliencyImpactBytesPrev,omitempty"`
	// Specifies the timestamp in micro seconds when 'localTierResiliencyImpactBytesPrev' was calculated.
	LocalTierResiliencyImpactBytesPrevTimestampUsec NullableInt64 `json:"localTierResiliencyImpactBytesPrevTimestampUsec,omitempty"`
	// Specifies the timestamp in micro seconds when 'localTierResiliencyImpactBytes' was calculated.
	LocalTierResiliencyImpactBytesTimestampUsec NullableInt64 `json:"localTierResiliencyImpactBytesTimestampUsec,omitempty"`
	// Specifies the logical usage of all the views in bytes.
	LogicalUsageBytes NullableInt64 `json:"logicalUsageBytes,omitempty"`
	// Specifies the logical usage of all the views in bytes at a specific time.
	LogicalUsageBytesPrev NullableInt64 `json:"logicalUsageBytesPrev,omitempty"`
	// Specifies the timestamp in micro seconds when 'logicalUsageBytesPrev' was calculated.
	LogicalUsageBytesPrevTimestampUsec NullableInt64 `json:"logicalUsageBytesPrevTimestampUsec,omitempty"`
	// Specifies the timestamp in micro seconds when 'logicalUsageBytes' was calculated.
	LogicalUsageBytesTimestampUsec NullableInt64 `json:"logicalUsageBytesTimestampUsec,omitempty"`
	// Specifies the number of directories.
	NumDirectories NullableInt64 `json:"numDirectories,omitempty"`
	// Specifies the number of directories at a specific time.
	NumDirectoriesPrev NullableInt64 `json:"numDirectoriesPrev,omitempty"`
	// Specifies the number of files.
	NumFiles NullableInt64 `json:"numFiles,omitempty"`
	// Specifies the number of files at a specific time.
	NumFilesPrev NullableInt64 `json:"numFilesPrev,omitempty"`
	// Specifies the number of all protected views.
	ProtectedViews NullableInt64 `json:"protectedViews,omitempty"`
	// Specifies the number of all the views that are replicated from remote clusters.
	ReplicatedInViews NullableInt64 `json:"replicatedInViews,omitempty"`
	// Specifies the number of all the views that are replicated out to remote clusters.
	ReplicatedOutViews NullableInt64 `json:"replicatedOutViews,omitempty"`
	// Specifies the storage consumed of all the views in bytes.
	StorageConsumedBytes NullableInt64 `json:"storageConsumedBytes,omitempty"`
	// Specifies the storage consumed by all the views in bytes at a specific time.
	StorageConsumedBytesPrev NullableInt64 `json:"storageConsumedBytesPrev,omitempty"`
	// Specifies the timestamp in micro seconds when 'storageConsumedBytesPrev' was calculated.
	StorageConsumedBytesPrevTimestampUsec NullableInt64 `json:"storageConsumedBytesPrevTimestampUsec,omitempty"`
	// Specifies the timestamp in micro seconds when 'storageConsumedBytes' was calculated.
	StorageConsumedBytesTimestampUsec NullableInt64 `json:"storageConsumedBytesTimestampUsec,omitempty"`
	// Specifies the number of all the views.
	TotalViews NullableInt64 `json:"totalViews,omitempty"`
	// Specifies the entity id of all the views.
	ViewEntityId NullableString `json:"viewEntityId,omitempty"`
}

// NewViewsSummary instantiates a new ViewsSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewsSummary() *ViewsSummary {
	this := ViewsSummary{}
	return &this
}

// NewViewsSummaryWithDefaults instantiates a new ViewsSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewsSummaryWithDefaults() *ViewsSummary {
	this := ViewsSummary{}
	return &this
}

// GetDataWrittenBytes returns the DataWrittenBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetDataWrittenBytes() int64 {
	if o == nil || IsNil(o.DataWrittenBytes.Get()) {
		var ret int64
		return ret
	}
	return *o.DataWrittenBytes.Get()
}

// GetDataWrittenBytesOk returns a tuple with the DataWrittenBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetDataWrittenBytesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DataWrittenBytes.Get(), o.DataWrittenBytes.IsSet()
}

// HasDataWrittenBytes returns a boolean if a field has been set.
func (o *ViewsSummary) HasDataWrittenBytes() bool {
	if o != nil && o.DataWrittenBytes.IsSet() {
		return true
	}

	return false
}

// SetDataWrittenBytes gets a reference to the given NullableInt64 and assigns it to the DataWrittenBytes field.
func (o *ViewsSummary) SetDataWrittenBytes(v int64) {
	o.DataWrittenBytes.Set(&v)
}
// SetDataWrittenBytesNil sets the value for DataWrittenBytes to be an explicit nil
func (o *ViewsSummary) SetDataWrittenBytesNil() {
	o.DataWrittenBytes.Set(nil)
}

// UnsetDataWrittenBytes ensures that no value is present for DataWrittenBytes, not even an explicit nil
func (o *ViewsSummary) UnsetDataWrittenBytes() {
	o.DataWrittenBytes.Unset()
}

// GetDataWrittenBytesPrev returns the DataWrittenBytesPrev field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetDataWrittenBytesPrev() int64 {
	if o == nil || IsNil(o.DataWrittenBytesPrev.Get()) {
		var ret int64
		return ret
	}
	return *o.DataWrittenBytesPrev.Get()
}

// GetDataWrittenBytesPrevOk returns a tuple with the DataWrittenBytesPrev field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetDataWrittenBytesPrevOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DataWrittenBytesPrev.Get(), o.DataWrittenBytesPrev.IsSet()
}

// HasDataWrittenBytesPrev returns a boolean if a field has been set.
func (o *ViewsSummary) HasDataWrittenBytesPrev() bool {
	if o != nil && o.DataWrittenBytesPrev.IsSet() {
		return true
	}

	return false
}

// SetDataWrittenBytesPrev gets a reference to the given NullableInt64 and assigns it to the DataWrittenBytesPrev field.
func (o *ViewsSummary) SetDataWrittenBytesPrev(v int64) {
	o.DataWrittenBytesPrev.Set(&v)
}
// SetDataWrittenBytesPrevNil sets the value for DataWrittenBytesPrev to be an explicit nil
func (o *ViewsSummary) SetDataWrittenBytesPrevNil() {
	o.DataWrittenBytesPrev.Set(nil)
}

// UnsetDataWrittenBytesPrev ensures that no value is present for DataWrittenBytesPrev, not even an explicit nil
func (o *ViewsSummary) UnsetDataWrittenBytesPrev() {
	o.DataWrittenBytesPrev.Unset()
}

// GetDataWrittenBytesPrevTimestampUsec returns the DataWrittenBytesPrevTimestampUsec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetDataWrittenBytesPrevTimestampUsec() int64 {
	if o == nil || IsNil(o.DataWrittenBytesPrevTimestampUsec.Get()) {
		var ret int64
		return ret
	}
	return *o.DataWrittenBytesPrevTimestampUsec.Get()
}

// GetDataWrittenBytesPrevTimestampUsecOk returns a tuple with the DataWrittenBytesPrevTimestampUsec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetDataWrittenBytesPrevTimestampUsecOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DataWrittenBytesPrevTimestampUsec.Get(), o.DataWrittenBytesPrevTimestampUsec.IsSet()
}

// HasDataWrittenBytesPrevTimestampUsec returns a boolean if a field has been set.
func (o *ViewsSummary) HasDataWrittenBytesPrevTimestampUsec() bool {
	if o != nil && o.DataWrittenBytesPrevTimestampUsec.IsSet() {
		return true
	}

	return false
}

// SetDataWrittenBytesPrevTimestampUsec gets a reference to the given NullableInt64 and assigns it to the DataWrittenBytesPrevTimestampUsec field.
func (o *ViewsSummary) SetDataWrittenBytesPrevTimestampUsec(v int64) {
	o.DataWrittenBytesPrevTimestampUsec.Set(&v)
}
// SetDataWrittenBytesPrevTimestampUsecNil sets the value for DataWrittenBytesPrevTimestampUsec to be an explicit nil
func (o *ViewsSummary) SetDataWrittenBytesPrevTimestampUsecNil() {
	o.DataWrittenBytesPrevTimestampUsec.Set(nil)
}

// UnsetDataWrittenBytesPrevTimestampUsec ensures that no value is present for DataWrittenBytesPrevTimestampUsec, not even an explicit nil
func (o *ViewsSummary) UnsetDataWrittenBytesPrevTimestampUsec() {
	o.DataWrittenBytesPrevTimestampUsec.Unset()
}

// GetDataWrittenBytesTimestampUsec returns the DataWrittenBytesTimestampUsec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetDataWrittenBytesTimestampUsec() int64 {
	if o == nil || IsNil(o.DataWrittenBytesTimestampUsec.Get()) {
		var ret int64
		return ret
	}
	return *o.DataWrittenBytesTimestampUsec.Get()
}

// GetDataWrittenBytesTimestampUsecOk returns a tuple with the DataWrittenBytesTimestampUsec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetDataWrittenBytesTimestampUsecOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DataWrittenBytesTimestampUsec.Get(), o.DataWrittenBytesTimestampUsec.IsSet()
}

// HasDataWrittenBytesTimestampUsec returns a boolean if a field has been set.
func (o *ViewsSummary) HasDataWrittenBytesTimestampUsec() bool {
	if o != nil && o.DataWrittenBytesTimestampUsec.IsSet() {
		return true
	}

	return false
}

// SetDataWrittenBytesTimestampUsec gets a reference to the given NullableInt64 and assigns it to the DataWrittenBytesTimestampUsec field.
func (o *ViewsSummary) SetDataWrittenBytesTimestampUsec(v int64) {
	o.DataWrittenBytesTimestampUsec.Set(&v)
}
// SetDataWrittenBytesTimestampUsecNil sets the value for DataWrittenBytesTimestampUsec to be an explicit nil
func (o *ViewsSummary) SetDataWrittenBytesTimestampUsecNil() {
	o.DataWrittenBytesTimestampUsec.Set(nil)
}

// UnsetDataWrittenBytesTimestampUsec ensures that no value is present for DataWrittenBytesTimestampUsec, not even an explicit nil
func (o *ViewsSummary) UnsetDataWrittenBytesTimestampUsec() {
	o.DataWrittenBytesTimestampUsec.Unset()
}

// GetLocalTierResiliencyImpactBytes returns the LocalTierResiliencyImpactBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetLocalTierResiliencyImpactBytes() int64 {
	if o == nil || IsNil(o.LocalTierResiliencyImpactBytes.Get()) {
		var ret int64
		return ret
	}
	return *o.LocalTierResiliencyImpactBytes.Get()
}

// GetLocalTierResiliencyImpactBytesOk returns a tuple with the LocalTierResiliencyImpactBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetLocalTierResiliencyImpactBytesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalTierResiliencyImpactBytes.Get(), o.LocalTierResiliencyImpactBytes.IsSet()
}

// HasLocalTierResiliencyImpactBytes returns a boolean if a field has been set.
func (o *ViewsSummary) HasLocalTierResiliencyImpactBytes() bool {
	if o != nil && o.LocalTierResiliencyImpactBytes.IsSet() {
		return true
	}

	return false
}

// SetLocalTierResiliencyImpactBytes gets a reference to the given NullableInt64 and assigns it to the LocalTierResiliencyImpactBytes field.
func (o *ViewsSummary) SetLocalTierResiliencyImpactBytes(v int64) {
	o.LocalTierResiliencyImpactBytes.Set(&v)
}
// SetLocalTierResiliencyImpactBytesNil sets the value for LocalTierResiliencyImpactBytes to be an explicit nil
func (o *ViewsSummary) SetLocalTierResiliencyImpactBytesNil() {
	o.LocalTierResiliencyImpactBytes.Set(nil)
}

// UnsetLocalTierResiliencyImpactBytes ensures that no value is present for LocalTierResiliencyImpactBytes, not even an explicit nil
func (o *ViewsSummary) UnsetLocalTierResiliencyImpactBytes() {
	o.LocalTierResiliencyImpactBytes.Unset()
}

// GetLocalTierResiliencyImpactBytesPrev returns the LocalTierResiliencyImpactBytesPrev field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetLocalTierResiliencyImpactBytesPrev() int64 {
	if o == nil || IsNil(o.LocalTierResiliencyImpactBytesPrev.Get()) {
		var ret int64
		return ret
	}
	return *o.LocalTierResiliencyImpactBytesPrev.Get()
}

// GetLocalTierResiliencyImpactBytesPrevOk returns a tuple with the LocalTierResiliencyImpactBytesPrev field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetLocalTierResiliencyImpactBytesPrevOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalTierResiliencyImpactBytesPrev.Get(), o.LocalTierResiliencyImpactBytesPrev.IsSet()
}

// HasLocalTierResiliencyImpactBytesPrev returns a boolean if a field has been set.
func (o *ViewsSummary) HasLocalTierResiliencyImpactBytesPrev() bool {
	if o != nil && o.LocalTierResiliencyImpactBytesPrev.IsSet() {
		return true
	}

	return false
}

// SetLocalTierResiliencyImpactBytesPrev gets a reference to the given NullableInt64 and assigns it to the LocalTierResiliencyImpactBytesPrev field.
func (o *ViewsSummary) SetLocalTierResiliencyImpactBytesPrev(v int64) {
	o.LocalTierResiliencyImpactBytesPrev.Set(&v)
}
// SetLocalTierResiliencyImpactBytesPrevNil sets the value for LocalTierResiliencyImpactBytesPrev to be an explicit nil
func (o *ViewsSummary) SetLocalTierResiliencyImpactBytesPrevNil() {
	o.LocalTierResiliencyImpactBytesPrev.Set(nil)
}

// UnsetLocalTierResiliencyImpactBytesPrev ensures that no value is present for LocalTierResiliencyImpactBytesPrev, not even an explicit nil
func (o *ViewsSummary) UnsetLocalTierResiliencyImpactBytesPrev() {
	o.LocalTierResiliencyImpactBytesPrev.Unset()
}

// GetLocalTierResiliencyImpactBytesPrevTimestampUsec returns the LocalTierResiliencyImpactBytesPrevTimestampUsec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetLocalTierResiliencyImpactBytesPrevTimestampUsec() int64 {
	if o == nil || IsNil(o.LocalTierResiliencyImpactBytesPrevTimestampUsec.Get()) {
		var ret int64
		return ret
	}
	return *o.LocalTierResiliencyImpactBytesPrevTimestampUsec.Get()
}

// GetLocalTierResiliencyImpactBytesPrevTimestampUsecOk returns a tuple with the LocalTierResiliencyImpactBytesPrevTimestampUsec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetLocalTierResiliencyImpactBytesPrevTimestampUsecOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalTierResiliencyImpactBytesPrevTimestampUsec.Get(), o.LocalTierResiliencyImpactBytesPrevTimestampUsec.IsSet()
}

// HasLocalTierResiliencyImpactBytesPrevTimestampUsec returns a boolean if a field has been set.
func (o *ViewsSummary) HasLocalTierResiliencyImpactBytesPrevTimestampUsec() bool {
	if o != nil && o.LocalTierResiliencyImpactBytesPrevTimestampUsec.IsSet() {
		return true
	}

	return false
}

// SetLocalTierResiliencyImpactBytesPrevTimestampUsec gets a reference to the given NullableInt64 and assigns it to the LocalTierResiliencyImpactBytesPrevTimestampUsec field.
func (o *ViewsSummary) SetLocalTierResiliencyImpactBytesPrevTimestampUsec(v int64) {
	o.LocalTierResiliencyImpactBytesPrevTimestampUsec.Set(&v)
}
// SetLocalTierResiliencyImpactBytesPrevTimestampUsecNil sets the value for LocalTierResiliencyImpactBytesPrevTimestampUsec to be an explicit nil
func (o *ViewsSummary) SetLocalTierResiliencyImpactBytesPrevTimestampUsecNil() {
	o.LocalTierResiliencyImpactBytesPrevTimestampUsec.Set(nil)
}

// UnsetLocalTierResiliencyImpactBytesPrevTimestampUsec ensures that no value is present for LocalTierResiliencyImpactBytesPrevTimestampUsec, not even an explicit nil
func (o *ViewsSummary) UnsetLocalTierResiliencyImpactBytesPrevTimestampUsec() {
	o.LocalTierResiliencyImpactBytesPrevTimestampUsec.Unset()
}

// GetLocalTierResiliencyImpactBytesTimestampUsec returns the LocalTierResiliencyImpactBytesTimestampUsec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetLocalTierResiliencyImpactBytesTimestampUsec() int64 {
	if o == nil || IsNil(o.LocalTierResiliencyImpactBytesTimestampUsec.Get()) {
		var ret int64
		return ret
	}
	return *o.LocalTierResiliencyImpactBytesTimestampUsec.Get()
}

// GetLocalTierResiliencyImpactBytesTimestampUsecOk returns a tuple with the LocalTierResiliencyImpactBytesTimestampUsec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetLocalTierResiliencyImpactBytesTimestampUsecOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalTierResiliencyImpactBytesTimestampUsec.Get(), o.LocalTierResiliencyImpactBytesTimestampUsec.IsSet()
}

// HasLocalTierResiliencyImpactBytesTimestampUsec returns a boolean if a field has been set.
func (o *ViewsSummary) HasLocalTierResiliencyImpactBytesTimestampUsec() bool {
	if o != nil && o.LocalTierResiliencyImpactBytesTimestampUsec.IsSet() {
		return true
	}

	return false
}

// SetLocalTierResiliencyImpactBytesTimestampUsec gets a reference to the given NullableInt64 and assigns it to the LocalTierResiliencyImpactBytesTimestampUsec field.
func (o *ViewsSummary) SetLocalTierResiliencyImpactBytesTimestampUsec(v int64) {
	o.LocalTierResiliencyImpactBytesTimestampUsec.Set(&v)
}
// SetLocalTierResiliencyImpactBytesTimestampUsecNil sets the value for LocalTierResiliencyImpactBytesTimestampUsec to be an explicit nil
func (o *ViewsSummary) SetLocalTierResiliencyImpactBytesTimestampUsecNil() {
	o.LocalTierResiliencyImpactBytesTimestampUsec.Set(nil)
}

// UnsetLocalTierResiliencyImpactBytesTimestampUsec ensures that no value is present for LocalTierResiliencyImpactBytesTimestampUsec, not even an explicit nil
func (o *ViewsSummary) UnsetLocalTierResiliencyImpactBytesTimestampUsec() {
	o.LocalTierResiliencyImpactBytesTimestampUsec.Unset()
}

// GetLogicalUsageBytes returns the LogicalUsageBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetLogicalUsageBytes() int64 {
	if o == nil || IsNil(o.LogicalUsageBytes.Get()) {
		var ret int64
		return ret
	}
	return *o.LogicalUsageBytes.Get()
}

// GetLogicalUsageBytesOk returns a tuple with the LogicalUsageBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetLogicalUsageBytesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogicalUsageBytes.Get(), o.LogicalUsageBytes.IsSet()
}

// HasLogicalUsageBytes returns a boolean if a field has been set.
func (o *ViewsSummary) HasLogicalUsageBytes() bool {
	if o != nil && o.LogicalUsageBytes.IsSet() {
		return true
	}

	return false
}

// SetLogicalUsageBytes gets a reference to the given NullableInt64 and assigns it to the LogicalUsageBytes field.
func (o *ViewsSummary) SetLogicalUsageBytes(v int64) {
	o.LogicalUsageBytes.Set(&v)
}
// SetLogicalUsageBytesNil sets the value for LogicalUsageBytes to be an explicit nil
func (o *ViewsSummary) SetLogicalUsageBytesNil() {
	o.LogicalUsageBytes.Set(nil)
}

// UnsetLogicalUsageBytes ensures that no value is present for LogicalUsageBytes, not even an explicit nil
func (o *ViewsSummary) UnsetLogicalUsageBytes() {
	o.LogicalUsageBytes.Unset()
}

// GetLogicalUsageBytesPrev returns the LogicalUsageBytesPrev field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetLogicalUsageBytesPrev() int64 {
	if o == nil || IsNil(o.LogicalUsageBytesPrev.Get()) {
		var ret int64
		return ret
	}
	return *o.LogicalUsageBytesPrev.Get()
}

// GetLogicalUsageBytesPrevOk returns a tuple with the LogicalUsageBytesPrev field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetLogicalUsageBytesPrevOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogicalUsageBytesPrev.Get(), o.LogicalUsageBytesPrev.IsSet()
}

// HasLogicalUsageBytesPrev returns a boolean if a field has been set.
func (o *ViewsSummary) HasLogicalUsageBytesPrev() bool {
	if o != nil && o.LogicalUsageBytesPrev.IsSet() {
		return true
	}

	return false
}

// SetLogicalUsageBytesPrev gets a reference to the given NullableInt64 and assigns it to the LogicalUsageBytesPrev field.
func (o *ViewsSummary) SetLogicalUsageBytesPrev(v int64) {
	o.LogicalUsageBytesPrev.Set(&v)
}
// SetLogicalUsageBytesPrevNil sets the value for LogicalUsageBytesPrev to be an explicit nil
func (o *ViewsSummary) SetLogicalUsageBytesPrevNil() {
	o.LogicalUsageBytesPrev.Set(nil)
}

// UnsetLogicalUsageBytesPrev ensures that no value is present for LogicalUsageBytesPrev, not even an explicit nil
func (o *ViewsSummary) UnsetLogicalUsageBytesPrev() {
	o.LogicalUsageBytesPrev.Unset()
}

// GetLogicalUsageBytesPrevTimestampUsec returns the LogicalUsageBytesPrevTimestampUsec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetLogicalUsageBytesPrevTimestampUsec() int64 {
	if o == nil || IsNil(o.LogicalUsageBytesPrevTimestampUsec.Get()) {
		var ret int64
		return ret
	}
	return *o.LogicalUsageBytesPrevTimestampUsec.Get()
}

// GetLogicalUsageBytesPrevTimestampUsecOk returns a tuple with the LogicalUsageBytesPrevTimestampUsec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetLogicalUsageBytesPrevTimestampUsecOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogicalUsageBytesPrevTimestampUsec.Get(), o.LogicalUsageBytesPrevTimestampUsec.IsSet()
}

// HasLogicalUsageBytesPrevTimestampUsec returns a boolean if a field has been set.
func (o *ViewsSummary) HasLogicalUsageBytesPrevTimestampUsec() bool {
	if o != nil && o.LogicalUsageBytesPrevTimestampUsec.IsSet() {
		return true
	}

	return false
}

// SetLogicalUsageBytesPrevTimestampUsec gets a reference to the given NullableInt64 and assigns it to the LogicalUsageBytesPrevTimestampUsec field.
func (o *ViewsSummary) SetLogicalUsageBytesPrevTimestampUsec(v int64) {
	o.LogicalUsageBytesPrevTimestampUsec.Set(&v)
}
// SetLogicalUsageBytesPrevTimestampUsecNil sets the value for LogicalUsageBytesPrevTimestampUsec to be an explicit nil
func (o *ViewsSummary) SetLogicalUsageBytesPrevTimestampUsecNil() {
	o.LogicalUsageBytesPrevTimestampUsec.Set(nil)
}

// UnsetLogicalUsageBytesPrevTimestampUsec ensures that no value is present for LogicalUsageBytesPrevTimestampUsec, not even an explicit nil
func (o *ViewsSummary) UnsetLogicalUsageBytesPrevTimestampUsec() {
	o.LogicalUsageBytesPrevTimestampUsec.Unset()
}

// GetLogicalUsageBytesTimestampUsec returns the LogicalUsageBytesTimestampUsec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetLogicalUsageBytesTimestampUsec() int64 {
	if o == nil || IsNil(o.LogicalUsageBytesTimestampUsec.Get()) {
		var ret int64
		return ret
	}
	return *o.LogicalUsageBytesTimestampUsec.Get()
}

// GetLogicalUsageBytesTimestampUsecOk returns a tuple with the LogicalUsageBytesTimestampUsec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetLogicalUsageBytesTimestampUsecOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogicalUsageBytesTimestampUsec.Get(), o.LogicalUsageBytesTimestampUsec.IsSet()
}

// HasLogicalUsageBytesTimestampUsec returns a boolean if a field has been set.
func (o *ViewsSummary) HasLogicalUsageBytesTimestampUsec() bool {
	if o != nil && o.LogicalUsageBytesTimestampUsec.IsSet() {
		return true
	}

	return false
}

// SetLogicalUsageBytesTimestampUsec gets a reference to the given NullableInt64 and assigns it to the LogicalUsageBytesTimestampUsec field.
func (o *ViewsSummary) SetLogicalUsageBytesTimestampUsec(v int64) {
	o.LogicalUsageBytesTimestampUsec.Set(&v)
}
// SetLogicalUsageBytesTimestampUsecNil sets the value for LogicalUsageBytesTimestampUsec to be an explicit nil
func (o *ViewsSummary) SetLogicalUsageBytesTimestampUsecNil() {
	o.LogicalUsageBytesTimestampUsec.Set(nil)
}

// UnsetLogicalUsageBytesTimestampUsec ensures that no value is present for LogicalUsageBytesTimestampUsec, not even an explicit nil
func (o *ViewsSummary) UnsetLogicalUsageBytesTimestampUsec() {
	o.LogicalUsageBytesTimestampUsec.Unset()
}

// GetNumDirectories returns the NumDirectories field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetNumDirectories() int64 {
	if o == nil || IsNil(o.NumDirectories.Get()) {
		var ret int64
		return ret
	}
	return *o.NumDirectories.Get()
}

// GetNumDirectoriesOk returns a tuple with the NumDirectories field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetNumDirectoriesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.NumDirectories.Get(), o.NumDirectories.IsSet()
}

// HasNumDirectories returns a boolean if a field has been set.
func (o *ViewsSummary) HasNumDirectories() bool {
	if o != nil && o.NumDirectories.IsSet() {
		return true
	}

	return false
}

// SetNumDirectories gets a reference to the given NullableInt64 and assigns it to the NumDirectories field.
func (o *ViewsSummary) SetNumDirectories(v int64) {
	o.NumDirectories.Set(&v)
}
// SetNumDirectoriesNil sets the value for NumDirectories to be an explicit nil
func (o *ViewsSummary) SetNumDirectoriesNil() {
	o.NumDirectories.Set(nil)
}

// UnsetNumDirectories ensures that no value is present for NumDirectories, not even an explicit nil
func (o *ViewsSummary) UnsetNumDirectories() {
	o.NumDirectories.Unset()
}

// GetNumDirectoriesPrev returns the NumDirectoriesPrev field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetNumDirectoriesPrev() int64 {
	if o == nil || IsNil(o.NumDirectoriesPrev.Get()) {
		var ret int64
		return ret
	}
	return *o.NumDirectoriesPrev.Get()
}

// GetNumDirectoriesPrevOk returns a tuple with the NumDirectoriesPrev field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetNumDirectoriesPrevOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.NumDirectoriesPrev.Get(), o.NumDirectoriesPrev.IsSet()
}

// HasNumDirectoriesPrev returns a boolean if a field has been set.
func (o *ViewsSummary) HasNumDirectoriesPrev() bool {
	if o != nil && o.NumDirectoriesPrev.IsSet() {
		return true
	}

	return false
}

// SetNumDirectoriesPrev gets a reference to the given NullableInt64 and assigns it to the NumDirectoriesPrev field.
func (o *ViewsSummary) SetNumDirectoriesPrev(v int64) {
	o.NumDirectoriesPrev.Set(&v)
}
// SetNumDirectoriesPrevNil sets the value for NumDirectoriesPrev to be an explicit nil
func (o *ViewsSummary) SetNumDirectoriesPrevNil() {
	o.NumDirectoriesPrev.Set(nil)
}

// UnsetNumDirectoriesPrev ensures that no value is present for NumDirectoriesPrev, not even an explicit nil
func (o *ViewsSummary) UnsetNumDirectoriesPrev() {
	o.NumDirectoriesPrev.Unset()
}

// GetNumFiles returns the NumFiles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetNumFiles() int64 {
	if o == nil || IsNil(o.NumFiles.Get()) {
		var ret int64
		return ret
	}
	return *o.NumFiles.Get()
}

// GetNumFilesOk returns a tuple with the NumFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetNumFilesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.NumFiles.Get(), o.NumFiles.IsSet()
}

// HasNumFiles returns a boolean if a field has been set.
func (o *ViewsSummary) HasNumFiles() bool {
	if o != nil && o.NumFiles.IsSet() {
		return true
	}

	return false
}

// SetNumFiles gets a reference to the given NullableInt64 and assigns it to the NumFiles field.
func (o *ViewsSummary) SetNumFiles(v int64) {
	o.NumFiles.Set(&v)
}
// SetNumFilesNil sets the value for NumFiles to be an explicit nil
func (o *ViewsSummary) SetNumFilesNil() {
	o.NumFiles.Set(nil)
}

// UnsetNumFiles ensures that no value is present for NumFiles, not even an explicit nil
func (o *ViewsSummary) UnsetNumFiles() {
	o.NumFiles.Unset()
}

// GetNumFilesPrev returns the NumFilesPrev field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetNumFilesPrev() int64 {
	if o == nil || IsNil(o.NumFilesPrev.Get()) {
		var ret int64
		return ret
	}
	return *o.NumFilesPrev.Get()
}

// GetNumFilesPrevOk returns a tuple with the NumFilesPrev field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetNumFilesPrevOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.NumFilesPrev.Get(), o.NumFilesPrev.IsSet()
}

// HasNumFilesPrev returns a boolean if a field has been set.
func (o *ViewsSummary) HasNumFilesPrev() bool {
	if o != nil && o.NumFilesPrev.IsSet() {
		return true
	}

	return false
}

// SetNumFilesPrev gets a reference to the given NullableInt64 and assigns it to the NumFilesPrev field.
func (o *ViewsSummary) SetNumFilesPrev(v int64) {
	o.NumFilesPrev.Set(&v)
}
// SetNumFilesPrevNil sets the value for NumFilesPrev to be an explicit nil
func (o *ViewsSummary) SetNumFilesPrevNil() {
	o.NumFilesPrev.Set(nil)
}

// UnsetNumFilesPrev ensures that no value is present for NumFilesPrev, not even an explicit nil
func (o *ViewsSummary) UnsetNumFilesPrev() {
	o.NumFilesPrev.Unset()
}

// GetProtectedViews returns the ProtectedViews field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetProtectedViews() int64 {
	if o == nil || IsNil(o.ProtectedViews.Get()) {
		var ret int64
		return ret
	}
	return *o.ProtectedViews.Get()
}

// GetProtectedViewsOk returns a tuple with the ProtectedViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetProtectedViewsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProtectedViews.Get(), o.ProtectedViews.IsSet()
}

// HasProtectedViews returns a boolean if a field has been set.
func (o *ViewsSummary) HasProtectedViews() bool {
	if o != nil && o.ProtectedViews.IsSet() {
		return true
	}

	return false
}

// SetProtectedViews gets a reference to the given NullableInt64 and assigns it to the ProtectedViews field.
func (o *ViewsSummary) SetProtectedViews(v int64) {
	o.ProtectedViews.Set(&v)
}
// SetProtectedViewsNil sets the value for ProtectedViews to be an explicit nil
func (o *ViewsSummary) SetProtectedViewsNil() {
	o.ProtectedViews.Set(nil)
}

// UnsetProtectedViews ensures that no value is present for ProtectedViews, not even an explicit nil
func (o *ViewsSummary) UnsetProtectedViews() {
	o.ProtectedViews.Unset()
}

// GetReplicatedInViews returns the ReplicatedInViews field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetReplicatedInViews() int64 {
	if o == nil || IsNil(o.ReplicatedInViews.Get()) {
		var ret int64
		return ret
	}
	return *o.ReplicatedInViews.Get()
}

// GetReplicatedInViewsOk returns a tuple with the ReplicatedInViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetReplicatedInViewsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReplicatedInViews.Get(), o.ReplicatedInViews.IsSet()
}

// HasReplicatedInViews returns a boolean if a field has been set.
func (o *ViewsSummary) HasReplicatedInViews() bool {
	if o != nil && o.ReplicatedInViews.IsSet() {
		return true
	}

	return false
}

// SetReplicatedInViews gets a reference to the given NullableInt64 and assigns it to the ReplicatedInViews field.
func (o *ViewsSummary) SetReplicatedInViews(v int64) {
	o.ReplicatedInViews.Set(&v)
}
// SetReplicatedInViewsNil sets the value for ReplicatedInViews to be an explicit nil
func (o *ViewsSummary) SetReplicatedInViewsNil() {
	o.ReplicatedInViews.Set(nil)
}

// UnsetReplicatedInViews ensures that no value is present for ReplicatedInViews, not even an explicit nil
func (o *ViewsSummary) UnsetReplicatedInViews() {
	o.ReplicatedInViews.Unset()
}

// GetReplicatedOutViews returns the ReplicatedOutViews field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetReplicatedOutViews() int64 {
	if o == nil || IsNil(o.ReplicatedOutViews.Get()) {
		var ret int64
		return ret
	}
	return *o.ReplicatedOutViews.Get()
}

// GetReplicatedOutViewsOk returns a tuple with the ReplicatedOutViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetReplicatedOutViewsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReplicatedOutViews.Get(), o.ReplicatedOutViews.IsSet()
}

// HasReplicatedOutViews returns a boolean if a field has been set.
func (o *ViewsSummary) HasReplicatedOutViews() bool {
	if o != nil && o.ReplicatedOutViews.IsSet() {
		return true
	}

	return false
}

// SetReplicatedOutViews gets a reference to the given NullableInt64 and assigns it to the ReplicatedOutViews field.
func (o *ViewsSummary) SetReplicatedOutViews(v int64) {
	o.ReplicatedOutViews.Set(&v)
}
// SetReplicatedOutViewsNil sets the value for ReplicatedOutViews to be an explicit nil
func (o *ViewsSummary) SetReplicatedOutViewsNil() {
	o.ReplicatedOutViews.Set(nil)
}

// UnsetReplicatedOutViews ensures that no value is present for ReplicatedOutViews, not even an explicit nil
func (o *ViewsSummary) UnsetReplicatedOutViews() {
	o.ReplicatedOutViews.Unset()
}

// GetStorageConsumedBytes returns the StorageConsumedBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetStorageConsumedBytes() int64 {
	if o == nil || IsNil(o.StorageConsumedBytes.Get()) {
		var ret int64
		return ret
	}
	return *o.StorageConsumedBytes.Get()
}

// GetStorageConsumedBytesOk returns a tuple with the StorageConsumedBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetStorageConsumedBytesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageConsumedBytes.Get(), o.StorageConsumedBytes.IsSet()
}

// HasStorageConsumedBytes returns a boolean if a field has been set.
func (o *ViewsSummary) HasStorageConsumedBytes() bool {
	if o != nil && o.StorageConsumedBytes.IsSet() {
		return true
	}

	return false
}

// SetStorageConsumedBytes gets a reference to the given NullableInt64 and assigns it to the StorageConsumedBytes field.
func (o *ViewsSummary) SetStorageConsumedBytes(v int64) {
	o.StorageConsumedBytes.Set(&v)
}
// SetStorageConsumedBytesNil sets the value for StorageConsumedBytes to be an explicit nil
func (o *ViewsSummary) SetStorageConsumedBytesNil() {
	o.StorageConsumedBytes.Set(nil)
}

// UnsetStorageConsumedBytes ensures that no value is present for StorageConsumedBytes, not even an explicit nil
func (o *ViewsSummary) UnsetStorageConsumedBytes() {
	o.StorageConsumedBytes.Unset()
}

// GetStorageConsumedBytesPrev returns the StorageConsumedBytesPrev field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetStorageConsumedBytesPrev() int64 {
	if o == nil || IsNil(o.StorageConsumedBytesPrev.Get()) {
		var ret int64
		return ret
	}
	return *o.StorageConsumedBytesPrev.Get()
}

// GetStorageConsumedBytesPrevOk returns a tuple with the StorageConsumedBytesPrev field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetStorageConsumedBytesPrevOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageConsumedBytesPrev.Get(), o.StorageConsumedBytesPrev.IsSet()
}

// HasStorageConsumedBytesPrev returns a boolean if a field has been set.
func (o *ViewsSummary) HasStorageConsumedBytesPrev() bool {
	if o != nil && o.StorageConsumedBytesPrev.IsSet() {
		return true
	}

	return false
}

// SetStorageConsumedBytesPrev gets a reference to the given NullableInt64 and assigns it to the StorageConsumedBytesPrev field.
func (o *ViewsSummary) SetStorageConsumedBytesPrev(v int64) {
	o.StorageConsumedBytesPrev.Set(&v)
}
// SetStorageConsumedBytesPrevNil sets the value for StorageConsumedBytesPrev to be an explicit nil
func (o *ViewsSummary) SetStorageConsumedBytesPrevNil() {
	o.StorageConsumedBytesPrev.Set(nil)
}

// UnsetStorageConsumedBytesPrev ensures that no value is present for StorageConsumedBytesPrev, not even an explicit nil
func (o *ViewsSummary) UnsetStorageConsumedBytesPrev() {
	o.StorageConsumedBytesPrev.Unset()
}

// GetStorageConsumedBytesPrevTimestampUsec returns the StorageConsumedBytesPrevTimestampUsec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetStorageConsumedBytesPrevTimestampUsec() int64 {
	if o == nil || IsNil(o.StorageConsumedBytesPrevTimestampUsec.Get()) {
		var ret int64
		return ret
	}
	return *o.StorageConsumedBytesPrevTimestampUsec.Get()
}

// GetStorageConsumedBytesPrevTimestampUsecOk returns a tuple with the StorageConsumedBytesPrevTimestampUsec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetStorageConsumedBytesPrevTimestampUsecOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageConsumedBytesPrevTimestampUsec.Get(), o.StorageConsumedBytesPrevTimestampUsec.IsSet()
}

// HasStorageConsumedBytesPrevTimestampUsec returns a boolean if a field has been set.
func (o *ViewsSummary) HasStorageConsumedBytesPrevTimestampUsec() bool {
	if o != nil && o.StorageConsumedBytesPrevTimestampUsec.IsSet() {
		return true
	}

	return false
}

// SetStorageConsumedBytesPrevTimestampUsec gets a reference to the given NullableInt64 and assigns it to the StorageConsumedBytesPrevTimestampUsec field.
func (o *ViewsSummary) SetStorageConsumedBytesPrevTimestampUsec(v int64) {
	o.StorageConsumedBytesPrevTimestampUsec.Set(&v)
}
// SetStorageConsumedBytesPrevTimestampUsecNil sets the value for StorageConsumedBytesPrevTimestampUsec to be an explicit nil
func (o *ViewsSummary) SetStorageConsumedBytesPrevTimestampUsecNil() {
	o.StorageConsumedBytesPrevTimestampUsec.Set(nil)
}

// UnsetStorageConsumedBytesPrevTimestampUsec ensures that no value is present for StorageConsumedBytesPrevTimestampUsec, not even an explicit nil
func (o *ViewsSummary) UnsetStorageConsumedBytesPrevTimestampUsec() {
	o.StorageConsumedBytesPrevTimestampUsec.Unset()
}

// GetStorageConsumedBytesTimestampUsec returns the StorageConsumedBytesTimestampUsec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetStorageConsumedBytesTimestampUsec() int64 {
	if o == nil || IsNil(o.StorageConsumedBytesTimestampUsec.Get()) {
		var ret int64
		return ret
	}
	return *o.StorageConsumedBytesTimestampUsec.Get()
}

// GetStorageConsumedBytesTimestampUsecOk returns a tuple with the StorageConsumedBytesTimestampUsec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetStorageConsumedBytesTimestampUsecOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageConsumedBytesTimestampUsec.Get(), o.StorageConsumedBytesTimestampUsec.IsSet()
}

// HasStorageConsumedBytesTimestampUsec returns a boolean if a field has been set.
func (o *ViewsSummary) HasStorageConsumedBytesTimestampUsec() bool {
	if o != nil && o.StorageConsumedBytesTimestampUsec.IsSet() {
		return true
	}

	return false
}

// SetStorageConsumedBytesTimestampUsec gets a reference to the given NullableInt64 and assigns it to the StorageConsumedBytesTimestampUsec field.
func (o *ViewsSummary) SetStorageConsumedBytesTimestampUsec(v int64) {
	o.StorageConsumedBytesTimestampUsec.Set(&v)
}
// SetStorageConsumedBytesTimestampUsecNil sets the value for StorageConsumedBytesTimestampUsec to be an explicit nil
func (o *ViewsSummary) SetStorageConsumedBytesTimestampUsecNil() {
	o.StorageConsumedBytesTimestampUsec.Set(nil)
}

// UnsetStorageConsumedBytesTimestampUsec ensures that no value is present for StorageConsumedBytesTimestampUsec, not even an explicit nil
func (o *ViewsSummary) UnsetStorageConsumedBytesTimestampUsec() {
	o.StorageConsumedBytesTimestampUsec.Unset()
}

// GetTotalViews returns the TotalViews field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetTotalViews() int64 {
	if o == nil || IsNil(o.TotalViews.Get()) {
		var ret int64
		return ret
	}
	return *o.TotalViews.Get()
}

// GetTotalViewsOk returns a tuple with the TotalViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetTotalViewsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalViews.Get(), o.TotalViews.IsSet()
}

// HasTotalViews returns a boolean if a field has been set.
func (o *ViewsSummary) HasTotalViews() bool {
	if o != nil && o.TotalViews.IsSet() {
		return true
	}

	return false
}

// SetTotalViews gets a reference to the given NullableInt64 and assigns it to the TotalViews field.
func (o *ViewsSummary) SetTotalViews(v int64) {
	o.TotalViews.Set(&v)
}
// SetTotalViewsNil sets the value for TotalViews to be an explicit nil
func (o *ViewsSummary) SetTotalViewsNil() {
	o.TotalViews.Set(nil)
}

// UnsetTotalViews ensures that no value is present for TotalViews, not even an explicit nil
func (o *ViewsSummary) UnsetTotalViews() {
	o.TotalViews.Unset()
}

// GetViewEntityId returns the ViewEntityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewsSummary) GetViewEntityId() string {
	if o == nil || IsNil(o.ViewEntityId.Get()) {
		var ret string
		return ret
	}
	return *o.ViewEntityId.Get()
}

// GetViewEntityIdOk returns a tuple with the ViewEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewsSummary) GetViewEntityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ViewEntityId.Get(), o.ViewEntityId.IsSet()
}

// HasViewEntityId returns a boolean if a field has been set.
func (o *ViewsSummary) HasViewEntityId() bool {
	if o != nil && o.ViewEntityId.IsSet() {
		return true
	}

	return false
}

// SetViewEntityId gets a reference to the given NullableString and assigns it to the ViewEntityId field.
func (o *ViewsSummary) SetViewEntityId(v string) {
	o.ViewEntityId.Set(&v)
}
// SetViewEntityIdNil sets the value for ViewEntityId to be an explicit nil
func (o *ViewsSummary) SetViewEntityIdNil() {
	o.ViewEntityId.Set(nil)
}

// UnsetViewEntityId ensures that no value is present for ViewEntityId, not even an explicit nil
func (o *ViewsSummary) UnsetViewEntityId() {
	o.ViewEntityId.Unset()
}

func (o ViewsSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ViewsSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DataWrittenBytes.IsSet() {
		toSerialize["dataWrittenBytes"] = o.DataWrittenBytes.Get()
	}
	if o.DataWrittenBytesPrev.IsSet() {
		toSerialize["dataWrittenBytesPrev"] = o.DataWrittenBytesPrev.Get()
	}
	if o.DataWrittenBytesPrevTimestampUsec.IsSet() {
		toSerialize["dataWrittenBytesPrevTimestampUsec"] = o.DataWrittenBytesPrevTimestampUsec.Get()
	}
	if o.DataWrittenBytesTimestampUsec.IsSet() {
		toSerialize["dataWrittenBytesTimestampUsec"] = o.DataWrittenBytesTimestampUsec.Get()
	}
	if o.LocalTierResiliencyImpactBytes.IsSet() {
		toSerialize["localTierResiliencyImpactBytes"] = o.LocalTierResiliencyImpactBytes.Get()
	}
	if o.LocalTierResiliencyImpactBytesPrev.IsSet() {
		toSerialize["localTierResiliencyImpactBytesPrev"] = o.LocalTierResiliencyImpactBytesPrev.Get()
	}
	if o.LocalTierResiliencyImpactBytesPrevTimestampUsec.IsSet() {
		toSerialize["localTierResiliencyImpactBytesPrevTimestampUsec"] = o.LocalTierResiliencyImpactBytesPrevTimestampUsec.Get()
	}
	if o.LocalTierResiliencyImpactBytesTimestampUsec.IsSet() {
		toSerialize["localTierResiliencyImpactBytesTimestampUsec"] = o.LocalTierResiliencyImpactBytesTimestampUsec.Get()
	}
	if o.LogicalUsageBytes.IsSet() {
		toSerialize["logicalUsageBytes"] = o.LogicalUsageBytes.Get()
	}
	if o.LogicalUsageBytesPrev.IsSet() {
		toSerialize["logicalUsageBytesPrev"] = o.LogicalUsageBytesPrev.Get()
	}
	if o.LogicalUsageBytesPrevTimestampUsec.IsSet() {
		toSerialize["logicalUsageBytesPrevTimestampUsec"] = o.LogicalUsageBytesPrevTimestampUsec.Get()
	}
	if o.LogicalUsageBytesTimestampUsec.IsSet() {
		toSerialize["logicalUsageBytesTimestampUsec"] = o.LogicalUsageBytesTimestampUsec.Get()
	}
	if o.NumDirectories.IsSet() {
		toSerialize["numDirectories"] = o.NumDirectories.Get()
	}
	if o.NumDirectoriesPrev.IsSet() {
		toSerialize["numDirectoriesPrev"] = o.NumDirectoriesPrev.Get()
	}
	if o.NumFiles.IsSet() {
		toSerialize["numFiles"] = o.NumFiles.Get()
	}
	if o.NumFilesPrev.IsSet() {
		toSerialize["numFilesPrev"] = o.NumFilesPrev.Get()
	}
	if o.ProtectedViews.IsSet() {
		toSerialize["protectedViews"] = o.ProtectedViews.Get()
	}
	if o.ReplicatedInViews.IsSet() {
		toSerialize["replicatedInViews"] = o.ReplicatedInViews.Get()
	}
	if o.ReplicatedOutViews.IsSet() {
		toSerialize["replicatedOutViews"] = o.ReplicatedOutViews.Get()
	}
	if o.StorageConsumedBytes.IsSet() {
		toSerialize["storageConsumedBytes"] = o.StorageConsumedBytes.Get()
	}
	if o.StorageConsumedBytesPrev.IsSet() {
		toSerialize["storageConsumedBytesPrev"] = o.StorageConsumedBytesPrev.Get()
	}
	if o.StorageConsumedBytesPrevTimestampUsec.IsSet() {
		toSerialize["storageConsumedBytesPrevTimestampUsec"] = o.StorageConsumedBytesPrevTimestampUsec.Get()
	}
	if o.StorageConsumedBytesTimestampUsec.IsSet() {
		toSerialize["storageConsumedBytesTimestampUsec"] = o.StorageConsumedBytesTimestampUsec.Get()
	}
	if o.TotalViews.IsSet() {
		toSerialize["totalViews"] = o.TotalViews.Get()
	}
	if o.ViewEntityId.IsSet() {
		toSerialize["viewEntityId"] = o.ViewEntityId.Get()
	}
	return toSerialize, nil
}

type NullableViewsSummary struct {
	value *ViewsSummary
	isSet bool
}

func (v NullableViewsSummary) Get() *ViewsSummary {
	return v.value
}

func (v *NullableViewsSummary) Set(val *ViewsSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableViewsSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableViewsSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewsSummary(val *ViewsSummary) *NullableViewsSummary {
	return &NullableViewsSummary{value: val, isSet: true}
}

func (v NullableViewsSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewsSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


