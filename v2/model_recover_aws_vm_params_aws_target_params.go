/*
Cohesity REST API

Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the RecoverAwsVmParamsAwsTargetParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecoverAwsVmParamsAwsTargetParams{}

// RecoverAwsVmParamsAwsTargetParams Specifies the params for recovering to an AWS target.
type RecoverAwsVmParamsAwsTargetParams struct {
	// Specifies whether to continue recovering other vms if one of vms failed to recover. Default value is false.
	ContinueOnError NullableBool `json:"continueOnError,omitempty"`
	// Specifies the custom tags that need to be present on on every temporary and permanent entity that this job creates.
	CustomTags []SimpleTags `json:"customTags,omitempty"`
	FleetConfig NullableAwsTargetParamsForRecoverVmFleetConfig `json:"fleetConfig,omitempty"`
	// Specifies whether to power on vms after recovery. If not specified, or false, recovered vms will be in powered off state.
	PowerOnVms NullableBool `json:"powerOnVms,omitempty"`
	RecoveryTargetConfig NullableAwsTargetParamsForRecoverVmRecoveryTargetConfig `json:"recoveryTargetConfig,omitempty"`
	RenameRecoveredVmsParams NullableAcropolisTargetParamsForRecoverVmRenameRecoveredVmsParams `json:"renameRecoveredVmsParams,omitempty"`
}

// NewRecoverAwsVmParamsAwsTargetParams instantiates a new RecoverAwsVmParamsAwsTargetParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverAwsVmParamsAwsTargetParams() *RecoverAwsVmParamsAwsTargetParams {
	this := RecoverAwsVmParamsAwsTargetParams{}
	return &this
}

// NewRecoverAwsVmParamsAwsTargetParamsWithDefaults instantiates a new RecoverAwsVmParamsAwsTargetParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverAwsVmParamsAwsTargetParamsWithDefaults() *RecoverAwsVmParamsAwsTargetParams {
	this := RecoverAwsVmParamsAwsTargetParams{}
	return &this
}

// GetContinueOnError returns the ContinueOnError field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverAwsVmParamsAwsTargetParams) GetContinueOnError() bool {
	if o == nil || IsNil(o.ContinueOnError.Get()) {
		var ret bool
		return ret
	}
	return *o.ContinueOnError.Get()
}

// GetContinueOnErrorOk returns a tuple with the ContinueOnError field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAwsVmParamsAwsTargetParams) GetContinueOnErrorOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContinueOnError.Get(), o.ContinueOnError.IsSet()
}

// HasContinueOnError returns a boolean if a field has been set.
func (o *RecoverAwsVmParamsAwsTargetParams) HasContinueOnError() bool {
	if o != nil && o.ContinueOnError.IsSet() {
		return true
	}

	return false
}

// SetContinueOnError gets a reference to the given NullableBool and assigns it to the ContinueOnError field.
func (o *RecoverAwsVmParamsAwsTargetParams) SetContinueOnError(v bool) {
	o.ContinueOnError.Set(&v)
}
// SetContinueOnErrorNil sets the value for ContinueOnError to be an explicit nil
func (o *RecoverAwsVmParamsAwsTargetParams) SetContinueOnErrorNil() {
	o.ContinueOnError.Set(nil)
}

// UnsetContinueOnError ensures that no value is present for ContinueOnError, not even an explicit nil
func (o *RecoverAwsVmParamsAwsTargetParams) UnsetContinueOnError() {
	o.ContinueOnError.Unset()
}

// GetCustomTags returns the CustomTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverAwsVmParamsAwsTargetParams) GetCustomTags() []SimpleTags {
	if o == nil {
		var ret []SimpleTags
		return ret
	}
	return o.CustomTags
}

// GetCustomTagsOk returns a tuple with the CustomTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAwsVmParamsAwsTargetParams) GetCustomTagsOk() ([]SimpleTags, bool) {
	if o == nil || IsNil(o.CustomTags) {
		return nil, false
	}
	return o.CustomTags, true
}

// HasCustomTags returns a boolean if a field has been set.
func (o *RecoverAwsVmParamsAwsTargetParams) HasCustomTags() bool {
	if o != nil && !IsNil(o.CustomTags) {
		return true
	}

	return false
}

// SetCustomTags gets a reference to the given []SimpleTags and assigns it to the CustomTags field.
func (o *RecoverAwsVmParamsAwsTargetParams) SetCustomTags(v []SimpleTags) {
	o.CustomTags = v
}

// GetFleetConfig returns the FleetConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverAwsVmParamsAwsTargetParams) GetFleetConfig() AwsTargetParamsForRecoverVmFleetConfig {
	if o == nil || IsNil(o.FleetConfig.Get()) {
		var ret AwsTargetParamsForRecoverVmFleetConfig
		return ret
	}
	return *o.FleetConfig.Get()
}

// GetFleetConfigOk returns a tuple with the FleetConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAwsVmParamsAwsTargetParams) GetFleetConfigOk() (*AwsTargetParamsForRecoverVmFleetConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.FleetConfig.Get(), o.FleetConfig.IsSet()
}

// HasFleetConfig returns a boolean if a field has been set.
func (o *RecoverAwsVmParamsAwsTargetParams) HasFleetConfig() bool {
	if o != nil && o.FleetConfig.IsSet() {
		return true
	}

	return false
}

// SetFleetConfig gets a reference to the given NullableAwsTargetParamsForRecoverVmFleetConfig and assigns it to the FleetConfig field.
func (o *RecoverAwsVmParamsAwsTargetParams) SetFleetConfig(v AwsTargetParamsForRecoverVmFleetConfig) {
	o.FleetConfig.Set(&v)
}
// SetFleetConfigNil sets the value for FleetConfig to be an explicit nil
func (o *RecoverAwsVmParamsAwsTargetParams) SetFleetConfigNil() {
	o.FleetConfig.Set(nil)
}

// UnsetFleetConfig ensures that no value is present for FleetConfig, not even an explicit nil
func (o *RecoverAwsVmParamsAwsTargetParams) UnsetFleetConfig() {
	o.FleetConfig.Unset()
}

// GetPowerOnVms returns the PowerOnVms field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverAwsVmParamsAwsTargetParams) GetPowerOnVms() bool {
	if o == nil || IsNil(o.PowerOnVms.Get()) {
		var ret bool
		return ret
	}
	return *o.PowerOnVms.Get()
}

// GetPowerOnVmsOk returns a tuple with the PowerOnVms field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAwsVmParamsAwsTargetParams) GetPowerOnVmsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PowerOnVms.Get(), o.PowerOnVms.IsSet()
}

// HasPowerOnVms returns a boolean if a field has been set.
func (o *RecoverAwsVmParamsAwsTargetParams) HasPowerOnVms() bool {
	if o != nil && o.PowerOnVms.IsSet() {
		return true
	}

	return false
}

// SetPowerOnVms gets a reference to the given NullableBool and assigns it to the PowerOnVms field.
func (o *RecoverAwsVmParamsAwsTargetParams) SetPowerOnVms(v bool) {
	o.PowerOnVms.Set(&v)
}
// SetPowerOnVmsNil sets the value for PowerOnVms to be an explicit nil
func (o *RecoverAwsVmParamsAwsTargetParams) SetPowerOnVmsNil() {
	o.PowerOnVms.Set(nil)
}

// UnsetPowerOnVms ensures that no value is present for PowerOnVms, not even an explicit nil
func (o *RecoverAwsVmParamsAwsTargetParams) UnsetPowerOnVms() {
	o.PowerOnVms.Unset()
}

// GetRecoveryTargetConfig returns the RecoveryTargetConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverAwsVmParamsAwsTargetParams) GetRecoveryTargetConfig() AwsTargetParamsForRecoverVmRecoveryTargetConfig {
	if o == nil || IsNil(o.RecoveryTargetConfig.Get()) {
		var ret AwsTargetParamsForRecoverVmRecoveryTargetConfig
		return ret
	}
	return *o.RecoveryTargetConfig.Get()
}

// GetRecoveryTargetConfigOk returns a tuple with the RecoveryTargetConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAwsVmParamsAwsTargetParams) GetRecoveryTargetConfigOk() (*AwsTargetParamsForRecoverVmRecoveryTargetConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecoveryTargetConfig.Get(), o.RecoveryTargetConfig.IsSet()
}

// HasRecoveryTargetConfig returns a boolean if a field has been set.
func (o *RecoverAwsVmParamsAwsTargetParams) HasRecoveryTargetConfig() bool {
	if o != nil && o.RecoveryTargetConfig.IsSet() {
		return true
	}

	return false
}

// SetRecoveryTargetConfig gets a reference to the given NullableAwsTargetParamsForRecoverVmRecoveryTargetConfig and assigns it to the RecoveryTargetConfig field.
func (o *RecoverAwsVmParamsAwsTargetParams) SetRecoveryTargetConfig(v AwsTargetParamsForRecoverVmRecoveryTargetConfig) {
	o.RecoveryTargetConfig.Set(&v)
}
// SetRecoveryTargetConfigNil sets the value for RecoveryTargetConfig to be an explicit nil
func (o *RecoverAwsVmParamsAwsTargetParams) SetRecoveryTargetConfigNil() {
	o.RecoveryTargetConfig.Set(nil)
}

// UnsetRecoveryTargetConfig ensures that no value is present for RecoveryTargetConfig, not even an explicit nil
func (o *RecoverAwsVmParamsAwsTargetParams) UnsetRecoveryTargetConfig() {
	o.RecoveryTargetConfig.Unset()
}

// GetRenameRecoveredVmsParams returns the RenameRecoveredVmsParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverAwsVmParamsAwsTargetParams) GetRenameRecoveredVmsParams() AcropolisTargetParamsForRecoverVmRenameRecoveredVmsParams {
	if o == nil || IsNil(o.RenameRecoveredVmsParams.Get()) {
		var ret AcropolisTargetParamsForRecoverVmRenameRecoveredVmsParams
		return ret
	}
	return *o.RenameRecoveredVmsParams.Get()
}

// GetRenameRecoveredVmsParamsOk returns a tuple with the RenameRecoveredVmsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAwsVmParamsAwsTargetParams) GetRenameRecoveredVmsParamsOk() (*AcropolisTargetParamsForRecoverVmRenameRecoveredVmsParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.RenameRecoveredVmsParams.Get(), o.RenameRecoveredVmsParams.IsSet()
}

// HasRenameRecoveredVmsParams returns a boolean if a field has been set.
func (o *RecoverAwsVmParamsAwsTargetParams) HasRenameRecoveredVmsParams() bool {
	if o != nil && o.RenameRecoveredVmsParams.IsSet() {
		return true
	}

	return false
}

// SetRenameRecoveredVmsParams gets a reference to the given NullableAcropolisTargetParamsForRecoverVmRenameRecoveredVmsParams and assigns it to the RenameRecoveredVmsParams field.
func (o *RecoverAwsVmParamsAwsTargetParams) SetRenameRecoveredVmsParams(v AcropolisTargetParamsForRecoverVmRenameRecoveredVmsParams) {
	o.RenameRecoveredVmsParams.Set(&v)
}
// SetRenameRecoveredVmsParamsNil sets the value for RenameRecoveredVmsParams to be an explicit nil
func (o *RecoverAwsVmParamsAwsTargetParams) SetRenameRecoveredVmsParamsNil() {
	o.RenameRecoveredVmsParams.Set(nil)
}

// UnsetRenameRecoveredVmsParams ensures that no value is present for RenameRecoveredVmsParams, not even an explicit nil
func (o *RecoverAwsVmParamsAwsTargetParams) UnsetRenameRecoveredVmsParams() {
	o.RenameRecoveredVmsParams.Unset()
}

func (o RecoverAwsVmParamsAwsTargetParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecoverAwsVmParamsAwsTargetParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ContinueOnError.IsSet() {
		toSerialize["continueOnError"] = o.ContinueOnError.Get()
	}
	if o.CustomTags != nil {
		toSerialize["customTags"] = o.CustomTags
	}
	if o.FleetConfig.IsSet() {
		toSerialize["fleetConfig"] = o.FleetConfig.Get()
	}
	if o.PowerOnVms.IsSet() {
		toSerialize["powerOnVms"] = o.PowerOnVms.Get()
	}
	if o.RecoveryTargetConfig.IsSet() {
		toSerialize["recoveryTargetConfig"] = o.RecoveryTargetConfig.Get()
	}
	if o.RenameRecoveredVmsParams.IsSet() {
		toSerialize["renameRecoveredVmsParams"] = o.RenameRecoveredVmsParams.Get()
	}
	return toSerialize, nil
}

type NullableRecoverAwsVmParamsAwsTargetParams struct {
	value *RecoverAwsVmParamsAwsTargetParams
	isSet bool
}

func (v NullableRecoverAwsVmParamsAwsTargetParams) Get() *RecoverAwsVmParamsAwsTargetParams {
	return v.value
}

func (v *NullableRecoverAwsVmParamsAwsTargetParams) Set(val *RecoverAwsVmParamsAwsTargetParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverAwsVmParamsAwsTargetParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverAwsVmParamsAwsTargetParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverAwsVmParamsAwsTargetParams(val *RecoverAwsVmParamsAwsTargetParams) *NullableRecoverAwsVmParamsAwsTargetParams {
	return &NullableRecoverAwsVmParamsAwsTargetParams{value: val, isSet: true}
}

func (v NullableRecoverAwsVmParamsAwsTargetParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverAwsVmParamsAwsTargetParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


