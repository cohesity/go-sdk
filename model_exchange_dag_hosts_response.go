/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ExchangeDagHostsResponse Specifies if the endpoint provided in the request is standalone exchange server or not. If the endpoint is not a standalone exchange server, the list of hosts which belong to the Exchange DAG are returned.
type ExchangeDagHostsResponse struct {
	ExchangeDagProtectionPreference *ExchangeDAGProtectionPreference `json:"exchangeDagProtectionPreference,omitempty"`
	// Specifies the list of exchange hosts that belong to Exchange DAG.
	ExchangeHostInfoList []ExchangeHostInfo `json:"exchangeHostInfoList,omitempty"`
	// Specifies the Unique GUID for the DAG.
	Guid NullableString `json:"guid,omitempty"`
	// Specifies if the endpoint provided in the request is a standlone exchange server or not. exchangeHostInfoList is not populated if it is a standalone exchange server.
	IsStandaloneHost NullableBool `json:"isStandaloneHost,omitempty"`
	// Specifies the display name of the DAG.
	Name NullableString `json:"name,omitempty"`
	// Specifies the Protection Source Id of the Exchange DAG if it is already created.
	ProtectionSourceId NullableInt64 `json:"protectionSourceId,omitempty"`
}

// NewExchangeDagHostsResponse instantiates a new ExchangeDagHostsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExchangeDagHostsResponse() *ExchangeDagHostsResponse {
	this := ExchangeDagHostsResponse{}
	return &this
}

// NewExchangeDagHostsResponseWithDefaults instantiates a new ExchangeDagHostsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExchangeDagHostsResponseWithDefaults() *ExchangeDagHostsResponse {
	this := ExchangeDagHostsResponse{}
	return &this
}

// GetExchangeDagProtectionPreference returns the ExchangeDagProtectionPreference field value if set, zero value otherwise.
func (o *ExchangeDagHostsResponse) GetExchangeDagProtectionPreference() ExchangeDAGProtectionPreference {
	if o == nil || o.ExchangeDagProtectionPreference == nil {
		var ret ExchangeDAGProtectionPreference
		return ret
	}
	return *o.ExchangeDagProtectionPreference
}

// GetExchangeDagProtectionPreferenceOk returns a tuple with the ExchangeDagProtectionPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangeDagHostsResponse) GetExchangeDagProtectionPreferenceOk() (*ExchangeDAGProtectionPreference, bool) {
	if o == nil || o.ExchangeDagProtectionPreference == nil {
		return nil, false
	}
	return o.ExchangeDagProtectionPreference, true
}

// HasExchangeDagProtectionPreference returns a boolean if a field has been set.
func (o *ExchangeDagHostsResponse) HasExchangeDagProtectionPreference() bool {
	if o != nil && o.ExchangeDagProtectionPreference != nil {
		return true
	}

	return false
}

// SetExchangeDagProtectionPreference gets a reference to the given ExchangeDAGProtectionPreference and assigns it to the ExchangeDagProtectionPreference field.
func (o *ExchangeDagHostsResponse) SetExchangeDagProtectionPreference(v ExchangeDAGProtectionPreference) {
	o.ExchangeDagProtectionPreference = &v
}

// GetExchangeHostInfoList returns the ExchangeHostInfoList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExchangeDagHostsResponse) GetExchangeHostInfoList() []ExchangeHostInfo {
	if o == nil  {
		var ret []ExchangeHostInfo
		return ret
	}
	return o.ExchangeHostInfoList
}

// GetExchangeHostInfoListOk returns a tuple with the ExchangeHostInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExchangeDagHostsResponse) GetExchangeHostInfoListOk() (*[]ExchangeHostInfo, bool) {
	if o == nil || o.ExchangeHostInfoList == nil {
		return nil, false
	}
	return &o.ExchangeHostInfoList, true
}

// HasExchangeHostInfoList returns a boolean if a field has been set.
func (o *ExchangeDagHostsResponse) HasExchangeHostInfoList() bool {
	if o != nil && o.ExchangeHostInfoList != nil {
		return true
	}

	return false
}

// SetExchangeHostInfoList gets a reference to the given []ExchangeHostInfo and assigns it to the ExchangeHostInfoList field.
func (o *ExchangeDagHostsResponse) SetExchangeHostInfoList(v []ExchangeHostInfo) {
	o.ExchangeHostInfoList = v
}

// GetGuid returns the Guid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExchangeDagHostsResponse) GetGuid() string {
	if o == nil || o.Guid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Guid.Get()
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExchangeDagHostsResponse) GetGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Guid.Get(), o.Guid.IsSet()
}

// HasGuid returns a boolean if a field has been set.
func (o *ExchangeDagHostsResponse) HasGuid() bool {
	if o != nil && o.Guid.IsSet() {
		return true
	}

	return false
}

// SetGuid gets a reference to the given NullableString and assigns it to the Guid field.
func (o *ExchangeDagHostsResponse) SetGuid(v string) {
	o.Guid.Set(&v)
}
// SetGuidNil sets the value for Guid to be an explicit nil
func (o *ExchangeDagHostsResponse) SetGuidNil() {
	o.Guid.Set(nil)
}

// UnsetGuid ensures that no value is present for Guid, not even an explicit nil
func (o *ExchangeDagHostsResponse) UnsetGuid() {
	o.Guid.Unset()
}

// GetIsStandaloneHost returns the IsStandaloneHost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExchangeDagHostsResponse) GetIsStandaloneHost() bool {
	if o == nil || o.IsStandaloneHost.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsStandaloneHost.Get()
}

// GetIsStandaloneHostOk returns a tuple with the IsStandaloneHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExchangeDagHostsResponse) GetIsStandaloneHostOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsStandaloneHost.Get(), o.IsStandaloneHost.IsSet()
}

// HasIsStandaloneHost returns a boolean if a field has been set.
func (o *ExchangeDagHostsResponse) HasIsStandaloneHost() bool {
	if o != nil && o.IsStandaloneHost.IsSet() {
		return true
	}

	return false
}

// SetIsStandaloneHost gets a reference to the given NullableBool and assigns it to the IsStandaloneHost field.
func (o *ExchangeDagHostsResponse) SetIsStandaloneHost(v bool) {
	o.IsStandaloneHost.Set(&v)
}
// SetIsStandaloneHostNil sets the value for IsStandaloneHost to be an explicit nil
func (o *ExchangeDagHostsResponse) SetIsStandaloneHostNil() {
	o.IsStandaloneHost.Set(nil)
}

// UnsetIsStandaloneHost ensures that no value is present for IsStandaloneHost, not even an explicit nil
func (o *ExchangeDagHostsResponse) UnsetIsStandaloneHost() {
	o.IsStandaloneHost.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExchangeDagHostsResponse) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExchangeDagHostsResponse) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ExchangeDagHostsResponse) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ExchangeDagHostsResponse) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ExchangeDagHostsResponse) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ExchangeDagHostsResponse) UnsetName() {
	o.Name.Unset()
}

// GetProtectionSourceId returns the ProtectionSourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExchangeDagHostsResponse) GetProtectionSourceId() int64 {
	if o == nil || o.ProtectionSourceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ProtectionSourceId.Get()
}

// GetProtectionSourceIdOk returns a tuple with the ProtectionSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExchangeDagHostsResponse) GetProtectionSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionSourceId.Get(), o.ProtectionSourceId.IsSet()
}

// HasProtectionSourceId returns a boolean if a field has been set.
func (o *ExchangeDagHostsResponse) HasProtectionSourceId() bool {
	if o != nil && o.ProtectionSourceId.IsSet() {
		return true
	}

	return false
}

// SetProtectionSourceId gets a reference to the given NullableInt64 and assigns it to the ProtectionSourceId field.
func (o *ExchangeDagHostsResponse) SetProtectionSourceId(v int64) {
	o.ProtectionSourceId.Set(&v)
}
// SetProtectionSourceIdNil sets the value for ProtectionSourceId to be an explicit nil
func (o *ExchangeDagHostsResponse) SetProtectionSourceIdNil() {
	o.ProtectionSourceId.Set(nil)
}

// UnsetProtectionSourceId ensures that no value is present for ProtectionSourceId, not even an explicit nil
func (o *ExchangeDagHostsResponse) UnsetProtectionSourceId() {
	o.ProtectionSourceId.Unset()
}

func (o ExchangeDagHostsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExchangeDagProtectionPreference != nil {
		toSerialize["exchangeDagProtectionPreference"] = o.ExchangeDagProtectionPreference
	}
	if o.ExchangeHostInfoList != nil {
		toSerialize["exchangeHostInfoList"] = o.ExchangeHostInfoList
	}
	if o.Guid.IsSet() {
		toSerialize["guid"] = o.Guid.Get()
	}
	if o.IsStandaloneHost.IsSet() {
		toSerialize["isStandaloneHost"] = o.IsStandaloneHost.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ProtectionSourceId.IsSet() {
		toSerialize["protectionSourceId"] = o.ProtectionSourceId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableExchangeDagHostsResponse struct {
	value *ExchangeDagHostsResponse
	isSet bool
}

func (v NullableExchangeDagHostsResponse) Get() *ExchangeDagHostsResponse {
	return v.value
}

func (v *NullableExchangeDagHostsResponse) Set(val *ExchangeDagHostsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableExchangeDagHostsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableExchangeDagHostsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExchangeDagHostsResponse(val *ExchangeDagHostsResponse) *NullableExchangeDagHostsResponse {
	return &NullableExchangeDagHostsResponse{value: val, isSet: true}
}

func (v NullableExchangeDagHostsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExchangeDagHostsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


