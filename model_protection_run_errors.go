/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ProtectionRunErrors struct for ProtectionRunErrors
type ProtectionRunErrors struct {
	// Specifies the list of errors encountered by a task during a protection run.
	Errors []RequestError `json:"errors,omitempty"`
	// Specifies the list of filenames with errors encountered by a task during a protection run.
	FileNames []string `json:"fileNames,omitempty"`
	// Specifies the cookie for next set of results.
	PaginationCookie NullableString `json:"paginationCookie,omitempty"`
}

// NewProtectionRunErrors instantiates a new ProtectionRunErrors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionRunErrors() *ProtectionRunErrors {
	this := ProtectionRunErrors{}
	return &this
}

// NewProtectionRunErrorsWithDefaults instantiates a new ProtectionRunErrors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionRunErrorsWithDefaults() *ProtectionRunErrors {
	this := ProtectionRunErrors{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunErrors) GetErrors() []RequestError {
	if o == nil  {
		var ret []RequestError
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunErrors) GetErrorsOk() (*[]RequestError, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return &o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ProtectionRunErrors) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []RequestError and assigns it to the Errors field.
func (o *ProtectionRunErrors) SetErrors(v []RequestError) {
	o.Errors = v
}

// GetFileNames returns the FileNames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunErrors) GetFileNames() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.FileNames
}

// GetFileNamesOk returns a tuple with the FileNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunErrors) GetFileNamesOk() (*[]string, bool) {
	if o == nil || o.FileNames == nil {
		return nil, false
	}
	return &o.FileNames, true
}

// HasFileNames returns a boolean if a field has been set.
func (o *ProtectionRunErrors) HasFileNames() bool {
	if o != nil && o.FileNames != nil {
		return true
	}

	return false
}

// SetFileNames gets a reference to the given []string and assigns it to the FileNames field.
func (o *ProtectionRunErrors) SetFileNames(v []string) {
	o.FileNames = v
}

// GetPaginationCookie returns the PaginationCookie field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunErrors) GetPaginationCookie() string {
	if o == nil || o.PaginationCookie.Get() == nil {
		var ret string
		return ret
	}
	return *o.PaginationCookie.Get()
}

// GetPaginationCookieOk returns a tuple with the PaginationCookie field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunErrors) GetPaginationCookieOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PaginationCookie.Get(), o.PaginationCookie.IsSet()
}

// HasPaginationCookie returns a boolean if a field has been set.
func (o *ProtectionRunErrors) HasPaginationCookie() bool {
	if o != nil && o.PaginationCookie.IsSet() {
		return true
	}

	return false
}

// SetPaginationCookie gets a reference to the given NullableString and assigns it to the PaginationCookie field.
func (o *ProtectionRunErrors) SetPaginationCookie(v string) {
	o.PaginationCookie.Set(&v)
}
// SetPaginationCookieNil sets the value for PaginationCookie to be an explicit nil
func (o *ProtectionRunErrors) SetPaginationCookieNil() {
	o.PaginationCookie.Set(nil)
}

// UnsetPaginationCookie ensures that no value is present for PaginationCookie, not even an explicit nil
func (o *ProtectionRunErrors) UnsetPaginationCookie() {
	o.PaginationCookie.Unset()
}

func (o ProtectionRunErrors) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	if o.FileNames != nil {
		toSerialize["fileNames"] = o.FileNames
	}
	if o.PaginationCookie.IsSet() {
		toSerialize["paginationCookie"] = o.PaginationCookie.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProtectionRunErrors struct {
	value *ProtectionRunErrors
	isSet bool
}

func (v NullableProtectionRunErrors) Get() *ProtectionRunErrors {
	return v.value
}

func (v *NullableProtectionRunErrors) Set(val *ProtectionRunErrors) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionRunErrors) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionRunErrors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionRunErrors(val *ProtectionRunErrors) *NullableProtectionRunErrors {
	return &NullableProtectionRunErrors{value: val, isSet: true}
}

func (v NullableProtectionRunErrors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionRunErrors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


