/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// AppInstance AppInstance provides application instance's information.
type AppInstance struct {
	// Specifies the token to access with the app.
	AppAccessToken NullableString `json:"appAccessToken,omitempty"`
	// Specifies unique id across all instances of all apps.
	AppInstanceId NullableInt64 `json:"appInstanceId,omitempty"`
	// Specifies name of the app that is launched in this instance.
	AppName NullableString `json:"appName,omitempty"`
	// Specifies id of the app that is launched in this instance.
	AppUid NullableInt64 `json:"appUid,omitempty"`
	// Specifies the version of the app that is launched in this instance.
	AppVersion NullableInt64 `json:"appVersion,omitempty"`
	// Specifies timestamp (in microseconds) when the app instance was first created.
	CreatedTimeUsecs NullableInt64 `json:"createdTimeUsecs,omitempty"`
	// Specifies a unique identifier generated by the client to let the backend identify retries of the app launch request.
	CreationUid NullableString `json:"creationUid,omitempty"`
	// Specifies user configured description for the app instance.
	Description NullableString `json:"description,omitempty"`
	// Specifies version of the app provided by the developer.
	DevVersion NullableString `json:"devVersion,omitempty"`
	// Specifies duration (in microseconds) for which the app instance has run.
	DurationUsecs NullableInt64 `json:"durationUsecs,omitempty"`
	// Specifies the reason the app instance is unhealthy. Only set if app instance is unhealthy.
	HealthDetail NullableString `json:"healthDetail,omitempty"`
	// Specifies the current health status of the app instance.
	HealthStatus NullableInt32 `json:"healthStatus,omitempty"`
	// Specifies app ui http config. If set to true, the App's UI uses https. Otherwise it uses http.
	HttpsUi NullableBool `json:"httpsUi,omitempty"`
	Namespace NullableString `json:"namespace,omitempty"`
	// Specifies the ip of the node which can be used to contact app instance external services.
	NodeIp NullableString `json:"nodeIp,omitempty"`
	// Specifies the node port on which the app instance services external requests.
	NodePort NullableInt32 `json:"nodePort,omitempty"`
	Settings *AppInstanceSettings `json:"settings,omitempty"`
	// Specifies the current state of the app instance. Specifies operational status of an app instance. kInitializing - The app instance has been launched or resumed, but is not fully running yet. kRunning - The app instance is running. Check health_status for the actual health. kPausing - The app instance is being paused. kPaused - The app instance has been paused. kTerminating - The app instance is being terminated. kTerminated -  The app instance has been terminated. kFailed - The app instance has failed due to an unrecoverable error.
	State NullableString `json:"state,omitempty"`
	// Specifies the failure reason when the app instance's state is kFailed.
	StateDetail NullableString `json:"stateDetail,omitempty"`
	UserSshKey *UserSshKey `json:"userSshKey,omitempty"`
	// Specifies list of all VM groups for this application. Each VM group contains a list of VMs. Information needed for UI like the nodePort, the port type etc. is stored for each VM.
	VmGroups []VmGroup `json:"vmGroups,omitempty"`
}

// NewAppInstance instantiates a new AppInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppInstance() *AppInstance {
	this := AppInstance{}
	return &this
}

// NewAppInstanceWithDefaults instantiates a new AppInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppInstanceWithDefaults() *AppInstance {
	this := AppInstance{}
	return &this
}

// GetAppAccessToken returns the AppAccessToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetAppAccessToken() string {
	if o == nil || o.AppAccessToken.Get() == nil {
		var ret string
		return ret
	}
	return *o.AppAccessToken.Get()
}

// GetAppAccessTokenOk returns a tuple with the AppAccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetAppAccessTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AppAccessToken.Get(), o.AppAccessToken.IsSet()
}

// HasAppAccessToken returns a boolean if a field has been set.
func (o *AppInstance) HasAppAccessToken() bool {
	if o != nil && o.AppAccessToken.IsSet() {
		return true
	}

	return false
}

// SetAppAccessToken gets a reference to the given NullableString and assigns it to the AppAccessToken field.
func (o *AppInstance) SetAppAccessToken(v string) {
	o.AppAccessToken.Set(&v)
}
// SetAppAccessTokenNil sets the value for AppAccessToken to be an explicit nil
func (o *AppInstance) SetAppAccessTokenNil() {
	o.AppAccessToken.Set(nil)
}

// UnsetAppAccessToken ensures that no value is present for AppAccessToken, not even an explicit nil
func (o *AppInstance) UnsetAppAccessToken() {
	o.AppAccessToken.Unset()
}

// GetAppInstanceId returns the AppInstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetAppInstanceId() int64 {
	if o == nil || o.AppInstanceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AppInstanceId.Get()
}

// GetAppInstanceIdOk returns a tuple with the AppInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetAppInstanceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AppInstanceId.Get(), o.AppInstanceId.IsSet()
}

// HasAppInstanceId returns a boolean if a field has been set.
func (o *AppInstance) HasAppInstanceId() bool {
	if o != nil && o.AppInstanceId.IsSet() {
		return true
	}

	return false
}

// SetAppInstanceId gets a reference to the given NullableInt64 and assigns it to the AppInstanceId field.
func (o *AppInstance) SetAppInstanceId(v int64) {
	o.AppInstanceId.Set(&v)
}
// SetAppInstanceIdNil sets the value for AppInstanceId to be an explicit nil
func (o *AppInstance) SetAppInstanceIdNil() {
	o.AppInstanceId.Set(nil)
}

// UnsetAppInstanceId ensures that no value is present for AppInstanceId, not even an explicit nil
func (o *AppInstance) UnsetAppInstanceId() {
	o.AppInstanceId.Unset()
}

// GetAppName returns the AppName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetAppName() string {
	if o == nil || o.AppName.Get() == nil {
		var ret string
		return ret
	}
	return *o.AppName.Get()
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetAppNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AppName.Get(), o.AppName.IsSet()
}

// HasAppName returns a boolean if a field has been set.
func (o *AppInstance) HasAppName() bool {
	if o != nil && o.AppName.IsSet() {
		return true
	}

	return false
}

// SetAppName gets a reference to the given NullableString and assigns it to the AppName field.
func (o *AppInstance) SetAppName(v string) {
	o.AppName.Set(&v)
}
// SetAppNameNil sets the value for AppName to be an explicit nil
func (o *AppInstance) SetAppNameNil() {
	o.AppName.Set(nil)
}

// UnsetAppName ensures that no value is present for AppName, not even an explicit nil
func (o *AppInstance) UnsetAppName() {
	o.AppName.Unset()
}

// GetAppUid returns the AppUid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetAppUid() int64 {
	if o == nil || o.AppUid.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AppUid.Get()
}

// GetAppUidOk returns a tuple with the AppUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetAppUidOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AppUid.Get(), o.AppUid.IsSet()
}

// HasAppUid returns a boolean if a field has been set.
func (o *AppInstance) HasAppUid() bool {
	if o != nil && o.AppUid.IsSet() {
		return true
	}

	return false
}

// SetAppUid gets a reference to the given NullableInt64 and assigns it to the AppUid field.
func (o *AppInstance) SetAppUid(v int64) {
	o.AppUid.Set(&v)
}
// SetAppUidNil sets the value for AppUid to be an explicit nil
func (o *AppInstance) SetAppUidNil() {
	o.AppUid.Set(nil)
}

// UnsetAppUid ensures that no value is present for AppUid, not even an explicit nil
func (o *AppInstance) UnsetAppUid() {
	o.AppUid.Unset()
}

// GetAppVersion returns the AppVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetAppVersion() int64 {
	if o == nil || o.AppVersion.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AppVersion.Get()
}

// GetAppVersionOk returns a tuple with the AppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetAppVersionOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AppVersion.Get(), o.AppVersion.IsSet()
}

// HasAppVersion returns a boolean if a field has been set.
func (o *AppInstance) HasAppVersion() bool {
	if o != nil && o.AppVersion.IsSet() {
		return true
	}

	return false
}

// SetAppVersion gets a reference to the given NullableInt64 and assigns it to the AppVersion field.
func (o *AppInstance) SetAppVersion(v int64) {
	o.AppVersion.Set(&v)
}
// SetAppVersionNil sets the value for AppVersion to be an explicit nil
func (o *AppInstance) SetAppVersionNil() {
	o.AppVersion.Set(nil)
}

// UnsetAppVersion ensures that no value is present for AppVersion, not even an explicit nil
func (o *AppInstance) UnsetAppVersion() {
	o.AppVersion.Unset()
}

// GetCreatedTimeUsecs returns the CreatedTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetCreatedTimeUsecs() int64 {
	if o == nil || o.CreatedTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.CreatedTimeUsecs.Get()
}

// GetCreatedTimeUsecsOk returns a tuple with the CreatedTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetCreatedTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedTimeUsecs.Get(), o.CreatedTimeUsecs.IsSet()
}

// HasCreatedTimeUsecs returns a boolean if a field has been set.
func (o *AppInstance) HasCreatedTimeUsecs() bool {
	if o != nil && o.CreatedTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetCreatedTimeUsecs gets a reference to the given NullableInt64 and assigns it to the CreatedTimeUsecs field.
func (o *AppInstance) SetCreatedTimeUsecs(v int64) {
	o.CreatedTimeUsecs.Set(&v)
}
// SetCreatedTimeUsecsNil sets the value for CreatedTimeUsecs to be an explicit nil
func (o *AppInstance) SetCreatedTimeUsecsNil() {
	o.CreatedTimeUsecs.Set(nil)
}

// UnsetCreatedTimeUsecs ensures that no value is present for CreatedTimeUsecs, not even an explicit nil
func (o *AppInstance) UnsetCreatedTimeUsecs() {
	o.CreatedTimeUsecs.Unset()
}

// GetCreationUid returns the CreationUid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetCreationUid() string {
	if o == nil || o.CreationUid.Get() == nil {
		var ret string
		return ret
	}
	return *o.CreationUid.Get()
}

// GetCreationUidOk returns a tuple with the CreationUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetCreationUidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreationUid.Get(), o.CreationUid.IsSet()
}

// HasCreationUid returns a boolean if a field has been set.
func (o *AppInstance) HasCreationUid() bool {
	if o != nil && o.CreationUid.IsSet() {
		return true
	}

	return false
}

// SetCreationUid gets a reference to the given NullableString and assigns it to the CreationUid field.
func (o *AppInstance) SetCreationUid(v string) {
	o.CreationUid.Set(&v)
}
// SetCreationUidNil sets the value for CreationUid to be an explicit nil
func (o *AppInstance) SetCreationUidNil() {
	o.CreationUid.Set(nil)
}

// UnsetCreationUid ensures that no value is present for CreationUid, not even an explicit nil
func (o *AppInstance) UnsetCreationUid() {
	o.CreationUid.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *AppInstance) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *AppInstance) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *AppInstance) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *AppInstance) UnsetDescription() {
	o.Description.Unset()
}

// GetDevVersion returns the DevVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetDevVersion() string {
	if o == nil || o.DevVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.DevVersion.Get()
}

// GetDevVersionOk returns a tuple with the DevVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetDevVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DevVersion.Get(), o.DevVersion.IsSet()
}

// HasDevVersion returns a boolean if a field has been set.
func (o *AppInstance) HasDevVersion() bool {
	if o != nil && o.DevVersion.IsSet() {
		return true
	}

	return false
}

// SetDevVersion gets a reference to the given NullableString and assigns it to the DevVersion field.
func (o *AppInstance) SetDevVersion(v string) {
	o.DevVersion.Set(&v)
}
// SetDevVersionNil sets the value for DevVersion to be an explicit nil
func (o *AppInstance) SetDevVersionNil() {
	o.DevVersion.Set(nil)
}

// UnsetDevVersion ensures that no value is present for DevVersion, not even an explicit nil
func (o *AppInstance) UnsetDevVersion() {
	o.DevVersion.Unset()
}

// GetDurationUsecs returns the DurationUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetDurationUsecs() int64 {
	if o == nil || o.DurationUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.DurationUsecs.Get()
}

// GetDurationUsecsOk returns a tuple with the DurationUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetDurationUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DurationUsecs.Get(), o.DurationUsecs.IsSet()
}

// HasDurationUsecs returns a boolean if a field has been set.
func (o *AppInstance) HasDurationUsecs() bool {
	if o != nil && o.DurationUsecs.IsSet() {
		return true
	}

	return false
}

// SetDurationUsecs gets a reference to the given NullableInt64 and assigns it to the DurationUsecs field.
func (o *AppInstance) SetDurationUsecs(v int64) {
	o.DurationUsecs.Set(&v)
}
// SetDurationUsecsNil sets the value for DurationUsecs to be an explicit nil
func (o *AppInstance) SetDurationUsecsNil() {
	o.DurationUsecs.Set(nil)
}

// UnsetDurationUsecs ensures that no value is present for DurationUsecs, not even an explicit nil
func (o *AppInstance) UnsetDurationUsecs() {
	o.DurationUsecs.Unset()
}

// GetHealthDetail returns the HealthDetail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetHealthDetail() string {
	if o == nil || o.HealthDetail.Get() == nil {
		var ret string
		return ret
	}
	return *o.HealthDetail.Get()
}

// GetHealthDetailOk returns a tuple with the HealthDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetHealthDetailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HealthDetail.Get(), o.HealthDetail.IsSet()
}

// HasHealthDetail returns a boolean if a field has been set.
func (o *AppInstance) HasHealthDetail() bool {
	if o != nil && o.HealthDetail.IsSet() {
		return true
	}

	return false
}

// SetHealthDetail gets a reference to the given NullableString and assigns it to the HealthDetail field.
func (o *AppInstance) SetHealthDetail(v string) {
	o.HealthDetail.Set(&v)
}
// SetHealthDetailNil sets the value for HealthDetail to be an explicit nil
func (o *AppInstance) SetHealthDetailNil() {
	o.HealthDetail.Set(nil)
}

// UnsetHealthDetail ensures that no value is present for HealthDetail, not even an explicit nil
func (o *AppInstance) UnsetHealthDetail() {
	o.HealthDetail.Unset()
}

// GetHealthStatus returns the HealthStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetHealthStatus() int32 {
	if o == nil || o.HealthStatus.Get() == nil {
		var ret int32
		return ret
	}
	return *o.HealthStatus.Get()
}

// GetHealthStatusOk returns a tuple with the HealthStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetHealthStatusOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HealthStatus.Get(), o.HealthStatus.IsSet()
}

// HasHealthStatus returns a boolean if a field has been set.
func (o *AppInstance) HasHealthStatus() bool {
	if o != nil && o.HealthStatus.IsSet() {
		return true
	}

	return false
}

// SetHealthStatus gets a reference to the given NullableInt32 and assigns it to the HealthStatus field.
func (o *AppInstance) SetHealthStatus(v int32) {
	o.HealthStatus.Set(&v)
}
// SetHealthStatusNil sets the value for HealthStatus to be an explicit nil
func (o *AppInstance) SetHealthStatusNil() {
	o.HealthStatus.Set(nil)
}

// UnsetHealthStatus ensures that no value is present for HealthStatus, not even an explicit nil
func (o *AppInstance) UnsetHealthStatus() {
	o.HealthStatus.Unset()
}

// GetHttpsUi returns the HttpsUi field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetHttpsUi() bool {
	if o == nil || o.HttpsUi.Get() == nil {
		var ret bool
		return ret
	}
	return *o.HttpsUi.Get()
}

// GetHttpsUiOk returns a tuple with the HttpsUi field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetHttpsUiOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HttpsUi.Get(), o.HttpsUi.IsSet()
}

// HasHttpsUi returns a boolean if a field has been set.
func (o *AppInstance) HasHttpsUi() bool {
	if o != nil && o.HttpsUi.IsSet() {
		return true
	}

	return false
}

// SetHttpsUi gets a reference to the given NullableBool and assigns it to the HttpsUi field.
func (o *AppInstance) SetHttpsUi(v bool) {
	o.HttpsUi.Set(&v)
}
// SetHttpsUiNil sets the value for HttpsUi to be an explicit nil
func (o *AppInstance) SetHttpsUiNil() {
	o.HttpsUi.Set(nil)
}

// UnsetHttpsUi ensures that no value is present for HttpsUi, not even an explicit nil
func (o *AppInstance) UnsetHttpsUi() {
	o.HttpsUi.Unset()
}

// GetNamespace returns the Namespace field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetNamespace() string {
	if o == nil || o.Namespace.Get() == nil {
		var ret string
		return ret
	}
	return *o.Namespace.Get()
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetNamespaceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Namespace.Get(), o.Namespace.IsSet()
}

// HasNamespace returns a boolean if a field has been set.
func (o *AppInstance) HasNamespace() bool {
	if o != nil && o.Namespace.IsSet() {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given NullableString and assigns it to the Namespace field.
func (o *AppInstance) SetNamespace(v string) {
	o.Namespace.Set(&v)
}
// SetNamespaceNil sets the value for Namespace to be an explicit nil
func (o *AppInstance) SetNamespaceNil() {
	o.Namespace.Set(nil)
}

// UnsetNamespace ensures that no value is present for Namespace, not even an explicit nil
func (o *AppInstance) UnsetNamespace() {
	o.Namespace.Unset()
}

// GetNodeIp returns the NodeIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetNodeIp() string {
	if o == nil || o.NodeIp.Get() == nil {
		var ret string
		return ret
	}
	return *o.NodeIp.Get()
}

// GetNodeIpOk returns a tuple with the NodeIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetNodeIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NodeIp.Get(), o.NodeIp.IsSet()
}

// HasNodeIp returns a boolean if a field has been set.
func (o *AppInstance) HasNodeIp() bool {
	if o != nil && o.NodeIp.IsSet() {
		return true
	}

	return false
}

// SetNodeIp gets a reference to the given NullableString and assigns it to the NodeIp field.
func (o *AppInstance) SetNodeIp(v string) {
	o.NodeIp.Set(&v)
}
// SetNodeIpNil sets the value for NodeIp to be an explicit nil
func (o *AppInstance) SetNodeIpNil() {
	o.NodeIp.Set(nil)
}

// UnsetNodeIp ensures that no value is present for NodeIp, not even an explicit nil
func (o *AppInstance) UnsetNodeIp() {
	o.NodeIp.Unset()
}

// GetNodePort returns the NodePort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetNodePort() int32 {
	if o == nil || o.NodePort.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NodePort.Get()
}

// GetNodePortOk returns a tuple with the NodePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetNodePortOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NodePort.Get(), o.NodePort.IsSet()
}

// HasNodePort returns a boolean if a field has been set.
func (o *AppInstance) HasNodePort() bool {
	if o != nil && o.NodePort.IsSet() {
		return true
	}

	return false
}

// SetNodePort gets a reference to the given NullableInt32 and assigns it to the NodePort field.
func (o *AppInstance) SetNodePort(v int32) {
	o.NodePort.Set(&v)
}
// SetNodePortNil sets the value for NodePort to be an explicit nil
func (o *AppInstance) SetNodePortNil() {
	o.NodePort.Set(nil)
}

// UnsetNodePort ensures that no value is present for NodePort, not even an explicit nil
func (o *AppInstance) UnsetNodePort() {
	o.NodePort.Unset()
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *AppInstance) GetSettings() AppInstanceSettings {
	if o == nil || o.Settings == nil {
		var ret AppInstanceSettings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInstance) GetSettingsOk() (*AppInstanceSettings, bool) {
	if o == nil || o.Settings == nil {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *AppInstance) HasSettings() bool {
	if o != nil && o.Settings != nil {
		return true
	}

	return false
}

// SetSettings gets a reference to the given AppInstanceSettings and assigns it to the Settings field.
func (o *AppInstance) SetSettings(v AppInstanceSettings) {
	o.Settings = &v
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetState() string {
	if o == nil || o.State.Get() == nil {
		var ret string
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *AppInstance) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableString and assigns it to the State field.
func (o *AppInstance) SetState(v string) {
	o.State.Set(&v)
}
// SetStateNil sets the value for State to be an explicit nil
func (o *AppInstance) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *AppInstance) UnsetState() {
	o.State.Unset()
}

// GetStateDetail returns the StateDetail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetStateDetail() string {
	if o == nil || o.StateDetail.Get() == nil {
		var ret string
		return ret
	}
	return *o.StateDetail.Get()
}

// GetStateDetailOk returns a tuple with the StateDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetStateDetailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StateDetail.Get(), o.StateDetail.IsSet()
}

// HasStateDetail returns a boolean if a field has been set.
func (o *AppInstance) HasStateDetail() bool {
	if o != nil && o.StateDetail.IsSet() {
		return true
	}

	return false
}

// SetStateDetail gets a reference to the given NullableString and assigns it to the StateDetail field.
func (o *AppInstance) SetStateDetail(v string) {
	o.StateDetail.Set(&v)
}
// SetStateDetailNil sets the value for StateDetail to be an explicit nil
func (o *AppInstance) SetStateDetailNil() {
	o.StateDetail.Set(nil)
}

// UnsetStateDetail ensures that no value is present for StateDetail, not even an explicit nil
func (o *AppInstance) UnsetStateDetail() {
	o.StateDetail.Unset()
}

// GetUserSshKey returns the UserSshKey field value if set, zero value otherwise.
func (o *AppInstance) GetUserSshKey() UserSshKey {
	if o == nil || o.UserSshKey == nil {
		var ret UserSshKey
		return ret
	}
	return *o.UserSshKey
}

// GetUserSshKeyOk returns a tuple with the UserSshKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInstance) GetUserSshKeyOk() (*UserSshKey, bool) {
	if o == nil || o.UserSshKey == nil {
		return nil, false
	}
	return o.UserSshKey, true
}

// HasUserSshKey returns a boolean if a field has been set.
func (o *AppInstance) HasUserSshKey() bool {
	if o != nil && o.UserSshKey != nil {
		return true
	}

	return false
}

// SetUserSshKey gets a reference to the given UserSshKey and assigns it to the UserSshKey field.
func (o *AppInstance) SetUserSshKey(v UserSshKey) {
	o.UserSshKey = &v
}

// GetVmGroups returns the VmGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppInstance) GetVmGroups() []VmGroup {
	if o == nil  {
		var ret []VmGroup
		return ret
	}
	return o.VmGroups
}

// GetVmGroupsOk returns a tuple with the VmGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppInstance) GetVmGroupsOk() (*[]VmGroup, bool) {
	if o == nil || o.VmGroups == nil {
		return nil, false
	}
	return &o.VmGroups, true
}

// HasVmGroups returns a boolean if a field has been set.
func (o *AppInstance) HasVmGroups() bool {
	if o != nil && o.VmGroups != nil {
		return true
	}

	return false
}

// SetVmGroups gets a reference to the given []VmGroup and assigns it to the VmGroups field.
func (o *AppInstance) SetVmGroups(v []VmGroup) {
	o.VmGroups = v
}

func (o AppInstance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppAccessToken.IsSet() {
		toSerialize["appAccessToken"] = o.AppAccessToken.Get()
	}
	if o.AppInstanceId.IsSet() {
		toSerialize["appInstanceId"] = o.AppInstanceId.Get()
	}
	if o.AppName.IsSet() {
		toSerialize["appName"] = o.AppName.Get()
	}
	if o.AppUid.IsSet() {
		toSerialize["appUid"] = o.AppUid.Get()
	}
	if o.AppVersion.IsSet() {
		toSerialize["appVersion"] = o.AppVersion.Get()
	}
	if o.CreatedTimeUsecs.IsSet() {
		toSerialize["createdTimeUsecs"] = o.CreatedTimeUsecs.Get()
	}
	if o.CreationUid.IsSet() {
		toSerialize["creationUid"] = o.CreationUid.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DevVersion.IsSet() {
		toSerialize["devVersion"] = o.DevVersion.Get()
	}
	if o.DurationUsecs.IsSet() {
		toSerialize["durationUsecs"] = o.DurationUsecs.Get()
	}
	if o.HealthDetail.IsSet() {
		toSerialize["healthDetail"] = o.HealthDetail.Get()
	}
	if o.HealthStatus.IsSet() {
		toSerialize["healthStatus"] = o.HealthStatus.Get()
	}
	if o.HttpsUi.IsSet() {
		toSerialize["httpsUi"] = o.HttpsUi.Get()
	}
	if o.Namespace.IsSet() {
		toSerialize["namespace"] = o.Namespace.Get()
	}
	if o.NodeIp.IsSet() {
		toSerialize["nodeIp"] = o.NodeIp.Get()
	}
	if o.NodePort.IsSet() {
		toSerialize["nodePort"] = o.NodePort.Get()
	}
	if o.Settings != nil {
		toSerialize["settings"] = o.Settings
	}
	if o.State.IsSet() {
		toSerialize["state"] = o.State.Get()
	}
	if o.StateDetail.IsSet() {
		toSerialize["stateDetail"] = o.StateDetail.Get()
	}
	if o.UserSshKey != nil {
		toSerialize["userSshKey"] = o.UserSshKey
	}
	if o.VmGroups != nil {
		toSerialize["vmGroups"] = o.VmGroups
	}
	return json.Marshal(toSerialize)
}

type NullableAppInstance struct {
	value *AppInstance
	isSet bool
}

func (v NullableAppInstance) Get() *AppInstance {
	return v.value
}

func (v *NullableAppInstance) Set(val *AppInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableAppInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableAppInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppInstance(val *AppInstance) *NullableAppInstance {
	return &NullableAppInstance{value: val, isSet: true}
}

func (v NullableAppInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


