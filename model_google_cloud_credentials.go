/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// GoogleCloudCredentials Specifies the cloud credentials to connect to a Google service account.
type GoogleCloudCredentials struct {
	// Specifies the client email address used to access Google Cloud Storage.
	ClientEmailAddress NullableString `json:"clientEmailAddress,omitempty"`
	// Specifies the private key used to access Google Cloud Storage that is generated when the service account is created.
	ClientPrivateKey NullableString `json:"clientPrivateKey,omitempty"`
	// Specifies the project id of an existing Google Cloud project to store objects.
	ProjectId NullableString `json:"projectId,omitempty"`
	// Specifies the storage class of GCP. GoogleTierType specifies the storage class for Google. 'kGoogleStandard' indicates a tier type of Google properties. 'kGoogleNearline' indicates a tier type of Google properties that is not accessed frequently. 'kGoogleColdline' indicates a tier type of Google properties that is rarely accessed. 'kGoogleRegional' indicates a tier type of Google properties that stores frequently accessed data in the same region. 'kGoogleMultiRegional' indicates a tier type of Google properties that is frequently accessed (\"hot\" objects) around the world.
	TierType NullableString `json:"tierType,omitempty"`
}

// NewGoogleCloudCredentials instantiates a new GoogleCloudCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoogleCloudCredentials() *GoogleCloudCredentials {
	this := GoogleCloudCredentials{}
	return &this
}

// NewGoogleCloudCredentialsWithDefaults instantiates a new GoogleCloudCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudCredentialsWithDefaults() *GoogleCloudCredentials {
	this := GoogleCloudCredentials{}
	return &this
}

// GetClientEmailAddress returns the ClientEmailAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GoogleCloudCredentials) GetClientEmailAddress() string {
	if o == nil || o.ClientEmailAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClientEmailAddress.Get()
}

// GetClientEmailAddressOk returns a tuple with the ClientEmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GoogleCloudCredentials) GetClientEmailAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClientEmailAddress.Get(), o.ClientEmailAddress.IsSet()
}

// HasClientEmailAddress returns a boolean if a field has been set.
func (o *GoogleCloudCredentials) HasClientEmailAddress() bool {
	if o != nil && o.ClientEmailAddress.IsSet() {
		return true
	}

	return false
}

// SetClientEmailAddress gets a reference to the given NullableString and assigns it to the ClientEmailAddress field.
func (o *GoogleCloudCredentials) SetClientEmailAddress(v string) {
	o.ClientEmailAddress.Set(&v)
}
// SetClientEmailAddressNil sets the value for ClientEmailAddress to be an explicit nil
func (o *GoogleCloudCredentials) SetClientEmailAddressNil() {
	o.ClientEmailAddress.Set(nil)
}

// UnsetClientEmailAddress ensures that no value is present for ClientEmailAddress, not even an explicit nil
func (o *GoogleCloudCredentials) UnsetClientEmailAddress() {
	o.ClientEmailAddress.Unset()
}

// GetClientPrivateKey returns the ClientPrivateKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GoogleCloudCredentials) GetClientPrivateKey() string {
	if o == nil || o.ClientPrivateKey.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClientPrivateKey.Get()
}

// GetClientPrivateKeyOk returns a tuple with the ClientPrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GoogleCloudCredentials) GetClientPrivateKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClientPrivateKey.Get(), o.ClientPrivateKey.IsSet()
}

// HasClientPrivateKey returns a boolean if a field has been set.
func (o *GoogleCloudCredentials) HasClientPrivateKey() bool {
	if o != nil && o.ClientPrivateKey.IsSet() {
		return true
	}

	return false
}

// SetClientPrivateKey gets a reference to the given NullableString and assigns it to the ClientPrivateKey field.
func (o *GoogleCloudCredentials) SetClientPrivateKey(v string) {
	o.ClientPrivateKey.Set(&v)
}
// SetClientPrivateKeyNil sets the value for ClientPrivateKey to be an explicit nil
func (o *GoogleCloudCredentials) SetClientPrivateKeyNil() {
	o.ClientPrivateKey.Set(nil)
}

// UnsetClientPrivateKey ensures that no value is present for ClientPrivateKey, not even an explicit nil
func (o *GoogleCloudCredentials) UnsetClientPrivateKey() {
	o.ClientPrivateKey.Unset()
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GoogleCloudCredentials) GetProjectId() string {
	if o == nil || o.ProjectId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProjectId.Get()
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GoogleCloudCredentials) GetProjectIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProjectId.Get(), o.ProjectId.IsSet()
}

// HasProjectId returns a boolean if a field has been set.
func (o *GoogleCloudCredentials) HasProjectId() bool {
	if o != nil && o.ProjectId.IsSet() {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given NullableString and assigns it to the ProjectId field.
func (o *GoogleCloudCredentials) SetProjectId(v string) {
	o.ProjectId.Set(&v)
}
// SetProjectIdNil sets the value for ProjectId to be an explicit nil
func (o *GoogleCloudCredentials) SetProjectIdNil() {
	o.ProjectId.Set(nil)
}

// UnsetProjectId ensures that no value is present for ProjectId, not even an explicit nil
func (o *GoogleCloudCredentials) UnsetProjectId() {
	o.ProjectId.Unset()
}

// GetTierType returns the TierType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GoogleCloudCredentials) GetTierType() string {
	if o == nil || o.TierType.Get() == nil {
		var ret string
		return ret
	}
	return *o.TierType.Get()
}

// GetTierTypeOk returns a tuple with the TierType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GoogleCloudCredentials) GetTierTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TierType.Get(), o.TierType.IsSet()
}

// HasTierType returns a boolean if a field has been set.
func (o *GoogleCloudCredentials) HasTierType() bool {
	if o != nil && o.TierType.IsSet() {
		return true
	}

	return false
}

// SetTierType gets a reference to the given NullableString and assigns it to the TierType field.
func (o *GoogleCloudCredentials) SetTierType(v string) {
	o.TierType.Set(&v)
}
// SetTierTypeNil sets the value for TierType to be an explicit nil
func (o *GoogleCloudCredentials) SetTierTypeNil() {
	o.TierType.Set(nil)
}

// UnsetTierType ensures that no value is present for TierType, not even an explicit nil
func (o *GoogleCloudCredentials) UnsetTierType() {
	o.TierType.Unset()
}

func (o GoogleCloudCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientEmailAddress.IsSet() {
		toSerialize["clientEmailAddress"] = o.ClientEmailAddress.Get()
	}
	if o.ClientPrivateKey.IsSet() {
		toSerialize["clientPrivateKey"] = o.ClientPrivateKey.Get()
	}
	if o.ProjectId.IsSet() {
		toSerialize["projectId"] = o.ProjectId.Get()
	}
	if o.TierType.IsSet() {
		toSerialize["tierType"] = o.TierType.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGoogleCloudCredentials struct {
	value *GoogleCloudCredentials
	isSet bool
}

func (v NullableGoogleCloudCredentials) Get() *GoogleCloudCredentials {
	return v.value
}

func (v *NullableGoogleCloudCredentials) Set(val *GoogleCloudCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableGoogleCloudCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableGoogleCloudCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoogleCloudCredentials(val *GoogleCloudCredentials) *NullableGoogleCloudCredentials {
	return &NullableGoogleCloudCredentials{value: val, isSet: true}
}

func (v NullableGoogleCloudCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoogleCloudCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


