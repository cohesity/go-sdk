/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// HypervEnvJobParameters Specifies job parameters applicable for all 'kHyperV' Environment type Protection Sources in a Protection Job.
type HypervEnvJobParameters struct {
	// If true, takes a crash-consistent snapshot when app-consistent snapshot fails. Otherwise, the snapshot attempt is marked failed. By default, this field is set to false.
	FallbackToCrashConsistent NullableBool `json:"fallbackToCrashConsistent,omitempty"`
}

// NewHypervEnvJobParameters instantiates a new HypervEnvJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHypervEnvJobParameters() *HypervEnvJobParameters {
	this := HypervEnvJobParameters{}
	return &this
}

// NewHypervEnvJobParametersWithDefaults instantiates a new HypervEnvJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHypervEnvJobParametersWithDefaults() *HypervEnvJobParameters {
	this := HypervEnvJobParameters{}
	return &this
}

// GetFallbackToCrashConsistent returns the FallbackToCrashConsistent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervEnvJobParameters) GetFallbackToCrashConsistent() bool {
	if o == nil || o.FallbackToCrashConsistent.Get() == nil {
		var ret bool
		return ret
	}
	return *o.FallbackToCrashConsistent.Get()
}

// GetFallbackToCrashConsistentOk returns a tuple with the FallbackToCrashConsistent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervEnvJobParameters) GetFallbackToCrashConsistentOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FallbackToCrashConsistent.Get(), o.FallbackToCrashConsistent.IsSet()
}

// HasFallbackToCrashConsistent returns a boolean if a field has been set.
func (o *HypervEnvJobParameters) HasFallbackToCrashConsistent() bool {
	if o != nil && o.FallbackToCrashConsistent.IsSet() {
		return true
	}

	return false
}

// SetFallbackToCrashConsistent gets a reference to the given NullableBool and assigns it to the FallbackToCrashConsistent field.
func (o *HypervEnvJobParameters) SetFallbackToCrashConsistent(v bool) {
	o.FallbackToCrashConsistent.Set(&v)
}
// SetFallbackToCrashConsistentNil sets the value for FallbackToCrashConsistent to be an explicit nil
func (o *HypervEnvJobParameters) SetFallbackToCrashConsistentNil() {
	o.FallbackToCrashConsistent.Set(nil)
}

// UnsetFallbackToCrashConsistent ensures that no value is present for FallbackToCrashConsistent, not even an explicit nil
func (o *HypervEnvJobParameters) UnsetFallbackToCrashConsistent() {
	o.FallbackToCrashConsistent.Unset()
}

func (o HypervEnvJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FallbackToCrashConsistent.IsSet() {
		toSerialize["fallbackToCrashConsistent"] = o.FallbackToCrashConsistent.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableHypervEnvJobParameters struct {
	value *HypervEnvJobParameters
	isSet bool
}

func (v NullableHypervEnvJobParameters) Get() *HypervEnvJobParameters {
	return v.value
}

func (v *NullableHypervEnvJobParameters) Set(val *HypervEnvJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableHypervEnvJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableHypervEnvJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHypervEnvJobParameters(val *HypervEnvJobParameters) *NullableHypervEnvJobParameters {
	return &NullableHypervEnvJobParameters{value: val, isSet: true}
}

func (v NullableHypervEnvJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHypervEnvJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


