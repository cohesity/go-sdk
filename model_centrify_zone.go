/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// CentrifyZone Specifies the properties associated to a Centrify zone of an Active Directory domain.
type CentrifyZone struct {
	// Specifies the schema of this Centrify zone. The below list of schemas and their values are taken from the document Centrify Server Suite 2016 Windows API Programmer's Guide https://docs.centrify.com/en/css/suite2016/centrify-win-progguide.pdf 'kCentrifyDynamicSchema_1_0' specifies dynamic schema, version 1.0. 'kCentrifyDynamicSchema_2_0' specifies dynamic schema, version 2.0. 'kCentrifyDynamicSchema_3_0' specifies dynamic schema, version 3.0. 'kCentrifyDynamicSchema_5_0' specifies dynamic schema, version 5.0. 'kCentrifySfu_3_0' specifies sfu schema, version 3.0. 'kCentrifySfu_3_0_V5' specifies sfu schema, 3.0.5. 'kCentrifySfu_4_0' specifies sfu schema, version 4.0. 'kCentrifyCdcRfc2307' specifies cdcrfc2307 schema. 'kCentrifyCdcRfc2307_2' specifies cdcrfc2307, version 2. 'kCentrifyCdcRfc2307_3' specifies cdcrfc2307, version 3.
	CentrifySchema NullableString `json:"centrifySchema,omitempty"`
	// Specifies a description of the Centrify zone.
	Description NullableString `json:"description,omitempty"`
	// Specifies the distinguished name of the Centrify zone.
	DistinguishedName NullableString `json:"distinguishedName,omitempty"`
}

// NewCentrifyZone instantiates a new CentrifyZone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentrifyZone() *CentrifyZone {
	this := CentrifyZone{}
	return &this
}

// NewCentrifyZoneWithDefaults instantiates a new CentrifyZone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentrifyZoneWithDefaults() *CentrifyZone {
	this := CentrifyZone{}
	return &this
}

// GetCentrifySchema returns the CentrifySchema field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CentrifyZone) GetCentrifySchema() string {
	if o == nil || o.CentrifySchema.Get() == nil {
		var ret string
		return ret
	}
	return *o.CentrifySchema.Get()
}

// GetCentrifySchemaOk returns a tuple with the CentrifySchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CentrifyZone) GetCentrifySchemaOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CentrifySchema.Get(), o.CentrifySchema.IsSet()
}

// HasCentrifySchema returns a boolean if a field has been set.
func (o *CentrifyZone) HasCentrifySchema() bool {
	if o != nil && o.CentrifySchema.IsSet() {
		return true
	}

	return false
}

// SetCentrifySchema gets a reference to the given NullableString and assigns it to the CentrifySchema field.
func (o *CentrifyZone) SetCentrifySchema(v string) {
	o.CentrifySchema.Set(&v)
}
// SetCentrifySchemaNil sets the value for CentrifySchema to be an explicit nil
func (o *CentrifyZone) SetCentrifySchemaNil() {
	o.CentrifySchema.Set(nil)
}

// UnsetCentrifySchema ensures that no value is present for CentrifySchema, not even an explicit nil
func (o *CentrifyZone) UnsetCentrifySchema() {
	o.CentrifySchema.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CentrifyZone) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CentrifyZone) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CentrifyZone) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CentrifyZone) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CentrifyZone) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CentrifyZone) UnsetDescription() {
	o.Description.Unset()
}

// GetDistinguishedName returns the DistinguishedName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CentrifyZone) GetDistinguishedName() string {
	if o == nil || o.DistinguishedName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DistinguishedName.Get()
}

// GetDistinguishedNameOk returns a tuple with the DistinguishedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CentrifyZone) GetDistinguishedNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DistinguishedName.Get(), o.DistinguishedName.IsSet()
}

// HasDistinguishedName returns a boolean if a field has been set.
func (o *CentrifyZone) HasDistinguishedName() bool {
	if o != nil && o.DistinguishedName.IsSet() {
		return true
	}

	return false
}

// SetDistinguishedName gets a reference to the given NullableString and assigns it to the DistinguishedName field.
func (o *CentrifyZone) SetDistinguishedName(v string) {
	o.DistinguishedName.Set(&v)
}
// SetDistinguishedNameNil sets the value for DistinguishedName to be an explicit nil
func (o *CentrifyZone) SetDistinguishedNameNil() {
	o.DistinguishedName.Set(nil)
}

// UnsetDistinguishedName ensures that no value is present for DistinguishedName, not even an explicit nil
func (o *CentrifyZone) UnsetDistinguishedName() {
	o.DistinguishedName.Unset()
}

func (o CentrifyZone) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CentrifySchema.IsSet() {
		toSerialize["centrifySchema"] = o.CentrifySchema.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DistinguishedName.IsSet() {
		toSerialize["distinguishedName"] = o.DistinguishedName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCentrifyZone struct {
	value *CentrifyZone
	isSet bool
}

func (v NullableCentrifyZone) Get() *CentrifyZone {
	return v.value
}

func (v *NullableCentrifyZone) Set(val *CentrifyZone) {
	v.value = val
	v.isSet = true
}

func (v NullableCentrifyZone) IsSet() bool {
	return v.isSet
}

func (v *NullableCentrifyZone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentrifyZone(val *CentrifyZone) *NullableCentrifyZone {
	return &NullableCentrifyZone{value: val, isSet: true}
}

func (v NullableCentrifyZone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentrifyZone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


