/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// RecoverDisksTaskStateProto struct for RecoverDisksTaskStateProto
type RecoverDisksTaskStateProto struct {
	RecoverVirtualDiskInfo *RecoverVirtualDiskInfoProto `json:"recoverVirtualDiskInfo,omitempty"`
	RecoverVirtualDiskParams *RecoverVirtualDiskParams `json:"recoverVirtualDiskParams,omitempty"`
}

// NewRecoverDisksTaskStateProto instantiates a new RecoverDisksTaskStateProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverDisksTaskStateProto() *RecoverDisksTaskStateProto {
	this := RecoverDisksTaskStateProto{}
	return &this
}

// NewRecoverDisksTaskStateProtoWithDefaults instantiates a new RecoverDisksTaskStateProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverDisksTaskStateProtoWithDefaults() *RecoverDisksTaskStateProto {
	this := RecoverDisksTaskStateProto{}
	return &this
}

// GetRecoverVirtualDiskInfo returns the RecoverVirtualDiskInfo field value if set, zero value otherwise.
func (o *RecoverDisksTaskStateProto) GetRecoverVirtualDiskInfo() RecoverVirtualDiskInfoProto {
	if o == nil || o.RecoverVirtualDiskInfo == nil {
		var ret RecoverVirtualDiskInfoProto
		return ret
	}
	return *o.RecoverVirtualDiskInfo
}

// GetRecoverVirtualDiskInfoOk returns a tuple with the RecoverVirtualDiskInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverDisksTaskStateProto) GetRecoverVirtualDiskInfoOk() (*RecoverVirtualDiskInfoProto, bool) {
	if o == nil || o.RecoverVirtualDiskInfo == nil {
		return nil, false
	}
	return o.RecoverVirtualDiskInfo, true
}

// HasRecoverVirtualDiskInfo returns a boolean if a field has been set.
func (o *RecoverDisksTaskStateProto) HasRecoverVirtualDiskInfo() bool {
	if o != nil && o.RecoverVirtualDiskInfo != nil {
		return true
	}

	return false
}

// SetRecoverVirtualDiskInfo gets a reference to the given RecoverVirtualDiskInfoProto and assigns it to the RecoverVirtualDiskInfo field.
func (o *RecoverDisksTaskStateProto) SetRecoverVirtualDiskInfo(v RecoverVirtualDiskInfoProto) {
	o.RecoverVirtualDiskInfo = &v
}

// GetRecoverVirtualDiskParams returns the RecoverVirtualDiskParams field value if set, zero value otherwise.
func (o *RecoverDisksTaskStateProto) GetRecoverVirtualDiskParams() RecoverVirtualDiskParams {
	if o == nil || o.RecoverVirtualDiskParams == nil {
		var ret RecoverVirtualDiskParams
		return ret
	}
	return *o.RecoverVirtualDiskParams
}

// GetRecoverVirtualDiskParamsOk returns a tuple with the RecoverVirtualDiskParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverDisksTaskStateProto) GetRecoverVirtualDiskParamsOk() (*RecoverVirtualDiskParams, bool) {
	if o == nil || o.RecoverVirtualDiskParams == nil {
		return nil, false
	}
	return o.RecoverVirtualDiskParams, true
}

// HasRecoverVirtualDiskParams returns a boolean if a field has been set.
func (o *RecoverDisksTaskStateProto) HasRecoverVirtualDiskParams() bool {
	if o != nil && o.RecoverVirtualDiskParams != nil {
		return true
	}

	return false
}

// SetRecoverVirtualDiskParams gets a reference to the given RecoverVirtualDiskParams and assigns it to the RecoverVirtualDiskParams field.
func (o *RecoverDisksTaskStateProto) SetRecoverVirtualDiskParams(v RecoverVirtualDiskParams) {
	o.RecoverVirtualDiskParams = &v
}

func (o RecoverDisksTaskStateProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RecoverVirtualDiskInfo != nil {
		toSerialize["recoverVirtualDiskInfo"] = o.RecoverVirtualDiskInfo
	}
	if o.RecoverVirtualDiskParams != nil {
		toSerialize["recoverVirtualDiskParams"] = o.RecoverVirtualDiskParams
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverDisksTaskStateProto struct {
	value *RecoverDisksTaskStateProto
	isSet bool
}

func (v NullableRecoverDisksTaskStateProto) Get() *RecoverDisksTaskStateProto {
	return v.value
}

func (v *NullableRecoverDisksTaskStateProto) Set(val *RecoverDisksTaskStateProto) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverDisksTaskStateProto) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverDisksTaskStateProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverDisksTaskStateProto(val *RecoverDisksTaskStateProto) *NullableRecoverDisksTaskStateProto {
	return &NullableRecoverDisksTaskStateProto{value: val, isSet: true}
}

func (v NullableRecoverDisksTaskStateProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverDisksTaskStateProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


