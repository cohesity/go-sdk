/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// AntivirusServiceConfig Specifies configuration settings for antivirus service provider.
type AntivirusServiceConfig struct {
	// Specifies the description of the Antivirus service. This could be any additional information admin might associate with the Antivirus service.
	Description NullableString `json:"description,omitempty"`
	// Specifies the ICAP uri for this Antivirus service. It is of the form icap://<ip-address>[:<port>]/<service>
	IcapUri NullableString `json:"icapUri"`
	// Specifies the tag of antivirus service. This is service-specific \"cookie\" sent from Antivirus server to clients that represents a service's current state. This tag validates that previous Antivirus server responses can still be considered fresh by an Antivirus client that may be caching them. If a change on the AV server invalidates previous responses, the AV server can invalidate portions of the Antivirus client's cache by changing its service tag.
	Tag NullableString `json:"tag,omitempty"`
	// Specifies the tag Id of antivirus service.
	TagId NullableInt64 `json:"tagId,omitempty"`
}

// NewAntivirusServiceConfig instantiates a new AntivirusServiceConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAntivirusServiceConfig(icapUri NullableString) *AntivirusServiceConfig {
	this := AntivirusServiceConfig{}
	this.IcapUri = icapUri
	return &this
}

// NewAntivirusServiceConfigWithDefaults instantiates a new AntivirusServiceConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAntivirusServiceConfigWithDefaults() *AntivirusServiceConfig {
	this := AntivirusServiceConfig{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusServiceConfig) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusServiceConfig) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *AntivirusServiceConfig) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *AntivirusServiceConfig) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *AntivirusServiceConfig) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *AntivirusServiceConfig) UnsetDescription() {
	o.Description.Unset()
}

// GetIcapUri returns the IcapUri field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AntivirusServiceConfig) GetIcapUri() string {
	if o == nil || o.IcapUri.Get() == nil {
		var ret string
		return ret
	}

	return *o.IcapUri.Get()
}

// GetIcapUriOk returns a tuple with the IcapUri field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusServiceConfig) GetIcapUriOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IcapUri.Get(), o.IcapUri.IsSet()
}

// SetIcapUri sets field value
func (o *AntivirusServiceConfig) SetIcapUri(v string) {
	o.IcapUri.Set(&v)
}

// GetTag returns the Tag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusServiceConfig) GetTag() string {
	if o == nil || o.Tag.Get() == nil {
		var ret string
		return ret
	}
	return *o.Tag.Get()
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusServiceConfig) GetTagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Tag.Get(), o.Tag.IsSet()
}

// HasTag returns a boolean if a field has been set.
func (o *AntivirusServiceConfig) HasTag() bool {
	if o != nil && o.Tag.IsSet() {
		return true
	}

	return false
}

// SetTag gets a reference to the given NullableString and assigns it to the Tag field.
func (o *AntivirusServiceConfig) SetTag(v string) {
	o.Tag.Set(&v)
}
// SetTagNil sets the value for Tag to be an explicit nil
func (o *AntivirusServiceConfig) SetTagNil() {
	o.Tag.Set(nil)
}

// UnsetTag ensures that no value is present for Tag, not even an explicit nil
func (o *AntivirusServiceConfig) UnsetTag() {
	o.Tag.Unset()
}

// GetTagId returns the TagId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusServiceConfig) GetTagId() int64 {
	if o == nil || o.TagId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TagId.Get()
}

// GetTagIdOk returns a tuple with the TagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusServiceConfig) GetTagIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TagId.Get(), o.TagId.IsSet()
}

// HasTagId returns a boolean if a field has been set.
func (o *AntivirusServiceConfig) HasTagId() bool {
	if o != nil && o.TagId.IsSet() {
		return true
	}

	return false
}

// SetTagId gets a reference to the given NullableInt64 and assigns it to the TagId field.
func (o *AntivirusServiceConfig) SetTagId(v int64) {
	o.TagId.Set(&v)
}
// SetTagIdNil sets the value for TagId to be an explicit nil
func (o *AntivirusServiceConfig) SetTagIdNil() {
	o.TagId.Set(nil)
}

// UnsetTagId ensures that no value is present for TagId, not even an explicit nil
func (o *AntivirusServiceConfig) UnsetTagId() {
	o.TagId.Unset()
}

func (o AntivirusServiceConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if true {
		toSerialize["icapUri"] = o.IcapUri.Get()
	}
	if o.Tag.IsSet() {
		toSerialize["tag"] = o.Tag.Get()
	}
	if o.TagId.IsSet() {
		toSerialize["tagId"] = o.TagId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAntivirusServiceConfig struct {
	value *AntivirusServiceConfig
	isSet bool
}

func (v NullableAntivirusServiceConfig) Get() *AntivirusServiceConfig {
	return v.value
}

func (v *NullableAntivirusServiceConfig) Set(val *AntivirusServiceConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAntivirusServiceConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAntivirusServiceConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAntivirusServiceConfig(val *AntivirusServiceConfig) *NullableAntivirusServiceConfig {
	return &NullableAntivirusServiceConfig{value: val, isSet: true}
}

func (v NullableAntivirusServiceConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAntivirusServiceConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


