/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// RestoreADAppObjectParams struct for RestoreADAppObjectParams
type RestoreADAppObjectParams struct {
	// Status of the AD object/attribute restore operation.
	AdRestoreStatusVec []ADRestoreStatus `json:"adRestoreStatusVec,omitempty"`
	AdUpdateOptions *ADUpdateRestoreTaskOptions `json:"adUpdateOptions,omitempty"`
	Credentials *Credentials `json:"credentials,omitempty"`
	// The ldap port on which the AD domain controller's NTDS database will be mounted.
	LdapPort NullableInt32 `json:"ldapPort,omitempty"`
	// Number of AD objects whose restore failed. Includes both AD object and attribute restored.
	NumFailed NullableInt32 `json:"numFailed,omitempty"`
	// Number of AD objects whose restores are currently running. Includes both AD object and attribute recoveries.
	NumRunning NullableInt32 `json:"numRunning,omitempty"`
	// Number of AD objects restored successfully. Includes both AD object and attribute restored.
	NumSuccessfull NullableInt32 `json:"numSuccessfull,omitempty"`
	// The following field is set if user wants to mount AD, restore AD objects and destory AD mount in single task.
	ShouldMountAndRestore NullableBool `json:"shouldMountAndRestore,omitempty"`
}

// NewRestoreADAppObjectParams instantiates a new RestoreADAppObjectParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreADAppObjectParams() *RestoreADAppObjectParams {
	this := RestoreADAppObjectParams{}
	return &this
}

// NewRestoreADAppObjectParamsWithDefaults instantiates a new RestoreADAppObjectParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreADAppObjectParamsWithDefaults() *RestoreADAppObjectParams {
	this := RestoreADAppObjectParams{}
	return &this
}

// GetAdRestoreStatusVec returns the AdRestoreStatusVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreADAppObjectParams) GetAdRestoreStatusVec() []ADRestoreStatus {
	if o == nil  {
		var ret []ADRestoreStatus
		return ret
	}
	return o.AdRestoreStatusVec
}

// GetAdRestoreStatusVecOk returns a tuple with the AdRestoreStatusVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreADAppObjectParams) GetAdRestoreStatusVecOk() (*[]ADRestoreStatus, bool) {
	if o == nil || o.AdRestoreStatusVec == nil {
		return nil, false
	}
	return &o.AdRestoreStatusVec, true
}

// HasAdRestoreStatusVec returns a boolean if a field has been set.
func (o *RestoreADAppObjectParams) HasAdRestoreStatusVec() bool {
	if o != nil && o.AdRestoreStatusVec != nil {
		return true
	}

	return false
}

// SetAdRestoreStatusVec gets a reference to the given []ADRestoreStatus and assigns it to the AdRestoreStatusVec field.
func (o *RestoreADAppObjectParams) SetAdRestoreStatusVec(v []ADRestoreStatus) {
	o.AdRestoreStatusVec = v
}

// GetAdUpdateOptions returns the AdUpdateOptions field value if set, zero value otherwise.
func (o *RestoreADAppObjectParams) GetAdUpdateOptions() ADUpdateRestoreTaskOptions {
	if o == nil || o.AdUpdateOptions == nil {
		var ret ADUpdateRestoreTaskOptions
		return ret
	}
	return *o.AdUpdateOptions
}

// GetAdUpdateOptionsOk returns a tuple with the AdUpdateOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreADAppObjectParams) GetAdUpdateOptionsOk() (*ADUpdateRestoreTaskOptions, bool) {
	if o == nil || o.AdUpdateOptions == nil {
		return nil, false
	}
	return o.AdUpdateOptions, true
}

// HasAdUpdateOptions returns a boolean if a field has been set.
func (o *RestoreADAppObjectParams) HasAdUpdateOptions() bool {
	if o != nil && o.AdUpdateOptions != nil {
		return true
	}

	return false
}

// SetAdUpdateOptions gets a reference to the given ADUpdateRestoreTaskOptions and assigns it to the AdUpdateOptions field.
func (o *RestoreADAppObjectParams) SetAdUpdateOptions(v ADUpdateRestoreTaskOptions) {
	o.AdUpdateOptions = &v
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *RestoreADAppObjectParams) GetCredentials() Credentials {
	if o == nil || o.Credentials == nil {
		var ret Credentials
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreADAppObjectParams) GetCredentialsOk() (*Credentials, bool) {
	if o == nil || o.Credentials == nil {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *RestoreADAppObjectParams) HasCredentials() bool {
	if o != nil && o.Credentials != nil {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given Credentials and assigns it to the Credentials field.
func (o *RestoreADAppObjectParams) SetCredentials(v Credentials) {
	o.Credentials = &v
}

// GetLdapPort returns the LdapPort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreADAppObjectParams) GetLdapPort() int32 {
	if o == nil || o.LdapPort.Get() == nil {
		var ret int32
		return ret
	}
	return *o.LdapPort.Get()
}

// GetLdapPortOk returns a tuple with the LdapPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreADAppObjectParams) GetLdapPortOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LdapPort.Get(), o.LdapPort.IsSet()
}

// HasLdapPort returns a boolean if a field has been set.
func (o *RestoreADAppObjectParams) HasLdapPort() bool {
	if o != nil && o.LdapPort.IsSet() {
		return true
	}

	return false
}

// SetLdapPort gets a reference to the given NullableInt32 and assigns it to the LdapPort field.
func (o *RestoreADAppObjectParams) SetLdapPort(v int32) {
	o.LdapPort.Set(&v)
}
// SetLdapPortNil sets the value for LdapPort to be an explicit nil
func (o *RestoreADAppObjectParams) SetLdapPortNil() {
	o.LdapPort.Set(nil)
}

// UnsetLdapPort ensures that no value is present for LdapPort, not even an explicit nil
func (o *RestoreADAppObjectParams) UnsetLdapPort() {
	o.LdapPort.Unset()
}

// GetNumFailed returns the NumFailed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreADAppObjectParams) GetNumFailed() int32 {
	if o == nil || o.NumFailed.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NumFailed.Get()
}

// GetNumFailedOk returns a tuple with the NumFailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreADAppObjectParams) GetNumFailedOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumFailed.Get(), o.NumFailed.IsSet()
}

// HasNumFailed returns a boolean if a field has been set.
func (o *RestoreADAppObjectParams) HasNumFailed() bool {
	if o != nil && o.NumFailed.IsSet() {
		return true
	}

	return false
}

// SetNumFailed gets a reference to the given NullableInt32 and assigns it to the NumFailed field.
func (o *RestoreADAppObjectParams) SetNumFailed(v int32) {
	o.NumFailed.Set(&v)
}
// SetNumFailedNil sets the value for NumFailed to be an explicit nil
func (o *RestoreADAppObjectParams) SetNumFailedNil() {
	o.NumFailed.Set(nil)
}

// UnsetNumFailed ensures that no value is present for NumFailed, not even an explicit nil
func (o *RestoreADAppObjectParams) UnsetNumFailed() {
	o.NumFailed.Unset()
}

// GetNumRunning returns the NumRunning field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreADAppObjectParams) GetNumRunning() int32 {
	if o == nil || o.NumRunning.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NumRunning.Get()
}

// GetNumRunningOk returns a tuple with the NumRunning field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreADAppObjectParams) GetNumRunningOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumRunning.Get(), o.NumRunning.IsSet()
}

// HasNumRunning returns a boolean if a field has been set.
func (o *RestoreADAppObjectParams) HasNumRunning() bool {
	if o != nil && o.NumRunning.IsSet() {
		return true
	}

	return false
}

// SetNumRunning gets a reference to the given NullableInt32 and assigns it to the NumRunning field.
func (o *RestoreADAppObjectParams) SetNumRunning(v int32) {
	o.NumRunning.Set(&v)
}
// SetNumRunningNil sets the value for NumRunning to be an explicit nil
func (o *RestoreADAppObjectParams) SetNumRunningNil() {
	o.NumRunning.Set(nil)
}

// UnsetNumRunning ensures that no value is present for NumRunning, not even an explicit nil
func (o *RestoreADAppObjectParams) UnsetNumRunning() {
	o.NumRunning.Unset()
}

// GetNumSuccessfull returns the NumSuccessfull field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreADAppObjectParams) GetNumSuccessfull() int32 {
	if o == nil || o.NumSuccessfull.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NumSuccessfull.Get()
}

// GetNumSuccessfullOk returns a tuple with the NumSuccessfull field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreADAppObjectParams) GetNumSuccessfullOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumSuccessfull.Get(), o.NumSuccessfull.IsSet()
}

// HasNumSuccessfull returns a boolean if a field has been set.
func (o *RestoreADAppObjectParams) HasNumSuccessfull() bool {
	if o != nil && o.NumSuccessfull.IsSet() {
		return true
	}

	return false
}

// SetNumSuccessfull gets a reference to the given NullableInt32 and assigns it to the NumSuccessfull field.
func (o *RestoreADAppObjectParams) SetNumSuccessfull(v int32) {
	o.NumSuccessfull.Set(&v)
}
// SetNumSuccessfullNil sets the value for NumSuccessfull to be an explicit nil
func (o *RestoreADAppObjectParams) SetNumSuccessfullNil() {
	o.NumSuccessfull.Set(nil)
}

// UnsetNumSuccessfull ensures that no value is present for NumSuccessfull, not even an explicit nil
func (o *RestoreADAppObjectParams) UnsetNumSuccessfull() {
	o.NumSuccessfull.Unset()
}

// GetShouldMountAndRestore returns the ShouldMountAndRestore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreADAppObjectParams) GetShouldMountAndRestore() bool {
	if o == nil || o.ShouldMountAndRestore.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ShouldMountAndRestore.Get()
}

// GetShouldMountAndRestoreOk returns a tuple with the ShouldMountAndRestore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreADAppObjectParams) GetShouldMountAndRestoreOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ShouldMountAndRestore.Get(), o.ShouldMountAndRestore.IsSet()
}

// HasShouldMountAndRestore returns a boolean if a field has been set.
func (o *RestoreADAppObjectParams) HasShouldMountAndRestore() bool {
	if o != nil && o.ShouldMountAndRestore.IsSet() {
		return true
	}

	return false
}

// SetShouldMountAndRestore gets a reference to the given NullableBool and assigns it to the ShouldMountAndRestore field.
func (o *RestoreADAppObjectParams) SetShouldMountAndRestore(v bool) {
	o.ShouldMountAndRestore.Set(&v)
}
// SetShouldMountAndRestoreNil sets the value for ShouldMountAndRestore to be an explicit nil
func (o *RestoreADAppObjectParams) SetShouldMountAndRestoreNil() {
	o.ShouldMountAndRestore.Set(nil)
}

// UnsetShouldMountAndRestore ensures that no value is present for ShouldMountAndRestore, not even an explicit nil
func (o *RestoreADAppObjectParams) UnsetShouldMountAndRestore() {
	o.ShouldMountAndRestore.Unset()
}

func (o RestoreADAppObjectParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdRestoreStatusVec != nil {
		toSerialize["adRestoreStatusVec"] = o.AdRestoreStatusVec
	}
	if o.AdUpdateOptions != nil {
		toSerialize["adUpdateOptions"] = o.AdUpdateOptions
	}
	if o.Credentials != nil {
		toSerialize["credentials"] = o.Credentials
	}
	if o.LdapPort.IsSet() {
		toSerialize["ldapPort"] = o.LdapPort.Get()
	}
	if o.NumFailed.IsSet() {
		toSerialize["numFailed"] = o.NumFailed.Get()
	}
	if o.NumRunning.IsSet() {
		toSerialize["numRunning"] = o.NumRunning.Get()
	}
	if o.NumSuccessfull.IsSet() {
		toSerialize["numSuccessfull"] = o.NumSuccessfull.Get()
	}
	if o.ShouldMountAndRestore.IsSet() {
		toSerialize["shouldMountAndRestore"] = o.ShouldMountAndRestore.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreADAppObjectParams struct {
	value *RestoreADAppObjectParams
	isSet bool
}

func (v NullableRestoreADAppObjectParams) Get() *RestoreADAppObjectParams {
	return v.value
}

func (v *NullableRestoreADAppObjectParams) Set(val *RestoreADAppObjectParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreADAppObjectParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreADAppObjectParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreADAppObjectParams(val *RestoreADAppObjectParams) *NullableRestoreADAppObjectParams {
	return &NullableRestoreADAppObjectParams{value: val, isSet: true}
}

func (v NullableRestoreADAppObjectParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreADAppObjectParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


