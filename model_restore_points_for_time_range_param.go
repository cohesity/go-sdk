/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// RestorePointsForTimeRangeParam Specifies the request parameters to restore points for time range API.
type RestorePointsForTimeRangeParam struct {
	// Specifies the end time specified as a Unix epoch Timestamp (in microseconds).
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	// Specifies the protection source environment type. Supported environment types such as 'kView', 'kSQL', 'kVMware', etc. NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter. 'kVMware' indicates the VMware Protection Source environment. 'kHyperV' indicates the HyperV Protection Source environment. 'kSQL' indicates the SQL Protection Source environment. 'kView' indicates the View Protection Source environment. 'kPuppeteer' indicates the Cohesity's Remote Adapter. 'kPhysical' indicates the physical Protection Source environment. 'kPure' indicates the Pure Storage Protection Source environment. 'Nimble' indicates the Nimble Storage Protection Source environment. 'kAzure' indicates the Microsoft's Azure Protection Source environment. 'kNetapp' indicates the Netapp Protection Source environment. 'kAgent' indicates the Agent Protection Source environment. 'kGenericNas' indicates the Generic Network Attached Storage Protection Source environment. 'kAcropolis' indicates the Acropolis Protection Source environment. 'kPhsicalFiles' indicates the Physical Files Protection Source environment. 'kIsilon' indicates the Dell EMC's Isilon Protection Source environment. 'kGPFS' indicates IBM's GPFS Protection Source environment. 'kKVM' indicates the KVM Protection Source environment. 'kAWS' indicates the AWS Protection Source environment. 'kExchange' indicates the Exchange Protection Source environment. 'kHyperVVSS' indicates the HyperV VSS Protection Source environment. 'kOracle' indicates the Oracle Protection Source environment. 'kGCP' indicates the Google Cloud Platform Protection Source environment. 'kFlashBlade' indicates the Flash Blade Protection Source environment. 'kAWSNative' indicates the AWS Native Protection Source environment. 'kO365' indicates the Office 365 Protection Source environment. 'kO365Outlook' indicates Office 365 outlook Protection Source environment. 'kHyperFlex' indicates the Hyper Flex Protection Source environment. 'kGCPNative' indicates the GCP Native Protection Source environment. 'kAzureNative' indicates the Azure Native Protection Source environment. 'kKubernetes' indicates a Kubernetes Protection Source environment. 'kElastifile' indicates Elastifile Protection Source environment. 'kAD' indicates Active Directory Protection Source environment. 'kRDSSnapshotManager' indicates AWS RDS Protection Source environment. 'kCassandra' indicates Cassandra Protection Source environment. 'kMongoDB' indicates MongoDB Protection Source environment. 'kCouchbase' indicates Couchbase Protection Source environment. 'kHdfs' indicates Hdfs Protection Source environment. 'kHive' indicates Hive Protection Source environment. 'kHBase' indicates HBase Protection Source environment.
	Environment NullableString `json:"environment,omitempty"`
	// Specifies the jobs for which to get the full snapshot information.
	JobUids []UniversalId `json:"jobUids"`
	// Specifies the id of the Protection Source which is to be restored.
	ProtectionSourceId NullableInt64 `json:"protectionSourceId,omitempty"`
	// Specifies the start time specified as a Unix epoch Timestamp (in microseconds).
	StartTimeUsecs NullableInt64 `json:"startTimeUsecs,omitempty"`
}

// NewRestorePointsForTimeRangeParam instantiates a new RestorePointsForTimeRangeParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestorePointsForTimeRangeParam(jobUids []UniversalId) *RestorePointsForTimeRangeParam {
	this := RestorePointsForTimeRangeParam{}
	this.JobUids = jobUids
	return &this
}

// NewRestorePointsForTimeRangeParamWithDefaults instantiates a new RestorePointsForTimeRangeParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestorePointsForTimeRangeParamWithDefaults() *RestorePointsForTimeRangeParam {
	this := RestorePointsForTimeRangeParam{}
	return &this
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestorePointsForTimeRangeParam) GetEndTimeUsecs() int64 {
	if o == nil || o.EndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestorePointsForTimeRangeParam) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *RestorePointsForTimeRangeParam) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *RestorePointsForTimeRangeParam) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *RestorePointsForTimeRangeParam) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *RestorePointsForTimeRangeParam) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetEnvironment returns the Environment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestorePointsForTimeRangeParam) GetEnvironment() string {
	if o == nil || o.Environment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestorePointsForTimeRangeParam) GetEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// HasEnvironment returns a boolean if a field has been set.
func (o *RestorePointsForTimeRangeParam) HasEnvironment() bool {
	if o != nil && o.Environment.IsSet() {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given NullableString and assigns it to the Environment field.
func (o *RestorePointsForTimeRangeParam) SetEnvironment(v string) {
	o.Environment.Set(&v)
}
// SetEnvironmentNil sets the value for Environment to be an explicit nil
func (o *RestorePointsForTimeRangeParam) SetEnvironmentNil() {
	o.Environment.Set(nil)
}

// UnsetEnvironment ensures that no value is present for Environment, not even an explicit nil
func (o *RestorePointsForTimeRangeParam) UnsetEnvironment() {
	o.Environment.Unset()
}

// GetJobUids returns the JobUids field value
// If the value is explicit nil, the zero value for []UniversalId will be returned
func (o *RestorePointsForTimeRangeParam) GetJobUids() []UniversalId {
	if o == nil {
		var ret []UniversalId
		return ret
	}

	return o.JobUids
}

// GetJobUidsOk returns a tuple with the JobUids field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestorePointsForTimeRangeParam) GetJobUidsOk() (*[]UniversalId, bool) {
	if o == nil || o.JobUids == nil {
		return nil, false
	}
	return &o.JobUids, true
}

// SetJobUids sets field value
func (o *RestorePointsForTimeRangeParam) SetJobUids(v []UniversalId) {
	o.JobUids = v
}

// GetProtectionSourceId returns the ProtectionSourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestorePointsForTimeRangeParam) GetProtectionSourceId() int64 {
	if o == nil || o.ProtectionSourceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ProtectionSourceId.Get()
}

// GetProtectionSourceIdOk returns a tuple with the ProtectionSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestorePointsForTimeRangeParam) GetProtectionSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionSourceId.Get(), o.ProtectionSourceId.IsSet()
}

// HasProtectionSourceId returns a boolean if a field has been set.
func (o *RestorePointsForTimeRangeParam) HasProtectionSourceId() bool {
	if o != nil && o.ProtectionSourceId.IsSet() {
		return true
	}

	return false
}

// SetProtectionSourceId gets a reference to the given NullableInt64 and assigns it to the ProtectionSourceId field.
func (o *RestorePointsForTimeRangeParam) SetProtectionSourceId(v int64) {
	o.ProtectionSourceId.Set(&v)
}
// SetProtectionSourceIdNil sets the value for ProtectionSourceId to be an explicit nil
func (o *RestorePointsForTimeRangeParam) SetProtectionSourceIdNil() {
	o.ProtectionSourceId.Set(nil)
}

// UnsetProtectionSourceId ensures that no value is present for ProtectionSourceId, not even an explicit nil
func (o *RestorePointsForTimeRangeParam) UnsetProtectionSourceId() {
	o.ProtectionSourceId.Unset()
}

// GetStartTimeUsecs returns the StartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestorePointsForTimeRangeParam) GetStartTimeUsecs() int64 {
	if o == nil || o.StartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StartTimeUsecs.Get()
}

// GetStartTimeUsecsOk returns a tuple with the StartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestorePointsForTimeRangeParam) GetStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartTimeUsecs.Get(), o.StartTimeUsecs.IsSet()
}

// HasStartTimeUsecs returns a boolean if a field has been set.
func (o *RestorePointsForTimeRangeParam) HasStartTimeUsecs() bool {
	if o != nil && o.StartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the StartTimeUsecs field.
func (o *RestorePointsForTimeRangeParam) SetStartTimeUsecs(v int64) {
	o.StartTimeUsecs.Set(&v)
}
// SetStartTimeUsecsNil sets the value for StartTimeUsecs to be an explicit nil
func (o *RestorePointsForTimeRangeParam) SetStartTimeUsecsNil() {
	o.StartTimeUsecs.Set(nil)
}

// UnsetStartTimeUsecs ensures that no value is present for StartTimeUsecs, not even an explicit nil
func (o *RestorePointsForTimeRangeParam) UnsetStartTimeUsecs() {
	o.StartTimeUsecs.Unset()
}

func (o RestorePointsForTimeRangeParam) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.Environment.IsSet() {
		toSerialize["environment"] = o.Environment.Get()
	}
	if o.JobUids != nil {
		toSerialize["jobUids"] = o.JobUids
	}
	if o.ProtectionSourceId.IsSet() {
		toSerialize["protectionSourceId"] = o.ProtectionSourceId.Get()
	}
	if o.StartTimeUsecs.IsSet() {
		toSerialize["startTimeUsecs"] = o.StartTimeUsecs.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRestorePointsForTimeRangeParam struct {
	value *RestorePointsForTimeRangeParam
	isSet bool
}

func (v NullableRestorePointsForTimeRangeParam) Get() *RestorePointsForTimeRangeParam {
	return v.value
}

func (v *NullableRestorePointsForTimeRangeParam) Set(val *RestorePointsForTimeRangeParam) {
	v.value = val
	v.isSet = true
}

func (v NullableRestorePointsForTimeRangeParam) IsSet() bool {
	return v.isSet
}

func (v *NullableRestorePointsForTimeRangeParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestorePointsForTimeRangeParam(val *RestorePointsForTimeRangeParam) *NullableRestorePointsForTimeRangeParam {
	return &NullableRestorePointsForTimeRangeParam{value: val, isSet: true}
}

func (v NullableRestorePointsForTimeRangeParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestorePointsForTimeRangeParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


