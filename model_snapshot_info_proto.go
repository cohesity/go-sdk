/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// SnapshotInfoProto Each available extension is listed below along with the location of the proto file (relative to magneto/connectors) where it is defined. The only exception is view.proto and physical.proto which reside in magneto/base.  SnapshotInfoProto extension                     Location              Extn ============================================================================= vmware::SnapshotInfo::vmware_snapshot_info     vmware/vmware.proto       100 sql::SnapshotInfo::sql_snapshot_info           sql/sql.proto             101 view::SnapshotInfo::view_snapshot_info         base/view.proto           102 physical::SnapshotInfo::physical_snapshot_info base/physical.proto       103 san::SnapshotInfo::san_snapshot_info           san/san.proto             104 file::SnapshotInfo::file_snapshot_info         file/file.proto           105 hyperv::SnapshotInfo::hyperv_snapshot_info     hyperv/hyperv.proto       106 acropolis::SnapshotInfo:: acropolis_snapshot_info                        acropolis/acropolis.proto 107 kvm::SnapshotInfo::kvm_snapshot_info           kvm/kvm.proto             108 app_file::SnapshotInfo::app_file_snapshot_info app_file/app_file.proto   109 oracle::SnapshotInfo::oracle_snapshot_info     oracle/oracle.proto       110 aws::SnapshotInfo::aws_snapshot_info           aws/aws.proto             111 outlook::SnapshotInfo::outlook_snapshot_info   outlook/outlook.proto     112 azure::SnapshotInfo::azure_snapshot_info       azure/azure.proto         113 gcp::SnapshotInfo::gcp_snapshot_info           gcp/gcp.proto             114 ad::SnapshotInfo::ad_snapshot_info             ad/ad.proto               115 MSGraph::SnapshotInfo::one_drive_snapshot_info ms_graph/graph.proto      116 kubernetes::SnapshotInfo:: kubernetes_snapshot_info kubernetes/kubernetes.proto 117 aws::RDSSnapshotInfo::rds_snapshot_info        aws/aws.proto             118 o365::SnapshotInfo::o365_snapshot_info         o365/o365.proto           119 exchange::SnapshotInfo::exchange_snapshot_info exchange/exchange.proto   120 o365::SharepointSnapshotInfo::sharepoint_snapshot_info o365/o365.proto           121 MSGraph::SharepointListSnapshotInfo::sharepoint_list_snapshot_info ms_graph/graph.proto      122 cdp::SnapshotInfo::cdp_snapshot_info           base/cdp.proto            123 imanis::SnapshotInfo::nosql_snapshot_info      imanis/nosql.proto        124 o365::PublicFolderSnapshotInfo::public_folder_snapshot_info o365/o365.proto           125 =============================================================================
type SnapshotInfoProto struct {
	// The name of the rocksdb directory for errors seen during this backup, stored in 'config' directory of the current view.
	ErrorRocksdbName NullableString `json:"errorRocksdbName,omitempty"`
	// This field is only applicable for NAS and file backup jobs. It indicates whether the file walk portion of the backup has completed.
	FileWalkDone NullableBool `json:"fileWalkDone,omitempty"`
	// Number of application instances backed up by this task. For example, if the environment type is kSQL, this number is for the SQL server instances.
	NumAppInstances NullableInt32 `json:"numAppInstances,omitempty"`
	// Number of application objects in total backed up by this task. For example, if the environment type is kSQL, this number is for all of the SQL server databases
	NumAppObjects NullableInt32 `json:"numAppObjects,omitempty"`
	PostBackupScriptStatus *ScriptExecutionStatus `json:"postBackupScriptStatus,omitempty"`
	PreBackupScriptStatus *ScriptExecutionStatus `json:"preBackupScriptStatus,omitempty"`
	// This is the path relative to 'root_path' under which the snapshot lives. This does not begin with a '/' and is of the form foo/bar/baz.
	RelativeSnapshotDir NullableString `json:"relativeSnapshotDir,omitempty"`
	// The root path under which the snapshot is stored. This is of the form \"/ViewBox/ViewName/fs\".
	RootPath NullableString `json:"rootPath,omitempty"`
	// If this backup task stores any auxiliary state in Scribe table, this field will be populated with the column key in that table where such state is stored. Data stored in the column is extension of SnapshotScribeInfoProto message.
	ScribeTableColumn NullableString `json:"scribeTableColumn,omitempty"`
	// If this backup task stores any auxiliary state in Scribe table, this field will be populated with the row key in that table where such state is stored.
	ScribeTableRow NullableString `json:"scribeTableRow,omitempty"`
	// This is the timestamp at which the slave task started.
	SlaveTaskStartTimeUsecs NullableInt64 `json:"slaveTaskStartTimeUsecs,omitempty"`
	SnapshotType *ObjectSnapshotType `json:"snapshotType,omitempty"`
	// The source snapshot create time.
	SourceSnapshotCreateTimeUsecs NullableInt64 `json:"sourceSnapshotCreateTimeUsecs,omitempty"`
	// This filed is only applicable for NAS when we do backup from Readonly/DataProtect volume where we use already created snapshot on the source.
	SourceSnapshotName NullableString `json:"sourceSnapshotName,omitempty"`
	StorageSnapshotProvider *StorageSnapshotProviderParams `json:"storageSnapshotProvider,omitempty"`
	// Specifies the target type for the task. The field is only valid if the task has got a permit.
	TargetType NullableInt32 `json:"targetType,omitempty"`
	// Contains the information regarding number of bytes that are read from the source (such as VM) so far.
	TotalBytesReadFromSource NullableInt64 `json:"totalBytesReadFromSource,omitempty"`
	// Contains the total number of bytes that will be read from the source (such as VM) for this snapshot.
	TotalBytesToReadFromSource NullableInt64 `json:"totalBytesToReadFromSource,omitempty"`
	// The total number of file and directory entities that have changed since last backup. Only applicable to file based backups.
	TotalChangedEntityCount NullableInt64 `json:"totalChangedEntityCount,omitempty"`
	// The total number of file and directory entities visited in this backup. Only applicable to file based backups.
	TotalEntityCount NullableInt64 `json:"totalEntityCount,omitempty"`
	// Logical size of the source whose snapshot is being taken. This is the amount of data we would have read from the source had this been a full backup.
	TotalLogicalBackupSizeBytes NullableInt64 `json:"totalLogicalBackupSizeBytes,omitempty"`
	// Contains the information regarding number of bytes that the source (such as VM) has taken up on the primary storage.
	TotalPrimaryPhysicalSizeBytes NullableInt64 `json:"totalPrimaryPhysicalSizeBytes,omitempty"`
	// The type of environment this snapshot info pertains to.
	Type NullableInt32 `json:"type,omitempty"`
	// Whether during the backup, the backup view's case insensitivity property has been altered. If so, Madrox needs to take corresponding actions during replication.
	ViewCaseInsensitivityAltered NullableBool `json:"viewCaseInsensitivityAltered,omitempty"`
	// The view name under which the snapshot was created. NOTE: This is populated only for View, Puppeteer, NAS and Oracle backup.
	ViewName NullableString `json:"viewName,omitempty"`
	// The view name under which the snapshot of the migrated data was created. NOTE: This is populated only for data migration tasks.
	ViewNameToGc NullableString `json:"viewNameToGc,omitempty"`
	// Warnings if any. These warnings will be propogated to the UI by master.
	Warnings []ErrorProto `json:"warnings,omitempty"`
}

// NewSnapshotInfoProto instantiates a new SnapshotInfoProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotInfoProto() *SnapshotInfoProto {
	this := SnapshotInfoProto{}
	return &this
}

// NewSnapshotInfoProtoWithDefaults instantiates a new SnapshotInfoProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotInfoProtoWithDefaults() *SnapshotInfoProto {
	this := SnapshotInfoProto{}
	return &this
}

// GetErrorRocksdbName returns the ErrorRocksdbName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetErrorRocksdbName() string {
	if o == nil || o.ErrorRocksdbName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ErrorRocksdbName.Get()
}

// GetErrorRocksdbNameOk returns a tuple with the ErrorRocksdbName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetErrorRocksdbNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ErrorRocksdbName.Get(), o.ErrorRocksdbName.IsSet()
}

// HasErrorRocksdbName returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasErrorRocksdbName() bool {
	if o != nil && o.ErrorRocksdbName.IsSet() {
		return true
	}

	return false
}

// SetErrorRocksdbName gets a reference to the given NullableString and assigns it to the ErrorRocksdbName field.
func (o *SnapshotInfoProto) SetErrorRocksdbName(v string) {
	o.ErrorRocksdbName.Set(&v)
}
// SetErrorRocksdbNameNil sets the value for ErrorRocksdbName to be an explicit nil
func (o *SnapshotInfoProto) SetErrorRocksdbNameNil() {
	o.ErrorRocksdbName.Set(nil)
}

// UnsetErrorRocksdbName ensures that no value is present for ErrorRocksdbName, not even an explicit nil
func (o *SnapshotInfoProto) UnsetErrorRocksdbName() {
	o.ErrorRocksdbName.Unset()
}

// GetFileWalkDone returns the FileWalkDone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetFileWalkDone() bool {
	if o == nil || o.FileWalkDone.Get() == nil {
		var ret bool
		return ret
	}
	return *o.FileWalkDone.Get()
}

// GetFileWalkDoneOk returns a tuple with the FileWalkDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetFileWalkDoneOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FileWalkDone.Get(), o.FileWalkDone.IsSet()
}

// HasFileWalkDone returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasFileWalkDone() bool {
	if o != nil && o.FileWalkDone.IsSet() {
		return true
	}

	return false
}

// SetFileWalkDone gets a reference to the given NullableBool and assigns it to the FileWalkDone field.
func (o *SnapshotInfoProto) SetFileWalkDone(v bool) {
	o.FileWalkDone.Set(&v)
}
// SetFileWalkDoneNil sets the value for FileWalkDone to be an explicit nil
func (o *SnapshotInfoProto) SetFileWalkDoneNil() {
	o.FileWalkDone.Set(nil)
}

// UnsetFileWalkDone ensures that no value is present for FileWalkDone, not even an explicit nil
func (o *SnapshotInfoProto) UnsetFileWalkDone() {
	o.FileWalkDone.Unset()
}

// GetNumAppInstances returns the NumAppInstances field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetNumAppInstances() int32 {
	if o == nil || o.NumAppInstances.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NumAppInstances.Get()
}

// GetNumAppInstancesOk returns a tuple with the NumAppInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetNumAppInstancesOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumAppInstances.Get(), o.NumAppInstances.IsSet()
}

// HasNumAppInstances returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasNumAppInstances() bool {
	if o != nil && o.NumAppInstances.IsSet() {
		return true
	}

	return false
}

// SetNumAppInstances gets a reference to the given NullableInt32 and assigns it to the NumAppInstances field.
func (o *SnapshotInfoProto) SetNumAppInstances(v int32) {
	o.NumAppInstances.Set(&v)
}
// SetNumAppInstancesNil sets the value for NumAppInstances to be an explicit nil
func (o *SnapshotInfoProto) SetNumAppInstancesNil() {
	o.NumAppInstances.Set(nil)
}

// UnsetNumAppInstances ensures that no value is present for NumAppInstances, not even an explicit nil
func (o *SnapshotInfoProto) UnsetNumAppInstances() {
	o.NumAppInstances.Unset()
}

// GetNumAppObjects returns the NumAppObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetNumAppObjects() int32 {
	if o == nil || o.NumAppObjects.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NumAppObjects.Get()
}

// GetNumAppObjectsOk returns a tuple with the NumAppObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetNumAppObjectsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumAppObjects.Get(), o.NumAppObjects.IsSet()
}

// HasNumAppObjects returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasNumAppObjects() bool {
	if o != nil && o.NumAppObjects.IsSet() {
		return true
	}

	return false
}

// SetNumAppObjects gets a reference to the given NullableInt32 and assigns it to the NumAppObjects field.
func (o *SnapshotInfoProto) SetNumAppObjects(v int32) {
	o.NumAppObjects.Set(&v)
}
// SetNumAppObjectsNil sets the value for NumAppObjects to be an explicit nil
func (o *SnapshotInfoProto) SetNumAppObjectsNil() {
	o.NumAppObjects.Set(nil)
}

// UnsetNumAppObjects ensures that no value is present for NumAppObjects, not even an explicit nil
func (o *SnapshotInfoProto) UnsetNumAppObjects() {
	o.NumAppObjects.Unset()
}

// GetPostBackupScriptStatus returns the PostBackupScriptStatus field value if set, zero value otherwise.
func (o *SnapshotInfoProto) GetPostBackupScriptStatus() ScriptExecutionStatus {
	if o == nil || o.PostBackupScriptStatus == nil {
		var ret ScriptExecutionStatus
		return ret
	}
	return *o.PostBackupScriptStatus
}

// GetPostBackupScriptStatusOk returns a tuple with the PostBackupScriptStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotInfoProto) GetPostBackupScriptStatusOk() (*ScriptExecutionStatus, bool) {
	if o == nil || o.PostBackupScriptStatus == nil {
		return nil, false
	}
	return o.PostBackupScriptStatus, true
}

// HasPostBackupScriptStatus returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasPostBackupScriptStatus() bool {
	if o != nil && o.PostBackupScriptStatus != nil {
		return true
	}

	return false
}

// SetPostBackupScriptStatus gets a reference to the given ScriptExecutionStatus and assigns it to the PostBackupScriptStatus field.
func (o *SnapshotInfoProto) SetPostBackupScriptStatus(v ScriptExecutionStatus) {
	o.PostBackupScriptStatus = &v
}

// GetPreBackupScriptStatus returns the PreBackupScriptStatus field value if set, zero value otherwise.
func (o *SnapshotInfoProto) GetPreBackupScriptStatus() ScriptExecutionStatus {
	if o == nil || o.PreBackupScriptStatus == nil {
		var ret ScriptExecutionStatus
		return ret
	}
	return *o.PreBackupScriptStatus
}

// GetPreBackupScriptStatusOk returns a tuple with the PreBackupScriptStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotInfoProto) GetPreBackupScriptStatusOk() (*ScriptExecutionStatus, bool) {
	if o == nil || o.PreBackupScriptStatus == nil {
		return nil, false
	}
	return o.PreBackupScriptStatus, true
}

// HasPreBackupScriptStatus returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasPreBackupScriptStatus() bool {
	if o != nil && o.PreBackupScriptStatus != nil {
		return true
	}

	return false
}

// SetPreBackupScriptStatus gets a reference to the given ScriptExecutionStatus and assigns it to the PreBackupScriptStatus field.
func (o *SnapshotInfoProto) SetPreBackupScriptStatus(v ScriptExecutionStatus) {
	o.PreBackupScriptStatus = &v
}

// GetRelativeSnapshotDir returns the RelativeSnapshotDir field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetRelativeSnapshotDir() string {
	if o == nil || o.RelativeSnapshotDir.Get() == nil {
		var ret string
		return ret
	}
	return *o.RelativeSnapshotDir.Get()
}

// GetRelativeSnapshotDirOk returns a tuple with the RelativeSnapshotDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetRelativeSnapshotDirOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RelativeSnapshotDir.Get(), o.RelativeSnapshotDir.IsSet()
}

// HasRelativeSnapshotDir returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasRelativeSnapshotDir() bool {
	if o != nil && o.RelativeSnapshotDir.IsSet() {
		return true
	}

	return false
}

// SetRelativeSnapshotDir gets a reference to the given NullableString and assigns it to the RelativeSnapshotDir field.
func (o *SnapshotInfoProto) SetRelativeSnapshotDir(v string) {
	o.RelativeSnapshotDir.Set(&v)
}
// SetRelativeSnapshotDirNil sets the value for RelativeSnapshotDir to be an explicit nil
func (o *SnapshotInfoProto) SetRelativeSnapshotDirNil() {
	o.RelativeSnapshotDir.Set(nil)
}

// UnsetRelativeSnapshotDir ensures that no value is present for RelativeSnapshotDir, not even an explicit nil
func (o *SnapshotInfoProto) UnsetRelativeSnapshotDir() {
	o.RelativeSnapshotDir.Unset()
}

// GetRootPath returns the RootPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetRootPath() string {
	if o == nil || o.RootPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.RootPath.Get()
}

// GetRootPathOk returns a tuple with the RootPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetRootPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RootPath.Get(), o.RootPath.IsSet()
}

// HasRootPath returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasRootPath() bool {
	if o != nil && o.RootPath.IsSet() {
		return true
	}

	return false
}

// SetRootPath gets a reference to the given NullableString and assigns it to the RootPath field.
func (o *SnapshotInfoProto) SetRootPath(v string) {
	o.RootPath.Set(&v)
}
// SetRootPathNil sets the value for RootPath to be an explicit nil
func (o *SnapshotInfoProto) SetRootPathNil() {
	o.RootPath.Set(nil)
}

// UnsetRootPath ensures that no value is present for RootPath, not even an explicit nil
func (o *SnapshotInfoProto) UnsetRootPath() {
	o.RootPath.Unset()
}

// GetScribeTableColumn returns the ScribeTableColumn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetScribeTableColumn() string {
	if o == nil || o.ScribeTableColumn.Get() == nil {
		var ret string
		return ret
	}
	return *o.ScribeTableColumn.Get()
}

// GetScribeTableColumnOk returns a tuple with the ScribeTableColumn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetScribeTableColumnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ScribeTableColumn.Get(), o.ScribeTableColumn.IsSet()
}

// HasScribeTableColumn returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasScribeTableColumn() bool {
	if o != nil && o.ScribeTableColumn.IsSet() {
		return true
	}

	return false
}

// SetScribeTableColumn gets a reference to the given NullableString and assigns it to the ScribeTableColumn field.
func (o *SnapshotInfoProto) SetScribeTableColumn(v string) {
	o.ScribeTableColumn.Set(&v)
}
// SetScribeTableColumnNil sets the value for ScribeTableColumn to be an explicit nil
func (o *SnapshotInfoProto) SetScribeTableColumnNil() {
	o.ScribeTableColumn.Set(nil)
}

// UnsetScribeTableColumn ensures that no value is present for ScribeTableColumn, not even an explicit nil
func (o *SnapshotInfoProto) UnsetScribeTableColumn() {
	o.ScribeTableColumn.Unset()
}

// GetScribeTableRow returns the ScribeTableRow field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetScribeTableRow() string {
	if o == nil || o.ScribeTableRow.Get() == nil {
		var ret string
		return ret
	}
	return *o.ScribeTableRow.Get()
}

// GetScribeTableRowOk returns a tuple with the ScribeTableRow field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetScribeTableRowOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ScribeTableRow.Get(), o.ScribeTableRow.IsSet()
}

// HasScribeTableRow returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasScribeTableRow() bool {
	if o != nil && o.ScribeTableRow.IsSet() {
		return true
	}

	return false
}

// SetScribeTableRow gets a reference to the given NullableString and assigns it to the ScribeTableRow field.
func (o *SnapshotInfoProto) SetScribeTableRow(v string) {
	o.ScribeTableRow.Set(&v)
}
// SetScribeTableRowNil sets the value for ScribeTableRow to be an explicit nil
func (o *SnapshotInfoProto) SetScribeTableRowNil() {
	o.ScribeTableRow.Set(nil)
}

// UnsetScribeTableRow ensures that no value is present for ScribeTableRow, not even an explicit nil
func (o *SnapshotInfoProto) UnsetScribeTableRow() {
	o.ScribeTableRow.Unset()
}

// GetSlaveTaskStartTimeUsecs returns the SlaveTaskStartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetSlaveTaskStartTimeUsecs() int64 {
	if o == nil || o.SlaveTaskStartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SlaveTaskStartTimeUsecs.Get()
}

// GetSlaveTaskStartTimeUsecsOk returns a tuple with the SlaveTaskStartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetSlaveTaskStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SlaveTaskStartTimeUsecs.Get(), o.SlaveTaskStartTimeUsecs.IsSet()
}

// HasSlaveTaskStartTimeUsecs returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasSlaveTaskStartTimeUsecs() bool {
	if o != nil && o.SlaveTaskStartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetSlaveTaskStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the SlaveTaskStartTimeUsecs field.
func (o *SnapshotInfoProto) SetSlaveTaskStartTimeUsecs(v int64) {
	o.SlaveTaskStartTimeUsecs.Set(&v)
}
// SetSlaveTaskStartTimeUsecsNil sets the value for SlaveTaskStartTimeUsecs to be an explicit nil
func (o *SnapshotInfoProto) SetSlaveTaskStartTimeUsecsNil() {
	o.SlaveTaskStartTimeUsecs.Set(nil)
}

// UnsetSlaveTaskStartTimeUsecs ensures that no value is present for SlaveTaskStartTimeUsecs, not even an explicit nil
func (o *SnapshotInfoProto) UnsetSlaveTaskStartTimeUsecs() {
	o.SlaveTaskStartTimeUsecs.Unset()
}

// GetSnapshotType returns the SnapshotType field value if set, zero value otherwise.
func (o *SnapshotInfoProto) GetSnapshotType() ObjectSnapshotType {
	if o == nil || o.SnapshotType == nil {
		var ret ObjectSnapshotType
		return ret
	}
	return *o.SnapshotType
}

// GetSnapshotTypeOk returns a tuple with the SnapshotType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotInfoProto) GetSnapshotTypeOk() (*ObjectSnapshotType, bool) {
	if o == nil || o.SnapshotType == nil {
		return nil, false
	}
	return o.SnapshotType, true
}

// HasSnapshotType returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasSnapshotType() bool {
	if o != nil && o.SnapshotType != nil {
		return true
	}

	return false
}

// SetSnapshotType gets a reference to the given ObjectSnapshotType and assigns it to the SnapshotType field.
func (o *SnapshotInfoProto) SetSnapshotType(v ObjectSnapshotType) {
	o.SnapshotType = &v
}

// GetSourceSnapshotCreateTimeUsecs returns the SourceSnapshotCreateTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetSourceSnapshotCreateTimeUsecs() int64 {
	if o == nil || o.SourceSnapshotCreateTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SourceSnapshotCreateTimeUsecs.Get()
}

// GetSourceSnapshotCreateTimeUsecsOk returns a tuple with the SourceSnapshotCreateTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetSourceSnapshotCreateTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceSnapshotCreateTimeUsecs.Get(), o.SourceSnapshotCreateTimeUsecs.IsSet()
}

// HasSourceSnapshotCreateTimeUsecs returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasSourceSnapshotCreateTimeUsecs() bool {
	if o != nil && o.SourceSnapshotCreateTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetSourceSnapshotCreateTimeUsecs gets a reference to the given NullableInt64 and assigns it to the SourceSnapshotCreateTimeUsecs field.
func (o *SnapshotInfoProto) SetSourceSnapshotCreateTimeUsecs(v int64) {
	o.SourceSnapshotCreateTimeUsecs.Set(&v)
}
// SetSourceSnapshotCreateTimeUsecsNil sets the value for SourceSnapshotCreateTimeUsecs to be an explicit nil
func (o *SnapshotInfoProto) SetSourceSnapshotCreateTimeUsecsNil() {
	o.SourceSnapshotCreateTimeUsecs.Set(nil)
}

// UnsetSourceSnapshotCreateTimeUsecs ensures that no value is present for SourceSnapshotCreateTimeUsecs, not even an explicit nil
func (o *SnapshotInfoProto) UnsetSourceSnapshotCreateTimeUsecs() {
	o.SourceSnapshotCreateTimeUsecs.Unset()
}

// GetSourceSnapshotName returns the SourceSnapshotName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetSourceSnapshotName() string {
	if o == nil || o.SourceSnapshotName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceSnapshotName.Get()
}

// GetSourceSnapshotNameOk returns a tuple with the SourceSnapshotName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetSourceSnapshotNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceSnapshotName.Get(), o.SourceSnapshotName.IsSet()
}

// HasSourceSnapshotName returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasSourceSnapshotName() bool {
	if o != nil && o.SourceSnapshotName.IsSet() {
		return true
	}

	return false
}

// SetSourceSnapshotName gets a reference to the given NullableString and assigns it to the SourceSnapshotName field.
func (o *SnapshotInfoProto) SetSourceSnapshotName(v string) {
	o.SourceSnapshotName.Set(&v)
}
// SetSourceSnapshotNameNil sets the value for SourceSnapshotName to be an explicit nil
func (o *SnapshotInfoProto) SetSourceSnapshotNameNil() {
	o.SourceSnapshotName.Set(nil)
}

// UnsetSourceSnapshotName ensures that no value is present for SourceSnapshotName, not even an explicit nil
func (o *SnapshotInfoProto) UnsetSourceSnapshotName() {
	o.SourceSnapshotName.Unset()
}

// GetStorageSnapshotProvider returns the StorageSnapshotProvider field value if set, zero value otherwise.
func (o *SnapshotInfoProto) GetStorageSnapshotProvider() StorageSnapshotProviderParams {
	if o == nil || o.StorageSnapshotProvider == nil {
		var ret StorageSnapshotProviderParams
		return ret
	}
	return *o.StorageSnapshotProvider
}

// GetStorageSnapshotProviderOk returns a tuple with the StorageSnapshotProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotInfoProto) GetStorageSnapshotProviderOk() (*StorageSnapshotProviderParams, bool) {
	if o == nil || o.StorageSnapshotProvider == nil {
		return nil, false
	}
	return o.StorageSnapshotProvider, true
}

// HasStorageSnapshotProvider returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasStorageSnapshotProvider() bool {
	if o != nil && o.StorageSnapshotProvider != nil {
		return true
	}

	return false
}

// SetStorageSnapshotProvider gets a reference to the given StorageSnapshotProviderParams and assigns it to the StorageSnapshotProvider field.
func (o *SnapshotInfoProto) SetStorageSnapshotProvider(v StorageSnapshotProviderParams) {
	o.StorageSnapshotProvider = &v
}

// GetTargetType returns the TargetType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetTargetType() int32 {
	if o == nil || o.TargetType.Get() == nil {
		var ret int32
		return ret
	}
	return *o.TargetType.Get()
}

// GetTargetTypeOk returns a tuple with the TargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetTargetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetType.Get(), o.TargetType.IsSet()
}

// HasTargetType returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasTargetType() bool {
	if o != nil && o.TargetType.IsSet() {
		return true
	}

	return false
}

// SetTargetType gets a reference to the given NullableInt32 and assigns it to the TargetType field.
func (o *SnapshotInfoProto) SetTargetType(v int32) {
	o.TargetType.Set(&v)
}
// SetTargetTypeNil sets the value for TargetType to be an explicit nil
func (o *SnapshotInfoProto) SetTargetTypeNil() {
	o.TargetType.Set(nil)
}

// UnsetTargetType ensures that no value is present for TargetType, not even an explicit nil
func (o *SnapshotInfoProto) UnsetTargetType() {
	o.TargetType.Unset()
}

// GetTotalBytesReadFromSource returns the TotalBytesReadFromSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetTotalBytesReadFromSource() int64 {
	if o == nil || o.TotalBytesReadFromSource.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalBytesReadFromSource.Get()
}

// GetTotalBytesReadFromSourceOk returns a tuple with the TotalBytesReadFromSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetTotalBytesReadFromSourceOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalBytesReadFromSource.Get(), o.TotalBytesReadFromSource.IsSet()
}

// HasTotalBytesReadFromSource returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasTotalBytesReadFromSource() bool {
	if o != nil && o.TotalBytesReadFromSource.IsSet() {
		return true
	}

	return false
}

// SetTotalBytesReadFromSource gets a reference to the given NullableInt64 and assigns it to the TotalBytesReadFromSource field.
func (o *SnapshotInfoProto) SetTotalBytesReadFromSource(v int64) {
	o.TotalBytesReadFromSource.Set(&v)
}
// SetTotalBytesReadFromSourceNil sets the value for TotalBytesReadFromSource to be an explicit nil
func (o *SnapshotInfoProto) SetTotalBytesReadFromSourceNil() {
	o.TotalBytesReadFromSource.Set(nil)
}

// UnsetTotalBytesReadFromSource ensures that no value is present for TotalBytesReadFromSource, not even an explicit nil
func (o *SnapshotInfoProto) UnsetTotalBytesReadFromSource() {
	o.TotalBytesReadFromSource.Unset()
}

// GetTotalBytesToReadFromSource returns the TotalBytesToReadFromSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetTotalBytesToReadFromSource() int64 {
	if o == nil || o.TotalBytesToReadFromSource.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalBytesToReadFromSource.Get()
}

// GetTotalBytesToReadFromSourceOk returns a tuple with the TotalBytesToReadFromSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetTotalBytesToReadFromSourceOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalBytesToReadFromSource.Get(), o.TotalBytesToReadFromSource.IsSet()
}

// HasTotalBytesToReadFromSource returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasTotalBytesToReadFromSource() bool {
	if o != nil && o.TotalBytesToReadFromSource.IsSet() {
		return true
	}

	return false
}

// SetTotalBytesToReadFromSource gets a reference to the given NullableInt64 and assigns it to the TotalBytesToReadFromSource field.
func (o *SnapshotInfoProto) SetTotalBytesToReadFromSource(v int64) {
	o.TotalBytesToReadFromSource.Set(&v)
}
// SetTotalBytesToReadFromSourceNil sets the value for TotalBytesToReadFromSource to be an explicit nil
func (o *SnapshotInfoProto) SetTotalBytesToReadFromSourceNil() {
	o.TotalBytesToReadFromSource.Set(nil)
}

// UnsetTotalBytesToReadFromSource ensures that no value is present for TotalBytesToReadFromSource, not even an explicit nil
func (o *SnapshotInfoProto) UnsetTotalBytesToReadFromSource() {
	o.TotalBytesToReadFromSource.Unset()
}

// GetTotalChangedEntityCount returns the TotalChangedEntityCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetTotalChangedEntityCount() int64 {
	if o == nil || o.TotalChangedEntityCount.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalChangedEntityCount.Get()
}

// GetTotalChangedEntityCountOk returns a tuple with the TotalChangedEntityCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetTotalChangedEntityCountOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalChangedEntityCount.Get(), o.TotalChangedEntityCount.IsSet()
}

// HasTotalChangedEntityCount returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasTotalChangedEntityCount() bool {
	if o != nil && o.TotalChangedEntityCount.IsSet() {
		return true
	}

	return false
}

// SetTotalChangedEntityCount gets a reference to the given NullableInt64 and assigns it to the TotalChangedEntityCount field.
func (o *SnapshotInfoProto) SetTotalChangedEntityCount(v int64) {
	o.TotalChangedEntityCount.Set(&v)
}
// SetTotalChangedEntityCountNil sets the value for TotalChangedEntityCount to be an explicit nil
func (o *SnapshotInfoProto) SetTotalChangedEntityCountNil() {
	o.TotalChangedEntityCount.Set(nil)
}

// UnsetTotalChangedEntityCount ensures that no value is present for TotalChangedEntityCount, not even an explicit nil
func (o *SnapshotInfoProto) UnsetTotalChangedEntityCount() {
	o.TotalChangedEntityCount.Unset()
}

// GetTotalEntityCount returns the TotalEntityCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetTotalEntityCount() int64 {
	if o == nil || o.TotalEntityCount.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalEntityCount.Get()
}

// GetTotalEntityCountOk returns a tuple with the TotalEntityCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetTotalEntityCountOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalEntityCount.Get(), o.TotalEntityCount.IsSet()
}

// HasTotalEntityCount returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasTotalEntityCount() bool {
	if o != nil && o.TotalEntityCount.IsSet() {
		return true
	}

	return false
}

// SetTotalEntityCount gets a reference to the given NullableInt64 and assigns it to the TotalEntityCount field.
func (o *SnapshotInfoProto) SetTotalEntityCount(v int64) {
	o.TotalEntityCount.Set(&v)
}
// SetTotalEntityCountNil sets the value for TotalEntityCount to be an explicit nil
func (o *SnapshotInfoProto) SetTotalEntityCountNil() {
	o.TotalEntityCount.Set(nil)
}

// UnsetTotalEntityCount ensures that no value is present for TotalEntityCount, not even an explicit nil
func (o *SnapshotInfoProto) UnsetTotalEntityCount() {
	o.TotalEntityCount.Unset()
}

// GetTotalLogicalBackupSizeBytes returns the TotalLogicalBackupSizeBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetTotalLogicalBackupSizeBytes() int64 {
	if o == nil || o.TotalLogicalBackupSizeBytes.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalLogicalBackupSizeBytes.Get()
}

// GetTotalLogicalBackupSizeBytesOk returns a tuple with the TotalLogicalBackupSizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetTotalLogicalBackupSizeBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalLogicalBackupSizeBytes.Get(), o.TotalLogicalBackupSizeBytes.IsSet()
}

// HasTotalLogicalBackupSizeBytes returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasTotalLogicalBackupSizeBytes() bool {
	if o != nil && o.TotalLogicalBackupSizeBytes.IsSet() {
		return true
	}

	return false
}

// SetTotalLogicalBackupSizeBytes gets a reference to the given NullableInt64 and assigns it to the TotalLogicalBackupSizeBytes field.
func (o *SnapshotInfoProto) SetTotalLogicalBackupSizeBytes(v int64) {
	o.TotalLogicalBackupSizeBytes.Set(&v)
}
// SetTotalLogicalBackupSizeBytesNil sets the value for TotalLogicalBackupSizeBytes to be an explicit nil
func (o *SnapshotInfoProto) SetTotalLogicalBackupSizeBytesNil() {
	o.TotalLogicalBackupSizeBytes.Set(nil)
}

// UnsetTotalLogicalBackupSizeBytes ensures that no value is present for TotalLogicalBackupSizeBytes, not even an explicit nil
func (o *SnapshotInfoProto) UnsetTotalLogicalBackupSizeBytes() {
	o.TotalLogicalBackupSizeBytes.Unset()
}

// GetTotalPrimaryPhysicalSizeBytes returns the TotalPrimaryPhysicalSizeBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetTotalPrimaryPhysicalSizeBytes() int64 {
	if o == nil || o.TotalPrimaryPhysicalSizeBytes.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalPrimaryPhysicalSizeBytes.Get()
}

// GetTotalPrimaryPhysicalSizeBytesOk returns a tuple with the TotalPrimaryPhysicalSizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetTotalPrimaryPhysicalSizeBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalPrimaryPhysicalSizeBytes.Get(), o.TotalPrimaryPhysicalSizeBytes.IsSet()
}

// HasTotalPrimaryPhysicalSizeBytes returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasTotalPrimaryPhysicalSizeBytes() bool {
	if o != nil && o.TotalPrimaryPhysicalSizeBytes.IsSet() {
		return true
	}

	return false
}

// SetTotalPrimaryPhysicalSizeBytes gets a reference to the given NullableInt64 and assigns it to the TotalPrimaryPhysicalSizeBytes field.
func (o *SnapshotInfoProto) SetTotalPrimaryPhysicalSizeBytes(v int64) {
	o.TotalPrimaryPhysicalSizeBytes.Set(&v)
}
// SetTotalPrimaryPhysicalSizeBytesNil sets the value for TotalPrimaryPhysicalSizeBytes to be an explicit nil
func (o *SnapshotInfoProto) SetTotalPrimaryPhysicalSizeBytesNil() {
	o.TotalPrimaryPhysicalSizeBytes.Set(nil)
}

// UnsetTotalPrimaryPhysicalSizeBytes ensures that no value is present for TotalPrimaryPhysicalSizeBytes, not even an explicit nil
func (o *SnapshotInfoProto) UnsetTotalPrimaryPhysicalSizeBytes() {
	o.TotalPrimaryPhysicalSizeBytes.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetType() int32 {
	if o == nil || o.Type.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableInt32 and assigns it to the Type field.
func (o *SnapshotInfoProto) SetType(v int32) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *SnapshotInfoProto) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *SnapshotInfoProto) UnsetType() {
	o.Type.Unset()
}

// GetViewCaseInsensitivityAltered returns the ViewCaseInsensitivityAltered field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetViewCaseInsensitivityAltered() bool {
	if o == nil || o.ViewCaseInsensitivityAltered.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ViewCaseInsensitivityAltered.Get()
}

// GetViewCaseInsensitivityAlteredOk returns a tuple with the ViewCaseInsensitivityAltered field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetViewCaseInsensitivityAlteredOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewCaseInsensitivityAltered.Get(), o.ViewCaseInsensitivityAltered.IsSet()
}

// HasViewCaseInsensitivityAltered returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasViewCaseInsensitivityAltered() bool {
	if o != nil && o.ViewCaseInsensitivityAltered.IsSet() {
		return true
	}

	return false
}

// SetViewCaseInsensitivityAltered gets a reference to the given NullableBool and assigns it to the ViewCaseInsensitivityAltered field.
func (o *SnapshotInfoProto) SetViewCaseInsensitivityAltered(v bool) {
	o.ViewCaseInsensitivityAltered.Set(&v)
}
// SetViewCaseInsensitivityAlteredNil sets the value for ViewCaseInsensitivityAltered to be an explicit nil
func (o *SnapshotInfoProto) SetViewCaseInsensitivityAlteredNil() {
	o.ViewCaseInsensitivityAltered.Set(nil)
}

// UnsetViewCaseInsensitivityAltered ensures that no value is present for ViewCaseInsensitivityAltered, not even an explicit nil
func (o *SnapshotInfoProto) UnsetViewCaseInsensitivityAltered() {
	o.ViewCaseInsensitivityAltered.Unset()
}

// GetViewName returns the ViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetViewName() string {
	if o == nil || o.ViewName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ViewName.Get()
}

// GetViewNameOk returns a tuple with the ViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetViewNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewName.Get(), o.ViewName.IsSet()
}

// HasViewName returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasViewName() bool {
	if o != nil && o.ViewName.IsSet() {
		return true
	}

	return false
}

// SetViewName gets a reference to the given NullableString and assigns it to the ViewName field.
func (o *SnapshotInfoProto) SetViewName(v string) {
	o.ViewName.Set(&v)
}
// SetViewNameNil sets the value for ViewName to be an explicit nil
func (o *SnapshotInfoProto) SetViewNameNil() {
	o.ViewName.Set(nil)
}

// UnsetViewName ensures that no value is present for ViewName, not even an explicit nil
func (o *SnapshotInfoProto) UnsetViewName() {
	o.ViewName.Unset()
}

// GetViewNameToGc returns the ViewNameToGc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetViewNameToGc() string {
	if o == nil || o.ViewNameToGc.Get() == nil {
		var ret string
		return ret
	}
	return *o.ViewNameToGc.Get()
}

// GetViewNameToGcOk returns a tuple with the ViewNameToGc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetViewNameToGcOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewNameToGc.Get(), o.ViewNameToGc.IsSet()
}

// HasViewNameToGc returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasViewNameToGc() bool {
	if o != nil && o.ViewNameToGc.IsSet() {
		return true
	}

	return false
}

// SetViewNameToGc gets a reference to the given NullableString and assigns it to the ViewNameToGc field.
func (o *SnapshotInfoProto) SetViewNameToGc(v string) {
	o.ViewNameToGc.Set(&v)
}
// SetViewNameToGcNil sets the value for ViewNameToGc to be an explicit nil
func (o *SnapshotInfoProto) SetViewNameToGcNil() {
	o.ViewNameToGc.Set(nil)
}

// UnsetViewNameToGc ensures that no value is present for ViewNameToGc, not even an explicit nil
func (o *SnapshotInfoProto) UnsetViewNameToGc() {
	o.ViewNameToGc.Unset()
}

// GetWarnings returns the Warnings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotInfoProto) GetWarnings() []ErrorProto {
	if o == nil  {
		var ret []ErrorProto
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotInfoProto) GetWarningsOk() (*[]ErrorProto, bool) {
	if o == nil || o.Warnings == nil {
		return nil, false
	}
	return &o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *SnapshotInfoProto) HasWarnings() bool {
	if o != nil && o.Warnings != nil {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []ErrorProto and assigns it to the Warnings field.
func (o *SnapshotInfoProto) SetWarnings(v []ErrorProto) {
	o.Warnings = v
}

func (o SnapshotInfoProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorRocksdbName.IsSet() {
		toSerialize["errorRocksdbName"] = o.ErrorRocksdbName.Get()
	}
	if o.FileWalkDone.IsSet() {
		toSerialize["fileWalkDone"] = o.FileWalkDone.Get()
	}
	if o.NumAppInstances.IsSet() {
		toSerialize["numAppInstances"] = o.NumAppInstances.Get()
	}
	if o.NumAppObjects.IsSet() {
		toSerialize["numAppObjects"] = o.NumAppObjects.Get()
	}
	if o.PostBackupScriptStatus != nil {
		toSerialize["postBackupScriptStatus"] = o.PostBackupScriptStatus
	}
	if o.PreBackupScriptStatus != nil {
		toSerialize["preBackupScriptStatus"] = o.PreBackupScriptStatus
	}
	if o.RelativeSnapshotDir.IsSet() {
		toSerialize["relativeSnapshotDir"] = o.RelativeSnapshotDir.Get()
	}
	if o.RootPath.IsSet() {
		toSerialize["rootPath"] = o.RootPath.Get()
	}
	if o.ScribeTableColumn.IsSet() {
		toSerialize["scribeTableColumn"] = o.ScribeTableColumn.Get()
	}
	if o.ScribeTableRow.IsSet() {
		toSerialize["scribeTableRow"] = o.ScribeTableRow.Get()
	}
	if o.SlaveTaskStartTimeUsecs.IsSet() {
		toSerialize["slaveTaskStartTimeUsecs"] = o.SlaveTaskStartTimeUsecs.Get()
	}
	if o.SnapshotType != nil {
		toSerialize["snapshotType"] = o.SnapshotType
	}
	if o.SourceSnapshotCreateTimeUsecs.IsSet() {
		toSerialize["sourceSnapshotCreateTimeUsecs"] = o.SourceSnapshotCreateTimeUsecs.Get()
	}
	if o.SourceSnapshotName.IsSet() {
		toSerialize["sourceSnapshotName"] = o.SourceSnapshotName.Get()
	}
	if o.StorageSnapshotProvider != nil {
		toSerialize["storageSnapshotProvider"] = o.StorageSnapshotProvider
	}
	if o.TargetType.IsSet() {
		toSerialize["targetType"] = o.TargetType.Get()
	}
	if o.TotalBytesReadFromSource.IsSet() {
		toSerialize["totalBytesReadFromSource"] = o.TotalBytesReadFromSource.Get()
	}
	if o.TotalBytesToReadFromSource.IsSet() {
		toSerialize["totalBytesToReadFromSource"] = o.TotalBytesToReadFromSource.Get()
	}
	if o.TotalChangedEntityCount.IsSet() {
		toSerialize["totalChangedEntityCount"] = o.TotalChangedEntityCount.Get()
	}
	if o.TotalEntityCount.IsSet() {
		toSerialize["totalEntityCount"] = o.TotalEntityCount.Get()
	}
	if o.TotalLogicalBackupSizeBytes.IsSet() {
		toSerialize["totalLogicalBackupSizeBytes"] = o.TotalLogicalBackupSizeBytes.Get()
	}
	if o.TotalPrimaryPhysicalSizeBytes.IsSet() {
		toSerialize["totalPrimaryPhysicalSizeBytes"] = o.TotalPrimaryPhysicalSizeBytes.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.ViewCaseInsensitivityAltered.IsSet() {
		toSerialize["viewCaseInsensitivityAltered"] = o.ViewCaseInsensitivityAltered.Get()
	}
	if o.ViewName.IsSet() {
		toSerialize["viewName"] = o.ViewName.Get()
	}
	if o.ViewNameToGc.IsSet() {
		toSerialize["viewNameToGc"] = o.ViewNameToGc.Get()
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	return json.Marshal(toSerialize)
}

type NullableSnapshotInfoProto struct {
	value *SnapshotInfoProto
	isSet bool
}

func (v NullableSnapshotInfoProto) Get() *SnapshotInfoProto {
	return v.value
}

func (v *NullableSnapshotInfoProto) Set(val *SnapshotInfoProto) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotInfoProto) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotInfoProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotInfoProto(val *SnapshotInfoProto) *NullableSnapshotInfoProto {
	return &NullableSnapshotInfoProto{value: val, isSet: true}
}

func (v NullableSnapshotInfoProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotInfoProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


