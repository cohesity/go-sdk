/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// BackupPolicyProto If a backup does not get a chance to when it's due (either due to the system being busy or a conflict with another instance of the same job), the backup will still be run when the conflicts go away. But, if there are multiple instances of the same job that are due to be run, only the latest instance would be run.
type BackupPolicyProto struct {
	ContinuousSchedule *BackupPolicyProtoContinuousSchedule `json:"continuousSchedule,omitempty"`
	DailySchedule *BackupPolicyProtoDailySchedule `json:"dailySchedule,omitempty"`
	MonthlySchedule *BackupPolicyProtoMonthlySchedule `json:"monthlySchedule,omitempty"`
	// A backup schedule can have an optional name.
	Name NullableString `json:"name,omitempty"`
	// Specifies how to determine the expiration time for snapshots created by a backup run. The snapshots will be marked as expiring (i.e., eligible to be garbage collected) in 'num_days_to_keep' days from when the snapshots were created.
	NumDaysToKeep NullableInt64 `json:"numDaysToKeep,omitempty"`
	// The number of retries to perform (for retryable errors) before giving up.
	NumRetries NullableInt32 `json:"numRetries,omitempty"`
	OneOffSchedule *BackupPolicyProtoOneOffSchedule `json:"oneOffSchedule,omitempty"`
	// Determines how often the job should be run.
	Periodicity NullableInt32 `json:"periodicity,omitempty"`
	// The number of minutes to wait before retrying a failed job.
	RetryDelayMins NullableInt32 `json:"retryDelayMins,omitempty"`
	ScheduleEnd *BackupPolicyProtoScheduleEnd `json:"scheduleEnd,omitempty"`
	// This field determines the amount of time (in minutes) after which a scheduled job will not be started. For example, if a job is scheduled to be run every Sunday at 5am, and this field is set to 30 minutes, but the job was unable to start by 5:30am on a Sunday due to other conflicts (say too many other jobs were already running), Magneto will not attempt to start the job until the next scheduled time (on the following Sunday). If this field is not set, the interval will be determined by the Magneto flag --magneto_master_default_start_window_interval_mins.
	StartWindowIntervalMins NullableInt32 `json:"startWindowIntervalMins,omitempty"`
	// Whether to truncate logs after a backup run. This is currently only relevant for full or incremental backups in a SQL environment.
	TruncateLogs NullableBool `json:"truncateLogs,omitempty"`
}

// NewBackupPolicyProto instantiates a new BackupPolicyProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupPolicyProto() *BackupPolicyProto {
	this := BackupPolicyProto{}
	return &this
}

// NewBackupPolicyProtoWithDefaults instantiates a new BackupPolicyProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupPolicyProtoWithDefaults() *BackupPolicyProto {
	this := BackupPolicyProto{}
	return &this
}

// GetContinuousSchedule returns the ContinuousSchedule field value if set, zero value otherwise.
func (o *BackupPolicyProto) GetContinuousSchedule() BackupPolicyProtoContinuousSchedule {
	if o == nil || o.ContinuousSchedule == nil {
		var ret BackupPolicyProtoContinuousSchedule
		return ret
	}
	return *o.ContinuousSchedule
}

// GetContinuousScheduleOk returns a tuple with the ContinuousSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupPolicyProto) GetContinuousScheduleOk() (*BackupPolicyProtoContinuousSchedule, bool) {
	if o == nil || o.ContinuousSchedule == nil {
		return nil, false
	}
	return o.ContinuousSchedule, true
}

// HasContinuousSchedule returns a boolean if a field has been set.
func (o *BackupPolicyProto) HasContinuousSchedule() bool {
	if o != nil && o.ContinuousSchedule != nil {
		return true
	}

	return false
}

// SetContinuousSchedule gets a reference to the given BackupPolicyProtoContinuousSchedule and assigns it to the ContinuousSchedule field.
func (o *BackupPolicyProto) SetContinuousSchedule(v BackupPolicyProtoContinuousSchedule) {
	o.ContinuousSchedule = &v
}

// GetDailySchedule returns the DailySchedule field value if set, zero value otherwise.
func (o *BackupPolicyProto) GetDailySchedule() BackupPolicyProtoDailySchedule {
	if o == nil || o.DailySchedule == nil {
		var ret BackupPolicyProtoDailySchedule
		return ret
	}
	return *o.DailySchedule
}

// GetDailyScheduleOk returns a tuple with the DailySchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupPolicyProto) GetDailyScheduleOk() (*BackupPolicyProtoDailySchedule, bool) {
	if o == nil || o.DailySchedule == nil {
		return nil, false
	}
	return o.DailySchedule, true
}

// HasDailySchedule returns a boolean if a field has been set.
func (o *BackupPolicyProto) HasDailySchedule() bool {
	if o != nil && o.DailySchedule != nil {
		return true
	}

	return false
}

// SetDailySchedule gets a reference to the given BackupPolicyProtoDailySchedule and assigns it to the DailySchedule field.
func (o *BackupPolicyProto) SetDailySchedule(v BackupPolicyProtoDailySchedule) {
	o.DailySchedule = &v
}

// GetMonthlySchedule returns the MonthlySchedule field value if set, zero value otherwise.
func (o *BackupPolicyProto) GetMonthlySchedule() BackupPolicyProtoMonthlySchedule {
	if o == nil || o.MonthlySchedule == nil {
		var ret BackupPolicyProtoMonthlySchedule
		return ret
	}
	return *o.MonthlySchedule
}

// GetMonthlyScheduleOk returns a tuple with the MonthlySchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupPolicyProto) GetMonthlyScheduleOk() (*BackupPolicyProtoMonthlySchedule, bool) {
	if o == nil || o.MonthlySchedule == nil {
		return nil, false
	}
	return o.MonthlySchedule, true
}

// HasMonthlySchedule returns a boolean if a field has been set.
func (o *BackupPolicyProto) HasMonthlySchedule() bool {
	if o != nil && o.MonthlySchedule != nil {
		return true
	}

	return false
}

// SetMonthlySchedule gets a reference to the given BackupPolicyProtoMonthlySchedule and assigns it to the MonthlySchedule field.
func (o *BackupPolicyProto) SetMonthlySchedule(v BackupPolicyProtoMonthlySchedule) {
	o.MonthlySchedule = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupPolicyProto) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupPolicyProto) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *BackupPolicyProto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *BackupPolicyProto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *BackupPolicyProto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *BackupPolicyProto) UnsetName() {
	o.Name.Unset()
}

// GetNumDaysToKeep returns the NumDaysToKeep field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupPolicyProto) GetNumDaysToKeep() int64 {
	if o == nil || o.NumDaysToKeep.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumDaysToKeep.Get()
}

// GetNumDaysToKeepOk returns a tuple with the NumDaysToKeep field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupPolicyProto) GetNumDaysToKeepOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumDaysToKeep.Get(), o.NumDaysToKeep.IsSet()
}

// HasNumDaysToKeep returns a boolean if a field has been set.
func (o *BackupPolicyProto) HasNumDaysToKeep() bool {
	if o != nil && o.NumDaysToKeep.IsSet() {
		return true
	}

	return false
}

// SetNumDaysToKeep gets a reference to the given NullableInt64 and assigns it to the NumDaysToKeep field.
func (o *BackupPolicyProto) SetNumDaysToKeep(v int64) {
	o.NumDaysToKeep.Set(&v)
}
// SetNumDaysToKeepNil sets the value for NumDaysToKeep to be an explicit nil
func (o *BackupPolicyProto) SetNumDaysToKeepNil() {
	o.NumDaysToKeep.Set(nil)
}

// UnsetNumDaysToKeep ensures that no value is present for NumDaysToKeep, not even an explicit nil
func (o *BackupPolicyProto) UnsetNumDaysToKeep() {
	o.NumDaysToKeep.Unset()
}

// GetNumRetries returns the NumRetries field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupPolicyProto) GetNumRetries() int32 {
	if o == nil || o.NumRetries.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NumRetries.Get()
}

// GetNumRetriesOk returns a tuple with the NumRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupPolicyProto) GetNumRetriesOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumRetries.Get(), o.NumRetries.IsSet()
}

// HasNumRetries returns a boolean if a field has been set.
func (o *BackupPolicyProto) HasNumRetries() bool {
	if o != nil && o.NumRetries.IsSet() {
		return true
	}

	return false
}

// SetNumRetries gets a reference to the given NullableInt32 and assigns it to the NumRetries field.
func (o *BackupPolicyProto) SetNumRetries(v int32) {
	o.NumRetries.Set(&v)
}
// SetNumRetriesNil sets the value for NumRetries to be an explicit nil
func (o *BackupPolicyProto) SetNumRetriesNil() {
	o.NumRetries.Set(nil)
}

// UnsetNumRetries ensures that no value is present for NumRetries, not even an explicit nil
func (o *BackupPolicyProto) UnsetNumRetries() {
	o.NumRetries.Unset()
}

// GetOneOffSchedule returns the OneOffSchedule field value if set, zero value otherwise.
func (o *BackupPolicyProto) GetOneOffSchedule() BackupPolicyProtoOneOffSchedule {
	if o == nil || o.OneOffSchedule == nil {
		var ret BackupPolicyProtoOneOffSchedule
		return ret
	}
	return *o.OneOffSchedule
}

// GetOneOffScheduleOk returns a tuple with the OneOffSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupPolicyProto) GetOneOffScheduleOk() (*BackupPolicyProtoOneOffSchedule, bool) {
	if o == nil || o.OneOffSchedule == nil {
		return nil, false
	}
	return o.OneOffSchedule, true
}

// HasOneOffSchedule returns a boolean if a field has been set.
func (o *BackupPolicyProto) HasOneOffSchedule() bool {
	if o != nil && o.OneOffSchedule != nil {
		return true
	}

	return false
}

// SetOneOffSchedule gets a reference to the given BackupPolicyProtoOneOffSchedule and assigns it to the OneOffSchedule field.
func (o *BackupPolicyProto) SetOneOffSchedule(v BackupPolicyProtoOneOffSchedule) {
	o.OneOffSchedule = &v
}

// GetPeriodicity returns the Periodicity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupPolicyProto) GetPeriodicity() int32 {
	if o == nil || o.Periodicity.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Periodicity.Get()
}

// GetPeriodicityOk returns a tuple with the Periodicity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupPolicyProto) GetPeriodicityOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Periodicity.Get(), o.Periodicity.IsSet()
}

// HasPeriodicity returns a boolean if a field has been set.
func (o *BackupPolicyProto) HasPeriodicity() bool {
	if o != nil && o.Periodicity.IsSet() {
		return true
	}

	return false
}

// SetPeriodicity gets a reference to the given NullableInt32 and assigns it to the Periodicity field.
func (o *BackupPolicyProto) SetPeriodicity(v int32) {
	o.Periodicity.Set(&v)
}
// SetPeriodicityNil sets the value for Periodicity to be an explicit nil
func (o *BackupPolicyProto) SetPeriodicityNil() {
	o.Periodicity.Set(nil)
}

// UnsetPeriodicity ensures that no value is present for Periodicity, not even an explicit nil
func (o *BackupPolicyProto) UnsetPeriodicity() {
	o.Periodicity.Unset()
}

// GetRetryDelayMins returns the RetryDelayMins field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupPolicyProto) GetRetryDelayMins() int32 {
	if o == nil || o.RetryDelayMins.Get() == nil {
		var ret int32
		return ret
	}
	return *o.RetryDelayMins.Get()
}

// GetRetryDelayMinsOk returns a tuple with the RetryDelayMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupPolicyProto) GetRetryDelayMinsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RetryDelayMins.Get(), o.RetryDelayMins.IsSet()
}

// HasRetryDelayMins returns a boolean if a field has been set.
func (o *BackupPolicyProto) HasRetryDelayMins() bool {
	if o != nil && o.RetryDelayMins.IsSet() {
		return true
	}

	return false
}

// SetRetryDelayMins gets a reference to the given NullableInt32 and assigns it to the RetryDelayMins field.
func (o *BackupPolicyProto) SetRetryDelayMins(v int32) {
	o.RetryDelayMins.Set(&v)
}
// SetRetryDelayMinsNil sets the value for RetryDelayMins to be an explicit nil
func (o *BackupPolicyProto) SetRetryDelayMinsNil() {
	o.RetryDelayMins.Set(nil)
}

// UnsetRetryDelayMins ensures that no value is present for RetryDelayMins, not even an explicit nil
func (o *BackupPolicyProto) UnsetRetryDelayMins() {
	o.RetryDelayMins.Unset()
}

// GetScheduleEnd returns the ScheduleEnd field value if set, zero value otherwise.
func (o *BackupPolicyProto) GetScheduleEnd() BackupPolicyProtoScheduleEnd {
	if o == nil || o.ScheduleEnd == nil {
		var ret BackupPolicyProtoScheduleEnd
		return ret
	}
	return *o.ScheduleEnd
}

// GetScheduleEndOk returns a tuple with the ScheduleEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupPolicyProto) GetScheduleEndOk() (*BackupPolicyProtoScheduleEnd, bool) {
	if o == nil || o.ScheduleEnd == nil {
		return nil, false
	}
	return o.ScheduleEnd, true
}

// HasScheduleEnd returns a boolean if a field has been set.
func (o *BackupPolicyProto) HasScheduleEnd() bool {
	if o != nil && o.ScheduleEnd != nil {
		return true
	}

	return false
}

// SetScheduleEnd gets a reference to the given BackupPolicyProtoScheduleEnd and assigns it to the ScheduleEnd field.
func (o *BackupPolicyProto) SetScheduleEnd(v BackupPolicyProtoScheduleEnd) {
	o.ScheduleEnd = &v
}

// GetStartWindowIntervalMins returns the StartWindowIntervalMins field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupPolicyProto) GetStartWindowIntervalMins() int32 {
	if o == nil || o.StartWindowIntervalMins.Get() == nil {
		var ret int32
		return ret
	}
	return *o.StartWindowIntervalMins.Get()
}

// GetStartWindowIntervalMinsOk returns a tuple with the StartWindowIntervalMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupPolicyProto) GetStartWindowIntervalMinsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartWindowIntervalMins.Get(), o.StartWindowIntervalMins.IsSet()
}

// HasStartWindowIntervalMins returns a boolean if a field has been set.
func (o *BackupPolicyProto) HasStartWindowIntervalMins() bool {
	if o != nil && o.StartWindowIntervalMins.IsSet() {
		return true
	}

	return false
}

// SetStartWindowIntervalMins gets a reference to the given NullableInt32 and assigns it to the StartWindowIntervalMins field.
func (o *BackupPolicyProto) SetStartWindowIntervalMins(v int32) {
	o.StartWindowIntervalMins.Set(&v)
}
// SetStartWindowIntervalMinsNil sets the value for StartWindowIntervalMins to be an explicit nil
func (o *BackupPolicyProto) SetStartWindowIntervalMinsNil() {
	o.StartWindowIntervalMins.Set(nil)
}

// UnsetStartWindowIntervalMins ensures that no value is present for StartWindowIntervalMins, not even an explicit nil
func (o *BackupPolicyProto) UnsetStartWindowIntervalMins() {
	o.StartWindowIntervalMins.Unset()
}

// GetTruncateLogs returns the TruncateLogs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupPolicyProto) GetTruncateLogs() bool {
	if o == nil || o.TruncateLogs.Get() == nil {
		var ret bool
		return ret
	}
	return *o.TruncateLogs.Get()
}

// GetTruncateLogsOk returns a tuple with the TruncateLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupPolicyProto) GetTruncateLogsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TruncateLogs.Get(), o.TruncateLogs.IsSet()
}

// HasTruncateLogs returns a boolean if a field has been set.
func (o *BackupPolicyProto) HasTruncateLogs() bool {
	if o != nil && o.TruncateLogs.IsSet() {
		return true
	}

	return false
}

// SetTruncateLogs gets a reference to the given NullableBool and assigns it to the TruncateLogs field.
func (o *BackupPolicyProto) SetTruncateLogs(v bool) {
	o.TruncateLogs.Set(&v)
}
// SetTruncateLogsNil sets the value for TruncateLogs to be an explicit nil
func (o *BackupPolicyProto) SetTruncateLogsNil() {
	o.TruncateLogs.Set(nil)
}

// UnsetTruncateLogs ensures that no value is present for TruncateLogs, not even an explicit nil
func (o *BackupPolicyProto) UnsetTruncateLogs() {
	o.TruncateLogs.Unset()
}

func (o BackupPolicyProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContinuousSchedule != nil {
		toSerialize["continuousSchedule"] = o.ContinuousSchedule
	}
	if o.DailySchedule != nil {
		toSerialize["dailySchedule"] = o.DailySchedule
	}
	if o.MonthlySchedule != nil {
		toSerialize["monthlySchedule"] = o.MonthlySchedule
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.NumDaysToKeep.IsSet() {
		toSerialize["numDaysToKeep"] = o.NumDaysToKeep.Get()
	}
	if o.NumRetries.IsSet() {
		toSerialize["numRetries"] = o.NumRetries.Get()
	}
	if o.OneOffSchedule != nil {
		toSerialize["oneOffSchedule"] = o.OneOffSchedule
	}
	if o.Periodicity.IsSet() {
		toSerialize["periodicity"] = o.Periodicity.Get()
	}
	if o.RetryDelayMins.IsSet() {
		toSerialize["retryDelayMins"] = o.RetryDelayMins.Get()
	}
	if o.ScheduleEnd != nil {
		toSerialize["scheduleEnd"] = o.ScheduleEnd
	}
	if o.StartWindowIntervalMins.IsSet() {
		toSerialize["startWindowIntervalMins"] = o.StartWindowIntervalMins.Get()
	}
	if o.TruncateLogs.IsSet() {
		toSerialize["truncateLogs"] = o.TruncateLogs.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableBackupPolicyProto struct {
	value *BackupPolicyProto
	isSet bool
}

func (v NullableBackupPolicyProto) Get() *BackupPolicyProto {
	return v.value
}

func (v *NullableBackupPolicyProto) Set(val *BackupPolicyProto) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupPolicyProto) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupPolicyProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupPolicyProto(val *BackupPolicyProto) *NullableBackupPolicyProto {
	return &NullableBackupPolicyProto{value: val, isSet: true}
}

func (v NullableBackupPolicyProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupPolicyProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


