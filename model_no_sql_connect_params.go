/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// NoSqlConnectParams struct for NoSqlConnectParams
type NoSqlConnectParams struct {
	CassandraAdditionalParams *CassandraAdditionalParams `json:"cassandraAdditionalParams,omitempty"`
	CassandraConnectParams *CassandraConnectParams `json:"cassandraConnectParams,omitempty"`
	CouchbaseConnectParams *CouchbaseConnectParams `json:"couchbaseConnectParams,omitempty"`
	HbaseConnectParams *HBaseConnectParams `json:"hbaseConnectParams,omitempty"`
	HdfsConnectParams *HdfsConnectParams `json:"hdfsConnectParams,omitempty"`
	HiveConnectParams *HiveConnectParams `json:"hiveConnectParams,omitempty"`
	MongodbAdditionalParams *MongoDBAdditionalParams `json:"mongodbAdditionalParams,omitempty"`
	MongodbConnectParams *MongoDBConnectParams `json:"mongodbConnectParams,omitempty"`
}

// NewNoSqlConnectParams instantiates a new NoSqlConnectParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNoSqlConnectParams() *NoSqlConnectParams {
	this := NoSqlConnectParams{}
	return &this
}

// NewNoSqlConnectParamsWithDefaults instantiates a new NoSqlConnectParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNoSqlConnectParamsWithDefaults() *NoSqlConnectParams {
	this := NoSqlConnectParams{}
	return &this
}

// GetCassandraAdditionalParams returns the CassandraAdditionalParams field value if set, zero value otherwise.
func (o *NoSqlConnectParams) GetCassandraAdditionalParams() CassandraAdditionalParams {
	if o == nil || o.CassandraAdditionalParams == nil {
		var ret CassandraAdditionalParams
		return ret
	}
	return *o.CassandraAdditionalParams
}

// GetCassandraAdditionalParamsOk returns a tuple with the CassandraAdditionalParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoSqlConnectParams) GetCassandraAdditionalParamsOk() (*CassandraAdditionalParams, bool) {
	if o == nil || o.CassandraAdditionalParams == nil {
		return nil, false
	}
	return o.CassandraAdditionalParams, true
}

// HasCassandraAdditionalParams returns a boolean if a field has been set.
func (o *NoSqlConnectParams) HasCassandraAdditionalParams() bool {
	if o != nil && o.CassandraAdditionalParams != nil {
		return true
	}

	return false
}

// SetCassandraAdditionalParams gets a reference to the given CassandraAdditionalParams and assigns it to the CassandraAdditionalParams field.
func (o *NoSqlConnectParams) SetCassandraAdditionalParams(v CassandraAdditionalParams) {
	o.CassandraAdditionalParams = &v
}

// GetCassandraConnectParams returns the CassandraConnectParams field value if set, zero value otherwise.
func (o *NoSqlConnectParams) GetCassandraConnectParams() CassandraConnectParams {
	if o == nil || o.CassandraConnectParams == nil {
		var ret CassandraConnectParams
		return ret
	}
	return *o.CassandraConnectParams
}

// GetCassandraConnectParamsOk returns a tuple with the CassandraConnectParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoSqlConnectParams) GetCassandraConnectParamsOk() (*CassandraConnectParams, bool) {
	if o == nil || o.CassandraConnectParams == nil {
		return nil, false
	}
	return o.CassandraConnectParams, true
}

// HasCassandraConnectParams returns a boolean if a field has been set.
func (o *NoSqlConnectParams) HasCassandraConnectParams() bool {
	if o != nil && o.CassandraConnectParams != nil {
		return true
	}

	return false
}

// SetCassandraConnectParams gets a reference to the given CassandraConnectParams and assigns it to the CassandraConnectParams field.
func (o *NoSqlConnectParams) SetCassandraConnectParams(v CassandraConnectParams) {
	o.CassandraConnectParams = &v
}

// GetCouchbaseConnectParams returns the CouchbaseConnectParams field value if set, zero value otherwise.
func (o *NoSqlConnectParams) GetCouchbaseConnectParams() CouchbaseConnectParams {
	if o == nil || o.CouchbaseConnectParams == nil {
		var ret CouchbaseConnectParams
		return ret
	}
	return *o.CouchbaseConnectParams
}

// GetCouchbaseConnectParamsOk returns a tuple with the CouchbaseConnectParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoSqlConnectParams) GetCouchbaseConnectParamsOk() (*CouchbaseConnectParams, bool) {
	if o == nil || o.CouchbaseConnectParams == nil {
		return nil, false
	}
	return o.CouchbaseConnectParams, true
}

// HasCouchbaseConnectParams returns a boolean if a field has been set.
func (o *NoSqlConnectParams) HasCouchbaseConnectParams() bool {
	if o != nil && o.CouchbaseConnectParams != nil {
		return true
	}

	return false
}

// SetCouchbaseConnectParams gets a reference to the given CouchbaseConnectParams and assigns it to the CouchbaseConnectParams field.
func (o *NoSqlConnectParams) SetCouchbaseConnectParams(v CouchbaseConnectParams) {
	o.CouchbaseConnectParams = &v
}

// GetHbaseConnectParams returns the HbaseConnectParams field value if set, zero value otherwise.
func (o *NoSqlConnectParams) GetHbaseConnectParams() HBaseConnectParams {
	if o == nil || o.HbaseConnectParams == nil {
		var ret HBaseConnectParams
		return ret
	}
	return *o.HbaseConnectParams
}

// GetHbaseConnectParamsOk returns a tuple with the HbaseConnectParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoSqlConnectParams) GetHbaseConnectParamsOk() (*HBaseConnectParams, bool) {
	if o == nil || o.HbaseConnectParams == nil {
		return nil, false
	}
	return o.HbaseConnectParams, true
}

// HasHbaseConnectParams returns a boolean if a field has been set.
func (o *NoSqlConnectParams) HasHbaseConnectParams() bool {
	if o != nil && o.HbaseConnectParams != nil {
		return true
	}

	return false
}

// SetHbaseConnectParams gets a reference to the given HBaseConnectParams and assigns it to the HbaseConnectParams field.
func (o *NoSqlConnectParams) SetHbaseConnectParams(v HBaseConnectParams) {
	o.HbaseConnectParams = &v
}

// GetHdfsConnectParams returns the HdfsConnectParams field value if set, zero value otherwise.
func (o *NoSqlConnectParams) GetHdfsConnectParams() HdfsConnectParams {
	if o == nil || o.HdfsConnectParams == nil {
		var ret HdfsConnectParams
		return ret
	}
	return *o.HdfsConnectParams
}

// GetHdfsConnectParamsOk returns a tuple with the HdfsConnectParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoSqlConnectParams) GetHdfsConnectParamsOk() (*HdfsConnectParams, bool) {
	if o == nil || o.HdfsConnectParams == nil {
		return nil, false
	}
	return o.HdfsConnectParams, true
}

// HasHdfsConnectParams returns a boolean if a field has been set.
func (o *NoSqlConnectParams) HasHdfsConnectParams() bool {
	if o != nil && o.HdfsConnectParams != nil {
		return true
	}

	return false
}

// SetHdfsConnectParams gets a reference to the given HdfsConnectParams and assigns it to the HdfsConnectParams field.
func (o *NoSqlConnectParams) SetHdfsConnectParams(v HdfsConnectParams) {
	o.HdfsConnectParams = &v
}

// GetHiveConnectParams returns the HiveConnectParams field value if set, zero value otherwise.
func (o *NoSqlConnectParams) GetHiveConnectParams() HiveConnectParams {
	if o == nil || o.HiveConnectParams == nil {
		var ret HiveConnectParams
		return ret
	}
	return *o.HiveConnectParams
}

// GetHiveConnectParamsOk returns a tuple with the HiveConnectParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoSqlConnectParams) GetHiveConnectParamsOk() (*HiveConnectParams, bool) {
	if o == nil || o.HiveConnectParams == nil {
		return nil, false
	}
	return o.HiveConnectParams, true
}

// HasHiveConnectParams returns a boolean if a field has been set.
func (o *NoSqlConnectParams) HasHiveConnectParams() bool {
	if o != nil && o.HiveConnectParams != nil {
		return true
	}

	return false
}

// SetHiveConnectParams gets a reference to the given HiveConnectParams and assigns it to the HiveConnectParams field.
func (o *NoSqlConnectParams) SetHiveConnectParams(v HiveConnectParams) {
	o.HiveConnectParams = &v
}

// GetMongodbAdditionalParams returns the MongodbAdditionalParams field value if set, zero value otherwise.
func (o *NoSqlConnectParams) GetMongodbAdditionalParams() MongoDBAdditionalParams {
	if o == nil || o.MongodbAdditionalParams == nil {
		var ret MongoDBAdditionalParams
		return ret
	}
	return *o.MongodbAdditionalParams
}

// GetMongodbAdditionalParamsOk returns a tuple with the MongodbAdditionalParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoSqlConnectParams) GetMongodbAdditionalParamsOk() (*MongoDBAdditionalParams, bool) {
	if o == nil || o.MongodbAdditionalParams == nil {
		return nil, false
	}
	return o.MongodbAdditionalParams, true
}

// HasMongodbAdditionalParams returns a boolean if a field has been set.
func (o *NoSqlConnectParams) HasMongodbAdditionalParams() bool {
	if o != nil && o.MongodbAdditionalParams != nil {
		return true
	}

	return false
}

// SetMongodbAdditionalParams gets a reference to the given MongoDBAdditionalParams and assigns it to the MongodbAdditionalParams field.
func (o *NoSqlConnectParams) SetMongodbAdditionalParams(v MongoDBAdditionalParams) {
	o.MongodbAdditionalParams = &v
}

// GetMongodbConnectParams returns the MongodbConnectParams field value if set, zero value otherwise.
func (o *NoSqlConnectParams) GetMongodbConnectParams() MongoDBConnectParams {
	if o == nil || o.MongodbConnectParams == nil {
		var ret MongoDBConnectParams
		return ret
	}
	return *o.MongodbConnectParams
}

// GetMongodbConnectParamsOk returns a tuple with the MongodbConnectParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoSqlConnectParams) GetMongodbConnectParamsOk() (*MongoDBConnectParams, bool) {
	if o == nil || o.MongodbConnectParams == nil {
		return nil, false
	}
	return o.MongodbConnectParams, true
}

// HasMongodbConnectParams returns a boolean if a field has been set.
func (o *NoSqlConnectParams) HasMongodbConnectParams() bool {
	if o != nil && o.MongodbConnectParams != nil {
		return true
	}

	return false
}

// SetMongodbConnectParams gets a reference to the given MongoDBConnectParams and assigns it to the MongodbConnectParams field.
func (o *NoSqlConnectParams) SetMongodbConnectParams(v MongoDBConnectParams) {
	o.MongodbConnectParams = &v
}

func (o NoSqlConnectParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CassandraAdditionalParams != nil {
		toSerialize["cassandraAdditionalParams"] = o.CassandraAdditionalParams
	}
	if o.CassandraConnectParams != nil {
		toSerialize["cassandraConnectParams"] = o.CassandraConnectParams
	}
	if o.CouchbaseConnectParams != nil {
		toSerialize["couchbaseConnectParams"] = o.CouchbaseConnectParams
	}
	if o.HbaseConnectParams != nil {
		toSerialize["hbaseConnectParams"] = o.HbaseConnectParams
	}
	if o.HdfsConnectParams != nil {
		toSerialize["hdfsConnectParams"] = o.HdfsConnectParams
	}
	if o.HiveConnectParams != nil {
		toSerialize["hiveConnectParams"] = o.HiveConnectParams
	}
	if o.MongodbAdditionalParams != nil {
		toSerialize["mongodbAdditionalParams"] = o.MongodbAdditionalParams
	}
	if o.MongodbConnectParams != nil {
		toSerialize["mongodbConnectParams"] = o.MongodbConnectParams
	}
	return json.Marshal(toSerialize)
}

type NullableNoSqlConnectParams struct {
	value *NoSqlConnectParams
	isSet bool
}

func (v NullableNoSqlConnectParams) Get() *NoSqlConnectParams {
	return v.value
}

func (v *NullableNoSqlConnectParams) Set(val *NoSqlConnectParams) {
	v.value = val
	v.isSet = true
}

func (v NullableNoSqlConnectParams) IsSet() bool {
	return v.isSet
}

func (v *NullableNoSqlConnectParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNoSqlConnectParams(val *NoSqlConnectParams) *NullableNoSqlConnectParams {
	return &NullableNoSqlConnectParams{value: val, isSet: true}
}

func (v NullableNoSqlConnectParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNoSqlConnectParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


