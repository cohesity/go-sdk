/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// UpdateTrustedDomainEnableParams Specifies the params to update trusted domain enable flag.
type UpdateTrustedDomainEnableParams struct {
	// Request to update enable trusted domains state of an Active Directory.
	TrustedDomainsEnabled NullableBool `json:"trustedDomainsEnabled,omitempty"`
}

// NewUpdateTrustedDomainEnableParams instantiates a new UpdateTrustedDomainEnableParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTrustedDomainEnableParams() *UpdateTrustedDomainEnableParams {
	this := UpdateTrustedDomainEnableParams{}
	return &this
}

// NewUpdateTrustedDomainEnableParamsWithDefaults instantiates a new UpdateTrustedDomainEnableParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTrustedDomainEnableParamsWithDefaults() *UpdateTrustedDomainEnableParams {
	this := UpdateTrustedDomainEnableParams{}
	return &this
}

// GetTrustedDomainsEnabled returns the TrustedDomainsEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateTrustedDomainEnableParams) GetTrustedDomainsEnabled() bool {
	if o == nil || o.TrustedDomainsEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.TrustedDomainsEnabled.Get()
}

// GetTrustedDomainsEnabledOk returns a tuple with the TrustedDomainsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateTrustedDomainEnableParams) GetTrustedDomainsEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TrustedDomainsEnabled.Get(), o.TrustedDomainsEnabled.IsSet()
}

// HasTrustedDomainsEnabled returns a boolean if a field has been set.
func (o *UpdateTrustedDomainEnableParams) HasTrustedDomainsEnabled() bool {
	if o != nil && o.TrustedDomainsEnabled.IsSet() {
		return true
	}

	return false
}

// SetTrustedDomainsEnabled gets a reference to the given NullableBool and assigns it to the TrustedDomainsEnabled field.
func (o *UpdateTrustedDomainEnableParams) SetTrustedDomainsEnabled(v bool) {
	o.TrustedDomainsEnabled.Set(&v)
}
// SetTrustedDomainsEnabledNil sets the value for TrustedDomainsEnabled to be an explicit nil
func (o *UpdateTrustedDomainEnableParams) SetTrustedDomainsEnabledNil() {
	o.TrustedDomainsEnabled.Set(nil)
}

// UnsetTrustedDomainsEnabled ensures that no value is present for TrustedDomainsEnabled, not even an explicit nil
func (o *UpdateTrustedDomainEnableParams) UnsetTrustedDomainsEnabled() {
	o.TrustedDomainsEnabled.Unset()
}

func (o UpdateTrustedDomainEnableParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TrustedDomainsEnabled.IsSet() {
		toSerialize["trustedDomainsEnabled"] = o.TrustedDomainsEnabled.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateTrustedDomainEnableParams struct {
	value *UpdateTrustedDomainEnableParams
	isSet bool
}

func (v NullableUpdateTrustedDomainEnableParams) Get() *UpdateTrustedDomainEnableParams {
	return v.value
}

func (v *NullableUpdateTrustedDomainEnableParams) Set(val *UpdateTrustedDomainEnableParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTrustedDomainEnableParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTrustedDomainEnableParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTrustedDomainEnableParams(val *UpdateTrustedDomainEnableParams) *NullableUpdateTrustedDomainEnableParams {
	return &NullableUpdateTrustedDomainEnableParams{value: val, isSet: true}
}

func (v NullableUpdateTrustedDomainEnableParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTrustedDomainEnableParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


