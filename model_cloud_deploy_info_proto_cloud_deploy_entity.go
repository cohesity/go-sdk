/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// CloudDeployInfoProtoCloudDeployEntity struct for CloudDeployInfoProtoCloudDeployEntity
type CloudDeployInfoProtoCloudDeployEntity struct {
	// Optional name that should be used for deployed VM.
	DeployedVmName NullableString `json:"deployedVmName,omitempty"`
	Entity *EntityProto `json:"entity,omitempty"`
	Error *ErrorProto `json:"error,omitempty"`
	// Directory where files of the entity's previous snapshot were cloned to. Path is relative to the destination view.
	PreviousRelativeCloneDirPath NullableString `json:"previousRelativeCloneDirPath,omitempty"`
	// All the paths that the entity's previous snapshot files were cloned to. Each path is relative to the destination view.
	PreviousRelativeClonePaths []string `json:"previousRelativeClonePaths,omitempty"`
	// Progress monitor task path for this entity which is relative to the root path of the cloud deploy task progress monitor.
	ProgressMonitorTaskPath NullableString `json:"progressMonitorTaskPath,omitempty"`
	// Iris-facing task state. This field is stamped during the export.
	PublicStatus NullableInt32 `json:"publicStatus,omitempty"`
	// All the paths that the entity's files were cloned to. Each path is relative to the destination view.
	RelativeClonePaths []string `json:"relativeClonePaths,omitempty"`
	// The status of the entity.
	Status NullableInt32 `json:"status,omitempty"`
}

// NewCloudDeployInfoProtoCloudDeployEntity instantiates a new CloudDeployInfoProtoCloudDeployEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudDeployInfoProtoCloudDeployEntity() *CloudDeployInfoProtoCloudDeployEntity {
	this := CloudDeployInfoProtoCloudDeployEntity{}
	return &this
}

// NewCloudDeployInfoProtoCloudDeployEntityWithDefaults instantiates a new CloudDeployInfoProtoCloudDeployEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudDeployInfoProtoCloudDeployEntityWithDefaults() *CloudDeployInfoProtoCloudDeployEntity {
	this := CloudDeployInfoProtoCloudDeployEntity{}
	return &this
}

// GetDeployedVmName returns the DeployedVmName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudDeployInfoProtoCloudDeployEntity) GetDeployedVmName() string {
	if o == nil || o.DeployedVmName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DeployedVmName.Get()
}

// GetDeployedVmNameOk returns a tuple with the DeployedVmName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudDeployInfoProtoCloudDeployEntity) GetDeployedVmNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeployedVmName.Get(), o.DeployedVmName.IsSet()
}

// HasDeployedVmName returns a boolean if a field has been set.
func (o *CloudDeployInfoProtoCloudDeployEntity) HasDeployedVmName() bool {
	if o != nil && o.DeployedVmName.IsSet() {
		return true
	}

	return false
}

// SetDeployedVmName gets a reference to the given NullableString and assigns it to the DeployedVmName field.
func (o *CloudDeployInfoProtoCloudDeployEntity) SetDeployedVmName(v string) {
	o.DeployedVmName.Set(&v)
}
// SetDeployedVmNameNil sets the value for DeployedVmName to be an explicit nil
func (o *CloudDeployInfoProtoCloudDeployEntity) SetDeployedVmNameNil() {
	o.DeployedVmName.Set(nil)
}

// UnsetDeployedVmName ensures that no value is present for DeployedVmName, not even an explicit nil
func (o *CloudDeployInfoProtoCloudDeployEntity) UnsetDeployedVmName() {
	o.DeployedVmName.Unset()
}

// GetEntity returns the Entity field value if set, zero value otherwise.
func (o *CloudDeployInfoProtoCloudDeployEntity) GetEntity() EntityProto {
	if o == nil || o.Entity == nil {
		var ret EntityProto
		return ret
	}
	return *o.Entity
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudDeployInfoProtoCloudDeployEntity) GetEntityOk() (*EntityProto, bool) {
	if o == nil || o.Entity == nil {
		return nil, false
	}
	return o.Entity, true
}

// HasEntity returns a boolean if a field has been set.
func (o *CloudDeployInfoProtoCloudDeployEntity) HasEntity() bool {
	if o != nil && o.Entity != nil {
		return true
	}

	return false
}

// SetEntity gets a reference to the given EntityProto and assigns it to the Entity field.
func (o *CloudDeployInfoProtoCloudDeployEntity) SetEntity(v EntityProto) {
	o.Entity = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *CloudDeployInfoProtoCloudDeployEntity) GetError() ErrorProto {
	if o == nil || o.Error == nil {
		var ret ErrorProto
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudDeployInfoProtoCloudDeployEntity) GetErrorOk() (*ErrorProto, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *CloudDeployInfoProtoCloudDeployEntity) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given ErrorProto and assigns it to the Error field.
func (o *CloudDeployInfoProtoCloudDeployEntity) SetError(v ErrorProto) {
	o.Error = &v
}

// GetPreviousRelativeCloneDirPath returns the PreviousRelativeCloneDirPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudDeployInfoProtoCloudDeployEntity) GetPreviousRelativeCloneDirPath() string {
	if o == nil || o.PreviousRelativeCloneDirPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.PreviousRelativeCloneDirPath.Get()
}

// GetPreviousRelativeCloneDirPathOk returns a tuple with the PreviousRelativeCloneDirPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudDeployInfoProtoCloudDeployEntity) GetPreviousRelativeCloneDirPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PreviousRelativeCloneDirPath.Get(), o.PreviousRelativeCloneDirPath.IsSet()
}

// HasPreviousRelativeCloneDirPath returns a boolean if a field has been set.
func (o *CloudDeployInfoProtoCloudDeployEntity) HasPreviousRelativeCloneDirPath() bool {
	if o != nil && o.PreviousRelativeCloneDirPath.IsSet() {
		return true
	}

	return false
}

// SetPreviousRelativeCloneDirPath gets a reference to the given NullableString and assigns it to the PreviousRelativeCloneDirPath field.
func (o *CloudDeployInfoProtoCloudDeployEntity) SetPreviousRelativeCloneDirPath(v string) {
	o.PreviousRelativeCloneDirPath.Set(&v)
}
// SetPreviousRelativeCloneDirPathNil sets the value for PreviousRelativeCloneDirPath to be an explicit nil
func (o *CloudDeployInfoProtoCloudDeployEntity) SetPreviousRelativeCloneDirPathNil() {
	o.PreviousRelativeCloneDirPath.Set(nil)
}

// UnsetPreviousRelativeCloneDirPath ensures that no value is present for PreviousRelativeCloneDirPath, not even an explicit nil
func (o *CloudDeployInfoProtoCloudDeployEntity) UnsetPreviousRelativeCloneDirPath() {
	o.PreviousRelativeCloneDirPath.Unset()
}

// GetPreviousRelativeClonePaths returns the PreviousRelativeClonePaths field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudDeployInfoProtoCloudDeployEntity) GetPreviousRelativeClonePaths() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.PreviousRelativeClonePaths
}

// GetPreviousRelativeClonePathsOk returns a tuple with the PreviousRelativeClonePaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudDeployInfoProtoCloudDeployEntity) GetPreviousRelativeClonePathsOk() (*[]string, bool) {
	if o == nil || o.PreviousRelativeClonePaths == nil {
		return nil, false
	}
	return &o.PreviousRelativeClonePaths, true
}

// HasPreviousRelativeClonePaths returns a boolean if a field has been set.
func (o *CloudDeployInfoProtoCloudDeployEntity) HasPreviousRelativeClonePaths() bool {
	if o != nil && o.PreviousRelativeClonePaths != nil {
		return true
	}

	return false
}

// SetPreviousRelativeClonePaths gets a reference to the given []string and assigns it to the PreviousRelativeClonePaths field.
func (o *CloudDeployInfoProtoCloudDeployEntity) SetPreviousRelativeClonePaths(v []string) {
	o.PreviousRelativeClonePaths = v
}

// GetProgressMonitorTaskPath returns the ProgressMonitorTaskPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudDeployInfoProtoCloudDeployEntity) GetProgressMonitorTaskPath() string {
	if o == nil || o.ProgressMonitorTaskPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProgressMonitorTaskPath.Get()
}

// GetProgressMonitorTaskPathOk returns a tuple with the ProgressMonitorTaskPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudDeployInfoProtoCloudDeployEntity) GetProgressMonitorTaskPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProgressMonitorTaskPath.Get(), o.ProgressMonitorTaskPath.IsSet()
}

// HasProgressMonitorTaskPath returns a boolean if a field has been set.
func (o *CloudDeployInfoProtoCloudDeployEntity) HasProgressMonitorTaskPath() bool {
	if o != nil && o.ProgressMonitorTaskPath.IsSet() {
		return true
	}

	return false
}

// SetProgressMonitorTaskPath gets a reference to the given NullableString and assigns it to the ProgressMonitorTaskPath field.
func (o *CloudDeployInfoProtoCloudDeployEntity) SetProgressMonitorTaskPath(v string) {
	o.ProgressMonitorTaskPath.Set(&v)
}
// SetProgressMonitorTaskPathNil sets the value for ProgressMonitorTaskPath to be an explicit nil
func (o *CloudDeployInfoProtoCloudDeployEntity) SetProgressMonitorTaskPathNil() {
	o.ProgressMonitorTaskPath.Set(nil)
}

// UnsetProgressMonitorTaskPath ensures that no value is present for ProgressMonitorTaskPath, not even an explicit nil
func (o *CloudDeployInfoProtoCloudDeployEntity) UnsetProgressMonitorTaskPath() {
	o.ProgressMonitorTaskPath.Unset()
}

// GetPublicStatus returns the PublicStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudDeployInfoProtoCloudDeployEntity) GetPublicStatus() int32 {
	if o == nil || o.PublicStatus.Get() == nil {
		var ret int32
		return ret
	}
	return *o.PublicStatus.Get()
}

// GetPublicStatusOk returns a tuple with the PublicStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudDeployInfoProtoCloudDeployEntity) GetPublicStatusOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PublicStatus.Get(), o.PublicStatus.IsSet()
}

// HasPublicStatus returns a boolean if a field has been set.
func (o *CloudDeployInfoProtoCloudDeployEntity) HasPublicStatus() bool {
	if o != nil && o.PublicStatus.IsSet() {
		return true
	}

	return false
}

// SetPublicStatus gets a reference to the given NullableInt32 and assigns it to the PublicStatus field.
func (o *CloudDeployInfoProtoCloudDeployEntity) SetPublicStatus(v int32) {
	o.PublicStatus.Set(&v)
}
// SetPublicStatusNil sets the value for PublicStatus to be an explicit nil
func (o *CloudDeployInfoProtoCloudDeployEntity) SetPublicStatusNil() {
	o.PublicStatus.Set(nil)
}

// UnsetPublicStatus ensures that no value is present for PublicStatus, not even an explicit nil
func (o *CloudDeployInfoProtoCloudDeployEntity) UnsetPublicStatus() {
	o.PublicStatus.Unset()
}

// GetRelativeClonePaths returns the RelativeClonePaths field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudDeployInfoProtoCloudDeployEntity) GetRelativeClonePaths() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.RelativeClonePaths
}

// GetRelativeClonePathsOk returns a tuple with the RelativeClonePaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudDeployInfoProtoCloudDeployEntity) GetRelativeClonePathsOk() (*[]string, bool) {
	if o == nil || o.RelativeClonePaths == nil {
		return nil, false
	}
	return &o.RelativeClonePaths, true
}

// HasRelativeClonePaths returns a boolean if a field has been set.
func (o *CloudDeployInfoProtoCloudDeployEntity) HasRelativeClonePaths() bool {
	if o != nil && o.RelativeClonePaths != nil {
		return true
	}

	return false
}

// SetRelativeClonePaths gets a reference to the given []string and assigns it to the RelativeClonePaths field.
func (o *CloudDeployInfoProtoCloudDeployEntity) SetRelativeClonePaths(v []string) {
	o.RelativeClonePaths = v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudDeployInfoProtoCloudDeployEntity) GetStatus() int32 {
	if o == nil || o.Status.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudDeployInfoProtoCloudDeployEntity) GetStatusOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *CloudDeployInfoProtoCloudDeployEntity) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableInt32 and assigns it to the Status field.
func (o *CloudDeployInfoProtoCloudDeployEntity) SetStatus(v int32) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *CloudDeployInfoProtoCloudDeployEntity) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *CloudDeployInfoProtoCloudDeployEntity) UnsetStatus() {
	o.Status.Unset()
}

func (o CloudDeployInfoProtoCloudDeployEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeployedVmName.IsSet() {
		toSerialize["deployedVmName"] = o.DeployedVmName.Get()
	}
	if o.Entity != nil {
		toSerialize["entity"] = o.Entity
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.PreviousRelativeCloneDirPath.IsSet() {
		toSerialize["previousRelativeCloneDirPath"] = o.PreviousRelativeCloneDirPath.Get()
	}
	if o.PreviousRelativeClonePaths != nil {
		toSerialize["previousRelativeClonePaths"] = o.PreviousRelativeClonePaths
	}
	if o.ProgressMonitorTaskPath.IsSet() {
		toSerialize["progressMonitorTaskPath"] = o.ProgressMonitorTaskPath.Get()
	}
	if o.PublicStatus.IsSet() {
		toSerialize["publicStatus"] = o.PublicStatus.Get()
	}
	if o.RelativeClonePaths != nil {
		toSerialize["relativeClonePaths"] = o.RelativeClonePaths
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCloudDeployInfoProtoCloudDeployEntity struct {
	value *CloudDeployInfoProtoCloudDeployEntity
	isSet bool
}

func (v NullableCloudDeployInfoProtoCloudDeployEntity) Get() *CloudDeployInfoProtoCloudDeployEntity {
	return v.value
}

func (v *NullableCloudDeployInfoProtoCloudDeployEntity) Set(val *CloudDeployInfoProtoCloudDeployEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudDeployInfoProtoCloudDeployEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudDeployInfoProtoCloudDeployEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudDeployInfoProtoCloudDeployEntity(val *CloudDeployInfoProtoCloudDeployEntity) *NullableCloudDeployInfoProtoCloudDeployEntity {
	return &NullableCloudDeployInfoProtoCloudDeployEntity{value: val, isSet: true}
}

func (v NullableCloudDeployInfoProtoCloudDeployEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudDeployInfoProtoCloudDeployEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


