/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// SnapshotCopyTask Specifies information about copy tasks such as replication and archival tasks.
type SnapshotCopyTask struct {
	// Specifies the status of the copy task.
	CopyStatus NullableString `json:"copyStatus,omitempty"`
	// Specifies when the Snapshot expires on the target.
	ExpiryTimeUsecs NullableInt64 `json:"expiryTimeUsecs,omitempty"`
	// Specifies warning or error information when the copy task is not successful.
	Message NullableString `json:"message,omitempty"`
	SnapshotTarget *SnapshotTargetSettings `json:"snapshotTarget,omitempty"`
}

// NewSnapshotCopyTask instantiates a new SnapshotCopyTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotCopyTask() *SnapshotCopyTask {
	this := SnapshotCopyTask{}
	return &this
}

// NewSnapshotCopyTaskWithDefaults instantiates a new SnapshotCopyTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotCopyTaskWithDefaults() *SnapshotCopyTask {
	this := SnapshotCopyTask{}
	return &this
}

// GetCopyStatus returns the CopyStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotCopyTask) GetCopyStatus() string {
	if o == nil || o.CopyStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.CopyStatus.Get()
}

// GetCopyStatusOk returns a tuple with the CopyStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotCopyTask) GetCopyStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CopyStatus.Get(), o.CopyStatus.IsSet()
}

// HasCopyStatus returns a boolean if a field has been set.
func (o *SnapshotCopyTask) HasCopyStatus() bool {
	if o != nil && o.CopyStatus.IsSet() {
		return true
	}

	return false
}

// SetCopyStatus gets a reference to the given NullableString and assigns it to the CopyStatus field.
func (o *SnapshotCopyTask) SetCopyStatus(v string) {
	o.CopyStatus.Set(&v)
}
// SetCopyStatusNil sets the value for CopyStatus to be an explicit nil
func (o *SnapshotCopyTask) SetCopyStatusNil() {
	o.CopyStatus.Set(nil)
}

// UnsetCopyStatus ensures that no value is present for CopyStatus, not even an explicit nil
func (o *SnapshotCopyTask) UnsetCopyStatus() {
	o.CopyStatus.Unset()
}

// GetExpiryTimeUsecs returns the ExpiryTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotCopyTask) GetExpiryTimeUsecs() int64 {
	if o == nil || o.ExpiryTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ExpiryTimeUsecs.Get()
}

// GetExpiryTimeUsecsOk returns a tuple with the ExpiryTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotCopyTask) GetExpiryTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExpiryTimeUsecs.Get(), o.ExpiryTimeUsecs.IsSet()
}

// HasExpiryTimeUsecs returns a boolean if a field has been set.
func (o *SnapshotCopyTask) HasExpiryTimeUsecs() bool {
	if o != nil && o.ExpiryTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetExpiryTimeUsecs gets a reference to the given NullableInt64 and assigns it to the ExpiryTimeUsecs field.
func (o *SnapshotCopyTask) SetExpiryTimeUsecs(v int64) {
	o.ExpiryTimeUsecs.Set(&v)
}
// SetExpiryTimeUsecsNil sets the value for ExpiryTimeUsecs to be an explicit nil
func (o *SnapshotCopyTask) SetExpiryTimeUsecsNil() {
	o.ExpiryTimeUsecs.Set(nil)
}

// UnsetExpiryTimeUsecs ensures that no value is present for ExpiryTimeUsecs, not even an explicit nil
func (o *SnapshotCopyTask) UnsetExpiryTimeUsecs() {
	o.ExpiryTimeUsecs.Unset()
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotCopyTask) GetMessage() string {
	if o == nil || o.Message.Get() == nil {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotCopyTask) GetMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *SnapshotCopyTask) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *SnapshotCopyTask) SetMessage(v string) {
	o.Message.Set(&v)
}
// SetMessageNil sets the value for Message to be an explicit nil
func (o *SnapshotCopyTask) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *SnapshotCopyTask) UnsetMessage() {
	o.Message.Unset()
}

// GetSnapshotTarget returns the SnapshotTarget field value if set, zero value otherwise.
func (o *SnapshotCopyTask) GetSnapshotTarget() SnapshotTargetSettings {
	if o == nil || o.SnapshotTarget == nil {
		var ret SnapshotTargetSettings
		return ret
	}
	return *o.SnapshotTarget
}

// GetSnapshotTargetOk returns a tuple with the SnapshotTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotCopyTask) GetSnapshotTargetOk() (*SnapshotTargetSettings, bool) {
	if o == nil || o.SnapshotTarget == nil {
		return nil, false
	}
	return o.SnapshotTarget, true
}

// HasSnapshotTarget returns a boolean if a field has been set.
func (o *SnapshotCopyTask) HasSnapshotTarget() bool {
	if o != nil && o.SnapshotTarget != nil {
		return true
	}

	return false
}

// SetSnapshotTarget gets a reference to the given SnapshotTargetSettings and assigns it to the SnapshotTarget field.
func (o *SnapshotCopyTask) SetSnapshotTarget(v SnapshotTargetSettings) {
	o.SnapshotTarget = &v
}

func (o SnapshotCopyTask) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CopyStatus.IsSet() {
		toSerialize["copyStatus"] = o.CopyStatus.Get()
	}
	if o.ExpiryTimeUsecs.IsSet() {
		toSerialize["expiryTimeUsecs"] = o.ExpiryTimeUsecs.Get()
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	if o.SnapshotTarget != nil {
		toSerialize["snapshotTarget"] = o.SnapshotTarget
	}
	return json.Marshal(toSerialize)
}

type NullableSnapshotCopyTask struct {
	value *SnapshotCopyTask
	isSet bool
}

func (v NullableSnapshotCopyTask) Get() *SnapshotCopyTask {
	return v.value
}

func (v *NullableSnapshotCopyTask) Set(val *SnapshotCopyTask) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotCopyTask) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotCopyTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotCopyTask(val *SnapshotCopyTask) *NullableSnapshotCopyTask {
	return &NullableSnapshotCopyTask{value: val, isSet: true}
}

func (v NullableSnapshotCopyTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotCopyTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


