/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ProtectedVmInfo Specifies the Protection Jobs information of a VM.
type ProtectedVmInfo struct {
	// Specifies the list of Protection Jobs that protect the VM.
	ProtectionJobs []ProtectionJob `json:"protectionJobs,omitempty"`
	// Specifies the list of Policies that are used by the Protection Jobs.
	ProtectionPolicies []ProtectionPolicy `json:"protectionPolicies,omitempty"`
	ProtectionSource *ProtectionSource `json:"protectionSource,omitempty"`
	// Specifies the protection stats of VM.
	Stats NullableProtectionSummary `json:"stats,omitempty"`
}

// NewProtectedVmInfo instantiates a new ProtectedVmInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectedVmInfo() *ProtectedVmInfo {
	this := ProtectedVmInfo{}
	return &this
}

// NewProtectedVmInfoWithDefaults instantiates a new ProtectedVmInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectedVmInfoWithDefaults() *ProtectedVmInfo {
	this := ProtectedVmInfo{}
	return &this
}

// GetProtectionJobs returns the ProtectionJobs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedVmInfo) GetProtectionJobs() []ProtectionJob {
	if o == nil  {
		var ret []ProtectionJob
		return ret
	}
	return o.ProtectionJobs
}

// GetProtectionJobsOk returns a tuple with the ProtectionJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedVmInfo) GetProtectionJobsOk() (*[]ProtectionJob, bool) {
	if o == nil || o.ProtectionJobs == nil {
		return nil, false
	}
	return &o.ProtectionJobs, true
}

// HasProtectionJobs returns a boolean if a field has been set.
func (o *ProtectedVmInfo) HasProtectionJobs() bool {
	if o != nil && o.ProtectionJobs != nil {
		return true
	}

	return false
}

// SetProtectionJobs gets a reference to the given []ProtectionJob and assigns it to the ProtectionJobs field.
func (o *ProtectedVmInfo) SetProtectionJobs(v []ProtectionJob) {
	o.ProtectionJobs = v
}

// GetProtectionPolicies returns the ProtectionPolicies field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedVmInfo) GetProtectionPolicies() []ProtectionPolicy {
	if o == nil  {
		var ret []ProtectionPolicy
		return ret
	}
	return o.ProtectionPolicies
}

// GetProtectionPoliciesOk returns a tuple with the ProtectionPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedVmInfo) GetProtectionPoliciesOk() (*[]ProtectionPolicy, bool) {
	if o == nil || o.ProtectionPolicies == nil {
		return nil, false
	}
	return &o.ProtectionPolicies, true
}

// HasProtectionPolicies returns a boolean if a field has been set.
func (o *ProtectedVmInfo) HasProtectionPolicies() bool {
	if o != nil && o.ProtectionPolicies != nil {
		return true
	}

	return false
}

// SetProtectionPolicies gets a reference to the given []ProtectionPolicy and assigns it to the ProtectionPolicies field.
func (o *ProtectedVmInfo) SetProtectionPolicies(v []ProtectionPolicy) {
	o.ProtectionPolicies = v
}

// GetProtectionSource returns the ProtectionSource field value if set, zero value otherwise.
func (o *ProtectedVmInfo) GetProtectionSource() ProtectionSource {
	if o == nil || o.ProtectionSource == nil {
		var ret ProtectionSource
		return ret
	}
	return *o.ProtectionSource
}

// GetProtectionSourceOk returns a tuple with the ProtectionSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedVmInfo) GetProtectionSourceOk() (*ProtectionSource, bool) {
	if o == nil || o.ProtectionSource == nil {
		return nil, false
	}
	return o.ProtectionSource, true
}

// HasProtectionSource returns a boolean if a field has been set.
func (o *ProtectedVmInfo) HasProtectionSource() bool {
	if o != nil && o.ProtectionSource != nil {
		return true
	}

	return false
}

// SetProtectionSource gets a reference to the given ProtectionSource and assigns it to the ProtectionSource field.
func (o *ProtectedVmInfo) SetProtectionSource(v ProtectionSource) {
	o.ProtectionSource = &v
}

// GetStats returns the Stats field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedVmInfo) GetStats() ProtectionSummary {
	if o == nil || o.Stats.Get() == nil {
		var ret ProtectionSummary
		return ret
	}
	return *o.Stats.Get()
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedVmInfo) GetStatsOk() (*ProtectionSummary, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Stats.Get(), o.Stats.IsSet()
}

// HasStats returns a boolean if a field has been set.
func (o *ProtectedVmInfo) HasStats() bool {
	if o != nil && o.Stats.IsSet() {
		return true
	}

	return false
}

// SetStats gets a reference to the given NullableProtectionSummary and assigns it to the Stats field.
func (o *ProtectedVmInfo) SetStats(v ProtectionSummary) {
	o.Stats.Set(&v)
}
// SetStatsNil sets the value for Stats to be an explicit nil
func (o *ProtectedVmInfo) SetStatsNil() {
	o.Stats.Set(nil)
}

// UnsetStats ensures that no value is present for Stats, not even an explicit nil
func (o *ProtectedVmInfo) UnsetStats() {
	o.Stats.Unset()
}

func (o ProtectedVmInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProtectionJobs != nil {
		toSerialize["protectionJobs"] = o.ProtectionJobs
	}
	if o.ProtectionPolicies != nil {
		toSerialize["protectionPolicies"] = o.ProtectionPolicies
	}
	if o.ProtectionSource != nil {
		toSerialize["protectionSource"] = o.ProtectionSource
	}
	if o.Stats.IsSet() {
		toSerialize["stats"] = o.Stats.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProtectedVmInfo struct {
	value *ProtectedVmInfo
	isSet bool
}

func (v NullableProtectedVmInfo) Get() *ProtectedVmInfo {
	return v.value
}

func (v *NullableProtectedVmInfo) Set(val *ProtectedVmInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectedVmInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectedVmInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectedVmInfo(val *ProtectedVmInfo) *NullableProtectedVmInfo {
	return &NullableProtectedVmInfo{value: val, isSet: true}
}

func (v NullableProtectedVmInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectedVmInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


