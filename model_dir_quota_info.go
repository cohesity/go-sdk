/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// DirQuotaInfo Specifies the configuration and policy details for directory quota in a view.
type DirQuotaInfo struct {
	Config *DirQuotaConfig `json:"config,omitempty"`
	// Specifies the list of directory quota policies applied on the view.
	Quotas []DirQuotaPolicy `json:"quotas,omitempty"`
}

// NewDirQuotaInfo instantiates a new DirQuotaInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirQuotaInfo() *DirQuotaInfo {
	this := DirQuotaInfo{}
	return &this
}

// NewDirQuotaInfoWithDefaults instantiates a new DirQuotaInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirQuotaInfoWithDefaults() *DirQuotaInfo {
	this := DirQuotaInfo{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *DirQuotaInfo) GetConfig() DirQuotaConfig {
	if o == nil || o.Config == nil {
		var ret DirQuotaConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirQuotaInfo) GetConfigOk() (*DirQuotaConfig, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *DirQuotaInfo) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given DirQuotaConfig and assigns it to the Config field.
func (o *DirQuotaInfo) SetConfig(v DirQuotaConfig) {
	o.Config = &v
}

// GetQuotas returns the Quotas field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DirQuotaInfo) GetQuotas() []DirQuotaPolicy {
	if o == nil  {
		var ret []DirQuotaPolicy
		return ret
	}
	return o.Quotas
}

// GetQuotasOk returns a tuple with the Quotas field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DirQuotaInfo) GetQuotasOk() (*[]DirQuotaPolicy, bool) {
	if o == nil || o.Quotas == nil {
		return nil, false
	}
	return &o.Quotas, true
}

// HasQuotas returns a boolean if a field has been set.
func (o *DirQuotaInfo) HasQuotas() bool {
	if o != nil && o.Quotas != nil {
		return true
	}

	return false
}

// SetQuotas gets a reference to the given []DirQuotaPolicy and assigns it to the Quotas field.
func (o *DirQuotaInfo) SetQuotas(v []DirQuotaPolicy) {
	o.Quotas = v
}

func (o DirQuotaInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.Quotas != nil {
		toSerialize["quotas"] = o.Quotas
	}
	return json.Marshal(toSerialize)
}

type NullableDirQuotaInfo struct {
	value *DirQuotaInfo
	isSet bool
}

func (v NullableDirQuotaInfo) Get() *DirQuotaInfo {
	return v.value
}

func (v *NullableDirQuotaInfo) Set(val *DirQuotaInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDirQuotaInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDirQuotaInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirQuotaInfo(val *DirQuotaInfo) *NullableDirQuotaInfo {
	return &NullableDirQuotaInfo{value: val, isSet: true}
}

func (v NullableDirQuotaInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirQuotaInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


