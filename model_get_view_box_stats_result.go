/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// GetViewBoxStatsResult GetViewBoxStatsResult is the result of get viewBoxStats api.
type GetViewBoxStatsResult struct {
	// Specifies a list of view box stats.
	StatsList []StorageDomainStats `json:"statsList,omitempty"`
}

// NewGetViewBoxStatsResult instantiates a new GetViewBoxStatsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetViewBoxStatsResult() *GetViewBoxStatsResult {
	this := GetViewBoxStatsResult{}
	return &this
}

// NewGetViewBoxStatsResultWithDefaults instantiates a new GetViewBoxStatsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetViewBoxStatsResultWithDefaults() *GetViewBoxStatsResult {
	this := GetViewBoxStatsResult{}
	return &this
}

// GetStatsList returns the StatsList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetViewBoxStatsResult) GetStatsList() []StorageDomainStats {
	if o == nil  {
		var ret []StorageDomainStats
		return ret
	}
	return o.StatsList
}

// GetStatsListOk returns a tuple with the StatsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetViewBoxStatsResult) GetStatsListOk() (*[]StorageDomainStats, bool) {
	if o == nil || o.StatsList == nil {
		return nil, false
	}
	return &o.StatsList, true
}

// HasStatsList returns a boolean if a field has been set.
func (o *GetViewBoxStatsResult) HasStatsList() bool {
	if o != nil && o.StatsList != nil {
		return true
	}

	return false
}

// SetStatsList gets a reference to the given []StorageDomainStats and assigns it to the StatsList field.
func (o *GetViewBoxStatsResult) SetStatsList(v []StorageDomainStats) {
	o.StatsList = v
}

func (o GetViewBoxStatsResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StatsList != nil {
		toSerialize["statsList"] = o.StatsList
	}
	return json.Marshal(toSerialize)
}

type NullableGetViewBoxStatsResult struct {
	value *GetViewBoxStatsResult
	isSet bool
}

func (v NullableGetViewBoxStatsResult) Get() *GetViewBoxStatsResult {
	return v.value
}

func (v *NullableGetViewBoxStatsResult) Set(val *GetViewBoxStatsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetViewBoxStatsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetViewBoxStatsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetViewBoxStatsResult(val *GetViewBoxStatsResult) *NullableGetViewBoxStatsResult {
	return &NullableGetViewBoxStatsResult{value: val, isSet: true}
}

func (v NullableGetViewBoxStatsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetViewBoxStatsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


