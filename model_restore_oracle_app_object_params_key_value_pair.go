/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// RestoreOracleAppObjectParamsKeyValuePair This defines the restore Shell environment.
type RestoreOracleAppObjectParamsKeyValuePair struct {
	// Name of the key.
	XKey NullableString `json:"xKey,omitempty"`
	// Value of the key.
	XValue NullableString `json:"xValue,omitempty"`
}

// NewRestoreOracleAppObjectParamsKeyValuePair instantiates a new RestoreOracleAppObjectParamsKeyValuePair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreOracleAppObjectParamsKeyValuePair() *RestoreOracleAppObjectParamsKeyValuePair {
	this := RestoreOracleAppObjectParamsKeyValuePair{}
	return &this
}

// NewRestoreOracleAppObjectParamsKeyValuePairWithDefaults instantiates a new RestoreOracleAppObjectParamsKeyValuePair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreOracleAppObjectParamsKeyValuePairWithDefaults() *RestoreOracleAppObjectParamsKeyValuePair {
	this := RestoreOracleAppObjectParamsKeyValuePair{}
	return &this
}

// GetXKey returns the XKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreOracleAppObjectParamsKeyValuePair) GetXKey() string {
	if o == nil || o.XKey.Get() == nil {
		var ret string
		return ret
	}
	return *o.XKey.Get()
}

// GetXKeyOk returns a tuple with the XKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreOracleAppObjectParamsKeyValuePair) GetXKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.XKey.Get(), o.XKey.IsSet()
}

// HasXKey returns a boolean if a field has been set.
func (o *RestoreOracleAppObjectParamsKeyValuePair) HasXKey() bool {
	if o != nil && o.XKey.IsSet() {
		return true
	}

	return false
}

// SetXKey gets a reference to the given NullableString and assigns it to the XKey field.
func (o *RestoreOracleAppObjectParamsKeyValuePair) SetXKey(v string) {
	o.XKey.Set(&v)
}
// SetXKeyNil sets the value for XKey to be an explicit nil
func (o *RestoreOracleAppObjectParamsKeyValuePair) SetXKeyNil() {
	o.XKey.Set(nil)
}

// UnsetXKey ensures that no value is present for XKey, not even an explicit nil
func (o *RestoreOracleAppObjectParamsKeyValuePair) UnsetXKey() {
	o.XKey.Unset()
}

// GetXValue returns the XValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreOracleAppObjectParamsKeyValuePair) GetXValue() string {
	if o == nil || o.XValue.Get() == nil {
		var ret string
		return ret
	}
	return *o.XValue.Get()
}

// GetXValueOk returns a tuple with the XValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreOracleAppObjectParamsKeyValuePair) GetXValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.XValue.Get(), o.XValue.IsSet()
}

// HasXValue returns a boolean if a field has been set.
func (o *RestoreOracleAppObjectParamsKeyValuePair) HasXValue() bool {
	if o != nil && o.XValue.IsSet() {
		return true
	}

	return false
}

// SetXValue gets a reference to the given NullableString and assigns it to the XValue field.
func (o *RestoreOracleAppObjectParamsKeyValuePair) SetXValue(v string) {
	o.XValue.Set(&v)
}
// SetXValueNil sets the value for XValue to be an explicit nil
func (o *RestoreOracleAppObjectParamsKeyValuePair) SetXValueNil() {
	o.XValue.Set(nil)
}

// UnsetXValue ensures that no value is present for XValue, not even an explicit nil
func (o *RestoreOracleAppObjectParamsKeyValuePair) UnsetXValue() {
	o.XValue.Unset()
}

func (o RestoreOracleAppObjectParamsKeyValuePair) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.XKey.IsSet() {
		toSerialize["xKey"] = o.XKey.Get()
	}
	if o.XValue.IsSet() {
		toSerialize["xValue"] = o.XValue.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreOracleAppObjectParamsKeyValuePair struct {
	value *RestoreOracleAppObjectParamsKeyValuePair
	isSet bool
}

func (v NullableRestoreOracleAppObjectParamsKeyValuePair) Get() *RestoreOracleAppObjectParamsKeyValuePair {
	return v.value
}

func (v *NullableRestoreOracleAppObjectParamsKeyValuePair) Set(val *RestoreOracleAppObjectParamsKeyValuePair) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreOracleAppObjectParamsKeyValuePair) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreOracleAppObjectParamsKeyValuePair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreOracleAppObjectParamsKeyValuePair(val *RestoreOracleAppObjectParamsKeyValuePair) *NullableRestoreOracleAppObjectParamsKeyValuePair {
	return &NullableRestoreOracleAppObjectParamsKeyValuePair{value: val, isSet: true}
}

func (v NullableRestoreOracleAppObjectParamsKeyValuePair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreOracleAppObjectParamsKeyValuePair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


