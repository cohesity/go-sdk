/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// MountVolumesInfoProto Each available extension is listed below along with the location of the proto file (relative to magneto/connectors) where it is defined.  MountVolumesInfoProto extension                     Location ============================================================================= vmware::MountVolumesInfoProto::vmware_mount_volumes_info vmware/vmware.proto =============================================================================
type MountVolumesInfoProto struct {
	CleanupError *ErrorProto `json:"cleanupError,omitempty"`
	Error *ErrorProto `json:"error,omitempty"`
	// This will be set to true if the task is complete on the slave.
	Finished NullableBool `json:"finished,omitempty"`
	// Contains the result information of the mounted volumes.
	MountVolumeResultVec []MountVolumeResult `json:"mountVolumeResultVec,omitempty"`
	RestoreDisksTaskInfoProto *SetupRestoreDiskTaskInfoProto `json:"restoreDisksTaskInfoProto,omitempty"`
	// This is the timestamp at which the slave task started.
	SlaveTaskStartTimeUsecs NullableInt64 `json:"slaveTaskStartTimeUsecs,omitempty"`
	// The type of environment this mount volumes info pertains to.
	Type NullableInt32 `json:"type,omitempty"`
	VmOnlineDisksError *ErrorProto `json:"vmOnlineDisksError,omitempty"`
}

// NewMountVolumesInfoProto instantiates a new MountVolumesInfoProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMountVolumesInfoProto() *MountVolumesInfoProto {
	this := MountVolumesInfoProto{}
	return &this
}

// NewMountVolumesInfoProtoWithDefaults instantiates a new MountVolumesInfoProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMountVolumesInfoProtoWithDefaults() *MountVolumesInfoProto {
	this := MountVolumesInfoProto{}
	return &this
}

// GetCleanupError returns the CleanupError field value if set, zero value otherwise.
func (o *MountVolumesInfoProto) GetCleanupError() ErrorProto {
	if o == nil || o.CleanupError == nil {
		var ret ErrorProto
		return ret
	}
	return *o.CleanupError
}

// GetCleanupErrorOk returns a tuple with the CleanupError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountVolumesInfoProto) GetCleanupErrorOk() (*ErrorProto, bool) {
	if o == nil || o.CleanupError == nil {
		return nil, false
	}
	return o.CleanupError, true
}

// HasCleanupError returns a boolean if a field has been set.
func (o *MountVolumesInfoProto) HasCleanupError() bool {
	if o != nil && o.CleanupError != nil {
		return true
	}

	return false
}

// SetCleanupError gets a reference to the given ErrorProto and assigns it to the CleanupError field.
func (o *MountVolumesInfoProto) SetCleanupError(v ErrorProto) {
	o.CleanupError = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *MountVolumesInfoProto) GetError() ErrorProto {
	if o == nil || o.Error == nil {
		var ret ErrorProto
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountVolumesInfoProto) GetErrorOk() (*ErrorProto, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *MountVolumesInfoProto) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given ErrorProto and assigns it to the Error field.
func (o *MountVolumesInfoProto) SetError(v ErrorProto) {
	o.Error = &v
}

// GetFinished returns the Finished field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MountVolumesInfoProto) GetFinished() bool {
	if o == nil || o.Finished.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Finished.Get()
}

// GetFinishedOk returns a tuple with the Finished field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MountVolumesInfoProto) GetFinishedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Finished.Get(), o.Finished.IsSet()
}

// HasFinished returns a boolean if a field has been set.
func (o *MountVolumesInfoProto) HasFinished() bool {
	if o != nil && o.Finished.IsSet() {
		return true
	}

	return false
}

// SetFinished gets a reference to the given NullableBool and assigns it to the Finished field.
func (o *MountVolumesInfoProto) SetFinished(v bool) {
	o.Finished.Set(&v)
}
// SetFinishedNil sets the value for Finished to be an explicit nil
func (o *MountVolumesInfoProto) SetFinishedNil() {
	o.Finished.Set(nil)
}

// UnsetFinished ensures that no value is present for Finished, not even an explicit nil
func (o *MountVolumesInfoProto) UnsetFinished() {
	o.Finished.Unset()
}

// GetMountVolumeResultVec returns the MountVolumeResultVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MountVolumesInfoProto) GetMountVolumeResultVec() []MountVolumeResult {
	if o == nil  {
		var ret []MountVolumeResult
		return ret
	}
	return o.MountVolumeResultVec
}

// GetMountVolumeResultVecOk returns a tuple with the MountVolumeResultVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MountVolumesInfoProto) GetMountVolumeResultVecOk() (*[]MountVolumeResult, bool) {
	if o == nil || o.MountVolumeResultVec == nil {
		return nil, false
	}
	return &o.MountVolumeResultVec, true
}

// HasMountVolumeResultVec returns a boolean if a field has been set.
func (o *MountVolumesInfoProto) HasMountVolumeResultVec() bool {
	if o != nil && o.MountVolumeResultVec != nil {
		return true
	}

	return false
}

// SetMountVolumeResultVec gets a reference to the given []MountVolumeResult and assigns it to the MountVolumeResultVec field.
func (o *MountVolumesInfoProto) SetMountVolumeResultVec(v []MountVolumeResult) {
	o.MountVolumeResultVec = v
}

// GetRestoreDisksTaskInfoProto returns the RestoreDisksTaskInfoProto field value if set, zero value otherwise.
func (o *MountVolumesInfoProto) GetRestoreDisksTaskInfoProto() SetupRestoreDiskTaskInfoProto {
	if o == nil || o.RestoreDisksTaskInfoProto == nil {
		var ret SetupRestoreDiskTaskInfoProto
		return ret
	}
	return *o.RestoreDisksTaskInfoProto
}

// GetRestoreDisksTaskInfoProtoOk returns a tuple with the RestoreDisksTaskInfoProto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountVolumesInfoProto) GetRestoreDisksTaskInfoProtoOk() (*SetupRestoreDiskTaskInfoProto, bool) {
	if o == nil || o.RestoreDisksTaskInfoProto == nil {
		return nil, false
	}
	return o.RestoreDisksTaskInfoProto, true
}

// HasRestoreDisksTaskInfoProto returns a boolean if a field has been set.
func (o *MountVolumesInfoProto) HasRestoreDisksTaskInfoProto() bool {
	if o != nil && o.RestoreDisksTaskInfoProto != nil {
		return true
	}

	return false
}

// SetRestoreDisksTaskInfoProto gets a reference to the given SetupRestoreDiskTaskInfoProto and assigns it to the RestoreDisksTaskInfoProto field.
func (o *MountVolumesInfoProto) SetRestoreDisksTaskInfoProto(v SetupRestoreDiskTaskInfoProto) {
	o.RestoreDisksTaskInfoProto = &v
}

// GetSlaveTaskStartTimeUsecs returns the SlaveTaskStartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MountVolumesInfoProto) GetSlaveTaskStartTimeUsecs() int64 {
	if o == nil || o.SlaveTaskStartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SlaveTaskStartTimeUsecs.Get()
}

// GetSlaveTaskStartTimeUsecsOk returns a tuple with the SlaveTaskStartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MountVolumesInfoProto) GetSlaveTaskStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SlaveTaskStartTimeUsecs.Get(), o.SlaveTaskStartTimeUsecs.IsSet()
}

// HasSlaveTaskStartTimeUsecs returns a boolean if a field has been set.
func (o *MountVolumesInfoProto) HasSlaveTaskStartTimeUsecs() bool {
	if o != nil && o.SlaveTaskStartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetSlaveTaskStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the SlaveTaskStartTimeUsecs field.
func (o *MountVolumesInfoProto) SetSlaveTaskStartTimeUsecs(v int64) {
	o.SlaveTaskStartTimeUsecs.Set(&v)
}
// SetSlaveTaskStartTimeUsecsNil sets the value for SlaveTaskStartTimeUsecs to be an explicit nil
func (o *MountVolumesInfoProto) SetSlaveTaskStartTimeUsecsNil() {
	o.SlaveTaskStartTimeUsecs.Set(nil)
}

// UnsetSlaveTaskStartTimeUsecs ensures that no value is present for SlaveTaskStartTimeUsecs, not even an explicit nil
func (o *MountVolumesInfoProto) UnsetSlaveTaskStartTimeUsecs() {
	o.SlaveTaskStartTimeUsecs.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MountVolumesInfoProto) GetType() int32 {
	if o == nil || o.Type.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MountVolumesInfoProto) GetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *MountVolumesInfoProto) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableInt32 and assigns it to the Type field.
func (o *MountVolumesInfoProto) SetType(v int32) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *MountVolumesInfoProto) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *MountVolumesInfoProto) UnsetType() {
	o.Type.Unset()
}

// GetVmOnlineDisksError returns the VmOnlineDisksError field value if set, zero value otherwise.
func (o *MountVolumesInfoProto) GetVmOnlineDisksError() ErrorProto {
	if o == nil || o.VmOnlineDisksError == nil {
		var ret ErrorProto
		return ret
	}
	return *o.VmOnlineDisksError
}

// GetVmOnlineDisksErrorOk returns a tuple with the VmOnlineDisksError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountVolumesInfoProto) GetVmOnlineDisksErrorOk() (*ErrorProto, bool) {
	if o == nil || o.VmOnlineDisksError == nil {
		return nil, false
	}
	return o.VmOnlineDisksError, true
}

// HasVmOnlineDisksError returns a boolean if a field has been set.
func (o *MountVolumesInfoProto) HasVmOnlineDisksError() bool {
	if o != nil && o.VmOnlineDisksError != nil {
		return true
	}

	return false
}

// SetVmOnlineDisksError gets a reference to the given ErrorProto and assigns it to the VmOnlineDisksError field.
func (o *MountVolumesInfoProto) SetVmOnlineDisksError(v ErrorProto) {
	o.VmOnlineDisksError = &v
}

func (o MountVolumesInfoProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CleanupError != nil {
		toSerialize["cleanupError"] = o.CleanupError
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.Finished.IsSet() {
		toSerialize["finished"] = o.Finished.Get()
	}
	if o.MountVolumeResultVec != nil {
		toSerialize["mountVolumeResultVec"] = o.MountVolumeResultVec
	}
	if o.RestoreDisksTaskInfoProto != nil {
		toSerialize["restoreDisksTaskInfoProto"] = o.RestoreDisksTaskInfoProto
	}
	if o.SlaveTaskStartTimeUsecs.IsSet() {
		toSerialize["slaveTaskStartTimeUsecs"] = o.SlaveTaskStartTimeUsecs.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.VmOnlineDisksError != nil {
		toSerialize["vmOnlineDisksError"] = o.VmOnlineDisksError
	}
	return json.Marshal(toSerialize)
}

type NullableMountVolumesInfoProto struct {
	value *MountVolumesInfoProto
	isSet bool
}

func (v NullableMountVolumesInfoProto) Get() *MountVolumesInfoProto {
	return v.value
}

func (v *NullableMountVolumesInfoProto) Set(val *MountVolumesInfoProto) {
	v.value = val
	v.isSet = true
}

func (v NullableMountVolumesInfoProto) IsSet() bool {
	return v.isSet
}

func (v *NullableMountVolumesInfoProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMountVolumesInfoProto(val *MountVolumesInfoProto) *NullableMountVolumesInfoProto {
	return &NullableMountVolumesInfoProto{value: val, isSet: true}
}

func (v NullableMountVolumesInfoProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMountVolumesInfoProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


