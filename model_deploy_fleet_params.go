/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// DeployFleetParams struct for DeployFleetParams
type DeployFleetParams struct {
	AwsFleetParams *AWSFleetParams1 `json:"awsFleetParams,omitempty"`
}

// NewDeployFleetParams instantiates a new DeployFleetParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployFleetParams() *DeployFleetParams {
	this := DeployFleetParams{}
	return &this
}

// NewDeployFleetParamsWithDefaults instantiates a new DeployFleetParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployFleetParamsWithDefaults() *DeployFleetParams {
	this := DeployFleetParams{}
	return &this
}

// GetAwsFleetParams returns the AwsFleetParams field value if set, zero value otherwise.
func (o *DeployFleetParams) GetAwsFleetParams() AWSFleetParams1 {
	if o == nil || o.AwsFleetParams == nil {
		var ret AWSFleetParams1
		return ret
	}
	return *o.AwsFleetParams
}

// GetAwsFleetParamsOk returns a tuple with the AwsFleetParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployFleetParams) GetAwsFleetParamsOk() (*AWSFleetParams1, bool) {
	if o == nil || o.AwsFleetParams == nil {
		return nil, false
	}
	return o.AwsFleetParams, true
}

// HasAwsFleetParams returns a boolean if a field has been set.
func (o *DeployFleetParams) HasAwsFleetParams() bool {
	if o != nil && o.AwsFleetParams != nil {
		return true
	}

	return false
}

// SetAwsFleetParams gets a reference to the given AWSFleetParams1 and assigns it to the AwsFleetParams field.
func (o *DeployFleetParams) SetAwsFleetParams(v AWSFleetParams1) {
	o.AwsFleetParams = &v
}

func (o DeployFleetParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AwsFleetParams != nil {
		toSerialize["awsFleetParams"] = o.AwsFleetParams
	}
	return json.Marshal(toSerialize)
}

type NullableDeployFleetParams struct {
	value *DeployFleetParams
	isSet bool
}

func (v NullableDeployFleetParams) Get() *DeployFleetParams {
	return v.value
}

func (v *NullableDeployFleetParams) Set(val *DeployFleetParams) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployFleetParams) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployFleetParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployFleetParams(val *DeployFleetParams) *NullableDeployFleetParams {
	return &NullableDeployFleetParams{value: val, isSet: true}
}

func (v NullableDeployFleetParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployFleetParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


