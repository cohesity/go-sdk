/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// DownloadPackageParameters Specifies the parameters needed for a request to download a new software package to a Cluster.
type DownloadPackageParameters struct {
	// Specifies a URL from which the package can be downloaded to the Cluster.
	Url NullableString `json:"url"`
}

// NewDownloadPackageParameters instantiates a new DownloadPackageParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDownloadPackageParameters(url NullableString) *DownloadPackageParameters {
	this := DownloadPackageParameters{}
	this.Url = url
	return &this
}

// NewDownloadPackageParametersWithDefaults instantiates a new DownloadPackageParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDownloadPackageParametersWithDefaults() *DownloadPackageParameters {
	this := DownloadPackageParameters{}
	return &this
}

// GetUrl returns the Url field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DownloadPackageParameters) GetUrl() string {
	if o == nil || o.Url.Get() == nil {
		var ret string
		return ret
	}

	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DownloadPackageParameters) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// SetUrl sets field value
func (o *DownloadPackageParameters) SetUrl(v string) {
	o.Url.Set(&v)
}

func (o DownloadPackageParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableDownloadPackageParameters struct {
	value *DownloadPackageParameters
	isSet bool
}

func (v NullableDownloadPackageParameters) Get() *DownloadPackageParameters {
	return v.value
}

func (v *NullableDownloadPackageParameters) Set(val *DownloadPackageParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableDownloadPackageParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableDownloadPackageParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDownloadPackageParameters(val *DownloadPackageParameters) *NullableDownloadPackageParameters {
	return &NullableDownloadPackageParameters{value: val, isSet: true}
}

func (v NullableDownloadPackageParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDownloadPackageParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


