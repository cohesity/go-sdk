/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// RunProtectionJobParam Specify the parameters to run a protection job.
type RunProtectionJobParam struct {
	// Optional parameter to be set if you want specific replication or archival associated with the policy to run.
	CopyRunTargets []RunJobSnapshotTarget `json:"copyRunTargets,omitempty"`
	// Optional parameters of a Run Now operation.
	RunNowParameters []RunNowParameters `json:"runNowParameters,omitempty"`
	// Specifies the type of backup. If not specified, 'kRegular' is assumed. 'kRegular' indicates a incremental (CBT) backup. Incremental backups utilizing CBT (if supported) are captured of the target protection objects. The first run of a kRegular schedule captures all the blocks. 'kFull' indicates a full (no CBT) backup. A complete backup (all blocks) of the target protection objects are always captured and Change Block Tracking (CBT) is not utilized. 'kLog' indicates a Database Log backup. Capture the database transaction logs to allow rolling back to a specific point in time. 'kSystem' indicates a system backup. System backups are used to do bare metal recovery of the system to a specific point in time.
	RunType NullableString `json:"runType,omitempty"`
	// Optional parameter if you want to back up only a subset of sources that are protected by the job in this run. If a Run Now operation is to be performed then the source ids should only be provided in the runNowParameters along with the database Ids.
	SourceIds []int64 `json:"sourceIds,omitempty"`
	// Specifies if default policy settings should be used interanally to copy snapshots to external targets already configured in policy. This field will only apply if \"CopyRunTargets\" is empty.
	UsePolicyDefaults NullableBool `json:"usePolicyDefaults,omitempty"`
}

// NewRunProtectionJobParam instantiates a new RunProtectionJobParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunProtectionJobParam() *RunProtectionJobParam {
	this := RunProtectionJobParam{}
	return &this
}

// NewRunProtectionJobParamWithDefaults instantiates a new RunProtectionJobParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunProtectionJobParamWithDefaults() *RunProtectionJobParam {
	this := RunProtectionJobParam{}
	return &this
}

// GetCopyRunTargets returns the CopyRunTargets field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunProtectionJobParam) GetCopyRunTargets() []RunJobSnapshotTarget {
	if o == nil  {
		var ret []RunJobSnapshotTarget
		return ret
	}
	return o.CopyRunTargets
}

// GetCopyRunTargetsOk returns a tuple with the CopyRunTargets field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunProtectionJobParam) GetCopyRunTargetsOk() (*[]RunJobSnapshotTarget, bool) {
	if o == nil || o.CopyRunTargets == nil {
		return nil, false
	}
	return &o.CopyRunTargets, true
}

// HasCopyRunTargets returns a boolean if a field has been set.
func (o *RunProtectionJobParam) HasCopyRunTargets() bool {
	if o != nil && o.CopyRunTargets != nil {
		return true
	}

	return false
}

// SetCopyRunTargets gets a reference to the given []RunJobSnapshotTarget and assigns it to the CopyRunTargets field.
func (o *RunProtectionJobParam) SetCopyRunTargets(v []RunJobSnapshotTarget) {
	o.CopyRunTargets = v
}

// GetRunNowParameters returns the RunNowParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunProtectionJobParam) GetRunNowParameters() []RunNowParameters {
	if o == nil  {
		var ret []RunNowParameters
		return ret
	}
	return o.RunNowParameters
}

// GetRunNowParametersOk returns a tuple with the RunNowParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunProtectionJobParam) GetRunNowParametersOk() (*[]RunNowParameters, bool) {
	if o == nil || o.RunNowParameters == nil {
		return nil, false
	}
	return &o.RunNowParameters, true
}

// HasRunNowParameters returns a boolean if a field has been set.
func (o *RunProtectionJobParam) HasRunNowParameters() bool {
	if o != nil && o.RunNowParameters != nil {
		return true
	}

	return false
}

// SetRunNowParameters gets a reference to the given []RunNowParameters and assigns it to the RunNowParameters field.
func (o *RunProtectionJobParam) SetRunNowParameters(v []RunNowParameters) {
	o.RunNowParameters = v
}

// GetRunType returns the RunType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunProtectionJobParam) GetRunType() string {
	if o == nil || o.RunType.Get() == nil {
		var ret string
		return ret
	}
	return *o.RunType.Get()
}

// GetRunTypeOk returns a tuple with the RunType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunProtectionJobParam) GetRunTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RunType.Get(), o.RunType.IsSet()
}

// HasRunType returns a boolean if a field has been set.
func (o *RunProtectionJobParam) HasRunType() bool {
	if o != nil && o.RunType.IsSet() {
		return true
	}

	return false
}

// SetRunType gets a reference to the given NullableString and assigns it to the RunType field.
func (o *RunProtectionJobParam) SetRunType(v string) {
	o.RunType.Set(&v)
}
// SetRunTypeNil sets the value for RunType to be an explicit nil
func (o *RunProtectionJobParam) SetRunTypeNil() {
	o.RunType.Set(nil)
}

// UnsetRunType ensures that no value is present for RunType, not even an explicit nil
func (o *RunProtectionJobParam) UnsetRunType() {
	o.RunType.Unset()
}

// GetSourceIds returns the SourceIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunProtectionJobParam) GetSourceIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.SourceIds
}

// GetSourceIdsOk returns a tuple with the SourceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunProtectionJobParam) GetSourceIdsOk() (*[]int64, bool) {
	if o == nil || o.SourceIds == nil {
		return nil, false
	}
	return &o.SourceIds, true
}

// HasSourceIds returns a boolean if a field has been set.
func (o *RunProtectionJobParam) HasSourceIds() bool {
	if o != nil && o.SourceIds != nil {
		return true
	}

	return false
}

// SetSourceIds gets a reference to the given []int64 and assigns it to the SourceIds field.
func (o *RunProtectionJobParam) SetSourceIds(v []int64) {
	o.SourceIds = v
}

// GetUsePolicyDefaults returns the UsePolicyDefaults field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunProtectionJobParam) GetUsePolicyDefaults() bool {
	if o == nil || o.UsePolicyDefaults.Get() == nil {
		var ret bool
		return ret
	}
	return *o.UsePolicyDefaults.Get()
}

// GetUsePolicyDefaultsOk returns a tuple with the UsePolicyDefaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunProtectionJobParam) GetUsePolicyDefaultsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UsePolicyDefaults.Get(), o.UsePolicyDefaults.IsSet()
}

// HasUsePolicyDefaults returns a boolean if a field has been set.
func (o *RunProtectionJobParam) HasUsePolicyDefaults() bool {
	if o != nil && o.UsePolicyDefaults.IsSet() {
		return true
	}

	return false
}

// SetUsePolicyDefaults gets a reference to the given NullableBool and assigns it to the UsePolicyDefaults field.
func (o *RunProtectionJobParam) SetUsePolicyDefaults(v bool) {
	o.UsePolicyDefaults.Set(&v)
}
// SetUsePolicyDefaultsNil sets the value for UsePolicyDefaults to be an explicit nil
func (o *RunProtectionJobParam) SetUsePolicyDefaultsNil() {
	o.UsePolicyDefaults.Set(nil)
}

// UnsetUsePolicyDefaults ensures that no value is present for UsePolicyDefaults, not even an explicit nil
func (o *RunProtectionJobParam) UnsetUsePolicyDefaults() {
	o.UsePolicyDefaults.Unset()
}

func (o RunProtectionJobParam) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CopyRunTargets != nil {
		toSerialize["copyRunTargets"] = o.CopyRunTargets
	}
	if o.RunNowParameters != nil {
		toSerialize["runNowParameters"] = o.RunNowParameters
	}
	if o.RunType.IsSet() {
		toSerialize["runType"] = o.RunType.Get()
	}
	if o.SourceIds != nil {
		toSerialize["sourceIds"] = o.SourceIds
	}
	if o.UsePolicyDefaults.IsSet() {
		toSerialize["usePolicyDefaults"] = o.UsePolicyDefaults.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRunProtectionJobParam struct {
	value *RunProtectionJobParam
	isSet bool
}

func (v NullableRunProtectionJobParam) Get() *RunProtectionJobParam {
	return v.value
}

func (v *NullableRunProtectionJobParam) Set(val *RunProtectionJobParam) {
	v.value = val
	v.isSet = true
}

func (v NullableRunProtectionJobParam) IsSet() bool {
	return v.isSet
}

func (v *NullableRunProtectionJobParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunProtectionJobParam(val *RunProtectionJobParam) *NullableRunProtectionJobParam {
	return &NullableRunProtectionJobParam{value: val, isSet: true}
}

func (v NullableRunProtectionJobParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunProtectionJobParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


