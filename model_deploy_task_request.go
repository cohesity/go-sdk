/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// DeployTaskRequest Specifies the settings for a Deploy Task that deploys VMs on cloud.
type DeployTaskRequest struct {
	// Specifies the name of the Deploy Task. This field must be set and must be a unique name.
	Name NullableString `json:"name"`
	// Specifies a new registered parent Protection Source. If specified the selected objects are cloned or recovered to this new Protection Source. If not specified, objects are cloned or recovered to the original Protection Source that was managing them.
	NewParentId NullableInt64 `json:"newParentId,omitempty"`
	// Array of Objects.  Specifies a list of Protection Source objects or Protection Job objects (with specified Protection Source objects).
	Objects []RestoreObjectDetails `json:"objects,omitempty"`
	Target *CloudDeployTargetDetails `json:"target,omitempty"`
}

// NewDeployTaskRequest instantiates a new DeployTaskRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployTaskRequest(name NullableString) *DeployTaskRequest {
	this := DeployTaskRequest{}
	this.Name = name
	return &this
}

// NewDeployTaskRequestWithDefaults instantiates a new DeployTaskRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployTaskRequestWithDefaults() *DeployTaskRequest {
	this := DeployTaskRequest{}
	return &this
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeployTaskRequest) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeployTaskRequest) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *DeployTaskRequest) SetName(v string) {
	o.Name.Set(&v)
}

// GetNewParentId returns the NewParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeployTaskRequest) GetNewParentId() int64 {
	if o == nil || o.NewParentId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NewParentId.Get()
}

// GetNewParentIdOk returns a tuple with the NewParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeployTaskRequest) GetNewParentIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NewParentId.Get(), o.NewParentId.IsSet()
}

// HasNewParentId returns a boolean if a field has been set.
func (o *DeployTaskRequest) HasNewParentId() bool {
	if o != nil && o.NewParentId.IsSet() {
		return true
	}

	return false
}

// SetNewParentId gets a reference to the given NullableInt64 and assigns it to the NewParentId field.
func (o *DeployTaskRequest) SetNewParentId(v int64) {
	o.NewParentId.Set(&v)
}
// SetNewParentIdNil sets the value for NewParentId to be an explicit nil
func (o *DeployTaskRequest) SetNewParentIdNil() {
	o.NewParentId.Set(nil)
}

// UnsetNewParentId ensures that no value is present for NewParentId, not even an explicit nil
func (o *DeployTaskRequest) UnsetNewParentId() {
	o.NewParentId.Unset()
}

// GetObjects returns the Objects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeployTaskRequest) GetObjects() []RestoreObjectDetails {
	if o == nil  {
		var ret []RestoreObjectDetails
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeployTaskRequest) GetObjectsOk() (*[]RestoreObjectDetails, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return &o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *DeployTaskRequest) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []RestoreObjectDetails and assigns it to the Objects field.
func (o *DeployTaskRequest) SetObjects(v []RestoreObjectDetails) {
	o.Objects = v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *DeployTaskRequest) GetTarget() CloudDeployTargetDetails {
	if o == nil || o.Target == nil {
		var ret CloudDeployTargetDetails
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployTaskRequest) GetTargetOk() (*CloudDeployTargetDetails, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *DeployTaskRequest) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given CloudDeployTargetDetails and assigns it to the Target field.
func (o *DeployTaskRequest) SetTarget(v CloudDeployTargetDetails) {
	o.Target = &v
}

func (o DeployTaskRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name.Get()
	}
	if o.NewParentId.IsSet() {
		toSerialize["newParentId"] = o.NewParentId.Get()
	}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	return json.Marshal(toSerialize)
}

type NullableDeployTaskRequest struct {
	value *DeployTaskRequest
	isSet bool
}

func (v NullableDeployTaskRequest) Get() *DeployTaskRequest {
	return v.value
}

func (v *NullableDeployTaskRequest) Set(val *DeployTaskRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployTaskRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployTaskRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployTaskRequest(val *DeployTaskRequest) *NullableDeployTaskRequest {
	return &NullableDeployTaskRequest{value: val, isSet: true}
}

func (v NullableDeployTaskRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployTaskRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


