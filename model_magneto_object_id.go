/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// MagnetoObjectId struct for MagnetoObjectId
type MagnetoObjectId struct {
	Entity *EntityProto `json:"entity,omitempty"`
	// The id of the local job that the object belongs to, which may or may not match the object_id field in job_uid below depending on whether the object originally belonged to this local job or to a different remote job.
	JobId NullableInt64 `json:"jobId,omitempty"`
	JobUid *UniversalIdProto `json:"jobUid,omitempty"`
}

// NewMagnetoObjectId instantiates a new MagnetoObjectId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMagnetoObjectId() *MagnetoObjectId {
	this := MagnetoObjectId{}
	return &this
}

// NewMagnetoObjectIdWithDefaults instantiates a new MagnetoObjectId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMagnetoObjectIdWithDefaults() *MagnetoObjectId {
	this := MagnetoObjectId{}
	return &this
}

// GetEntity returns the Entity field value if set, zero value otherwise.
func (o *MagnetoObjectId) GetEntity() EntityProto {
	if o == nil || o.Entity == nil {
		var ret EntityProto
		return ret
	}
	return *o.Entity
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MagnetoObjectId) GetEntityOk() (*EntityProto, bool) {
	if o == nil || o.Entity == nil {
		return nil, false
	}
	return o.Entity, true
}

// HasEntity returns a boolean if a field has been set.
func (o *MagnetoObjectId) HasEntity() bool {
	if o != nil && o.Entity != nil {
		return true
	}

	return false
}

// SetEntity gets a reference to the given EntityProto and assigns it to the Entity field.
func (o *MagnetoObjectId) SetEntity(v EntityProto) {
	o.Entity = &v
}

// GetJobId returns the JobId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MagnetoObjectId) GetJobId() int64 {
	if o == nil || o.JobId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.JobId.Get()
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MagnetoObjectId) GetJobIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobId.Get(), o.JobId.IsSet()
}

// HasJobId returns a boolean if a field has been set.
func (o *MagnetoObjectId) HasJobId() bool {
	if o != nil && o.JobId.IsSet() {
		return true
	}

	return false
}

// SetJobId gets a reference to the given NullableInt64 and assigns it to the JobId field.
func (o *MagnetoObjectId) SetJobId(v int64) {
	o.JobId.Set(&v)
}
// SetJobIdNil sets the value for JobId to be an explicit nil
func (o *MagnetoObjectId) SetJobIdNil() {
	o.JobId.Set(nil)
}

// UnsetJobId ensures that no value is present for JobId, not even an explicit nil
func (o *MagnetoObjectId) UnsetJobId() {
	o.JobId.Unset()
}

// GetJobUid returns the JobUid field value if set, zero value otherwise.
func (o *MagnetoObjectId) GetJobUid() UniversalIdProto {
	if o == nil || o.JobUid == nil {
		var ret UniversalIdProto
		return ret
	}
	return *o.JobUid
}

// GetJobUidOk returns a tuple with the JobUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MagnetoObjectId) GetJobUidOk() (*UniversalIdProto, bool) {
	if o == nil || o.JobUid == nil {
		return nil, false
	}
	return o.JobUid, true
}

// HasJobUid returns a boolean if a field has been set.
func (o *MagnetoObjectId) HasJobUid() bool {
	if o != nil && o.JobUid != nil {
		return true
	}

	return false
}

// SetJobUid gets a reference to the given UniversalIdProto and assigns it to the JobUid field.
func (o *MagnetoObjectId) SetJobUid(v UniversalIdProto) {
	o.JobUid = &v
}

func (o MagnetoObjectId) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Entity != nil {
		toSerialize["entity"] = o.Entity
	}
	if o.JobId.IsSet() {
		toSerialize["jobId"] = o.JobId.Get()
	}
	if o.JobUid != nil {
		toSerialize["jobUid"] = o.JobUid
	}
	return json.Marshal(toSerialize)
}

type NullableMagnetoObjectId struct {
	value *MagnetoObjectId
	isSet bool
}

func (v NullableMagnetoObjectId) Get() *MagnetoObjectId {
	return v.value
}

func (v *NullableMagnetoObjectId) Set(val *MagnetoObjectId) {
	v.value = val
	v.isSet = true
}

func (v NullableMagnetoObjectId) IsSet() bool {
	return v.isSet
}

func (v *NullableMagnetoObjectId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMagnetoObjectId(val *MagnetoObjectId) *NullableMagnetoObjectId {
	return &NullableMagnetoObjectId{value: val, isSet: true}
}

func (v NullableMagnetoObjectId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMagnetoObjectId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


