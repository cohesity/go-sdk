/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// NetworkInterface Specifies the properties of a network interface.
type NetworkInterface struct {
	// Specifies the types of the slots of any slaves if this interface is a bond.
	BondSlaveSlotTypes []string `json:"bondSlaveSlotTypes,omitempty"`
	// Specifies the names of any slaves if this interface is a bond.
	BondSlaves []string `json:"bondSlaves,omitempty"`
	// Specifies the bonding mode if this interface is a bond.
	BondingMode NullableInt32 `json:"bondingMode,omitempty"`
	// Specifies the gateway of the interface.
	Gateway NullableString `json:"gateway,omitempty"`
	// Specifies the gateway6 of the interface.
	Gateway6 NullableString `json:"gateway6,omitempty"`
	// Specifies the group that this interface belongs to.
	Group NullableString `json:"group,omitempty"`
	// Specifies the ID of this network interface.
	Id NullableInt64 `json:"id,omitempty"`
	// Specifies whether or not the Interface is connected.
	IsConnected NullableBool `json:"isConnected,omitempty"`
	// Specifies whether or not to use this interface as the default route.
	IsDefaultRoute NullableBool `json:"isDefaultRoute,omitempty"`
	// Specifies whether or not the interface is currently  up.
	IsUp NullableBool `json:"isUp,omitempty"`
	// Specifies the Mac address of the Interface.
	MacAddress NullableString `json:"macAddress,omitempty"`
	// Specifies the MTU of the interface.
	Mtu NullableInt32 `json:"mtu,omitempty"`
	// Specifies the name of the interface port.
	Name NullableString `json:"name,omitempty"`
	// Specifies the role of this interface.
	Role NullableString `json:"role,omitempty"`
	// Specifies the types of services this interface is used for.
	Services []string `json:"services,omitempty"`
	// Specifies the speed of the Interface.
	Speed NullableString `json:"speed,omitempty"`
	// Specifies the static IP of the interface.
	StaticIp NullableString `json:"staticIp,omitempty"`
	// Specifies the static IPv6 of the interface.
	StaticIp6 NullableString `json:"staticIp6,omitempty"`
	// Specifies the subnet mask of the interface.
	Subnet NullableString `json:"subnet,omitempty"`
	// Specifies the subnet6 mask of the interface.
	Subnet6 NullableString `json:"subnet6,omitempty"`
	// Specifies the type of interface.
	Type NullableInt32 `json:"type,omitempty"`
	// Specifies the virtual IP of the interface.
	VirtualIp NullableString `json:"virtualIp,omitempty"`
}

// NewNetworkInterface instantiates a new NetworkInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkInterface() *NetworkInterface {
	this := NetworkInterface{}
	return &this
}

// NewNetworkInterfaceWithDefaults instantiates a new NetworkInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkInterfaceWithDefaults() *NetworkInterface {
	this := NetworkInterface{}
	return &this
}

// GetBondSlaveSlotTypes returns the BondSlaveSlotTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetBondSlaveSlotTypes() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.BondSlaveSlotTypes
}

// GetBondSlaveSlotTypesOk returns a tuple with the BondSlaveSlotTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetBondSlaveSlotTypesOk() (*[]string, bool) {
	if o == nil || o.BondSlaveSlotTypes == nil {
		return nil, false
	}
	return &o.BondSlaveSlotTypes, true
}

// HasBondSlaveSlotTypes returns a boolean if a field has been set.
func (o *NetworkInterface) HasBondSlaveSlotTypes() bool {
	if o != nil && o.BondSlaveSlotTypes != nil {
		return true
	}

	return false
}

// SetBondSlaveSlotTypes gets a reference to the given []string and assigns it to the BondSlaveSlotTypes field.
func (o *NetworkInterface) SetBondSlaveSlotTypes(v []string) {
	o.BondSlaveSlotTypes = v
}

// GetBondSlaves returns the BondSlaves field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetBondSlaves() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.BondSlaves
}

// GetBondSlavesOk returns a tuple with the BondSlaves field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetBondSlavesOk() (*[]string, bool) {
	if o == nil || o.BondSlaves == nil {
		return nil, false
	}
	return &o.BondSlaves, true
}

// HasBondSlaves returns a boolean if a field has been set.
func (o *NetworkInterface) HasBondSlaves() bool {
	if o != nil && o.BondSlaves != nil {
		return true
	}

	return false
}

// SetBondSlaves gets a reference to the given []string and assigns it to the BondSlaves field.
func (o *NetworkInterface) SetBondSlaves(v []string) {
	o.BondSlaves = v
}

// GetBondingMode returns the BondingMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetBondingMode() int32 {
	if o == nil || o.BondingMode.Get() == nil {
		var ret int32
		return ret
	}
	return *o.BondingMode.Get()
}

// GetBondingModeOk returns a tuple with the BondingMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetBondingModeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BondingMode.Get(), o.BondingMode.IsSet()
}

// HasBondingMode returns a boolean if a field has been set.
func (o *NetworkInterface) HasBondingMode() bool {
	if o != nil && o.BondingMode.IsSet() {
		return true
	}

	return false
}

// SetBondingMode gets a reference to the given NullableInt32 and assigns it to the BondingMode field.
func (o *NetworkInterface) SetBondingMode(v int32) {
	o.BondingMode.Set(&v)
}
// SetBondingModeNil sets the value for BondingMode to be an explicit nil
func (o *NetworkInterface) SetBondingModeNil() {
	o.BondingMode.Set(nil)
}

// UnsetBondingMode ensures that no value is present for BondingMode, not even an explicit nil
func (o *NetworkInterface) UnsetBondingMode() {
	o.BondingMode.Unset()
}

// GetGateway returns the Gateway field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetGateway() string {
	if o == nil || o.Gateway.Get() == nil {
		var ret string
		return ret
	}
	return *o.Gateway.Get()
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetGatewayOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Gateway.Get(), o.Gateway.IsSet()
}

// HasGateway returns a boolean if a field has been set.
func (o *NetworkInterface) HasGateway() bool {
	if o != nil && o.Gateway.IsSet() {
		return true
	}

	return false
}

// SetGateway gets a reference to the given NullableString and assigns it to the Gateway field.
func (o *NetworkInterface) SetGateway(v string) {
	o.Gateway.Set(&v)
}
// SetGatewayNil sets the value for Gateway to be an explicit nil
func (o *NetworkInterface) SetGatewayNil() {
	o.Gateway.Set(nil)
}

// UnsetGateway ensures that no value is present for Gateway, not even an explicit nil
func (o *NetworkInterface) UnsetGateway() {
	o.Gateway.Unset()
}

// GetGateway6 returns the Gateway6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetGateway6() string {
	if o == nil || o.Gateway6.Get() == nil {
		var ret string
		return ret
	}
	return *o.Gateway6.Get()
}

// GetGateway6Ok returns a tuple with the Gateway6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetGateway6Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Gateway6.Get(), o.Gateway6.IsSet()
}

// HasGateway6 returns a boolean if a field has been set.
func (o *NetworkInterface) HasGateway6() bool {
	if o != nil && o.Gateway6.IsSet() {
		return true
	}

	return false
}

// SetGateway6 gets a reference to the given NullableString and assigns it to the Gateway6 field.
func (o *NetworkInterface) SetGateway6(v string) {
	o.Gateway6.Set(&v)
}
// SetGateway6Nil sets the value for Gateway6 to be an explicit nil
func (o *NetworkInterface) SetGateway6Nil() {
	o.Gateway6.Set(nil)
}

// UnsetGateway6 ensures that no value is present for Gateway6, not even an explicit nil
func (o *NetworkInterface) UnsetGateway6() {
	o.Gateway6.Unset()
}

// GetGroup returns the Group field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetGroup() string {
	if o == nil || o.Group.Get() == nil {
		var ret string
		return ret
	}
	return *o.Group.Get()
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetGroupOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Group.Get(), o.Group.IsSet()
}

// HasGroup returns a boolean if a field has been set.
func (o *NetworkInterface) HasGroup() bool {
	if o != nil && o.Group.IsSet() {
		return true
	}

	return false
}

// SetGroup gets a reference to the given NullableString and assigns it to the Group field.
func (o *NetworkInterface) SetGroup(v string) {
	o.Group.Set(&v)
}
// SetGroupNil sets the value for Group to be an explicit nil
func (o *NetworkInterface) SetGroupNil() {
	o.Group.Set(nil)
}

// UnsetGroup ensures that no value is present for Group, not even an explicit nil
func (o *NetworkInterface) UnsetGroup() {
	o.Group.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetId() int64 {
	if o == nil || o.Id.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *NetworkInterface) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt64 and assigns it to the Id field.
func (o *NetworkInterface) SetId(v int64) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *NetworkInterface) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *NetworkInterface) UnsetId() {
	o.Id.Unset()
}

// GetIsConnected returns the IsConnected field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetIsConnected() bool {
	if o == nil || o.IsConnected.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsConnected.Get()
}

// GetIsConnectedOk returns a tuple with the IsConnected field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetIsConnectedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsConnected.Get(), o.IsConnected.IsSet()
}

// HasIsConnected returns a boolean if a field has been set.
func (o *NetworkInterface) HasIsConnected() bool {
	if o != nil && o.IsConnected.IsSet() {
		return true
	}

	return false
}

// SetIsConnected gets a reference to the given NullableBool and assigns it to the IsConnected field.
func (o *NetworkInterface) SetIsConnected(v bool) {
	o.IsConnected.Set(&v)
}
// SetIsConnectedNil sets the value for IsConnected to be an explicit nil
func (o *NetworkInterface) SetIsConnectedNil() {
	o.IsConnected.Set(nil)
}

// UnsetIsConnected ensures that no value is present for IsConnected, not even an explicit nil
func (o *NetworkInterface) UnsetIsConnected() {
	o.IsConnected.Unset()
}

// GetIsDefaultRoute returns the IsDefaultRoute field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetIsDefaultRoute() bool {
	if o == nil || o.IsDefaultRoute.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsDefaultRoute.Get()
}

// GetIsDefaultRouteOk returns a tuple with the IsDefaultRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetIsDefaultRouteOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsDefaultRoute.Get(), o.IsDefaultRoute.IsSet()
}

// HasIsDefaultRoute returns a boolean if a field has been set.
func (o *NetworkInterface) HasIsDefaultRoute() bool {
	if o != nil && o.IsDefaultRoute.IsSet() {
		return true
	}

	return false
}

// SetIsDefaultRoute gets a reference to the given NullableBool and assigns it to the IsDefaultRoute field.
func (o *NetworkInterface) SetIsDefaultRoute(v bool) {
	o.IsDefaultRoute.Set(&v)
}
// SetIsDefaultRouteNil sets the value for IsDefaultRoute to be an explicit nil
func (o *NetworkInterface) SetIsDefaultRouteNil() {
	o.IsDefaultRoute.Set(nil)
}

// UnsetIsDefaultRoute ensures that no value is present for IsDefaultRoute, not even an explicit nil
func (o *NetworkInterface) UnsetIsDefaultRoute() {
	o.IsDefaultRoute.Unset()
}

// GetIsUp returns the IsUp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetIsUp() bool {
	if o == nil || o.IsUp.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsUp.Get()
}

// GetIsUpOk returns a tuple with the IsUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetIsUpOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsUp.Get(), o.IsUp.IsSet()
}

// HasIsUp returns a boolean if a field has been set.
func (o *NetworkInterface) HasIsUp() bool {
	if o != nil && o.IsUp.IsSet() {
		return true
	}

	return false
}

// SetIsUp gets a reference to the given NullableBool and assigns it to the IsUp field.
func (o *NetworkInterface) SetIsUp(v bool) {
	o.IsUp.Set(&v)
}
// SetIsUpNil sets the value for IsUp to be an explicit nil
func (o *NetworkInterface) SetIsUpNil() {
	o.IsUp.Set(nil)
}

// UnsetIsUp ensures that no value is present for IsUp, not even an explicit nil
func (o *NetworkInterface) UnsetIsUp() {
	o.IsUp.Unset()
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetMacAddress() string {
	if o == nil || o.MacAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.MacAddress.Get()
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetMacAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MacAddress.Get(), o.MacAddress.IsSet()
}

// HasMacAddress returns a boolean if a field has been set.
func (o *NetworkInterface) HasMacAddress() bool {
	if o != nil && o.MacAddress.IsSet() {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given NullableString and assigns it to the MacAddress field.
func (o *NetworkInterface) SetMacAddress(v string) {
	o.MacAddress.Set(&v)
}
// SetMacAddressNil sets the value for MacAddress to be an explicit nil
func (o *NetworkInterface) SetMacAddressNil() {
	o.MacAddress.Set(nil)
}

// UnsetMacAddress ensures that no value is present for MacAddress, not even an explicit nil
func (o *NetworkInterface) UnsetMacAddress() {
	o.MacAddress.Unset()
}

// GetMtu returns the Mtu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetMtu() int32 {
	if o == nil || o.Mtu.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Mtu.Get()
}

// GetMtuOk returns a tuple with the Mtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetMtuOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Mtu.Get(), o.Mtu.IsSet()
}

// HasMtu returns a boolean if a field has been set.
func (o *NetworkInterface) HasMtu() bool {
	if o != nil && o.Mtu.IsSet() {
		return true
	}

	return false
}

// SetMtu gets a reference to the given NullableInt32 and assigns it to the Mtu field.
func (o *NetworkInterface) SetMtu(v int32) {
	o.Mtu.Set(&v)
}
// SetMtuNil sets the value for Mtu to be an explicit nil
func (o *NetworkInterface) SetMtuNil() {
	o.Mtu.Set(nil)
}

// UnsetMtu ensures that no value is present for Mtu, not even an explicit nil
func (o *NetworkInterface) UnsetMtu() {
	o.Mtu.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *NetworkInterface) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *NetworkInterface) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *NetworkInterface) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *NetworkInterface) UnsetName() {
	o.Name.Unset()
}

// GetRole returns the Role field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetRole() string {
	if o == nil || o.Role.Get() == nil {
		var ret string
		return ret
	}
	return *o.Role.Get()
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetRoleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Role.Get(), o.Role.IsSet()
}

// HasRole returns a boolean if a field has been set.
func (o *NetworkInterface) HasRole() bool {
	if o != nil && o.Role.IsSet() {
		return true
	}

	return false
}

// SetRole gets a reference to the given NullableString and assigns it to the Role field.
func (o *NetworkInterface) SetRole(v string) {
	o.Role.Set(&v)
}
// SetRoleNil sets the value for Role to be an explicit nil
func (o *NetworkInterface) SetRoleNil() {
	o.Role.Set(nil)
}

// UnsetRole ensures that no value is present for Role, not even an explicit nil
func (o *NetworkInterface) UnsetRole() {
	o.Role.Unset()
}

// GetServices returns the Services field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetServices() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetServicesOk() (*[]string, bool) {
	if o == nil || o.Services == nil {
		return nil, false
	}
	return &o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *NetworkInterface) HasServices() bool {
	if o != nil && o.Services != nil {
		return true
	}

	return false
}

// SetServices gets a reference to the given []string and assigns it to the Services field.
func (o *NetworkInterface) SetServices(v []string) {
	o.Services = v
}

// GetSpeed returns the Speed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetSpeed() string {
	if o == nil || o.Speed.Get() == nil {
		var ret string
		return ret
	}
	return *o.Speed.Get()
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetSpeedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Speed.Get(), o.Speed.IsSet()
}

// HasSpeed returns a boolean if a field has been set.
func (o *NetworkInterface) HasSpeed() bool {
	if o != nil && o.Speed.IsSet() {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given NullableString and assigns it to the Speed field.
func (o *NetworkInterface) SetSpeed(v string) {
	o.Speed.Set(&v)
}
// SetSpeedNil sets the value for Speed to be an explicit nil
func (o *NetworkInterface) SetSpeedNil() {
	o.Speed.Set(nil)
}

// UnsetSpeed ensures that no value is present for Speed, not even an explicit nil
func (o *NetworkInterface) UnsetSpeed() {
	o.Speed.Unset()
}

// GetStaticIp returns the StaticIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetStaticIp() string {
	if o == nil || o.StaticIp.Get() == nil {
		var ret string
		return ret
	}
	return *o.StaticIp.Get()
}

// GetStaticIpOk returns a tuple with the StaticIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetStaticIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StaticIp.Get(), o.StaticIp.IsSet()
}

// HasStaticIp returns a boolean if a field has been set.
func (o *NetworkInterface) HasStaticIp() bool {
	if o != nil && o.StaticIp.IsSet() {
		return true
	}

	return false
}

// SetStaticIp gets a reference to the given NullableString and assigns it to the StaticIp field.
func (o *NetworkInterface) SetStaticIp(v string) {
	o.StaticIp.Set(&v)
}
// SetStaticIpNil sets the value for StaticIp to be an explicit nil
func (o *NetworkInterface) SetStaticIpNil() {
	o.StaticIp.Set(nil)
}

// UnsetStaticIp ensures that no value is present for StaticIp, not even an explicit nil
func (o *NetworkInterface) UnsetStaticIp() {
	o.StaticIp.Unset()
}

// GetStaticIp6 returns the StaticIp6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetStaticIp6() string {
	if o == nil || o.StaticIp6.Get() == nil {
		var ret string
		return ret
	}
	return *o.StaticIp6.Get()
}

// GetStaticIp6Ok returns a tuple with the StaticIp6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetStaticIp6Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StaticIp6.Get(), o.StaticIp6.IsSet()
}

// HasStaticIp6 returns a boolean if a field has been set.
func (o *NetworkInterface) HasStaticIp6() bool {
	if o != nil && o.StaticIp6.IsSet() {
		return true
	}

	return false
}

// SetStaticIp6 gets a reference to the given NullableString and assigns it to the StaticIp6 field.
func (o *NetworkInterface) SetStaticIp6(v string) {
	o.StaticIp6.Set(&v)
}
// SetStaticIp6Nil sets the value for StaticIp6 to be an explicit nil
func (o *NetworkInterface) SetStaticIp6Nil() {
	o.StaticIp6.Set(nil)
}

// UnsetStaticIp6 ensures that no value is present for StaticIp6, not even an explicit nil
func (o *NetworkInterface) UnsetStaticIp6() {
	o.StaticIp6.Unset()
}

// GetSubnet returns the Subnet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetSubnet() string {
	if o == nil || o.Subnet.Get() == nil {
		var ret string
		return ret
	}
	return *o.Subnet.Get()
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetSubnetOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Subnet.Get(), o.Subnet.IsSet()
}

// HasSubnet returns a boolean if a field has been set.
func (o *NetworkInterface) HasSubnet() bool {
	if o != nil && o.Subnet.IsSet() {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given NullableString and assigns it to the Subnet field.
func (o *NetworkInterface) SetSubnet(v string) {
	o.Subnet.Set(&v)
}
// SetSubnetNil sets the value for Subnet to be an explicit nil
func (o *NetworkInterface) SetSubnetNil() {
	o.Subnet.Set(nil)
}

// UnsetSubnet ensures that no value is present for Subnet, not even an explicit nil
func (o *NetworkInterface) UnsetSubnet() {
	o.Subnet.Unset()
}

// GetSubnet6 returns the Subnet6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetSubnet6() string {
	if o == nil || o.Subnet6.Get() == nil {
		var ret string
		return ret
	}
	return *o.Subnet6.Get()
}

// GetSubnet6Ok returns a tuple with the Subnet6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetSubnet6Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Subnet6.Get(), o.Subnet6.IsSet()
}

// HasSubnet6 returns a boolean if a field has been set.
func (o *NetworkInterface) HasSubnet6() bool {
	if o != nil && o.Subnet6.IsSet() {
		return true
	}

	return false
}

// SetSubnet6 gets a reference to the given NullableString and assigns it to the Subnet6 field.
func (o *NetworkInterface) SetSubnet6(v string) {
	o.Subnet6.Set(&v)
}
// SetSubnet6Nil sets the value for Subnet6 to be an explicit nil
func (o *NetworkInterface) SetSubnet6Nil() {
	o.Subnet6.Set(nil)
}

// UnsetSubnet6 ensures that no value is present for Subnet6, not even an explicit nil
func (o *NetworkInterface) UnsetSubnet6() {
	o.Subnet6.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetType() int32 {
	if o == nil || o.Type.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *NetworkInterface) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableInt32 and assigns it to the Type field.
func (o *NetworkInterface) SetType(v int32) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *NetworkInterface) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *NetworkInterface) UnsetType() {
	o.Type.Unset()
}

// GetVirtualIp returns the VirtualIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterface) GetVirtualIp() string {
	if o == nil || o.VirtualIp.Get() == nil {
		var ret string
		return ret
	}
	return *o.VirtualIp.Get()
}

// GetVirtualIpOk returns a tuple with the VirtualIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterface) GetVirtualIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VirtualIp.Get(), o.VirtualIp.IsSet()
}

// HasVirtualIp returns a boolean if a field has been set.
func (o *NetworkInterface) HasVirtualIp() bool {
	if o != nil && o.VirtualIp.IsSet() {
		return true
	}

	return false
}

// SetVirtualIp gets a reference to the given NullableString and assigns it to the VirtualIp field.
func (o *NetworkInterface) SetVirtualIp(v string) {
	o.VirtualIp.Set(&v)
}
// SetVirtualIpNil sets the value for VirtualIp to be an explicit nil
func (o *NetworkInterface) SetVirtualIpNil() {
	o.VirtualIp.Set(nil)
}

// UnsetVirtualIp ensures that no value is present for VirtualIp, not even an explicit nil
func (o *NetworkInterface) UnsetVirtualIp() {
	o.VirtualIp.Unset()
}

func (o NetworkInterface) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BondSlaveSlotTypes != nil {
		toSerialize["bondSlaveSlotTypes"] = o.BondSlaveSlotTypes
	}
	if o.BondSlaves != nil {
		toSerialize["bondSlaves"] = o.BondSlaves
	}
	if o.BondingMode.IsSet() {
		toSerialize["bondingMode"] = o.BondingMode.Get()
	}
	if o.Gateway.IsSet() {
		toSerialize["gateway"] = o.Gateway.Get()
	}
	if o.Gateway6.IsSet() {
		toSerialize["gateway6"] = o.Gateway6.Get()
	}
	if o.Group.IsSet() {
		toSerialize["group"] = o.Group.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.IsConnected.IsSet() {
		toSerialize["isConnected"] = o.IsConnected.Get()
	}
	if o.IsDefaultRoute.IsSet() {
		toSerialize["isDefaultRoute"] = o.IsDefaultRoute.Get()
	}
	if o.IsUp.IsSet() {
		toSerialize["isUp"] = o.IsUp.Get()
	}
	if o.MacAddress.IsSet() {
		toSerialize["macAddress"] = o.MacAddress.Get()
	}
	if o.Mtu.IsSet() {
		toSerialize["mtu"] = o.Mtu.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Role.IsSet() {
		toSerialize["role"] = o.Role.Get()
	}
	if o.Services != nil {
		toSerialize["services"] = o.Services
	}
	if o.Speed.IsSet() {
		toSerialize["speed"] = o.Speed.Get()
	}
	if o.StaticIp.IsSet() {
		toSerialize["staticIp"] = o.StaticIp.Get()
	}
	if o.StaticIp6.IsSet() {
		toSerialize["staticIp6"] = o.StaticIp6.Get()
	}
	if o.Subnet.IsSet() {
		toSerialize["subnet"] = o.Subnet.Get()
	}
	if o.Subnet6.IsSet() {
		toSerialize["subnet6"] = o.Subnet6.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.VirtualIp.IsSet() {
		toSerialize["virtualIp"] = o.VirtualIp.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkInterface struct {
	value *NetworkInterface
	isSet bool
}

func (v NullableNetworkInterface) Get() *NetworkInterface {
	return v.value
}

func (v *NullableNetworkInterface) Set(val *NetworkInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkInterface(val *NetworkInterface) *NullableNetworkInterface {
	return &NullableNetworkInterface{value: val, isSet: true}
}

func (v NullableNetworkInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


