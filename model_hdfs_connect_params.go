/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// HdfsConnectParams Specifies an Object containing information about a registered Hdfs source.
type HdfsConnectParams struct {
	// Specifies the Hadoop Distribution. Hadoop distribution.  'CDH' indicates Hadoop distribution type Cloudera. 'HDP' indicates Hadoop distribution type Hortonworks.
	HadoopDistribution NullableString `json:"hadoopDistribution,omitempty"`
	// Specifies the Hadoop version
	HadoopVersion NullableString `json:"hadoopVersion,omitempty"`
	// Specifies the kerberos principal.
	KerberosPrincipal NullableString `json:"kerberosPrincipal,omitempty"`
	// Specifies the Namenode host or Nameservice.
	Namenode NullableString `json:"namenode,omitempty"`
	// Specifies the Webhdfs Port
	Port NullableInt32 `json:"port,omitempty"`
}

// NewHdfsConnectParams instantiates a new HdfsConnectParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHdfsConnectParams() *HdfsConnectParams {
	this := HdfsConnectParams{}
	return &this
}

// NewHdfsConnectParamsWithDefaults instantiates a new HdfsConnectParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHdfsConnectParamsWithDefaults() *HdfsConnectParams {
	this := HdfsConnectParams{}
	return &this
}

// GetHadoopDistribution returns the HadoopDistribution field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HdfsConnectParams) GetHadoopDistribution() string {
	if o == nil || o.HadoopDistribution.Get() == nil {
		var ret string
		return ret
	}
	return *o.HadoopDistribution.Get()
}

// GetHadoopDistributionOk returns a tuple with the HadoopDistribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HdfsConnectParams) GetHadoopDistributionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HadoopDistribution.Get(), o.HadoopDistribution.IsSet()
}

// HasHadoopDistribution returns a boolean if a field has been set.
func (o *HdfsConnectParams) HasHadoopDistribution() bool {
	if o != nil && o.HadoopDistribution.IsSet() {
		return true
	}

	return false
}

// SetHadoopDistribution gets a reference to the given NullableString and assigns it to the HadoopDistribution field.
func (o *HdfsConnectParams) SetHadoopDistribution(v string) {
	o.HadoopDistribution.Set(&v)
}
// SetHadoopDistributionNil sets the value for HadoopDistribution to be an explicit nil
func (o *HdfsConnectParams) SetHadoopDistributionNil() {
	o.HadoopDistribution.Set(nil)
}

// UnsetHadoopDistribution ensures that no value is present for HadoopDistribution, not even an explicit nil
func (o *HdfsConnectParams) UnsetHadoopDistribution() {
	o.HadoopDistribution.Unset()
}

// GetHadoopVersion returns the HadoopVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HdfsConnectParams) GetHadoopVersion() string {
	if o == nil || o.HadoopVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.HadoopVersion.Get()
}

// GetHadoopVersionOk returns a tuple with the HadoopVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HdfsConnectParams) GetHadoopVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HadoopVersion.Get(), o.HadoopVersion.IsSet()
}

// HasHadoopVersion returns a boolean if a field has been set.
func (o *HdfsConnectParams) HasHadoopVersion() bool {
	if o != nil && o.HadoopVersion.IsSet() {
		return true
	}

	return false
}

// SetHadoopVersion gets a reference to the given NullableString and assigns it to the HadoopVersion field.
func (o *HdfsConnectParams) SetHadoopVersion(v string) {
	o.HadoopVersion.Set(&v)
}
// SetHadoopVersionNil sets the value for HadoopVersion to be an explicit nil
func (o *HdfsConnectParams) SetHadoopVersionNil() {
	o.HadoopVersion.Set(nil)
}

// UnsetHadoopVersion ensures that no value is present for HadoopVersion, not even an explicit nil
func (o *HdfsConnectParams) UnsetHadoopVersion() {
	o.HadoopVersion.Unset()
}

// GetKerberosPrincipal returns the KerberosPrincipal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HdfsConnectParams) GetKerberosPrincipal() string {
	if o == nil || o.KerberosPrincipal.Get() == nil {
		var ret string
		return ret
	}
	return *o.KerberosPrincipal.Get()
}

// GetKerberosPrincipalOk returns a tuple with the KerberosPrincipal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HdfsConnectParams) GetKerberosPrincipalOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.KerberosPrincipal.Get(), o.KerberosPrincipal.IsSet()
}

// HasKerberosPrincipal returns a boolean if a field has been set.
func (o *HdfsConnectParams) HasKerberosPrincipal() bool {
	if o != nil && o.KerberosPrincipal.IsSet() {
		return true
	}

	return false
}

// SetKerberosPrincipal gets a reference to the given NullableString and assigns it to the KerberosPrincipal field.
func (o *HdfsConnectParams) SetKerberosPrincipal(v string) {
	o.KerberosPrincipal.Set(&v)
}
// SetKerberosPrincipalNil sets the value for KerberosPrincipal to be an explicit nil
func (o *HdfsConnectParams) SetKerberosPrincipalNil() {
	o.KerberosPrincipal.Set(nil)
}

// UnsetKerberosPrincipal ensures that no value is present for KerberosPrincipal, not even an explicit nil
func (o *HdfsConnectParams) UnsetKerberosPrincipal() {
	o.KerberosPrincipal.Unset()
}

// GetNamenode returns the Namenode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HdfsConnectParams) GetNamenode() string {
	if o == nil || o.Namenode.Get() == nil {
		var ret string
		return ret
	}
	return *o.Namenode.Get()
}

// GetNamenodeOk returns a tuple with the Namenode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HdfsConnectParams) GetNamenodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Namenode.Get(), o.Namenode.IsSet()
}

// HasNamenode returns a boolean if a field has been set.
func (o *HdfsConnectParams) HasNamenode() bool {
	if o != nil && o.Namenode.IsSet() {
		return true
	}

	return false
}

// SetNamenode gets a reference to the given NullableString and assigns it to the Namenode field.
func (o *HdfsConnectParams) SetNamenode(v string) {
	o.Namenode.Set(&v)
}
// SetNamenodeNil sets the value for Namenode to be an explicit nil
func (o *HdfsConnectParams) SetNamenodeNil() {
	o.Namenode.Set(nil)
}

// UnsetNamenode ensures that no value is present for Namenode, not even an explicit nil
func (o *HdfsConnectParams) UnsetNamenode() {
	o.Namenode.Unset()
}

// GetPort returns the Port field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HdfsConnectParams) GetPort() int32 {
	if o == nil || o.Port.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Port.Get()
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HdfsConnectParams) GetPortOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Port.Get(), o.Port.IsSet()
}

// HasPort returns a boolean if a field has been set.
func (o *HdfsConnectParams) HasPort() bool {
	if o != nil && o.Port.IsSet() {
		return true
	}

	return false
}

// SetPort gets a reference to the given NullableInt32 and assigns it to the Port field.
func (o *HdfsConnectParams) SetPort(v int32) {
	o.Port.Set(&v)
}
// SetPortNil sets the value for Port to be an explicit nil
func (o *HdfsConnectParams) SetPortNil() {
	o.Port.Set(nil)
}

// UnsetPort ensures that no value is present for Port, not even an explicit nil
func (o *HdfsConnectParams) UnsetPort() {
	o.Port.Unset()
}

func (o HdfsConnectParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HadoopDistribution.IsSet() {
		toSerialize["hadoopDistribution"] = o.HadoopDistribution.Get()
	}
	if o.HadoopVersion.IsSet() {
		toSerialize["hadoopVersion"] = o.HadoopVersion.Get()
	}
	if o.KerberosPrincipal.IsSet() {
		toSerialize["kerberosPrincipal"] = o.KerberosPrincipal.Get()
	}
	if o.Namenode.IsSet() {
		toSerialize["namenode"] = o.Namenode.Get()
	}
	if o.Port.IsSet() {
		toSerialize["port"] = o.Port.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableHdfsConnectParams struct {
	value *HdfsConnectParams
	isSet bool
}

func (v NullableHdfsConnectParams) Get() *HdfsConnectParams {
	return v.value
}

func (v *NullableHdfsConnectParams) Set(val *HdfsConnectParams) {
	v.value = val
	v.isSet = true
}

func (v NullableHdfsConnectParams) IsSet() bool {
	return v.isSet
}

func (v *NullableHdfsConnectParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHdfsConnectParams(val *HdfsConnectParams) *NullableHdfsConnectParams {
	return &NullableHdfsConnectParams{value: val, isSet: true}
}

func (v NullableHdfsConnectParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHdfsConnectParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


