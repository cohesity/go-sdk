/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ReplicationTargetSettings Specifies settings about the Remote Cohesity Cluster where Snapshots are copied to.
type ReplicationTargetSettings struct {
	// Specifies the id of the Remote Cluster.
	ClusterId NullableInt64 `json:"clusterId,omitempty"`
	// Specifies the name of the Remote Cluster.
	ClusterName NullableString `json:"clusterName,omitempty"`
}

// NewReplicationTargetSettings instantiates a new ReplicationTargetSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationTargetSettings() *ReplicationTargetSettings {
	this := ReplicationTargetSettings{}
	return &this
}

// NewReplicationTargetSettingsWithDefaults instantiates a new ReplicationTargetSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationTargetSettingsWithDefaults() *ReplicationTargetSettings {
	this := ReplicationTargetSettings{}
	return &this
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationTargetSettings) GetClusterId() int64 {
	if o == nil || o.ClusterId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ClusterId.Get()
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationTargetSettings) GetClusterIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterId.Get(), o.ClusterId.IsSet()
}

// HasClusterId returns a boolean if a field has been set.
func (o *ReplicationTargetSettings) HasClusterId() bool {
	if o != nil && o.ClusterId.IsSet() {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given NullableInt64 and assigns it to the ClusterId field.
func (o *ReplicationTargetSettings) SetClusterId(v int64) {
	o.ClusterId.Set(&v)
}
// SetClusterIdNil sets the value for ClusterId to be an explicit nil
func (o *ReplicationTargetSettings) SetClusterIdNil() {
	o.ClusterId.Set(nil)
}

// UnsetClusterId ensures that no value is present for ClusterId, not even an explicit nil
func (o *ReplicationTargetSettings) UnsetClusterId() {
	o.ClusterId.Unset()
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationTargetSettings) GetClusterName() string {
	if o == nil || o.ClusterName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClusterName.Get()
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationTargetSettings) GetClusterNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterName.Get(), o.ClusterName.IsSet()
}

// HasClusterName returns a boolean if a field has been set.
func (o *ReplicationTargetSettings) HasClusterName() bool {
	if o != nil && o.ClusterName.IsSet() {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given NullableString and assigns it to the ClusterName field.
func (o *ReplicationTargetSettings) SetClusterName(v string) {
	o.ClusterName.Set(&v)
}
// SetClusterNameNil sets the value for ClusterName to be an explicit nil
func (o *ReplicationTargetSettings) SetClusterNameNil() {
	o.ClusterName.Set(nil)
}

// UnsetClusterName ensures that no value is present for ClusterName, not even an explicit nil
func (o *ReplicationTargetSettings) UnsetClusterName() {
	o.ClusterName.Unset()
}

func (o ReplicationTargetSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterId.IsSet() {
		toSerialize["clusterId"] = o.ClusterId.Get()
	}
	if o.ClusterName.IsSet() {
		toSerialize["clusterName"] = o.ClusterName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableReplicationTargetSettings struct {
	value *ReplicationTargetSettings
	isSet bool
}

func (v NullableReplicationTargetSettings) Get() *ReplicationTargetSettings {
	return v.value
}

func (v *NullableReplicationTargetSettings) Set(val *ReplicationTargetSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationTargetSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationTargetSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationTargetSettings(val *ReplicationTargetSettings) *NullableReplicationTargetSettings {
	return &NullableReplicationTargetSettings{value: val, isSet: true}
}

func (v NullableReplicationTargetSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationTargetSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


