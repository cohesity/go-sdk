/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// MongoDBBackupJobParams Contains any additional mongodb environment specific backup params at the job level.
type MongoDBBackupJobParams struct {
	MongodbAdditionalInfo *MongoDBAdditionalParams `json:"mongodbAdditionalInfo,omitempty"`
}

// NewMongoDBBackupJobParams instantiates a new MongoDBBackupJobParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMongoDBBackupJobParams() *MongoDBBackupJobParams {
	this := MongoDBBackupJobParams{}
	return &this
}

// NewMongoDBBackupJobParamsWithDefaults instantiates a new MongoDBBackupJobParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMongoDBBackupJobParamsWithDefaults() *MongoDBBackupJobParams {
	this := MongoDBBackupJobParams{}
	return &this
}

// GetMongodbAdditionalInfo returns the MongodbAdditionalInfo field value if set, zero value otherwise.
func (o *MongoDBBackupJobParams) GetMongodbAdditionalInfo() MongoDBAdditionalParams {
	if o == nil || o.MongodbAdditionalInfo == nil {
		var ret MongoDBAdditionalParams
		return ret
	}
	return *o.MongodbAdditionalInfo
}

// GetMongodbAdditionalInfoOk returns a tuple with the MongodbAdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongoDBBackupJobParams) GetMongodbAdditionalInfoOk() (*MongoDBAdditionalParams, bool) {
	if o == nil || o.MongodbAdditionalInfo == nil {
		return nil, false
	}
	return o.MongodbAdditionalInfo, true
}

// HasMongodbAdditionalInfo returns a boolean if a field has been set.
func (o *MongoDBBackupJobParams) HasMongodbAdditionalInfo() bool {
	if o != nil && o.MongodbAdditionalInfo != nil {
		return true
	}

	return false
}

// SetMongodbAdditionalInfo gets a reference to the given MongoDBAdditionalParams and assigns it to the MongodbAdditionalInfo field.
func (o *MongoDBBackupJobParams) SetMongodbAdditionalInfo(v MongoDBAdditionalParams) {
	o.MongodbAdditionalInfo = &v
}

func (o MongoDBBackupJobParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MongodbAdditionalInfo != nil {
		toSerialize["mongodbAdditionalInfo"] = o.MongodbAdditionalInfo
	}
	return json.Marshal(toSerialize)
}

type NullableMongoDBBackupJobParams struct {
	value *MongoDBBackupJobParams
	isSet bool
}

func (v NullableMongoDBBackupJobParams) Get() *MongoDBBackupJobParams {
	return v.value
}

func (v *NullableMongoDBBackupJobParams) Set(val *MongoDBBackupJobParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMongoDBBackupJobParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMongoDBBackupJobParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMongoDBBackupJobParams(val *MongoDBBackupJobParams) *NullableMongoDBBackupJobParams {
	return &NullableMongoDBBackupJobParams{value: val, isSet: true}
}

func (v NullableMongoDBBackupJobParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMongoDBBackupJobParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


