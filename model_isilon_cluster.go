/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// IsilonCluster Specifies information about an Isilon Cluster.
type IsilonCluster struct {
	// Specifies the API version of an Isilon Cluster as string.
	ApiVersionStr NullableString `json:"apiVersionStr,omitempty"`
	// Specifies the description of an Isilon Cluster.
	Description NullableString `json:"description,omitempty"`
	// Specifies a globally unique id of an Isilon Cluster.
	Guid NullableString `json:"guid,omitempty"`
	// Specifies the version of an Isilon Cluster.
	Version NullableString `json:"version,omitempty"`
}

// NewIsilonCluster instantiates a new IsilonCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIsilonCluster() *IsilonCluster {
	this := IsilonCluster{}
	return &this
}

// NewIsilonClusterWithDefaults instantiates a new IsilonCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIsilonClusterWithDefaults() *IsilonCluster {
	this := IsilonCluster{}
	return &this
}

// GetApiVersionStr returns the ApiVersionStr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IsilonCluster) GetApiVersionStr() string {
	if o == nil || o.ApiVersionStr.Get() == nil {
		var ret string
		return ret
	}
	return *o.ApiVersionStr.Get()
}

// GetApiVersionStrOk returns a tuple with the ApiVersionStr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IsilonCluster) GetApiVersionStrOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ApiVersionStr.Get(), o.ApiVersionStr.IsSet()
}

// HasApiVersionStr returns a boolean if a field has been set.
func (o *IsilonCluster) HasApiVersionStr() bool {
	if o != nil && o.ApiVersionStr.IsSet() {
		return true
	}

	return false
}

// SetApiVersionStr gets a reference to the given NullableString and assigns it to the ApiVersionStr field.
func (o *IsilonCluster) SetApiVersionStr(v string) {
	o.ApiVersionStr.Set(&v)
}
// SetApiVersionStrNil sets the value for ApiVersionStr to be an explicit nil
func (o *IsilonCluster) SetApiVersionStrNil() {
	o.ApiVersionStr.Set(nil)
}

// UnsetApiVersionStr ensures that no value is present for ApiVersionStr, not even an explicit nil
func (o *IsilonCluster) UnsetApiVersionStr() {
	o.ApiVersionStr.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IsilonCluster) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IsilonCluster) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *IsilonCluster) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *IsilonCluster) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *IsilonCluster) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *IsilonCluster) UnsetDescription() {
	o.Description.Unset()
}

// GetGuid returns the Guid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IsilonCluster) GetGuid() string {
	if o == nil || o.Guid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Guid.Get()
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IsilonCluster) GetGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Guid.Get(), o.Guid.IsSet()
}

// HasGuid returns a boolean if a field has been set.
func (o *IsilonCluster) HasGuid() bool {
	if o != nil && o.Guid.IsSet() {
		return true
	}

	return false
}

// SetGuid gets a reference to the given NullableString and assigns it to the Guid field.
func (o *IsilonCluster) SetGuid(v string) {
	o.Guid.Set(&v)
}
// SetGuidNil sets the value for Guid to be an explicit nil
func (o *IsilonCluster) SetGuidNil() {
	o.Guid.Set(nil)
}

// UnsetGuid ensures that no value is present for Guid, not even an explicit nil
func (o *IsilonCluster) UnsetGuid() {
	o.Guid.Unset()
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IsilonCluster) GetVersion() string {
	if o == nil || o.Version.Get() == nil {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IsilonCluster) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *IsilonCluster) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *IsilonCluster) SetVersion(v string) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *IsilonCluster) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *IsilonCluster) UnsetVersion() {
	o.Version.Unset()
}

func (o IsilonCluster) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiVersionStr.IsSet() {
		toSerialize["apiVersionStr"] = o.ApiVersionStr.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Guid.IsSet() {
		toSerialize["guid"] = o.Guid.Get()
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableIsilonCluster struct {
	value *IsilonCluster
	isSet bool
}

func (v NullableIsilonCluster) Get() *IsilonCluster {
	return v.value
}

func (v *NullableIsilonCluster) Set(val *IsilonCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableIsilonCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableIsilonCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIsilonCluster(val *IsilonCluster) *NullableIsilonCluster {
	return &NullableIsilonCluster{value: val, isSet: true}
}

func (v NullableIsilonCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIsilonCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


