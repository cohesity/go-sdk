/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// AlertingPolicyProto struct for AlertingPolicyProto
type AlertingPolicyProto struct {
	// The delivery targets to be alerted.
	DeliveryTargetVec []DeliveryRuleProtoDeliveryTarget `json:"deliveryTargetVec,omitempty"`
	// The email addresses to send alerts to. This field has been deprecated in favor of the field delivery_target_vec. The clients should take care to ensure that the emails stored in here are migrated to that field, or else utilise both the fields when trying to obtain the complete list of delivery targets.
	Emails []string `json:"emails,omitempty"`
	// 'policy' is declared as int32 because ORing the enums will generate values which are invalid as enums. Protobuf doesn't allow those invalid enums to be set.
	Policy NullableInt32 `json:"policy,omitempty"`
	// Raise per object alert for failures.
	RaiseObjectLevelFailureAlert NullableBool `json:"raiseObjectLevelFailureAlert,omitempty"`
}

// NewAlertingPolicyProto instantiates a new AlertingPolicyProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertingPolicyProto() *AlertingPolicyProto {
	this := AlertingPolicyProto{}
	return &this
}

// NewAlertingPolicyProtoWithDefaults instantiates a new AlertingPolicyProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertingPolicyProtoWithDefaults() *AlertingPolicyProto {
	this := AlertingPolicyProto{}
	return &this
}

// GetDeliveryTargetVec returns the DeliveryTargetVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertingPolicyProto) GetDeliveryTargetVec() []DeliveryRuleProtoDeliveryTarget {
	if o == nil  {
		var ret []DeliveryRuleProtoDeliveryTarget
		return ret
	}
	return o.DeliveryTargetVec
}

// GetDeliveryTargetVecOk returns a tuple with the DeliveryTargetVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertingPolicyProto) GetDeliveryTargetVecOk() (*[]DeliveryRuleProtoDeliveryTarget, bool) {
	if o == nil || o.DeliveryTargetVec == nil {
		return nil, false
	}
	return &o.DeliveryTargetVec, true
}

// HasDeliveryTargetVec returns a boolean if a field has been set.
func (o *AlertingPolicyProto) HasDeliveryTargetVec() bool {
	if o != nil && o.DeliveryTargetVec != nil {
		return true
	}

	return false
}

// SetDeliveryTargetVec gets a reference to the given []DeliveryRuleProtoDeliveryTarget and assigns it to the DeliveryTargetVec field.
func (o *AlertingPolicyProto) SetDeliveryTargetVec(v []DeliveryRuleProtoDeliveryTarget) {
	o.DeliveryTargetVec = v
}

// GetEmails returns the Emails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertingPolicyProto) GetEmails() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertingPolicyProto) GetEmailsOk() (*[]string, bool) {
	if o == nil || o.Emails == nil {
		return nil, false
	}
	return &o.Emails, true
}

// HasEmails returns a boolean if a field has been set.
func (o *AlertingPolicyProto) HasEmails() bool {
	if o != nil && o.Emails != nil {
		return true
	}

	return false
}

// SetEmails gets a reference to the given []string and assigns it to the Emails field.
func (o *AlertingPolicyProto) SetEmails(v []string) {
	o.Emails = v
}

// GetPolicy returns the Policy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertingPolicyProto) GetPolicy() int32 {
	if o == nil || o.Policy.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Policy.Get()
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertingPolicyProto) GetPolicyOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Policy.Get(), o.Policy.IsSet()
}

// HasPolicy returns a boolean if a field has been set.
func (o *AlertingPolicyProto) HasPolicy() bool {
	if o != nil && o.Policy.IsSet() {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given NullableInt32 and assigns it to the Policy field.
func (o *AlertingPolicyProto) SetPolicy(v int32) {
	o.Policy.Set(&v)
}
// SetPolicyNil sets the value for Policy to be an explicit nil
func (o *AlertingPolicyProto) SetPolicyNil() {
	o.Policy.Set(nil)
}

// UnsetPolicy ensures that no value is present for Policy, not even an explicit nil
func (o *AlertingPolicyProto) UnsetPolicy() {
	o.Policy.Unset()
}

// GetRaiseObjectLevelFailureAlert returns the RaiseObjectLevelFailureAlert field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertingPolicyProto) GetRaiseObjectLevelFailureAlert() bool {
	if o == nil || o.RaiseObjectLevelFailureAlert.Get() == nil {
		var ret bool
		return ret
	}
	return *o.RaiseObjectLevelFailureAlert.Get()
}

// GetRaiseObjectLevelFailureAlertOk returns a tuple with the RaiseObjectLevelFailureAlert field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertingPolicyProto) GetRaiseObjectLevelFailureAlertOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RaiseObjectLevelFailureAlert.Get(), o.RaiseObjectLevelFailureAlert.IsSet()
}

// HasRaiseObjectLevelFailureAlert returns a boolean if a field has been set.
func (o *AlertingPolicyProto) HasRaiseObjectLevelFailureAlert() bool {
	if o != nil && o.RaiseObjectLevelFailureAlert.IsSet() {
		return true
	}

	return false
}

// SetRaiseObjectLevelFailureAlert gets a reference to the given NullableBool and assigns it to the RaiseObjectLevelFailureAlert field.
func (o *AlertingPolicyProto) SetRaiseObjectLevelFailureAlert(v bool) {
	o.RaiseObjectLevelFailureAlert.Set(&v)
}
// SetRaiseObjectLevelFailureAlertNil sets the value for RaiseObjectLevelFailureAlert to be an explicit nil
func (o *AlertingPolicyProto) SetRaiseObjectLevelFailureAlertNil() {
	o.RaiseObjectLevelFailureAlert.Set(nil)
}

// UnsetRaiseObjectLevelFailureAlert ensures that no value is present for RaiseObjectLevelFailureAlert, not even an explicit nil
func (o *AlertingPolicyProto) UnsetRaiseObjectLevelFailureAlert() {
	o.RaiseObjectLevelFailureAlert.Unset()
}

func (o AlertingPolicyProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeliveryTargetVec != nil {
		toSerialize["deliveryTargetVec"] = o.DeliveryTargetVec
	}
	if o.Emails != nil {
		toSerialize["emails"] = o.Emails
	}
	if o.Policy.IsSet() {
		toSerialize["policy"] = o.Policy.Get()
	}
	if o.RaiseObjectLevelFailureAlert.IsSet() {
		toSerialize["raiseObjectLevelFailureAlert"] = o.RaiseObjectLevelFailureAlert.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAlertingPolicyProto struct {
	value *AlertingPolicyProto
	isSet bool
}

func (v NullableAlertingPolicyProto) Get() *AlertingPolicyProto {
	return v.value
}

func (v *NullableAlertingPolicyProto) Set(val *AlertingPolicyProto) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertingPolicyProto) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertingPolicyProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertingPolicyProto(val *AlertingPolicyProto) *NullableAlertingPolicyProto {
	return &NullableAlertingPolicyProto{value: val, isSet: true}
}

func (v NullableAlertingPolicyProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertingPolicyProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


