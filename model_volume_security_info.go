/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// VolumeSecurityInfo Specifies information about NetApp volume security settings.
type VolumeSecurityInfo struct {
	// Specifies the Unix group ID for this volume. 0 indicates the root id.
	GroupId NullableInt32 `json:"groupId,omitempty"`
	// Specifies the Unix permission bits in octal string format.
	Permissions NullableString `json:"permissions,omitempty"`
	// Specifies the security style associated with this volume. Specifies the type of a NetApp Volume. 'kUnix' indicates Unix-style security. 'kNtfs' indicates Windows NTFS-style security. 'kMixed' indicates mixed-style security. 'kUnified' indicates Unified-style security.
	Style NullableString `json:"style,omitempty"`
	// Specifies the Unix user id for this volume. 0 indicates the root id.
	UserId NullableInt32 `json:"userId,omitempty"`
}

// NewVolumeSecurityInfo instantiates a new VolumeSecurityInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeSecurityInfo() *VolumeSecurityInfo {
	this := VolumeSecurityInfo{}
	return &this
}

// NewVolumeSecurityInfoWithDefaults instantiates a new VolumeSecurityInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeSecurityInfoWithDefaults() *VolumeSecurityInfo {
	this := VolumeSecurityInfo{}
	return &this
}

// GetGroupId returns the GroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeSecurityInfo) GetGroupId() int32 {
	if o == nil || o.GroupId.Get() == nil {
		var ret int32
		return ret
	}
	return *o.GroupId.Get()
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeSecurityInfo) GetGroupIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GroupId.Get(), o.GroupId.IsSet()
}

// HasGroupId returns a boolean if a field has been set.
func (o *VolumeSecurityInfo) HasGroupId() bool {
	if o != nil && o.GroupId.IsSet() {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given NullableInt32 and assigns it to the GroupId field.
func (o *VolumeSecurityInfo) SetGroupId(v int32) {
	o.GroupId.Set(&v)
}
// SetGroupIdNil sets the value for GroupId to be an explicit nil
func (o *VolumeSecurityInfo) SetGroupIdNil() {
	o.GroupId.Set(nil)
}

// UnsetGroupId ensures that no value is present for GroupId, not even an explicit nil
func (o *VolumeSecurityInfo) UnsetGroupId() {
	o.GroupId.Unset()
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeSecurityInfo) GetPermissions() string {
	if o == nil || o.Permissions.Get() == nil {
		var ret string
		return ret
	}
	return *o.Permissions.Get()
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeSecurityInfo) GetPermissionsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Permissions.Get(), o.Permissions.IsSet()
}

// HasPermissions returns a boolean if a field has been set.
func (o *VolumeSecurityInfo) HasPermissions() bool {
	if o != nil && o.Permissions.IsSet() {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given NullableString and assigns it to the Permissions field.
func (o *VolumeSecurityInfo) SetPermissions(v string) {
	o.Permissions.Set(&v)
}
// SetPermissionsNil sets the value for Permissions to be an explicit nil
func (o *VolumeSecurityInfo) SetPermissionsNil() {
	o.Permissions.Set(nil)
}

// UnsetPermissions ensures that no value is present for Permissions, not even an explicit nil
func (o *VolumeSecurityInfo) UnsetPermissions() {
	o.Permissions.Unset()
}

// GetStyle returns the Style field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeSecurityInfo) GetStyle() string {
	if o == nil || o.Style.Get() == nil {
		var ret string
		return ret
	}
	return *o.Style.Get()
}

// GetStyleOk returns a tuple with the Style field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeSecurityInfo) GetStyleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Style.Get(), o.Style.IsSet()
}

// HasStyle returns a boolean if a field has been set.
func (o *VolumeSecurityInfo) HasStyle() bool {
	if o != nil && o.Style.IsSet() {
		return true
	}

	return false
}

// SetStyle gets a reference to the given NullableString and assigns it to the Style field.
func (o *VolumeSecurityInfo) SetStyle(v string) {
	o.Style.Set(&v)
}
// SetStyleNil sets the value for Style to be an explicit nil
func (o *VolumeSecurityInfo) SetStyleNil() {
	o.Style.Set(nil)
}

// UnsetStyle ensures that no value is present for Style, not even an explicit nil
func (o *VolumeSecurityInfo) UnsetStyle() {
	o.Style.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeSecurityInfo) GetUserId() int32 {
	if o == nil || o.UserId.Get() == nil {
		var ret int32
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeSecurityInfo) GetUserIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *VolumeSecurityInfo) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableInt32 and assigns it to the UserId field.
func (o *VolumeSecurityInfo) SetUserId(v int32) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *VolumeSecurityInfo) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *VolumeSecurityInfo) UnsetUserId() {
	o.UserId.Unset()
}

func (o VolumeSecurityInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GroupId.IsSet() {
		toSerialize["groupId"] = o.GroupId.Get()
	}
	if o.Permissions.IsSet() {
		toSerialize["permissions"] = o.Permissions.Get()
	}
	if o.Style.IsSet() {
		toSerialize["style"] = o.Style.Get()
	}
	if o.UserId.IsSet() {
		toSerialize["userId"] = o.UserId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableVolumeSecurityInfo struct {
	value *VolumeSecurityInfo
	isSet bool
}

func (v NullableVolumeSecurityInfo) Get() *VolumeSecurityInfo {
	return v.value
}

func (v *NullableVolumeSecurityInfo) Set(val *VolumeSecurityInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeSecurityInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeSecurityInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeSecurityInfo(val *VolumeSecurityInfo) *NullableVolumeSecurityInfo {
	return &NullableVolumeSecurityInfo{value: val, isSet: true}
}

func (v NullableVolumeSecurityInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeSecurityInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


