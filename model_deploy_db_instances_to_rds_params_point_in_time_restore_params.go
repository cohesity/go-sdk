/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// DeployDBInstancesToRDSParamsPointInTimeRestoreParams Message to capture details of a point in time that the DB needs to be restored to.
type DeployDBInstancesToRDSParamsPointInTimeRestoreParams struct {
	// Time in milliseconds since epoch that the DB needs to be restored to.
	TimestampMsecs NullableInt64 `json:"timestampMsecs,omitempty"`
}

// NewDeployDBInstancesToRDSParamsPointInTimeRestoreParams instantiates a new DeployDBInstancesToRDSParamsPointInTimeRestoreParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployDBInstancesToRDSParamsPointInTimeRestoreParams() *DeployDBInstancesToRDSParamsPointInTimeRestoreParams {
	this := DeployDBInstancesToRDSParamsPointInTimeRestoreParams{}
	return &this
}

// NewDeployDBInstancesToRDSParamsPointInTimeRestoreParamsWithDefaults instantiates a new DeployDBInstancesToRDSParamsPointInTimeRestoreParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployDBInstancesToRDSParamsPointInTimeRestoreParamsWithDefaults() *DeployDBInstancesToRDSParamsPointInTimeRestoreParams {
	this := DeployDBInstancesToRDSParamsPointInTimeRestoreParams{}
	return &this
}

// GetTimestampMsecs returns the TimestampMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeployDBInstancesToRDSParamsPointInTimeRestoreParams) GetTimestampMsecs() int64 {
	if o == nil || o.TimestampMsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TimestampMsecs.Get()
}

// GetTimestampMsecsOk returns a tuple with the TimestampMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeployDBInstancesToRDSParamsPointInTimeRestoreParams) GetTimestampMsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TimestampMsecs.Get(), o.TimestampMsecs.IsSet()
}

// HasTimestampMsecs returns a boolean if a field has been set.
func (o *DeployDBInstancesToRDSParamsPointInTimeRestoreParams) HasTimestampMsecs() bool {
	if o != nil && o.TimestampMsecs.IsSet() {
		return true
	}

	return false
}

// SetTimestampMsecs gets a reference to the given NullableInt64 and assigns it to the TimestampMsecs field.
func (o *DeployDBInstancesToRDSParamsPointInTimeRestoreParams) SetTimestampMsecs(v int64) {
	o.TimestampMsecs.Set(&v)
}
// SetTimestampMsecsNil sets the value for TimestampMsecs to be an explicit nil
func (o *DeployDBInstancesToRDSParamsPointInTimeRestoreParams) SetTimestampMsecsNil() {
	o.TimestampMsecs.Set(nil)
}

// UnsetTimestampMsecs ensures that no value is present for TimestampMsecs, not even an explicit nil
func (o *DeployDBInstancesToRDSParamsPointInTimeRestoreParams) UnsetTimestampMsecs() {
	o.TimestampMsecs.Unset()
}

func (o DeployDBInstancesToRDSParamsPointInTimeRestoreParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TimestampMsecs.IsSet() {
		toSerialize["timestampMsecs"] = o.TimestampMsecs.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableDeployDBInstancesToRDSParamsPointInTimeRestoreParams struct {
	value *DeployDBInstancesToRDSParamsPointInTimeRestoreParams
	isSet bool
}

func (v NullableDeployDBInstancesToRDSParamsPointInTimeRestoreParams) Get() *DeployDBInstancesToRDSParamsPointInTimeRestoreParams {
	return v.value
}

func (v *NullableDeployDBInstancesToRDSParamsPointInTimeRestoreParams) Set(val *DeployDBInstancesToRDSParamsPointInTimeRestoreParams) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployDBInstancesToRDSParamsPointInTimeRestoreParams) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployDBInstancesToRDSParamsPointInTimeRestoreParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployDBInstancesToRDSParamsPointInTimeRestoreParams(val *DeployDBInstancesToRDSParamsPointInTimeRestoreParams) *NullableDeployDBInstancesToRDSParamsPointInTimeRestoreParams {
	return &NullableDeployDBInstancesToRDSParamsPointInTimeRestoreParams{value: val, isSet: true}
}

func (v NullableDeployDBInstancesToRDSParamsPointInTimeRestoreParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployDBInstancesToRDSParamsPointInTimeRestoreParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


