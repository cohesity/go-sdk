/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// MapReduceInstanceRunInfo struct for MapReduceInstanceRunInfo
type MapReduceInstanceRunInfo struct {
	// Time when map redcue job completed.
	EndTime NullableInt64 `json:"endTime,omitempty"`
	// If this run failed, then error message for failure.
	ErrorMessage NullableString `json:"errorMessage,omitempty"`
	// Time (in usecs) when job was picked up for execution.
	ExecutionStartTimeUsecs NullableInt64 `json:"executionStartTimeUsecs,omitempty"`
	// Number of files processed in this run.
	FilesProcessed NullableInt32 `json:"filesProcessed,omitempty"`
	// Time (in usecs) when map tasks were done.
	MapDoneTimeUsecs NullableInt64 `json:"mapDoneTimeUsecs,omitempty"`
	// Total size of data processed by this run in bytes.
	MapInputBytes NullableInt64 `json:"mapInputBytes,omitempty"`
	// Number of mappers spawned till now.
	MappersSpawned NullableInt32 `json:"mappersSpawned,omitempty"`
	// Number of outputs from mappers.
	NumMapOutputs NullableInt64 `json:"numMapOutputs,omitempty"`
	// Number of outputs from reducers.
	NumReduceOutputs NullableInt64 `json:"numReduceOutputs,omitempty"`
	// Percentage completion of this run so far.
	PercentageCompletion NullableFloat32 `json:"percentageCompletion,omitempty"`
	// Percentage of mapper phase completed.
	PercentageMapperCompletion NullableFloat32 `json:"percentageMapperCompletion,omitempty"`
	// Percentage of reducer phase completed.
	PercentageReducerCompletion NullableFloat32 `json:"percentageReducerCompletion,omitempty"`
	// Number of reducers spawned till now.
	ReducersSpawned NullableInt32 `json:"reducersSpawned,omitempty"`
	// Expected remaining time in minutes for completion of this run.
	RemainingTimeMins NullableInt32 `json:"remainingTimeMins,omitempty"`
	// Time when map reduce job was started by user.
	StartTime NullableInt64 `json:"startTime,omitempty"`
	// Status of this run.
	Status NullableInt32 `json:"status,omitempty"`
	// Total number of mappers to be spawned.
	TotalNumMappers NullableInt32 `json:"totalNumMappers,omitempty"`
	// Total number of reducers to be spawned.
	TotalNumReducers NullableInt32 `json:"totalNumReducers,omitempty"`
}

// NewMapReduceInstanceRunInfo instantiates a new MapReduceInstanceRunInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMapReduceInstanceRunInfo() *MapReduceInstanceRunInfo {
	this := MapReduceInstanceRunInfo{}
	return &this
}

// NewMapReduceInstanceRunInfoWithDefaults instantiates a new MapReduceInstanceRunInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMapReduceInstanceRunInfoWithDefaults() *MapReduceInstanceRunInfo {
	this := MapReduceInstanceRunInfo{}
	return &this
}

// GetEndTime returns the EndTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetEndTime() int64 {
	if o == nil || o.EndTime.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTime.Get()
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetEndTimeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTime.Get(), o.EndTime.IsSet()
}

// HasEndTime returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasEndTime() bool {
	if o != nil && o.EndTime.IsSet() {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given NullableInt64 and assigns it to the EndTime field.
func (o *MapReduceInstanceRunInfo) SetEndTime(v int64) {
	o.EndTime.Set(&v)
}
// SetEndTimeNil sets the value for EndTime to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetEndTimeNil() {
	o.EndTime.Set(nil)
}

// UnsetEndTime ensures that no value is present for EndTime, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetEndTime() {
	o.EndTime.Unset()
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetErrorMessage() string {
	if o == nil || o.ErrorMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetErrorMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *MapReduceInstanceRunInfo) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetExecutionStartTimeUsecs returns the ExecutionStartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetExecutionStartTimeUsecs() int64 {
	if o == nil || o.ExecutionStartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ExecutionStartTimeUsecs.Get()
}

// GetExecutionStartTimeUsecsOk returns a tuple with the ExecutionStartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetExecutionStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExecutionStartTimeUsecs.Get(), o.ExecutionStartTimeUsecs.IsSet()
}

// HasExecutionStartTimeUsecs returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasExecutionStartTimeUsecs() bool {
	if o != nil && o.ExecutionStartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetExecutionStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the ExecutionStartTimeUsecs field.
func (o *MapReduceInstanceRunInfo) SetExecutionStartTimeUsecs(v int64) {
	o.ExecutionStartTimeUsecs.Set(&v)
}
// SetExecutionStartTimeUsecsNil sets the value for ExecutionStartTimeUsecs to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetExecutionStartTimeUsecsNil() {
	o.ExecutionStartTimeUsecs.Set(nil)
}

// UnsetExecutionStartTimeUsecs ensures that no value is present for ExecutionStartTimeUsecs, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetExecutionStartTimeUsecs() {
	o.ExecutionStartTimeUsecs.Unset()
}

// GetFilesProcessed returns the FilesProcessed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetFilesProcessed() int32 {
	if o == nil || o.FilesProcessed.Get() == nil {
		var ret int32
		return ret
	}
	return *o.FilesProcessed.Get()
}

// GetFilesProcessedOk returns a tuple with the FilesProcessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetFilesProcessedOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FilesProcessed.Get(), o.FilesProcessed.IsSet()
}

// HasFilesProcessed returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasFilesProcessed() bool {
	if o != nil && o.FilesProcessed.IsSet() {
		return true
	}

	return false
}

// SetFilesProcessed gets a reference to the given NullableInt32 and assigns it to the FilesProcessed field.
func (o *MapReduceInstanceRunInfo) SetFilesProcessed(v int32) {
	o.FilesProcessed.Set(&v)
}
// SetFilesProcessedNil sets the value for FilesProcessed to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetFilesProcessedNil() {
	o.FilesProcessed.Set(nil)
}

// UnsetFilesProcessed ensures that no value is present for FilesProcessed, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetFilesProcessed() {
	o.FilesProcessed.Unset()
}

// GetMapDoneTimeUsecs returns the MapDoneTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetMapDoneTimeUsecs() int64 {
	if o == nil || o.MapDoneTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.MapDoneTimeUsecs.Get()
}

// GetMapDoneTimeUsecsOk returns a tuple with the MapDoneTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetMapDoneTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MapDoneTimeUsecs.Get(), o.MapDoneTimeUsecs.IsSet()
}

// HasMapDoneTimeUsecs returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasMapDoneTimeUsecs() bool {
	if o != nil && o.MapDoneTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetMapDoneTimeUsecs gets a reference to the given NullableInt64 and assigns it to the MapDoneTimeUsecs field.
func (o *MapReduceInstanceRunInfo) SetMapDoneTimeUsecs(v int64) {
	o.MapDoneTimeUsecs.Set(&v)
}
// SetMapDoneTimeUsecsNil sets the value for MapDoneTimeUsecs to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetMapDoneTimeUsecsNil() {
	o.MapDoneTimeUsecs.Set(nil)
}

// UnsetMapDoneTimeUsecs ensures that no value is present for MapDoneTimeUsecs, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetMapDoneTimeUsecs() {
	o.MapDoneTimeUsecs.Unset()
}

// GetMapInputBytes returns the MapInputBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetMapInputBytes() int64 {
	if o == nil || o.MapInputBytes.Get() == nil {
		var ret int64
		return ret
	}
	return *o.MapInputBytes.Get()
}

// GetMapInputBytesOk returns a tuple with the MapInputBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetMapInputBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MapInputBytes.Get(), o.MapInputBytes.IsSet()
}

// HasMapInputBytes returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasMapInputBytes() bool {
	if o != nil && o.MapInputBytes.IsSet() {
		return true
	}

	return false
}

// SetMapInputBytes gets a reference to the given NullableInt64 and assigns it to the MapInputBytes field.
func (o *MapReduceInstanceRunInfo) SetMapInputBytes(v int64) {
	o.MapInputBytes.Set(&v)
}
// SetMapInputBytesNil sets the value for MapInputBytes to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetMapInputBytesNil() {
	o.MapInputBytes.Set(nil)
}

// UnsetMapInputBytes ensures that no value is present for MapInputBytes, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetMapInputBytes() {
	o.MapInputBytes.Unset()
}

// GetMappersSpawned returns the MappersSpawned field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetMappersSpawned() int32 {
	if o == nil || o.MappersSpawned.Get() == nil {
		var ret int32
		return ret
	}
	return *o.MappersSpawned.Get()
}

// GetMappersSpawnedOk returns a tuple with the MappersSpawned field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetMappersSpawnedOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MappersSpawned.Get(), o.MappersSpawned.IsSet()
}

// HasMappersSpawned returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasMappersSpawned() bool {
	if o != nil && o.MappersSpawned.IsSet() {
		return true
	}

	return false
}

// SetMappersSpawned gets a reference to the given NullableInt32 and assigns it to the MappersSpawned field.
func (o *MapReduceInstanceRunInfo) SetMappersSpawned(v int32) {
	o.MappersSpawned.Set(&v)
}
// SetMappersSpawnedNil sets the value for MappersSpawned to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetMappersSpawnedNil() {
	o.MappersSpawned.Set(nil)
}

// UnsetMappersSpawned ensures that no value is present for MappersSpawned, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetMappersSpawned() {
	o.MappersSpawned.Unset()
}

// GetNumMapOutputs returns the NumMapOutputs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetNumMapOutputs() int64 {
	if o == nil || o.NumMapOutputs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumMapOutputs.Get()
}

// GetNumMapOutputsOk returns a tuple with the NumMapOutputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetNumMapOutputsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumMapOutputs.Get(), o.NumMapOutputs.IsSet()
}

// HasNumMapOutputs returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasNumMapOutputs() bool {
	if o != nil && o.NumMapOutputs.IsSet() {
		return true
	}

	return false
}

// SetNumMapOutputs gets a reference to the given NullableInt64 and assigns it to the NumMapOutputs field.
func (o *MapReduceInstanceRunInfo) SetNumMapOutputs(v int64) {
	o.NumMapOutputs.Set(&v)
}
// SetNumMapOutputsNil sets the value for NumMapOutputs to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetNumMapOutputsNil() {
	o.NumMapOutputs.Set(nil)
}

// UnsetNumMapOutputs ensures that no value is present for NumMapOutputs, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetNumMapOutputs() {
	o.NumMapOutputs.Unset()
}

// GetNumReduceOutputs returns the NumReduceOutputs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetNumReduceOutputs() int64 {
	if o == nil || o.NumReduceOutputs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumReduceOutputs.Get()
}

// GetNumReduceOutputsOk returns a tuple with the NumReduceOutputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetNumReduceOutputsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumReduceOutputs.Get(), o.NumReduceOutputs.IsSet()
}

// HasNumReduceOutputs returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasNumReduceOutputs() bool {
	if o != nil && o.NumReduceOutputs.IsSet() {
		return true
	}

	return false
}

// SetNumReduceOutputs gets a reference to the given NullableInt64 and assigns it to the NumReduceOutputs field.
func (o *MapReduceInstanceRunInfo) SetNumReduceOutputs(v int64) {
	o.NumReduceOutputs.Set(&v)
}
// SetNumReduceOutputsNil sets the value for NumReduceOutputs to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetNumReduceOutputsNil() {
	o.NumReduceOutputs.Set(nil)
}

// UnsetNumReduceOutputs ensures that no value is present for NumReduceOutputs, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetNumReduceOutputs() {
	o.NumReduceOutputs.Unset()
}

// GetPercentageCompletion returns the PercentageCompletion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetPercentageCompletion() float32 {
	if o == nil || o.PercentageCompletion.Get() == nil {
		var ret float32
		return ret
	}
	return *o.PercentageCompletion.Get()
}

// GetPercentageCompletionOk returns a tuple with the PercentageCompletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetPercentageCompletionOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PercentageCompletion.Get(), o.PercentageCompletion.IsSet()
}

// HasPercentageCompletion returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasPercentageCompletion() bool {
	if o != nil && o.PercentageCompletion.IsSet() {
		return true
	}

	return false
}

// SetPercentageCompletion gets a reference to the given NullableFloat32 and assigns it to the PercentageCompletion field.
func (o *MapReduceInstanceRunInfo) SetPercentageCompletion(v float32) {
	o.PercentageCompletion.Set(&v)
}
// SetPercentageCompletionNil sets the value for PercentageCompletion to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetPercentageCompletionNil() {
	o.PercentageCompletion.Set(nil)
}

// UnsetPercentageCompletion ensures that no value is present for PercentageCompletion, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetPercentageCompletion() {
	o.PercentageCompletion.Unset()
}

// GetPercentageMapperCompletion returns the PercentageMapperCompletion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetPercentageMapperCompletion() float32 {
	if o == nil || o.PercentageMapperCompletion.Get() == nil {
		var ret float32
		return ret
	}
	return *o.PercentageMapperCompletion.Get()
}

// GetPercentageMapperCompletionOk returns a tuple with the PercentageMapperCompletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetPercentageMapperCompletionOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PercentageMapperCompletion.Get(), o.PercentageMapperCompletion.IsSet()
}

// HasPercentageMapperCompletion returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasPercentageMapperCompletion() bool {
	if o != nil && o.PercentageMapperCompletion.IsSet() {
		return true
	}

	return false
}

// SetPercentageMapperCompletion gets a reference to the given NullableFloat32 and assigns it to the PercentageMapperCompletion field.
func (o *MapReduceInstanceRunInfo) SetPercentageMapperCompletion(v float32) {
	o.PercentageMapperCompletion.Set(&v)
}
// SetPercentageMapperCompletionNil sets the value for PercentageMapperCompletion to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetPercentageMapperCompletionNil() {
	o.PercentageMapperCompletion.Set(nil)
}

// UnsetPercentageMapperCompletion ensures that no value is present for PercentageMapperCompletion, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetPercentageMapperCompletion() {
	o.PercentageMapperCompletion.Unset()
}

// GetPercentageReducerCompletion returns the PercentageReducerCompletion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetPercentageReducerCompletion() float32 {
	if o == nil || o.PercentageReducerCompletion.Get() == nil {
		var ret float32
		return ret
	}
	return *o.PercentageReducerCompletion.Get()
}

// GetPercentageReducerCompletionOk returns a tuple with the PercentageReducerCompletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetPercentageReducerCompletionOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PercentageReducerCompletion.Get(), o.PercentageReducerCompletion.IsSet()
}

// HasPercentageReducerCompletion returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasPercentageReducerCompletion() bool {
	if o != nil && o.PercentageReducerCompletion.IsSet() {
		return true
	}

	return false
}

// SetPercentageReducerCompletion gets a reference to the given NullableFloat32 and assigns it to the PercentageReducerCompletion field.
func (o *MapReduceInstanceRunInfo) SetPercentageReducerCompletion(v float32) {
	o.PercentageReducerCompletion.Set(&v)
}
// SetPercentageReducerCompletionNil sets the value for PercentageReducerCompletion to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetPercentageReducerCompletionNil() {
	o.PercentageReducerCompletion.Set(nil)
}

// UnsetPercentageReducerCompletion ensures that no value is present for PercentageReducerCompletion, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetPercentageReducerCompletion() {
	o.PercentageReducerCompletion.Unset()
}

// GetReducersSpawned returns the ReducersSpawned field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetReducersSpawned() int32 {
	if o == nil || o.ReducersSpawned.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ReducersSpawned.Get()
}

// GetReducersSpawnedOk returns a tuple with the ReducersSpawned field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetReducersSpawnedOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReducersSpawned.Get(), o.ReducersSpawned.IsSet()
}

// HasReducersSpawned returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasReducersSpawned() bool {
	if o != nil && o.ReducersSpawned.IsSet() {
		return true
	}

	return false
}

// SetReducersSpawned gets a reference to the given NullableInt32 and assigns it to the ReducersSpawned field.
func (o *MapReduceInstanceRunInfo) SetReducersSpawned(v int32) {
	o.ReducersSpawned.Set(&v)
}
// SetReducersSpawnedNil sets the value for ReducersSpawned to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetReducersSpawnedNil() {
	o.ReducersSpawned.Set(nil)
}

// UnsetReducersSpawned ensures that no value is present for ReducersSpawned, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetReducersSpawned() {
	o.ReducersSpawned.Unset()
}

// GetRemainingTimeMins returns the RemainingTimeMins field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetRemainingTimeMins() int32 {
	if o == nil || o.RemainingTimeMins.Get() == nil {
		var ret int32
		return ret
	}
	return *o.RemainingTimeMins.Get()
}

// GetRemainingTimeMinsOk returns a tuple with the RemainingTimeMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetRemainingTimeMinsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RemainingTimeMins.Get(), o.RemainingTimeMins.IsSet()
}

// HasRemainingTimeMins returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasRemainingTimeMins() bool {
	if o != nil && o.RemainingTimeMins.IsSet() {
		return true
	}

	return false
}

// SetRemainingTimeMins gets a reference to the given NullableInt32 and assigns it to the RemainingTimeMins field.
func (o *MapReduceInstanceRunInfo) SetRemainingTimeMins(v int32) {
	o.RemainingTimeMins.Set(&v)
}
// SetRemainingTimeMinsNil sets the value for RemainingTimeMins to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetRemainingTimeMinsNil() {
	o.RemainingTimeMins.Set(nil)
}

// UnsetRemainingTimeMins ensures that no value is present for RemainingTimeMins, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetRemainingTimeMins() {
	o.RemainingTimeMins.Unset()
}

// GetStartTime returns the StartTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetStartTime() int64 {
	if o == nil || o.StartTime.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StartTime.Get()
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetStartTimeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartTime.Get(), o.StartTime.IsSet()
}

// HasStartTime returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasStartTime() bool {
	if o != nil && o.StartTime.IsSet() {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given NullableInt64 and assigns it to the StartTime field.
func (o *MapReduceInstanceRunInfo) SetStartTime(v int64) {
	o.StartTime.Set(&v)
}
// SetStartTimeNil sets the value for StartTime to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetStartTimeNil() {
	o.StartTime.Set(nil)
}

// UnsetStartTime ensures that no value is present for StartTime, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetStartTime() {
	o.StartTime.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetStatus() int32 {
	if o == nil || o.Status.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetStatusOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableInt32 and assigns it to the Status field.
func (o *MapReduceInstanceRunInfo) SetStatus(v int32) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetStatus() {
	o.Status.Unset()
}

// GetTotalNumMappers returns the TotalNumMappers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetTotalNumMappers() int32 {
	if o == nil || o.TotalNumMappers.Get() == nil {
		var ret int32
		return ret
	}
	return *o.TotalNumMappers.Get()
}

// GetTotalNumMappersOk returns a tuple with the TotalNumMappers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetTotalNumMappersOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalNumMappers.Get(), o.TotalNumMappers.IsSet()
}

// HasTotalNumMappers returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasTotalNumMappers() bool {
	if o != nil && o.TotalNumMappers.IsSet() {
		return true
	}

	return false
}

// SetTotalNumMappers gets a reference to the given NullableInt32 and assigns it to the TotalNumMappers field.
func (o *MapReduceInstanceRunInfo) SetTotalNumMappers(v int32) {
	o.TotalNumMappers.Set(&v)
}
// SetTotalNumMappersNil sets the value for TotalNumMappers to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetTotalNumMappersNil() {
	o.TotalNumMappers.Set(nil)
}

// UnsetTotalNumMappers ensures that no value is present for TotalNumMappers, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetTotalNumMappers() {
	o.TotalNumMappers.Unset()
}

// GetTotalNumReducers returns the TotalNumReducers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceRunInfo) GetTotalNumReducers() int32 {
	if o == nil || o.TotalNumReducers.Get() == nil {
		var ret int32
		return ret
	}
	return *o.TotalNumReducers.Get()
}

// GetTotalNumReducersOk returns a tuple with the TotalNumReducers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceRunInfo) GetTotalNumReducersOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalNumReducers.Get(), o.TotalNumReducers.IsSet()
}

// HasTotalNumReducers returns a boolean if a field has been set.
func (o *MapReduceInstanceRunInfo) HasTotalNumReducers() bool {
	if o != nil && o.TotalNumReducers.IsSet() {
		return true
	}

	return false
}

// SetTotalNumReducers gets a reference to the given NullableInt32 and assigns it to the TotalNumReducers field.
func (o *MapReduceInstanceRunInfo) SetTotalNumReducers(v int32) {
	o.TotalNumReducers.Set(&v)
}
// SetTotalNumReducersNil sets the value for TotalNumReducers to be an explicit nil
func (o *MapReduceInstanceRunInfo) SetTotalNumReducersNil() {
	o.TotalNumReducers.Set(nil)
}

// UnsetTotalNumReducers ensures that no value is present for TotalNumReducers, not even an explicit nil
func (o *MapReduceInstanceRunInfo) UnsetTotalNumReducers() {
	o.TotalNumReducers.Unset()
}

func (o MapReduceInstanceRunInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EndTime.IsSet() {
		toSerialize["endTime"] = o.EndTime.Get()
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["errorMessage"] = o.ErrorMessage.Get()
	}
	if o.ExecutionStartTimeUsecs.IsSet() {
		toSerialize["executionStartTimeUsecs"] = o.ExecutionStartTimeUsecs.Get()
	}
	if o.FilesProcessed.IsSet() {
		toSerialize["filesProcessed"] = o.FilesProcessed.Get()
	}
	if o.MapDoneTimeUsecs.IsSet() {
		toSerialize["mapDoneTimeUsecs"] = o.MapDoneTimeUsecs.Get()
	}
	if o.MapInputBytes.IsSet() {
		toSerialize["mapInputBytes"] = o.MapInputBytes.Get()
	}
	if o.MappersSpawned.IsSet() {
		toSerialize["mappersSpawned"] = o.MappersSpawned.Get()
	}
	if o.NumMapOutputs.IsSet() {
		toSerialize["numMapOutputs"] = o.NumMapOutputs.Get()
	}
	if o.NumReduceOutputs.IsSet() {
		toSerialize["numReduceOutputs"] = o.NumReduceOutputs.Get()
	}
	if o.PercentageCompletion.IsSet() {
		toSerialize["percentageCompletion"] = o.PercentageCompletion.Get()
	}
	if o.PercentageMapperCompletion.IsSet() {
		toSerialize["percentageMapperCompletion"] = o.PercentageMapperCompletion.Get()
	}
	if o.PercentageReducerCompletion.IsSet() {
		toSerialize["percentageReducerCompletion"] = o.PercentageReducerCompletion.Get()
	}
	if o.ReducersSpawned.IsSet() {
		toSerialize["reducersSpawned"] = o.ReducersSpawned.Get()
	}
	if o.RemainingTimeMins.IsSet() {
		toSerialize["remainingTimeMins"] = o.RemainingTimeMins.Get()
	}
	if o.StartTime.IsSet() {
		toSerialize["startTime"] = o.StartTime.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.TotalNumMappers.IsSet() {
		toSerialize["totalNumMappers"] = o.TotalNumMappers.Get()
	}
	if o.TotalNumReducers.IsSet() {
		toSerialize["totalNumReducers"] = o.TotalNumReducers.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMapReduceInstanceRunInfo struct {
	value *MapReduceInstanceRunInfo
	isSet bool
}

func (v NullableMapReduceInstanceRunInfo) Get() *MapReduceInstanceRunInfo {
	return v.value
}

func (v *NullableMapReduceInstanceRunInfo) Set(val *MapReduceInstanceRunInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMapReduceInstanceRunInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMapReduceInstanceRunInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMapReduceInstanceRunInfo(val *MapReduceInstanceRunInfo) *NullableMapReduceInstanceRunInfo {
	return &NullableMapReduceInstanceRunInfo{value: val, isSet: true}
}

func (v NullableMapReduceInstanceRunInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMapReduceInstanceRunInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


