/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ClusterConfigProtoStoragePolicyOverride struct for ClusterConfigProtoStoragePolicyOverride
type ClusterConfigProtoStoragePolicyOverride struct {
	// If this is set to true, we will not do inline dedup and compression even if deduplicate_compress_delay_secs is set to 0 in the view box's storage policy.
	DisableInlineDedupAndCompression NullableBool `json:"disableInlineDedupAndCompression,omitempty"`
}

// NewClusterConfigProtoStoragePolicyOverride instantiates a new ClusterConfigProtoStoragePolicyOverride object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterConfigProtoStoragePolicyOverride() *ClusterConfigProtoStoragePolicyOverride {
	this := ClusterConfigProtoStoragePolicyOverride{}
	return &this
}

// NewClusterConfigProtoStoragePolicyOverrideWithDefaults instantiates a new ClusterConfigProtoStoragePolicyOverride object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterConfigProtoStoragePolicyOverrideWithDefaults() *ClusterConfigProtoStoragePolicyOverride {
	this := ClusterConfigProtoStoragePolicyOverride{}
	return &this
}

// GetDisableInlineDedupAndCompression returns the DisableInlineDedupAndCompression field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterConfigProtoStoragePolicyOverride) GetDisableInlineDedupAndCompression() bool {
	if o == nil || o.DisableInlineDedupAndCompression.Get() == nil {
		var ret bool
		return ret
	}
	return *o.DisableInlineDedupAndCompression.Get()
}

// GetDisableInlineDedupAndCompressionOk returns a tuple with the DisableInlineDedupAndCompression field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterConfigProtoStoragePolicyOverride) GetDisableInlineDedupAndCompressionOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisableInlineDedupAndCompression.Get(), o.DisableInlineDedupAndCompression.IsSet()
}

// HasDisableInlineDedupAndCompression returns a boolean if a field has been set.
func (o *ClusterConfigProtoStoragePolicyOverride) HasDisableInlineDedupAndCompression() bool {
	if o != nil && o.DisableInlineDedupAndCompression.IsSet() {
		return true
	}

	return false
}

// SetDisableInlineDedupAndCompression gets a reference to the given NullableBool and assigns it to the DisableInlineDedupAndCompression field.
func (o *ClusterConfigProtoStoragePolicyOverride) SetDisableInlineDedupAndCompression(v bool) {
	o.DisableInlineDedupAndCompression.Set(&v)
}
// SetDisableInlineDedupAndCompressionNil sets the value for DisableInlineDedupAndCompression to be an explicit nil
func (o *ClusterConfigProtoStoragePolicyOverride) SetDisableInlineDedupAndCompressionNil() {
	o.DisableInlineDedupAndCompression.Set(nil)
}

// UnsetDisableInlineDedupAndCompression ensures that no value is present for DisableInlineDedupAndCompression, not even an explicit nil
func (o *ClusterConfigProtoStoragePolicyOverride) UnsetDisableInlineDedupAndCompression() {
	o.DisableInlineDedupAndCompression.Unset()
}

func (o ClusterConfigProtoStoragePolicyOverride) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisableInlineDedupAndCompression.IsSet() {
		toSerialize["disableInlineDedupAndCompression"] = o.DisableInlineDedupAndCompression.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableClusterConfigProtoStoragePolicyOverride struct {
	value *ClusterConfigProtoStoragePolicyOverride
	isSet bool
}

func (v NullableClusterConfigProtoStoragePolicyOverride) Get() *ClusterConfigProtoStoragePolicyOverride {
	return v.value
}

func (v *NullableClusterConfigProtoStoragePolicyOverride) Set(val *ClusterConfigProtoStoragePolicyOverride) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterConfigProtoStoragePolicyOverride) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterConfigProtoStoragePolicyOverride) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterConfigProtoStoragePolicyOverride(val *ClusterConfigProtoStoragePolicyOverride) *NullableClusterConfigProtoStoragePolicyOverride {
	return &NullableClusterConfigProtoStoragePolicyOverride{value: val, isSet: true}
}

func (v NullableClusterConfigProtoStoragePolicyOverride) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterConfigProtoStoragePolicyOverride) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


