/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ApplicationsRestoreTaskRequest Specifies the request to create a restore task for restoring Application Servers like SQL or Exchange servers hosted by a Protection Source.
type ApplicationsRestoreTaskRequest struct {
	// Specifies the Environment of the Application to restore like 'kSQL', or 'kExchange'. overrideDescription: true Supported environment types such as 'kView', 'kSQL', 'kVMware', etc. NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter. 'kVMware' indicates the VMware Protection Source environment. 'kHyperV' indicates the HyperV Protection Source environment. 'kSQL' indicates the SQL Protection Source environment. 'kView' indicates the View Protection Source environment. 'kPuppeteer' indicates the Cohesity's Remote Adapter. 'kPhysical' indicates the physical Protection Source environment. 'kPure' indicates the Pure Storage Protection Source environment. 'Nimble' indicates the Nimble Storage Protection Source environment. 'kAzure' indicates the Microsoft's Azure Protection Source environment. 'kNetapp' indicates the Netapp Protection Source environment. 'kAgent' indicates the Agent Protection Source environment. 'kGenericNas' indicates the Generic Network Attached Storage Protection Source environment. 'kAcropolis' indicates the Acropolis Protection Source environment. 'kPhsicalFiles' indicates the Physical Files Protection Source environment. 'kIsilon' indicates the Dell EMC's Isilon Protection Source environment. 'kGPFS' indicates IBM's GPFS Protection Source environment. 'kKVM' indicates the KVM Protection Source environment. 'kAWS' indicates the AWS Protection Source environment. 'kExchange' indicates the Exchange Protection Source environment. 'kHyperVVSS' indicates the HyperV VSS Protection Source environment. 'kOracle' indicates the Oracle Protection Source environment. 'kGCP' indicates the Google Cloud Platform Protection Source environment. 'kFlashBlade' indicates the Flash Blade Protection Source environment. 'kAWSNative' indicates the AWS Native Protection Source environment. 'kO365' indicates the Office 365 Protection Source environment. 'kO365Outlook' indicates Office 365 outlook Protection Source environment. 'kHyperFlex' indicates the Hyper Flex Protection Source environment. 'kGCPNative' indicates the GCP Native Protection Source environment. 'kAzureNative' indicates the Azure Native Protection Source environment. 'kKubernetes' indicates a Kubernetes Protection Source environment. 'kElastifile' indicates Elastifile Protection Source environment. 'kAD' indicates Active Directory Protection Source environment. 'kRDSSnapshotManager' indicates AWS RDS Protection Source environment. 'kCassandra' indicates Cassandra Protection Source environment. 'kMongoDB' indicates MongoDB Protection Source environment. 'kCouchbase' indicates Couchbase Protection Source environment. 'kHdfs' indicates Hdfs Protection Source environment. 'kHive' indicates Hive Protection Source environment. 'kHBase' indicates HBase Protection Source environment.
	ApplicationEnvironment NullableString `json:"applicationEnvironment"`
	// Specifies the Application Server objects whose data should be restored and the restore parameters for each of them. This field will be deprecated. Use the field ProtectionSourceAndApplicationRestoreObjects. deprecated: true
	ApplicationRestoreObjects []ApplicationRestoreObject `json:"applicationRestoreObjects,omitempty"`
	HostingProtectionSource RestoreObjectDetails `json:"hostingProtectionSource"`
	// Specifies a name for the new task to be created. This field has to be set, and it needs to be unique across all restore tasks.
	Name NullableString `json:"name"`
	// Specifies password of the username to access the target source.
	Password NullableString `json:"password,omitempty"`
	// Specifies the list of hosting protection source and Application restore objects tuple.
	ProtectionSourceAndApplicationObjects []ProtectionSourceAndApplicationRestoreObjects `json:"protectionSourceAndApplicationObjects,omitempty"`
	// Specifies username to access the target source.
	Username NullableString `json:"username,omitempty"`
	VlanParameters *VlanParameters `json:"vlanParameters,omitempty"`
}

// NewApplicationsRestoreTaskRequest instantiates a new ApplicationsRestoreTaskRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationsRestoreTaskRequest(applicationEnvironment NullableString, hostingProtectionSource RestoreObjectDetails, name NullableString) *ApplicationsRestoreTaskRequest {
	this := ApplicationsRestoreTaskRequest{}
	this.ApplicationEnvironment = applicationEnvironment
	this.HostingProtectionSource = hostingProtectionSource
	this.Name = name
	return &this
}

// NewApplicationsRestoreTaskRequestWithDefaults instantiates a new ApplicationsRestoreTaskRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationsRestoreTaskRequestWithDefaults() *ApplicationsRestoreTaskRequest {
	this := ApplicationsRestoreTaskRequest{}
	return &this
}

// GetApplicationEnvironment returns the ApplicationEnvironment field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ApplicationsRestoreTaskRequest) GetApplicationEnvironment() string {
	if o == nil || o.ApplicationEnvironment.Get() == nil {
		var ret string
		return ret
	}

	return *o.ApplicationEnvironment.Get()
}

// GetApplicationEnvironmentOk returns a tuple with the ApplicationEnvironment field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationsRestoreTaskRequest) GetApplicationEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ApplicationEnvironment.Get(), o.ApplicationEnvironment.IsSet()
}

// SetApplicationEnvironment sets field value
func (o *ApplicationsRestoreTaskRequest) SetApplicationEnvironment(v string) {
	o.ApplicationEnvironment.Set(&v)
}

// GetApplicationRestoreObjects returns the ApplicationRestoreObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationsRestoreTaskRequest) GetApplicationRestoreObjects() []ApplicationRestoreObject {
	if o == nil  {
		var ret []ApplicationRestoreObject
		return ret
	}
	return o.ApplicationRestoreObjects
}

// GetApplicationRestoreObjectsOk returns a tuple with the ApplicationRestoreObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationsRestoreTaskRequest) GetApplicationRestoreObjectsOk() (*[]ApplicationRestoreObject, bool) {
	if o == nil || o.ApplicationRestoreObjects == nil {
		return nil, false
	}
	return &o.ApplicationRestoreObjects, true
}

// HasApplicationRestoreObjects returns a boolean if a field has been set.
func (o *ApplicationsRestoreTaskRequest) HasApplicationRestoreObjects() bool {
	if o != nil && o.ApplicationRestoreObjects != nil {
		return true
	}

	return false
}

// SetApplicationRestoreObjects gets a reference to the given []ApplicationRestoreObject and assigns it to the ApplicationRestoreObjects field.
func (o *ApplicationsRestoreTaskRequest) SetApplicationRestoreObjects(v []ApplicationRestoreObject) {
	o.ApplicationRestoreObjects = v
}

// GetHostingProtectionSource returns the HostingProtectionSource field value
func (o *ApplicationsRestoreTaskRequest) GetHostingProtectionSource() RestoreObjectDetails {
	if o == nil {
		var ret RestoreObjectDetails
		return ret
	}

	return o.HostingProtectionSource
}

// GetHostingProtectionSourceOk returns a tuple with the HostingProtectionSource field value
// and a boolean to check if the value has been set.
func (o *ApplicationsRestoreTaskRequest) GetHostingProtectionSourceOk() (*RestoreObjectDetails, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HostingProtectionSource, true
}

// SetHostingProtectionSource sets field value
func (o *ApplicationsRestoreTaskRequest) SetHostingProtectionSource(v RestoreObjectDetails) {
	o.HostingProtectionSource = v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ApplicationsRestoreTaskRequest) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationsRestoreTaskRequest) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *ApplicationsRestoreTaskRequest) SetName(v string) {
	o.Name.Set(&v)
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationsRestoreTaskRequest) GetPassword() string {
	if o == nil || o.Password.Get() == nil {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationsRestoreTaskRequest) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *ApplicationsRestoreTaskRequest) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *ApplicationsRestoreTaskRequest) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *ApplicationsRestoreTaskRequest) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *ApplicationsRestoreTaskRequest) UnsetPassword() {
	o.Password.Unset()
}

// GetProtectionSourceAndApplicationObjects returns the ProtectionSourceAndApplicationObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationsRestoreTaskRequest) GetProtectionSourceAndApplicationObjects() []ProtectionSourceAndApplicationRestoreObjects {
	if o == nil  {
		var ret []ProtectionSourceAndApplicationRestoreObjects
		return ret
	}
	return o.ProtectionSourceAndApplicationObjects
}

// GetProtectionSourceAndApplicationObjectsOk returns a tuple with the ProtectionSourceAndApplicationObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationsRestoreTaskRequest) GetProtectionSourceAndApplicationObjectsOk() (*[]ProtectionSourceAndApplicationRestoreObjects, bool) {
	if o == nil || o.ProtectionSourceAndApplicationObjects == nil {
		return nil, false
	}
	return &o.ProtectionSourceAndApplicationObjects, true
}

// HasProtectionSourceAndApplicationObjects returns a boolean if a field has been set.
func (o *ApplicationsRestoreTaskRequest) HasProtectionSourceAndApplicationObjects() bool {
	if o != nil && o.ProtectionSourceAndApplicationObjects != nil {
		return true
	}

	return false
}

// SetProtectionSourceAndApplicationObjects gets a reference to the given []ProtectionSourceAndApplicationRestoreObjects and assigns it to the ProtectionSourceAndApplicationObjects field.
func (o *ApplicationsRestoreTaskRequest) SetProtectionSourceAndApplicationObjects(v []ProtectionSourceAndApplicationRestoreObjects) {
	o.ProtectionSourceAndApplicationObjects = v
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationsRestoreTaskRequest) GetUsername() string {
	if o == nil || o.Username.Get() == nil {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationsRestoreTaskRequest) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *ApplicationsRestoreTaskRequest) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *ApplicationsRestoreTaskRequest) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *ApplicationsRestoreTaskRequest) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *ApplicationsRestoreTaskRequest) UnsetUsername() {
	o.Username.Unset()
}

// GetVlanParameters returns the VlanParameters field value if set, zero value otherwise.
func (o *ApplicationsRestoreTaskRequest) GetVlanParameters() VlanParameters {
	if o == nil || o.VlanParameters == nil {
		var ret VlanParameters
		return ret
	}
	return *o.VlanParameters
}

// GetVlanParametersOk returns a tuple with the VlanParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationsRestoreTaskRequest) GetVlanParametersOk() (*VlanParameters, bool) {
	if o == nil || o.VlanParameters == nil {
		return nil, false
	}
	return o.VlanParameters, true
}

// HasVlanParameters returns a boolean if a field has been set.
func (o *ApplicationsRestoreTaskRequest) HasVlanParameters() bool {
	if o != nil && o.VlanParameters != nil {
		return true
	}

	return false
}

// SetVlanParameters gets a reference to the given VlanParameters and assigns it to the VlanParameters field.
func (o *ApplicationsRestoreTaskRequest) SetVlanParameters(v VlanParameters) {
	o.VlanParameters = &v
}

func (o ApplicationsRestoreTaskRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["applicationEnvironment"] = o.ApplicationEnvironment.Get()
	}
	if o.ApplicationRestoreObjects != nil {
		toSerialize["applicationRestoreObjects"] = o.ApplicationRestoreObjects
	}
	if true {
		toSerialize["hostingProtectionSource"] = o.HostingProtectionSource
	}
	if true {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if o.ProtectionSourceAndApplicationObjects != nil {
		toSerialize["protectionSourceAndApplicationObjects"] = o.ProtectionSourceAndApplicationObjects
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	if o.VlanParameters != nil {
		toSerialize["vlanParameters"] = o.VlanParameters
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationsRestoreTaskRequest struct {
	value *ApplicationsRestoreTaskRequest
	isSet bool
}

func (v NullableApplicationsRestoreTaskRequest) Get() *ApplicationsRestoreTaskRequest {
	return v.value
}

func (v *NullableApplicationsRestoreTaskRequest) Set(val *ApplicationsRestoreTaskRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationsRestoreTaskRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationsRestoreTaskRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationsRestoreTaskRequest(val *ApplicationsRestoreTaskRequest) *NullableApplicationsRestoreTaskRequest {
	return &NullableApplicationsRestoreTaskRequest{value: val, isSet: true}
}

func (v NullableApplicationsRestoreTaskRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationsRestoreTaskRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


