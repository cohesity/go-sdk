/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// RestoreO365PublicFoldersParamsPublicFolder Proto to capture the restore details of a Public Folder
type RestoreO365PublicFoldersParamsPublicFolder struct {
	// The absolute path of the folder.
	AbsoluteFolderPath NullableString `json:"absoluteFolderPath,omitempty"`
	// The Unique ID of the folder.
	FolderId NullableString `json:"folderId,omitempty"`
	// Specify if the entire Public Folder is to be restored.
	IsEntireFolderRequired NullableBool `json:"isEntireFolderRequired,omitempty"`
	// If is_entire_folder_required is set to false, users will then specify which particular items are to be restored.
	ItemIdVec []string `json:"itemIdVec,omitempty"`
}

// NewRestoreO365PublicFoldersParamsPublicFolder instantiates a new RestoreO365PublicFoldersParamsPublicFolder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreO365PublicFoldersParamsPublicFolder() *RestoreO365PublicFoldersParamsPublicFolder {
	this := RestoreO365PublicFoldersParamsPublicFolder{}
	return &this
}

// NewRestoreO365PublicFoldersParamsPublicFolderWithDefaults instantiates a new RestoreO365PublicFoldersParamsPublicFolder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreO365PublicFoldersParamsPublicFolderWithDefaults() *RestoreO365PublicFoldersParamsPublicFolder {
	this := RestoreO365PublicFoldersParamsPublicFolder{}
	return &this
}

// GetAbsoluteFolderPath returns the AbsoluteFolderPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreO365PublicFoldersParamsPublicFolder) GetAbsoluteFolderPath() string {
	if o == nil || o.AbsoluteFolderPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.AbsoluteFolderPath.Get()
}

// GetAbsoluteFolderPathOk returns a tuple with the AbsoluteFolderPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreO365PublicFoldersParamsPublicFolder) GetAbsoluteFolderPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AbsoluteFolderPath.Get(), o.AbsoluteFolderPath.IsSet()
}

// HasAbsoluteFolderPath returns a boolean if a field has been set.
func (o *RestoreO365PublicFoldersParamsPublicFolder) HasAbsoluteFolderPath() bool {
	if o != nil && o.AbsoluteFolderPath.IsSet() {
		return true
	}

	return false
}

// SetAbsoluteFolderPath gets a reference to the given NullableString and assigns it to the AbsoluteFolderPath field.
func (o *RestoreO365PublicFoldersParamsPublicFolder) SetAbsoluteFolderPath(v string) {
	o.AbsoluteFolderPath.Set(&v)
}
// SetAbsoluteFolderPathNil sets the value for AbsoluteFolderPath to be an explicit nil
func (o *RestoreO365PublicFoldersParamsPublicFolder) SetAbsoluteFolderPathNil() {
	o.AbsoluteFolderPath.Set(nil)
}

// UnsetAbsoluteFolderPath ensures that no value is present for AbsoluteFolderPath, not even an explicit nil
func (o *RestoreO365PublicFoldersParamsPublicFolder) UnsetAbsoluteFolderPath() {
	o.AbsoluteFolderPath.Unset()
}

// GetFolderId returns the FolderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreO365PublicFoldersParamsPublicFolder) GetFolderId() string {
	if o == nil || o.FolderId.Get() == nil {
		var ret string
		return ret
	}
	return *o.FolderId.Get()
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreO365PublicFoldersParamsPublicFolder) GetFolderIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FolderId.Get(), o.FolderId.IsSet()
}

// HasFolderId returns a boolean if a field has been set.
func (o *RestoreO365PublicFoldersParamsPublicFolder) HasFolderId() bool {
	if o != nil && o.FolderId.IsSet() {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given NullableString and assigns it to the FolderId field.
func (o *RestoreO365PublicFoldersParamsPublicFolder) SetFolderId(v string) {
	o.FolderId.Set(&v)
}
// SetFolderIdNil sets the value for FolderId to be an explicit nil
func (o *RestoreO365PublicFoldersParamsPublicFolder) SetFolderIdNil() {
	o.FolderId.Set(nil)
}

// UnsetFolderId ensures that no value is present for FolderId, not even an explicit nil
func (o *RestoreO365PublicFoldersParamsPublicFolder) UnsetFolderId() {
	o.FolderId.Unset()
}

// GetIsEntireFolderRequired returns the IsEntireFolderRequired field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreO365PublicFoldersParamsPublicFolder) GetIsEntireFolderRequired() bool {
	if o == nil || o.IsEntireFolderRequired.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsEntireFolderRequired.Get()
}

// GetIsEntireFolderRequiredOk returns a tuple with the IsEntireFolderRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreO365PublicFoldersParamsPublicFolder) GetIsEntireFolderRequiredOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsEntireFolderRequired.Get(), o.IsEntireFolderRequired.IsSet()
}

// HasIsEntireFolderRequired returns a boolean if a field has been set.
func (o *RestoreO365PublicFoldersParamsPublicFolder) HasIsEntireFolderRequired() bool {
	if o != nil && o.IsEntireFolderRequired.IsSet() {
		return true
	}

	return false
}

// SetIsEntireFolderRequired gets a reference to the given NullableBool and assigns it to the IsEntireFolderRequired field.
func (o *RestoreO365PublicFoldersParamsPublicFolder) SetIsEntireFolderRequired(v bool) {
	o.IsEntireFolderRequired.Set(&v)
}
// SetIsEntireFolderRequiredNil sets the value for IsEntireFolderRequired to be an explicit nil
func (o *RestoreO365PublicFoldersParamsPublicFolder) SetIsEntireFolderRequiredNil() {
	o.IsEntireFolderRequired.Set(nil)
}

// UnsetIsEntireFolderRequired ensures that no value is present for IsEntireFolderRequired, not even an explicit nil
func (o *RestoreO365PublicFoldersParamsPublicFolder) UnsetIsEntireFolderRequired() {
	o.IsEntireFolderRequired.Unset()
}

// GetItemIdVec returns the ItemIdVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreO365PublicFoldersParamsPublicFolder) GetItemIdVec() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.ItemIdVec
}

// GetItemIdVecOk returns a tuple with the ItemIdVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreO365PublicFoldersParamsPublicFolder) GetItemIdVecOk() (*[]string, bool) {
	if o == nil || o.ItemIdVec == nil {
		return nil, false
	}
	return &o.ItemIdVec, true
}

// HasItemIdVec returns a boolean if a field has been set.
func (o *RestoreO365PublicFoldersParamsPublicFolder) HasItemIdVec() bool {
	if o != nil && o.ItemIdVec != nil {
		return true
	}

	return false
}

// SetItemIdVec gets a reference to the given []string and assigns it to the ItemIdVec field.
func (o *RestoreO365PublicFoldersParamsPublicFolder) SetItemIdVec(v []string) {
	o.ItemIdVec = v
}

func (o RestoreO365PublicFoldersParamsPublicFolder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AbsoluteFolderPath.IsSet() {
		toSerialize["absoluteFolderPath"] = o.AbsoluteFolderPath.Get()
	}
	if o.FolderId.IsSet() {
		toSerialize["folderId"] = o.FolderId.Get()
	}
	if o.IsEntireFolderRequired.IsSet() {
		toSerialize["isEntireFolderRequired"] = o.IsEntireFolderRequired.Get()
	}
	if o.ItemIdVec != nil {
		toSerialize["itemIdVec"] = o.ItemIdVec
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreO365PublicFoldersParamsPublicFolder struct {
	value *RestoreO365PublicFoldersParamsPublicFolder
	isSet bool
}

func (v NullableRestoreO365PublicFoldersParamsPublicFolder) Get() *RestoreO365PublicFoldersParamsPublicFolder {
	return v.value
}

func (v *NullableRestoreO365PublicFoldersParamsPublicFolder) Set(val *RestoreO365PublicFoldersParamsPublicFolder) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreO365PublicFoldersParamsPublicFolder) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreO365PublicFoldersParamsPublicFolder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreO365PublicFoldersParamsPublicFolder(val *RestoreO365PublicFoldersParamsPublicFolder) *NullableRestoreO365PublicFoldersParamsPublicFolder {
	return &NullableRestoreO365PublicFoldersParamsPublicFolder{value: val, isSet: true}
}

func (v NullableRestoreO365PublicFoldersParamsPublicFolder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreO365PublicFoldersParamsPublicFolder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


