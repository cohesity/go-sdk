/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// OutlookEnvJobParameters Specifies Outlook job parameters applicable for all Office365 Environment type Protection Sources in a Protection Job.
type OutlookEnvJobParameters struct {
	FilePathFilter *FilePathFilter `json:"filePathFilter,omitempty"`
	// Specifies whether mailbox of each Office365 Users/Groups within the job, should be backed up or not.
	ShouldBackupMailbox NullableBool `json:"shouldBackupMailbox,omitempty"`
}

// NewOutlookEnvJobParameters instantiates a new OutlookEnvJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutlookEnvJobParameters() *OutlookEnvJobParameters {
	this := OutlookEnvJobParameters{}
	return &this
}

// NewOutlookEnvJobParametersWithDefaults instantiates a new OutlookEnvJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutlookEnvJobParametersWithDefaults() *OutlookEnvJobParameters {
	this := OutlookEnvJobParameters{}
	return &this
}

// GetFilePathFilter returns the FilePathFilter field value if set, zero value otherwise.
func (o *OutlookEnvJobParameters) GetFilePathFilter() FilePathFilter {
	if o == nil || o.FilePathFilter == nil {
		var ret FilePathFilter
		return ret
	}
	return *o.FilePathFilter
}

// GetFilePathFilterOk returns a tuple with the FilePathFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutlookEnvJobParameters) GetFilePathFilterOk() (*FilePathFilter, bool) {
	if o == nil || o.FilePathFilter == nil {
		return nil, false
	}
	return o.FilePathFilter, true
}

// HasFilePathFilter returns a boolean if a field has been set.
func (o *OutlookEnvJobParameters) HasFilePathFilter() bool {
	if o != nil && o.FilePathFilter != nil {
		return true
	}

	return false
}

// SetFilePathFilter gets a reference to the given FilePathFilter and assigns it to the FilePathFilter field.
func (o *OutlookEnvJobParameters) SetFilePathFilter(v FilePathFilter) {
	o.FilePathFilter = &v
}

// GetShouldBackupMailbox returns the ShouldBackupMailbox field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutlookEnvJobParameters) GetShouldBackupMailbox() bool {
	if o == nil || o.ShouldBackupMailbox.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ShouldBackupMailbox.Get()
}

// GetShouldBackupMailboxOk returns a tuple with the ShouldBackupMailbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutlookEnvJobParameters) GetShouldBackupMailboxOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ShouldBackupMailbox.Get(), o.ShouldBackupMailbox.IsSet()
}

// HasShouldBackupMailbox returns a boolean if a field has been set.
func (o *OutlookEnvJobParameters) HasShouldBackupMailbox() bool {
	if o != nil && o.ShouldBackupMailbox.IsSet() {
		return true
	}

	return false
}

// SetShouldBackupMailbox gets a reference to the given NullableBool and assigns it to the ShouldBackupMailbox field.
func (o *OutlookEnvJobParameters) SetShouldBackupMailbox(v bool) {
	o.ShouldBackupMailbox.Set(&v)
}
// SetShouldBackupMailboxNil sets the value for ShouldBackupMailbox to be an explicit nil
func (o *OutlookEnvJobParameters) SetShouldBackupMailboxNil() {
	o.ShouldBackupMailbox.Set(nil)
}

// UnsetShouldBackupMailbox ensures that no value is present for ShouldBackupMailbox, not even an explicit nil
func (o *OutlookEnvJobParameters) UnsetShouldBackupMailbox() {
	o.ShouldBackupMailbox.Unset()
}

func (o OutlookEnvJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FilePathFilter != nil {
		toSerialize["filePathFilter"] = o.FilePathFilter
	}
	if o.ShouldBackupMailbox.IsSet() {
		toSerialize["shouldBackupMailbox"] = o.ShouldBackupMailbox.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOutlookEnvJobParameters struct {
	value *OutlookEnvJobParameters
	isSet bool
}

func (v NullableOutlookEnvJobParameters) Get() *OutlookEnvJobParameters {
	return v.value
}

func (v *NullableOutlookEnvJobParameters) Set(val *OutlookEnvJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableOutlookEnvJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableOutlookEnvJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutlookEnvJobParameters(val *OutlookEnvJobParameters) *NullableOutlookEnvJobParameters {
	return &NullableOutlookEnvJobParameters{value: val, isSet: true}
}

func (v NullableOutlookEnvJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutlookEnvJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


