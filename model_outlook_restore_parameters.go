/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// OutlookRestoreParameters Specifies information needed for recovering Mailboxes in O365Outlook environment.
type OutlookRestoreParameters struct {
	// Specifies the list of mailboxes to be restored.
	OutlookMailboxList []OutlookMailbox `json:"outlookMailboxList,omitempty"`
	// Specifies the target folder path to restore the mailboxes. This will always be specified whether the target mailbox is the original or an alternate one.
	TargetFolderPath NullableString `json:"targetFolderPath,omitempty"`
	TargetMailbox *ProtectionSource `json:"targetMailbox,omitempty"`
}

// NewOutlookRestoreParameters instantiates a new OutlookRestoreParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutlookRestoreParameters() *OutlookRestoreParameters {
	this := OutlookRestoreParameters{}
	return &this
}

// NewOutlookRestoreParametersWithDefaults instantiates a new OutlookRestoreParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutlookRestoreParametersWithDefaults() *OutlookRestoreParameters {
	this := OutlookRestoreParameters{}
	return &this
}

// GetOutlookMailboxList returns the OutlookMailboxList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutlookRestoreParameters) GetOutlookMailboxList() []OutlookMailbox {
	if o == nil  {
		var ret []OutlookMailbox
		return ret
	}
	return o.OutlookMailboxList
}

// GetOutlookMailboxListOk returns a tuple with the OutlookMailboxList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutlookRestoreParameters) GetOutlookMailboxListOk() (*[]OutlookMailbox, bool) {
	if o == nil || o.OutlookMailboxList == nil {
		return nil, false
	}
	return &o.OutlookMailboxList, true
}

// HasOutlookMailboxList returns a boolean if a field has been set.
func (o *OutlookRestoreParameters) HasOutlookMailboxList() bool {
	if o != nil && o.OutlookMailboxList != nil {
		return true
	}

	return false
}

// SetOutlookMailboxList gets a reference to the given []OutlookMailbox and assigns it to the OutlookMailboxList field.
func (o *OutlookRestoreParameters) SetOutlookMailboxList(v []OutlookMailbox) {
	o.OutlookMailboxList = v
}

// GetTargetFolderPath returns the TargetFolderPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutlookRestoreParameters) GetTargetFolderPath() string {
	if o == nil || o.TargetFolderPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.TargetFolderPath.Get()
}

// GetTargetFolderPathOk returns a tuple with the TargetFolderPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutlookRestoreParameters) GetTargetFolderPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetFolderPath.Get(), o.TargetFolderPath.IsSet()
}

// HasTargetFolderPath returns a boolean if a field has been set.
func (o *OutlookRestoreParameters) HasTargetFolderPath() bool {
	if o != nil && o.TargetFolderPath.IsSet() {
		return true
	}

	return false
}

// SetTargetFolderPath gets a reference to the given NullableString and assigns it to the TargetFolderPath field.
func (o *OutlookRestoreParameters) SetTargetFolderPath(v string) {
	o.TargetFolderPath.Set(&v)
}
// SetTargetFolderPathNil sets the value for TargetFolderPath to be an explicit nil
func (o *OutlookRestoreParameters) SetTargetFolderPathNil() {
	o.TargetFolderPath.Set(nil)
}

// UnsetTargetFolderPath ensures that no value is present for TargetFolderPath, not even an explicit nil
func (o *OutlookRestoreParameters) UnsetTargetFolderPath() {
	o.TargetFolderPath.Unset()
}

// GetTargetMailbox returns the TargetMailbox field value if set, zero value otherwise.
func (o *OutlookRestoreParameters) GetTargetMailbox() ProtectionSource {
	if o == nil || o.TargetMailbox == nil {
		var ret ProtectionSource
		return ret
	}
	return *o.TargetMailbox
}

// GetTargetMailboxOk returns a tuple with the TargetMailbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutlookRestoreParameters) GetTargetMailboxOk() (*ProtectionSource, bool) {
	if o == nil || o.TargetMailbox == nil {
		return nil, false
	}
	return o.TargetMailbox, true
}

// HasTargetMailbox returns a boolean if a field has been set.
func (o *OutlookRestoreParameters) HasTargetMailbox() bool {
	if o != nil && o.TargetMailbox != nil {
		return true
	}

	return false
}

// SetTargetMailbox gets a reference to the given ProtectionSource and assigns it to the TargetMailbox field.
func (o *OutlookRestoreParameters) SetTargetMailbox(v ProtectionSource) {
	o.TargetMailbox = &v
}

func (o OutlookRestoreParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OutlookMailboxList != nil {
		toSerialize["outlookMailboxList"] = o.OutlookMailboxList
	}
	if o.TargetFolderPath.IsSet() {
		toSerialize["targetFolderPath"] = o.TargetFolderPath.Get()
	}
	if o.TargetMailbox != nil {
		toSerialize["targetMailbox"] = o.TargetMailbox
	}
	return json.Marshal(toSerialize)
}

type NullableOutlookRestoreParameters struct {
	value *OutlookRestoreParameters
	isSet bool
}

func (v NullableOutlookRestoreParameters) Get() *OutlookRestoreParameters {
	return v.value
}

func (v *NullableOutlookRestoreParameters) Set(val *OutlookRestoreParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableOutlookRestoreParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableOutlookRestoreParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutlookRestoreParameters(val *OutlookRestoreParameters) *NullableOutlookRestoreParameters {
	return &NullableOutlookRestoreParameters{value: val, isSet: true}
}

func (v NullableOutlookRestoreParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutlookRestoreParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


