/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// SourceAppParams This message contains params specific to application running on the source such as a VM or a physical host.
type SourceAppParams struct {
	// If the backup is a VSS full backup with the copy-only option specified.
	IsVssCopyOnly NullableBool `json:"isVssCopyOnly,omitempty"`
	MsExchangeParams *MSExchangeParams `json:"msExchangeParams,omitempty"`
}

// NewSourceAppParams instantiates a new SourceAppParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceAppParams() *SourceAppParams {
	this := SourceAppParams{}
	return &this
}

// NewSourceAppParamsWithDefaults instantiates a new SourceAppParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceAppParamsWithDefaults() *SourceAppParams {
	this := SourceAppParams{}
	return &this
}

// GetIsVssCopyOnly returns the IsVssCopyOnly field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SourceAppParams) GetIsVssCopyOnly() bool {
	if o == nil || o.IsVssCopyOnly.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsVssCopyOnly.Get()
}

// GetIsVssCopyOnlyOk returns a tuple with the IsVssCopyOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SourceAppParams) GetIsVssCopyOnlyOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsVssCopyOnly.Get(), o.IsVssCopyOnly.IsSet()
}

// HasIsVssCopyOnly returns a boolean if a field has been set.
func (o *SourceAppParams) HasIsVssCopyOnly() bool {
	if o != nil && o.IsVssCopyOnly.IsSet() {
		return true
	}

	return false
}

// SetIsVssCopyOnly gets a reference to the given NullableBool and assigns it to the IsVssCopyOnly field.
func (o *SourceAppParams) SetIsVssCopyOnly(v bool) {
	o.IsVssCopyOnly.Set(&v)
}
// SetIsVssCopyOnlyNil sets the value for IsVssCopyOnly to be an explicit nil
func (o *SourceAppParams) SetIsVssCopyOnlyNil() {
	o.IsVssCopyOnly.Set(nil)
}

// UnsetIsVssCopyOnly ensures that no value is present for IsVssCopyOnly, not even an explicit nil
func (o *SourceAppParams) UnsetIsVssCopyOnly() {
	o.IsVssCopyOnly.Unset()
}

// GetMsExchangeParams returns the MsExchangeParams field value if set, zero value otherwise.
func (o *SourceAppParams) GetMsExchangeParams() MSExchangeParams {
	if o == nil || o.MsExchangeParams == nil {
		var ret MSExchangeParams
		return ret
	}
	return *o.MsExchangeParams
}

// GetMsExchangeParamsOk returns a tuple with the MsExchangeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceAppParams) GetMsExchangeParamsOk() (*MSExchangeParams, bool) {
	if o == nil || o.MsExchangeParams == nil {
		return nil, false
	}
	return o.MsExchangeParams, true
}

// HasMsExchangeParams returns a boolean if a field has been set.
func (o *SourceAppParams) HasMsExchangeParams() bool {
	if o != nil && o.MsExchangeParams != nil {
		return true
	}

	return false
}

// SetMsExchangeParams gets a reference to the given MSExchangeParams and assigns it to the MsExchangeParams field.
func (o *SourceAppParams) SetMsExchangeParams(v MSExchangeParams) {
	o.MsExchangeParams = &v
}

func (o SourceAppParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsVssCopyOnly.IsSet() {
		toSerialize["isVssCopyOnly"] = o.IsVssCopyOnly.Get()
	}
	if o.MsExchangeParams != nil {
		toSerialize["msExchangeParams"] = o.MsExchangeParams
	}
	return json.Marshal(toSerialize)
}

type NullableSourceAppParams struct {
	value *SourceAppParams
	isSet bool
}

func (v NullableSourceAppParams) Get() *SourceAppParams {
	return v.value
}

func (v *NullableSourceAppParams) Set(val *SourceAppParams) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceAppParams) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceAppParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceAppParams(val *SourceAppParams) *NullableSourceAppParams {
	return &NullableSourceAppParams{value: val, isSet: true}
}

func (v NullableSourceAppParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceAppParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


