/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// RestoreAppParams This message captures all the necessary arguments specified by the user to restore an application.
type RestoreAppParams struct {
	Credentials *Credentials `json:"credentials,omitempty"`
	OwnerRestoreInfo *AppOwnerRestoreInfo `json:"ownerRestoreInfo,omitempty"`
	// The application level objects that needs to be restored. If this vector is populated with exactly one object without its 'app_entity', all the application objects of the owner will be restored. If multiple objects are being restored, the 'app_entity' field must be specified for all of them.
	RestoreAppObjectVec []RestoreAppObject `json:"restoreAppObjectVec,omitempty"`
	// The application environment.
	Type NullableInt32 `json:"type,omitempty"`
}

// NewRestoreAppParams instantiates a new RestoreAppParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreAppParams() *RestoreAppParams {
	this := RestoreAppParams{}
	return &this
}

// NewRestoreAppParamsWithDefaults instantiates a new RestoreAppParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreAppParamsWithDefaults() *RestoreAppParams {
	this := RestoreAppParams{}
	return &this
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *RestoreAppParams) GetCredentials() Credentials {
	if o == nil || o.Credentials == nil {
		var ret Credentials
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAppParams) GetCredentialsOk() (*Credentials, bool) {
	if o == nil || o.Credentials == nil {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *RestoreAppParams) HasCredentials() bool {
	if o != nil && o.Credentials != nil {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given Credentials and assigns it to the Credentials field.
func (o *RestoreAppParams) SetCredentials(v Credentials) {
	o.Credentials = &v
}

// GetOwnerRestoreInfo returns the OwnerRestoreInfo field value if set, zero value otherwise.
func (o *RestoreAppParams) GetOwnerRestoreInfo() AppOwnerRestoreInfo {
	if o == nil || o.OwnerRestoreInfo == nil {
		var ret AppOwnerRestoreInfo
		return ret
	}
	return *o.OwnerRestoreInfo
}

// GetOwnerRestoreInfoOk returns a tuple with the OwnerRestoreInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAppParams) GetOwnerRestoreInfoOk() (*AppOwnerRestoreInfo, bool) {
	if o == nil || o.OwnerRestoreInfo == nil {
		return nil, false
	}
	return o.OwnerRestoreInfo, true
}

// HasOwnerRestoreInfo returns a boolean if a field has been set.
func (o *RestoreAppParams) HasOwnerRestoreInfo() bool {
	if o != nil && o.OwnerRestoreInfo != nil {
		return true
	}

	return false
}

// SetOwnerRestoreInfo gets a reference to the given AppOwnerRestoreInfo and assigns it to the OwnerRestoreInfo field.
func (o *RestoreAppParams) SetOwnerRestoreInfo(v AppOwnerRestoreInfo) {
	o.OwnerRestoreInfo = &v
}

// GetRestoreAppObjectVec returns the RestoreAppObjectVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreAppParams) GetRestoreAppObjectVec() []RestoreAppObject {
	if o == nil  {
		var ret []RestoreAppObject
		return ret
	}
	return o.RestoreAppObjectVec
}

// GetRestoreAppObjectVecOk returns a tuple with the RestoreAppObjectVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreAppParams) GetRestoreAppObjectVecOk() (*[]RestoreAppObject, bool) {
	if o == nil || o.RestoreAppObjectVec == nil {
		return nil, false
	}
	return &o.RestoreAppObjectVec, true
}

// HasRestoreAppObjectVec returns a boolean if a field has been set.
func (o *RestoreAppParams) HasRestoreAppObjectVec() bool {
	if o != nil && o.RestoreAppObjectVec != nil {
		return true
	}

	return false
}

// SetRestoreAppObjectVec gets a reference to the given []RestoreAppObject and assigns it to the RestoreAppObjectVec field.
func (o *RestoreAppParams) SetRestoreAppObjectVec(v []RestoreAppObject) {
	o.RestoreAppObjectVec = v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreAppParams) GetType() int32 {
	if o == nil || o.Type.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreAppParams) GetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *RestoreAppParams) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableInt32 and assigns it to the Type field.
func (o *RestoreAppParams) SetType(v int32) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *RestoreAppParams) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *RestoreAppParams) UnsetType() {
	o.Type.Unset()
}

func (o RestoreAppParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Credentials != nil {
		toSerialize["credentials"] = o.Credentials
	}
	if o.OwnerRestoreInfo != nil {
		toSerialize["ownerRestoreInfo"] = o.OwnerRestoreInfo
	}
	if o.RestoreAppObjectVec != nil {
		toSerialize["restoreAppObjectVec"] = o.RestoreAppObjectVec
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreAppParams struct {
	value *RestoreAppParams
	isSet bool
}

func (v NullableRestoreAppParams) Get() *RestoreAppParams {
	return v.value
}

func (v *NullableRestoreAppParams) Set(val *RestoreAppParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreAppParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreAppParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreAppParams(val *RestoreAppParams) *NullableRestoreAppParams {
	return &NullableRestoreAppParams{value: val, isSet: true}
}

func (v NullableRestoreAppParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreAppParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


