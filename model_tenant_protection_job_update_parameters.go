/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// TenantProtectionJobUpdateParameters Specifies protection job update details about a tenant.
type TenantProtectionJobUpdateParameters struct {
	// Specifies the ProtectionJobIds vec for respective tenant.
	ProtectionJobIds []int64 `json:"protectionJobIds,omitempty"`
	// Specifies the unique id of the tenant.
	TenantId NullableString `json:"tenantId,omitempty"`
}

// NewTenantProtectionJobUpdateParameters instantiates a new TenantProtectionJobUpdateParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantProtectionJobUpdateParameters() *TenantProtectionJobUpdateParameters {
	this := TenantProtectionJobUpdateParameters{}
	return &this
}

// NewTenantProtectionJobUpdateParametersWithDefaults instantiates a new TenantProtectionJobUpdateParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantProtectionJobUpdateParametersWithDefaults() *TenantProtectionJobUpdateParameters {
	this := TenantProtectionJobUpdateParameters{}
	return &this
}

// GetProtectionJobIds returns the ProtectionJobIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantProtectionJobUpdateParameters) GetProtectionJobIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.ProtectionJobIds
}

// GetProtectionJobIdsOk returns a tuple with the ProtectionJobIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantProtectionJobUpdateParameters) GetProtectionJobIdsOk() (*[]int64, bool) {
	if o == nil || o.ProtectionJobIds == nil {
		return nil, false
	}
	return &o.ProtectionJobIds, true
}

// HasProtectionJobIds returns a boolean if a field has been set.
func (o *TenantProtectionJobUpdateParameters) HasProtectionJobIds() bool {
	if o != nil && o.ProtectionJobIds != nil {
		return true
	}

	return false
}

// SetProtectionJobIds gets a reference to the given []int64 and assigns it to the ProtectionJobIds field.
func (o *TenantProtectionJobUpdateParameters) SetProtectionJobIds(v []int64) {
	o.ProtectionJobIds = v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantProtectionJobUpdateParameters) GetTenantId() string {
	if o == nil || o.TenantId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantProtectionJobUpdateParameters) GetTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *TenantProtectionJobUpdateParameters) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *TenantProtectionJobUpdateParameters) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *TenantProtectionJobUpdateParameters) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *TenantProtectionJobUpdateParameters) UnsetTenantId() {
	o.TenantId.Unset()
}

func (o TenantProtectionJobUpdateParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProtectionJobIds != nil {
		toSerialize["protectionJobIds"] = o.ProtectionJobIds
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTenantProtectionJobUpdateParameters struct {
	value *TenantProtectionJobUpdateParameters
	isSet bool
}

func (v NullableTenantProtectionJobUpdateParameters) Get() *TenantProtectionJobUpdateParameters {
	return v.value
}

func (v *NullableTenantProtectionJobUpdateParameters) Set(val *TenantProtectionJobUpdateParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantProtectionJobUpdateParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantProtectionJobUpdateParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantProtectionJobUpdateParameters(val *TenantProtectionJobUpdateParameters) *NullableTenantProtectionJobUpdateParameters {
	return &NullableTenantProtectionJobUpdateParameters{value: val, isSet: true}
}

func (v NullableTenantProtectionJobUpdateParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantProtectionJobUpdateParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


