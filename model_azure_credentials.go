/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// AzureCredentials Specifies the credentials to authenticate with Azure Cloud Platform.
type AzureCredentials struct {
	// Specifies Application Id of the active directory of Azure account.
	ApplicationId NullableString `json:"applicationId,omitempty"`
	// Specifies Application key of the active directory of Azure account.
	ApplicationKey NullableString `json:"applicationKey,omitempty"`
	// Specifies the entity type such as 'kSubscription' if the environment is kAzure. Specifies the type of an Azure source entity. 'kSubscription' indicates a billing unit within Azure account. 'kResourceGroup' indicates a container that holds related resources. 'kVirtualMachine' indicates a Virtual Machine in Azure environment. 'kStorageAccount' represents a collection of storage containers. 'kStorageKey' indicates a key required to access the storage account. 'kStorageContainer' represents a storage container within a storage account. 'kStorageBlob' represents a storage blog within a storage container. 'kStorageResourceGroup' indicates a container that holds related storage resources. 'kNetworkSecurityGroup' represents a network security group. 'kVirtualNetwork' represents a virtual network. 'kNetworkResourceGroup' indicates a container that holds related network resources. 'kSubnet' represents a subnet within the virtual network. 'kComputeOptions' indicates the number of CPU cores and memory size available for a type of a Virtual Machine.
	AzureType NullableString `json:"azureType,omitempty"`
	// Specifies Subscription id inside a customer's Azure account. It represents sub-section within the Azure account where a customer allows us to create VMs, storage account etc.
	SubscriptionId NullableString `json:"subscriptionId,omitempty"`
	// Specifies the subscription type of Azure such as 'kAzureCommercial' or 'kAzureGovCloud'. Specifies the subscription type of an Azure source entity. 'kAzureCommercial' indicates a standard Azure subscription. 'kAzureGovCloud' indicates a govt Azure subscription.
	SubscriptionType NullableString `json:"subscriptionType,omitempty"`
	// Specifies Tenant Id of the active directory of Azure account.
	TenantId NullableString `json:"tenantId,omitempty"`
}

// NewAzureCredentials instantiates a new AzureCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureCredentials() *AzureCredentials {
	this := AzureCredentials{}
	return &this
}

// NewAzureCredentialsWithDefaults instantiates a new AzureCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureCredentialsWithDefaults() *AzureCredentials {
	this := AzureCredentials{}
	return &this
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureCredentials) GetApplicationId() string {
	if o == nil || o.ApplicationId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ApplicationId.Get()
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureCredentials) GetApplicationIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ApplicationId.Get(), o.ApplicationId.IsSet()
}

// HasApplicationId returns a boolean if a field has been set.
func (o *AzureCredentials) HasApplicationId() bool {
	if o != nil && o.ApplicationId.IsSet() {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given NullableString and assigns it to the ApplicationId field.
func (o *AzureCredentials) SetApplicationId(v string) {
	o.ApplicationId.Set(&v)
}
// SetApplicationIdNil sets the value for ApplicationId to be an explicit nil
func (o *AzureCredentials) SetApplicationIdNil() {
	o.ApplicationId.Set(nil)
}

// UnsetApplicationId ensures that no value is present for ApplicationId, not even an explicit nil
func (o *AzureCredentials) UnsetApplicationId() {
	o.ApplicationId.Unset()
}

// GetApplicationKey returns the ApplicationKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureCredentials) GetApplicationKey() string {
	if o == nil || o.ApplicationKey.Get() == nil {
		var ret string
		return ret
	}
	return *o.ApplicationKey.Get()
}

// GetApplicationKeyOk returns a tuple with the ApplicationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureCredentials) GetApplicationKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ApplicationKey.Get(), o.ApplicationKey.IsSet()
}

// HasApplicationKey returns a boolean if a field has been set.
func (o *AzureCredentials) HasApplicationKey() bool {
	if o != nil && o.ApplicationKey.IsSet() {
		return true
	}

	return false
}

// SetApplicationKey gets a reference to the given NullableString and assigns it to the ApplicationKey field.
func (o *AzureCredentials) SetApplicationKey(v string) {
	o.ApplicationKey.Set(&v)
}
// SetApplicationKeyNil sets the value for ApplicationKey to be an explicit nil
func (o *AzureCredentials) SetApplicationKeyNil() {
	o.ApplicationKey.Set(nil)
}

// UnsetApplicationKey ensures that no value is present for ApplicationKey, not even an explicit nil
func (o *AzureCredentials) UnsetApplicationKey() {
	o.ApplicationKey.Unset()
}

// GetAzureType returns the AzureType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureCredentials) GetAzureType() string {
	if o == nil || o.AzureType.Get() == nil {
		var ret string
		return ret
	}
	return *o.AzureType.Get()
}

// GetAzureTypeOk returns a tuple with the AzureType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureCredentials) GetAzureTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AzureType.Get(), o.AzureType.IsSet()
}

// HasAzureType returns a boolean if a field has been set.
func (o *AzureCredentials) HasAzureType() bool {
	if o != nil && o.AzureType.IsSet() {
		return true
	}

	return false
}

// SetAzureType gets a reference to the given NullableString and assigns it to the AzureType field.
func (o *AzureCredentials) SetAzureType(v string) {
	o.AzureType.Set(&v)
}
// SetAzureTypeNil sets the value for AzureType to be an explicit nil
func (o *AzureCredentials) SetAzureTypeNil() {
	o.AzureType.Set(nil)
}

// UnsetAzureType ensures that no value is present for AzureType, not even an explicit nil
func (o *AzureCredentials) UnsetAzureType() {
	o.AzureType.Unset()
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureCredentials) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId.Get()
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureCredentials) GetSubscriptionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubscriptionId.Get(), o.SubscriptionId.IsSet()
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *AzureCredentials) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given NullableString and assigns it to the SubscriptionId field.
func (o *AzureCredentials) SetSubscriptionId(v string) {
	o.SubscriptionId.Set(&v)
}
// SetSubscriptionIdNil sets the value for SubscriptionId to be an explicit nil
func (o *AzureCredentials) SetSubscriptionIdNil() {
	o.SubscriptionId.Set(nil)
}

// UnsetSubscriptionId ensures that no value is present for SubscriptionId, not even an explicit nil
func (o *AzureCredentials) UnsetSubscriptionId() {
	o.SubscriptionId.Unset()
}

// GetSubscriptionType returns the SubscriptionType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureCredentials) GetSubscriptionType() string {
	if o == nil || o.SubscriptionType.Get() == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionType.Get()
}

// GetSubscriptionTypeOk returns a tuple with the SubscriptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureCredentials) GetSubscriptionTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubscriptionType.Get(), o.SubscriptionType.IsSet()
}

// HasSubscriptionType returns a boolean if a field has been set.
func (o *AzureCredentials) HasSubscriptionType() bool {
	if o != nil && o.SubscriptionType.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionType gets a reference to the given NullableString and assigns it to the SubscriptionType field.
func (o *AzureCredentials) SetSubscriptionType(v string) {
	o.SubscriptionType.Set(&v)
}
// SetSubscriptionTypeNil sets the value for SubscriptionType to be an explicit nil
func (o *AzureCredentials) SetSubscriptionTypeNil() {
	o.SubscriptionType.Set(nil)
}

// UnsetSubscriptionType ensures that no value is present for SubscriptionType, not even an explicit nil
func (o *AzureCredentials) UnsetSubscriptionType() {
	o.SubscriptionType.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureCredentials) GetTenantId() string {
	if o == nil || o.TenantId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureCredentials) GetTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *AzureCredentials) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *AzureCredentials) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *AzureCredentials) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *AzureCredentials) UnsetTenantId() {
	o.TenantId.Unset()
}

func (o AzureCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationId.IsSet() {
		toSerialize["applicationId"] = o.ApplicationId.Get()
	}
	if o.ApplicationKey.IsSet() {
		toSerialize["applicationKey"] = o.ApplicationKey.Get()
	}
	if o.AzureType.IsSet() {
		toSerialize["azureType"] = o.AzureType.Get()
	}
	if o.SubscriptionId.IsSet() {
		toSerialize["subscriptionId"] = o.SubscriptionId.Get()
	}
	if o.SubscriptionType.IsSet() {
		toSerialize["subscriptionType"] = o.SubscriptionType.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAzureCredentials struct {
	value *AzureCredentials
	isSet bool
}

func (v NullableAzureCredentials) Get() *AzureCredentials {
	return v.value
}

func (v *NullableAzureCredentials) Set(val *AzureCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureCredentials(val *AzureCredentials) *NullableAzureCredentials {
	return &NullableAzureCredentials{value: val, isSet: true}
}

func (v NullableAzureCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


