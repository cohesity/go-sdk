/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// Office365Credentials Specifies the credentials to authenticate with Office365 account.
type Office365Credentials struct {
	// Specifies the application ID that the registration portal (apps.dev.microsoft.com) assigned.
	ClientId NullableString `json:"clientId,omitempty"`
	// Specifies the application secret that was created in app registration portal.
	ClientSecret NullableString `json:"clientSecret,omitempty"`
	// Specifies the application grant type. eg: For client credentials flow, set this to \"client_credentials\"; For refreshing access-token, set this to \"refresh_token\".
	GrantType NullableString `json:"grantType,omitempty"`
	// Specifies a space separated list of scopes/permissions for the user. eg: Incase of MS Graph APIs for Office365, scope is set to default: https://graph.microsoft.com/.default
	Scope NullableString `json:"scope,omitempty"`
	// This field is deprecated from here and placed in RegisteredSourceInfo and ProtectionSourceParameters. deprecated: true
	UseOAuthForExchangeOnline NullableBool `json:"useOAuthForExchangeOnline,omitempty"`
}

// NewOffice365Credentials instantiates a new Office365Credentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOffice365Credentials() *Office365Credentials {
	this := Office365Credentials{}
	return &this
}

// NewOffice365CredentialsWithDefaults instantiates a new Office365Credentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOffice365CredentialsWithDefaults() *Office365Credentials {
	this := Office365Credentials{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Office365Credentials) GetClientId() string {
	if o == nil || o.ClientId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClientId.Get()
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Office365Credentials) GetClientIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClientId.Get(), o.ClientId.IsSet()
}

// HasClientId returns a boolean if a field has been set.
func (o *Office365Credentials) HasClientId() bool {
	if o != nil && o.ClientId.IsSet() {
		return true
	}

	return false
}

// SetClientId gets a reference to the given NullableString and assigns it to the ClientId field.
func (o *Office365Credentials) SetClientId(v string) {
	o.ClientId.Set(&v)
}
// SetClientIdNil sets the value for ClientId to be an explicit nil
func (o *Office365Credentials) SetClientIdNil() {
	o.ClientId.Set(nil)
}

// UnsetClientId ensures that no value is present for ClientId, not even an explicit nil
func (o *Office365Credentials) UnsetClientId() {
	o.ClientId.Unset()
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Office365Credentials) GetClientSecret() string {
	if o == nil || o.ClientSecret.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClientSecret.Get()
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Office365Credentials) GetClientSecretOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClientSecret.Get(), o.ClientSecret.IsSet()
}

// HasClientSecret returns a boolean if a field has been set.
func (o *Office365Credentials) HasClientSecret() bool {
	if o != nil && o.ClientSecret.IsSet() {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given NullableString and assigns it to the ClientSecret field.
func (o *Office365Credentials) SetClientSecret(v string) {
	o.ClientSecret.Set(&v)
}
// SetClientSecretNil sets the value for ClientSecret to be an explicit nil
func (o *Office365Credentials) SetClientSecretNil() {
	o.ClientSecret.Set(nil)
}

// UnsetClientSecret ensures that no value is present for ClientSecret, not even an explicit nil
func (o *Office365Credentials) UnsetClientSecret() {
	o.ClientSecret.Unset()
}

// GetGrantType returns the GrantType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Office365Credentials) GetGrantType() string {
	if o == nil || o.GrantType.Get() == nil {
		var ret string
		return ret
	}
	return *o.GrantType.Get()
}

// GetGrantTypeOk returns a tuple with the GrantType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Office365Credentials) GetGrantTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GrantType.Get(), o.GrantType.IsSet()
}

// HasGrantType returns a boolean if a field has been set.
func (o *Office365Credentials) HasGrantType() bool {
	if o != nil && o.GrantType.IsSet() {
		return true
	}

	return false
}

// SetGrantType gets a reference to the given NullableString and assigns it to the GrantType field.
func (o *Office365Credentials) SetGrantType(v string) {
	o.GrantType.Set(&v)
}
// SetGrantTypeNil sets the value for GrantType to be an explicit nil
func (o *Office365Credentials) SetGrantTypeNil() {
	o.GrantType.Set(nil)
}

// UnsetGrantType ensures that no value is present for GrantType, not even an explicit nil
func (o *Office365Credentials) UnsetGrantType() {
	o.GrantType.Unset()
}

// GetScope returns the Scope field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Office365Credentials) GetScope() string {
	if o == nil || o.Scope.Get() == nil {
		var ret string
		return ret
	}
	return *o.Scope.Get()
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Office365Credentials) GetScopeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Scope.Get(), o.Scope.IsSet()
}

// HasScope returns a boolean if a field has been set.
func (o *Office365Credentials) HasScope() bool {
	if o != nil && o.Scope.IsSet() {
		return true
	}

	return false
}

// SetScope gets a reference to the given NullableString and assigns it to the Scope field.
func (o *Office365Credentials) SetScope(v string) {
	o.Scope.Set(&v)
}
// SetScopeNil sets the value for Scope to be an explicit nil
func (o *Office365Credentials) SetScopeNil() {
	o.Scope.Set(nil)
}

// UnsetScope ensures that no value is present for Scope, not even an explicit nil
func (o *Office365Credentials) UnsetScope() {
	o.Scope.Unset()
}

// GetUseOAuthForExchangeOnline returns the UseOAuthForExchangeOnline field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Office365Credentials) GetUseOAuthForExchangeOnline() bool {
	if o == nil || o.UseOAuthForExchangeOnline.Get() == nil {
		var ret bool
		return ret
	}
	return *o.UseOAuthForExchangeOnline.Get()
}

// GetUseOAuthForExchangeOnlineOk returns a tuple with the UseOAuthForExchangeOnline field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Office365Credentials) GetUseOAuthForExchangeOnlineOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UseOAuthForExchangeOnline.Get(), o.UseOAuthForExchangeOnline.IsSet()
}

// HasUseOAuthForExchangeOnline returns a boolean if a field has been set.
func (o *Office365Credentials) HasUseOAuthForExchangeOnline() bool {
	if o != nil && o.UseOAuthForExchangeOnline.IsSet() {
		return true
	}

	return false
}

// SetUseOAuthForExchangeOnline gets a reference to the given NullableBool and assigns it to the UseOAuthForExchangeOnline field.
func (o *Office365Credentials) SetUseOAuthForExchangeOnline(v bool) {
	o.UseOAuthForExchangeOnline.Set(&v)
}
// SetUseOAuthForExchangeOnlineNil sets the value for UseOAuthForExchangeOnline to be an explicit nil
func (o *Office365Credentials) SetUseOAuthForExchangeOnlineNil() {
	o.UseOAuthForExchangeOnline.Set(nil)
}

// UnsetUseOAuthForExchangeOnline ensures that no value is present for UseOAuthForExchangeOnline, not even an explicit nil
func (o *Office365Credentials) UnsetUseOAuthForExchangeOnline() {
	o.UseOAuthForExchangeOnline.Unset()
}

func (o Office365Credentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId.IsSet() {
		toSerialize["clientId"] = o.ClientId.Get()
	}
	if o.ClientSecret.IsSet() {
		toSerialize["clientSecret"] = o.ClientSecret.Get()
	}
	if o.GrantType.IsSet() {
		toSerialize["grantType"] = o.GrantType.Get()
	}
	if o.Scope.IsSet() {
		toSerialize["scope"] = o.Scope.Get()
	}
	if o.UseOAuthForExchangeOnline.IsSet() {
		toSerialize["useOAuthForExchangeOnline"] = o.UseOAuthForExchangeOnline.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOffice365Credentials struct {
	value *Office365Credentials
	isSet bool
}

func (v NullableOffice365Credentials) Get() *Office365Credentials {
	return v.value
}

func (v *NullableOffice365Credentials) Set(val *Office365Credentials) {
	v.value = val
	v.isSet = true
}

func (v NullableOffice365Credentials) IsSet() bool {
	return v.isSet
}

func (v *NullableOffice365Credentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOffice365Credentials(val *Office365Credentials) *NullableOffice365Credentials {
	return &NullableOffice365Credentials{value: val, isSet: true}
}

func (v NullableOffice365Credentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOffice365Credentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


