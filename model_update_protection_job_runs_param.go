/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// UpdateProtectionJobRunsParam Specifies the Job Runs to update with a new expiration times.
type UpdateProtectionJobRunsParam struct {
	// Array of Job Runs.  Specifies the Job Runs to update with a new expiration times.
	JobRuns []UpdateProtectionJobRun `json:"jobRuns,omitempty"`
}

// NewUpdateProtectionJobRunsParam instantiates a new UpdateProtectionJobRunsParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProtectionJobRunsParam() *UpdateProtectionJobRunsParam {
	this := UpdateProtectionJobRunsParam{}
	return &this
}

// NewUpdateProtectionJobRunsParamWithDefaults instantiates a new UpdateProtectionJobRunsParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProtectionJobRunsParamWithDefaults() *UpdateProtectionJobRunsParam {
	this := UpdateProtectionJobRunsParam{}
	return &this
}

// GetJobRuns returns the JobRuns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionJobRunsParam) GetJobRuns() []UpdateProtectionJobRun {
	if o == nil  {
		var ret []UpdateProtectionJobRun
		return ret
	}
	return o.JobRuns
}

// GetJobRunsOk returns a tuple with the JobRuns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionJobRunsParam) GetJobRunsOk() (*[]UpdateProtectionJobRun, bool) {
	if o == nil || o.JobRuns == nil {
		return nil, false
	}
	return &o.JobRuns, true
}

// HasJobRuns returns a boolean if a field has been set.
func (o *UpdateProtectionJobRunsParam) HasJobRuns() bool {
	if o != nil && o.JobRuns != nil {
		return true
	}

	return false
}

// SetJobRuns gets a reference to the given []UpdateProtectionJobRun and assigns it to the JobRuns field.
func (o *UpdateProtectionJobRunsParam) SetJobRuns(v []UpdateProtectionJobRun) {
	o.JobRuns = v
}

func (o UpdateProtectionJobRunsParam) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.JobRuns != nil {
		toSerialize["jobRuns"] = o.JobRuns
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateProtectionJobRunsParam struct {
	value *UpdateProtectionJobRunsParam
	isSet bool
}

func (v NullableUpdateProtectionJobRunsParam) Get() *UpdateProtectionJobRunsParam {
	return v.value
}

func (v *NullableUpdateProtectionJobRunsParam) Set(val *UpdateProtectionJobRunsParam) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProtectionJobRunsParam) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProtectionJobRunsParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProtectionJobRunsParam(val *UpdateProtectionJobRunsParam) *NullableUpdateProtectionJobRunsParam {
	return &NullableUpdateProtectionJobRunsParam{value: val, isSet: true}
}

func (v NullableUpdateProtectionJobRunsParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProtectionJobRunsParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


