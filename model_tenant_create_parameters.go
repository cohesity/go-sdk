/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// TenantCreateParameters Specifies the settings used to create/add a new tenant.
type TenantCreateParameters struct {
	// Specifies whether bifrost (Ambassador proxy) is enabled for tenant.
	BifrostEnabled NullableBool `json:"bifrostEnabled,omitempty"`
	// The hostname for Cohesity cluster as seen by tenants and as is routable from the tenant's network. Tenant's VLAN's hostname, if available can be used instead but it is mandatory to provide this value if there's no VLAN hostname to use. Also, when set, this field would take precedence over VLAN hostname.
	ClusterHostname NullableString `json:"clusterHostname,omitempty"`
	// Set of IPs as seen from the tenant's network for the Cohesity cluster. Only one from 'ClusterHostname' and 'ClusterIps' is needed.
	ClusterIps []string `json:"clusterIps,omitempty"`
	// Specifies the description of this tenant.
	Description NullableString `json:"description,omitempty"`
	// Specifies the name of the tenant.
	Name NullableString `json:"name,omitempty"`
	// Specifies the organization suffix needed to construct tenant id. Tenant id is not completely auto generated rather chosen by tenant/SP admin as we needed same tenant id on multiple clusters to support replication across clusters, etc.
	OrgSuffix NullableString `json:"orgSuffix,omitempty"`
	// Specifies the parent tenant of this tenant if available.
	ParentTenantId NullableString `json:"parentTenantId,omitempty"`
	// Service provider can optionally unsubscribe from the Tenant Alert Emails.
	SubscribeToAlertEmails NullableBool `json:"subscribeToAlertEmails,omitempty"`
}

// NewTenantCreateParameters instantiates a new TenantCreateParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantCreateParameters() *TenantCreateParameters {
	this := TenantCreateParameters{}
	return &this
}

// NewTenantCreateParametersWithDefaults instantiates a new TenantCreateParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantCreateParametersWithDefaults() *TenantCreateParameters {
	this := TenantCreateParameters{}
	return &this
}

// GetBifrostEnabled returns the BifrostEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantCreateParameters) GetBifrostEnabled() bool {
	if o == nil || o.BifrostEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.BifrostEnabled.Get()
}

// GetBifrostEnabledOk returns a tuple with the BifrostEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantCreateParameters) GetBifrostEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BifrostEnabled.Get(), o.BifrostEnabled.IsSet()
}

// HasBifrostEnabled returns a boolean if a field has been set.
func (o *TenantCreateParameters) HasBifrostEnabled() bool {
	if o != nil && o.BifrostEnabled.IsSet() {
		return true
	}

	return false
}

// SetBifrostEnabled gets a reference to the given NullableBool and assigns it to the BifrostEnabled field.
func (o *TenantCreateParameters) SetBifrostEnabled(v bool) {
	o.BifrostEnabled.Set(&v)
}
// SetBifrostEnabledNil sets the value for BifrostEnabled to be an explicit nil
func (o *TenantCreateParameters) SetBifrostEnabledNil() {
	o.BifrostEnabled.Set(nil)
}

// UnsetBifrostEnabled ensures that no value is present for BifrostEnabled, not even an explicit nil
func (o *TenantCreateParameters) UnsetBifrostEnabled() {
	o.BifrostEnabled.Unset()
}

// GetClusterHostname returns the ClusterHostname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantCreateParameters) GetClusterHostname() string {
	if o == nil || o.ClusterHostname.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClusterHostname.Get()
}

// GetClusterHostnameOk returns a tuple with the ClusterHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantCreateParameters) GetClusterHostnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterHostname.Get(), o.ClusterHostname.IsSet()
}

// HasClusterHostname returns a boolean if a field has been set.
func (o *TenantCreateParameters) HasClusterHostname() bool {
	if o != nil && o.ClusterHostname.IsSet() {
		return true
	}

	return false
}

// SetClusterHostname gets a reference to the given NullableString and assigns it to the ClusterHostname field.
func (o *TenantCreateParameters) SetClusterHostname(v string) {
	o.ClusterHostname.Set(&v)
}
// SetClusterHostnameNil sets the value for ClusterHostname to be an explicit nil
func (o *TenantCreateParameters) SetClusterHostnameNil() {
	o.ClusterHostname.Set(nil)
}

// UnsetClusterHostname ensures that no value is present for ClusterHostname, not even an explicit nil
func (o *TenantCreateParameters) UnsetClusterHostname() {
	o.ClusterHostname.Unset()
}

// GetClusterIps returns the ClusterIps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantCreateParameters) GetClusterIps() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.ClusterIps
}

// GetClusterIpsOk returns a tuple with the ClusterIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantCreateParameters) GetClusterIpsOk() (*[]string, bool) {
	if o == nil || o.ClusterIps == nil {
		return nil, false
	}
	return &o.ClusterIps, true
}

// HasClusterIps returns a boolean if a field has been set.
func (o *TenantCreateParameters) HasClusterIps() bool {
	if o != nil && o.ClusterIps != nil {
		return true
	}

	return false
}

// SetClusterIps gets a reference to the given []string and assigns it to the ClusterIps field.
func (o *TenantCreateParameters) SetClusterIps(v []string) {
	o.ClusterIps = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantCreateParameters) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantCreateParameters) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *TenantCreateParameters) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *TenantCreateParameters) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *TenantCreateParameters) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *TenantCreateParameters) UnsetDescription() {
	o.Description.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantCreateParameters) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantCreateParameters) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *TenantCreateParameters) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *TenantCreateParameters) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *TenantCreateParameters) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *TenantCreateParameters) UnsetName() {
	o.Name.Unset()
}

// GetOrgSuffix returns the OrgSuffix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantCreateParameters) GetOrgSuffix() string {
	if o == nil || o.OrgSuffix.Get() == nil {
		var ret string
		return ret
	}
	return *o.OrgSuffix.Get()
}

// GetOrgSuffixOk returns a tuple with the OrgSuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantCreateParameters) GetOrgSuffixOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OrgSuffix.Get(), o.OrgSuffix.IsSet()
}

// HasOrgSuffix returns a boolean if a field has been set.
func (o *TenantCreateParameters) HasOrgSuffix() bool {
	if o != nil && o.OrgSuffix.IsSet() {
		return true
	}

	return false
}

// SetOrgSuffix gets a reference to the given NullableString and assigns it to the OrgSuffix field.
func (o *TenantCreateParameters) SetOrgSuffix(v string) {
	o.OrgSuffix.Set(&v)
}
// SetOrgSuffixNil sets the value for OrgSuffix to be an explicit nil
func (o *TenantCreateParameters) SetOrgSuffixNil() {
	o.OrgSuffix.Set(nil)
}

// UnsetOrgSuffix ensures that no value is present for OrgSuffix, not even an explicit nil
func (o *TenantCreateParameters) UnsetOrgSuffix() {
	o.OrgSuffix.Unset()
}

// GetParentTenantId returns the ParentTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantCreateParameters) GetParentTenantId() string {
	if o == nil || o.ParentTenantId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ParentTenantId.Get()
}

// GetParentTenantIdOk returns a tuple with the ParentTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantCreateParameters) GetParentTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ParentTenantId.Get(), o.ParentTenantId.IsSet()
}

// HasParentTenantId returns a boolean if a field has been set.
func (o *TenantCreateParameters) HasParentTenantId() bool {
	if o != nil && o.ParentTenantId.IsSet() {
		return true
	}

	return false
}

// SetParentTenantId gets a reference to the given NullableString and assigns it to the ParentTenantId field.
func (o *TenantCreateParameters) SetParentTenantId(v string) {
	o.ParentTenantId.Set(&v)
}
// SetParentTenantIdNil sets the value for ParentTenantId to be an explicit nil
func (o *TenantCreateParameters) SetParentTenantIdNil() {
	o.ParentTenantId.Set(nil)
}

// UnsetParentTenantId ensures that no value is present for ParentTenantId, not even an explicit nil
func (o *TenantCreateParameters) UnsetParentTenantId() {
	o.ParentTenantId.Unset()
}

// GetSubscribeToAlertEmails returns the SubscribeToAlertEmails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantCreateParameters) GetSubscribeToAlertEmails() bool {
	if o == nil || o.SubscribeToAlertEmails.Get() == nil {
		var ret bool
		return ret
	}
	return *o.SubscribeToAlertEmails.Get()
}

// GetSubscribeToAlertEmailsOk returns a tuple with the SubscribeToAlertEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantCreateParameters) GetSubscribeToAlertEmailsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubscribeToAlertEmails.Get(), o.SubscribeToAlertEmails.IsSet()
}

// HasSubscribeToAlertEmails returns a boolean if a field has been set.
func (o *TenantCreateParameters) HasSubscribeToAlertEmails() bool {
	if o != nil && o.SubscribeToAlertEmails.IsSet() {
		return true
	}

	return false
}

// SetSubscribeToAlertEmails gets a reference to the given NullableBool and assigns it to the SubscribeToAlertEmails field.
func (o *TenantCreateParameters) SetSubscribeToAlertEmails(v bool) {
	o.SubscribeToAlertEmails.Set(&v)
}
// SetSubscribeToAlertEmailsNil sets the value for SubscribeToAlertEmails to be an explicit nil
func (o *TenantCreateParameters) SetSubscribeToAlertEmailsNil() {
	o.SubscribeToAlertEmails.Set(nil)
}

// UnsetSubscribeToAlertEmails ensures that no value is present for SubscribeToAlertEmails, not even an explicit nil
func (o *TenantCreateParameters) UnsetSubscribeToAlertEmails() {
	o.SubscribeToAlertEmails.Unset()
}

func (o TenantCreateParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BifrostEnabled.IsSet() {
		toSerialize["bifrostEnabled"] = o.BifrostEnabled.Get()
	}
	if o.ClusterHostname.IsSet() {
		toSerialize["clusterHostname"] = o.ClusterHostname.Get()
	}
	if o.ClusterIps != nil {
		toSerialize["clusterIps"] = o.ClusterIps
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.OrgSuffix.IsSet() {
		toSerialize["orgSuffix"] = o.OrgSuffix.Get()
	}
	if o.ParentTenantId.IsSet() {
		toSerialize["parentTenantId"] = o.ParentTenantId.Get()
	}
	if o.SubscribeToAlertEmails.IsSet() {
		toSerialize["subscribeToAlertEmails"] = o.SubscribeToAlertEmails.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTenantCreateParameters struct {
	value *TenantCreateParameters
	isSet bool
}

func (v NullableTenantCreateParameters) Get() *TenantCreateParameters {
	return v.value
}

func (v *NullableTenantCreateParameters) Set(val *TenantCreateParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantCreateParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantCreateParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantCreateParameters(val *TenantCreateParameters) *NullableTenantCreateParameters {
	return &NullableTenantCreateParameters{value: val, isSet: true}
}

func (v NullableTenantCreateParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantCreateParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


