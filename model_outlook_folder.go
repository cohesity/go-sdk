/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// OutlookFolder Specifies the Outlook folder details.
type OutlookFolder struct {
	// Specifies the unique ID of the folder.
	FolderId NullableString `json:"folderId,omitempty"`
	// Specifies the key unique within the mailbox of the folder.
	FolderKey NullableInt64 `json:"folderKey,omitempty"`
	// Specifies the outlook items within the folder to be restored incase the user wishes not to restore the entire folder.
	OutlookItemIdList []string `json:"outlookItemIdList,omitempty"`
	// Specifies whether the entire folder is to be restored.
	RestoreEntireFolder NullableBool `json:"restoreEntireFolder,omitempty"`
}

// NewOutlookFolder instantiates a new OutlookFolder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutlookFolder() *OutlookFolder {
	this := OutlookFolder{}
	return &this
}

// NewOutlookFolderWithDefaults instantiates a new OutlookFolder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutlookFolderWithDefaults() *OutlookFolder {
	this := OutlookFolder{}
	return &this
}

// GetFolderId returns the FolderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutlookFolder) GetFolderId() string {
	if o == nil || o.FolderId.Get() == nil {
		var ret string
		return ret
	}
	return *o.FolderId.Get()
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutlookFolder) GetFolderIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FolderId.Get(), o.FolderId.IsSet()
}

// HasFolderId returns a boolean if a field has been set.
func (o *OutlookFolder) HasFolderId() bool {
	if o != nil && o.FolderId.IsSet() {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given NullableString and assigns it to the FolderId field.
func (o *OutlookFolder) SetFolderId(v string) {
	o.FolderId.Set(&v)
}
// SetFolderIdNil sets the value for FolderId to be an explicit nil
func (o *OutlookFolder) SetFolderIdNil() {
	o.FolderId.Set(nil)
}

// UnsetFolderId ensures that no value is present for FolderId, not even an explicit nil
func (o *OutlookFolder) UnsetFolderId() {
	o.FolderId.Unset()
}

// GetFolderKey returns the FolderKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutlookFolder) GetFolderKey() int64 {
	if o == nil || o.FolderKey.Get() == nil {
		var ret int64
		return ret
	}
	return *o.FolderKey.Get()
}

// GetFolderKeyOk returns a tuple with the FolderKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutlookFolder) GetFolderKeyOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FolderKey.Get(), o.FolderKey.IsSet()
}

// HasFolderKey returns a boolean if a field has been set.
func (o *OutlookFolder) HasFolderKey() bool {
	if o != nil && o.FolderKey.IsSet() {
		return true
	}

	return false
}

// SetFolderKey gets a reference to the given NullableInt64 and assigns it to the FolderKey field.
func (o *OutlookFolder) SetFolderKey(v int64) {
	o.FolderKey.Set(&v)
}
// SetFolderKeyNil sets the value for FolderKey to be an explicit nil
func (o *OutlookFolder) SetFolderKeyNil() {
	o.FolderKey.Set(nil)
}

// UnsetFolderKey ensures that no value is present for FolderKey, not even an explicit nil
func (o *OutlookFolder) UnsetFolderKey() {
	o.FolderKey.Unset()
}

// GetOutlookItemIdList returns the OutlookItemIdList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutlookFolder) GetOutlookItemIdList() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.OutlookItemIdList
}

// GetOutlookItemIdListOk returns a tuple with the OutlookItemIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutlookFolder) GetOutlookItemIdListOk() (*[]string, bool) {
	if o == nil || o.OutlookItemIdList == nil {
		return nil, false
	}
	return &o.OutlookItemIdList, true
}

// HasOutlookItemIdList returns a boolean if a field has been set.
func (o *OutlookFolder) HasOutlookItemIdList() bool {
	if o != nil && o.OutlookItemIdList != nil {
		return true
	}

	return false
}

// SetOutlookItemIdList gets a reference to the given []string and assigns it to the OutlookItemIdList field.
func (o *OutlookFolder) SetOutlookItemIdList(v []string) {
	o.OutlookItemIdList = v
}

// GetRestoreEntireFolder returns the RestoreEntireFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutlookFolder) GetRestoreEntireFolder() bool {
	if o == nil || o.RestoreEntireFolder.Get() == nil {
		var ret bool
		return ret
	}
	return *o.RestoreEntireFolder.Get()
}

// GetRestoreEntireFolderOk returns a tuple with the RestoreEntireFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutlookFolder) GetRestoreEntireFolderOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RestoreEntireFolder.Get(), o.RestoreEntireFolder.IsSet()
}

// HasRestoreEntireFolder returns a boolean if a field has been set.
func (o *OutlookFolder) HasRestoreEntireFolder() bool {
	if o != nil && o.RestoreEntireFolder.IsSet() {
		return true
	}

	return false
}

// SetRestoreEntireFolder gets a reference to the given NullableBool and assigns it to the RestoreEntireFolder field.
func (o *OutlookFolder) SetRestoreEntireFolder(v bool) {
	o.RestoreEntireFolder.Set(&v)
}
// SetRestoreEntireFolderNil sets the value for RestoreEntireFolder to be an explicit nil
func (o *OutlookFolder) SetRestoreEntireFolderNil() {
	o.RestoreEntireFolder.Set(nil)
}

// UnsetRestoreEntireFolder ensures that no value is present for RestoreEntireFolder, not even an explicit nil
func (o *OutlookFolder) UnsetRestoreEntireFolder() {
	o.RestoreEntireFolder.Unset()
}

func (o OutlookFolder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FolderId.IsSet() {
		toSerialize["folderId"] = o.FolderId.Get()
	}
	if o.FolderKey.IsSet() {
		toSerialize["folderKey"] = o.FolderKey.Get()
	}
	if o.OutlookItemIdList != nil {
		toSerialize["outlookItemIdList"] = o.OutlookItemIdList
	}
	if o.RestoreEntireFolder.IsSet() {
		toSerialize["restoreEntireFolder"] = o.RestoreEntireFolder.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOutlookFolder struct {
	value *OutlookFolder
	isSet bool
}

func (v NullableOutlookFolder) Get() *OutlookFolder {
	return v.value
}

func (v *NullableOutlookFolder) Set(val *OutlookFolder) {
	v.value = val
	v.isSet = true
}

func (v NullableOutlookFolder) IsSet() bool {
	return v.isSet
}

func (v *NullableOutlookFolder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutlookFolder(val *OutlookFolder) *NullableOutlookFolder {
	return &NullableOutlookFolder{value: val, isSet: true}
}

func (v NullableOutlookFolder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutlookFolder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


