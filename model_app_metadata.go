/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// AppMetadata AppMetadata provides metadata information about an application.
type AppMetadata struct {
	// Specifies author of the app.
	Author NullableString `json:"author,omitempty"`
	// Specifies date when the first version of the app was created.
	CreatedDate NullableString `json:"createdDate,omitempty"`
	// Specifies description about what app does.
	Description NullableString `json:"description,omitempty"`
	// Specifies version of the app provided by the developer.
	DevVersion NullableString `json:"devVersion,omitempty"`
	// Specifies application icon.
	IconImage NullableString `json:"iconImage,omitempty"`
	// Specifies date when the app was last modified.
	LastModifiedDate NullableString `json:"lastModifiedDate,omitempty"`
	// Specifies name of the app.
	Name NullableString `json:"name,omitempty"`
}

// NewAppMetadata instantiates a new AppMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppMetadata() *AppMetadata {
	this := AppMetadata{}
	return &this
}

// NewAppMetadataWithDefaults instantiates a new AppMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppMetadataWithDefaults() *AppMetadata {
	this := AppMetadata{}
	return &this
}

// GetAuthor returns the Author field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppMetadata) GetAuthor() string {
	if o == nil || o.Author.Get() == nil {
		var ret string
		return ret
	}
	return *o.Author.Get()
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppMetadata) GetAuthorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Author.Get(), o.Author.IsSet()
}

// HasAuthor returns a boolean if a field has been set.
func (o *AppMetadata) HasAuthor() bool {
	if o != nil && o.Author.IsSet() {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given NullableString and assigns it to the Author field.
func (o *AppMetadata) SetAuthor(v string) {
	o.Author.Set(&v)
}
// SetAuthorNil sets the value for Author to be an explicit nil
func (o *AppMetadata) SetAuthorNil() {
	o.Author.Set(nil)
}

// UnsetAuthor ensures that no value is present for Author, not even an explicit nil
func (o *AppMetadata) UnsetAuthor() {
	o.Author.Unset()
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppMetadata) GetCreatedDate() string {
	if o == nil || o.CreatedDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.CreatedDate.Get()
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppMetadata) GetCreatedDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedDate.Get(), o.CreatedDate.IsSet()
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *AppMetadata) HasCreatedDate() bool {
	if o != nil && o.CreatedDate.IsSet() {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given NullableString and assigns it to the CreatedDate field.
func (o *AppMetadata) SetCreatedDate(v string) {
	o.CreatedDate.Set(&v)
}
// SetCreatedDateNil sets the value for CreatedDate to be an explicit nil
func (o *AppMetadata) SetCreatedDateNil() {
	o.CreatedDate.Set(nil)
}

// UnsetCreatedDate ensures that no value is present for CreatedDate, not even an explicit nil
func (o *AppMetadata) UnsetCreatedDate() {
	o.CreatedDate.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppMetadata) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppMetadata) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *AppMetadata) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *AppMetadata) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *AppMetadata) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *AppMetadata) UnsetDescription() {
	o.Description.Unset()
}

// GetDevVersion returns the DevVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppMetadata) GetDevVersion() string {
	if o == nil || o.DevVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.DevVersion.Get()
}

// GetDevVersionOk returns a tuple with the DevVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppMetadata) GetDevVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DevVersion.Get(), o.DevVersion.IsSet()
}

// HasDevVersion returns a boolean if a field has been set.
func (o *AppMetadata) HasDevVersion() bool {
	if o != nil && o.DevVersion.IsSet() {
		return true
	}

	return false
}

// SetDevVersion gets a reference to the given NullableString and assigns it to the DevVersion field.
func (o *AppMetadata) SetDevVersion(v string) {
	o.DevVersion.Set(&v)
}
// SetDevVersionNil sets the value for DevVersion to be an explicit nil
func (o *AppMetadata) SetDevVersionNil() {
	o.DevVersion.Set(nil)
}

// UnsetDevVersion ensures that no value is present for DevVersion, not even an explicit nil
func (o *AppMetadata) UnsetDevVersion() {
	o.DevVersion.Unset()
}

// GetIconImage returns the IconImage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppMetadata) GetIconImage() string {
	if o == nil || o.IconImage.Get() == nil {
		var ret string
		return ret
	}
	return *o.IconImage.Get()
}

// GetIconImageOk returns a tuple with the IconImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppMetadata) GetIconImageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IconImage.Get(), o.IconImage.IsSet()
}

// HasIconImage returns a boolean if a field has been set.
func (o *AppMetadata) HasIconImage() bool {
	if o != nil && o.IconImage.IsSet() {
		return true
	}

	return false
}

// SetIconImage gets a reference to the given NullableString and assigns it to the IconImage field.
func (o *AppMetadata) SetIconImage(v string) {
	o.IconImage.Set(&v)
}
// SetIconImageNil sets the value for IconImage to be an explicit nil
func (o *AppMetadata) SetIconImageNil() {
	o.IconImage.Set(nil)
}

// UnsetIconImage ensures that no value is present for IconImage, not even an explicit nil
func (o *AppMetadata) UnsetIconImage() {
	o.IconImage.Unset()
}

// GetLastModifiedDate returns the LastModifiedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppMetadata) GetLastModifiedDate() string {
	if o == nil || o.LastModifiedDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.LastModifiedDate.Get()
}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppMetadata) GetLastModifiedDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastModifiedDate.Get(), o.LastModifiedDate.IsSet()
}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *AppMetadata) HasLastModifiedDate() bool {
	if o != nil && o.LastModifiedDate.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedDate gets a reference to the given NullableString and assigns it to the LastModifiedDate field.
func (o *AppMetadata) SetLastModifiedDate(v string) {
	o.LastModifiedDate.Set(&v)
}
// SetLastModifiedDateNil sets the value for LastModifiedDate to be an explicit nil
func (o *AppMetadata) SetLastModifiedDateNil() {
	o.LastModifiedDate.Set(nil)
}

// UnsetLastModifiedDate ensures that no value is present for LastModifiedDate, not even an explicit nil
func (o *AppMetadata) UnsetLastModifiedDate() {
	o.LastModifiedDate.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppMetadata) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppMetadata) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AppMetadata) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AppMetadata) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *AppMetadata) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AppMetadata) UnsetName() {
	o.Name.Unset()
}

func (o AppMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Author.IsSet() {
		toSerialize["author"] = o.Author.Get()
	}
	if o.CreatedDate.IsSet() {
		toSerialize["createdDate"] = o.CreatedDate.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DevVersion.IsSet() {
		toSerialize["devVersion"] = o.DevVersion.Get()
	}
	if o.IconImage.IsSet() {
		toSerialize["iconImage"] = o.IconImage.Get()
	}
	if o.LastModifiedDate.IsSet() {
		toSerialize["lastModifiedDate"] = o.LastModifiedDate.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAppMetadata struct {
	value *AppMetadata
	isSet bool
}

func (v NullableAppMetadata) Get() *AppMetadata {
	return v.value
}

func (v *NullableAppMetadata) Set(val *AppMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableAppMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableAppMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppMetadata(val *AppMetadata) *NullableAppMetadata {
	return &NullableAppMetadata{value: val, isSet: true}
}

func (v NullableAppMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


