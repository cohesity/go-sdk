/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// RestoreAppObject Message that captures information about an application object being restored.
type RestoreAppObject struct {
	AdditionalParams *RestoreTaskAdditionalParams `json:"additionalParams,omitempty"`
	AppEntity *EntityProto `json:"appEntity,omitempty"`
	// The proper display name of this object in the UI, if app_entity is not empty. For example, for SQL databases the name should also include the instance name.
	DisplayName NullableString `json:"displayName,omitempty"`
	RestoreParams *RestoreAppObjectParams `json:"restoreParams,omitempty"`
}

// NewRestoreAppObject instantiates a new RestoreAppObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreAppObject() *RestoreAppObject {
	this := RestoreAppObject{}
	return &this
}

// NewRestoreAppObjectWithDefaults instantiates a new RestoreAppObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreAppObjectWithDefaults() *RestoreAppObject {
	this := RestoreAppObject{}
	return &this
}

// GetAdditionalParams returns the AdditionalParams field value if set, zero value otherwise.
func (o *RestoreAppObject) GetAdditionalParams() RestoreTaskAdditionalParams {
	if o == nil || o.AdditionalParams == nil {
		var ret RestoreTaskAdditionalParams
		return ret
	}
	return *o.AdditionalParams
}

// GetAdditionalParamsOk returns a tuple with the AdditionalParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAppObject) GetAdditionalParamsOk() (*RestoreTaskAdditionalParams, bool) {
	if o == nil || o.AdditionalParams == nil {
		return nil, false
	}
	return o.AdditionalParams, true
}

// HasAdditionalParams returns a boolean if a field has been set.
func (o *RestoreAppObject) HasAdditionalParams() bool {
	if o != nil && o.AdditionalParams != nil {
		return true
	}

	return false
}

// SetAdditionalParams gets a reference to the given RestoreTaskAdditionalParams and assigns it to the AdditionalParams field.
func (o *RestoreAppObject) SetAdditionalParams(v RestoreTaskAdditionalParams) {
	o.AdditionalParams = &v
}

// GetAppEntity returns the AppEntity field value if set, zero value otherwise.
func (o *RestoreAppObject) GetAppEntity() EntityProto {
	if o == nil || o.AppEntity == nil {
		var ret EntityProto
		return ret
	}
	return *o.AppEntity
}

// GetAppEntityOk returns a tuple with the AppEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAppObject) GetAppEntityOk() (*EntityProto, bool) {
	if o == nil || o.AppEntity == nil {
		return nil, false
	}
	return o.AppEntity, true
}

// HasAppEntity returns a boolean if a field has been set.
func (o *RestoreAppObject) HasAppEntity() bool {
	if o != nil && o.AppEntity != nil {
		return true
	}

	return false
}

// SetAppEntity gets a reference to the given EntityProto and assigns it to the AppEntity field.
func (o *RestoreAppObject) SetAppEntity(v EntityProto) {
	o.AppEntity = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreAppObject) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreAppObject) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *RestoreAppObject) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *RestoreAppObject) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *RestoreAppObject) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *RestoreAppObject) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetRestoreParams returns the RestoreParams field value if set, zero value otherwise.
func (o *RestoreAppObject) GetRestoreParams() RestoreAppObjectParams {
	if o == nil || o.RestoreParams == nil {
		var ret RestoreAppObjectParams
		return ret
	}
	return *o.RestoreParams
}

// GetRestoreParamsOk returns a tuple with the RestoreParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAppObject) GetRestoreParamsOk() (*RestoreAppObjectParams, bool) {
	if o == nil || o.RestoreParams == nil {
		return nil, false
	}
	return o.RestoreParams, true
}

// HasRestoreParams returns a boolean if a field has been set.
func (o *RestoreAppObject) HasRestoreParams() bool {
	if o != nil && o.RestoreParams != nil {
		return true
	}

	return false
}

// SetRestoreParams gets a reference to the given RestoreAppObjectParams and assigns it to the RestoreParams field.
func (o *RestoreAppObject) SetRestoreParams(v RestoreAppObjectParams) {
	o.RestoreParams = &v
}

func (o RestoreAppObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalParams != nil {
		toSerialize["additionalParams"] = o.AdditionalParams
	}
	if o.AppEntity != nil {
		toSerialize["appEntity"] = o.AppEntity
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.RestoreParams != nil {
		toSerialize["restoreParams"] = o.RestoreParams
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreAppObject struct {
	value *RestoreAppObject
	isSet bool
}

func (v NullableRestoreAppObject) Get() *RestoreAppObject {
	return v.value
}

func (v *NullableRestoreAppObject) Set(val *RestoreAppObject) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreAppObject) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreAppObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreAppObject(val *RestoreAppObject) *NullableRestoreAppObject {
	return &NullableRestoreAppObject{value: val, isSet: true}
}

func (v NullableRestoreAppObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreAppObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


