/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// RestoreAcropolisVMsParams struct for RestoreAcropolisVMsParams
type RestoreAcropolisVMsParams struct {
	PowerStateConfig *PowerStateConfigProto `json:"powerStateConfig,omitempty"`
	RenameRestoredObjectParam *RenameObjectParamProto `json:"renameRestoredObjectParam,omitempty"`
	RestoredObjectsNetworkConfig *RestoredObjectNetworkConfigProto `json:"restoredObjectsNetworkConfig,omitempty"`
	StorageContainer *EntityProto `json:"storageContainer,omitempty"`
	UuidConfig *UuidConfigProto `json:"uuidConfig,omitempty"`
}

// NewRestoreAcropolisVMsParams instantiates a new RestoreAcropolisVMsParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreAcropolisVMsParams() *RestoreAcropolisVMsParams {
	this := RestoreAcropolisVMsParams{}
	return &this
}

// NewRestoreAcropolisVMsParamsWithDefaults instantiates a new RestoreAcropolisVMsParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreAcropolisVMsParamsWithDefaults() *RestoreAcropolisVMsParams {
	this := RestoreAcropolisVMsParams{}
	return &this
}

// GetPowerStateConfig returns the PowerStateConfig field value if set, zero value otherwise.
func (o *RestoreAcropolisVMsParams) GetPowerStateConfig() PowerStateConfigProto {
	if o == nil || o.PowerStateConfig == nil {
		var ret PowerStateConfigProto
		return ret
	}
	return *o.PowerStateConfig
}

// GetPowerStateConfigOk returns a tuple with the PowerStateConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAcropolisVMsParams) GetPowerStateConfigOk() (*PowerStateConfigProto, bool) {
	if o == nil || o.PowerStateConfig == nil {
		return nil, false
	}
	return o.PowerStateConfig, true
}

// HasPowerStateConfig returns a boolean if a field has been set.
func (o *RestoreAcropolisVMsParams) HasPowerStateConfig() bool {
	if o != nil && o.PowerStateConfig != nil {
		return true
	}

	return false
}

// SetPowerStateConfig gets a reference to the given PowerStateConfigProto and assigns it to the PowerStateConfig field.
func (o *RestoreAcropolisVMsParams) SetPowerStateConfig(v PowerStateConfigProto) {
	o.PowerStateConfig = &v
}

// GetRenameRestoredObjectParam returns the RenameRestoredObjectParam field value if set, zero value otherwise.
func (o *RestoreAcropolisVMsParams) GetRenameRestoredObjectParam() RenameObjectParamProto {
	if o == nil || o.RenameRestoredObjectParam == nil {
		var ret RenameObjectParamProto
		return ret
	}
	return *o.RenameRestoredObjectParam
}

// GetRenameRestoredObjectParamOk returns a tuple with the RenameRestoredObjectParam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAcropolisVMsParams) GetRenameRestoredObjectParamOk() (*RenameObjectParamProto, bool) {
	if o == nil || o.RenameRestoredObjectParam == nil {
		return nil, false
	}
	return o.RenameRestoredObjectParam, true
}

// HasRenameRestoredObjectParam returns a boolean if a field has been set.
func (o *RestoreAcropolisVMsParams) HasRenameRestoredObjectParam() bool {
	if o != nil && o.RenameRestoredObjectParam != nil {
		return true
	}

	return false
}

// SetRenameRestoredObjectParam gets a reference to the given RenameObjectParamProto and assigns it to the RenameRestoredObjectParam field.
func (o *RestoreAcropolisVMsParams) SetRenameRestoredObjectParam(v RenameObjectParamProto) {
	o.RenameRestoredObjectParam = &v
}

// GetRestoredObjectsNetworkConfig returns the RestoredObjectsNetworkConfig field value if set, zero value otherwise.
func (o *RestoreAcropolisVMsParams) GetRestoredObjectsNetworkConfig() RestoredObjectNetworkConfigProto {
	if o == nil || o.RestoredObjectsNetworkConfig == nil {
		var ret RestoredObjectNetworkConfigProto
		return ret
	}
	return *o.RestoredObjectsNetworkConfig
}

// GetRestoredObjectsNetworkConfigOk returns a tuple with the RestoredObjectsNetworkConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAcropolisVMsParams) GetRestoredObjectsNetworkConfigOk() (*RestoredObjectNetworkConfigProto, bool) {
	if o == nil || o.RestoredObjectsNetworkConfig == nil {
		return nil, false
	}
	return o.RestoredObjectsNetworkConfig, true
}

// HasRestoredObjectsNetworkConfig returns a boolean if a field has been set.
func (o *RestoreAcropolisVMsParams) HasRestoredObjectsNetworkConfig() bool {
	if o != nil && o.RestoredObjectsNetworkConfig != nil {
		return true
	}

	return false
}

// SetRestoredObjectsNetworkConfig gets a reference to the given RestoredObjectNetworkConfigProto and assigns it to the RestoredObjectsNetworkConfig field.
func (o *RestoreAcropolisVMsParams) SetRestoredObjectsNetworkConfig(v RestoredObjectNetworkConfigProto) {
	o.RestoredObjectsNetworkConfig = &v
}

// GetStorageContainer returns the StorageContainer field value if set, zero value otherwise.
func (o *RestoreAcropolisVMsParams) GetStorageContainer() EntityProto {
	if o == nil || o.StorageContainer == nil {
		var ret EntityProto
		return ret
	}
	return *o.StorageContainer
}

// GetStorageContainerOk returns a tuple with the StorageContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAcropolisVMsParams) GetStorageContainerOk() (*EntityProto, bool) {
	if o == nil || o.StorageContainer == nil {
		return nil, false
	}
	return o.StorageContainer, true
}

// HasStorageContainer returns a boolean if a field has been set.
func (o *RestoreAcropolisVMsParams) HasStorageContainer() bool {
	if o != nil && o.StorageContainer != nil {
		return true
	}

	return false
}

// SetStorageContainer gets a reference to the given EntityProto and assigns it to the StorageContainer field.
func (o *RestoreAcropolisVMsParams) SetStorageContainer(v EntityProto) {
	o.StorageContainer = &v
}

// GetUuidConfig returns the UuidConfig field value if set, zero value otherwise.
func (o *RestoreAcropolisVMsParams) GetUuidConfig() UuidConfigProto {
	if o == nil || o.UuidConfig == nil {
		var ret UuidConfigProto
		return ret
	}
	return *o.UuidConfig
}

// GetUuidConfigOk returns a tuple with the UuidConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAcropolisVMsParams) GetUuidConfigOk() (*UuidConfigProto, bool) {
	if o == nil || o.UuidConfig == nil {
		return nil, false
	}
	return o.UuidConfig, true
}

// HasUuidConfig returns a boolean if a field has been set.
func (o *RestoreAcropolisVMsParams) HasUuidConfig() bool {
	if o != nil && o.UuidConfig != nil {
		return true
	}

	return false
}

// SetUuidConfig gets a reference to the given UuidConfigProto and assigns it to the UuidConfig field.
func (o *RestoreAcropolisVMsParams) SetUuidConfig(v UuidConfigProto) {
	o.UuidConfig = &v
}

func (o RestoreAcropolisVMsParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PowerStateConfig != nil {
		toSerialize["powerStateConfig"] = o.PowerStateConfig
	}
	if o.RenameRestoredObjectParam != nil {
		toSerialize["renameRestoredObjectParam"] = o.RenameRestoredObjectParam
	}
	if o.RestoredObjectsNetworkConfig != nil {
		toSerialize["restoredObjectsNetworkConfig"] = o.RestoredObjectsNetworkConfig
	}
	if o.StorageContainer != nil {
		toSerialize["storageContainer"] = o.StorageContainer
	}
	if o.UuidConfig != nil {
		toSerialize["uuidConfig"] = o.UuidConfig
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreAcropolisVMsParams struct {
	value *RestoreAcropolisVMsParams
	isSet bool
}

func (v NullableRestoreAcropolisVMsParams) Get() *RestoreAcropolisVMsParams {
	return v.value
}

func (v *NullableRestoreAcropolisVMsParams) Set(val *RestoreAcropolisVMsParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreAcropolisVMsParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreAcropolisVMsParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreAcropolisVMsParams(val *RestoreAcropolisVMsParams) *NullableRestoreAcropolisVMsParams {
	return &NullableRestoreAcropolisVMsParams{value: val, isSet: true}
}

func (v NullableRestoreAcropolisVMsParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreAcropolisVMsParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


