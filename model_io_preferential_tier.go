/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// IoPreferentialTier Specifies the preferred storage tier for IO operations.
type IoPreferentialTier struct {
	// Specifies the preferred storage tier used by Apollo as its working directory.
	ApolloIOPreferentialTier *[]string `json:"apolloIOPreferentialTier,omitempty"`
	// Specifies the preferred storage tier used by Apollo as its actions WAL.
	ApolloWalIOPreferentialTier *[]string `json:"apolloWalIOPreferentialTier,omitempty"`
	// Specifies the list of perferred storage tiers used by Athena.
	AthenaIOPreferentialTier *[]string `json:"athenaIOPreferentialTier,omitempty"`
	// Specifies the list of perferred storage tiers used by Athena for slower storage.
	AthenaSlowerIOPreferentialTier *[]string `json:"athenaSlowerIOPreferentialTier,omitempty"`
	// Specifies the usage percentage thresholds for the correponding storage tier.
	DownTierUsagePercentThresholds *[]int32 `json:"downTierUsagePercentThresholds,omitempty"`
	// Specifies the preferred storage tier used by Groot as its working directory.
	GrootIOPreferentialTier *[]string `json:"grootIOPreferentialTier,omitempty"`
	// Specifies the list of perferred storage tiers used by Hydra for offloading.
	HydraDowntierIOPreferentialTier *[]string `json:"hydraDowntierIOPreferentialTier,omitempty"`
	// Specifies the list of perferred storage tiers used by Hydra.
	HydraIOPreferentialTier *[]string `json:"hydraIOPreferentialTier,omitempty"`
	// Specifies the list of perferred storage tiers used by librarian.
	LibrarianIOPreferentialTier *[]string `json:"librarianIOPreferentialTier,omitempty"`
	// Specifies the order of perferred storage tiers for random IO operations.
	RandomIOPreferentialTier *[]string `json:"randomIOPreferentialTier,omitempty"`
	// Specifies the list of perferred storage tiers used by Scribe.
	ScribeIOPreferentialTier *[]string `json:"scribeIOPreferentialTier,omitempty"`
	// Specifies the preferred storage tier for sequential IO operations.
	SequentialIOPreferentialTier *[]string `json:"sequentialIOPreferentialTier,omitempty"`
	// Specifies the list of perferred storage tiers used by Yoda.
	YodaIOPreferentialTier *[]string `json:"yodaIOPreferentialTier,omitempty"`
}

// NewIoPreferentialTier instantiates a new IoPreferentialTier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoPreferentialTier() *IoPreferentialTier {
	this := IoPreferentialTier{}
	return &this
}

// NewIoPreferentialTierWithDefaults instantiates a new IoPreferentialTier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoPreferentialTierWithDefaults() *IoPreferentialTier {
	this := IoPreferentialTier{}
	return &this
}

// GetApolloIOPreferentialTier returns the ApolloIOPreferentialTier field value if set, zero value otherwise.
func (o *IoPreferentialTier) GetApolloIOPreferentialTier() []string {
	if o == nil || o.ApolloIOPreferentialTier == nil {
		var ret []string
		return ret
	}
	return *o.ApolloIOPreferentialTier
}

// GetApolloIOPreferentialTierOk returns a tuple with the ApolloIOPreferentialTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoPreferentialTier) GetApolloIOPreferentialTierOk() (*[]string, bool) {
	if o == nil || o.ApolloIOPreferentialTier == nil {
		return nil, false
	}
	return o.ApolloIOPreferentialTier, true
}

// HasApolloIOPreferentialTier returns a boolean if a field has been set.
func (o *IoPreferentialTier) HasApolloIOPreferentialTier() bool {
	if o != nil && o.ApolloIOPreferentialTier != nil {
		return true
	}

	return false
}

// SetApolloIOPreferentialTier gets a reference to the given []string and assigns it to the ApolloIOPreferentialTier field.
func (o *IoPreferentialTier) SetApolloIOPreferentialTier(v []string) {
	o.ApolloIOPreferentialTier = &v
}

// GetApolloWalIOPreferentialTier returns the ApolloWalIOPreferentialTier field value if set, zero value otherwise.
func (o *IoPreferentialTier) GetApolloWalIOPreferentialTier() []string {
	if o == nil || o.ApolloWalIOPreferentialTier == nil {
		var ret []string
		return ret
	}
	return *o.ApolloWalIOPreferentialTier
}

// GetApolloWalIOPreferentialTierOk returns a tuple with the ApolloWalIOPreferentialTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoPreferentialTier) GetApolloWalIOPreferentialTierOk() (*[]string, bool) {
	if o == nil || o.ApolloWalIOPreferentialTier == nil {
		return nil, false
	}
	return o.ApolloWalIOPreferentialTier, true
}

// HasApolloWalIOPreferentialTier returns a boolean if a field has been set.
func (o *IoPreferentialTier) HasApolloWalIOPreferentialTier() bool {
	if o != nil && o.ApolloWalIOPreferentialTier != nil {
		return true
	}

	return false
}

// SetApolloWalIOPreferentialTier gets a reference to the given []string and assigns it to the ApolloWalIOPreferentialTier field.
func (o *IoPreferentialTier) SetApolloWalIOPreferentialTier(v []string) {
	o.ApolloWalIOPreferentialTier = &v
}

// GetAthenaIOPreferentialTier returns the AthenaIOPreferentialTier field value if set, zero value otherwise.
func (o *IoPreferentialTier) GetAthenaIOPreferentialTier() []string {
	if o == nil || o.AthenaIOPreferentialTier == nil {
		var ret []string
		return ret
	}
	return *o.AthenaIOPreferentialTier
}

// GetAthenaIOPreferentialTierOk returns a tuple with the AthenaIOPreferentialTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoPreferentialTier) GetAthenaIOPreferentialTierOk() (*[]string, bool) {
	if o == nil || o.AthenaIOPreferentialTier == nil {
		return nil, false
	}
	return o.AthenaIOPreferentialTier, true
}

// HasAthenaIOPreferentialTier returns a boolean if a field has been set.
func (o *IoPreferentialTier) HasAthenaIOPreferentialTier() bool {
	if o != nil && o.AthenaIOPreferentialTier != nil {
		return true
	}

	return false
}

// SetAthenaIOPreferentialTier gets a reference to the given []string and assigns it to the AthenaIOPreferentialTier field.
func (o *IoPreferentialTier) SetAthenaIOPreferentialTier(v []string) {
	o.AthenaIOPreferentialTier = &v
}

// GetAthenaSlowerIOPreferentialTier returns the AthenaSlowerIOPreferentialTier field value if set, zero value otherwise.
func (o *IoPreferentialTier) GetAthenaSlowerIOPreferentialTier() []string {
	if o == nil || o.AthenaSlowerIOPreferentialTier == nil {
		var ret []string
		return ret
	}
	return *o.AthenaSlowerIOPreferentialTier
}

// GetAthenaSlowerIOPreferentialTierOk returns a tuple with the AthenaSlowerIOPreferentialTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoPreferentialTier) GetAthenaSlowerIOPreferentialTierOk() (*[]string, bool) {
	if o == nil || o.AthenaSlowerIOPreferentialTier == nil {
		return nil, false
	}
	return o.AthenaSlowerIOPreferentialTier, true
}

// HasAthenaSlowerIOPreferentialTier returns a boolean if a field has been set.
func (o *IoPreferentialTier) HasAthenaSlowerIOPreferentialTier() bool {
	if o != nil && o.AthenaSlowerIOPreferentialTier != nil {
		return true
	}

	return false
}

// SetAthenaSlowerIOPreferentialTier gets a reference to the given []string and assigns it to the AthenaSlowerIOPreferentialTier field.
func (o *IoPreferentialTier) SetAthenaSlowerIOPreferentialTier(v []string) {
	o.AthenaSlowerIOPreferentialTier = &v
}

// GetDownTierUsagePercentThresholds returns the DownTierUsagePercentThresholds field value if set, zero value otherwise.
func (o *IoPreferentialTier) GetDownTierUsagePercentThresholds() []int32 {
	if o == nil || o.DownTierUsagePercentThresholds == nil {
		var ret []int32
		return ret
	}
	return *o.DownTierUsagePercentThresholds
}

// GetDownTierUsagePercentThresholdsOk returns a tuple with the DownTierUsagePercentThresholds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoPreferentialTier) GetDownTierUsagePercentThresholdsOk() (*[]int32, bool) {
	if o == nil || o.DownTierUsagePercentThresholds == nil {
		return nil, false
	}
	return o.DownTierUsagePercentThresholds, true
}

// HasDownTierUsagePercentThresholds returns a boolean if a field has been set.
func (o *IoPreferentialTier) HasDownTierUsagePercentThresholds() bool {
	if o != nil && o.DownTierUsagePercentThresholds != nil {
		return true
	}

	return false
}

// SetDownTierUsagePercentThresholds gets a reference to the given []int32 and assigns it to the DownTierUsagePercentThresholds field.
func (o *IoPreferentialTier) SetDownTierUsagePercentThresholds(v []int32) {
	o.DownTierUsagePercentThresholds = &v
}

// GetGrootIOPreferentialTier returns the GrootIOPreferentialTier field value if set, zero value otherwise.
func (o *IoPreferentialTier) GetGrootIOPreferentialTier() []string {
	if o == nil || o.GrootIOPreferentialTier == nil {
		var ret []string
		return ret
	}
	return *o.GrootIOPreferentialTier
}

// GetGrootIOPreferentialTierOk returns a tuple with the GrootIOPreferentialTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoPreferentialTier) GetGrootIOPreferentialTierOk() (*[]string, bool) {
	if o == nil || o.GrootIOPreferentialTier == nil {
		return nil, false
	}
	return o.GrootIOPreferentialTier, true
}

// HasGrootIOPreferentialTier returns a boolean if a field has been set.
func (o *IoPreferentialTier) HasGrootIOPreferentialTier() bool {
	if o != nil && o.GrootIOPreferentialTier != nil {
		return true
	}

	return false
}

// SetGrootIOPreferentialTier gets a reference to the given []string and assigns it to the GrootIOPreferentialTier field.
func (o *IoPreferentialTier) SetGrootIOPreferentialTier(v []string) {
	o.GrootIOPreferentialTier = &v
}

// GetHydraDowntierIOPreferentialTier returns the HydraDowntierIOPreferentialTier field value if set, zero value otherwise.
func (o *IoPreferentialTier) GetHydraDowntierIOPreferentialTier() []string {
	if o == nil || o.HydraDowntierIOPreferentialTier == nil {
		var ret []string
		return ret
	}
	return *o.HydraDowntierIOPreferentialTier
}

// GetHydraDowntierIOPreferentialTierOk returns a tuple with the HydraDowntierIOPreferentialTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoPreferentialTier) GetHydraDowntierIOPreferentialTierOk() (*[]string, bool) {
	if o == nil || o.HydraDowntierIOPreferentialTier == nil {
		return nil, false
	}
	return o.HydraDowntierIOPreferentialTier, true
}

// HasHydraDowntierIOPreferentialTier returns a boolean if a field has been set.
func (o *IoPreferentialTier) HasHydraDowntierIOPreferentialTier() bool {
	if o != nil && o.HydraDowntierIOPreferentialTier != nil {
		return true
	}

	return false
}

// SetHydraDowntierIOPreferentialTier gets a reference to the given []string and assigns it to the HydraDowntierIOPreferentialTier field.
func (o *IoPreferentialTier) SetHydraDowntierIOPreferentialTier(v []string) {
	o.HydraDowntierIOPreferentialTier = &v
}

// GetHydraIOPreferentialTier returns the HydraIOPreferentialTier field value if set, zero value otherwise.
func (o *IoPreferentialTier) GetHydraIOPreferentialTier() []string {
	if o == nil || o.HydraIOPreferentialTier == nil {
		var ret []string
		return ret
	}
	return *o.HydraIOPreferentialTier
}

// GetHydraIOPreferentialTierOk returns a tuple with the HydraIOPreferentialTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoPreferentialTier) GetHydraIOPreferentialTierOk() (*[]string, bool) {
	if o == nil || o.HydraIOPreferentialTier == nil {
		return nil, false
	}
	return o.HydraIOPreferentialTier, true
}

// HasHydraIOPreferentialTier returns a boolean if a field has been set.
func (o *IoPreferentialTier) HasHydraIOPreferentialTier() bool {
	if o != nil && o.HydraIOPreferentialTier != nil {
		return true
	}

	return false
}

// SetHydraIOPreferentialTier gets a reference to the given []string and assigns it to the HydraIOPreferentialTier field.
func (o *IoPreferentialTier) SetHydraIOPreferentialTier(v []string) {
	o.HydraIOPreferentialTier = &v
}

// GetLibrarianIOPreferentialTier returns the LibrarianIOPreferentialTier field value if set, zero value otherwise.
func (o *IoPreferentialTier) GetLibrarianIOPreferentialTier() []string {
	if o == nil || o.LibrarianIOPreferentialTier == nil {
		var ret []string
		return ret
	}
	return *o.LibrarianIOPreferentialTier
}

// GetLibrarianIOPreferentialTierOk returns a tuple with the LibrarianIOPreferentialTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoPreferentialTier) GetLibrarianIOPreferentialTierOk() (*[]string, bool) {
	if o == nil || o.LibrarianIOPreferentialTier == nil {
		return nil, false
	}
	return o.LibrarianIOPreferentialTier, true
}

// HasLibrarianIOPreferentialTier returns a boolean if a field has been set.
func (o *IoPreferentialTier) HasLibrarianIOPreferentialTier() bool {
	if o != nil && o.LibrarianIOPreferentialTier != nil {
		return true
	}

	return false
}

// SetLibrarianIOPreferentialTier gets a reference to the given []string and assigns it to the LibrarianIOPreferentialTier field.
func (o *IoPreferentialTier) SetLibrarianIOPreferentialTier(v []string) {
	o.LibrarianIOPreferentialTier = &v
}

// GetRandomIOPreferentialTier returns the RandomIOPreferentialTier field value if set, zero value otherwise.
func (o *IoPreferentialTier) GetRandomIOPreferentialTier() []string {
	if o == nil || o.RandomIOPreferentialTier == nil {
		var ret []string
		return ret
	}
	return *o.RandomIOPreferentialTier
}

// GetRandomIOPreferentialTierOk returns a tuple with the RandomIOPreferentialTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoPreferentialTier) GetRandomIOPreferentialTierOk() (*[]string, bool) {
	if o == nil || o.RandomIOPreferentialTier == nil {
		return nil, false
	}
	return o.RandomIOPreferentialTier, true
}

// HasRandomIOPreferentialTier returns a boolean if a field has been set.
func (o *IoPreferentialTier) HasRandomIOPreferentialTier() bool {
	if o != nil && o.RandomIOPreferentialTier != nil {
		return true
	}

	return false
}

// SetRandomIOPreferentialTier gets a reference to the given []string and assigns it to the RandomIOPreferentialTier field.
func (o *IoPreferentialTier) SetRandomIOPreferentialTier(v []string) {
	o.RandomIOPreferentialTier = &v
}

// GetScribeIOPreferentialTier returns the ScribeIOPreferentialTier field value if set, zero value otherwise.
func (o *IoPreferentialTier) GetScribeIOPreferentialTier() []string {
	if o == nil || o.ScribeIOPreferentialTier == nil {
		var ret []string
		return ret
	}
	return *o.ScribeIOPreferentialTier
}

// GetScribeIOPreferentialTierOk returns a tuple with the ScribeIOPreferentialTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoPreferentialTier) GetScribeIOPreferentialTierOk() (*[]string, bool) {
	if o == nil || o.ScribeIOPreferentialTier == nil {
		return nil, false
	}
	return o.ScribeIOPreferentialTier, true
}

// HasScribeIOPreferentialTier returns a boolean if a field has been set.
func (o *IoPreferentialTier) HasScribeIOPreferentialTier() bool {
	if o != nil && o.ScribeIOPreferentialTier != nil {
		return true
	}

	return false
}

// SetScribeIOPreferentialTier gets a reference to the given []string and assigns it to the ScribeIOPreferentialTier field.
func (o *IoPreferentialTier) SetScribeIOPreferentialTier(v []string) {
	o.ScribeIOPreferentialTier = &v
}

// GetSequentialIOPreferentialTier returns the SequentialIOPreferentialTier field value if set, zero value otherwise.
func (o *IoPreferentialTier) GetSequentialIOPreferentialTier() []string {
	if o == nil || o.SequentialIOPreferentialTier == nil {
		var ret []string
		return ret
	}
	return *o.SequentialIOPreferentialTier
}

// GetSequentialIOPreferentialTierOk returns a tuple with the SequentialIOPreferentialTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoPreferentialTier) GetSequentialIOPreferentialTierOk() (*[]string, bool) {
	if o == nil || o.SequentialIOPreferentialTier == nil {
		return nil, false
	}
	return o.SequentialIOPreferentialTier, true
}

// HasSequentialIOPreferentialTier returns a boolean if a field has been set.
func (o *IoPreferentialTier) HasSequentialIOPreferentialTier() bool {
	if o != nil && o.SequentialIOPreferentialTier != nil {
		return true
	}

	return false
}

// SetSequentialIOPreferentialTier gets a reference to the given []string and assigns it to the SequentialIOPreferentialTier field.
func (o *IoPreferentialTier) SetSequentialIOPreferentialTier(v []string) {
	o.SequentialIOPreferentialTier = &v
}

// GetYodaIOPreferentialTier returns the YodaIOPreferentialTier field value if set, zero value otherwise.
func (o *IoPreferentialTier) GetYodaIOPreferentialTier() []string {
	if o == nil || o.YodaIOPreferentialTier == nil {
		var ret []string
		return ret
	}
	return *o.YodaIOPreferentialTier
}

// GetYodaIOPreferentialTierOk returns a tuple with the YodaIOPreferentialTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoPreferentialTier) GetYodaIOPreferentialTierOk() (*[]string, bool) {
	if o == nil || o.YodaIOPreferentialTier == nil {
		return nil, false
	}
	return o.YodaIOPreferentialTier, true
}

// HasYodaIOPreferentialTier returns a boolean if a field has been set.
func (o *IoPreferentialTier) HasYodaIOPreferentialTier() bool {
	if o != nil && o.YodaIOPreferentialTier != nil {
		return true
	}

	return false
}

// SetYodaIOPreferentialTier gets a reference to the given []string and assigns it to the YodaIOPreferentialTier field.
func (o *IoPreferentialTier) SetYodaIOPreferentialTier(v []string) {
	o.YodaIOPreferentialTier = &v
}

func (o IoPreferentialTier) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApolloIOPreferentialTier != nil {
		toSerialize["apolloIOPreferentialTier"] = o.ApolloIOPreferentialTier
	}
	if o.ApolloWalIOPreferentialTier != nil {
		toSerialize["apolloWalIOPreferentialTier"] = o.ApolloWalIOPreferentialTier
	}
	if o.AthenaIOPreferentialTier != nil {
		toSerialize["athenaIOPreferentialTier"] = o.AthenaIOPreferentialTier
	}
	if o.AthenaSlowerIOPreferentialTier != nil {
		toSerialize["athenaSlowerIOPreferentialTier"] = o.AthenaSlowerIOPreferentialTier
	}
	if o.DownTierUsagePercentThresholds != nil {
		toSerialize["downTierUsagePercentThresholds"] = o.DownTierUsagePercentThresholds
	}
	if o.GrootIOPreferentialTier != nil {
		toSerialize["grootIOPreferentialTier"] = o.GrootIOPreferentialTier
	}
	if o.HydraDowntierIOPreferentialTier != nil {
		toSerialize["hydraDowntierIOPreferentialTier"] = o.HydraDowntierIOPreferentialTier
	}
	if o.HydraIOPreferentialTier != nil {
		toSerialize["hydraIOPreferentialTier"] = o.HydraIOPreferentialTier
	}
	if o.LibrarianIOPreferentialTier != nil {
		toSerialize["librarianIOPreferentialTier"] = o.LibrarianIOPreferentialTier
	}
	if o.RandomIOPreferentialTier != nil {
		toSerialize["randomIOPreferentialTier"] = o.RandomIOPreferentialTier
	}
	if o.ScribeIOPreferentialTier != nil {
		toSerialize["scribeIOPreferentialTier"] = o.ScribeIOPreferentialTier
	}
	if o.SequentialIOPreferentialTier != nil {
		toSerialize["sequentialIOPreferentialTier"] = o.SequentialIOPreferentialTier
	}
	if o.YodaIOPreferentialTier != nil {
		toSerialize["yodaIOPreferentialTier"] = o.YodaIOPreferentialTier
	}
	return json.Marshal(toSerialize)
}

type NullableIoPreferentialTier struct {
	value *IoPreferentialTier
	isSet bool
}

func (v NullableIoPreferentialTier) Get() *IoPreferentialTier {
	return v.value
}

func (v *NullableIoPreferentialTier) Set(val *IoPreferentialTier) {
	v.value = val
	v.isSet = true
}

func (v NullableIoPreferentialTier) IsSet() bool {
	return v.isSet
}

func (v *NullableIoPreferentialTier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoPreferentialTier(val *IoPreferentialTier) *NullableIoPreferentialTier {
	return &NullableIoPreferentialTier{value: val, isSet: true}
}

func (v NullableIoPreferentialTier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoPreferentialTier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


