/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// KeystoneACLProtoGranteesProjectUsersMapEntry struct for KeystoneACLProtoGranteesProjectUsersMapEntry
type KeystoneACLProtoGranteesProjectUsersMapEntry struct {
	Key NullableString `json:"key,omitempty"`
	Value *KeystoneACLProtoGranteesProjectUsers `json:"value,omitempty"`
}

// NewKeystoneACLProtoGranteesProjectUsersMapEntry instantiates a new KeystoneACLProtoGranteesProjectUsersMapEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeystoneACLProtoGranteesProjectUsersMapEntry() *KeystoneACLProtoGranteesProjectUsersMapEntry {
	this := KeystoneACLProtoGranteesProjectUsersMapEntry{}
	return &this
}

// NewKeystoneACLProtoGranteesProjectUsersMapEntryWithDefaults instantiates a new KeystoneACLProtoGranteesProjectUsersMapEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeystoneACLProtoGranteesProjectUsersMapEntryWithDefaults() *KeystoneACLProtoGranteesProjectUsersMapEntry {
	this := KeystoneACLProtoGranteesProjectUsersMapEntry{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeystoneACLProtoGranteesProjectUsersMapEntry) GetKey() string {
	if o == nil || o.Key.Get() == nil {
		var ret string
		return ret
	}
	return *o.Key.Get()
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeystoneACLProtoGranteesProjectUsersMapEntry) GetKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Key.Get(), o.Key.IsSet()
}

// HasKey returns a boolean if a field has been set.
func (o *KeystoneACLProtoGranteesProjectUsersMapEntry) HasKey() bool {
	if o != nil && o.Key.IsSet() {
		return true
	}

	return false
}

// SetKey gets a reference to the given NullableString and assigns it to the Key field.
func (o *KeystoneACLProtoGranteesProjectUsersMapEntry) SetKey(v string) {
	o.Key.Set(&v)
}
// SetKeyNil sets the value for Key to be an explicit nil
func (o *KeystoneACLProtoGranteesProjectUsersMapEntry) SetKeyNil() {
	o.Key.Set(nil)
}

// UnsetKey ensures that no value is present for Key, not even an explicit nil
func (o *KeystoneACLProtoGranteesProjectUsersMapEntry) UnsetKey() {
	o.Key.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *KeystoneACLProtoGranteesProjectUsersMapEntry) GetValue() KeystoneACLProtoGranteesProjectUsers {
	if o == nil || o.Value == nil {
		var ret KeystoneACLProtoGranteesProjectUsers
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeystoneACLProtoGranteesProjectUsersMapEntry) GetValueOk() (*KeystoneACLProtoGranteesProjectUsers, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *KeystoneACLProtoGranteesProjectUsersMapEntry) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given KeystoneACLProtoGranteesProjectUsers and assigns it to the Value field.
func (o *KeystoneACLProtoGranteesProjectUsersMapEntry) SetValue(v KeystoneACLProtoGranteesProjectUsers) {
	o.Value = &v
}

func (o KeystoneACLProtoGranteesProjectUsersMapEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key.IsSet() {
		toSerialize["key"] = o.Key.Get()
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableKeystoneACLProtoGranteesProjectUsersMapEntry struct {
	value *KeystoneACLProtoGranteesProjectUsersMapEntry
	isSet bool
}

func (v NullableKeystoneACLProtoGranteesProjectUsersMapEntry) Get() *KeystoneACLProtoGranteesProjectUsersMapEntry {
	return v.value
}

func (v *NullableKeystoneACLProtoGranteesProjectUsersMapEntry) Set(val *KeystoneACLProtoGranteesProjectUsersMapEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableKeystoneACLProtoGranteesProjectUsersMapEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableKeystoneACLProtoGranteesProjectUsersMapEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeystoneACLProtoGranteesProjectUsersMapEntry(val *KeystoneACLProtoGranteesProjectUsersMapEntry) *NullableKeystoneACLProtoGranteesProjectUsersMapEntry {
	return &NullableKeystoneACLProtoGranteesProjectUsersMapEntry{value: val, isSet: true}
}

func (v NullableKeystoneACLProtoGranteesProjectUsersMapEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeystoneACLProtoGranteesProjectUsersMapEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


