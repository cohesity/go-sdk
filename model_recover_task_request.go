/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// RecoverTaskRequest Create a Restore Task Request for recovering VMs or mounting volumes to mount points.
type RecoverTaskRequest struct {
	PublicFoldersParameters *PublicFoldersRestoreParameters `json:"PublicFoldersParameters,omitempty"`
	AcropolisParameters *AcropolisRestoreParameters `json:"acropolisParameters,omitempty"`
	// Specifies if the Restore Task should continue when some operations on some objects fail. If true, the Cohesity Cluster ignores intermittent errors and restores as many objects as possible.
	ContinueOnError NullableBool `json:"continueOnError,omitempty"`
	DeployVmsToCloud *DeployVmsToCloud `json:"deployVmsToCloud,omitempty"`
	// Specifies the way data needs to be retrieved from the external target. This information will be filled in by Iris and Magneto will pass it along to the Icebox as it is to support bulk retrieval from Glacier. Specifies the type of Restore Task.  'kStandard' specifies retrievals that allow to access any of your archives within several hours. Standard retrievals typically complete within 3–5 hours. This is the default option for retrieval requests that do not specify the retrieval option. 'kBulk' specifies retrievals that are Glacier’s lowest-cost retrieval option, which can be used to retrieve large amounts, even petabytes, of data inexpensively in a day. Bulk retrieval typically complete within 5–12 hours. 'kExpedited' specifies retrievals that allows to quickly access your data when occasional urgent requests for a subset of archives are required. For all but the largest archives (250 MB+), data accessed using Expedited retrievals are typically made available within 1–5 minutes.
	GlacierRetrievalType NullableString `json:"glacierRetrievalType,omitempty"`
	HypervParameters *HypervRestoreParameters `json:"hypervParameters,omitempty"`
	KubernetesParameters *KubernetesRestoreParameters `json:"kubernetesParameters,omitempty"`
	MountParameters *MountVolumesParameters `json:"mountParameters,omitempty"`
	// Specifies the name of the Restore Task. This field must be set and must be a unique name.
	Name NullableString `json:"name"`
	// Specify a new registered parent Protection Source. If specified the selected objects are cloned or recovered to this new Protection Source. If not specified, objects are cloned or recovered to the original Protection Source that was managing them.
	NewParentId NullableInt64 `json:"newParentId,omitempty"`
	// Array of Objects.  Specifies a list of Protection Source objects or Protection Job objects (with specified Protection Source objects).
	Objects []RestoreObjectDetails `json:"objects,omitempty"`
	OneDriveParameters *OneDriveRestoreParameters `json:"oneDriveParameters,omitempty"`
	OutlookParameters *OutlookRestoreParameters `json:"outlookParameters,omitempty"`
	RestoreViewParameters *UpdateViewParam `json:"restoreViewParameters,omitempty"`
	SharePointParameters *SharePointRestoreParameters `json:"sharePointParameters,omitempty"`
	// Specifies the type of Restore Task such as 'kRecoverVMs' or 'kMountVolumes'. 'kRecoverVMs' specifies a Restore Task that recovers VMs. 'kMountVolumes' specifies a Restore Task that mounts volumes to mount points. 'kRecoverNamespaces' specifies a Restore Task that recovers Kubernetes namespaces. 'kMountFileVolume' specifies a Restore Task that mounts a file volume.
	Type NullableString `json:"type"`
	// Specifie target view into which the objects are to be cloned when doing recovery for NAS.
	ViewName NullableString `json:"viewName,omitempty"`
	VirtualDiskRestoreParameters *VirtualDiskRestoreParameters `json:"virtualDiskRestoreParameters,omitempty"`
	VlanParameters *VlanParameters `json:"vlanParameters,omitempty"`
	VmwareParameters *VmwareRestoreParameters `json:"vmwareParameters,omitempty"`
}

// NewRecoverTaskRequest instantiates a new RecoverTaskRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverTaskRequest(name NullableString, type_ NullableString) *RecoverTaskRequest {
	this := RecoverTaskRequest{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewRecoverTaskRequestWithDefaults instantiates a new RecoverTaskRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverTaskRequestWithDefaults() *RecoverTaskRequest {
	this := RecoverTaskRequest{}
	return &this
}

// GetPublicFoldersParameters returns the PublicFoldersParameters field value if set, zero value otherwise.
func (o *RecoverTaskRequest) GetPublicFoldersParameters() PublicFoldersRestoreParameters {
	if o == nil || o.PublicFoldersParameters == nil {
		var ret PublicFoldersRestoreParameters
		return ret
	}
	return *o.PublicFoldersParameters
}

// GetPublicFoldersParametersOk returns a tuple with the PublicFoldersParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverTaskRequest) GetPublicFoldersParametersOk() (*PublicFoldersRestoreParameters, bool) {
	if o == nil || o.PublicFoldersParameters == nil {
		return nil, false
	}
	return o.PublicFoldersParameters, true
}

// HasPublicFoldersParameters returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasPublicFoldersParameters() bool {
	if o != nil && o.PublicFoldersParameters != nil {
		return true
	}

	return false
}

// SetPublicFoldersParameters gets a reference to the given PublicFoldersRestoreParameters and assigns it to the PublicFoldersParameters field.
func (o *RecoverTaskRequest) SetPublicFoldersParameters(v PublicFoldersRestoreParameters) {
	o.PublicFoldersParameters = &v
}

// GetAcropolisParameters returns the AcropolisParameters field value if set, zero value otherwise.
func (o *RecoverTaskRequest) GetAcropolisParameters() AcropolisRestoreParameters {
	if o == nil || o.AcropolisParameters == nil {
		var ret AcropolisRestoreParameters
		return ret
	}
	return *o.AcropolisParameters
}

// GetAcropolisParametersOk returns a tuple with the AcropolisParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverTaskRequest) GetAcropolisParametersOk() (*AcropolisRestoreParameters, bool) {
	if o == nil || o.AcropolisParameters == nil {
		return nil, false
	}
	return o.AcropolisParameters, true
}

// HasAcropolisParameters returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasAcropolisParameters() bool {
	if o != nil && o.AcropolisParameters != nil {
		return true
	}

	return false
}

// SetAcropolisParameters gets a reference to the given AcropolisRestoreParameters and assigns it to the AcropolisParameters field.
func (o *RecoverTaskRequest) SetAcropolisParameters(v AcropolisRestoreParameters) {
	o.AcropolisParameters = &v
}

// GetContinueOnError returns the ContinueOnError field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverTaskRequest) GetContinueOnError() bool {
	if o == nil || o.ContinueOnError.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ContinueOnError.Get()
}

// GetContinueOnErrorOk returns a tuple with the ContinueOnError field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverTaskRequest) GetContinueOnErrorOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ContinueOnError.Get(), o.ContinueOnError.IsSet()
}

// HasContinueOnError returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasContinueOnError() bool {
	if o != nil && o.ContinueOnError.IsSet() {
		return true
	}

	return false
}

// SetContinueOnError gets a reference to the given NullableBool and assigns it to the ContinueOnError field.
func (o *RecoverTaskRequest) SetContinueOnError(v bool) {
	o.ContinueOnError.Set(&v)
}
// SetContinueOnErrorNil sets the value for ContinueOnError to be an explicit nil
func (o *RecoverTaskRequest) SetContinueOnErrorNil() {
	o.ContinueOnError.Set(nil)
}

// UnsetContinueOnError ensures that no value is present for ContinueOnError, not even an explicit nil
func (o *RecoverTaskRequest) UnsetContinueOnError() {
	o.ContinueOnError.Unset()
}

// GetDeployVmsToCloud returns the DeployVmsToCloud field value if set, zero value otherwise.
func (o *RecoverTaskRequest) GetDeployVmsToCloud() DeployVmsToCloud {
	if o == nil || o.DeployVmsToCloud == nil {
		var ret DeployVmsToCloud
		return ret
	}
	return *o.DeployVmsToCloud
}

// GetDeployVmsToCloudOk returns a tuple with the DeployVmsToCloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverTaskRequest) GetDeployVmsToCloudOk() (*DeployVmsToCloud, bool) {
	if o == nil || o.DeployVmsToCloud == nil {
		return nil, false
	}
	return o.DeployVmsToCloud, true
}

// HasDeployVmsToCloud returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasDeployVmsToCloud() bool {
	if o != nil && o.DeployVmsToCloud != nil {
		return true
	}

	return false
}

// SetDeployVmsToCloud gets a reference to the given DeployVmsToCloud and assigns it to the DeployVmsToCloud field.
func (o *RecoverTaskRequest) SetDeployVmsToCloud(v DeployVmsToCloud) {
	o.DeployVmsToCloud = &v
}

// GetGlacierRetrievalType returns the GlacierRetrievalType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverTaskRequest) GetGlacierRetrievalType() string {
	if o == nil || o.GlacierRetrievalType.Get() == nil {
		var ret string
		return ret
	}
	return *o.GlacierRetrievalType.Get()
}

// GetGlacierRetrievalTypeOk returns a tuple with the GlacierRetrievalType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverTaskRequest) GetGlacierRetrievalTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GlacierRetrievalType.Get(), o.GlacierRetrievalType.IsSet()
}

// HasGlacierRetrievalType returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasGlacierRetrievalType() bool {
	if o != nil && o.GlacierRetrievalType.IsSet() {
		return true
	}

	return false
}

// SetGlacierRetrievalType gets a reference to the given NullableString and assigns it to the GlacierRetrievalType field.
func (o *RecoverTaskRequest) SetGlacierRetrievalType(v string) {
	o.GlacierRetrievalType.Set(&v)
}
// SetGlacierRetrievalTypeNil sets the value for GlacierRetrievalType to be an explicit nil
func (o *RecoverTaskRequest) SetGlacierRetrievalTypeNil() {
	o.GlacierRetrievalType.Set(nil)
}

// UnsetGlacierRetrievalType ensures that no value is present for GlacierRetrievalType, not even an explicit nil
func (o *RecoverTaskRequest) UnsetGlacierRetrievalType() {
	o.GlacierRetrievalType.Unset()
}

// GetHypervParameters returns the HypervParameters field value if set, zero value otherwise.
func (o *RecoverTaskRequest) GetHypervParameters() HypervRestoreParameters {
	if o == nil || o.HypervParameters == nil {
		var ret HypervRestoreParameters
		return ret
	}
	return *o.HypervParameters
}

// GetHypervParametersOk returns a tuple with the HypervParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverTaskRequest) GetHypervParametersOk() (*HypervRestoreParameters, bool) {
	if o == nil || o.HypervParameters == nil {
		return nil, false
	}
	return o.HypervParameters, true
}

// HasHypervParameters returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasHypervParameters() bool {
	if o != nil && o.HypervParameters != nil {
		return true
	}

	return false
}

// SetHypervParameters gets a reference to the given HypervRestoreParameters and assigns it to the HypervParameters field.
func (o *RecoverTaskRequest) SetHypervParameters(v HypervRestoreParameters) {
	o.HypervParameters = &v
}

// GetKubernetesParameters returns the KubernetesParameters field value if set, zero value otherwise.
func (o *RecoverTaskRequest) GetKubernetesParameters() KubernetesRestoreParameters {
	if o == nil || o.KubernetesParameters == nil {
		var ret KubernetesRestoreParameters
		return ret
	}
	return *o.KubernetesParameters
}

// GetKubernetesParametersOk returns a tuple with the KubernetesParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverTaskRequest) GetKubernetesParametersOk() (*KubernetesRestoreParameters, bool) {
	if o == nil || o.KubernetesParameters == nil {
		return nil, false
	}
	return o.KubernetesParameters, true
}

// HasKubernetesParameters returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasKubernetesParameters() bool {
	if o != nil && o.KubernetesParameters != nil {
		return true
	}

	return false
}

// SetKubernetesParameters gets a reference to the given KubernetesRestoreParameters and assigns it to the KubernetesParameters field.
func (o *RecoverTaskRequest) SetKubernetesParameters(v KubernetesRestoreParameters) {
	o.KubernetesParameters = &v
}

// GetMountParameters returns the MountParameters field value if set, zero value otherwise.
func (o *RecoverTaskRequest) GetMountParameters() MountVolumesParameters {
	if o == nil || o.MountParameters == nil {
		var ret MountVolumesParameters
		return ret
	}
	return *o.MountParameters
}

// GetMountParametersOk returns a tuple with the MountParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverTaskRequest) GetMountParametersOk() (*MountVolumesParameters, bool) {
	if o == nil || o.MountParameters == nil {
		return nil, false
	}
	return o.MountParameters, true
}

// HasMountParameters returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasMountParameters() bool {
	if o != nil && o.MountParameters != nil {
		return true
	}

	return false
}

// SetMountParameters gets a reference to the given MountVolumesParameters and assigns it to the MountParameters field.
func (o *RecoverTaskRequest) SetMountParameters(v MountVolumesParameters) {
	o.MountParameters = &v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RecoverTaskRequest) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverTaskRequest) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *RecoverTaskRequest) SetName(v string) {
	o.Name.Set(&v)
}

// GetNewParentId returns the NewParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverTaskRequest) GetNewParentId() int64 {
	if o == nil || o.NewParentId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NewParentId.Get()
}

// GetNewParentIdOk returns a tuple with the NewParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverTaskRequest) GetNewParentIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NewParentId.Get(), o.NewParentId.IsSet()
}

// HasNewParentId returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasNewParentId() bool {
	if o != nil && o.NewParentId.IsSet() {
		return true
	}

	return false
}

// SetNewParentId gets a reference to the given NullableInt64 and assigns it to the NewParentId field.
func (o *RecoverTaskRequest) SetNewParentId(v int64) {
	o.NewParentId.Set(&v)
}
// SetNewParentIdNil sets the value for NewParentId to be an explicit nil
func (o *RecoverTaskRequest) SetNewParentIdNil() {
	o.NewParentId.Set(nil)
}

// UnsetNewParentId ensures that no value is present for NewParentId, not even an explicit nil
func (o *RecoverTaskRequest) UnsetNewParentId() {
	o.NewParentId.Unset()
}

// GetObjects returns the Objects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverTaskRequest) GetObjects() []RestoreObjectDetails {
	if o == nil  {
		var ret []RestoreObjectDetails
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverTaskRequest) GetObjectsOk() (*[]RestoreObjectDetails, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return &o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []RestoreObjectDetails and assigns it to the Objects field.
func (o *RecoverTaskRequest) SetObjects(v []RestoreObjectDetails) {
	o.Objects = v
}

// GetOneDriveParameters returns the OneDriveParameters field value if set, zero value otherwise.
func (o *RecoverTaskRequest) GetOneDriveParameters() OneDriveRestoreParameters {
	if o == nil || o.OneDriveParameters == nil {
		var ret OneDriveRestoreParameters
		return ret
	}
	return *o.OneDriveParameters
}

// GetOneDriveParametersOk returns a tuple with the OneDriveParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverTaskRequest) GetOneDriveParametersOk() (*OneDriveRestoreParameters, bool) {
	if o == nil || o.OneDriveParameters == nil {
		return nil, false
	}
	return o.OneDriveParameters, true
}

// HasOneDriveParameters returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasOneDriveParameters() bool {
	if o != nil && o.OneDriveParameters != nil {
		return true
	}

	return false
}

// SetOneDriveParameters gets a reference to the given OneDriveRestoreParameters and assigns it to the OneDriveParameters field.
func (o *RecoverTaskRequest) SetOneDriveParameters(v OneDriveRestoreParameters) {
	o.OneDriveParameters = &v
}

// GetOutlookParameters returns the OutlookParameters field value if set, zero value otherwise.
func (o *RecoverTaskRequest) GetOutlookParameters() OutlookRestoreParameters {
	if o == nil || o.OutlookParameters == nil {
		var ret OutlookRestoreParameters
		return ret
	}
	return *o.OutlookParameters
}

// GetOutlookParametersOk returns a tuple with the OutlookParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverTaskRequest) GetOutlookParametersOk() (*OutlookRestoreParameters, bool) {
	if o == nil || o.OutlookParameters == nil {
		return nil, false
	}
	return o.OutlookParameters, true
}

// HasOutlookParameters returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasOutlookParameters() bool {
	if o != nil && o.OutlookParameters != nil {
		return true
	}

	return false
}

// SetOutlookParameters gets a reference to the given OutlookRestoreParameters and assigns it to the OutlookParameters field.
func (o *RecoverTaskRequest) SetOutlookParameters(v OutlookRestoreParameters) {
	o.OutlookParameters = &v
}

// GetRestoreViewParameters returns the RestoreViewParameters field value if set, zero value otherwise.
func (o *RecoverTaskRequest) GetRestoreViewParameters() UpdateViewParam {
	if o == nil || o.RestoreViewParameters == nil {
		var ret UpdateViewParam
		return ret
	}
	return *o.RestoreViewParameters
}

// GetRestoreViewParametersOk returns a tuple with the RestoreViewParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverTaskRequest) GetRestoreViewParametersOk() (*UpdateViewParam, bool) {
	if o == nil || o.RestoreViewParameters == nil {
		return nil, false
	}
	return o.RestoreViewParameters, true
}

// HasRestoreViewParameters returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasRestoreViewParameters() bool {
	if o != nil && o.RestoreViewParameters != nil {
		return true
	}

	return false
}

// SetRestoreViewParameters gets a reference to the given UpdateViewParam and assigns it to the RestoreViewParameters field.
func (o *RecoverTaskRequest) SetRestoreViewParameters(v UpdateViewParam) {
	o.RestoreViewParameters = &v
}

// GetSharePointParameters returns the SharePointParameters field value if set, zero value otherwise.
func (o *RecoverTaskRequest) GetSharePointParameters() SharePointRestoreParameters {
	if o == nil || o.SharePointParameters == nil {
		var ret SharePointRestoreParameters
		return ret
	}
	return *o.SharePointParameters
}

// GetSharePointParametersOk returns a tuple with the SharePointParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverTaskRequest) GetSharePointParametersOk() (*SharePointRestoreParameters, bool) {
	if o == nil || o.SharePointParameters == nil {
		return nil, false
	}
	return o.SharePointParameters, true
}

// HasSharePointParameters returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasSharePointParameters() bool {
	if o != nil && o.SharePointParameters != nil {
		return true
	}

	return false
}

// SetSharePointParameters gets a reference to the given SharePointRestoreParameters and assigns it to the SharePointParameters field.
func (o *RecoverTaskRequest) SetSharePointParameters(v SharePointRestoreParameters) {
	o.SharePointParameters = &v
}

// GetType returns the Type field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RecoverTaskRequest) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}

	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverTaskRequest) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// SetType sets field value
func (o *RecoverTaskRequest) SetType(v string) {
	o.Type.Set(&v)
}

// GetViewName returns the ViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverTaskRequest) GetViewName() string {
	if o == nil || o.ViewName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ViewName.Get()
}

// GetViewNameOk returns a tuple with the ViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverTaskRequest) GetViewNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewName.Get(), o.ViewName.IsSet()
}

// HasViewName returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasViewName() bool {
	if o != nil && o.ViewName.IsSet() {
		return true
	}

	return false
}

// SetViewName gets a reference to the given NullableString and assigns it to the ViewName field.
func (o *RecoverTaskRequest) SetViewName(v string) {
	o.ViewName.Set(&v)
}
// SetViewNameNil sets the value for ViewName to be an explicit nil
func (o *RecoverTaskRequest) SetViewNameNil() {
	o.ViewName.Set(nil)
}

// UnsetViewName ensures that no value is present for ViewName, not even an explicit nil
func (o *RecoverTaskRequest) UnsetViewName() {
	o.ViewName.Unset()
}

// GetVirtualDiskRestoreParameters returns the VirtualDiskRestoreParameters field value if set, zero value otherwise.
func (o *RecoverTaskRequest) GetVirtualDiskRestoreParameters() VirtualDiskRestoreParameters {
	if o == nil || o.VirtualDiskRestoreParameters == nil {
		var ret VirtualDiskRestoreParameters
		return ret
	}
	return *o.VirtualDiskRestoreParameters
}

// GetVirtualDiskRestoreParametersOk returns a tuple with the VirtualDiskRestoreParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverTaskRequest) GetVirtualDiskRestoreParametersOk() (*VirtualDiskRestoreParameters, bool) {
	if o == nil || o.VirtualDiskRestoreParameters == nil {
		return nil, false
	}
	return o.VirtualDiskRestoreParameters, true
}

// HasVirtualDiskRestoreParameters returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasVirtualDiskRestoreParameters() bool {
	if o != nil && o.VirtualDiskRestoreParameters != nil {
		return true
	}

	return false
}

// SetVirtualDiskRestoreParameters gets a reference to the given VirtualDiskRestoreParameters and assigns it to the VirtualDiskRestoreParameters field.
func (o *RecoverTaskRequest) SetVirtualDiskRestoreParameters(v VirtualDiskRestoreParameters) {
	o.VirtualDiskRestoreParameters = &v
}

// GetVlanParameters returns the VlanParameters field value if set, zero value otherwise.
func (o *RecoverTaskRequest) GetVlanParameters() VlanParameters {
	if o == nil || o.VlanParameters == nil {
		var ret VlanParameters
		return ret
	}
	return *o.VlanParameters
}

// GetVlanParametersOk returns a tuple with the VlanParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverTaskRequest) GetVlanParametersOk() (*VlanParameters, bool) {
	if o == nil || o.VlanParameters == nil {
		return nil, false
	}
	return o.VlanParameters, true
}

// HasVlanParameters returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasVlanParameters() bool {
	if o != nil && o.VlanParameters != nil {
		return true
	}

	return false
}

// SetVlanParameters gets a reference to the given VlanParameters and assigns it to the VlanParameters field.
func (o *RecoverTaskRequest) SetVlanParameters(v VlanParameters) {
	o.VlanParameters = &v
}

// GetVmwareParameters returns the VmwareParameters field value if set, zero value otherwise.
func (o *RecoverTaskRequest) GetVmwareParameters() VmwareRestoreParameters {
	if o == nil || o.VmwareParameters == nil {
		var ret VmwareRestoreParameters
		return ret
	}
	return *o.VmwareParameters
}

// GetVmwareParametersOk returns a tuple with the VmwareParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverTaskRequest) GetVmwareParametersOk() (*VmwareRestoreParameters, bool) {
	if o == nil || o.VmwareParameters == nil {
		return nil, false
	}
	return o.VmwareParameters, true
}

// HasVmwareParameters returns a boolean if a field has been set.
func (o *RecoverTaskRequest) HasVmwareParameters() bool {
	if o != nil && o.VmwareParameters != nil {
		return true
	}

	return false
}

// SetVmwareParameters gets a reference to the given VmwareRestoreParameters and assigns it to the VmwareParameters field.
func (o *RecoverTaskRequest) SetVmwareParameters(v VmwareRestoreParameters) {
	o.VmwareParameters = &v
}

func (o RecoverTaskRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PublicFoldersParameters != nil {
		toSerialize["PublicFoldersParameters"] = o.PublicFoldersParameters
	}
	if o.AcropolisParameters != nil {
		toSerialize["acropolisParameters"] = o.AcropolisParameters
	}
	if o.ContinueOnError.IsSet() {
		toSerialize["continueOnError"] = o.ContinueOnError.Get()
	}
	if o.DeployVmsToCloud != nil {
		toSerialize["deployVmsToCloud"] = o.DeployVmsToCloud
	}
	if o.GlacierRetrievalType.IsSet() {
		toSerialize["glacierRetrievalType"] = o.GlacierRetrievalType.Get()
	}
	if o.HypervParameters != nil {
		toSerialize["hypervParameters"] = o.HypervParameters
	}
	if o.KubernetesParameters != nil {
		toSerialize["kubernetesParameters"] = o.KubernetesParameters
	}
	if o.MountParameters != nil {
		toSerialize["mountParameters"] = o.MountParameters
	}
	if true {
		toSerialize["name"] = o.Name.Get()
	}
	if o.NewParentId.IsSet() {
		toSerialize["newParentId"] = o.NewParentId.Get()
	}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if o.OneDriveParameters != nil {
		toSerialize["oneDriveParameters"] = o.OneDriveParameters
	}
	if o.OutlookParameters != nil {
		toSerialize["outlookParameters"] = o.OutlookParameters
	}
	if o.RestoreViewParameters != nil {
		toSerialize["restoreViewParameters"] = o.RestoreViewParameters
	}
	if o.SharePointParameters != nil {
		toSerialize["sharePointParameters"] = o.SharePointParameters
	}
	if true {
		toSerialize["type"] = o.Type.Get()
	}
	if o.ViewName.IsSet() {
		toSerialize["viewName"] = o.ViewName.Get()
	}
	if o.VirtualDiskRestoreParameters != nil {
		toSerialize["virtualDiskRestoreParameters"] = o.VirtualDiskRestoreParameters
	}
	if o.VlanParameters != nil {
		toSerialize["vlanParameters"] = o.VlanParameters
	}
	if o.VmwareParameters != nil {
		toSerialize["vmwareParameters"] = o.VmwareParameters
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverTaskRequest struct {
	value *RecoverTaskRequest
	isSet bool
}

func (v NullableRecoverTaskRequest) Get() *RecoverTaskRequest {
	return v.value
}

func (v *NullableRecoverTaskRequest) Set(val *RecoverTaskRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverTaskRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverTaskRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverTaskRequest(val *RecoverTaskRequest) *NullableRecoverTaskRequest {
	return &NullableRecoverTaskRequest{value: val, isSet: true}
}

func (v NullableRecoverTaskRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverTaskRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


