/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// RunNowPhysicalParameters Specifies optional physical parameters for a specific source id.
type RunNowPhysicalParameters struct {
	// Specifies metadata file path during run-now requests for physical file based backups for some specific host entity. If specified, it will override any default metadata/directive file path set at the job level for the host. Also note that if the job default does not specify a metadata/directive file path for the host, then specifying this field for that host during run-now request will be rejected.
	MetadataFilePath NullableString `json:"metadataFilePath,omitempty"`
}

// NewRunNowPhysicalParameters instantiates a new RunNowPhysicalParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunNowPhysicalParameters() *RunNowPhysicalParameters {
	this := RunNowPhysicalParameters{}
	return &this
}

// NewRunNowPhysicalParametersWithDefaults instantiates a new RunNowPhysicalParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunNowPhysicalParametersWithDefaults() *RunNowPhysicalParameters {
	this := RunNowPhysicalParameters{}
	return &this
}

// GetMetadataFilePath returns the MetadataFilePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunNowPhysicalParameters) GetMetadataFilePath() string {
	if o == nil || o.MetadataFilePath.Get() == nil {
		var ret string
		return ret
	}
	return *o.MetadataFilePath.Get()
}

// GetMetadataFilePathOk returns a tuple with the MetadataFilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunNowPhysicalParameters) GetMetadataFilePathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MetadataFilePath.Get(), o.MetadataFilePath.IsSet()
}

// HasMetadataFilePath returns a boolean if a field has been set.
func (o *RunNowPhysicalParameters) HasMetadataFilePath() bool {
	if o != nil && o.MetadataFilePath.IsSet() {
		return true
	}

	return false
}

// SetMetadataFilePath gets a reference to the given NullableString and assigns it to the MetadataFilePath field.
func (o *RunNowPhysicalParameters) SetMetadataFilePath(v string) {
	o.MetadataFilePath.Set(&v)
}
// SetMetadataFilePathNil sets the value for MetadataFilePath to be an explicit nil
func (o *RunNowPhysicalParameters) SetMetadataFilePathNil() {
	o.MetadataFilePath.Set(nil)
}

// UnsetMetadataFilePath ensures that no value is present for MetadataFilePath, not even an explicit nil
func (o *RunNowPhysicalParameters) UnsetMetadataFilePath() {
	o.MetadataFilePath.Unset()
}

func (o RunNowPhysicalParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MetadataFilePath.IsSet() {
		toSerialize["metadataFilePath"] = o.MetadataFilePath.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRunNowPhysicalParameters struct {
	value *RunNowPhysicalParameters
	isSet bool
}

func (v NullableRunNowPhysicalParameters) Get() *RunNowPhysicalParameters {
	return v.value
}

func (v *NullableRunNowPhysicalParameters) Set(val *RunNowPhysicalParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableRunNowPhysicalParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableRunNowPhysicalParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunNowPhysicalParameters(val *RunNowPhysicalParameters) *NullableRunNowPhysicalParameters {
	return &NullableRunNowPhysicalParameters{value: val, isSet: true}
}

func (v NullableRunNowPhysicalParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunNowPhysicalParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


