/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ListStorageProfilesResponseBody Specifies the response to request to list the storage profiles associated with a VDC.
type ListStorageProfilesResponseBody struct {
	// Specifies a list of storage profiles.
	StorageProfiles []VcdStorageProfile `json:"storageProfiles,omitempty"`
}

// NewListStorageProfilesResponseBody instantiates a new ListStorageProfilesResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListStorageProfilesResponseBody() *ListStorageProfilesResponseBody {
	this := ListStorageProfilesResponseBody{}
	return &this
}

// NewListStorageProfilesResponseBodyWithDefaults instantiates a new ListStorageProfilesResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListStorageProfilesResponseBodyWithDefaults() *ListStorageProfilesResponseBody {
	this := ListStorageProfilesResponseBody{}
	return &this
}

// GetStorageProfiles returns the StorageProfiles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListStorageProfilesResponseBody) GetStorageProfiles() []VcdStorageProfile {
	if o == nil  {
		var ret []VcdStorageProfile
		return ret
	}
	return o.StorageProfiles
}

// GetStorageProfilesOk returns a tuple with the StorageProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListStorageProfilesResponseBody) GetStorageProfilesOk() (*[]VcdStorageProfile, bool) {
	if o == nil || o.StorageProfiles == nil {
		return nil, false
	}
	return &o.StorageProfiles, true
}

// HasStorageProfiles returns a boolean if a field has been set.
func (o *ListStorageProfilesResponseBody) HasStorageProfiles() bool {
	if o != nil && o.StorageProfiles != nil {
		return true
	}

	return false
}

// SetStorageProfiles gets a reference to the given []VcdStorageProfile and assigns it to the StorageProfiles field.
func (o *ListStorageProfilesResponseBody) SetStorageProfiles(v []VcdStorageProfile) {
	o.StorageProfiles = v
}

func (o ListStorageProfilesResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StorageProfiles != nil {
		toSerialize["storageProfiles"] = o.StorageProfiles
	}
	return json.Marshal(toSerialize)
}

type NullableListStorageProfilesResponseBody struct {
	value *ListStorageProfilesResponseBody
	isSet bool
}

func (v NullableListStorageProfilesResponseBody) Get() *ListStorageProfilesResponseBody {
	return v.value
}

func (v *NullableListStorageProfilesResponseBody) Set(val *ListStorageProfilesResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableListStorageProfilesResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableListStorageProfilesResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListStorageProfilesResponseBody(val *ListStorageProfilesResponseBody) *NullableListStorageProfilesResponseBody {
	return &NullableListStorageProfilesResponseBody{value: val, isSet: true}
}

func (v NullableListStorageProfilesResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListStorageProfilesResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


