/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// RootPublicFolder Specifies the RootPublicFolder with restore details to support full or partial recovery.
type RootPublicFolder struct {
	// Specifies the list of Public Folders to be restored incase user wishes not to restore entire RootPublicFolder.
	PublicFolderList []PublicFolder `json:"publicFolderList,omitempty"`
	// Specifies whether the entire RootPublicFolder is to be restored.
	RestoreEntireRootPublicFolder NullableBool `json:"restoreEntireRootPublicFolder,omitempty"`
	RootPublicFolderObject *RestoreObjectDetails `json:"rootPublicFolderObject,omitempty"`
}

// NewRootPublicFolder instantiates a new RootPublicFolder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRootPublicFolder() *RootPublicFolder {
	this := RootPublicFolder{}
	return &this
}

// NewRootPublicFolderWithDefaults instantiates a new RootPublicFolder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRootPublicFolderWithDefaults() *RootPublicFolder {
	this := RootPublicFolder{}
	return &this
}

// GetPublicFolderList returns the PublicFolderList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RootPublicFolder) GetPublicFolderList() []PublicFolder {
	if o == nil  {
		var ret []PublicFolder
		return ret
	}
	return o.PublicFolderList
}

// GetPublicFolderListOk returns a tuple with the PublicFolderList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RootPublicFolder) GetPublicFolderListOk() (*[]PublicFolder, bool) {
	if o == nil || o.PublicFolderList == nil {
		return nil, false
	}
	return &o.PublicFolderList, true
}

// HasPublicFolderList returns a boolean if a field has been set.
func (o *RootPublicFolder) HasPublicFolderList() bool {
	if o != nil && o.PublicFolderList != nil {
		return true
	}

	return false
}

// SetPublicFolderList gets a reference to the given []PublicFolder and assigns it to the PublicFolderList field.
func (o *RootPublicFolder) SetPublicFolderList(v []PublicFolder) {
	o.PublicFolderList = v
}

// GetRestoreEntireRootPublicFolder returns the RestoreEntireRootPublicFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RootPublicFolder) GetRestoreEntireRootPublicFolder() bool {
	if o == nil || o.RestoreEntireRootPublicFolder.Get() == nil {
		var ret bool
		return ret
	}
	return *o.RestoreEntireRootPublicFolder.Get()
}

// GetRestoreEntireRootPublicFolderOk returns a tuple with the RestoreEntireRootPublicFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RootPublicFolder) GetRestoreEntireRootPublicFolderOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RestoreEntireRootPublicFolder.Get(), o.RestoreEntireRootPublicFolder.IsSet()
}

// HasRestoreEntireRootPublicFolder returns a boolean if a field has been set.
func (o *RootPublicFolder) HasRestoreEntireRootPublicFolder() bool {
	if o != nil && o.RestoreEntireRootPublicFolder.IsSet() {
		return true
	}

	return false
}

// SetRestoreEntireRootPublicFolder gets a reference to the given NullableBool and assigns it to the RestoreEntireRootPublicFolder field.
func (o *RootPublicFolder) SetRestoreEntireRootPublicFolder(v bool) {
	o.RestoreEntireRootPublicFolder.Set(&v)
}
// SetRestoreEntireRootPublicFolderNil sets the value for RestoreEntireRootPublicFolder to be an explicit nil
func (o *RootPublicFolder) SetRestoreEntireRootPublicFolderNil() {
	o.RestoreEntireRootPublicFolder.Set(nil)
}

// UnsetRestoreEntireRootPublicFolder ensures that no value is present for RestoreEntireRootPublicFolder, not even an explicit nil
func (o *RootPublicFolder) UnsetRestoreEntireRootPublicFolder() {
	o.RestoreEntireRootPublicFolder.Unset()
}

// GetRootPublicFolderObject returns the RootPublicFolderObject field value if set, zero value otherwise.
func (o *RootPublicFolder) GetRootPublicFolderObject() RestoreObjectDetails {
	if o == nil || o.RootPublicFolderObject == nil {
		var ret RestoreObjectDetails
		return ret
	}
	return *o.RootPublicFolderObject
}

// GetRootPublicFolderObjectOk returns a tuple with the RootPublicFolderObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootPublicFolder) GetRootPublicFolderObjectOk() (*RestoreObjectDetails, bool) {
	if o == nil || o.RootPublicFolderObject == nil {
		return nil, false
	}
	return o.RootPublicFolderObject, true
}

// HasRootPublicFolderObject returns a boolean if a field has been set.
func (o *RootPublicFolder) HasRootPublicFolderObject() bool {
	if o != nil && o.RootPublicFolderObject != nil {
		return true
	}

	return false
}

// SetRootPublicFolderObject gets a reference to the given RestoreObjectDetails and assigns it to the RootPublicFolderObject field.
func (o *RootPublicFolder) SetRootPublicFolderObject(v RestoreObjectDetails) {
	o.RootPublicFolderObject = &v
}

func (o RootPublicFolder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PublicFolderList != nil {
		toSerialize["publicFolderList"] = o.PublicFolderList
	}
	if o.RestoreEntireRootPublicFolder.IsSet() {
		toSerialize["restoreEntireRootPublicFolder"] = o.RestoreEntireRootPublicFolder.Get()
	}
	if o.RootPublicFolderObject != nil {
		toSerialize["rootPublicFolderObject"] = o.RootPublicFolderObject
	}
	return json.Marshal(toSerialize)
}

type NullableRootPublicFolder struct {
	value *RootPublicFolder
	isSet bool
}

func (v NullableRootPublicFolder) Get() *RootPublicFolder {
	return v.value
}

func (v *NullableRootPublicFolder) Set(val *RootPublicFolder) {
	v.value = val
	v.isSet = true
}

func (v NullableRootPublicFolder) IsSet() bool {
	return v.isSet
}

func (v *NullableRootPublicFolder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRootPublicFolder(val *RootPublicFolder) *NullableRootPublicFolder {
	return &NullableRootPublicFolder{value: val, isSet: true}
}

func (v NullableRootPublicFolder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRootPublicFolder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


