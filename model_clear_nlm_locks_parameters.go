/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ClearNlmLocksParameters Specifies parameters required to force clear NLM Locks.
type ClearNlmLocksParameters struct {
	// Specifies the id of the client, related NLM locks needs to be clear.
	ClientId NullableString `json:"clientId,omitempty"`
	// Specifies the filepath in the view relative to the root filesystem. If this field is specified, viewName field must also be specified.
	FilePath NullableString `json:"filePath,omitempty"`
	// Specifies the name of the View in which to search. If a view name is not specified, all the views in the Cluster is searched. This field is mandatory if filePath field is specified.
	ViewName NullableString `json:"viewName,omitempty"`
}

// NewClearNlmLocksParameters instantiates a new ClearNlmLocksParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClearNlmLocksParameters() *ClearNlmLocksParameters {
	this := ClearNlmLocksParameters{}
	return &this
}

// NewClearNlmLocksParametersWithDefaults instantiates a new ClearNlmLocksParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClearNlmLocksParametersWithDefaults() *ClearNlmLocksParameters {
	this := ClearNlmLocksParameters{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClearNlmLocksParameters) GetClientId() string {
	if o == nil || o.ClientId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClientId.Get()
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClearNlmLocksParameters) GetClientIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClientId.Get(), o.ClientId.IsSet()
}

// HasClientId returns a boolean if a field has been set.
func (o *ClearNlmLocksParameters) HasClientId() bool {
	if o != nil && o.ClientId.IsSet() {
		return true
	}

	return false
}

// SetClientId gets a reference to the given NullableString and assigns it to the ClientId field.
func (o *ClearNlmLocksParameters) SetClientId(v string) {
	o.ClientId.Set(&v)
}
// SetClientIdNil sets the value for ClientId to be an explicit nil
func (o *ClearNlmLocksParameters) SetClientIdNil() {
	o.ClientId.Set(nil)
}

// UnsetClientId ensures that no value is present for ClientId, not even an explicit nil
func (o *ClearNlmLocksParameters) UnsetClientId() {
	o.ClientId.Unset()
}

// GetFilePath returns the FilePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClearNlmLocksParameters) GetFilePath() string {
	if o == nil || o.FilePath.Get() == nil {
		var ret string
		return ret
	}
	return *o.FilePath.Get()
}

// GetFilePathOk returns a tuple with the FilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClearNlmLocksParameters) GetFilePathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FilePath.Get(), o.FilePath.IsSet()
}

// HasFilePath returns a boolean if a field has been set.
func (o *ClearNlmLocksParameters) HasFilePath() bool {
	if o != nil && o.FilePath.IsSet() {
		return true
	}

	return false
}

// SetFilePath gets a reference to the given NullableString and assigns it to the FilePath field.
func (o *ClearNlmLocksParameters) SetFilePath(v string) {
	o.FilePath.Set(&v)
}
// SetFilePathNil sets the value for FilePath to be an explicit nil
func (o *ClearNlmLocksParameters) SetFilePathNil() {
	o.FilePath.Set(nil)
}

// UnsetFilePath ensures that no value is present for FilePath, not even an explicit nil
func (o *ClearNlmLocksParameters) UnsetFilePath() {
	o.FilePath.Unset()
}

// GetViewName returns the ViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClearNlmLocksParameters) GetViewName() string {
	if o == nil || o.ViewName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ViewName.Get()
}

// GetViewNameOk returns a tuple with the ViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClearNlmLocksParameters) GetViewNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewName.Get(), o.ViewName.IsSet()
}

// HasViewName returns a boolean if a field has been set.
func (o *ClearNlmLocksParameters) HasViewName() bool {
	if o != nil && o.ViewName.IsSet() {
		return true
	}

	return false
}

// SetViewName gets a reference to the given NullableString and assigns it to the ViewName field.
func (o *ClearNlmLocksParameters) SetViewName(v string) {
	o.ViewName.Set(&v)
}
// SetViewNameNil sets the value for ViewName to be an explicit nil
func (o *ClearNlmLocksParameters) SetViewNameNil() {
	o.ViewName.Set(nil)
}

// UnsetViewName ensures that no value is present for ViewName, not even an explicit nil
func (o *ClearNlmLocksParameters) UnsetViewName() {
	o.ViewName.Unset()
}

func (o ClearNlmLocksParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId.IsSet() {
		toSerialize["clientId"] = o.ClientId.Get()
	}
	if o.FilePath.IsSet() {
		toSerialize["filePath"] = o.FilePath.Get()
	}
	if o.ViewName.IsSet() {
		toSerialize["viewName"] = o.ViewName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableClearNlmLocksParameters struct {
	value *ClearNlmLocksParameters
	isSet bool
}

func (v NullableClearNlmLocksParameters) Get() *ClearNlmLocksParameters {
	return v.value
}

func (v *NullableClearNlmLocksParameters) Set(val *ClearNlmLocksParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableClearNlmLocksParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableClearNlmLocksParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClearNlmLocksParameters(val *ClearNlmLocksParameters) *NullableClearNlmLocksParameters {
	return &NullableClearNlmLocksParameters{value: val, isSet: true}
}

func (v NullableClearNlmLocksParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClearNlmLocksParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


