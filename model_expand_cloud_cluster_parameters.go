/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ExpandCloudClusterParameters Specifies the parameters needed to expand a Cohesity Cloud Edition Cluster.
type ExpandCloudClusterParameters struct {
	// Specifies the list of IPs of the new Nodes.
	NodeIps []string `json:"nodeIps"`
}

// NewExpandCloudClusterParameters instantiates a new ExpandCloudClusterParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExpandCloudClusterParameters(nodeIps []string) *ExpandCloudClusterParameters {
	this := ExpandCloudClusterParameters{}
	this.NodeIps = nodeIps
	return &this
}

// NewExpandCloudClusterParametersWithDefaults instantiates a new ExpandCloudClusterParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExpandCloudClusterParametersWithDefaults() *ExpandCloudClusterParameters {
	this := ExpandCloudClusterParameters{}
	return &this
}

// GetNodeIps returns the NodeIps field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *ExpandCloudClusterParameters) GetNodeIps() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.NodeIps
}

// GetNodeIpsOk returns a tuple with the NodeIps field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExpandCloudClusterParameters) GetNodeIpsOk() (*[]string, bool) {
	if o == nil || o.NodeIps == nil {
		return nil, false
	}
	return &o.NodeIps, true
}

// SetNodeIps sets field value
func (o *ExpandCloudClusterParameters) SetNodeIps(v []string) {
	o.NodeIps = v
}

func (o ExpandCloudClusterParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NodeIps != nil {
		toSerialize["nodeIps"] = o.NodeIps
	}
	return json.Marshal(toSerialize)
}

type NullableExpandCloudClusterParameters struct {
	value *ExpandCloudClusterParameters
	isSet bool
}

func (v NullableExpandCloudClusterParameters) Get() *ExpandCloudClusterParameters {
	return v.value
}

func (v *NullableExpandCloudClusterParameters) Set(val *ExpandCloudClusterParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableExpandCloudClusterParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableExpandCloudClusterParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExpandCloudClusterParameters(val *ExpandCloudClusterParameters) *NullableExpandCloudClusterParameters {
	return &NullableExpandCloudClusterParameters{value: val, isSet: true}
}

func (v NullableExpandCloudClusterParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExpandCloudClusterParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


