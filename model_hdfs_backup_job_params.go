/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// HdfsBackupJobParams Contains any additional hdfs environment specific backup params at the job level.
type HdfsBackupJobParams struct {
	// Any path/Glob pattern from HDFS that is to excluded.
	HdfsExcludePattern []string `json:"hdfsExcludePattern,omitempty"`
	// Any path/Glob pattern from HDFS that is to protected.
	HdfsProtectPattern []string `json:"hdfsProtectPattern,omitempty"`
}

// NewHdfsBackupJobParams instantiates a new HdfsBackupJobParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHdfsBackupJobParams() *HdfsBackupJobParams {
	this := HdfsBackupJobParams{}
	return &this
}

// NewHdfsBackupJobParamsWithDefaults instantiates a new HdfsBackupJobParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHdfsBackupJobParamsWithDefaults() *HdfsBackupJobParams {
	this := HdfsBackupJobParams{}
	return &this
}

// GetHdfsExcludePattern returns the HdfsExcludePattern field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HdfsBackupJobParams) GetHdfsExcludePattern() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.HdfsExcludePattern
}

// GetHdfsExcludePatternOk returns a tuple with the HdfsExcludePattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HdfsBackupJobParams) GetHdfsExcludePatternOk() (*[]string, bool) {
	if o == nil || o.HdfsExcludePattern == nil {
		return nil, false
	}
	return &o.HdfsExcludePattern, true
}

// HasHdfsExcludePattern returns a boolean if a field has been set.
func (o *HdfsBackupJobParams) HasHdfsExcludePattern() bool {
	if o != nil && o.HdfsExcludePattern != nil {
		return true
	}

	return false
}

// SetHdfsExcludePattern gets a reference to the given []string and assigns it to the HdfsExcludePattern field.
func (o *HdfsBackupJobParams) SetHdfsExcludePattern(v []string) {
	o.HdfsExcludePattern = v
}

// GetHdfsProtectPattern returns the HdfsProtectPattern field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HdfsBackupJobParams) GetHdfsProtectPattern() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.HdfsProtectPattern
}

// GetHdfsProtectPatternOk returns a tuple with the HdfsProtectPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HdfsBackupJobParams) GetHdfsProtectPatternOk() (*[]string, bool) {
	if o == nil || o.HdfsProtectPattern == nil {
		return nil, false
	}
	return &o.HdfsProtectPattern, true
}

// HasHdfsProtectPattern returns a boolean if a field has been set.
func (o *HdfsBackupJobParams) HasHdfsProtectPattern() bool {
	if o != nil && o.HdfsProtectPattern != nil {
		return true
	}

	return false
}

// SetHdfsProtectPattern gets a reference to the given []string and assigns it to the HdfsProtectPattern field.
func (o *HdfsBackupJobParams) SetHdfsProtectPattern(v []string) {
	o.HdfsProtectPattern = v
}

func (o HdfsBackupJobParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HdfsExcludePattern != nil {
		toSerialize["hdfsExcludePattern"] = o.HdfsExcludePattern
	}
	if o.HdfsProtectPattern != nil {
		toSerialize["hdfsProtectPattern"] = o.HdfsProtectPattern
	}
	return json.Marshal(toSerialize)
}

type NullableHdfsBackupJobParams struct {
	value *HdfsBackupJobParams
	isSet bool
}

func (v NullableHdfsBackupJobParams) Get() *HdfsBackupJobParams {
	return v.value
}

func (v *NullableHdfsBackupJobParams) Set(val *HdfsBackupJobParams) {
	v.value = val
	v.isSet = true
}

func (v NullableHdfsBackupJobParams) IsSet() bool {
	return v.isSet
}

func (v *NullableHdfsBackupJobParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHdfsBackupJobParams(val *HdfsBackupJobParams) *NullableHdfsBackupJobParams {
	return &NullableHdfsBackupJobParams{value: val, isSet: true}
}

func (v NullableHdfsBackupJobParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHdfsBackupJobParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


