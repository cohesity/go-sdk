/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ProtectionRunInstance Specifies the status of one Job Run. A Job Run can have one Backup Run and zero or more Copy Runs.
type ProtectionRunInstance struct {
	BackupRun *BackupRun `json:"backupRun,omitempty"`
	// Array of Copy Run Tasks.  Specifies details about the Copy tasks of this Job Run. A Copy task copies the captured snapshots to an external target or a Remote Cohesity Cluster.
	CopyRun []CopyRun `json:"copyRun,omitempty"`
	// Specifies the id of the Protection Job that was run.
	JobId NullableInt64 `json:"jobId,omitempty"`
	// Specifies the name of the Protection Job name that was run.
	JobName NullableString `json:"jobName,omitempty"`
	// Specifies the globally unique id of the Protection Job that was run.
	JobUid NullableUniversalId `json:"jobUid,omitempty"`
	ProtectionShellInfo *ProtectionShellInfo `json:"protectionShellInfo,omitempty"`
	// Specifies the Storage Domain (View Box) to store the backed up data. Specify the id of the Storage Domain (View Box).
	ViewBoxId NullableInt64 `json:"viewBoxId,omitempty"`
}

// NewProtectionRunInstance instantiates a new ProtectionRunInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionRunInstance() *ProtectionRunInstance {
	this := ProtectionRunInstance{}
	return &this
}

// NewProtectionRunInstanceWithDefaults instantiates a new ProtectionRunInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionRunInstanceWithDefaults() *ProtectionRunInstance {
	this := ProtectionRunInstance{}
	return &this
}

// GetBackupRun returns the BackupRun field value if set, zero value otherwise.
func (o *ProtectionRunInstance) GetBackupRun() BackupRun {
	if o == nil || o.BackupRun == nil {
		var ret BackupRun
		return ret
	}
	return *o.BackupRun
}

// GetBackupRunOk returns a tuple with the BackupRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionRunInstance) GetBackupRunOk() (*BackupRun, bool) {
	if o == nil || o.BackupRun == nil {
		return nil, false
	}
	return o.BackupRun, true
}

// HasBackupRun returns a boolean if a field has been set.
func (o *ProtectionRunInstance) HasBackupRun() bool {
	if o != nil && o.BackupRun != nil {
		return true
	}

	return false
}

// SetBackupRun gets a reference to the given BackupRun and assigns it to the BackupRun field.
func (o *ProtectionRunInstance) SetBackupRun(v BackupRun) {
	o.BackupRun = &v
}

// GetCopyRun returns the CopyRun field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunInstance) GetCopyRun() []CopyRun {
	if o == nil  {
		var ret []CopyRun
		return ret
	}
	return o.CopyRun
}

// GetCopyRunOk returns a tuple with the CopyRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunInstance) GetCopyRunOk() (*[]CopyRun, bool) {
	if o == nil || o.CopyRun == nil {
		return nil, false
	}
	return &o.CopyRun, true
}

// HasCopyRun returns a boolean if a field has been set.
func (o *ProtectionRunInstance) HasCopyRun() bool {
	if o != nil && o.CopyRun != nil {
		return true
	}

	return false
}

// SetCopyRun gets a reference to the given []CopyRun and assigns it to the CopyRun field.
func (o *ProtectionRunInstance) SetCopyRun(v []CopyRun) {
	o.CopyRun = v
}

// GetJobId returns the JobId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunInstance) GetJobId() int64 {
	if o == nil || o.JobId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.JobId.Get()
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunInstance) GetJobIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobId.Get(), o.JobId.IsSet()
}

// HasJobId returns a boolean if a field has been set.
func (o *ProtectionRunInstance) HasJobId() bool {
	if o != nil && o.JobId.IsSet() {
		return true
	}

	return false
}

// SetJobId gets a reference to the given NullableInt64 and assigns it to the JobId field.
func (o *ProtectionRunInstance) SetJobId(v int64) {
	o.JobId.Set(&v)
}
// SetJobIdNil sets the value for JobId to be an explicit nil
func (o *ProtectionRunInstance) SetJobIdNil() {
	o.JobId.Set(nil)
}

// UnsetJobId ensures that no value is present for JobId, not even an explicit nil
func (o *ProtectionRunInstance) UnsetJobId() {
	o.JobId.Unset()
}

// GetJobName returns the JobName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunInstance) GetJobName() string {
	if o == nil || o.JobName.Get() == nil {
		var ret string
		return ret
	}
	return *o.JobName.Get()
}

// GetJobNameOk returns a tuple with the JobName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunInstance) GetJobNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobName.Get(), o.JobName.IsSet()
}

// HasJobName returns a boolean if a field has been set.
func (o *ProtectionRunInstance) HasJobName() bool {
	if o != nil && o.JobName.IsSet() {
		return true
	}

	return false
}

// SetJobName gets a reference to the given NullableString and assigns it to the JobName field.
func (o *ProtectionRunInstance) SetJobName(v string) {
	o.JobName.Set(&v)
}
// SetJobNameNil sets the value for JobName to be an explicit nil
func (o *ProtectionRunInstance) SetJobNameNil() {
	o.JobName.Set(nil)
}

// UnsetJobName ensures that no value is present for JobName, not even an explicit nil
func (o *ProtectionRunInstance) UnsetJobName() {
	o.JobName.Unset()
}

// GetJobUid returns the JobUid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunInstance) GetJobUid() UniversalId {
	if o == nil || o.JobUid.Get() == nil {
		var ret UniversalId
		return ret
	}
	return *o.JobUid.Get()
}

// GetJobUidOk returns a tuple with the JobUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunInstance) GetJobUidOk() (*UniversalId, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobUid.Get(), o.JobUid.IsSet()
}

// HasJobUid returns a boolean if a field has been set.
func (o *ProtectionRunInstance) HasJobUid() bool {
	if o != nil && o.JobUid.IsSet() {
		return true
	}

	return false
}

// SetJobUid gets a reference to the given NullableUniversalId and assigns it to the JobUid field.
func (o *ProtectionRunInstance) SetJobUid(v UniversalId) {
	o.JobUid.Set(&v)
}
// SetJobUidNil sets the value for JobUid to be an explicit nil
func (o *ProtectionRunInstance) SetJobUidNil() {
	o.JobUid.Set(nil)
}

// UnsetJobUid ensures that no value is present for JobUid, not even an explicit nil
func (o *ProtectionRunInstance) UnsetJobUid() {
	o.JobUid.Unset()
}

// GetProtectionShellInfo returns the ProtectionShellInfo field value if set, zero value otherwise.
func (o *ProtectionRunInstance) GetProtectionShellInfo() ProtectionShellInfo {
	if o == nil || o.ProtectionShellInfo == nil {
		var ret ProtectionShellInfo
		return ret
	}
	return *o.ProtectionShellInfo
}

// GetProtectionShellInfoOk returns a tuple with the ProtectionShellInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionRunInstance) GetProtectionShellInfoOk() (*ProtectionShellInfo, bool) {
	if o == nil || o.ProtectionShellInfo == nil {
		return nil, false
	}
	return o.ProtectionShellInfo, true
}

// HasProtectionShellInfo returns a boolean if a field has been set.
func (o *ProtectionRunInstance) HasProtectionShellInfo() bool {
	if o != nil && o.ProtectionShellInfo != nil {
		return true
	}

	return false
}

// SetProtectionShellInfo gets a reference to the given ProtectionShellInfo and assigns it to the ProtectionShellInfo field.
func (o *ProtectionRunInstance) SetProtectionShellInfo(v ProtectionShellInfo) {
	o.ProtectionShellInfo = &v
}

// GetViewBoxId returns the ViewBoxId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunInstance) GetViewBoxId() int64 {
	if o == nil || o.ViewBoxId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ViewBoxId.Get()
}

// GetViewBoxIdOk returns a tuple with the ViewBoxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunInstance) GetViewBoxIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewBoxId.Get(), o.ViewBoxId.IsSet()
}

// HasViewBoxId returns a boolean if a field has been set.
func (o *ProtectionRunInstance) HasViewBoxId() bool {
	if o != nil && o.ViewBoxId.IsSet() {
		return true
	}

	return false
}

// SetViewBoxId gets a reference to the given NullableInt64 and assigns it to the ViewBoxId field.
func (o *ProtectionRunInstance) SetViewBoxId(v int64) {
	o.ViewBoxId.Set(&v)
}
// SetViewBoxIdNil sets the value for ViewBoxId to be an explicit nil
func (o *ProtectionRunInstance) SetViewBoxIdNil() {
	o.ViewBoxId.Set(nil)
}

// UnsetViewBoxId ensures that no value is present for ViewBoxId, not even an explicit nil
func (o *ProtectionRunInstance) UnsetViewBoxId() {
	o.ViewBoxId.Unset()
}

func (o ProtectionRunInstance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BackupRun != nil {
		toSerialize["backupRun"] = o.BackupRun
	}
	if o.CopyRun != nil {
		toSerialize["copyRun"] = o.CopyRun
	}
	if o.JobId.IsSet() {
		toSerialize["jobId"] = o.JobId.Get()
	}
	if o.JobName.IsSet() {
		toSerialize["jobName"] = o.JobName.Get()
	}
	if o.JobUid.IsSet() {
		toSerialize["jobUid"] = o.JobUid.Get()
	}
	if o.ProtectionShellInfo != nil {
		toSerialize["protectionShellInfo"] = o.ProtectionShellInfo
	}
	if o.ViewBoxId.IsSet() {
		toSerialize["viewBoxId"] = o.ViewBoxId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProtectionRunInstance struct {
	value *ProtectionRunInstance
	isSet bool
}

func (v NullableProtectionRunInstance) Get() *ProtectionRunInstance {
	return v.value
}

func (v *NullableProtectionRunInstance) Set(val *ProtectionRunInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionRunInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionRunInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionRunInstance(val *ProtectionRunInstance) *NullableProtectionRunInstance {
	return &NullableProtectionRunInstance{value: val, isSet: true}
}

func (v NullableProtectionRunInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionRunInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


