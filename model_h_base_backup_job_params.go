/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// HBaseBackupJobParams Contains any additional hbase environment specific backup params at the job level.
type HBaseBackupJobParams struct {
	HdfsConnectParams *HdfsConnectParams `json:"hdfsConnectParams,omitempty"`
}

// NewHBaseBackupJobParams instantiates a new HBaseBackupJobParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHBaseBackupJobParams() *HBaseBackupJobParams {
	this := HBaseBackupJobParams{}
	return &this
}

// NewHBaseBackupJobParamsWithDefaults instantiates a new HBaseBackupJobParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHBaseBackupJobParamsWithDefaults() *HBaseBackupJobParams {
	this := HBaseBackupJobParams{}
	return &this
}

// GetHdfsConnectParams returns the HdfsConnectParams field value if set, zero value otherwise.
func (o *HBaseBackupJobParams) GetHdfsConnectParams() HdfsConnectParams {
	if o == nil || o.HdfsConnectParams == nil {
		var ret HdfsConnectParams
		return ret
	}
	return *o.HdfsConnectParams
}

// GetHdfsConnectParamsOk returns a tuple with the HdfsConnectParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HBaseBackupJobParams) GetHdfsConnectParamsOk() (*HdfsConnectParams, bool) {
	if o == nil || o.HdfsConnectParams == nil {
		return nil, false
	}
	return o.HdfsConnectParams, true
}

// HasHdfsConnectParams returns a boolean if a field has been set.
func (o *HBaseBackupJobParams) HasHdfsConnectParams() bool {
	if o != nil && o.HdfsConnectParams != nil {
		return true
	}

	return false
}

// SetHdfsConnectParams gets a reference to the given HdfsConnectParams and assigns it to the HdfsConnectParams field.
func (o *HBaseBackupJobParams) SetHdfsConnectParams(v HdfsConnectParams) {
	o.HdfsConnectParams = &v
}

func (o HBaseBackupJobParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HdfsConnectParams != nil {
		toSerialize["hdfsConnectParams"] = o.HdfsConnectParams
	}
	return json.Marshal(toSerialize)
}

type NullableHBaseBackupJobParams struct {
	value *HBaseBackupJobParams
	isSet bool
}

func (v NullableHBaseBackupJobParams) Get() *HBaseBackupJobParams {
	return v.value
}

func (v *NullableHBaseBackupJobParams) Set(val *HBaseBackupJobParams) {
	v.value = val
	v.isSet = true
}

func (v NullableHBaseBackupJobParams) IsSet() bool {
	return v.isSet
}

func (v *NullableHBaseBackupJobParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHBaseBackupJobParams(val *HBaseBackupJobParams) *NullableHBaseBackupJobParams {
	return &NullableHBaseBackupJobParams{value: val, isSet: true}
}

func (v NullableHBaseBackupJobParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHBaseBackupJobParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


