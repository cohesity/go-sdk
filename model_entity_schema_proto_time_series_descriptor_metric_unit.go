/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// EntitySchemaProtoTimeSeriesDescriptorMetricUnit Specifies the unit of measure for the metric. O specifies a unit of space used such as free disk space. 1 specifies a Unix epoch Timestamp (in microseconds). 2 specifies a Unix epoch Timestamp (in milliseconds). 3 specifies a Unix epoch Timestamp (in seconds). 4 specifies a Unix epoch Timestamp (in minutes). 5 specifies a counter such as the read IO metric. 6 specifies the temperature in Centigrade. 7 specifies the temperature in Fahrenheit. 8 specifies revolutions per minute such as a CPU fan speed. 9 specifies a percentage such as CPU or memory usage.
type EntitySchemaProtoTimeSeriesDescriptorMetricUnit struct {
	Type NullableInt32 `json:"type,omitempty"`
}

// NewEntitySchemaProtoTimeSeriesDescriptorMetricUnit instantiates a new EntitySchemaProtoTimeSeriesDescriptorMetricUnit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitySchemaProtoTimeSeriesDescriptorMetricUnit() *EntitySchemaProtoTimeSeriesDescriptorMetricUnit {
	this := EntitySchemaProtoTimeSeriesDescriptorMetricUnit{}
	return &this
}

// NewEntitySchemaProtoTimeSeriesDescriptorMetricUnitWithDefaults instantiates a new EntitySchemaProtoTimeSeriesDescriptorMetricUnit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitySchemaProtoTimeSeriesDescriptorMetricUnitWithDefaults() *EntitySchemaProtoTimeSeriesDescriptorMetricUnit {
	this := EntitySchemaProtoTimeSeriesDescriptorMetricUnit{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EntitySchemaProtoTimeSeriesDescriptorMetricUnit) GetType() int32 {
	if o == nil || o.Type.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EntitySchemaProtoTimeSeriesDescriptorMetricUnit) GetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *EntitySchemaProtoTimeSeriesDescriptorMetricUnit) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableInt32 and assigns it to the Type field.
func (o *EntitySchemaProtoTimeSeriesDescriptorMetricUnit) SetType(v int32) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *EntitySchemaProtoTimeSeriesDescriptorMetricUnit) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *EntitySchemaProtoTimeSeriesDescriptorMetricUnit) UnsetType() {
	o.Type.Unset()
}

func (o EntitySchemaProtoTimeSeriesDescriptorMetricUnit) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableEntitySchemaProtoTimeSeriesDescriptorMetricUnit struct {
	value *EntitySchemaProtoTimeSeriesDescriptorMetricUnit
	isSet bool
}

func (v NullableEntitySchemaProtoTimeSeriesDescriptorMetricUnit) Get() *EntitySchemaProtoTimeSeriesDescriptorMetricUnit {
	return v.value
}

func (v *NullableEntitySchemaProtoTimeSeriesDescriptorMetricUnit) Set(val *EntitySchemaProtoTimeSeriesDescriptorMetricUnit) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitySchemaProtoTimeSeriesDescriptorMetricUnit) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitySchemaProtoTimeSeriesDescriptorMetricUnit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitySchemaProtoTimeSeriesDescriptorMetricUnit(val *EntitySchemaProtoTimeSeriesDescriptorMetricUnit) *NullableEntitySchemaProtoTimeSeriesDescriptorMetricUnit {
	return &NullableEntitySchemaProtoTimeSeriesDescriptorMetricUnit{value: val, isSet: true}
}

func (v NullableEntitySchemaProtoTimeSeriesDescriptorMetricUnit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitySchemaProtoTimeSeriesDescriptorMetricUnit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


