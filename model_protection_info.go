/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ProtectionInfo dataLocation defines data location related information.
type ProtectionInfo struct {
	// Specifies the end time for object retention.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	// Specifies the location of the object.
	Location NullableString `json:"location,omitempty"`
	// Specifies the id of the policy.
	PolicyId NullableString `json:"policyId,omitempty"`
	// Specifies the id of the protection job.
	ProtectionJobId NullableInt64 `json:"protectionJobId,omitempty"`
	// Specifies the protection job name which protects this object.
	ProtectionJobName NullableString `json:"protectionJobName,omitempty"`
	// Specifies the retention period.
	RetentionPeriod NullableInt64 `json:"retentionPeriod,omitempty"`
	// Specifies the start time for object retention.
	StartTimeUsecs NullableInt64 `json:"startTimeUsecs,omitempty"`
	// Specifies the storage domain name.
	StorageDomain NullableString `json:"storageDomain,omitempty"`
	// Specifies the total number of snapshots.
	TotalSnapshots NullableInt64 `json:"totalSnapshots,omitempty"`
}

// NewProtectionInfo instantiates a new ProtectionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionInfo() *ProtectionInfo {
	this := ProtectionInfo{}
	return &this
}

// NewProtectionInfoWithDefaults instantiates a new ProtectionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionInfoWithDefaults() *ProtectionInfo {
	this := ProtectionInfo{}
	return &this
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionInfo) GetEndTimeUsecs() int64 {
	if o == nil || o.EndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionInfo) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionInfo) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *ProtectionInfo) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *ProtectionInfo) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *ProtectionInfo) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionInfo) GetLocation() string {
	if o == nil || o.Location.Get() == nil {
		var ret string
		return ret
	}
	return *o.Location.Get()
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionInfo) GetLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Location.Get(), o.Location.IsSet()
}

// HasLocation returns a boolean if a field has been set.
func (o *ProtectionInfo) HasLocation() bool {
	if o != nil && o.Location.IsSet() {
		return true
	}

	return false
}

// SetLocation gets a reference to the given NullableString and assigns it to the Location field.
func (o *ProtectionInfo) SetLocation(v string) {
	o.Location.Set(&v)
}
// SetLocationNil sets the value for Location to be an explicit nil
func (o *ProtectionInfo) SetLocationNil() {
	o.Location.Set(nil)
}

// UnsetLocation ensures that no value is present for Location, not even an explicit nil
func (o *ProtectionInfo) UnsetLocation() {
	o.Location.Unset()
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionInfo) GetPolicyId() string {
	if o == nil || o.PolicyId.Get() == nil {
		var ret string
		return ret
	}
	return *o.PolicyId.Get()
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionInfo) GetPolicyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PolicyId.Get(), o.PolicyId.IsSet()
}

// HasPolicyId returns a boolean if a field has been set.
func (o *ProtectionInfo) HasPolicyId() bool {
	if o != nil && o.PolicyId.IsSet() {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given NullableString and assigns it to the PolicyId field.
func (o *ProtectionInfo) SetPolicyId(v string) {
	o.PolicyId.Set(&v)
}
// SetPolicyIdNil sets the value for PolicyId to be an explicit nil
func (o *ProtectionInfo) SetPolicyIdNil() {
	o.PolicyId.Set(nil)
}

// UnsetPolicyId ensures that no value is present for PolicyId, not even an explicit nil
func (o *ProtectionInfo) UnsetPolicyId() {
	o.PolicyId.Unset()
}

// GetProtectionJobId returns the ProtectionJobId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionInfo) GetProtectionJobId() int64 {
	if o == nil || o.ProtectionJobId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ProtectionJobId.Get()
}

// GetProtectionJobIdOk returns a tuple with the ProtectionJobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionInfo) GetProtectionJobIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionJobId.Get(), o.ProtectionJobId.IsSet()
}

// HasProtectionJobId returns a boolean if a field has been set.
func (o *ProtectionInfo) HasProtectionJobId() bool {
	if o != nil && o.ProtectionJobId.IsSet() {
		return true
	}

	return false
}

// SetProtectionJobId gets a reference to the given NullableInt64 and assigns it to the ProtectionJobId field.
func (o *ProtectionInfo) SetProtectionJobId(v int64) {
	o.ProtectionJobId.Set(&v)
}
// SetProtectionJobIdNil sets the value for ProtectionJobId to be an explicit nil
func (o *ProtectionInfo) SetProtectionJobIdNil() {
	o.ProtectionJobId.Set(nil)
}

// UnsetProtectionJobId ensures that no value is present for ProtectionJobId, not even an explicit nil
func (o *ProtectionInfo) UnsetProtectionJobId() {
	o.ProtectionJobId.Unset()
}

// GetProtectionJobName returns the ProtectionJobName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionInfo) GetProtectionJobName() string {
	if o == nil || o.ProtectionJobName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProtectionJobName.Get()
}

// GetProtectionJobNameOk returns a tuple with the ProtectionJobName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionInfo) GetProtectionJobNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionJobName.Get(), o.ProtectionJobName.IsSet()
}

// HasProtectionJobName returns a boolean if a field has been set.
func (o *ProtectionInfo) HasProtectionJobName() bool {
	if o != nil && o.ProtectionJobName.IsSet() {
		return true
	}

	return false
}

// SetProtectionJobName gets a reference to the given NullableString and assigns it to the ProtectionJobName field.
func (o *ProtectionInfo) SetProtectionJobName(v string) {
	o.ProtectionJobName.Set(&v)
}
// SetProtectionJobNameNil sets the value for ProtectionJobName to be an explicit nil
func (o *ProtectionInfo) SetProtectionJobNameNil() {
	o.ProtectionJobName.Set(nil)
}

// UnsetProtectionJobName ensures that no value is present for ProtectionJobName, not even an explicit nil
func (o *ProtectionInfo) UnsetProtectionJobName() {
	o.ProtectionJobName.Unset()
}

// GetRetentionPeriod returns the RetentionPeriod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionInfo) GetRetentionPeriod() int64 {
	if o == nil || o.RetentionPeriod.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RetentionPeriod.Get()
}

// GetRetentionPeriodOk returns a tuple with the RetentionPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionInfo) GetRetentionPeriodOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RetentionPeriod.Get(), o.RetentionPeriod.IsSet()
}

// HasRetentionPeriod returns a boolean if a field has been set.
func (o *ProtectionInfo) HasRetentionPeriod() bool {
	if o != nil && o.RetentionPeriod.IsSet() {
		return true
	}

	return false
}

// SetRetentionPeriod gets a reference to the given NullableInt64 and assigns it to the RetentionPeriod field.
func (o *ProtectionInfo) SetRetentionPeriod(v int64) {
	o.RetentionPeriod.Set(&v)
}
// SetRetentionPeriodNil sets the value for RetentionPeriod to be an explicit nil
func (o *ProtectionInfo) SetRetentionPeriodNil() {
	o.RetentionPeriod.Set(nil)
}

// UnsetRetentionPeriod ensures that no value is present for RetentionPeriod, not even an explicit nil
func (o *ProtectionInfo) UnsetRetentionPeriod() {
	o.RetentionPeriod.Unset()
}

// GetStartTimeUsecs returns the StartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionInfo) GetStartTimeUsecs() int64 {
	if o == nil || o.StartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StartTimeUsecs.Get()
}

// GetStartTimeUsecsOk returns a tuple with the StartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionInfo) GetStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartTimeUsecs.Get(), o.StartTimeUsecs.IsSet()
}

// HasStartTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionInfo) HasStartTimeUsecs() bool {
	if o != nil && o.StartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the StartTimeUsecs field.
func (o *ProtectionInfo) SetStartTimeUsecs(v int64) {
	o.StartTimeUsecs.Set(&v)
}
// SetStartTimeUsecsNil sets the value for StartTimeUsecs to be an explicit nil
func (o *ProtectionInfo) SetStartTimeUsecsNil() {
	o.StartTimeUsecs.Set(nil)
}

// UnsetStartTimeUsecs ensures that no value is present for StartTimeUsecs, not even an explicit nil
func (o *ProtectionInfo) UnsetStartTimeUsecs() {
	o.StartTimeUsecs.Unset()
}

// GetStorageDomain returns the StorageDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionInfo) GetStorageDomain() string {
	if o == nil || o.StorageDomain.Get() == nil {
		var ret string
		return ret
	}
	return *o.StorageDomain.Get()
}

// GetStorageDomainOk returns a tuple with the StorageDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionInfo) GetStorageDomainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StorageDomain.Get(), o.StorageDomain.IsSet()
}

// HasStorageDomain returns a boolean if a field has been set.
func (o *ProtectionInfo) HasStorageDomain() bool {
	if o != nil && o.StorageDomain.IsSet() {
		return true
	}

	return false
}

// SetStorageDomain gets a reference to the given NullableString and assigns it to the StorageDomain field.
func (o *ProtectionInfo) SetStorageDomain(v string) {
	o.StorageDomain.Set(&v)
}
// SetStorageDomainNil sets the value for StorageDomain to be an explicit nil
func (o *ProtectionInfo) SetStorageDomainNil() {
	o.StorageDomain.Set(nil)
}

// UnsetStorageDomain ensures that no value is present for StorageDomain, not even an explicit nil
func (o *ProtectionInfo) UnsetStorageDomain() {
	o.StorageDomain.Unset()
}

// GetTotalSnapshots returns the TotalSnapshots field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionInfo) GetTotalSnapshots() int64 {
	if o == nil || o.TotalSnapshots.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalSnapshots.Get()
}

// GetTotalSnapshotsOk returns a tuple with the TotalSnapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionInfo) GetTotalSnapshotsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalSnapshots.Get(), o.TotalSnapshots.IsSet()
}

// HasTotalSnapshots returns a boolean if a field has been set.
func (o *ProtectionInfo) HasTotalSnapshots() bool {
	if o != nil && o.TotalSnapshots.IsSet() {
		return true
	}

	return false
}

// SetTotalSnapshots gets a reference to the given NullableInt64 and assigns it to the TotalSnapshots field.
func (o *ProtectionInfo) SetTotalSnapshots(v int64) {
	o.TotalSnapshots.Set(&v)
}
// SetTotalSnapshotsNil sets the value for TotalSnapshots to be an explicit nil
func (o *ProtectionInfo) SetTotalSnapshotsNil() {
	o.TotalSnapshots.Set(nil)
}

// UnsetTotalSnapshots ensures that no value is present for TotalSnapshots, not even an explicit nil
func (o *ProtectionInfo) UnsetTotalSnapshots() {
	o.TotalSnapshots.Unset()
}

func (o ProtectionInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.Location.IsSet() {
		toSerialize["location"] = o.Location.Get()
	}
	if o.PolicyId.IsSet() {
		toSerialize["policyId"] = o.PolicyId.Get()
	}
	if o.ProtectionJobId.IsSet() {
		toSerialize["protectionJobId"] = o.ProtectionJobId.Get()
	}
	if o.ProtectionJobName.IsSet() {
		toSerialize["protectionJobName"] = o.ProtectionJobName.Get()
	}
	if o.RetentionPeriod.IsSet() {
		toSerialize["retentionPeriod"] = o.RetentionPeriod.Get()
	}
	if o.StartTimeUsecs.IsSet() {
		toSerialize["startTimeUsecs"] = o.StartTimeUsecs.Get()
	}
	if o.StorageDomain.IsSet() {
		toSerialize["storageDomain"] = o.StorageDomain.Get()
	}
	if o.TotalSnapshots.IsSet() {
		toSerialize["totalSnapshots"] = o.TotalSnapshots.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProtectionInfo struct {
	value *ProtectionInfo
	isSet bool
}

func (v NullableProtectionInfo) Get() *ProtectionInfo {
	return v.value
}

func (v *NullableProtectionInfo) Set(val *ProtectionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionInfo(val *ProtectionInfo) *NullableProtectionInfo {
	return &NullableProtectionInfo{value: val, isSet: true}
}

func (v NullableProtectionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


