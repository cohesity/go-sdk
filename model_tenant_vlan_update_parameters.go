/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// TenantVlanUpdateParameters Specifies vlan update details about a tenant.
type TenantVlanUpdateParameters struct {
	// Specifies the unique id of the tenant.
	TenantId NullableString `json:"tenantId,omitempty"`
	// Specifies the VlanIfaceNames for respective tenant, in the format of bond1.200.
	VlanIfaceNames []string `json:"vlanIfaceNames,omitempty"`
}

// NewTenantVlanUpdateParameters instantiates a new TenantVlanUpdateParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantVlanUpdateParameters() *TenantVlanUpdateParameters {
	this := TenantVlanUpdateParameters{}
	return &this
}

// NewTenantVlanUpdateParametersWithDefaults instantiates a new TenantVlanUpdateParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantVlanUpdateParametersWithDefaults() *TenantVlanUpdateParameters {
	this := TenantVlanUpdateParameters{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantVlanUpdateParameters) GetTenantId() string {
	if o == nil || o.TenantId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantVlanUpdateParameters) GetTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *TenantVlanUpdateParameters) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *TenantVlanUpdateParameters) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *TenantVlanUpdateParameters) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *TenantVlanUpdateParameters) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetVlanIfaceNames returns the VlanIfaceNames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantVlanUpdateParameters) GetVlanIfaceNames() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.VlanIfaceNames
}

// GetVlanIfaceNamesOk returns a tuple with the VlanIfaceNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantVlanUpdateParameters) GetVlanIfaceNamesOk() (*[]string, bool) {
	if o == nil || o.VlanIfaceNames == nil {
		return nil, false
	}
	return &o.VlanIfaceNames, true
}

// HasVlanIfaceNames returns a boolean if a field has been set.
func (o *TenantVlanUpdateParameters) HasVlanIfaceNames() bool {
	if o != nil && o.VlanIfaceNames != nil {
		return true
	}

	return false
}

// SetVlanIfaceNames gets a reference to the given []string and assigns it to the VlanIfaceNames field.
func (o *TenantVlanUpdateParameters) SetVlanIfaceNames(v []string) {
	o.VlanIfaceNames = v
}

func (o TenantVlanUpdateParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.VlanIfaceNames != nil {
		toSerialize["vlanIfaceNames"] = o.VlanIfaceNames
	}
	return json.Marshal(toSerialize)
}

type NullableTenantVlanUpdateParameters struct {
	value *TenantVlanUpdateParameters
	isSet bool
}

func (v NullableTenantVlanUpdateParameters) Get() *TenantVlanUpdateParameters {
	return v.value
}

func (v *NullableTenantVlanUpdateParameters) Set(val *TenantVlanUpdateParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantVlanUpdateParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantVlanUpdateParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantVlanUpdateParameters(val *TenantVlanUpdateParameters) *NullableTenantVlanUpdateParameters {
	return &NullableTenantVlanUpdateParameters{value: val, isSet: true}
}

func (v NullableTenantVlanUpdateParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantVlanUpdateParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


