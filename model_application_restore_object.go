/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ApplicationRestoreObject Specifies the Application Server to restore and parameters specific to that application.
type ApplicationRestoreObject struct {
	AdRestoreParameters *AdRestoreParameters `json:"adRestoreParameters,omitempty"`
	// Specifies the Application Server to restore (for example, kSQL).
	ApplicationServerId NullableInt64 `json:"applicationServerId,omitempty"`
	ExchangeRestoreParameters *ExchangeRestoreParameters `json:"exchangeRestoreParameters,omitempty"`
	SqlRestoreParameters *SqlRestoreParameters `json:"sqlRestoreParameters,omitempty"`
	// Specifies the target host if the application is to be restored to a different host. If this is empty, then the application is restored to the original host, which is the hosting Protection Source.
	TargetHostId NullableInt64 `json:"targetHostId,omitempty"`
	// Specifies the registered root node, like vCenter, of targetHost. If this is empty, then it is assumed the root node of the target host is the same as the host Protection Source of the application.
	TargetRootNodeId NullableInt64 `json:"targetRootNodeId,omitempty"`
}

// NewApplicationRestoreObject instantiates a new ApplicationRestoreObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationRestoreObject() *ApplicationRestoreObject {
	this := ApplicationRestoreObject{}
	return &this
}

// NewApplicationRestoreObjectWithDefaults instantiates a new ApplicationRestoreObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationRestoreObjectWithDefaults() *ApplicationRestoreObject {
	this := ApplicationRestoreObject{}
	return &this
}

// GetAdRestoreParameters returns the AdRestoreParameters field value if set, zero value otherwise.
func (o *ApplicationRestoreObject) GetAdRestoreParameters() AdRestoreParameters {
	if o == nil || o.AdRestoreParameters == nil {
		var ret AdRestoreParameters
		return ret
	}
	return *o.AdRestoreParameters
}

// GetAdRestoreParametersOk returns a tuple with the AdRestoreParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationRestoreObject) GetAdRestoreParametersOk() (*AdRestoreParameters, bool) {
	if o == nil || o.AdRestoreParameters == nil {
		return nil, false
	}
	return o.AdRestoreParameters, true
}

// HasAdRestoreParameters returns a boolean if a field has been set.
func (o *ApplicationRestoreObject) HasAdRestoreParameters() bool {
	if o != nil && o.AdRestoreParameters != nil {
		return true
	}

	return false
}

// SetAdRestoreParameters gets a reference to the given AdRestoreParameters and assigns it to the AdRestoreParameters field.
func (o *ApplicationRestoreObject) SetAdRestoreParameters(v AdRestoreParameters) {
	o.AdRestoreParameters = &v
}

// GetApplicationServerId returns the ApplicationServerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationRestoreObject) GetApplicationServerId() int64 {
	if o == nil || o.ApplicationServerId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ApplicationServerId.Get()
}

// GetApplicationServerIdOk returns a tuple with the ApplicationServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationRestoreObject) GetApplicationServerIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ApplicationServerId.Get(), o.ApplicationServerId.IsSet()
}

// HasApplicationServerId returns a boolean if a field has been set.
func (o *ApplicationRestoreObject) HasApplicationServerId() bool {
	if o != nil && o.ApplicationServerId.IsSet() {
		return true
	}

	return false
}

// SetApplicationServerId gets a reference to the given NullableInt64 and assigns it to the ApplicationServerId field.
func (o *ApplicationRestoreObject) SetApplicationServerId(v int64) {
	o.ApplicationServerId.Set(&v)
}
// SetApplicationServerIdNil sets the value for ApplicationServerId to be an explicit nil
func (o *ApplicationRestoreObject) SetApplicationServerIdNil() {
	o.ApplicationServerId.Set(nil)
}

// UnsetApplicationServerId ensures that no value is present for ApplicationServerId, not even an explicit nil
func (o *ApplicationRestoreObject) UnsetApplicationServerId() {
	o.ApplicationServerId.Unset()
}

// GetExchangeRestoreParameters returns the ExchangeRestoreParameters field value if set, zero value otherwise.
func (o *ApplicationRestoreObject) GetExchangeRestoreParameters() ExchangeRestoreParameters {
	if o == nil || o.ExchangeRestoreParameters == nil {
		var ret ExchangeRestoreParameters
		return ret
	}
	return *o.ExchangeRestoreParameters
}

// GetExchangeRestoreParametersOk returns a tuple with the ExchangeRestoreParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationRestoreObject) GetExchangeRestoreParametersOk() (*ExchangeRestoreParameters, bool) {
	if o == nil || o.ExchangeRestoreParameters == nil {
		return nil, false
	}
	return o.ExchangeRestoreParameters, true
}

// HasExchangeRestoreParameters returns a boolean if a field has been set.
func (o *ApplicationRestoreObject) HasExchangeRestoreParameters() bool {
	if o != nil && o.ExchangeRestoreParameters != nil {
		return true
	}

	return false
}

// SetExchangeRestoreParameters gets a reference to the given ExchangeRestoreParameters and assigns it to the ExchangeRestoreParameters field.
func (o *ApplicationRestoreObject) SetExchangeRestoreParameters(v ExchangeRestoreParameters) {
	o.ExchangeRestoreParameters = &v
}

// GetSqlRestoreParameters returns the SqlRestoreParameters field value if set, zero value otherwise.
func (o *ApplicationRestoreObject) GetSqlRestoreParameters() SqlRestoreParameters {
	if o == nil || o.SqlRestoreParameters == nil {
		var ret SqlRestoreParameters
		return ret
	}
	return *o.SqlRestoreParameters
}

// GetSqlRestoreParametersOk returns a tuple with the SqlRestoreParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationRestoreObject) GetSqlRestoreParametersOk() (*SqlRestoreParameters, bool) {
	if o == nil || o.SqlRestoreParameters == nil {
		return nil, false
	}
	return o.SqlRestoreParameters, true
}

// HasSqlRestoreParameters returns a boolean if a field has been set.
func (o *ApplicationRestoreObject) HasSqlRestoreParameters() bool {
	if o != nil && o.SqlRestoreParameters != nil {
		return true
	}

	return false
}

// SetSqlRestoreParameters gets a reference to the given SqlRestoreParameters and assigns it to the SqlRestoreParameters field.
func (o *ApplicationRestoreObject) SetSqlRestoreParameters(v SqlRestoreParameters) {
	o.SqlRestoreParameters = &v
}

// GetTargetHostId returns the TargetHostId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationRestoreObject) GetTargetHostId() int64 {
	if o == nil || o.TargetHostId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TargetHostId.Get()
}

// GetTargetHostIdOk returns a tuple with the TargetHostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationRestoreObject) GetTargetHostIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetHostId.Get(), o.TargetHostId.IsSet()
}

// HasTargetHostId returns a boolean if a field has been set.
func (o *ApplicationRestoreObject) HasTargetHostId() bool {
	if o != nil && o.TargetHostId.IsSet() {
		return true
	}

	return false
}

// SetTargetHostId gets a reference to the given NullableInt64 and assigns it to the TargetHostId field.
func (o *ApplicationRestoreObject) SetTargetHostId(v int64) {
	o.TargetHostId.Set(&v)
}
// SetTargetHostIdNil sets the value for TargetHostId to be an explicit nil
func (o *ApplicationRestoreObject) SetTargetHostIdNil() {
	o.TargetHostId.Set(nil)
}

// UnsetTargetHostId ensures that no value is present for TargetHostId, not even an explicit nil
func (o *ApplicationRestoreObject) UnsetTargetHostId() {
	o.TargetHostId.Unset()
}

// GetTargetRootNodeId returns the TargetRootNodeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationRestoreObject) GetTargetRootNodeId() int64 {
	if o == nil || o.TargetRootNodeId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TargetRootNodeId.Get()
}

// GetTargetRootNodeIdOk returns a tuple with the TargetRootNodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationRestoreObject) GetTargetRootNodeIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetRootNodeId.Get(), o.TargetRootNodeId.IsSet()
}

// HasTargetRootNodeId returns a boolean if a field has been set.
func (o *ApplicationRestoreObject) HasTargetRootNodeId() bool {
	if o != nil && o.TargetRootNodeId.IsSet() {
		return true
	}

	return false
}

// SetTargetRootNodeId gets a reference to the given NullableInt64 and assigns it to the TargetRootNodeId field.
func (o *ApplicationRestoreObject) SetTargetRootNodeId(v int64) {
	o.TargetRootNodeId.Set(&v)
}
// SetTargetRootNodeIdNil sets the value for TargetRootNodeId to be an explicit nil
func (o *ApplicationRestoreObject) SetTargetRootNodeIdNil() {
	o.TargetRootNodeId.Set(nil)
}

// UnsetTargetRootNodeId ensures that no value is present for TargetRootNodeId, not even an explicit nil
func (o *ApplicationRestoreObject) UnsetTargetRootNodeId() {
	o.TargetRootNodeId.Unset()
}

func (o ApplicationRestoreObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdRestoreParameters != nil {
		toSerialize["adRestoreParameters"] = o.AdRestoreParameters
	}
	if o.ApplicationServerId.IsSet() {
		toSerialize["applicationServerId"] = o.ApplicationServerId.Get()
	}
	if o.ExchangeRestoreParameters != nil {
		toSerialize["exchangeRestoreParameters"] = o.ExchangeRestoreParameters
	}
	if o.SqlRestoreParameters != nil {
		toSerialize["sqlRestoreParameters"] = o.SqlRestoreParameters
	}
	if o.TargetHostId.IsSet() {
		toSerialize["targetHostId"] = o.TargetHostId.Get()
	}
	if o.TargetRootNodeId.IsSet() {
		toSerialize["targetRootNodeId"] = o.TargetRootNodeId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationRestoreObject struct {
	value *ApplicationRestoreObject
	isSet bool
}

func (v NullableApplicationRestoreObject) Get() *ApplicationRestoreObject {
	return v.value
}

func (v *NullableApplicationRestoreObject) Set(val *ApplicationRestoreObject) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationRestoreObject) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationRestoreObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationRestoreObject(val *ApplicationRestoreObject) *NullableApplicationRestoreObject {
	return &NullableApplicationRestoreObject{value: val, isSet: true}
}

func (v NullableApplicationRestoreObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationRestoreObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


