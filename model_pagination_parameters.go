/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// PaginationParameters Specifies the cursor based pagination parameters for Protection Source and its children. Pagination is supported at a given level within the Protection Source Hierarchy with the help of before or after cursors. A Cursor will always refer to a specific source within the source dataset but will be invalidated if the item is removed.
type PaginationParameters struct {
	// Specifies the entity id starting from which the items are to be returned.
	AfterCursorEntityId NullableInt64 `json:"afterCursorEntityId,omitempty"`
	// Specifies the entity id upto which the items are to be returned.
	BeforeCursorEntityId NullableInt64 `json:"beforeCursorEntityId,omitempty"`
	// Specifies the entity id for the Node at any level within the Source entity hierarchy whose children are to be paginated.
	NodeId NullableInt64 `json:"nodeId,omitempty"`
	// Specifies the maximum number of entities to be returned within the page.
	PageSize NullableInt64 `json:"pageSize,omitempty"`
}

// NewPaginationParameters instantiates a new PaginationParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginationParameters() *PaginationParameters {
	this := PaginationParameters{}
	return &this
}

// NewPaginationParametersWithDefaults instantiates a new PaginationParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginationParametersWithDefaults() *PaginationParameters {
	this := PaginationParameters{}
	return &this
}

// GetAfterCursorEntityId returns the AfterCursorEntityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaginationParameters) GetAfterCursorEntityId() int64 {
	if o == nil || o.AfterCursorEntityId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AfterCursorEntityId.Get()
}

// GetAfterCursorEntityIdOk returns a tuple with the AfterCursorEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaginationParameters) GetAfterCursorEntityIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AfterCursorEntityId.Get(), o.AfterCursorEntityId.IsSet()
}

// HasAfterCursorEntityId returns a boolean if a field has been set.
func (o *PaginationParameters) HasAfterCursorEntityId() bool {
	if o != nil && o.AfterCursorEntityId.IsSet() {
		return true
	}

	return false
}

// SetAfterCursorEntityId gets a reference to the given NullableInt64 and assigns it to the AfterCursorEntityId field.
func (o *PaginationParameters) SetAfterCursorEntityId(v int64) {
	o.AfterCursorEntityId.Set(&v)
}
// SetAfterCursorEntityIdNil sets the value for AfterCursorEntityId to be an explicit nil
func (o *PaginationParameters) SetAfterCursorEntityIdNil() {
	o.AfterCursorEntityId.Set(nil)
}

// UnsetAfterCursorEntityId ensures that no value is present for AfterCursorEntityId, not even an explicit nil
func (o *PaginationParameters) UnsetAfterCursorEntityId() {
	o.AfterCursorEntityId.Unset()
}

// GetBeforeCursorEntityId returns the BeforeCursorEntityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaginationParameters) GetBeforeCursorEntityId() int64 {
	if o == nil || o.BeforeCursorEntityId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.BeforeCursorEntityId.Get()
}

// GetBeforeCursorEntityIdOk returns a tuple with the BeforeCursorEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaginationParameters) GetBeforeCursorEntityIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BeforeCursorEntityId.Get(), o.BeforeCursorEntityId.IsSet()
}

// HasBeforeCursorEntityId returns a boolean if a field has been set.
func (o *PaginationParameters) HasBeforeCursorEntityId() bool {
	if o != nil && o.BeforeCursorEntityId.IsSet() {
		return true
	}

	return false
}

// SetBeforeCursorEntityId gets a reference to the given NullableInt64 and assigns it to the BeforeCursorEntityId field.
func (o *PaginationParameters) SetBeforeCursorEntityId(v int64) {
	o.BeforeCursorEntityId.Set(&v)
}
// SetBeforeCursorEntityIdNil sets the value for BeforeCursorEntityId to be an explicit nil
func (o *PaginationParameters) SetBeforeCursorEntityIdNil() {
	o.BeforeCursorEntityId.Set(nil)
}

// UnsetBeforeCursorEntityId ensures that no value is present for BeforeCursorEntityId, not even an explicit nil
func (o *PaginationParameters) UnsetBeforeCursorEntityId() {
	o.BeforeCursorEntityId.Unset()
}

// GetNodeId returns the NodeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaginationParameters) GetNodeId() int64 {
	if o == nil || o.NodeId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NodeId.Get()
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaginationParameters) GetNodeIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NodeId.Get(), o.NodeId.IsSet()
}

// HasNodeId returns a boolean if a field has been set.
func (o *PaginationParameters) HasNodeId() bool {
	if o != nil && o.NodeId.IsSet() {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given NullableInt64 and assigns it to the NodeId field.
func (o *PaginationParameters) SetNodeId(v int64) {
	o.NodeId.Set(&v)
}
// SetNodeIdNil sets the value for NodeId to be an explicit nil
func (o *PaginationParameters) SetNodeIdNil() {
	o.NodeId.Set(nil)
}

// UnsetNodeId ensures that no value is present for NodeId, not even an explicit nil
func (o *PaginationParameters) UnsetNodeId() {
	o.NodeId.Unset()
}

// GetPageSize returns the PageSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaginationParameters) GetPageSize() int64 {
	if o == nil || o.PageSize.Get() == nil {
		var ret int64
		return ret
	}
	return *o.PageSize.Get()
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaginationParameters) GetPageSizeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PageSize.Get(), o.PageSize.IsSet()
}

// HasPageSize returns a boolean if a field has been set.
func (o *PaginationParameters) HasPageSize() bool {
	if o != nil && o.PageSize.IsSet() {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given NullableInt64 and assigns it to the PageSize field.
func (o *PaginationParameters) SetPageSize(v int64) {
	o.PageSize.Set(&v)
}
// SetPageSizeNil sets the value for PageSize to be an explicit nil
func (o *PaginationParameters) SetPageSizeNil() {
	o.PageSize.Set(nil)
}

// UnsetPageSize ensures that no value is present for PageSize, not even an explicit nil
func (o *PaginationParameters) UnsetPageSize() {
	o.PageSize.Unset()
}

func (o PaginationParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AfterCursorEntityId.IsSet() {
		toSerialize["afterCursorEntityId"] = o.AfterCursorEntityId.Get()
	}
	if o.BeforeCursorEntityId.IsSet() {
		toSerialize["beforeCursorEntityId"] = o.BeforeCursorEntityId.Get()
	}
	if o.NodeId.IsSet() {
		toSerialize["nodeId"] = o.NodeId.Get()
	}
	if o.PageSize.IsSet() {
		toSerialize["pageSize"] = o.PageSize.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePaginationParameters struct {
	value *PaginationParameters
	isSet bool
}

func (v NullablePaginationParameters) Get() *PaginationParameters {
	return v.value
}

func (v *NullablePaginationParameters) Set(val *PaginationParameters) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginationParameters) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginationParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginationParameters(val *PaginationParameters) *NullablePaginationParameters {
	return &NullablePaginationParameters{value: val, isSet: true}
}

func (v NullablePaginationParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginationParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


