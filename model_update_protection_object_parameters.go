/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// UpdateProtectionObjectParameters Specifies the parameters to update a Protection Object.
type UpdateProtectionObjectParameters struct {
	// Specifies if the protection for the Protection Object is to be paused.
	PauseBackup NullableBool `json:"pauseBackup,omitempty"`
	ProtectedSourceUid UniversalId `json:"protectedSourceUid"`
	// Specifies the unique id of the new RPO policy to assign to the object.
	RpoPolicyId NullableString `json:"rpoPolicyId,omitempty"`
	// Specifies the additional special settings for a Protected Source.
	SourceParameters []SourceSpecialParameter `json:"sourceParameters,omitempty"`
}

// NewUpdateProtectionObjectParameters instantiates a new UpdateProtectionObjectParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProtectionObjectParameters(protectedSourceUid UniversalId) *UpdateProtectionObjectParameters {
	this := UpdateProtectionObjectParameters{}
	this.ProtectedSourceUid = protectedSourceUid
	return &this
}

// NewUpdateProtectionObjectParametersWithDefaults instantiates a new UpdateProtectionObjectParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProtectionObjectParametersWithDefaults() *UpdateProtectionObjectParameters {
	this := UpdateProtectionObjectParameters{}
	return &this
}

// GetPauseBackup returns the PauseBackup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionObjectParameters) GetPauseBackup() bool {
	if o == nil || o.PauseBackup.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PauseBackup.Get()
}

// GetPauseBackupOk returns a tuple with the PauseBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionObjectParameters) GetPauseBackupOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PauseBackup.Get(), o.PauseBackup.IsSet()
}

// HasPauseBackup returns a boolean if a field has been set.
func (o *UpdateProtectionObjectParameters) HasPauseBackup() bool {
	if o != nil && o.PauseBackup.IsSet() {
		return true
	}

	return false
}

// SetPauseBackup gets a reference to the given NullableBool and assigns it to the PauseBackup field.
func (o *UpdateProtectionObjectParameters) SetPauseBackup(v bool) {
	o.PauseBackup.Set(&v)
}
// SetPauseBackupNil sets the value for PauseBackup to be an explicit nil
func (o *UpdateProtectionObjectParameters) SetPauseBackupNil() {
	o.PauseBackup.Set(nil)
}

// UnsetPauseBackup ensures that no value is present for PauseBackup, not even an explicit nil
func (o *UpdateProtectionObjectParameters) UnsetPauseBackup() {
	o.PauseBackup.Unset()
}

// GetProtectedSourceUid returns the ProtectedSourceUid field value
func (o *UpdateProtectionObjectParameters) GetProtectedSourceUid() UniversalId {
	if o == nil {
		var ret UniversalId
		return ret
	}

	return o.ProtectedSourceUid
}

// GetProtectedSourceUidOk returns a tuple with the ProtectedSourceUid field value
// and a boolean to check if the value has been set.
func (o *UpdateProtectionObjectParameters) GetProtectedSourceUidOk() (*UniversalId, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProtectedSourceUid, true
}

// SetProtectedSourceUid sets field value
func (o *UpdateProtectionObjectParameters) SetProtectedSourceUid(v UniversalId) {
	o.ProtectedSourceUid = v
}

// GetRpoPolicyId returns the RpoPolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionObjectParameters) GetRpoPolicyId() string {
	if o == nil || o.RpoPolicyId.Get() == nil {
		var ret string
		return ret
	}
	return *o.RpoPolicyId.Get()
}

// GetRpoPolicyIdOk returns a tuple with the RpoPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionObjectParameters) GetRpoPolicyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RpoPolicyId.Get(), o.RpoPolicyId.IsSet()
}

// HasRpoPolicyId returns a boolean if a field has been set.
func (o *UpdateProtectionObjectParameters) HasRpoPolicyId() bool {
	if o != nil && o.RpoPolicyId.IsSet() {
		return true
	}

	return false
}

// SetRpoPolicyId gets a reference to the given NullableString and assigns it to the RpoPolicyId field.
func (o *UpdateProtectionObjectParameters) SetRpoPolicyId(v string) {
	o.RpoPolicyId.Set(&v)
}
// SetRpoPolicyIdNil sets the value for RpoPolicyId to be an explicit nil
func (o *UpdateProtectionObjectParameters) SetRpoPolicyIdNil() {
	o.RpoPolicyId.Set(nil)
}

// UnsetRpoPolicyId ensures that no value is present for RpoPolicyId, not even an explicit nil
func (o *UpdateProtectionObjectParameters) UnsetRpoPolicyId() {
	o.RpoPolicyId.Unset()
}

// GetSourceParameters returns the SourceParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionObjectParameters) GetSourceParameters() []SourceSpecialParameter {
	if o == nil  {
		var ret []SourceSpecialParameter
		return ret
	}
	return o.SourceParameters
}

// GetSourceParametersOk returns a tuple with the SourceParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionObjectParameters) GetSourceParametersOk() (*[]SourceSpecialParameter, bool) {
	if o == nil || o.SourceParameters == nil {
		return nil, false
	}
	return &o.SourceParameters, true
}

// HasSourceParameters returns a boolean if a field has been set.
func (o *UpdateProtectionObjectParameters) HasSourceParameters() bool {
	if o != nil && o.SourceParameters != nil {
		return true
	}

	return false
}

// SetSourceParameters gets a reference to the given []SourceSpecialParameter and assigns it to the SourceParameters field.
func (o *UpdateProtectionObjectParameters) SetSourceParameters(v []SourceSpecialParameter) {
	o.SourceParameters = v
}

func (o UpdateProtectionObjectParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PauseBackup.IsSet() {
		toSerialize["pauseBackup"] = o.PauseBackup.Get()
	}
	if true {
		toSerialize["protectedSourceUid"] = o.ProtectedSourceUid
	}
	if o.RpoPolicyId.IsSet() {
		toSerialize["rpoPolicyId"] = o.RpoPolicyId.Get()
	}
	if o.SourceParameters != nil {
		toSerialize["sourceParameters"] = o.SourceParameters
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateProtectionObjectParameters struct {
	value *UpdateProtectionObjectParameters
	isSet bool
}

func (v NullableUpdateProtectionObjectParameters) Get() *UpdateProtectionObjectParameters {
	return v.value
}

func (v *NullableUpdateProtectionObjectParameters) Set(val *UpdateProtectionObjectParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProtectionObjectParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProtectionObjectParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProtectionObjectParameters(val *UpdateProtectionObjectParameters) *NullableUpdateProtectionObjectParameters {
	return &NullableUpdateProtectionObjectParameters{value: val, isSet: true}
}

func (v NullableUpdateProtectionObjectParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProtectionObjectParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


