// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ValueData Data.
//
// Specifies the fields to store data of a given type.
// Specify data in the appropriate field for the current data type.
//
// swagger:model Value_Data
type ValueData struct {

	// Specifies the field to store an array of bytes if the current
	// data type is bytes. Specify a value for this field when type
	// is equal to 4.
	BytesValue []uint8 `json:"bytesValue"`

	// Specifies the field to store data if the current data type is a
	// double value. Specify a value for this field when type is equal to 2.
	DoubleValue *float64 `json:"doubleValue,omitempty"`

	// Specifies the field to store data if the current data type is a
	// int64 value. Specify a value for this field when type is equal to 1.
	Int64Value *int64 `json:"int64Value,omitempty"`

	// Specifies the field to store data if the current data type is a
	// string value. Specify a value for this field when type is equal to 3.
	StringValue *string `json:"stringValue,omitempty"`
}

// Validate validates this value data
func (m *ValueData) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this value data based on context it is used
func (m *ValueData) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ValueData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ValueData) UnmarshalBinary(b []byte) error {
	var res ValueData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
