// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CredentialsProto Message that encapsulates credentials to authenticate to an environment.
//
// Copied from: base/credentials.proto -> message Credentials.
//
// swagger:model CredentialsProto
type CredentialsProto struct {

	// AES256 encrypted password. The key for encryption should be obtained from
	// KMS. This field stores the encrypted password when the credentials are
	// being sent to bifrost.
	EncryptedPassword []uint8 `json:"encryptedPassword"`

	// This field is not used in storage, other than historical records. The
	// field is only set for inflight rpcs.
	Password []uint8 `json:"password"`

	// The token to use for authentication. For example, in a SAN environment,
	// this can be the API token that is used to create a REST session.
	Token *string `json:"token,omitempty"`

	// The username and password to use for authentication.
	Username *string `json:"username,omitempty"`
}

// Validate validates this credentials proto
func (m *CredentialsProto) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this credentials proto based on context it is used
func (m *CredentialsProto) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CredentialsProto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CredentialsProto) UnmarshalBinary(b []byte) error {
	var res CredentialsProto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
