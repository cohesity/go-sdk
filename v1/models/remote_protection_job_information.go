// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RemoteProtectionJobInformation Remote Protection Job Information.
//
// Specifies details about the original Protection Job and its
// Snapshots, that were archived to a remote Vault.
//
// swagger:model RemoteProtectionJobInformation
type RemoteProtectionJobInformation struct {

	// Specifies the name of the original Cluster that archived the data to the
	// Vault.
	ClusterName *string `json:"clusterName,omitempty"`

	// Specifies the environment type (such as kVMware or kSQL)
	// of the original archived Protection Job.
	// Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
	// NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
	// 'kVMware' indicates the VMware Protection Source environment.
	// 'kHyperV' indicates the HyperV Protection Source environment.
	// 'kSQL' indicates the SQL Protection Source environment.
	// 'kView' indicates the View Protection Source environment.
	// 'kPuppeteer' indicates the Cohesity's Remote Adapter.
	// 'kPhysical' indicates the physical Protection Source environment.
	// 'kPure' indicates the Pure Storage Protection Source environment.
	// 'kNimble' indicates the Nimble Storage Protection Source environment.
	// 'kAzure' indicates the Microsoft's Azure Protection Source environment.
	// 'kNetapp' indicates the Netapp Protection Source environment.
	// 'kAgent' indicates the Agent Protection Source environment.
	// 'kGenericNas' indicates the Generic Network Attached Storage Protection
	// Source environment.
	// 'kAcropolis' indicates the Acropolis Protection Source environment.
	// 'kPhysicalFiles' indicates the Physical Files Protection Source environment.
	// 'kIbmFlashSystem' indicates the IBM Flash System Protection Source environment.
	// 'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
	// 'kGPFS' indicates IBM's GPFS Protection Source environment.
	// 'kKVM' indicates the KVM Protection Source environment.
	// 'kAWS' indicates the AWS Protection Source environment.
	// 'kExchange' indicates the Exchange Protection Source environment.
	// 'kHyperVVSS' indicates the HyperV VSS Protection Source
	// environment.
	// 'kOracle' indicates the Oracle Protection Source environment.
	// 'kGCP' indicates the Google Cloud Platform Protection Source environment.
	// 'kFlashBlade' indicates the Flash Blade Protection Source environment.
	// 'kAWSNative' indicates the AWS Native Protection Source environment.
	// 'kO365' indicates the Office 365 Protection Source environment.
	// 'kO365Outlook' indicates Office 365 outlook Protection Source environment.
	// 'kHyperFlex' indicates the Hyper Flex Protection Source environment.
	// 'kGCPNative' indicates the GCP Native Protection Source environment.
	// 'kAzureNative' indicates the Azure Native Protection Source environment.
	// 'kKubernetes' indicates a Kubernetes Protection Source environment.
	// 'kElastifile' indicates Elastifile Protection Source environment.
	// 'kAD' indicates Active Directory Protection Source environment.
	// 'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
	// 'kCassandra' indicates Cassandra Protection Source environment.
	// 'kMongoDB' indicates MongoDB Protection Source environment.
	// 'kCouchbase' indicates Couchbase Protection Source environment.
	// 'kHdfs' indicates Hdfs Protection Source environment.
	// 'kHive' indicates Hive Protection Source environment.
	// 'kHBase' indicates HBase Protection Source environment.
	// 'kUDA' indicates Universal Data Adapter Protection Source environment.
	// 'kO365Teams' indicates the Office365 Teams Protection Source environment.
	// 'kO365Group' indicates the Office365 Groups Protection Source environment.
	// 'kO365Exchange' indicates the Office365 Mailbox Protection Source environment.
	// 'kO365OneDrive' indicates the Office365 OneDrive Protection Source environment.
	// 'kO365Sharepoint' indicates the Office365 SharePoint Protection Source environment.
	// 'kO365PublicFolders' indicates the Office365 PublicFolders Protection Source environment.
	// Enum: ["kVMware","kHyperV","kSQL","kView","kPuppeteer","kPhysical","kPure","kNimble","kIbmFlashSystem","kAzure","kNetapp","kAgent","kGenericNas","kAcropolis","kPhysicalFiles","kIsilon","kGPFS","kKVM","kAWS","kExchange","kHyperVVSS","kOracle","kGCP","kFlashBlade","kAWSNative","kO365","kO365Outlook","kHyperFlex","kGCPNative","kAzureNative","kKubernetes","kElastifile","kAD","kRDSSnapshotManager","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kUDA","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kO365Sharepoint","kO365PublicFolders"]
	Environment *string `json:"environment,omitempty"`

	// Specifies the name of the Protection Job on the original Cluster.
	JobName *string `json:"jobName,omitempty"`

	// job Uid
	JobUID *RemoteProtectionJobInformationJobUID `json:"jobUid,omitempty"`
}

// Validate validates this remote protection job information
func (m *RemoteProtectionJobInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnvironment(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateJobUID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var remoteProtectionJobInformationTypeEnvironmentPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kVMware","kHyperV","kSQL","kView","kPuppeteer","kPhysical","kPure","kNimble","kIbmFlashSystem","kAzure","kNetapp","kAgent","kGenericNas","kAcropolis","kPhysicalFiles","kIsilon","kGPFS","kKVM","kAWS","kExchange","kHyperVVSS","kOracle","kGCP","kFlashBlade","kAWSNative","kO365","kO365Outlook","kHyperFlex","kGCPNative","kAzureNative","kKubernetes","kElastifile","kAD","kRDSSnapshotManager","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kUDA","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kO365Sharepoint","kO365PublicFolders"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		remoteProtectionJobInformationTypeEnvironmentPropEnum = append(remoteProtectionJobInformationTypeEnvironmentPropEnum, v)
	}
}

const (

	// RemoteProtectionJobInformationEnvironmentKVMware captures enum value "kVMware"
	RemoteProtectionJobInformationEnvironmentKVMware string = "kVMware"

	// RemoteProtectionJobInformationEnvironmentKHyperV captures enum value "kHyperV"
	RemoteProtectionJobInformationEnvironmentKHyperV string = "kHyperV"

	// RemoteProtectionJobInformationEnvironmentKSQL captures enum value "kSQL"
	RemoteProtectionJobInformationEnvironmentKSQL string = "kSQL"

	// RemoteProtectionJobInformationEnvironmentKView captures enum value "kView"
	RemoteProtectionJobInformationEnvironmentKView string = "kView"

	// RemoteProtectionJobInformationEnvironmentKPuppeteer captures enum value "kPuppeteer"
	RemoteProtectionJobInformationEnvironmentKPuppeteer string = "kPuppeteer"

	// RemoteProtectionJobInformationEnvironmentKPhysical captures enum value "kPhysical"
	RemoteProtectionJobInformationEnvironmentKPhysical string = "kPhysical"

	// RemoteProtectionJobInformationEnvironmentKPure captures enum value "kPure"
	RemoteProtectionJobInformationEnvironmentKPure string = "kPure"

	// RemoteProtectionJobInformationEnvironmentKNimble captures enum value "kNimble"
	RemoteProtectionJobInformationEnvironmentKNimble string = "kNimble"

	// RemoteProtectionJobInformationEnvironmentKIbmFlashSystem captures enum value "kIbmFlashSystem"
	RemoteProtectionJobInformationEnvironmentKIbmFlashSystem string = "kIbmFlashSystem"

	// RemoteProtectionJobInformationEnvironmentKAzure captures enum value "kAzure"
	RemoteProtectionJobInformationEnvironmentKAzure string = "kAzure"

	// RemoteProtectionJobInformationEnvironmentKNetapp captures enum value "kNetapp"
	RemoteProtectionJobInformationEnvironmentKNetapp string = "kNetapp"

	// RemoteProtectionJobInformationEnvironmentKAgent captures enum value "kAgent"
	RemoteProtectionJobInformationEnvironmentKAgent string = "kAgent"

	// RemoteProtectionJobInformationEnvironmentKGenericNas captures enum value "kGenericNas"
	RemoteProtectionJobInformationEnvironmentKGenericNas string = "kGenericNas"

	// RemoteProtectionJobInformationEnvironmentKAcropolis captures enum value "kAcropolis"
	RemoteProtectionJobInformationEnvironmentKAcropolis string = "kAcropolis"

	// RemoteProtectionJobInformationEnvironmentKPhysicalFiles captures enum value "kPhysicalFiles"
	RemoteProtectionJobInformationEnvironmentKPhysicalFiles string = "kPhysicalFiles"

	// RemoteProtectionJobInformationEnvironmentKIsilon captures enum value "kIsilon"
	RemoteProtectionJobInformationEnvironmentKIsilon string = "kIsilon"

	// RemoteProtectionJobInformationEnvironmentKGPFS captures enum value "kGPFS"
	RemoteProtectionJobInformationEnvironmentKGPFS string = "kGPFS"

	// RemoteProtectionJobInformationEnvironmentKKVM captures enum value "kKVM"
	RemoteProtectionJobInformationEnvironmentKKVM string = "kKVM"

	// RemoteProtectionJobInformationEnvironmentKAWS captures enum value "kAWS"
	RemoteProtectionJobInformationEnvironmentKAWS string = "kAWS"

	// RemoteProtectionJobInformationEnvironmentKExchange captures enum value "kExchange"
	RemoteProtectionJobInformationEnvironmentKExchange string = "kExchange"

	// RemoteProtectionJobInformationEnvironmentKHyperVVSS captures enum value "kHyperVVSS"
	RemoteProtectionJobInformationEnvironmentKHyperVVSS string = "kHyperVVSS"

	// RemoteProtectionJobInformationEnvironmentKOracle captures enum value "kOracle"
	RemoteProtectionJobInformationEnvironmentKOracle string = "kOracle"

	// RemoteProtectionJobInformationEnvironmentKGCP captures enum value "kGCP"
	RemoteProtectionJobInformationEnvironmentKGCP string = "kGCP"

	// RemoteProtectionJobInformationEnvironmentKFlashBlade captures enum value "kFlashBlade"
	RemoteProtectionJobInformationEnvironmentKFlashBlade string = "kFlashBlade"

	// RemoteProtectionJobInformationEnvironmentKAWSNative captures enum value "kAWSNative"
	RemoteProtectionJobInformationEnvironmentKAWSNative string = "kAWSNative"

	// RemoteProtectionJobInformationEnvironmentKO365 captures enum value "kO365"
	RemoteProtectionJobInformationEnvironmentKO365 string = "kO365"

	// RemoteProtectionJobInformationEnvironmentKO365Outlook captures enum value "kO365Outlook"
	RemoteProtectionJobInformationEnvironmentKO365Outlook string = "kO365Outlook"

	// RemoteProtectionJobInformationEnvironmentKHyperFlex captures enum value "kHyperFlex"
	RemoteProtectionJobInformationEnvironmentKHyperFlex string = "kHyperFlex"

	// RemoteProtectionJobInformationEnvironmentKGCPNative captures enum value "kGCPNative"
	RemoteProtectionJobInformationEnvironmentKGCPNative string = "kGCPNative"

	// RemoteProtectionJobInformationEnvironmentKAzureNative captures enum value "kAzureNative"
	RemoteProtectionJobInformationEnvironmentKAzureNative string = "kAzureNative"

	// RemoteProtectionJobInformationEnvironmentKKubernetes captures enum value "kKubernetes"
	RemoteProtectionJobInformationEnvironmentKKubernetes string = "kKubernetes"

	// RemoteProtectionJobInformationEnvironmentKElastifile captures enum value "kElastifile"
	RemoteProtectionJobInformationEnvironmentKElastifile string = "kElastifile"

	// RemoteProtectionJobInformationEnvironmentKAD captures enum value "kAD"
	RemoteProtectionJobInformationEnvironmentKAD string = "kAD"

	// RemoteProtectionJobInformationEnvironmentKRDSSnapshotManager captures enum value "kRDSSnapshotManager"
	RemoteProtectionJobInformationEnvironmentKRDSSnapshotManager string = "kRDSSnapshotManager"

	// RemoteProtectionJobInformationEnvironmentKCassandra captures enum value "kCassandra"
	RemoteProtectionJobInformationEnvironmentKCassandra string = "kCassandra"

	// RemoteProtectionJobInformationEnvironmentKMongoDB captures enum value "kMongoDB"
	RemoteProtectionJobInformationEnvironmentKMongoDB string = "kMongoDB"

	// RemoteProtectionJobInformationEnvironmentKCouchbase captures enum value "kCouchbase"
	RemoteProtectionJobInformationEnvironmentKCouchbase string = "kCouchbase"

	// RemoteProtectionJobInformationEnvironmentKHdfs captures enum value "kHdfs"
	RemoteProtectionJobInformationEnvironmentKHdfs string = "kHdfs"

	// RemoteProtectionJobInformationEnvironmentKHive captures enum value "kHive"
	RemoteProtectionJobInformationEnvironmentKHive string = "kHive"

	// RemoteProtectionJobInformationEnvironmentKHBase captures enum value "kHBase"
	RemoteProtectionJobInformationEnvironmentKHBase string = "kHBase"

	// RemoteProtectionJobInformationEnvironmentKUDA captures enum value "kUDA"
	RemoteProtectionJobInformationEnvironmentKUDA string = "kUDA"

	// RemoteProtectionJobInformationEnvironmentKO365Teams captures enum value "kO365Teams"
	RemoteProtectionJobInformationEnvironmentKO365Teams string = "kO365Teams"

	// RemoteProtectionJobInformationEnvironmentKO365Group captures enum value "kO365Group"
	RemoteProtectionJobInformationEnvironmentKO365Group string = "kO365Group"

	// RemoteProtectionJobInformationEnvironmentKO365Exchange captures enum value "kO365Exchange"
	RemoteProtectionJobInformationEnvironmentKO365Exchange string = "kO365Exchange"

	// RemoteProtectionJobInformationEnvironmentKO365OneDrive captures enum value "kO365OneDrive"
	RemoteProtectionJobInformationEnvironmentKO365OneDrive string = "kO365OneDrive"

	// RemoteProtectionJobInformationEnvironmentKO365Sharepoint captures enum value "kO365Sharepoint"
	RemoteProtectionJobInformationEnvironmentKO365Sharepoint string = "kO365Sharepoint"

	// RemoteProtectionJobInformationEnvironmentKO365PublicFolders captures enum value "kO365PublicFolders"
	RemoteProtectionJobInformationEnvironmentKO365PublicFolders string = "kO365PublicFolders"
)

// prop value enum
func (m *RemoteProtectionJobInformation) validateEnvironmentEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, remoteProtectionJobInformationTypeEnvironmentPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *RemoteProtectionJobInformation) validateEnvironment(formats strfmt.Registry) error {
	if swag.IsZero(m.Environment) { // not required
		return nil
	}

	// value enum
	if err := m.validateEnvironmentEnum("environment", "body", *m.Environment); err != nil {
		return err
	}

	return nil
}

func (m *RemoteProtectionJobInformation) validateJobUID(formats strfmt.Registry) error {
	if swag.IsZero(m.JobUID) { // not required
		return nil
	}

	if m.JobUID != nil {
		if err := m.JobUID.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("jobUid")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("jobUid")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this remote protection job information based on the context it is used
func (m *RemoteProtectionJobInformation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateJobUID(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RemoteProtectionJobInformation) contextValidateJobUID(ctx context.Context, formats strfmt.Registry) error {

	if m.JobUID != nil {

		if swag.IsZero(m.JobUID) { // not required
			return nil
		}

		if err := m.JobUID.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("jobUid")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("jobUid")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RemoteProtectionJobInformation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RemoteProtectionJobInformation) UnmarshalBinary(b []byte) error {
	var res RemoteProtectionJobInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
