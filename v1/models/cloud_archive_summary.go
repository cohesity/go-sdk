// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CloudArchiveSummary Data Transfer to Vault Summary.
//
// Specifies statistics about the transfer of data from this Cohesity
// Cluster to a Vault.
//
// swagger:model CloudArchiveSummary
type CloudArchiveSummary struct {

	// Specifies the id of the job.
	JobID *int64 `json:"jobId,omitempty"`

	// Specifies the name of the Protection Job.
	JobName *string `json:"jobName,omitempty"`

	// Specifies the type of the Protection Job.
	// Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
	// NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
	// 'kVMware' indicates the VMware Protection Source environment.
	// 'kHyperV' indicates the HyperV Protection Source environment.
	// 'kSQL' indicates the SQL Protection Source environment.
	// 'kView' indicates the View Protection Source environment.
	// 'kPuppeteer' indicates the Cohesity's Remote Adapter.
	// 'kPhysical' indicates the physical Protection Source environment.
	// 'kPure' indicates the Pure Storage Protection Source environment.
	// 'kNimble' indicates the Nimble Storage Protection Source environment.
	// 'kAzure' indicates the Microsoft's Azure Protection Source environment.
	// 'kNetapp' indicates the Netapp Protection Source environment.
	// 'kAgent' indicates the Agent Protection Source environment.
	// 'kGenericNas' indicates the Generic Network Attached Storage Protection
	// Source environment.
	// 'kAcropolis' indicates the Acropolis Protection Source environment.
	// 'kPhysicalFiles' indicates the Physical Files Protection Source environment.
	// 'kIbmFlashSystem' indicates the IBM Flash System Protection Source environment.
	// 'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
	// 'kGPFS' indicates IBM's GPFS Protection Source environment.
	// 'kKVM' indicates the KVM Protection Source environment.
	// 'kAWS' indicates the AWS Protection Source environment.
	// 'kExchange' indicates the Exchange Protection Source environment.
	// 'kHyperVVSS' indicates the HyperV VSS Protection Source
	// environment.
	// 'kOracle' indicates the Oracle Protection Source environment.
	// 'kGCP' indicates the Google Cloud Platform Protection Source environment.
	// 'kFlashBlade' indicates the Flash Blade Protection Source environment.
	// 'kAWSNative' indicates the AWS Native Protection Source environment.
	// 'kO365' indicates the Office 365 Protection Source environment.
	// 'kO365Outlook' indicates Office 365 outlook Protection Source environment.
	// 'kHyperFlex' indicates the Hyper Flex Protection Source environment.
	// 'kGCPNative' indicates the GCP Native Protection Source environment.
	// 'kAzureNative' indicates the Azure Native Protection Source environment.
	// 'kKubernetes' indicates a Kubernetes Protection Source environment.
	// 'kElastifile' indicates Elastifile Protection Source environment.
	// 'kAD' indicates Active Directory Protection Source environment.
	// 'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
	// 'kCassandra' indicates Cassandra Protection Source environment.
	// 'kMongoDB' indicates MongoDB Protection Source environment.
	// 'kCouchbase' indicates Couchbase Protection Source environment.
	// 'kHdfs' indicates Hdfs Protection Source environment.
	// 'kHive' indicates Hive Protection Source environment.
	// 'kHBase' indicates HBase Protection Source environment.
	// 'kUDA' indicates Universal Data Adapter Protection Source environment.
	// 'kO365Teams' indicates the Office365 Teams Protection Source environment.
	// 'kO365Group' indicates the Office365 Groups Protection Source environment.
	// 'kO365Exchange' indicates the Office365 Mailbox Protection Source environment.
	// 'kO365OneDrive' indicates the Office365 OneDrive Protection Source environment.
	// 'kO365Sharepoint' indicates the Office365 SharePoint Protection Source environment.
	// 'kO365PublicFolders' indicates the Office365 PublicFolders Protection Source environment.
	// Enum: ["kVMware","kHyperV","kSQL","kView","kPuppeteer","kPhysical","kPure","kNimble","kIbmFlashSystem","kAzure","kNetapp","kAgent","kGenericNas","kAcropolis","kPhysicalFiles","kIsilon","kGPFS","kKVM","kAWS","kExchange","kHyperVVSS","kOracle","kGCP","kFlashBlade","kAWSNative","kO365","kO365Outlook","kHyperFlex","kGCPNative","kAzureNative","kKubernetes","kElastifile","kAD","kRDSSnapshotManager","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kUDA","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kO365Sharepoint","kO365PublicFolders"]
	JobType *string `json:"jobType,omitempty"`

	// Specifies the number of failed runs for a Protection Job.
	NumberOfFailedRuns *int32 `json:"numberOfFailedRuns,omitempty"`

	// Specifies the number of queued runs for a Protection Job.
	NumberOfQueuedRuns *int32 `json:"numberOfQueuedRuns,omitempty"`

	// Specifies the number of successful runs for a Protection Job.
	NumberOfSuccessfulRuns *int32 `json:"numberOfSuccessfulRuns,omitempty"`

	// Specifies the list of cloud archive runs.
	Runs []*CloudArchiveRun `json:"runs"`
}

// Validate validates this cloud archive summary
func (m *CloudArchiveSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateJobType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRuns(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var cloudArchiveSummaryTypeJobTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kVMware","kHyperV","kSQL","kView","kPuppeteer","kPhysical","kPure","kNimble","kIbmFlashSystem","kAzure","kNetapp","kAgent","kGenericNas","kAcropolis","kPhysicalFiles","kIsilon","kGPFS","kKVM","kAWS","kExchange","kHyperVVSS","kOracle","kGCP","kFlashBlade","kAWSNative","kO365","kO365Outlook","kHyperFlex","kGCPNative","kAzureNative","kKubernetes","kElastifile","kAD","kRDSSnapshotManager","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kUDA","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kO365Sharepoint","kO365PublicFolders"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		cloudArchiveSummaryTypeJobTypePropEnum = append(cloudArchiveSummaryTypeJobTypePropEnum, v)
	}
}

const (

	// CloudArchiveSummaryJobTypeKVMware captures enum value "kVMware"
	CloudArchiveSummaryJobTypeKVMware string = "kVMware"

	// CloudArchiveSummaryJobTypeKHyperV captures enum value "kHyperV"
	CloudArchiveSummaryJobTypeKHyperV string = "kHyperV"

	// CloudArchiveSummaryJobTypeKSQL captures enum value "kSQL"
	CloudArchiveSummaryJobTypeKSQL string = "kSQL"

	// CloudArchiveSummaryJobTypeKView captures enum value "kView"
	CloudArchiveSummaryJobTypeKView string = "kView"

	// CloudArchiveSummaryJobTypeKPuppeteer captures enum value "kPuppeteer"
	CloudArchiveSummaryJobTypeKPuppeteer string = "kPuppeteer"

	// CloudArchiveSummaryJobTypeKPhysical captures enum value "kPhysical"
	CloudArchiveSummaryJobTypeKPhysical string = "kPhysical"

	// CloudArchiveSummaryJobTypeKPure captures enum value "kPure"
	CloudArchiveSummaryJobTypeKPure string = "kPure"

	// CloudArchiveSummaryJobTypeKNimble captures enum value "kNimble"
	CloudArchiveSummaryJobTypeKNimble string = "kNimble"

	// CloudArchiveSummaryJobTypeKIbmFlashSystem captures enum value "kIbmFlashSystem"
	CloudArchiveSummaryJobTypeKIbmFlashSystem string = "kIbmFlashSystem"

	// CloudArchiveSummaryJobTypeKAzure captures enum value "kAzure"
	CloudArchiveSummaryJobTypeKAzure string = "kAzure"

	// CloudArchiveSummaryJobTypeKNetapp captures enum value "kNetapp"
	CloudArchiveSummaryJobTypeKNetapp string = "kNetapp"

	// CloudArchiveSummaryJobTypeKAgent captures enum value "kAgent"
	CloudArchiveSummaryJobTypeKAgent string = "kAgent"

	// CloudArchiveSummaryJobTypeKGenericNas captures enum value "kGenericNas"
	CloudArchiveSummaryJobTypeKGenericNas string = "kGenericNas"

	// CloudArchiveSummaryJobTypeKAcropolis captures enum value "kAcropolis"
	CloudArchiveSummaryJobTypeKAcropolis string = "kAcropolis"

	// CloudArchiveSummaryJobTypeKPhysicalFiles captures enum value "kPhysicalFiles"
	CloudArchiveSummaryJobTypeKPhysicalFiles string = "kPhysicalFiles"

	// CloudArchiveSummaryJobTypeKIsilon captures enum value "kIsilon"
	CloudArchiveSummaryJobTypeKIsilon string = "kIsilon"

	// CloudArchiveSummaryJobTypeKGPFS captures enum value "kGPFS"
	CloudArchiveSummaryJobTypeKGPFS string = "kGPFS"

	// CloudArchiveSummaryJobTypeKKVM captures enum value "kKVM"
	CloudArchiveSummaryJobTypeKKVM string = "kKVM"

	// CloudArchiveSummaryJobTypeKAWS captures enum value "kAWS"
	CloudArchiveSummaryJobTypeKAWS string = "kAWS"

	// CloudArchiveSummaryJobTypeKExchange captures enum value "kExchange"
	CloudArchiveSummaryJobTypeKExchange string = "kExchange"

	// CloudArchiveSummaryJobTypeKHyperVVSS captures enum value "kHyperVVSS"
	CloudArchiveSummaryJobTypeKHyperVVSS string = "kHyperVVSS"

	// CloudArchiveSummaryJobTypeKOracle captures enum value "kOracle"
	CloudArchiveSummaryJobTypeKOracle string = "kOracle"

	// CloudArchiveSummaryJobTypeKGCP captures enum value "kGCP"
	CloudArchiveSummaryJobTypeKGCP string = "kGCP"

	// CloudArchiveSummaryJobTypeKFlashBlade captures enum value "kFlashBlade"
	CloudArchiveSummaryJobTypeKFlashBlade string = "kFlashBlade"

	// CloudArchiveSummaryJobTypeKAWSNative captures enum value "kAWSNative"
	CloudArchiveSummaryJobTypeKAWSNative string = "kAWSNative"

	// CloudArchiveSummaryJobTypeKO365 captures enum value "kO365"
	CloudArchiveSummaryJobTypeKO365 string = "kO365"

	// CloudArchiveSummaryJobTypeKO365Outlook captures enum value "kO365Outlook"
	CloudArchiveSummaryJobTypeKO365Outlook string = "kO365Outlook"

	// CloudArchiveSummaryJobTypeKHyperFlex captures enum value "kHyperFlex"
	CloudArchiveSummaryJobTypeKHyperFlex string = "kHyperFlex"

	// CloudArchiveSummaryJobTypeKGCPNative captures enum value "kGCPNative"
	CloudArchiveSummaryJobTypeKGCPNative string = "kGCPNative"

	// CloudArchiveSummaryJobTypeKAzureNative captures enum value "kAzureNative"
	CloudArchiveSummaryJobTypeKAzureNative string = "kAzureNative"

	// CloudArchiveSummaryJobTypeKKubernetes captures enum value "kKubernetes"
	CloudArchiveSummaryJobTypeKKubernetes string = "kKubernetes"

	// CloudArchiveSummaryJobTypeKElastifile captures enum value "kElastifile"
	CloudArchiveSummaryJobTypeKElastifile string = "kElastifile"

	// CloudArchiveSummaryJobTypeKAD captures enum value "kAD"
	CloudArchiveSummaryJobTypeKAD string = "kAD"

	// CloudArchiveSummaryJobTypeKRDSSnapshotManager captures enum value "kRDSSnapshotManager"
	CloudArchiveSummaryJobTypeKRDSSnapshotManager string = "kRDSSnapshotManager"

	// CloudArchiveSummaryJobTypeKCassandra captures enum value "kCassandra"
	CloudArchiveSummaryJobTypeKCassandra string = "kCassandra"

	// CloudArchiveSummaryJobTypeKMongoDB captures enum value "kMongoDB"
	CloudArchiveSummaryJobTypeKMongoDB string = "kMongoDB"

	// CloudArchiveSummaryJobTypeKCouchbase captures enum value "kCouchbase"
	CloudArchiveSummaryJobTypeKCouchbase string = "kCouchbase"

	// CloudArchiveSummaryJobTypeKHdfs captures enum value "kHdfs"
	CloudArchiveSummaryJobTypeKHdfs string = "kHdfs"

	// CloudArchiveSummaryJobTypeKHive captures enum value "kHive"
	CloudArchiveSummaryJobTypeKHive string = "kHive"

	// CloudArchiveSummaryJobTypeKHBase captures enum value "kHBase"
	CloudArchiveSummaryJobTypeKHBase string = "kHBase"

	// CloudArchiveSummaryJobTypeKUDA captures enum value "kUDA"
	CloudArchiveSummaryJobTypeKUDA string = "kUDA"

	// CloudArchiveSummaryJobTypeKO365Teams captures enum value "kO365Teams"
	CloudArchiveSummaryJobTypeKO365Teams string = "kO365Teams"

	// CloudArchiveSummaryJobTypeKO365Group captures enum value "kO365Group"
	CloudArchiveSummaryJobTypeKO365Group string = "kO365Group"

	// CloudArchiveSummaryJobTypeKO365Exchange captures enum value "kO365Exchange"
	CloudArchiveSummaryJobTypeKO365Exchange string = "kO365Exchange"

	// CloudArchiveSummaryJobTypeKO365OneDrive captures enum value "kO365OneDrive"
	CloudArchiveSummaryJobTypeKO365OneDrive string = "kO365OneDrive"

	// CloudArchiveSummaryJobTypeKO365Sharepoint captures enum value "kO365Sharepoint"
	CloudArchiveSummaryJobTypeKO365Sharepoint string = "kO365Sharepoint"

	// CloudArchiveSummaryJobTypeKO365PublicFolders captures enum value "kO365PublicFolders"
	CloudArchiveSummaryJobTypeKO365PublicFolders string = "kO365PublicFolders"
)

// prop value enum
func (m *CloudArchiveSummary) validateJobTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, cloudArchiveSummaryTypeJobTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CloudArchiveSummary) validateJobType(formats strfmt.Registry) error {
	if swag.IsZero(m.JobType) { // not required
		return nil
	}

	// value enum
	if err := m.validateJobTypeEnum("jobType", "body", *m.JobType); err != nil {
		return err
	}

	return nil
}

func (m *CloudArchiveSummary) validateRuns(formats strfmt.Registry) error {
	if swag.IsZero(m.Runs) { // not required
		return nil
	}

	for i := 0; i < len(m.Runs); i++ {
		if swag.IsZero(m.Runs[i]) { // not required
			continue
		}

		if m.Runs[i] != nil {
			if err := m.Runs[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("runs" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("runs" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this cloud archive summary based on the context it is used
func (m *CloudArchiveSummary) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateRuns(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CloudArchiveSummary) contextValidateRuns(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Runs); i++ {

		if m.Runs[i] != nil {

			if swag.IsZero(m.Runs[i]) { // not required
				return nil
			}

			if err := m.Runs[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("runs" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("runs" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *CloudArchiveSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CloudArchiveSummary) UnmarshalBinary(b []byte) error {
	var res CloudArchiveSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
