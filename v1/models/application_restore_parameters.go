// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ApplicationRestoreParameters Application Restore Parameters.
//
// Specifies the information regarding the application restore parameters.
//
// swagger:model ApplicationRestoreParameters
type ApplicationRestoreParameters struct {

	// Specifies the Environment of the Application server to restore like
	// 'kSQL','kAD',or 'kExchange'.
	// Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
	// NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
	// 'kVMware' indicates the VMware Protection Source environment.
	// 'kHyperV' indicates the HyperV Protection Source environment.
	// 'kSQL' indicates the SQL Protection Source environment.
	// 'kView' indicates the View Protection Source environment.
	// 'kPuppeteer' indicates the Cohesity's Remote Adapter.
	// 'kPhysical' indicates the physical Protection Source environment.
	// 'kPure' indicates the Pure Storage Protection Source environment.
	// 'kNimble' indicates the Nimble Storage Protection Source environment.
	// 'kAzure' indicates the Microsoft's Azure Protection Source environment.
	// 'kNetapp' indicates the Netapp Protection Source environment.
	// 'kAgent' indicates the Agent Protection Source environment.
	// 'kGenericNas' indicates the Generic Network Attached Storage Protection
	// Source environment.
	// 'kAcropolis' indicates the Acropolis Protection Source environment.
	// 'kPhysicalFiles' indicates the Physical Files Protection Source environment.
	// 'kIbmFlashSystem' indicates the IBM Flash System Protection Source environment.
	// 'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
	// 'kGPFS' indicates IBM's GPFS Protection Source environment.
	// 'kKVM' indicates the KVM Protection Source environment.
	// 'kAWS' indicates the AWS Protection Source environment.
	// 'kExchange' indicates the Exchange Protection Source environment.
	// 'kHyperVVSS' indicates the HyperV VSS Protection Source
	// environment.
	// 'kOracle' indicates the Oracle Protection Source environment.
	// 'kGCP' indicates the Google Cloud Platform Protection Source environment.
	// 'kFlashBlade' indicates the Flash Blade Protection Source environment.
	// 'kAWSNative' indicates the AWS Native Protection Source environment.
	// 'kO365' indicates the Office 365 Protection Source environment.
	// 'kO365Outlook' indicates Office 365 outlook Protection Source environment.
	// 'kHyperFlex' indicates the Hyper Flex Protection Source environment.
	// 'kGCPNative' indicates the GCP Native Protection Source environment.
	// 'kAzureNative' indicates the Azure Native Protection Source environment.
	// 'kKubernetes' indicates a Kubernetes Protection Source environment.
	// 'kElastifile' indicates Elastifile Protection Source environment.
	// 'kAD' indicates Active Directory Protection Source environment.
	// 'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
	// 'kCassandra' indicates Cassandra Protection Source environment.
	// 'kMongoDB' indicates MongoDB Protection Source environment.
	// 'kCouchbase' indicates Couchbase Protection Source environment.
	// 'kHdfs' indicates Hdfs Protection Source environment.
	// 'kHive' indicates Hive Protection Source environment.
	// 'kHBase' indicates HBase Protection Source environment.
	// 'kUDA' indicates Universal Data Adapter Protection Source environment.
	// 'kO365Teams' indicates the Office365 Teams Protection Source environment.
	// 'kO365Group' indicates the Office365 Groups Protection Source environment.
	// 'kO365Exchange' indicates the Office365 Mailbox Protection Source environment.
	// 'kO365OneDrive' indicates the Office365 OneDrive Protection Source environment.
	// 'kO365Sharepoint' indicates the Office365 SharePoint Protection Source environment.
	// 'kO365PublicFolders' indicates the Office365 PublicFolders Protection Source environment.
	// Enum: ["kVMware","kHyperV","kSQL","kView","kPuppeteer","kPhysical","kPure","kNimble","kIbmFlashSystem","kAzure","kNetapp","kAgent","kGenericNas","kAcropolis","kPhysicalFiles","kIsilon","kGPFS","kKVM","kAWS","kExchange","kHyperVVSS","kOracle","kGCP","kFlashBlade","kAWSNative","kO365","kO365Outlook","kHyperFlex","kGCPNative","kAzureNative","kKubernetes","kElastifile","kAD","kRDSSnapshotManager","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kUDA","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kO365Sharepoint","kO365PublicFolders"]
	ApplicationEnvironment *string `json:"applicationEnvironment,omitempty"`

	// Specifies the Application Server objects whose data should be restored.
	ApplicationRestoreObjects []*ApplicationRestoreObject `json:"applicationRestoreObjects"`

	// Specifies the restore information for the Protection Source object that
	// registered and hosts the Application Servers. This provides the
	// snapshot details from which the application should be restored.
	HostingProtectionSource *RestoreObjectDetails `json:"hostingProtectionSource,omitempty"`

	// Specifies the list of hosting protection source and Application restore
	// objects tuple.
	ProtectionSourceAndApplicationObjects []*ProtectionSourceAndApplicationRestoreObjects `json:"protectionSourceAndApplicationObjects"`
}

// Validate validates this application restore parameters
func (m *ApplicationRestoreParameters) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateApplicationEnvironment(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateApplicationRestoreObjects(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHostingProtectionSource(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProtectionSourceAndApplicationObjects(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var applicationRestoreParametersTypeApplicationEnvironmentPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kVMware","kHyperV","kSQL","kView","kPuppeteer","kPhysical","kPure","kNimble","kIbmFlashSystem","kAzure","kNetapp","kAgent","kGenericNas","kAcropolis","kPhysicalFiles","kIsilon","kGPFS","kKVM","kAWS","kExchange","kHyperVVSS","kOracle","kGCP","kFlashBlade","kAWSNative","kO365","kO365Outlook","kHyperFlex","kGCPNative","kAzureNative","kKubernetes","kElastifile","kAD","kRDSSnapshotManager","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kUDA","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kO365Sharepoint","kO365PublicFolders"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		applicationRestoreParametersTypeApplicationEnvironmentPropEnum = append(applicationRestoreParametersTypeApplicationEnvironmentPropEnum, v)
	}
}

const (

	// ApplicationRestoreParametersApplicationEnvironmentKVMware captures enum value "kVMware"
	ApplicationRestoreParametersApplicationEnvironmentKVMware string = "kVMware"

	// ApplicationRestoreParametersApplicationEnvironmentKHyperV captures enum value "kHyperV"
	ApplicationRestoreParametersApplicationEnvironmentKHyperV string = "kHyperV"

	// ApplicationRestoreParametersApplicationEnvironmentKSQL captures enum value "kSQL"
	ApplicationRestoreParametersApplicationEnvironmentKSQL string = "kSQL"

	// ApplicationRestoreParametersApplicationEnvironmentKView captures enum value "kView"
	ApplicationRestoreParametersApplicationEnvironmentKView string = "kView"

	// ApplicationRestoreParametersApplicationEnvironmentKPuppeteer captures enum value "kPuppeteer"
	ApplicationRestoreParametersApplicationEnvironmentKPuppeteer string = "kPuppeteer"

	// ApplicationRestoreParametersApplicationEnvironmentKPhysical captures enum value "kPhysical"
	ApplicationRestoreParametersApplicationEnvironmentKPhysical string = "kPhysical"

	// ApplicationRestoreParametersApplicationEnvironmentKPure captures enum value "kPure"
	ApplicationRestoreParametersApplicationEnvironmentKPure string = "kPure"

	// ApplicationRestoreParametersApplicationEnvironmentKNimble captures enum value "kNimble"
	ApplicationRestoreParametersApplicationEnvironmentKNimble string = "kNimble"

	// ApplicationRestoreParametersApplicationEnvironmentKIbmFlashSystem captures enum value "kIbmFlashSystem"
	ApplicationRestoreParametersApplicationEnvironmentKIbmFlashSystem string = "kIbmFlashSystem"

	// ApplicationRestoreParametersApplicationEnvironmentKAzure captures enum value "kAzure"
	ApplicationRestoreParametersApplicationEnvironmentKAzure string = "kAzure"

	// ApplicationRestoreParametersApplicationEnvironmentKNetapp captures enum value "kNetapp"
	ApplicationRestoreParametersApplicationEnvironmentKNetapp string = "kNetapp"

	// ApplicationRestoreParametersApplicationEnvironmentKAgent captures enum value "kAgent"
	ApplicationRestoreParametersApplicationEnvironmentKAgent string = "kAgent"

	// ApplicationRestoreParametersApplicationEnvironmentKGenericNas captures enum value "kGenericNas"
	ApplicationRestoreParametersApplicationEnvironmentKGenericNas string = "kGenericNas"

	// ApplicationRestoreParametersApplicationEnvironmentKAcropolis captures enum value "kAcropolis"
	ApplicationRestoreParametersApplicationEnvironmentKAcropolis string = "kAcropolis"

	// ApplicationRestoreParametersApplicationEnvironmentKPhysicalFiles captures enum value "kPhysicalFiles"
	ApplicationRestoreParametersApplicationEnvironmentKPhysicalFiles string = "kPhysicalFiles"

	// ApplicationRestoreParametersApplicationEnvironmentKIsilon captures enum value "kIsilon"
	ApplicationRestoreParametersApplicationEnvironmentKIsilon string = "kIsilon"

	// ApplicationRestoreParametersApplicationEnvironmentKGPFS captures enum value "kGPFS"
	ApplicationRestoreParametersApplicationEnvironmentKGPFS string = "kGPFS"

	// ApplicationRestoreParametersApplicationEnvironmentKKVM captures enum value "kKVM"
	ApplicationRestoreParametersApplicationEnvironmentKKVM string = "kKVM"

	// ApplicationRestoreParametersApplicationEnvironmentKAWS captures enum value "kAWS"
	ApplicationRestoreParametersApplicationEnvironmentKAWS string = "kAWS"

	// ApplicationRestoreParametersApplicationEnvironmentKExchange captures enum value "kExchange"
	ApplicationRestoreParametersApplicationEnvironmentKExchange string = "kExchange"

	// ApplicationRestoreParametersApplicationEnvironmentKHyperVVSS captures enum value "kHyperVVSS"
	ApplicationRestoreParametersApplicationEnvironmentKHyperVVSS string = "kHyperVVSS"

	// ApplicationRestoreParametersApplicationEnvironmentKOracle captures enum value "kOracle"
	ApplicationRestoreParametersApplicationEnvironmentKOracle string = "kOracle"

	// ApplicationRestoreParametersApplicationEnvironmentKGCP captures enum value "kGCP"
	ApplicationRestoreParametersApplicationEnvironmentKGCP string = "kGCP"

	// ApplicationRestoreParametersApplicationEnvironmentKFlashBlade captures enum value "kFlashBlade"
	ApplicationRestoreParametersApplicationEnvironmentKFlashBlade string = "kFlashBlade"

	// ApplicationRestoreParametersApplicationEnvironmentKAWSNative captures enum value "kAWSNative"
	ApplicationRestoreParametersApplicationEnvironmentKAWSNative string = "kAWSNative"

	// ApplicationRestoreParametersApplicationEnvironmentKO365 captures enum value "kO365"
	ApplicationRestoreParametersApplicationEnvironmentKO365 string = "kO365"

	// ApplicationRestoreParametersApplicationEnvironmentKO365Outlook captures enum value "kO365Outlook"
	ApplicationRestoreParametersApplicationEnvironmentKO365Outlook string = "kO365Outlook"

	// ApplicationRestoreParametersApplicationEnvironmentKHyperFlex captures enum value "kHyperFlex"
	ApplicationRestoreParametersApplicationEnvironmentKHyperFlex string = "kHyperFlex"

	// ApplicationRestoreParametersApplicationEnvironmentKGCPNative captures enum value "kGCPNative"
	ApplicationRestoreParametersApplicationEnvironmentKGCPNative string = "kGCPNative"

	// ApplicationRestoreParametersApplicationEnvironmentKAzureNative captures enum value "kAzureNative"
	ApplicationRestoreParametersApplicationEnvironmentKAzureNative string = "kAzureNative"

	// ApplicationRestoreParametersApplicationEnvironmentKKubernetes captures enum value "kKubernetes"
	ApplicationRestoreParametersApplicationEnvironmentKKubernetes string = "kKubernetes"

	// ApplicationRestoreParametersApplicationEnvironmentKElastifile captures enum value "kElastifile"
	ApplicationRestoreParametersApplicationEnvironmentKElastifile string = "kElastifile"

	// ApplicationRestoreParametersApplicationEnvironmentKAD captures enum value "kAD"
	ApplicationRestoreParametersApplicationEnvironmentKAD string = "kAD"

	// ApplicationRestoreParametersApplicationEnvironmentKRDSSnapshotManager captures enum value "kRDSSnapshotManager"
	ApplicationRestoreParametersApplicationEnvironmentKRDSSnapshotManager string = "kRDSSnapshotManager"

	// ApplicationRestoreParametersApplicationEnvironmentKCassandra captures enum value "kCassandra"
	ApplicationRestoreParametersApplicationEnvironmentKCassandra string = "kCassandra"

	// ApplicationRestoreParametersApplicationEnvironmentKMongoDB captures enum value "kMongoDB"
	ApplicationRestoreParametersApplicationEnvironmentKMongoDB string = "kMongoDB"

	// ApplicationRestoreParametersApplicationEnvironmentKCouchbase captures enum value "kCouchbase"
	ApplicationRestoreParametersApplicationEnvironmentKCouchbase string = "kCouchbase"

	// ApplicationRestoreParametersApplicationEnvironmentKHdfs captures enum value "kHdfs"
	ApplicationRestoreParametersApplicationEnvironmentKHdfs string = "kHdfs"

	// ApplicationRestoreParametersApplicationEnvironmentKHive captures enum value "kHive"
	ApplicationRestoreParametersApplicationEnvironmentKHive string = "kHive"

	// ApplicationRestoreParametersApplicationEnvironmentKHBase captures enum value "kHBase"
	ApplicationRestoreParametersApplicationEnvironmentKHBase string = "kHBase"

	// ApplicationRestoreParametersApplicationEnvironmentKUDA captures enum value "kUDA"
	ApplicationRestoreParametersApplicationEnvironmentKUDA string = "kUDA"

	// ApplicationRestoreParametersApplicationEnvironmentKO365Teams captures enum value "kO365Teams"
	ApplicationRestoreParametersApplicationEnvironmentKO365Teams string = "kO365Teams"

	// ApplicationRestoreParametersApplicationEnvironmentKO365Group captures enum value "kO365Group"
	ApplicationRestoreParametersApplicationEnvironmentKO365Group string = "kO365Group"

	// ApplicationRestoreParametersApplicationEnvironmentKO365Exchange captures enum value "kO365Exchange"
	ApplicationRestoreParametersApplicationEnvironmentKO365Exchange string = "kO365Exchange"

	// ApplicationRestoreParametersApplicationEnvironmentKO365OneDrive captures enum value "kO365OneDrive"
	ApplicationRestoreParametersApplicationEnvironmentKO365OneDrive string = "kO365OneDrive"

	// ApplicationRestoreParametersApplicationEnvironmentKO365Sharepoint captures enum value "kO365Sharepoint"
	ApplicationRestoreParametersApplicationEnvironmentKO365Sharepoint string = "kO365Sharepoint"

	// ApplicationRestoreParametersApplicationEnvironmentKO365PublicFolders captures enum value "kO365PublicFolders"
	ApplicationRestoreParametersApplicationEnvironmentKO365PublicFolders string = "kO365PublicFolders"
)

// prop value enum
func (m *ApplicationRestoreParameters) validateApplicationEnvironmentEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, applicationRestoreParametersTypeApplicationEnvironmentPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ApplicationRestoreParameters) validateApplicationEnvironment(formats strfmt.Registry) error {
	if swag.IsZero(m.ApplicationEnvironment) { // not required
		return nil
	}

	// value enum
	if err := m.validateApplicationEnvironmentEnum("applicationEnvironment", "body", *m.ApplicationEnvironment); err != nil {
		return err
	}

	return nil
}

func (m *ApplicationRestoreParameters) validateApplicationRestoreObjects(formats strfmt.Registry) error {
	if swag.IsZero(m.ApplicationRestoreObjects) { // not required
		return nil
	}

	for i := 0; i < len(m.ApplicationRestoreObjects); i++ {
		if swag.IsZero(m.ApplicationRestoreObjects[i]) { // not required
			continue
		}

		if m.ApplicationRestoreObjects[i] != nil {
			if err := m.ApplicationRestoreObjects[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("applicationRestoreObjects" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("applicationRestoreObjects" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ApplicationRestoreParameters) validateHostingProtectionSource(formats strfmt.Registry) error {
	if swag.IsZero(m.HostingProtectionSource) { // not required
		return nil
	}

	if m.HostingProtectionSource != nil {
		if err := m.HostingProtectionSource.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("hostingProtectionSource")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("hostingProtectionSource")
			}
			return err
		}
	}

	return nil
}

func (m *ApplicationRestoreParameters) validateProtectionSourceAndApplicationObjects(formats strfmt.Registry) error {
	if swag.IsZero(m.ProtectionSourceAndApplicationObjects) { // not required
		return nil
	}

	for i := 0; i < len(m.ProtectionSourceAndApplicationObjects); i++ {
		if swag.IsZero(m.ProtectionSourceAndApplicationObjects[i]) { // not required
			continue
		}

		if m.ProtectionSourceAndApplicationObjects[i] != nil {
			if err := m.ProtectionSourceAndApplicationObjects[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("protectionSourceAndApplicationObjects" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("protectionSourceAndApplicationObjects" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this application restore parameters based on the context it is used
func (m *ApplicationRestoreParameters) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateApplicationRestoreObjects(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateHostingProtectionSource(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateProtectionSourceAndApplicationObjects(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ApplicationRestoreParameters) contextValidateApplicationRestoreObjects(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.ApplicationRestoreObjects); i++ {

		if m.ApplicationRestoreObjects[i] != nil {

			if swag.IsZero(m.ApplicationRestoreObjects[i]) { // not required
				return nil
			}

			if err := m.ApplicationRestoreObjects[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("applicationRestoreObjects" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("applicationRestoreObjects" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ApplicationRestoreParameters) contextValidateHostingProtectionSource(ctx context.Context, formats strfmt.Registry) error {

	if m.HostingProtectionSource != nil {

		if swag.IsZero(m.HostingProtectionSource) { // not required
			return nil
		}

		if err := m.HostingProtectionSource.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("hostingProtectionSource")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("hostingProtectionSource")
			}
			return err
		}
	}

	return nil
}

func (m *ApplicationRestoreParameters) contextValidateProtectionSourceAndApplicationObjects(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.ProtectionSourceAndApplicationObjects); i++ {

		if m.ProtectionSourceAndApplicationObjects[i] != nil {

			if swag.IsZero(m.ProtectionSourceAndApplicationObjects[i]) { // not required
				return nil
			}

			if err := m.ProtectionSourceAndApplicationObjects[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("protectionSourceAndApplicationObjects" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("protectionSourceAndApplicationObjects" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ApplicationRestoreParameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ApplicationRestoreParameters) UnmarshalBinary(b []byte) error {
	var res ApplicationRestoreParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
