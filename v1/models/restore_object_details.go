// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RestoreObjectDetails Restore Object.
//
// Specifies an object to recover or clone or an object to restore files
// and folders from.
// A VM object can be recovered or cloned. A View object can be cloned.
// To specify a particular snapshot, you must specify a jobRunId and
// a startTimeUsecs.
// If jobRunId and startTimeUsecs are not specified, the last Job Run of the
// specified Job is used.
//
// swagger:model RestoreObjectDetails
type RestoreObjectDetails struct {

	// archival target
	ArchivalTarget *RestoreObjectDetailsArchivalTarget `json:"archivalTarget,omitempty"`

	// cloud deploy target
	CloudDeployTarget *RestoreObjectDetailsCloudDeployTarget `json:"cloudDeployTarget,omitempty"`

	// Specifies the type of the Protection Source.
	// Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
	// NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
	// 'kVMware' indicates the VMware Protection Source environment.
	// 'kHyperV' indicates the HyperV Protection Source environment.
	// 'kSQL' indicates the SQL Protection Source environment.
	// 'kView' indicates the View Protection Source environment.
	// 'kPuppeteer' indicates the Cohesity's Remote Adapter.
	// 'kPhysical' indicates the physical Protection Source environment.
	// 'kPure' indicates the Pure Storage Protection Source environment.
	// 'kNimble' indicates the Nimble Storage Protection Source environment.
	// 'kAzure' indicates the Microsoft's Azure Protection Source environment.
	// 'kNetapp' indicates the Netapp Protection Source environment.
	// 'kAgent' indicates the Agent Protection Source environment.
	// 'kGenericNas' indicates the Generic Network Attached Storage Protection
	// Source environment.
	// 'kAcropolis' indicates the Acropolis Protection Source environment.
	// 'kPhysicalFiles' indicates the Physical Files Protection Source environment.
	// 'kIbmFlashSystem' indicates the IBM Flash System Protection Source environment.
	// 'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
	// 'kGPFS' indicates IBM's GPFS Protection Source environment.
	// 'kKVM' indicates the KVM Protection Source environment.
	// 'kAWS' indicates the AWS Protection Source environment.
	// 'kExchange' indicates the Exchange Protection Source environment.
	// 'kHyperVVSS' indicates the HyperV VSS Protection Source
	// environment.
	// 'kOracle' indicates the Oracle Protection Source environment.
	// 'kGCP' indicates the Google Cloud Platform Protection Source environment.
	// 'kFlashBlade' indicates the Flash Blade Protection Source environment.
	// 'kAWSNative' indicates the AWS Native Protection Source environment.
	// 'kO365' indicates the Office 365 Protection Source environment.
	// 'kO365Outlook' indicates Office 365 outlook Protection Source environment.
	// 'kHyperFlex' indicates the Hyper Flex Protection Source environment.
	// 'kGCPNative' indicates the GCP Native Protection Source environment.
	// 'kAzureNative' indicates the Azure Native Protection Source environment.
	// 'kKubernetes' indicates a Kubernetes Protection Source environment.
	// 'kElastifile' indicates Elastifile Protection Source environment.
	// 'kAD' indicates Active Directory Protection Source environment.
	// 'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
	// 'kCassandra' indicates Cassandra Protection Source environment.
	// 'kMongoDB' indicates MongoDB Protection Source environment.
	// 'kCouchbase' indicates Couchbase Protection Source environment.
	// 'kHdfs' indicates Hdfs Protection Source environment.
	// 'kHive' indicates Hive Protection Source environment.
	// 'kHBase' indicates HBase Protection Source environment.
	// 'kUDA' indicates Universal Data Adapter Protection Source environment.
	// 'kO365Teams' indicates the Office365 Teams Protection Source environment.
	// 'kO365Group' indicates the Office365 Groups Protection Source environment.
	// 'kO365Exchange' indicates the Office365 Mailbox Protection Source environment.
	// 'kO365OneDrive' indicates the Office365 OneDrive Protection Source environment.
	// 'kO365Sharepoint' indicates the Office365 SharePoint Protection Source environment.
	// 'kO365PublicFolders' indicates the Office365 PublicFolders Protection Source environment.
	// Enum: ["kVMware","kHyperV","kSQL","kView","kPuppeteer","kPhysical","kPure","kNimble","kIbmFlashSystem","kAzure","kNetapp","kAgent","kGenericNas","kAcropolis","kPhysicalFiles","kIsilon","kGPFS","kKVM","kAWS","kExchange","kHyperVVSS","kOracle","kGCP","kFlashBlade","kAWSNative","kO365","kO365Outlook","kHyperFlex","kGCPNative","kAzureNative","kKubernetes","kElastifile","kAD","kRDSSnapshotManager","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kUDA","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kO365Sharepoint","kO365PublicFolders"]
	Environment *string `json:"environment,omitempty"`

	// Protection Job Id.
	//
	// Specifies id of the Protection Job that backed up the objects
	// to be restored.
	JobID *int64 `json:"jobId,omitempty"`

	// Specifies the id of the Job Run that captured the snapshot.
	JobRunID *int64 `json:"jobRunId,omitempty"`

	// job Uid
	JobUID *RestoreObjectDetailsJobUID `json:"jobUid,omitempty"`

	// Specifies the timestamp (in microseconds. from epoch) for recovering
	// to a point-in-time in the past.
	PointInTimeUsecs *int64 `json:"pointInTimeUsecs,omitempty"`

	// Specifies the id of the leaf object to recover, clone or recover
	// files/folders from.
	ProtectionSourceID *int64 `json:"protectionSourceId,omitempty"`

	// Specifies the name of the Protection Source.
	SourceName *string `json:"sourceName,omitempty"`

	// Specifies the time when the Job Run starts capturing a snapshot.
	// Specified as a Unix epoch Timestamp (in microseconds).
	StartedTimeUsecs *int64 `json:"startedTimeUsecs,omitempty"`
}

// Validate validates this restore object details
func (m *RestoreObjectDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateArchivalTarget(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCloudDeployTarget(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEnvironment(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateJobUID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RestoreObjectDetails) validateArchivalTarget(formats strfmt.Registry) error {
	if swag.IsZero(m.ArchivalTarget) { // not required
		return nil
	}

	if m.ArchivalTarget != nil {
		if err := m.ArchivalTarget.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("archivalTarget")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("archivalTarget")
			}
			return err
		}
	}

	return nil
}

func (m *RestoreObjectDetails) validateCloudDeployTarget(formats strfmt.Registry) error {
	if swag.IsZero(m.CloudDeployTarget) { // not required
		return nil
	}

	if m.CloudDeployTarget != nil {
		if err := m.CloudDeployTarget.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cloudDeployTarget")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("cloudDeployTarget")
			}
			return err
		}
	}

	return nil
}

var restoreObjectDetailsTypeEnvironmentPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kVMware","kHyperV","kSQL","kView","kPuppeteer","kPhysical","kPure","kNimble","kIbmFlashSystem","kAzure","kNetapp","kAgent","kGenericNas","kAcropolis","kPhysicalFiles","kIsilon","kGPFS","kKVM","kAWS","kExchange","kHyperVVSS","kOracle","kGCP","kFlashBlade","kAWSNative","kO365","kO365Outlook","kHyperFlex","kGCPNative","kAzureNative","kKubernetes","kElastifile","kAD","kRDSSnapshotManager","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kUDA","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kO365Sharepoint","kO365PublicFolders"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		restoreObjectDetailsTypeEnvironmentPropEnum = append(restoreObjectDetailsTypeEnvironmentPropEnum, v)
	}
}

const (

	// RestoreObjectDetailsEnvironmentKVMware captures enum value "kVMware"
	RestoreObjectDetailsEnvironmentKVMware string = "kVMware"

	// RestoreObjectDetailsEnvironmentKHyperV captures enum value "kHyperV"
	RestoreObjectDetailsEnvironmentKHyperV string = "kHyperV"

	// RestoreObjectDetailsEnvironmentKSQL captures enum value "kSQL"
	RestoreObjectDetailsEnvironmentKSQL string = "kSQL"

	// RestoreObjectDetailsEnvironmentKView captures enum value "kView"
	RestoreObjectDetailsEnvironmentKView string = "kView"

	// RestoreObjectDetailsEnvironmentKPuppeteer captures enum value "kPuppeteer"
	RestoreObjectDetailsEnvironmentKPuppeteer string = "kPuppeteer"

	// RestoreObjectDetailsEnvironmentKPhysical captures enum value "kPhysical"
	RestoreObjectDetailsEnvironmentKPhysical string = "kPhysical"

	// RestoreObjectDetailsEnvironmentKPure captures enum value "kPure"
	RestoreObjectDetailsEnvironmentKPure string = "kPure"

	// RestoreObjectDetailsEnvironmentKNimble captures enum value "kNimble"
	RestoreObjectDetailsEnvironmentKNimble string = "kNimble"

	// RestoreObjectDetailsEnvironmentKIbmFlashSystem captures enum value "kIbmFlashSystem"
	RestoreObjectDetailsEnvironmentKIbmFlashSystem string = "kIbmFlashSystem"

	// RestoreObjectDetailsEnvironmentKAzure captures enum value "kAzure"
	RestoreObjectDetailsEnvironmentKAzure string = "kAzure"

	// RestoreObjectDetailsEnvironmentKNetapp captures enum value "kNetapp"
	RestoreObjectDetailsEnvironmentKNetapp string = "kNetapp"

	// RestoreObjectDetailsEnvironmentKAgent captures enum value "kAgent"
	RestoreObjectDetailsEnvironmentKAgent string = "kAgent"

	// RestoreObjectDetailsEnvironmentKGenericNas captures enum value "kGenericNas"
	RestoreObjectDetailsEnvironmentKGenericNas string = "kGenericNas"

	// RestoreObjectDetailsEnvironmentKAcropolis captures enum value "kAcropolis"
	RestoreObjectDetailsEnvironmentKAcropolis string = "kAcropolis"

	// RestoreObjectDetailsEnvironmentKPhysicalFiles captures enum value "kPhysicalFiles"
	RestoreObjectDetailsEnvironmentKPhysicalFiles string = "kPhysicalFiles"

	// RestoreObjectDetailsEnvironmentKIsilon captures enum value "kIsilon"
	RestoreObjectDetailsEnvironmentKIsilon string = "kIsilon"

	// RestoreObjectDetailsEnvironmentKGPFS captures enum value "kGPFS"
	RestoreObjectDetailsEnvironmentKGPFS string = "kGPFS"

	// RestoreObjectDetailsEnvironmentKKVM captures enum value "kKVM"
	RestoreObjectDetailsEnvironmentKKVM string = "kKVM"

	// RestoreObjectDetailsEnvironmentKAWS captures enum value "kAWS"
	RestoreObjectDetailsEnvironmentKAWS string = "kAWS"

	// RestoreObjectDetailsEnvironmentKExchange captures enum value "kExchange"
	RestoreObjectDetailsEnvironmentKExchange string = "kExchange"

	// RestoreObjectDetailsEnvironmentKHyperVVSS captures enum value "kHyperVVSS"
	RestoreObjectDetailsEnvironmentKHyperVVSS string = "kHyperVVSS"

	// RestoreObjectDetailsEnvironmentKOracle captures enum value "kOracle"
	RestoreObjectDetailsEnvironmentKOracle string = "kOracle"

	// RestoreObjectDetailsEnvironmentKGCP captures enum value "kGCP"
	RestoreObjectDetailsEnvironmentKGCP string = "kGCP"

	// RestoreObjectDetailsEnvironmentKFlashBlade captures enum value "kFlashBlade"
	RestoreObjectDetailsEnvironmentKFlashBlade string = "kFlashBlade"

	// RestoreObjectDetailsEnvironmentKAWSNative captures enum value "kAWSNative"
	RestoreObjectDetailsEnvironmentKAWSNative string = "kAWSNative"

	// RestoreObjectDetailsEnvironmentKO365 captures enum value "kO365"
	RestoreObjectDetailsEnvironmentKO365 string = "kO365"

	// RestoreObjectDetailsEnvironmentKO365Outlook captures enum value "kO365Outlook"
	RestoreObjectDetailsEnvironmentKO365Outlook string = "kO365Outlook"

	// RestoreObjectDetailsEnvironmentKHyperFlex captures enum value "kHyperFlex"
	RestoreObjectDetailsEnvironmentKHyperFlex string = "kHyperFlex"

	// RestoreObjectDetailsEnvironmentKGCPNative captures enum value "kGCPNative"
	RestoreObjectDetailsEnvironmentKGCPNative string = "kGCPNative"

	// RestoreObjectDetailsEnvironmentKAzureNative captures enum value "kAzureNative"
	RestoreObjectDetailsEnvironmentKAzureNative string = "kAzureNative"

	// RestoreObjectDetailsEnvironmentKKubernetes captures enum value "kKubernetes"
	RestoreObjectDetailsEnvironmentKKubernetes string = "kKubernetes"

	// RestoreObjectDetailsEnvironmentKElastifile captures enum value "kElastifile"
	RestoreObjectDetailsEnvironmentKElastifile string = "kElastifile"

	// RestoreObjectDetailsEnvironmentKAD captures enum value "kAD"
	RestoreObjectDetailsEnvironmentKAD string = "kAD"

	// RestoreObjectDetailsEnvironmentKRDSSnapshotManager captures enum value "kRDSSnapshotManager"
	RestoreObjectDetailsEnvironmentKRDSSnapshotManager string = "kRDSSnapshotManager"

	// RestoreObjectDetailsEnvironmentKCassandra captures enum value "kCassandra"
	RestoreObjectDetailsEnvironmentKCassandra string = "kCassandra"

	// RestoreObjectDetailsEnvironmentKMongoDB captures enum value "kMongoDB"
	RestoreObjectDetailsEnvironmentKMongoDB string = "kMongoDB"

	// RestoreObjectDetailsEnvironmentKCouchbase captures enum value "kCouchbase"
	RestoreObjectDetailsEnvironmentKCouchbase string = "kCouchbase"

	// RestoreObjectDetailsEnvironmentKHdfs captures enum value "kHdfs"
	RestoreObjectDetailsEnvironmentKHdfs string = "kHdfs"

	// RestoreObjectDetailsEnvironmentKHive captures enum value "kHive"
	RestoreObjectDetailsEnvironmentKHive string = "kHive"

	// RestoreObjectDetailsEnvironmentKHBase captures enum value "kHBase"
	RestoreObjectDetailsEnvironmentKHBase string = "kHBase"

	// RestoreObjectDetailsEnvironmentKUDA captures enum value "kUDA"
	RestoreObjectDetailsEnvironmentKUDA string = "kUDA"

	// RestoreObjectDetailsEnvironmentKO365Teams captures enum value "kO365Teams"
	RestoreObjectDetailsEnvironmentKO365Teams string = "kO365Teams"

	// RestoreObjectDetailsEnvironmentKO365Group captures enum value "kO365Group"
	RestoreObjectDetailsEnvironmentKO365Group string = "kO365Group"

	// RestoreObjectDetailsEnvironmentKO365Exchange captures enum value "kO365Exchange"
	RestoreObjectDetailsEnvironmentKO365Exchange string = "kO365Exchange"

	// RestoreObjectDetailsEnvironmentKO365OneDrive captures enum value "kO365OneDrive"
	RestoreObjectDetailsEnvironmentKO365OneDrive string = "kO365OneDrive"

	// RestoreObjectDetailsEnvironmentKO365Sharepoint captures enum value "kO365Sharepoint"
	RestoreObjectDetailsEnvironmentKO365Sharepoint string = "kO365Sharepoint"

	// RestoreObjectDetailsEnvironmentKO365PublicFolders captures enum value "kO365PublicFolders"
	RestoreObjectDetailsEnvironmentKO365PublicFolders string = "kO365PublicFolders"
)

// prop value enum
func (m *RestoreObjectDetails) validateEnvironmentEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, restoreObjectDetailsTypeEnvironmentPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *RestoreObjectDetails) validateEnvironment(formats strfmt.Registry) error {
	if swag.IsZero(m.Environment) { // not required
		return nil
	}

	// value enum
	if err := m.validateEnvironmentEnum("environment", "body", *m.Environment); err != nil {
		return err
	}

	return nil
}

func (m *RestoreObjectDetails) validateJobUID(formats strfmt.Registry) error {
	if swag.IsZero(m.JobUID) { // not required
		return nil
	}

	if m.JobUID != nil {
		if err := m.JobUID.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("jobUid")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("jobUid")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this restore object details based on the context it is used
func (m *RestoreObjectDetails) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateArchivalTarget(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateCloudDeployTarget(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateJobUID(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RestoreObjectDetails) contextValidateArchivalTarget(ctx context.Context, formats strfmt.Registry) error {

	if m.ArchivalTarget != nil {

		if swag.IsZero(m.ArchivalTarget) { // not required
			return nil
		}

		if err := m.ArchivalTarget.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("archivalTarget")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("archivalTarget")
			}
			return err
		}
	}

	return nil
}

func (m *RestoreObjectDetails) contextValidateCloudDeployTarget(ctx context.Context, formats strfmt.Registry) error {

	if m.CloudDeployTarget != nil {

		if swag.IsZero(m.CloudDeployTarget) { // not required
			return nil
		}

		if err := m.CloudDeployTarget.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cloudDeployTarget")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("cloudDeployTarget")
			}
			return err
		}
	}

	return nil
}

func (m *RestoreObjectDetails) contextValidateJobUID(ctx context.Context, formats strfmt.Registry) error {

	if m.JobUID != nil {

		if swag.IsZero(m.JobUID) { // not required
			return nil
		}

		if err := m.JobUID.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("jobUid")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("jobUid")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RestoreObjectDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RestoreObjectDetails) UnmarshalBinary(b []byte) error {
	var res RestoreObjectDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
