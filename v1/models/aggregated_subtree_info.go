// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AggregatedSubtreeInfo Aggregated Subtree Info.
//
// Aggregated information about a node subtree.
//
// swagger:model AggregatedSubtreeInfo
type AggregatedSubtreeInfo struct {

	// Specifies the environment such as 'kSQL' or 'kVMware', where the
	// Protection Source exists.
	// Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
	// NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
	// 'kVMware' indicates the VMware Protection Source environment.
	// 'kHyperV' indicates the HyperV Protection Source environment.
	// 'kSQL' indicates the SQL Protection Source environment.
	// 'kView' indicates the View Protection Source environment.
	// 'kPuppeteer' indicates the Cohesity's Remote Adapter.
	// 'kPhysical' indicates the physical Protection Source environment.
	// 'kPure' indicates the Pure Storage Protection Source environment.
	// 'kNimble' indicates the Nimble Storage Protection Source environment.
	// 'kAzure' indicates the Microsoft's Azure Protection Source environment.
	// 'kNetapp' indicates the Netapp Protection Source environment.
	// 'kAgent' indicates the Agent Protection Source environment.
	// 'kGenericNas' indicates the Generic Network Attached Storage Protection
	// Source environment.
	// 'kAcropolis' indicates the Acropolis Protection Source environment.
	// 'kPhysicalFiles' indicates the Physical Files Protection Source environment.
	// 'kIbmFlashSystem' indicates the IBM Flash System Protection Source environment.
	// 'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
	// 'kGPFS' indicates IBM's GPFS Protection Source environment.
	// 'kKVM' indicates the KVM Protection Source environment.
	// 'kAWS' indicates the AWS Protection Source environment.
	// 'kExchange' indicates the Exchange Protection Source environment.
	// 'kHyperVVSS' indicates the HyperV VSS Protection Source
	// environment.
	// 'kOracle' indicates the Oracle Protection Source environment.
	// 'kGCP' indicates the Google Cloud Platform Protection Source environment.
	// 'kFlashBlade' indicates the Flash Blade Protection Source environment.
	// 'kAWSNative' indicates the AWS Native Protection Source environment.
	// 'kO365' indicates the Office 365 Protection Source environment.
	// 'kO365Outlook' indicates Office 365 outlook Protection Source environment.
	// 'kHyperFlex' indicates the Hyper Flex Protection Source environment.
	// 'kGCPNative' indicates the GCP Native Protection Source environment.
	// 'kAzureNative' indicates the Azure Native Protection Source environment.
	// 'kKubernetes' indicates a Kubernetes Protection Source environment.
	// 'kElastifile' indicates Elastifile Protection Source environment.
	// 'kAD' indicates Active Directory Protection Source environment.
	// 'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
	// 'kCassandra' indicates Cassandra Protection Source environment.
	// 'kMongoDB' indicates MongoDB Protection Source environment.
	// 'kCouchbase' indicates Couchbase Protection Source environment.
	// 'kHdfs' indicates Hdfs Protection Source environment.
	// 'kHive' indicates Hive Protection Source environment.
	// 'kHBase' indicates HBase Protection Source environment.
	// 'kUDA' indicates Universal Data Adapter Protection Source environment.
	// 'kO365Teams' indicates the Office365 Teams Protection Source environment.
	// 'kO365Group' indicates the Office365 Groups Protection Source environment.
	// 'kO365Exchange' indicates the Office365 Mailbox Protection Source environment.
	// 'kO365OneDrive' indicates the Office365 OneDrive Protection Source environment.
	// 'kO365Sharepoint' indicates the Office365 SharePoint Protection Source environment.
	// 'kO365PublicFolders' indicates the Office365 PublicFolders Protection Source environment.
	// Enum: ["kVMware","kHyperV","kSQL","kView","kPuppeteer","kPhysical","kPure","kNimble","kIbmFlashSystem","kAzure","kNetapp","kAgent","kGenericNas","kAcropolis","kPhysicalFiles","kIsilon","kGPFS","kKVM","kAWS","kExchange","kHyperVVSS","kOracle","kGCP","kFlashBlade","kAWSNative","kO365","kO365Outlook","kHyperFlex","kGCPNative","kAzureNative","kKubernetes","kElastifile","kAD","kRDSSnapshotManager","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kUDA","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kO365Sharepoint","kO365PublicFolders"]
	Environment *string `json:"environment,omitempty"`

	// Specifies the number of leaf nodes under the subtree of this node.
	LeavesCount *int64 `json:"leavesCount,omitempty"`

	// Specifies the total logical size of the data under the subtree
	// of this node.
	TotalLogicalSize *int64 `json:"totalLogicalSize,omitempty"`
}

// Validate validates this aggregated subtree info
func (m *AggregatedSubtreeInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnvironment(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var aggregatedSubtreeInfoTypeEnvironmentPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kVMware","kHyperV","kSQL","kView","kPuppeteer","kPhysical","kPure","kNimble","kIbmFlashSystem","kAzure","kNetapp","kAgent","kGenericNas","kAcropolis","kPhysicalFiles","kIsilon","kGPFS","kKVM","kAWS","kExchange","kHyperVVSS","kOracle","kGCP","kFlashBlade","kAWSNative","kO365","kO365Outlook","kHyperFlex","kGCPNative","kAzureNative","kKubernetes","kElastifile","kAD","kRDSSnapshotManager","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kUDA","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kO365Sharepoint","kO365PublicFolders"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		aggregatedSubtreeInfoTypeEnvironmentPropEnum = append(aggregatedSubtreeInfoTypeEnvironmentPropEnum, v)
	}
}

const (

	// AggregatedSubtreeInfoEnvironmentKVMware captures enum value "kVMware"
	AggregatedSubtreeInfoEnvironmentKVMware string = "kVMware"

	// AggregatedSubtreeInfoEnvironmentKHyperV captures enum value "kHyperV"
	AggregatedSubtreeInfoEnvironmentKHyperV string = "kHyperV"

	// AggregatedSubtreeInfoEnvironmentKSQL captures enum value "kSQL"
	AggregatedSubtreeInfoEnvironmentKSQL string = "kSQL"

	// AggregatedSubtreeInfoEnvironmentKView captures enum value "kView"
	AggregatedSubtreeInfoEnvironmentKView string = "kView"

	// AggregatedSubtreeInfoEnvironmentKPuppeteer captures enum value "kPuppeteer"
	AggregatedSubtreeInfoEnvironmentKPuppeteer string = "kPuppeteer"

	// AggregatedSubtreeInfoEnvironmentKPhysical captures enum value "kPhysical"
	AggregatedSubtreeInfoEnvironmentKPhysical string = "kPhysical"

	// AggregatedSubtreeInfoEnvironmentKPure captures enum value "kPure"
	AggregatedSubtreeInfoEnvironmentKPure string = "kPure"

	// AggregatedSubtreeInfoEnvironmentKNimble captures enum value "kNimble"
	AggregatedSubtreeInfoEnvironmentKNimble string = "kNimble"

	// AggregatedSubtreeInfoEnvironmentKIbmFlashSystem captures enum value "kIbmFlashSystem"
	AggregatedSubtreeInfoEnvironmentKIbmFlashSystem string = "kIbmFlashSystem"

	// AggregatedSubtreeInfoEnvironmentKAzure captures enum value "kAzure"
	AggregatedSubtreeInfoEnvironmentKAzure string = "kAzure"

	// AggregatedSubtreeInfoEnvironmentKNetapp captures enum value "kNetapp"
	AggregatedSubtreeInfoEnvironmentKNetapp string = "kNetapp"

	// AggregatedSubtreeInfoEnvironmentKAgent captures enum value "kAgent"
	AggregatedSubtreeInfoEnvironmentKAgent string = "kAgent"

	// AggregatedSubtreeInfoEnvironmentKGenericNas captures enum value "kGenericNas"
	AggregatedSubtreeInfoEnvironmentKGenericNas string = "kGenericNas"

	// AggregatedSubtreeInfoEnvironmentKAcropolis captures enum value "kAcropolis"
	AggregatedSubtreeInfoEnvironmentKAcropolis string = "kAcropolis"

	// AggregatedSubtreeInfoEnvironmentKPhysicalFiles captures enum value "kPhysicalFiles"
	AggregatedSubtreeInfoEnvironmentKPhysicalFiles string = "kPhysicalFiles"

	// AggregatedSubtreeInfoEnvironmentKIsilon captures enum value "kIsilon"
	AggregatedSubtreeInfoEnvironmentKIsilon string = "kIsilon"

	// AggregatedSubtreeInfoEnvironmentKGPFS captures enum value "kGPFS"
	AggregatedSubtreeInfoEnvironmentKGPFS string = "kGPFS"

	// AggregatedSubtreeInfoEnvironmentKKVM captures enum value "kKVM"
	AggregatedSubtreeInfoEnvironmentKKVM string = "kKVM"

	// AggregatedSubtreeInfoEnvironmentKAWS captures enum value "kAWS"
	AggregatedSubtreeInfoEnvironmentKAWS string = "kAWS"

	// AggregatedSubtreeInfoEnvironmentKExchange captures enum value "kExchange"
	AggregatedSubtreeInfoEnvironmentKExchange string = "kExchange"

	// AggregatedSubtreeInfoEnvironmentKHyperVVSS captures enum value "kHyperVVSS"
	AggregatedSubtreeInfoEnvironmentKHyperVVSS string = "kHyperVVSS"

	// AggregatedSubtreeInfoEnvironmentKOracle captures enum value "kOracle"
	AggregatedSubtreeInfoEnvironmentKOracle string = "kOracle"

	// AggregatedSubtreeInfoEnvironmentKGCP captures enum value "kGCP"
	AggregatedSubtreeInfoEnvironmentKGCP string = "kGCP"

	// AggregatedSubtreeInfoEnvironmentKFlashBlade captures enum value "kFlashBlade"
	AggregatedSubtreeInfoEnvironmentKFlashBlade string = "kFlashBlade"

	// AggregatedSubtreeInfoEnvironmentKAWSNative captures enum value "kAWSNative"
	AggregatedSubtreeInfoEnvironmentKAWSNative string = "kAWSNative"

	// AggregatedSubtreeInfoEnvironmentKO365 captures enum value "kO365"
	AggregatedSubtreeInfoEnvironmentKO365 string = "kO365"

	// AggregatedSubtreeInfoEnvironmentKO365Outlook captures enum value "kO365Outlook"
	AggregatedSubtreeInfoEnvironmentKO365Outlook string = "kO365Outlook"

	// AggregatedSubtreeInfoEnvironmentKHyperFlex captures enum value "kHyperFlex"
	AggregatedSubtreeInfoEnvironmentKHyperFlex string = "kHyperFlex"

	// AggregatedSubtreeInfoEnvironmentKGCPNative captures enum value "kGCPNative"
	AggregatedSubtreeInfoEnvironmentKGCPNative string = "kGCPNative"

	// AggregatedSubtreeInfoEnvironmentKAzureNative captures enum value "kAzureNative"
	AggregatedSubtreeInfoEnvironmentKAzureNative string = "kAzureNative"

	// AggregatedSubtreeInfoEnvironmentKKubernetes captures enum value "kKubernetes"
	AggregatedSubtreeInfoEnvironmentKKubernetes string = "kKubernetes"

	// AggregatedSubtreeInfoEnvironmentKElastifile captures enum value "kElastifile"
	AggregatedSubtreeInfoEnvironmentKElastifile string = "kElastifile"

	// AggregatedSubtreeInfoEnvironmentKAD captures enum value "kAD"
	AggregatedSubtreeInfoEnvironmentKAD string = "kAD"

	// AggregatedSubtreeInfoEnvironmentKRDSSnapshotManager captures enum value "kRDSSnapshotManager"
	AggregatedSubtreeInfoEnvironmentKRDSSnapshotManager string = "kRDSSnapshotManager"

	// AggregatedSubtreeInfoEnvironmentKCassandra captures enum value "kCassandra"
	AggregatedSubtreeInfoEnvironmentKCassandra string = "kCassandra"

	// AggregatedSubtreeInfoEnvironmentKMongoDB captures enum value "kMongoDB"
	AggregatedSubtreeInfoEnvironmentKMongoDB string = "kMongoDB"

	// AggregatedSubtreeInfoEnvironmentKCouchbase captures enum value "kCouchbase"
	AggregatedSubtreeInfoEnvironmentKCouchbase string = "kCouchbase"

	// AggregatedSubtreeInfoEnvironmentKHdfs captures enum value "kHdfs"
	AggregatedSubtreeInfoEnvironmentKHdfs string = "kHdfs"

	// AggregatedSubtreeInfoEnvironmentKHive captures enum value "kHive"
	AggregatedSubtreeInfoEnvironmentKHive string = "kHive"

	// AggregatedSubtreeInfoEnvironmentKHBase captures enum value "kHBase"
	AggregatedSubtreeInfoEnvironmentKHBase string = "kHBase"

	// AggregatedSubtreeInfoEnvironmentKUDA captures enum value "kUDA"
	AggregatedSubtreeInfoEnvironmentKUDA string = "kUDA"

	// AggregatedSubtreeInfoEnvironmentKO365Teams captures enum value "kO365Teams"
	AggregatedSubtreeInfoEnvironmentKO365Teams string = "kO365Teams"

	// AggregatedSubtreeInfoEnvironmentKO365Group captures enum value "kO365Group"
	AggregatedSubtreeInfoEnvironmentKO365Group string = "kO365Group"

	// AggregatedSubtreeInfoEnvironmentKO365Exchange captures enum value "kO365Exchange"
	AggregatedSubtreeInfoEnvironmentKO365Exchange string = "kO365Exchange"

	// AggregatedSubtreeInfoEnvironmentKO365OneDrive captures enum value "kO365OneDrive"
	AggregatedSubtreeInfoEnvironmentKO365OneDrive string = "kO365OneDrive"

	// AggregatedSubtreeInfoEnvironmentKO365Sharepoint captures enum value "kO365Sharepoint"
	AggregatedSubtreeInfoEnvironmentKO365Sharepoint string = "kO365Sharepoint"

	// AggregatedSubtreeInfoEnvironmentKO365PublicFolders captures enum value "kO365PublicFolders"
	AggregatedSubtreeInfoEnvironmentKO365PublicFolders string = "kO365PublicFolders"
)

// prop value enum
func (m *AggregatedSubtreeInfo) validateEnvironmentEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, aggregatedSubtreeInfoTypeEnvironmentPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AggregatedSubtreeInfo) validateEnvironment(formats strfmt.Registry) error {
	if swag.IsZero(m.Environment) { // not required
		return nil
	}

	// value enum
	if err := m.validateEnvironmentEnum("environment", "body", *m.Environment); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this aggregated subtree info based on context it is used
func (m *AggregatedSubtreeInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AggregatedSubtreeInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AggregatedSubtreeInfo) UnmarshalBinary(b []byte) error {
	var res AggregatedSubtreeInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
