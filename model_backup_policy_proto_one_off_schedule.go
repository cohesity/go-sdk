/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// BackupPolicyProtoOneOffSchedule struct for BackupPolicyProtoOneOffSchedule
type BackupPolicyProtoOneOffSchedule struct {
	Time *Time `json:"time,omitempty"`
}

// NewBackupPolicyProtoOneOffSchedule instantiates a new BackupPolicyProtoOneOffSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupPolicyProtoOneOffSchedule() *BackupPolicyProtoOneOffSchedule {
	this := BackupPolicyProtoOneOffSchedule{}
	return &this
}

// NewBackupPolicyProtoOneOffScheduleWithDefaults instantiates a new BackupPolicyProtoOneOffSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupPolicyProtoOneOffScheduleWithDefaults() *BackupPolicyProtoOneOffSchedule {
	this := BackupPolicyProtoOneOffSchedule{}
	return &this
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *BackupPolicyProtoOneOffSchedule) GetTime() Time {
	if o == nil || o.Time == nil {
		var ret Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupPolicyProtoOneOffSchedule) GetTimeOk() (*Time, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *BackupPolicyProtoOneOffSchedule) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given Time and assigns it to the Time field.
func (o *BackupPolicyProtoOneOffSchedule) SetTime(v Time) {
	o.Time = &v
}

func (o BackupPolicyProtoOneOffSchedule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	return json.Marshal(toSerialize)
}

type NullableBackupPolicyProtoOneOffSchedule struct {
	value *BackupPolicyProtoOneOffSchedule
	isSet bool
}

func (v NullableBackupPolicyProtoOneOffSchedule) Get() *BackupPolicyProtoOneOffSchedule {
	return v.value
}

func (v *NullableBackupPolicyProtoOneOffSchedule) Set(val *BackupPolicyProtoOneOffSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupPolicyProtoOneOffSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupPolicyProtoOneOffSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupPolicyProtoOneOffSchedule(val *BackupPolicyProtoOneOffSchedule) *NullableBackupPolicyProtoOneOffSchedule {
	return &NullableBackupPolicyProtoOneOffSchedule{value: val, isSet: true}
}

func (v NullableBackupPolicyProtoOneOffSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupPolicyProtoOneOffSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


