/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// RestoreOneDriveParamsDriveItem This will be set in case of partial drive recovery.
type RestoreOneDriveParamsDriveItem struct {
	// The path of the drive item relative to root.
	DriveItemPath NullableString `json:"driveItemPath,omitempty"`
	// The unique identifier of the item within the Drive.
	Id NullableString `json:"id,omitempty"`
	// Specify if the item is a file or not.
	IsFileItem NullableBool `json:"isFileItem,omitempty"`
}

// NewRestoreOneDriveParamsDriveItem instantiates a new RestoreOneDriveParamsDriveItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreOneDriveParamsDriveItem() *RestoreOneDriveParamsDriveItem {
	this := RestoreOneDriveParamsDriveItem{}
	return &this
}

// NewRestoreOneDriveParamsDriveItemWithDefaults instantiates a new RestoreOneDriveParamsDriveItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreOneDriveParamsDriveItemWithDefaults() *RestoreOneDriveParamsDriveItem {
	this := RestoreOneDriveParamsDriveItem{}
	return &this
}

// GetDriveItemPath returns the DriveItemPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreOneDriveParamsDriveItem) GetDriveItemPath() string {
	if o == nil || o.DriveItemPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.DriveItemPath.Get()
}

// GetDriveItemPathOk returns a tuple with the DriveItemPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreOneDriveParamsDriveItem) GetDriveItemPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DriveItemPath.Get(), o.DriveItemPath.IsSet()
}

// HasDriveItemPath returns a boolean if a field has been set.
func (o *RestoreOneDriveParamsDriveItem) HasDriveItemPath() bool {
	if o != nil && o.DriveItemPath.IsSet() {
		return true
	}

	return false
}

// SetDriveItemPath gets a reference to the given NullableString and assigns it to the DriveItemPath field.
func (o *RestoreOneDriveParamsDriveItem) SetDriveItemPath(v string) {
	o.DriveItemPath.Set(&v)
}
// SetDriveItemPathNil sets the value for DriveItemPath to be an explicit nil
func (o *RestoreOneDriveParamsDriveItem) SetDriveItemPathNil() {
	o.DriveItemPath.Set(nil)
}

// UnsetDriveItemPath ensures that no value is present for DriveItemPath, not even an explicit nil
func (o *RestoreOneDriveParamsDriveItem) UnsetDriveItemPath() {
	o.DriveItemPath.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreOneDriveParamsDriveItem) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreOneDriveParamsDriveItem) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *RestoreOneDriveParamsDriveItem) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *RestoreOneDriveParamsDriveItem) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *RestoreOneDriveParamsDriveItem) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *RestoreOneDriveParamsDriveItem) UnsetId() {
	o.Id.Unset()
}

// GetIsFileItem returns the IsFileItem field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreOneDriveParamsDriveItem) GetIsFileItem() bool {
	if o == nil || o.IsFileItem.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsFileItem.Get()
}

// GetIsFileItemOk returns a tuple with the IsFileItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreOneDriveParamsDriveItem) GetIsFileItemOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsFileItem.Get(), o.IsFileItem.IsSet()
}

// HasIsFileItem returns a boolean if a field has been set.
func (o *RestoreOneDriveParamsDriveItem) HasIsFileItem() bool {
	if o != nil && o.IsFileItem.IsSet() {
		return true
	}

	return false
}

// SetIsFileItem gets a reference to the given NullableBool and assigns it to the IsFileItem field.
func (o *RestoreOneDriveParamsDriveItem) SetIsFileItem(v bool) {
	o.IsFileItem.Set(&v)
}
// SetIsFileItemNil sets the value for IsFileItem to be an explicit nil
func (o *RestoreOneDriveParamsDriveItem) SetIsFileItemNil() {
	o.IsFileItem.Set(nil)
}

// UnsetIsFileItem ensures that no value is present for IsFileItem, not even an explicit nil
func (o *RestoreOneDriveParamsDriveItem) UnsetIsFileItem() {
	o.IsFileItem.Unset()
}

func (o RestoreOneDriveParamsDriveItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DriveItemPath.IsSet() {
		toSerialize["driveItemPath"] = o.DriveItemPath.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.IsFileItem.IsSet() {
		toSerialize["isFileItem"] = o.IsFileItem.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreOneDriveParamsDriveItem struct {
	value *RestoreOneDriveParamsDriveItem
	isSet bool
}

func (v NullableRestoreOneDriveParamsDriveItem) Get() *RestoreOneDriveParamsDriveItem {
	return v.value
}

func (v *NullableRestoreOneDriveParamsDriveItem) Set(val *RestoreOneDriveParamsDriveItem) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreOneDriveParamsDriveItem) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreOneDriveParamsDriveItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreOneDriveParamsDriveItem(val *RestoreOneDriveParamsDriveItem) *NullableRestoreOneDriveParamsDriveItem {
	return &NullableRestoreOneDriveParamsDriveItem{value: val, isSet: true}
}

func (v NullableRestoreOneDriveParamsDriveItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreOneDriveParamsDriveItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


