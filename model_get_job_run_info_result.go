/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// GetJobRunInfoResult struct for GetJobRunInfoResult
type GetJobRunInfoResult struct {
	// Specifies bytes transferred in the run.
	BytesTransferred NullableInt64 `json:"bytesTransferred,omitempty"`
	// Specifies the end time of the run.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	// Specifies the number of failed objects in the run.
	FailureEntities NullableInt64 `json:"failureEntities,omitempty"`
	// Specifies the job id.
	JobId NullableString `json:"jobId,omitempty"`
	// Specifies the job run id.
	JobRunId NullableString `json:"jobRunId,omitempty"`
	// Specifies the job type, protection, replication, archival, apollo, indexing etc.
	JobType NullableString `json:"jobType,omitempty"`
	// Specifies if the sla was violated the run.
	SlaViolated NullableBool `json:"slaViolated,omitempty"`
	// Specifies the start time of the run.
	StartTimeUsecs NullableInt64 `json:"startTimeUsecs,omitempty"`
	// Specifies status of the run
	Status NullableInt64 `json:"status,omitempty"`
	// Specifies the number successful objects in the run.
	SuccessEntities NullableInt64 `json:"successEntities,omitempty"`
	// Specifies the number of objects in the run.
	TotalEntities NullableInt64 `json:"totalEntities,omitempty"`
}

// NewGetJobRunInfoResult instantiates a new GetJobRunInfoResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetJobRunInfoResult() *GetJobRunInfoResult {
	this := GetJobRunInfoResult{}
	return &this
}

// NewGetJobRunInfoResultWithDefaults instantiates a new GetJobRunInfoResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetJobRunInfoResultWithDefaults() *GetJobRunInfoResult {
	this := GetJobRunInfoResult{}
	return &this
}

// GetBytesTransferred returns the BytesTransferred field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetJobRunInfoResult) GetBytesTransferred() int64 {
	if o == nil || o.BytesTransferred.Get() == nil {
		var ret int64
		return ret
	}
	return *o.BytesTransferred.Get()
}

// GetBytesTransferredOk returns a tuple with the BytesTransferred field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetJobRunInfoResult) GetBytesTransferredOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BytesTransferred.Get(), o.BytesTransferred.IsSet()
}

// HasBytesTransferred returns a boolean if a field has been set.
func (o *GetJobRunInfoResult) HasBytesTransferred() bool {
	if o != nil && o.BytesTransferred.IsSet() {
		return true
	}

	return false
}

// SetBytesTransferred gets a reference to the given NullableInt64 and assigns it to the BytesTransferred field.
func (o *GetJobRunInfoResult) SetBytesTransferred(v int64) {
	o.BytesTransferred.Set(&v)
}
// SetBytesTransferredNil sets the value for BytesTransferred to be an explicit nil
func (o *GetJobRunInfoResult) SetBytesTransferredNil() {
	o.BytesTransferred.Set(nil)
}

// UnsetBytesTransferred ensures that no value is present for BytesTransferred, not even an explicit nil
func (o *GetJobRunInfoResult) UnsetBytesTransferred() {
	o.BytesTransferred.Unset()
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetJobRunInfoResult) GetEndTimeUsecs() int64 {
	if o == nil || o.EndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetJobRunInfoResult) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *GetJobRunInfoResult) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *GetJobRunInfoResult) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *GetJobRunInfoResult) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *GetJobRunInfoResult) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetFailureEntities returns the FailureEntities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetJobRunInfoResult) GetFailureEntities() int64 {
	if o == nil || o.FailureEntities.Get() == nil {
		var ret int64
		return ret
	}
	return *o.FailureEntities.Get()
}

// GetFailureEntitiesOk returns a tuple with the FailureEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetJobRunInfoResult) GetFailureEntitiesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FailureEntities.Get(), o.FailureEntities.IsSet()
}

// HasFailureEntities returns a boolean if a field has been set.
func (o *GetJobRunInfoResult) HasFailureEntities() bool {
	if o != nil && o.FailureEntities.IsSet() {
		return true
	}

	return false
}

// SetFailureEntities gets a reference to the given NullableInt64 and assigns it to the FailureEntities field.
func (o *GetJobRunInfoResult) SetFailureEntities(v int64) {
	o.FailureEntities.Set(&v)
}
// SetFailureEntitiesNil sets the value for FailureEntities to be an explicit nil
func (o *GetJobRunInfoResult) SetFailureEntitiesNil() {
	o.FailureEntities.Set(nil)
}

// UnsetFailureEntities ensures that no value is present for FailureEntities, not even an explicit nil
func (o *GetJobRunInfoResult) UnsetFailureEntities() {
	o.FailureEntities.Unset()
}

// GetJobId returns the JobId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetJobRunInfoResult) GetJobId() string {
	if o == nil || o.JobId.Get() == nil {
		var ret string
		return ret
	}
	return *o.JobId.Get()
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetJobRunInfoResult) GetJobIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobId.Get(), o.JobId.IsSet()
}

// HasJobId returns a boolean if a field has been set.
func (o *GetJobRunInfoResult) HasJobId() bool {
	if o != nil && o.JobId.IsSet() {
		return true
	}

	return false
}

// SetJobId gets a reference to the given NullableString and assigns it to the JobId field.
func (o *GetJobRunInfoResult) SetJobId(v string) {
	o.JobId.Set(&v)
}
// SetJobIdNil sets the value for JobId to be an explicit nil
func (o *GetJobRunInfoResult) SetJobIdNil() {
	o.JobId.Set(nil)
}

// UnsetJobId ensures that no value is present for JobId, not even an explicit nil
func (o *GetJobRunInfoResult) UnsetJobId() {
	o.JobId.Unset()
}

// GetJobRunId returns the JobRunId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetJobRunInfoResult) GetJobRunId() string {
	if o == nil || o.JobRunId.Get() == nil {
		var ret string
		return ret
	}
	return *o.JobRunId.Get()
}

// GetJobRunIdOk returns a tuple with the JobRunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetJobRunInfoResult) GetJobRunIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobRunId.Get(), o.JobRunId.IsSet()
}

// HasJobRunId returns a boolean if a field has been set.
func (o *GetJobRunInfoResult) HasJobRunId() bool {
	if o != nil && o.JobRunId.IsSet() {
		return true
	}

	return false
}

// SetJobRunId gets a reference to the given NullableString and assigns it to the JobRunId field.
func (o *GetJobRunInfoResult) SetJobRunId(v string) {
	o.JobRunId.Set(&v)
}
// SetJobRunIdNil sets the value for JobRunId to be an explicit nil
func (o *GetJobRunInfoResult) SetJobRunIdNil() {
	o.JobRunId.Set(nil)
}

// UnsetJobRunId ensures that no value is present for JobRunId, not even an explicit nil
func (o *GetJobRunInfoResult) UnsetJobRunId() {
	o.JobRunId.Unset()
}

// GetJobType returns the JobType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetJobRunInfoResult) GetJobType() string {
	if o == nil || o.JobType.Get() == nil {
		var ret string
		return ret
	}
	return *o.JobType.Get()
}

// GetJobTypeOk returns a tuple with the JobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetJobRunInfoResult) GetJobTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobType.Get(), o.JobType.IsSet()
}

// HasJobType returns a boolean if a field has been set.
func (o *GetJobRunInfoResult) HasJobType() bool {
	if o != nil && o.JobType.IsSet() {
		return true
	}

	return false
}

// SetJobType gets a reference to the given NullableString and assigns it to the JobType field.
func (o *GetJobRunInfoResult) SetJobType(v string) {
	o.JobType.Set(&v)
}
// SetJobTypeNil sets the value for JobType to be an explicit nil
func (o *GetJobRunInfoResult) SetJobTypeNil() {
	o.JobType.Set(nil)
}

// UnsetJobType ensures that no value is present for JobType, not even an explicit nil
func (o *GetJobRunInfoResult) UnsetJobType() {
	o.JobType.Unset()
}

// GetSlaViolated returns the SlaViolated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetJobRunInfoResult) GetSlaViolated() bool {
	if o == nil || o.SlaViolated.Get() == nil {
		var ret bool
		return ret
	}
	return *o.SlaViolated.Get()
}

// GetSlaViolatedOk returns a tuple with the SlaViolated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetJobRunInfoResult) GetSlaViolatedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SlaViolated.Get(), o.SlaViolated.IsSet()
}

// HasSlaViolated returns a boolean if a field has been set.
func (o *GetJobRunInfoResult) HasSlaViolated() bool {
	if o != nil && o.SlaViolated.IsSet() {
		return true
	}

	return false
}

// SetSlaViolated gets a reference to the given NullableBool and assigns it to the SlaViolated field.
func (o *GetJobRunInfoResult) SetSlaViolated(v bool) {
	o.SlaViolated.Set(&v)
}
// SetSlaViolatedNil sets the value for SlaViolated to be an explicit nil
func (o *GetJobRunInfoResult) SetSlaViolatedNil() {
	o.SlaViolated.Set(nil)
}

// UnsetSlaViolated ensures that no value is present for SlaViolated, not even an explicit nil
func (o *GetJobRunInfoResult) UnsetSlaViolated() {
	o.SlaViolated.Unset()
}

// GetStartTimeUsecs returns the StartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetJobRunInfoResult) GetStartTimeUsecs() int64 {
	if o == nil || o.StartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StartTimeUsecs.Get()
}

// GetStartTimeUsecsOk returns a tuple with the StartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetJobRunInfoResult) GetStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartTimeUsecs.Get(), o.StartTimeUsecs.IsSet()
}

// HasStartTimeUsecs returns a boolean if a field has been set.
func (o *GetJobRunInfoResult) HasStartTimeUsecs() bool {
	if o != nil && o.StartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the StartTimeUsecs field.
func (o *GetJobRunInfoResult) SetStartTimeUsecs(v int64) {
	o.StartTimeUsecs.Set(&v)
}
// SetStartTimeUsecsNil sets the value for StartTimeUsecs to be an explicit nil
func (o *GetJobRunInfoResult) SetStartTimeUsecsNil() {
	o.StartTimeUsecs.Set(nil)
}

// UnsetStartTimeUsecs ensures that no value is present for StartTimeUsecs, not even an explicit nil
func (o *GetJobRunInfoResult) UnsetStartTimeUsecs() {
	o.StartTimeUsecs.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetJobRunInfoResult) GetStatus() int64 {
	if o == nil || o.Status.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetJobRunInfoResult) GetStatusOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *GetJobRunInfoResult) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableInt64 and assigns it to the Status field.
func (o *GetJobRunInfoResult) SetStatus(v int64) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *GetJobRunInfoResult) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *GetJobRunInfoResult) UnsetStatus() {
	o.Status.Unset()
}

// GetSuccessEntities returns the SuccessEntities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetJobRunInfoResult) GetSuccessEntities() int64 {
	if o == nil || o.SuccessEntities.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SuccessEntities.Get()
}

// GetSuccessEntitiesOk returns a tuple with the SuccessEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetJobRunInfoResult) GetSuccessEntitiesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SuccessEntities.Get(), o.SuccessEntities.IsSet()
}

// HasSuccessEntities returns a boolean if a field has been set.
func (o *GetJobRunInfoResult) HasSuccessEntities() bool {
	if o != nil && o.SuccessEntities.IsSet() {
		return true
	}

	return false
}

// SetSuccessEntities gets a reference to the given NullableInt64 and assigns it to the SuccessEntities field.
func (o *GetJobRunInfoResult) SetSuccessEntities(v int64) {
	o.SuccessEntities.Set(&v)
}
// SetSuccessEntitiesNil sets the value for SuccessEntities to be an explicit nil
func (o *GetJobRunInfoResult) SetSuccessEntitiesNil() {
	o.SuccessEntities.Set(nil)
}

// UnsetSuccessEntities ensures that no value is present for SuccessEntities, not even an explicit nil
func (o *GetJobRunInfoResult) UnsetSuccessEntities() {
	o.SuccessEntities.Unset()
}

// GetTotalEntities returns the TotalEntities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetJobRunInfoResult) GetTotalEntities() int64 {
	if o == nil || o.TotalEntities.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalEntities.Get()
}

// GetTotalEntitiesOk returns a tuple with the TotalEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetJobRunInfoResult) GetTotalEntitiesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalEntities.Get(), o.TotalEntities.IsSet()
}

// HasTotalEntities returns a boolean if a field has been set.
func (o *GetJobRunInfoResult) HasTotalEntities() bool {
	if o != nil && o.TotalEntities.IsSet() {
		return true
	}

	return false
}

// SetTotalEntities gets a reference to the given NullableInt64 and assigns it to the TotalEntities field.
func (o *GetJobRunInfoResult) SetTotalEntities(v int64) {
	o.TotalEntities.Set(&v)
}
// SetTotalEntitiesNil sets the value for TotalEntities to be an explicit nil
func (o *GetJobRunInfoResult) SetTotalEntitiesNil() {
	o.TotalEntities.Set(nil)
}

// UnsetTotalEntities ensures that no value is present for TotalEntities, not even an explicit nil
func (o *GetJobRunInfoResult) UnsetTotalEntities() {
	o.TotalEntities.Unset()
}

func (o GetJobRunInfoResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BytesTransferred.IsSet() {
		toSerialize["bytesTransferred"] = o.BytesTransferred.Get()
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.FailureEntities.IsSet() {
		toSerialize["failureEntities"] = o.FailureEntities.Get()
	}
	if o.JobId.IsSet() {
		toSerialize["jobId"] = o.JobId.Get()
	}
	if o.JobRunId.IsSet() {
		toSerialize["jobRunId"] = o.JobRunId.Get()
	}
	if o.JobType.IsSet() {
		toSerialize["jobType"] = o.JobType.Get()
	}
	if o.SlaViolated.IsSet() {
		toSerialize["slaViolated"] = o.SlaViolated.Get()
	}
	if o.StartTimeUsecs.IsSet() {
		toSerialize["startTimeUsecs"] = o.StartTimeUsecs.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.SuccessEntities.IsSet() {
		toSerialize["successEntities"] = o.SuccessEntities.Get()
	}
	if o.TotalEntities.IsSet() {
		toSerialize["totalEntities"] = o.TotalEntities.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGetJobRunInfoResult struct {
	value *GetJobRunInfoResult
	isSet bool
}

func (v NullableGetJobRunInfoResult) Get() *GetJobRunInfoResult {
	return v.value
}

func (v *NullableGetJobRunInfoResult) Set(val *GetJobRunInfoResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetJobRunInfoResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetJobRunInfoResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetJobRunInfoResult(val *GetJobRunInfoResult) *NullableGetJobRunInfoResult {
	return &NullableGetJobRunInfoResult{value: val, isSet: true}
}

func (v NullableGetJobRunInfoResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetJobRunInfoResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


