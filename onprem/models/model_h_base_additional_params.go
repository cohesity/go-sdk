/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// HBaseAdditionalParams Additional params for HBase protection source.
type HBaseAdditionalParams struct {
	// The 'Zookeeper Quorum' for this HBase.
	ZookeeperQuorum []string `json:"zookeeperQuorum,omitempty"`
	// The 'Data root directory' for this HBase.
	DataRootDirectory NullableString `json:"dataRootDirectory,omitempty"`
	// Authentication type.
	AuthType NullableString `json:"authType,omitempty"`
}

// NewHBaseAdditionalParams instantiates a new HBaseAdditionalParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHBaseAdditionalParams() *HBaseAdditionalParams {
	this := HBaseAdditionalParams{}
	return &this
}

// NewHBaseAdditionalParamsWithDefaults instantiates a new HBaseAdditionalParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHBaseAdditionalParamsWithDefaults() *HBaseAdditionalParams {
	this := HBaseAdditionalParams{}
	return &this
}

// GetZookeeperQuorum returns the ZookeeperQuorum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HBaseAdditionalParams) GetZookeeperQuorum() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.ZookeeperQuorum
}

// GetZookeeperQuorumOk returns a tuple with the ZookeeperQuorum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HBaseAdditionalParams) GetZookeeperQuorumOk() (*[]string, bool) {
	if o == nil || o.ZookeeperQuorum == nil {
		return nil, false
	}
	return &o.ZookeeperQuorum, true
}

// HasZookeeperQuorum returns a boolean if a field has been set.
func (o *HBaseAdditionalParams) HasZookeeperQuorum() bool {
	if o != nil && o.ZookeeperQuorum != nil {
		return true
	}

	return false
}

// SetZookeeperQuorum gets a reference to the given []string and assigns it to the ZookeeperQuorum field.
func (o *HBaseAdditionalParams) SetZookeeperQuorum(v []string) {
	o.ZookeeperQuorum = v
}

// GetDataRootDirectory returns the DataRootDirectory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HBaseAdditionalParams) GetDataRootDirectory() string {
	if o == nil || o.DataRootDirectory.Get() == nil {
		var ret string
		return ret
	}
	return *o.DataRootDirectory.Get()
}

// GetDataRootDirectoryOk returns a tuple with the DataRootDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HBaseAdditionalParams) GetDataRootDirectoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DataRootDirectory.Get(), o.DataRootDirectory.IsSet()
}

// HasDataRootDirectory returns a boolean if a field has been set.
func (o *HBaseAdditionalParams) HasDataRootDirectory() bool {
	if o != nil && o.DataRootDirectory.IsSet() {
		return true
	}

	return false
}

// SetDataRootDirectory gets a reference to the given NullableString and assigns it to the DataRootDirectory field.
func (o *HBaseAdditionalParams) SetDataRootDirectory(v string) {
	o.DataRootDirectory.Set(&v)
}
// SetDataRootDirectoryNil sets the value for DataRootDirectory to be an explicit nil
func (o *HBaseAdditionalParams) SetDataRootDirectoryNil() {
	o.DataRootDirectory.Set(nil)
}

// UnsetDataRootDirectory ensures that no value is present for DataRootDirectory, not even an explicit nil
func (o *HBaseAdditionalParams) UnsetDataRootDirectory() {
	o.DataRootDirectory.Unset()
}

// GetAuthType returns the AuthType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HBaseAdditionalParams) GetAuthType() string {
	if o == nil || o.AuthType.Get() == nil {
		var ret string
		return ret
	}
	return *o.AuthType.Get()
}

// GetAuthTypeOk returns a tuple with the AuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HBaseAdditionalParams) GetAuthTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AuthType.Get(), o.AuthType.IsSet()
}

// HasAuthType returns a boolean if a field has been set.
func (o *HBaseAdditionalParams) HasAuthType() bool {
	if o != nil && o.AuthType.IsSet() {
		return true
	}

	return false
}

// SetAuthType gets a reference to the given NullableString and assigns it to the AuthType field.
func (o *HBaseAdditionalParams) SetAuthType(v string) {
	o.AuthType.Set(&v)
}
// SetAuthTypeNil sets the value for AuthType to be an explicit nil
func (o *HBaseAdditionalParams) SetAuthTypeNil() {
	o.AuthType.Set(nil)
}

// UnsetAuthType ensures that no value is present for AuthType, not even an explicit nil
func (o *HBaseAdditionalParams) UnsetAuthType() {
	o.AuthType.Unset()
}

func (o HBaseAdditionalParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ZookeeperQuorum != nil {
		toSerialize["zookeeperQuorum"] = o.ZookeeperQuorum
	}
	if o.DataRootDirectory.IsSet() {
		toSerialize["dataRootDirectory"] = o.DataRootDirectory.Get()
	}
	if o.AuthType.IsSet() {
		toSerialize["authType"] = o.AuthType.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableHBaseAdditionalParams struct {
	value *HBaseAdditionalParams
	isSet bool
}

func (v NullableHBaseAdditionalParams) Get() *HBaseAdditionalParams {
	return v.value
}

func (v *NullableHBaseAdditionalParams) Set(val *HBaseAdditionalParams) {
	v.value = val
	v.isSet = true
}

func (v NullableHBaseAdditionalParams) IsSet() bool {
	return v.isSet
}

func (v *NullableHBaseAdditionalParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHBaseAdditionalParams(val *HBaseAdditionalParams) *NullableHBaseAdditionalParams {
	return &NullableHBaseAdditionalParams{value: val, isSet: true}
}

func (v NullableHBaseAdditionalParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHBaseAdditionalParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o HBaseAdditionalParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}