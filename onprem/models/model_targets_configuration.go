/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// TargetsConfiguration Specifies the replication, archival and cloud spin targets of Protection Policy.
type TargetsConfiguration struct {
	ReplicationTargets *[]ReplicationConfig `json:"replicationTargets,omitempty"`
	ArchivalTargets *[]ArchivalConfig `json:"archivalTargets,omitempty"`
	CloudSpinTargets *[]CloudSpinConfig `json:"cloudSpinTargets,omitempty"`
}

// NewTargetsConfiguration instantiates a new TargetsConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetsConfiguration() *TargetsConfiguration {
	this := TargetsConfiguration{}
	return &this
}

// NewTargetsConfigurationWithDefaults instantiates a new TargetsConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetsConfigurationWithDefaults() *TargetsConfiguration {
	this := TargetsConfiguration{}
	return &this
}

// GetReplicationTargets returns the ReplicationTargets field value if set, zero value otherwise.
func (o *TargetsConfiguration) GetReplicationTargets() []ReplicationConfig {
	if o == nil || o.ReplicationTargets == nil {
		var ret []ReplicationConfig
		return ret
	}
	return *o.ReplicationTargets
}

// GetReplicationTargetsOk returns a tuple with the ReplicationTargets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetsConfiguration) GetReplicationTargetsOk() (*[]ReplicationConfig, bool) {
	if o == nil || o.ReplicationTargets == nil {
		return nil, false
	}
	return o.ReplicationTargets, true
}

// HasReplicationTargets returns a boolean if a field has been set.
func (o *TargetsConfiguration) HasReplicationTargets() bool {
	if o != nil && o.ReplicationTargets != nil {
		return true
	}

	return false
}

// SetReplicationTargets gets a reference to the given []ReplicationConfig and assigns it to the ReplicationTargets field.
func (o *TargetsConfiguration) SetReplicationTargets(v []ReplicationConfig) {
	o.ReplicationTargets = &v
}

// GetArchivalTargets returns the ArchivalTargets field value if set, zero value otherwise.
func (o *TargetsConfiguration) GetArchivalTargets() []ArchivalConfig {
	if o == nil || o.ArchivalTargets == nil {
		var ret []ArchivalConfig
		return ret
	}
	return *o.ArchivalTargets
}

// GetArchivalTargetsOk returns a tuple with the ArchivalTargets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetsConfiguration) GetArchivalTargetsOk() (*[]ArchivalConfig, bool) {
	if o == nil || o.ArchivalTargets == nil {
		return nil, false
	}
	return o.ArchivalTargets, true
}

// HasArchivalTargets returns a boolean if a field has been set.
func (o *TargetsConfiguration) HasArchivalTargets() bool {
	if o != nil && o.ArchivalTargets != nil {
		return true
	}

	return false
}

// SetArchivalTargets gets a reference to the given []ArchivalConfig and assigns it to the ArchivalTargets field.
func (o *TargetsConfiguration) SetArchivalTargets(v []ArchivalConfig) {
	o.ArchivalTargets = &v
}

// GetCloudSpinTargets returns the CloudSpinTargets field value if set, zero value otherwise.
func (o *TargetsConfiguration) GetCloudSpinTargets() []CloudSpinConfig {
	if o == nil || o.CloudSpinTargets == nil {
		var ret []CloudSpinConfig
		return ret
	}
	return *o.CloudSpinTargets
}

// GetCloudSpinTargetsOk returns a tuple with the CloudSpinTargets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetsConfiguration) GetCloudSpinTargetsOk() (*[]CloudSpinConfig, bool) {
	if o == nil || o.CloudSpinTargets == nil {
		return nil, false
	}
	return o.CloudSpinTargets, true
}

// HasCloudSpinTargets returns a boolean if a field has been set.
func (o *TargetsConfiguration) HasCloudSpinTargets() bool {
	if o != nil && o.CloudSpinTargets != nil {
		return true
	}

	return false
}

// SetCloudSpinTargets gets a reference to the given []CloudSpinConfig and assigns it to the CloudSpinTargets field.
func (o *TargetsConfiguration) SetCloudSpinTargets(v []CloudSpinConfig) {
	o.CloudSpinTargets = &v
}

func (o TargetsConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ReplicationTargets != nil {
		toSerialize["replicationTargets"] = o.ReplicationTargets
	}
	if o.ArchivalTargets != nil {
		toSerialize["archivalTargets"] = o.ArchivalTargets
	}
	if o.CloudSpinTargets != nil {
		toSerialize["cloudSpinTargets"] = o.CloudSpinTargets
	}
	return json.Marshal(toSerialize)
}

type NullableTargetsConfiguration struct {
	value *TargetsConfiguration
	isSet bool
}

func (v NullableTargetsConfiguration) Get() *TargetsConfiguration {
	return v.value
}

func (v *NullableTargetsConfiguration) Set(val *TargetsConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetsConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetsConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetsConfiguration(val *TargetsConfiguration) *NullableTargetsConfiguration {
	return &NullableTargetsConfiguration{value: val, isSet: true}
}

func (v NullableTargetsConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetsConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o TargetsConfiguration) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}