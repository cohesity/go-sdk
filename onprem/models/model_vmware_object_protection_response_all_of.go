/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// VmwareObjectProtectionResponseAllOf struct for VmwareObjectProtectionResponseAllOf
type VmwareObjectProtectionResponseAllOf struct {
	// Specifies the list of IDs of the objects to not be protected in this backup. This field only applies if provided object id is non leaf entity such as Tag or a folder. This can be used to ignore specific objects under a parent object which has been included for protection.
	ExcludeObjectIds *[]int64 `json:"excludeObjectIds,omitempty"`
	CdpInfo *VmwareCdpObject `json:"cdpInfo,omitempty"`
	StandbyInfo *VmwareStandbyObject `json:"standbyInfo,omitempty"`
}

// NewVmwareObjectProtectionResponseAllOf instantiates a new VmwareObjectProtectionResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmwareObjectProtectionResponseAllOf() *VmwareObjectProtectionResponseAllOf {
	this := VmwareObjectProtectionResponseAllOf{}
	return &this
}

// NewVmwareObjectProtectionResponseAllOfWithDefaults instantiates a new VmwareObjectProtectionResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmwareObjectProtectionResponseAllOfWithDefaults() *VmwareObjectProtectionResponseAllOf {
	this := VmwareObjectProtectionResponseAllOf{}
	return &this
}

// GetExcludeObjectIds returns the ExcludeObjectIds field value if set, zero value otherwise.
func (o *VmwareObjectProtectionResponseAllOf) GetExcludeObjectIds() []int64 {
	if o == nil || o.ExcludeObjectIds == nil {
		var ret []int64
		return ret
	}
	return *o.ExcludeObjectIds
}

// GetExcludeObjectIdsOk returns a tuple with the ExcludeObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmwareObjectProtectionResponseAllOf) GetExcludeObjectIdsOk() (*[]int64, bool) {
	if o == nil || o.ExcludeObjectIds == nil {
		return nil, false
	}
	return o.ExcludeObjectIds, true
}

// HasExcludeObjectIds returns a boolean if a field has been set.
func (o *VmwareObjectProtectionResponseAllOf) HasExcludeObjectIds() bool {
	if o != nil && o.ExcludeObjectIds != nil {
		return true
	}

	return false
}

// SetExcludeObjectIds gets a reference to the given []int64 and assigns it to the ExcludeObjectIds field.
func (o *VmwareObjectProtectionResponseAllOf) SetExcludeObjectIds(v []int64) {
	o.ExcludeObjectIds = &v
}

// GetCdpInfo returns the CdpInfo field value if set, zero value otherwise.
func (o *VmwareObjectProtectionResponseAllOf) GetCdpInfo() VmwareCdpObject {
	if o == nil || o.CdpInfo == nil {
		var ret VmwareCdpObject
		return ret
	}
	return *o.CdpInfo
}

// GetCdpInfoOk returns a tuple with the CdpInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmwareObjectProtectionResponseAllOf) GetCdpInfoOk() (*VmwareCdpObject, bool) {
	if o == nil || o.CdpInfo == nil {
		return nil, false
	}
	return o.CdpInfo, true
}

// HasCdpInfo returns a boolean if a field has been set.
func (o *VmwareObjectProtectionResponseAllOf) HasCdpInfo() bool {
	if o != nil && o.CdpInfo != nil {
		return true
	}

	return false
}

// SetCdpInfo gets a reference to the given VmwareCdpObject and assigns it to the CdpInfo field.
func (o *VmwareObjectProtectionResponseAllOf) SetCdpInfo(v VmwareCdpObject) {
	o.CdpInfo = &v
}

// GetStandbyInfo returns the StandbyInfo field value if set, zero value otherwise.
func (o *VmwareObjectProtectionResponseAllOf) GetStandbyInfo() VmwareStandbyObject {
	if o == nil || o.StandbyInfo == nil {
		var ret VmwareStandbyObject
		return ret
	}
	return *o.StandbyInfo
}

// GetStandbyInfoOk returns a tuple with the StandbyInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmwareObjectProtectionResponseAllOf) GetStandbyInfoOk() (*VmwareStandbyObject, bool) {
	if o == nil || o.StandbyInfo == nil {
		return nil, false
	}
	return o.StandbyInfo, true
}

// HasStandbyInfo returns a boolean if a field has been set.
func (o *VmwareObjectProtectionResponseAllOf) HasStandbyInfo() bool {
	if o != nil && o.StandbyInfo != nil {
		return true
	}

	return false
}

// SetStandbyInfo gets a reference to the given VmwareStandbyObject and assigns it to the StandbyInfo field.
func (o *VmwareObjectProtectionResponseAllOf) SetStandbyInfo(v VmwareStandbyObject) {
	o.StandbyInfo = &v
}

func (o VmwareObjectProtectionResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExcludeObjectIds != nil {
		toSerialize["excludeObjectIds"] = o.ExcludeObjectIds
	}
	if o.CdpInfo != nil {
		toSerialize["cdpInfo"] = o.CdpInfo
	}
	if o.StandbyInfo != nil {
		toSerialize["standbyInfo"] = o.StandbyInfo
	}
	return json.Marshal(toSerialize)
}

type NullableVmwareObjectProtectionResponseAllOf struct {
	value *VmwareObjectProtectionResponseAllOf
	isSet bool
}

func (v NullableVmwareObjectProtectionResponseAllOf) Get() *VmwareObjectProtectionResponseAllOf {
	return v.value
}

func (v *NullableVmwareObjectProtectionResponseAllOf) Set(val *VmwareObjectProtectionResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableVmwareObjectProtectionResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableVmwareObjectProtectionResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmwareObjectProtectionResponseAllOf(val *VmwareObjectProtectionResponseAllOf) *NullableVmwareObjectProtectionResponseAllOf {
	return &NullableVmwareObjectProtectionResponseAllOf{value: val, isSet: true}
}

func (v NullableVmwareObjectProtectionResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmwareObjectProtectionResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o VmwareObjectProtectionResponseAllOf) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}