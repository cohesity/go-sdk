/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// VcdAdditionalParams Additional params for VCD protection source.
type VcdAdditionalParams struct {
	// Specifies the list of vCenters associated with this VCD protection source.
	VcenterInfoList *[]VcdVcenterInfo `json:"vcenterInfoList,omitempty"`
}

// NewVcdAdditionalParams instantiates a new VcdAdditionalParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcdAdditionalParams() *VcdAdditionalParams {
	this := VcdAdditionalParams{}
	return &this
}

// NewVcdAdditionalParamsWithDefaults instantiates a new VcdAdditionalParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcdAdditionalParamsWithDefaults() *VcdAdditionalParams {
	this := VcdAdditionalParams{}
	return &this
}

// GetVcenterInfoList returns the VcenterInfoList field value if set, zero value otherwise.
func (o *VcdAdditionalParams) GetVcenterInfoList() []VcdVcenterInfo {
	if o == nil || o.VcenterInfoList == nil {
		var ret []VcdVcenterInfo
		return ret
	}
	return *o.VcenterInfoList
}

// GetVcenterInfoListOk returns a tuple with the VcenterInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcdAdditionalParams) GetVcenterInfoListOk() (*[]VcdVcenterInfo, bool) {
	if o == nil || o.VcenterInfoList == nil {
		return nil, false
	}
	return o.VcenterInfoList, true
}

// HasVcenterInfoList returns a boolean if a field has been set.
func (o *VcdAdditionalParams) HasVcenterInfoList() bool {
	if o != nil && o.VcenterInfoList != nil {
		return true
	}

	return false
}

// SetVcenterInfoList gets a reference to the given []VcdVcenterInfo and assigns it to the VcenterInfoList field.
func (o *VcdAdditionalParams) SetVcenterInfoList(v []VcdVcenterInfo) {
	o.VcenterInfoList = &v
}

func (o VcdAdditionalParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VcenterInfoList != nil {
		toSerialize["vcenterInfoList"] = o.VcenterInfoList
	}
	return json.Marshal(toSerialize)
}

type NullableVcdAdditionalParams struct {
	value *VcdAdditionalParams
	isSet bool
}

func (v NullableVcdAdditionalParams) Get() *VcdAdditionalParams {
	return v.value
}

func (v *NullableVcdAdditionalParams) Set(val *VcdAdditionalParams) {
	v.value = val
	v.isSet = true
}

func (v NullableVcdAdditionalParams) IsSet() bool {
	return v.isSet
}

func (v *NullableVcdAdditionalParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcdAdditionalParams(val *VcdAdditionalParams) *NullableVcdAdditionalParams {
	return &NullableVcdAdditionalParams{value: val, isSet: true}
}

func (v NullableVcdAdditionalParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcdAdditionalParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o VcdAdditionalParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}