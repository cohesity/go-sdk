/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// RecoverOracleDbSnapshotParamsAllOf struct for RecoverOracleDbSnapshotParamsAllOf
type RecoverOracleDbSnapshotParamsAllOf struct {
	// Specifies the info about instant recovery. This is only applicable for RecoverOracle.
	InstantRecoveryInfo NullableRecoveryOracleTaskInfo `json:"instantRecoveryInfo,omitempty"`
}

// NewRecoverOracleDbSnapshotParamsAllOf instantiates a new RecoverOracleDbSnapshotParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverOracleDbSnapshotParamsAllOf() *RecoverOracleDbSnapshotParamsAllOf {
	this := RecoverOracleDbSnapshotParamsAllOf{}
	return &this
}

// NewRecoverOracleDbSnapshotParamsAllOfWithDefaults instantiates a new RecoverOracleDbSnapshotParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverOracleDbSnapshotParamsAllOfWithDefaults() *RecoverOracleDbSnapshotParamsAllOf {
	this := RecoverOracleDbSnapshotParamsAllOf{}
	return &this
}

// GetInstantRecoveryInfo returns the InstantRecoveryInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverOracleDbSnapshotParamsAllOf) GetInstantRecoveryInfo() RecoveryOracleTaskInfo {
	if o == nil || o.InstantRecoveryInfo.Get() == nil {
		var ret RecoveryOracleTaskInfo
		return ret
	}
	return *o.InstantRecoveryInfo.Get()
}

// GetInstantRecoveryInfoOk returns a tuple with the InstantRecoveryInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverOracleDbSnapshotParamsAllOf) GetInstantRecoveryInfoOk() (*RecoveryOracleTaskInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InstantRecoveryInfo.Get(), o.InstantRecoveryInfo.IsSet()
}

// HasInstantRecoveryInfo returns a boolean if a field has been set.
func (o *RecoverOracleDbSnapshotParamsAllOf) HasInstantRecoveryInfo() bool {
	if o != nil && o.InstantRecoveryInfo.IsSet() {
		return true
	}

	return false
}

// SetInstantRecoveryInfo gets a reference to the given NullableRecoveryOracleTaskInfo and assigns it to the InstantRecoveryInfo field.
func (o *RecoverOracleDbSnapshotParamsAllOf) SetInstantRecoveryInfo(v RecoveryOracleTaskInfo) {
	o.InstantRecoveryInfo.Set(&v)
}
// SetInstantRecoveryInfoNil sets the value for InstantRecoveryInfo to be an explicit nil
func (o *RecoverOracleDbSnapshotParamsAllOf) SetInstantRecoveryInfoNil() {
	o.InstantRecoveryInfo.Set(nil)
}

// UnsetInstantRecoveryInfo ensures that no value is present for InstantRecoveryInfo, not even an explicit nil
func (o *RecoverOracleDbSnapshotParamsAllOf) UnsetInstantRecoveryInfo() {
	o.InstantRecoveryInfo.Unset()
}

func (o RecoverOracleDbSnapshotParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InstantRecoveryInfo.IsSet() {
		toSerialize["instantRecoveryInfo"] = o.InstantRecoveryInfo.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverOracleDbSnapshotParamsAllOf struct {
	value *RecoverOracleDbSnapshotParamsAllOf
	isSet bool
}

func (v NullableRecoverOracleDbSnapshotParamsAllOf) Get() *RecoverOracleDbSnapshotParamsAllOf {
	return v.value
}

func (v *NullableRecoverOracleDbSnapshotParamsAllOf) Set(val *RecoverOracleDbSnapshotParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverOracleDbSnapshotParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverOracleDbSnapshotParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverOracleDbSnapshotParamsAllOf(val *RecoverOracleDbSnapshotParamsAllOf) *NullableRecoverOracleDbSnapshotParamsAllOf {
	return &NullableRecoverOracleDbSnapshotParamsAllOf{value: val, isSet: true}
}

func (v NullableRecoverOracleDbSnapshotParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverOracleDbSnapshotParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o RecoverOracleDbSnapshotParamsAllOf) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}