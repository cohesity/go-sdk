/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// ObjectLastRunAllOf struct for ObjectLastRunAllOf
type ObjectLastRunAllOf struct {
	// Specifies the last run id.
	RunId *string `json:"runId,omitempty"`
	// Specifies the protection group name of last run.
	ProtectionGroupName NullableString `json:"protectionGroupName,omitempty"`
	// Specifies the protection group id of last run.
	ProtectionGroupId NullableString `json:"protectionGroupId,omitempty"`
	// Specifies the policy name of last run.
	PolicyName NullableString `json:"policyName,omitempty"`
	// Specifies the policy id of last run.
	PolicyId NullableString `json:"policyId,omitempty"`
	// Specifies the status of last local back up run.
	BackupRunStatus NullableString `json:"backupRunStatus,omitempty"`
	// Specifies the status of last archival run.
	ArchivalRunStatus NullableString `json:"archivalRunStatus,omitempty"`
	// Specifies the status of last replication run.
	ReplicationRunStatus NullableString `json:"replicationRunStatus,omitempty"`
	// Specifies if the sla is violated in last run.
	IsSlaViolated NullableBool `json:"isSlaViolated,omitempty"`
}

// NewObjectLastRunAllOf instantiates a new ObjectLastRunAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectLastRunAllOf() *ObjectLastRunAllOf {
	this := ObjectLastRunAllOf{}
	return &this
}

// NewObjectLastRunAllOfWithDefaults instantiates a new ObjectLastRunAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectLastRunAllOfWithDefaults() *ObjectLastRunAllOf {
	this := ObjectLastRunAllOf{}
	return &this
}

// GetRunId returns the RunId field value if set, zero value otherwise.
func (o *ObjectLastRunAllOf) GetRunId() string {
	if o == nil || o.RunId == nil {
		var ret string
		return ret
	}
	return *o.RunId
}

// GetRunIdOk returns a tuple with the RunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectLastRunAllOf) GetRunIdOk() (*string, bool) {
	if o == nil || o.RunId == nil {
		return nil, false
	}
	return o.RunId, true
}

// HasRunId returns a boolean if a field has been set.
func (o *ObjectLastRunAllOf) HasRunId() bool {
	if o != nil && o.RunId != nil {
		return true
	}

	return false
}

// SetRunId gets a reference to the given string and assigns it to the RunId field.
func (o *ObjectLastRunAllOf) SetRunId(v string) {
	o.RunId = &v
}

// GetProtectionGroupName returns the ProtectionGroupName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectLastRunAllOf) GetProtectionGroupName() string {
	if o == nil || o.ProtectionGroupName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProtectionGroupName.Get()
}

// GetProtectionGroupNameOk returns a tuple with the ProtectionGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectLastRunAllOf) GetProtectionGroupNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionGroupName.Get(), o.ProtectionGroupName.IsSet()
}

// HasProtectionGroupName returns a boolean if a field has been set.
func (o *ObjectLastRunAllOf) HasProtectionGroupName() bool {
	if o != nil && o.ProtectionGroupName.IsSet() {
		return true
	}

	return false
}

// SetProtectionGroupName gets a reference to the given NullableString and assigns it to the ProtectionGroupName field.
func (o *ObjectLastRunAllOf) SetProtectionGroupName(v string) {
	o.ProtectionGroupName.Set(&v)
}
// SetProtectionGroupNameNil sets the value for ProtectionGroupName to be an explicit nil
func (o *ObjectLastRunAllOf) SetProtectionGroupNameNil() {
	o.ProtectionGroupName.Set(nil)
}

// UnsetProtectionGroupName ensures that no value is present for ProtectionGroupName, not even an explicit nil
func (o *ObjectLastRunAllOf) UnsetProtectionGroupName() {
	o.ProtectionGroupName.Unset()
}

// GetProtectionGroupId returns the ProtectionGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectLastRunAllOf) GetProtectionGroupId() string {
	if o == nil || o.ProtectionGroupId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProtectionGroupId.Get()
}

// GetProtectionGroupIdOk returns a tuple with the ProtectionGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectLastRunAllOf) GetProtectionGroupIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionGroupId.Get(), o.ProtectionGroupId.IsSet()
}

// HasProtectionGroupId returns a boolean if a field has been set.
func (o *ObjectLastRunAllOf) HasProtectionGroupId() bool {
	if o != nil && o.ProtectionGroupId.IsSet() {
		return true
	}

	return false
}

// SetProtectionGroupId gets a reference to the given NullableString and assigns it to the ProtectionGroupId field.
func (o *ObjectLastRunAllOf) SetProtectionGroupId(v string) {
	o.ProtectionGroupId.Set(&v)
}
// SetProtectionGroupIdNil sets the value for ProtectionGroupId to be an explicit nil
func (o *ObjectLastRunAllOf) SetProtectionGroupIdNil() {
	o.ProtectionGroupId.Set(nil)
}

// UnsetProtectionGroupId ensures that no value is present for ProtectionGroupId, not even an explicit nil
func (o *ObjectLastRunAllOf) UnsetProtectionGroupId() {
	o.ProtectionGroupId.Unset()
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectLastRunAllOf) GetPolicyName() string {
	if o == nil || o.PolicyName.Get() == nil {
		var ret string
		return ret
	}
	return *o.PolicyName.Get()
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectLastRunAllOf) GetPolicyNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PolicyName.Get(), o.PolicyName.IsSet()
}

// HasPolicyName returns a boolean if a field has been set.
func (o *ObjectLastRunAllOf) HasPolicyName() bool {
	if o != nil && o.PolicyName.IsSet() {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given NullableString and assigns it to the PolicyName field.
func (o *ObjectLastRunAllOf) SetPolicyName(v string) {
	o.PolicyName.Set(&v)
}
// SetPolicyNameNil sets the value for PolicyName to be an explicit nil
func (o *ObjectLastRunAllOf) SetPolicyNameNil() {
	o.PolicyName.Set(nil)
}

// UnsetPolicyName ensures that no value is present for PolicyName, not even an explicit nil
func (o *ObjectLastRunAllOf) UnsetPolicyName() {
	o.PolicyName.Unset()
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectLastRunAllOf) GetPolicyId() string {
	if o == nil || o.PolicyId.Get() == nil {
		var ret string
		return ret
	}
	return *o.PolicyId.Get()
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectLastRunAllOf) GetPolicyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PolicyId.Get(), o.PolicyId.IsSet()
}

// HasPolicyId returns a boolean if a field has been set.
func (o *ObjectLastRunAllOf) HasPolicyId() bool {
	if o != nil && o.PolicyId.IsSet() {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given NullableString and assigns it to the PolicyId field.
func (o *ObjectLastRunAllOf) SetPolicyId(v string) {
	o.PolicyId.Set(&v)
}
// SetPolicyIdNil sets the value for PolicyId to be an explicit nil
func (o *ObjectLastRunAllOf) SetPolicyIdNil() {
	o.PolicyId.Set(nil)
}

// UnsetPolicyId ensures that no value is present for PolicyId, not even an explicit nil
func (o *ObjectLastRunAllOf) UnsetPolicyId() {
	o.PolicyId.Unset()
}

// GetBackupRunStatus returns the BackupRunStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectLastRunAllOf) GetBackupRunStatus() string {
	if o == nil || o.BackupRunStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.BackupRunStatus.Get()
}

// GetBackupRunStatusOk returns a tuple with the BackupRunStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectLastRunAllOf) GetBackupRunStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BackupRunStatus.Get(), o.BackupRunStatus.IsSet()
}

// HasBackupRunStatus returns a boolean if a field has been set.
func (o *ObjectLastRunAllOf) HasBackupRunStatus() bool {
	if o != nil && o.BackupRunStatus.IsSet() {
		return true
	}

	return false
}

// SetBackupRunStatus gets a reference to the given NullableString and assigns it to the BackupRunStatus field.
func (o *ObjectLastRunAllOf) SetBackupRunStatus(v string) {
	o.BackupRunStatus.Set(&v)
}
// SetBackupRunStatusNil sets the value for BackupRunStatus to be an explicit nil
func (o *ObjectLastRunAllOf) SetBackupRunStatusNil() {
	o.BackupRunStatus.Set(nil)
}

// UnsetBackupRunStatus ensures that no value is present for BackupRunStatus, not even an explicit nil
func (o *ObjectLastRunAllOf) UnsetBackupRunStatus() {
	o.BackupRunStatus.Unset()
}

// GetArchivalRunStatus returns the ArchivalRunStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectLastRunAllOf) GetArchivalRunStatus() string {
	if o == nil || o.ArchivalRunStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.ArchivalRunStatus.Get()
}

// GetArchivalRunStatusOk returns a tuple with the ArchivalRunStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectLastRunAllOf) GetArchivalRunStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ArchivalRunStatus.Get(), o.ArchivalRunStatus.IsSet()
}

// HasArchivalRunStatus returns a boolean if a field has been set.
func (o *ObjectLastRunAllOf) HasArchivalRunStatus() bool {
	if o != nil && o.ArchivalRunStatus.IsSet() {
		return true
	}

	return false
}

// SetArchivalRunStatus gets a reference to the given NullableString and assigns it to the ArchivalRunStatus field.
func (o *ObjectLastRunAllOf) SetArchivalRunStatus(v string) {
	o.ArchivalRunStatus.Set(&v)
}
// SetArchivalRunStatusNil sets the value for ArchivalRunStatus to be an explicit nil
func (o *ObjectLastRunAllOf) SetArchivalRunStatusNil() {
	o.ArchivalRunStatus.Set(nil)
}

// UnsetArchivalRunStatus ensures that no value is present for ArchivalRunStatus, not even an explicit nil
func (o *ObjectLastRunAllOf) UnsetArchivalRunStatus() {
	o.ArchivalRunStatus.Unset()
}

// GetReplicationRunStatus returns the ReplicationRunStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectLastRunAllOf) GetReplicationRunStatus() string {
	if o == nil || o.ReplicationRunStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.ReplicationRunStatus.Get()
}

// GetReplicationRunStatusOk returns a tuple with the ReplicationRunStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectLastRunAllOf) GetReplicationRunStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReplicationRunStatus.Get(), o.ReplicationRunStatus.IsSet()
}

// HasReplicationRunStatus returns a boolean if a field has been set.
func (o *ObjectLastRunAllOf) HasReplicationRunStatus() bool {
	if o != nil && o.ReplicationRunStatus.IsSet() {
		return true
	}

	return false
}

// SetReplicationRunStatus gets a reference to the given NullableString and assigns it to the ReplicationRunStatus field.
func (o *ObjectLastRunAllOf) SetReplicationRunStatus(v string) {
	o.ReplicationRunStatus.Set(&v)
}
// SetReplicationRunStatusNil sets the value for ReplicationRunStatus to be an explicit nil
func (o *ObjectLastRunAllOf) SetReplicationRunStatusNil() {
	o.ReplicationRunStatus.Set(nil)
}

// UnsetReplicationRunStatus ensures that no value is present for ReplicationRunStatus, not even an explicit nil
func (o *ObjectLastRunAllOf) UnsetReplicationRunStatus() {
	o.ReplicationRunStatus.Unset()
}

// GetIsSlaViolated returns the IsSlaViolated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectLastRunAllOf) GetIsSlaViolated() bool {
	if o == nil || o.IsSlaViolated.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsSlaViolated.Get()
}

// GetIsSlaViolatedOk returns a tuple with the IsSlaViolated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectLastRunAllOf) GetIsSlaViolatedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsSlaViolated.Get(), o.IsSlaViolated.IsSet()
}

// HasIsSlaViolated returns a boolean if a field has been set.
func (o *ObjectLastRunAllOf) HasIsSlaViolated() bool {
	if o != nil && o.IsSlaViolated.IsSet() {
		return true
	}

	return false
}

// SetIsSlaViolated gets a reference to the given NullableBool and assigns it to the IsSlaViolated field.
func (o *ObjectLastRunAllOf) SetIsSlaViolated(v bool) {
	o.IsSlaViolated.Set(&v)
}
// SetIsSlaViolatedNil sets the value for IsSlaViolated to be an explicit nil
func (o *ObjectLastRunAllOf) SetIsSlaViolatedNil() {
	o.IsSlaViolated.Set(nil)
}

// UnsetIsSlaViolated ensures that no value is present for IsSlaViolated, not even an explicit nil
func (o *ObjectLastRunAllOf) UnsetIsSlaViolated() {
	o.IsSlaViolated.Unset()
}

func (o ObjectLastRunAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RunId != nil {
		toSerialize["runId"] = o.RunId
	}
	if o.ProtectionGroupName.IsSet() {
		toSerialize["protectionGroupName"] = o.ProtectionGroupName.Get()
	}
	if o.ProtectionGroupId.IsSet() {
		toSerialize["protectionGroupId"] = o.ProtectionGroupId.Get()
	}
	if o.PolicyName.IsSet() {
		toSerialize["policyName"] = o.PolicyName.Get()
	}
	if o.PolicyId.IsSet() {
		toSerialize["policyId"] = o.PolicyId.Get()
	}
	if o.BackupRunStatus.IsSet() {
		toSerialize["backupRunStatus"] = o.BackupRunStatus.Get()
	}
	if o.ArchivalRunStatus.IsSet() {
		toSerialize["archivalRunStatus"] = o.ArchivalRunStatus.Get()
	}
	if o.ReplicationRunStatus.IsSet() {
		toSerialize["replicationRunStatus"] = o.ReplicationRunStatus.Get()
	}
	if o.IsSlaViolated.IsSet() {
		toSerialize["isSlaViolated"] = o.IsSlaViolated.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableObjectLastRunAllOf struct {
	value *ObjectLastRunAllOf
	isSet bool
}

func (v NullableObjectLastRunAllOf) Get() *ObjectLastRunAllOf {
	return v.value
}

func (v *NullableObjectLastRunAllOf) Set(val *ObjectLastRunAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectLastRunAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectLastRunAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectLastRunAllOf(val *ObjectLastRunAllOf) *NullableObjectLastRunAllOf {
	return &NullableObjectLastRunAllOf{value: val, isSet: true}
}

func (v NullableObjectLastRunAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectLastRunAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o ObjectLastRunAllOf) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}