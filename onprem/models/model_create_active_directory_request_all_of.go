/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// CreateActiveDirectoryRequestAllOf struct for CreateActiveDirectoryRequestAllOf
type CreateActiveDirectoryRequestAllOf struct {
	// Specifies the domain name of the Active Directory.
	DomainName NullableString `json:"domainName"`
	// Specifies the params of a user with administrative privilege of this Active Directory.
	ActiveDirectoryAdminParams NullableActiveDirectoryAdminParams `json:"activeDirectoryAdminParams"`
	// Specifies if specified machine accounts should overwrite existing machine accounts.
	OverwriteMachineAccounts NullableBool `json:"overwriteMachineAccounts,omitempty"`
}

// NewCreateActiveDirectoryRequestAllOf instantiates a new CreateActiveDirectoryRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateActiveDirectoryRequestAllOf(domainName NullableString, activeDirectoryAdminParams NullableActiveDirectoryAdminParams) *CreateActiveDirectoryRequestAllOf {
	this := CreateActiveDirectoryRequestAllOf{}
	this.DomainName = domainName
	this.ActiveDirectoryAdminParams = activeDirectoryAdminParams
	return &this
}

// NewCreateActiveDirectoryRequestAllOfWithDefaults instantiates a new CreateActiveDirectoryRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateActiveDirectoryRequestAllOfWithDefaults() *CreateActiveDirectoryRequestAllOf {
	this := CreateActiveDirectoryRequestAllOf{}
	return &this
}

// GetDomainName returns the DomainName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateActiveDirectoryRequestAllOf) GetDomainName() string {
	if o == nil || o.DomainName.Get() == nil {
		var ret string
		return ret
	}

	return *o.DomainName.Get()
}

// GetDomainNameOk returns a tuple with the DomainName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateActiveDirectoryRequestAllOf) GetDomainNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DomainName.Get(), o.DomainName.IsSet()
}

// SetDomainName sets field value
func (o *CreateActiveDirectoryRequestAllOf) SetDomainName(v string) {
	o.DomainName.Set(&v)
}

// GetActiveDirectoryAdminParams returns the ActiveDirectoryAdminParams field value
// If the value is explicit nil, the zero value for ActiveDirectoryAdminParams will be returned
func (o *CreateActiveDirectoryRequestAllOf) GetActiveDirectoryAdminParams() ActiveDirectoryAdminParams {
	if o == nil || o.ActiveDirectoryAdminParams.Get() == nil {
		var ret ActiveDirectoryAdminParams
		return ret
	}

	return *o.ActiveDirectoryAdminParams.Get()
}

// GetActiveDirectoryAdminParamsOk returns a tuple with the ActiveDirectoryAdminParams field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateActiveDirectoryRequestAllOf) GetActiveDirectoryAdminParamsOk() (*ActiveDirectoryAdminParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ActiveDirectoryAdminParams.Get(), o.ActiveDirectoryAdminParams.IsSet()
}

// SetActiveDirectoryAdminParams sets field value
func (o *CreateActiveDirectoryRequestAllOf) SetActiveDirectoryAdminParams(v ActiveDirectoryAdminParams) {
	o.ActiveDirectoryAdminParams.Set(&v)
}

// GetOverwriteMachineAccounts returns the OverwriteMachineAccounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateActiveDirectoryRequestAllOf) GetOverwriteMachineAccounts() bool {
	if o == nil || o.OverwriteMachineAccounts.Get() == nil {
		var ret bool
		return ret
	}
	return *o.OverwriteMachineAccounts.Get()
}

// GetOverwriteMachineAccountsOk returns a tuple with the OverwriteMachineAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateActiveDirectoryRequestAllOf) GetOverwriteMachineAccountsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OverwriteMachineAccounts.Get(), o.OverwriteMachineAccounts.IsSet()
}

// HasOverwriteMachineAccounts returns a boolean if a field has been set.
func (o *CreateActiveDirectoryRequestAllOf) HasOverwriteMachineAccounts() bool {
	if o != nil && o.OverwriteMachineAccounts.IsSet() {
		return true
	}

	return false
}

// SetOverwriteMachineAccounts gets a reference to the given NullableBool and assigns it to the OverwriteMachineAccounts field.
func (o *CreateActiveDirectoryRequestAllOf) SetOverwriteMachineAccounts(v bool) {
	o.OverwriteMachineAccounts.Set(&v)
}
// SetOverwriteMachineAccountsNil sets the value for OverwriteMachineAccounts to be an explicit nil
func (o *CreateActiveDirectoryRequestAllOf) SetOverwriteMachineAccountsNil() {
	o.OverwriteMachineAccounts.Set(nil)
}

// UnsetOverwriteMachineAccounts ensures that no value is present for OverwriteMachineAccounts, not even an explicit nil
func (o *CreateActiveDirectoryRequestAllOf) UnsetOverwriteMachineAccounts() {
	o.OverwriteMachineAccounts.Unset()
}

func (o CreateActiveDirectoryRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["domainName"] = o.DomainName.Get()
	}
	if true {
		toSerialize["activeDirectoryAdminParams"] = o.ActiveDirectoryAdminParams.Get()
	}
	if o.OverwriteMachineAccounts.IsSet() {
		toSerialize["overwriteMachineAccounts"] = o.OverwriteMachineAccounts.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCreateActiveDirectoryRequestAllOf struct {
	value *CreateActiveDirectoryRequestAllOf
	isSet bool
}

func (v NullableCreateActiveDirectoryRequestAllOf) Get() *CreateActiveDirectoryRequestAllOf {
	return v.value
}

func (v *NullableCreateActiveDirectoryRequestAllOf) Set(val *CreateActiveDirectoryRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateActiveDirectoryRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateActiveDirectoryRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateActiveDirectoryRequestAllOf(val *CreateActiveDirectoryRequestAllOf) *NullableCreateActiveDirectoryRequestAllOf {
	return &NullableCreateActiveDirectoryRequestAllOf{value: val, isSet: true}
}

func (v NullableCreateActiveDirectoryRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateActiveDirectoryRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o CreateActiveDirectoryRequestAllOf) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}