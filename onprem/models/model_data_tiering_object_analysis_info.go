/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// DataTieringObjectAnalysisInfo Specifies the data tiering object analysis details.
type DataTieringObjectAnalysisInfo struct {
	// Array of Tag objects.
	TagsInfo []DataTieringTagObject `json:"tagsInfo,omitempty"`
	// Status of the analysis run. 'Running' indicates that the run is still running. 'Canceled' indicates that the run has been canceled. 'Canceling' indicates that the run is in the process of being  canceled. 'Failed' indicates that the run has failed. 'Missed' indicates that the run was unable to take place at the  scheduled time because the previous run was still happening. 'Succeeded' indicates that the run has finished successfully. 'SucceededWithWarning' indicates that the run finished  successfully, but there were some warning messages. 'OnHold' indicates that the run has On hold.
	Status NullableString `json:"status,omitempty"`
	// A message about the error if encountered while performing data tiering analysis.
	Message NullableString `json:"message,omitempty"`
	// Specifies the source share analysis stats.
	Stats []DataTieringShareStats `json:"stats,omitempty"`
}

// NewDataTieringObjectAnalysisInfo instantiates a new DataTieringObjectAnalysisInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataTieringObjectAnalysisInfo() *DataTieringObjectAnalysisInfo {
	this := DataTieringObjectAnalysisInfo{}
	return &this
}

// NewDataTieringObjectAnalysisInfoWithDefaults instantiates a new DataTieringObjectAnalysisInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataTieringObjectAnalysisInfoWithDefaults() *DataTieringObjectAnalysisInfo {
	this := DataTieringObjectAnalysisInfo{}
	return &this
}

// GetTagsInfo returns the TagsInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataTieringObjectAnalysisInfo) GetTagsInfo() []DataTieringTagObject {
	if o == nil  {
		var ret []DataTieringTagObject
		return ret
	}
	return o.TagsInfo
}

// GetTagsInfoOk returns a tuple with the TagsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataTieringObjectAnalysisInfo) GetTagsInfoOk() (*[]DataTieringTagObject, bool) {
	if o == nil || o.TagsInfo == nil {
		return nil, false
	}
	return &o.TagsInfo, true
}

// HasTagsInfo returns a boolean if a field has been set.
func (o *DataTieringObjectAnalysisInfo) HasTagsInfo() bool {
	if o != nil && o.TagsInfo != nil {
		return true
	}

	return false
}

// SetTagsInfo gets a reference to the given []DataTieringTagObject and assigns it to the TagsInfo field.
func (o *DataTieringObjectAnalysisInfo) SetTagsInfo(v []DataTieringTagObject) {
	o.TagsInfo = v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataTieringObjectAnalysisInfo) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataTieringObjectAnalysisInfo) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *DataTieringObjectAnalysisInfo) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *DataTieringObjectAnalysisInfo) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *DataTieringObjectAnalysisInfo) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *DataTieringObjectAnalysisInfo) UnsetStatus() {
	o.Status.Unset()
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataTieringObjectAnalysisInfo) GetMessage() string {
	if o == nil || o.Message.Get() == nil {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataTieringObjectAnalysisInfo) GetMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *DataTieringObjectAnalysisInfo) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *DataTieringObjectAnalysisInfo) SetMessage(v string) {
	o.Message.Set(&v)
}
// SetMessageNil sets the value for Message to be an explicit nil
func (o *DataTieringObjectAnalysisInfo) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *DataTieringObjectAnalysisInfo) UnsetMessage() {
	o.Message.Unset()
}

// GetStats returns the Stats field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataTieringObjectAnalysisInfo) GetStats() []DataTieringShareStats {
	if o == nil  {
		var ret []DataTieringShareStats
		return ret
	}
	return o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataTieringObjectAnalysisInfo) GetStatsOk() (*[]DataTieringShareStats, bool) {
	if o == nil || o.Stats == nil {
		return nil, false
	}
	return &o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *DataTieringObjectAnalysisInfo) HasStats() bool {
	if o != nil && o.Stats != nil {
		return true
	}

	return false
}

// SetStats gets a reference to the given []DataTieringShareStats and assigns it to the Stats field.
func (o *DataTieringObjectAnalysisInfo) SetStats(v []DataTieringShareStats) {
	o.Stats = v
}

func (o DataTieringObjectAnalysisInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TagsInfo != nil {
		toSerialize["tagsInfo"] = o.TagsInfo
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	if o.Stats != nil {
		toSerialize["stats"] = o.Stats
	}
	return json.Marshal(toSerialize)
}

type NullableDataTieringObjectAnalysisInfo struct {
	value *DataTieringObjectAnalysisInfo
	isSet bool
}

func (v NullableDataTieringObjectAnalysisInfo) Get() *DataTieringObjectAnalysisInfo {
	return v.value
}

func (v *NullableDataTieringObjectAnalysisInfo) Set(val *DataTieringObjectAnalysisInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDataTieringObjectAnalysisInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDataTieringObjectAnalysisInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataTieringObjectAnalysisInfo(val *DataTieringObjectAnalysisInfo) *NullableDataTieringObjectAnalysisInfo {
	return &NullableDataTieringObjectAnalysisInfo{value: val, isSet: true}
}

func (v NullableDataTieringObjectAnalysisInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataTieringObjectAnalysisInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o DataTieringObjectAnalysisInfo) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}