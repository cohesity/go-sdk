/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// O365SearchSharepointRequestParams Specifies Sharepoint site search request params specific to O365 environment.
type O365SearchSharepointRequestParams struct {
	// Specifies the domain Ids in which Sharepoint sites are registered.
	DomainIds []int64 `json:"domainIds,omitempty"`
	// Specifies the Sharepoint site Ids across which the document library files/folders needs to be searched.
	SiteIds []int64 `json:"siteIds,omitempty"`
}

// NewO365SearchSharepointRequestParams instantiates a new O365SearchSharepointRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewO365SearchSharepointRequestParams() *O365SearchSharepointRequestParams {
	this := O365SearchSharepointRequestParams{}
	return &this
}

// NewO365SearchSharepointRequestParamsWithDefaults instantiates a new O365SearchSharepointRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewO365SearchSharepointRequestParamsWithDefaults() *O365SearchSharepointRequestParams {
	this := O365SearchSharepointRequestParams{}
	return &this
}

// GetDomainIds returns the DomainIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *O365SearchSharepointRequestParams) GetDomainIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.DomainIds
}

// GetDomainIdsOk returns a tuple with the DomainIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *O365SearchSharepointRequestParams) GetDomainIdsOk() (*[]int64, bool) {
	if o == nil || o.DomainIds == nil {
		return nil, false
	}
	return &o.DomainIds, true
}

// HasDomainIds returns a boolean if a field has been set.
func (o *O365SearchSharepointRequestParams) HasDomainIds() bool {
	if o != nil && o.DomainIds != nil {
		return true
	}

	return false
}

// SetDomainIds gets a reference to the given []int64 and assigns it to the DomainIds field.
func (o *O365SearchSharepointRequestParams) SetDomainIds(v []int64) {
	o.DomainIds = v
}

// GetSiteIds returns the SiteIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *O365SearchSharepointRequestParams) GetSiteIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.SiteIds
}

// GetSiteIdsOk returns a tuple with the SiteIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *O365SearchSharepointRequestParams) GetSiteIdsOk() (*[]int64, bool) {
	if o == nil || o.SiteIds == nil {
		return nil, false
	}
	return &o.SiteIds, true
}

// HasSiteIds returns a boolean if a field has been set.
func (o *O365SearchSharepointRequestParams) HasSiteIds() bool {
	if o != nil && o.SiteIds != nil {
		return true
	}

	return false
}

// SetSiteIds gets a reference to the given []int64 and assigns it to the SiteIds field.
func (o *O365SearchSharepointRequestParams) SetSiteIds(v []int64) {
	o.SiteIds = v
}

func (o O365SearchSharepointRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DomainIds != nil {
		toSerialize["domainIds"] = o.DomainIds
	}
	if o.SiteIds != nil {
		toSerialize["siteIds"] = o.SiteIds
	}
	return json.Marshal(toSerialize)
}

type NullableO365SearchSharepointRequestParams struct {
	value *O365SearchSharepointRequestParams
	isSet bool
}

func (v NullableO365SearchSharepointRequestParams) Get() *O365SearchSharepointRequestParams {
	return v.value
}

func (v *NullableO365SearchSharepointRequestParams) Set(val *O365SearchSharepointRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableO365SearchSharepointRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableO365SearchSharepointRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableO365SearchSharepointRequestParams(val *O365SearchSharepointRequestParams) *NullableO365SearchSharepointRequestParams {
	return &NullableO365SearchSharepointRequestParams{value: val, isSet: true}
}

func (v NullableO365SearchSharepointRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableO365SearchSharepointRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o O365SearchSharepointRequestParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}