/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// TdmSnapshotAllOf struct for TdmSnapshotAllOf
type TdmSnapshotAllOf struct {
	// Specifies the ID of the snapshot.
	Id NullableString `json:"id"`
	// Specifies whether the snapshot was taken automatically by the scheduler.
	IsAutomated NullableBool `json:"isAutomated,omitempty"`
	// Specifies the time (in usecs from epoch) when the snapshot was created.
	CreatedAt NullableInt64 `json:"createdAt,omitempty"`
	// Specifies the time (in usecs from epoch) when the snapshot was last updated.
	UpdatedAt NullableInt64 `json:"updatedAt,omitempty"`
	// Specifies the details of the user, who created the snapshot. This will be null for snapshots, that are taken by system, such as a scheduler.
	CreatedByUser NullableUser `json:"createdByUser,omitempty"`
	// Specifies the details of the user, who last updated the snapshot.
	UpdatedByUser NullableUser `json:"updatedByUser,omitempty"`
}

// NewTdmSnapshotAllOf instantiates a new TdmSnapshotAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTdmSnapshotAllOf(id NullableString) *TdmSnapshotAllOf {
	this := TdmSnapshotAllOf{}
	this.Id = id
	return &this
}

// NewTdmSnapshotAllOfWithDefaults instantiates a new TdmSnapshotAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTdmSnapshotAllOfWithDefaults() *TdmSnapshotAllOf {
	this := TdmSnapshotAllOf{}
	return &this
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TdmSnapshotAllOf) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}

	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmSnapshotAllOf) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// SetId sets field value
func (o *TdmSnapshotAllOf) SetId(v string) {
	o.Id.Set(&v)
}

// GetIsAutomated returns the IsAutomated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmSnapshotAllOf) GetIsAutomated() bool {
	if o == nil || o.IsAutomated.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsAutomated.Get()
}

// GetIsAutomatedOk returns a tuple with the IsAutomated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmSnapshotAllOf) GetIsAutomatedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsAutomated.Get(), o.IsAutomated.IsSet()
}

// HasIsAutomated returns a boolean if a field has been set.
func (o *TdmSnapshotAllOf) HasIsAutomated() bool {
	if o != nil && o.IsAutomated.IsSet() {
		return true
	}

	return false
}

// SetIsAutomated gets a reference to the given NullableBool and assigns it to the IsAutomated field.
func (o *TdmSnapshotAllOf) SetIsAutomated(v bool) {
	o.IsAutomated.Set(&v)
}
// SetIsAutomatedNil sets the value for IsAutomated to be an explicit nil
func (o *TdmSnapshotAllOf) SetIsAutomatedNil() {
	o.IsAutomated.Set(nil)
}

// UnsetIsAutomated ensures that no value is present for IsAutomated, not even an explicit nil
func (o *TdmSnapshotAllOf) UnsetIsAutomated() {
	o.IsAutomated.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmSnapshotAllOf) GetCreatedAt() int64 {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret int64
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmSnapshotAllOf) GetCreatedAtOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TdmSnapshotAllOf) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableInt64 and assigns it to the CreatedAt field.
func (o *TdmSnapshotAllOf) SetCreatedAt(v int64) {
	o.CreatedAt.Set(&v)
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *TdmSnapshotAllOf) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *TdmSnapshotAllOf) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmSnapshotAllOf) GetUpdatedAt() int64 {
	if o == nil || o.UpdatedAt.Get() == nil {
		var ret int64
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmSnapshotAllOf) GetUpdatedAtOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TdmSnapshotAllOf) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableInt64 and assigns it to the UpdatedAt field.
func (o *TdmSnapshotAllOf) SetUpdatedAt(v int64) {
	o.UpdatedAt.Set(&v)
}
// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *TdmSnapshotAllOf) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *TdmSnapshotAllOf) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetCreatedByUser returns the CreatedByUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmSnapshotAllOf) GetCreatedByUser() User {
	if o == nil || o.CreatedByUser.Get() == nil {
		var ret User
		return ret
	}
	return *o.CreatedByUser.Get()
}

// GetCreatedByUserOk returns a tuple with the CreatedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmSnapshotAllOf) GetCreatedByUserOk() (*User, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedByUser.Get(), o.CreatedByUser.IsSet()
}

// HasCreatedByUser returns a boolean if a field has been set.
func (o *TdmSnapshotAllOf) HasCreatedByUser() bool {
	if o != nil && o.CreatedByUser.IsSet() {
		return true
	}

	return false
}

// SetCreatedByUser gets a reference to the given NullableUser and assigns it to the CreatedByUser field.
func (o *TdmSnapshotAllOf) SetCreatedByUser(v User) {
	o.CreatedByUser.Set(&v)
}
// SetCreatedByUserNil sets the value for CreatedByUser to be an explicit nil
func (o *TdmSnapshotAllOf) SetCreatedByUserNil() {
	o.CreatedByUser.Set(nil)
}

// UnsetCreatedByUser ensures that no value is present for CreatedByUser, not even an explicit nil
func (o *TdmSnapshotAllOf) UnsetCreatedByUser() {
	o.CreatedByUser.Unset()
}

// GetUpdatedByUser returns the UpdatedByUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TdmSnapshotAllOf) GetUpdatedByUser() User {
	if o == nil || o.UpdatedByUser.Get() == nil {
		var ret User
		return ret
	}
	return *o.UpdatedByUser.Get()
}

// GetUpdatedByUserOk returns a tuple with the UpdatedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TdmSnapshotAllOf) GetUpdatedByUserOk() (*User, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpdatedByUser.Get(), o.UpdatedByUser.IsSet()
}

// HasUpdatedByUser returns a boolean if a field has been set.
func (o *TdmSnapshotAllOf) HasUpdatedByUser() bool {
	if o != nil && o.UpdatedByUser.IsSet() {
		return true
	}

	return false
}

// SetUpdatedByUser gets a reference to the given NullableUser and assigns it to the UpdatedByUser field.
func (o *TdmSnapshotAllOf) SetUpdatedByUser(v User) {
	o.UpdatedByUser.Set(&v)
}
// SetUpdatedByUserNil sets the value for UpdatedByUser to be an explicit nil
func (o *TdmSnapshotAllOf) SetUpdatedByUserNil() {
	o.UpdatedByUser.Set(nil)
}

// UnsetUpdatedByUser ensures that no value is present for UpdatedByUser, not even an explicit nil
func (o *TdmSnapshotAllOf) UnsetUpdatedByUser() {
	o.UpdatedByUser.Unset()
}

func (o TdmSnapshotAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id.Get()
	}
	if o.IsAutomated.IsSet() {
		toSerialize["isAutomated"] = o.IsAutomated.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["createdAt"] = o.CreatedAt.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updatedAt"] = o.UpdatedAt.Get()
	}
	if o.CreatedByUser.IsSet() {
		toSerialize["createdByUser"] = o.CreatedByUser.Get()
	}
	if o.UpdatedByUser.IsSet() {
		toSerialize["updatedByUser"] = o.UpdatedByUser.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTdmSnapshotAllOf struct {
	value *TdmSnapshotAllOf
	isSet bool
}

func (v NullableTdmSnapshotAllOf) Get() *TdmSnapshotAllOf {
	return v.value
}

func (v *NullableTdmSnapshotAllOf) Set(val *TdmSnapshotAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTdmSnapshotAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTdmSnapshotAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTdmSnapshotAllOf(val *TdmSnapshotAllOf) *NullableTdmSnapshotAllOf {
	return &NullableTdmSnapshotAllOf{value: val, isSet: true}
}

func (v NullableTdmSnapshotAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTdmSnapshotAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o TdmSnapshotAllOf) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}