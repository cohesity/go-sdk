/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// HeliosOnPremConfig Params for Helios OnPrem VM Configuration.
type HeliosOnPremConfig struct {
	// Name of the new Helios OnPrem VM.
	Name NullableString `json:"name"`
	// Specifies the Nodes present in this Cluster.
	Nodes *[]HeliosOnPremVMNode `json:"nodes,omitempty"`
	// Subnet to use for setting up the Kubernetes cluster's internal network on which Cohesity Helios will run.
	KubernetesSubnetCidr NullableString `json:"kubernetesSubnetCidr"`
	NetworkConfig *ClusterCreateNetworkConfig `json:"networkConfig,omitempty"`
	ProxyServerConfig NullableClusterProxyServerConfig `json:"proxyServerConfig,omitempty"`
}

// NewHeliosOnPremConfig instantiates a new HeliosOnPremConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosOnPremConfig(name NullableString, kubernetesSubnetCidr NullableString) *HeliosOnPremConfig {
	this := HeliosOnPremConfig{}
	this.Name = name
	this.KubernetesSubnetCidr = kubernetesSubnetCidr
	return &this
}

// NewHeliosOnPremConfigWithDefaults instantiates a new HeliosOnPremConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosOnPremConfigWithDefaults() *HeliosOnPremConfig {
	this := HeliosOnPremConfig{}
	return &this
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *HeliosOnPremConfig) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosOnPremConfig) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *HeliosOnPremConfig) SetName(v string) {
	o.Name.Set(&v)
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *HeliosOnPremConfig) GetNodes() []HeliosOnPremVMNode {
	if o == nil || o.Nodes == nil {
		var ret []HeliosOnPremVMNode
		return ret
	}
	return *o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosOnPremConfig) GetNodesOk() (*[]HeliosOnPremVMNode, bool) {
	if o == nil || o.Nodes == nil {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *HeliosOnPremConfig) HasNodes() bool {
	if o != nil && o.Nodes != nil {
		return true
	}

	return false
}

// SetNodes gets a reference to the given []HeliosOnPremVMNode and assigns it to the Nodes field.
func (o *HeliosOnPremConfig) SetNodes(v []HeliosOnPremVMNode) {
	o.Nodes = &v
}

// GetKubernetesSubnetCidr returns the KubernetesSubnetCidr field value
// If the value is explicit nil, the zero value for string will be returned
func (o *HeliosOnPremConfig) GetKubernetesSubnetCidr() string {
	if o == nil || o.KubernetesSubnetCidr.Get() == nil {
		var ret string
		return ret
	}

	return *o.KubernetesSubnetCidr.Get()
}

// GetKubernetesSubnetCidrOk returns a tuple with the KubernetesSubnetCidr field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosOnPremConfig) GetKubernetesSubnetCidrOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.KubernetesSubnetCidr.Get(), o.KubernetesSubnetCidr.IsSet()
}

// SetKubernetesSubnetCidr sets field value
func (o *HeliosOnPremConfig) SetKubernetesSubnetCidr(v string) {
	o.KubernetesSubnetCidr.Set(&v)
}

// GetNetworkConfig returns the NetworkConfig field value if set, zero value otherwise.
func (o *HeliosOnPremConfig) GetNetworkConfig() ClusterCreateNetworkConfig {
	if o == nil || o.NetworkConfig == nil {
		var ret ClusterCreateNetworkConfig
		return ret
	}
	return *o.NetworkConfig
}

// GetNetworkConfigOk returns a tuple with the NetworkConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosOnPremConfig) GetNetworkConfigOk() (*ClusterCreateNetworkConfig, bool) {
	if o == nil || o.NetworkConfig == nil {
		return nil, false
	}
	return o.NetworkConfig, true
}

// HasNetworkConfig returns a boolean if a field has been set.
func (o *HeliosOnPremConfig) HasNetworkConfig() bool {
	if o != nil && o.NetworkConfig != nil {
		return true
	}

	return false
}

// SetNetworkConfig gets a reference to the given ClusterCreateNetworkConfig and assigns it to the NetworkConfig field.
func (o *HeliosOnPremConfig) SetNetworkConfig(v ClusterCreateNetworkConfig) {
	o.NetworkConfig = &v
}

// GetProxyServerConfig returns the ProxyServerConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosOnPremConfig) GetProxyServerConfig() ClusterProxyServerConfig {
	if o == nil || o.ProxyServerConfig.Get() == nil {
		var ret ClusterProxyServerConfig
		return ret
	}
	return *o.ProxyServerConfig.Get()
}

// GetProxyServerConfigOk returns a tuple with the ProxyServerConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosOnPremConfig) GetProxyServerConfigOk() (*ClusterProxyServerConfig, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProxyServerConfig.Get(), o.ProxyServerConfig.IsSet()
}

// HasProxyServerConfig returns a boolean if a field has been set.
func (o *HeliosOnPremConfig) HasProxyServerConfig() bool {
	if o != nil && o.ProxyServerConfig.IsSet() {
		return true
	}

	return false
}

// SetProxyServerConfig gets a reference to the given NullableClusterProxyServerConfig and assigns it to the ProxyServerConfig field.
func (o *HeliosOnPremConfig) SetProxyServerConfig(v ClusterProxyServerConfig) {
	o.ProxyServerConfig.Set(&v)
}
// SetProxyServerConfigNil sets the value for ProxyServerConfig to be an explicit nil
func (o *HeliosOnPremConfig) SetProxyServerConfigNil() {
	o.ProxyServerConfig.Set(nil)
}

// UnsetProxyServerConfig ensures that no value is present for ProxyServerConfig, not even an explicit nil
func (o *HeliosOnPremConfig) UnsetProxyServerConfig() {
	o.ProxyServerConfig.Unset()
}

func (o HeliosOnPremConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Nodes != nil {
		toSerialize["nodes"] = o.Nodes
	}
	if true {
		toSerialize["kubernetesSubnetCidr"] = o.KubernetesSubnetCidr.Get()
	}
	if o.NetworkConfig != nil {
		toSerialize["networkConfig"] = o.NetworkConfig
	}
	if o.ProxyServerConfig.IsSet() {
		toSerialize["proxyServerConfig"] = o.ProxyServerConfig.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableHeliosOnPremConfig struct {
	value *HeliosOnPremConfig
	isSet bool
}

func (v NullableHeliosOnPremConfig) Get() *HeliosOnPremConfig {
	return v.value
}

func (v *NullableHeliosOnPremConfig) Set(val *HeliosOnPremConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosOnPremConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosOnPremConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosOnPremConfig(val *HeliosOnPremConfig) *NullableHeliosOnPremConfig {
	return &NullableHeliosOnPremConfig{value: val, isSet: true}
}

func (v NullableHeliosOnPremConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosOnPremConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o HeliosOnPremConfig) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}