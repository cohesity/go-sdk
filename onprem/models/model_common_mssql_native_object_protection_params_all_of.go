/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// CommonMssqlNativeObjectProtectionParamsAllOf struct for CommonMssqlNativeObjectProtectionParamsAllOf
type CommonMssqlNativeObjectProtectionParamsAllOf struct {
	// Specifies the number of streams to be used.
	NumStreams NullableInt32 `json:"numStreams,omitempty"`
	// Specifies the WithClause to be used.
	WithClause NullableString `json:"withClause,omitempty"`
}

// NewCommonMssqlNativeObjectProtectionParamsAllOf instantiates a new CommonMssqlNativeObjectProtectionParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonMssqlNativeObjectProtectionParamsAllOf() *CommonMssqlNativeObjectProtectionParamsAllOf {
	this := CommonMssqlNativeObjectProtectionParamsAllOf{}
	return &this
}

// NewCommonMssqlNativeObjectProtectionParamsAllOfWithDefaults instantiates a new CommonMssqlNativeObjectProtectionParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonMssqlNativeObjectProtectionParamsAllOfWithDefaults() *CommonMssqlNativeObjectProtectionParamsAllOf {
	this := CommonMssqlNativeObjectProtectionParamsAllOf{}
	return &this
}

// GetNumStreams returns the NumStreams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonMssqlNativeObjectProtectionParamsAllOf) GetNumStreams() int32 {
	if o == nil || o.NumStreams.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NumStreams.Get()
}

// GetNumStreamsOk returns a tuple with the NumStreams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonMssqlNativeObjectProtectionParamsAllOf) GetNumStreamsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumStreams.Get(), o.NumStreams.IsSet()
}

// HasNumStreams returns a boolean if a field has been set.
func (o *CommonMssqlNativeObjectProtectionParamsAllOf) HasNumStreams() bool {
	if o != nil && o.NumStreams.IsSet() {
		return true
	}

	return false
}

// SetNumStreams gets a reference to the given NullableInt32 and assigns it to the NumStreams field.
func (o *CommonMssqlNativeObjectProtectionParamsAllOf) SetNumStreams(v int32) {
	o.NumStreams.Set(&v)
}
// SetNumStreamsNil sets the value for NumStreams to be an explicit nil
func (o *CommonMssqlNativeObjectProtectionParamsAllOf) SetNumStreamsNil() {
	o.NumStreams.Set(nil)
}

// UnsetNumStreams ensures that no value is present for NumStreams, not even an explicit nil
func (o *CommonMssqlNativeObjectProtectionParamsAllOf) UnsetNumStreams() {
	o.NumStreams.Unset()
}

// GetWithClause returns the WithClause field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonMssqlNativeObjectProtectionParamsAllOf) GetWithClause() string {
	if o == nil || o.WithClause.Get() == nil {
		var ret string
		return ret
	}
	return *o.WithClause.Get()
}

// GetWithClauseOk returns a tuple with the WithClause field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonMssqlNativeObjectProtectionParamsAllOf) GetWithClauseOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WithClause.Get(), o.WithClause.IsSet()
}

// HasWithClause returns a boolean if a field has been set.
func (o *CommonMssqlNativeObjectProtectionParamsAllOf) HasWithClause() bool {
	if o != nil && o.WithClause.IsSet() {
		return true
	}

	return false
}

// SetWithClause gets a reference to the given NullableString and assigns it to the WithClause field.
func (o *CommonMssqlNativeObjectProtectionParamsAllOf) SetWithClause(v string) {
	o.WithClause.Set(&v)
}
// SetWithClauseNil sets the value for WithClause to be an explicit nil
func (o *CommonMssqlNativeObjectProtectionParamsAllOf) SetWithClauseNil() {
	o.WithClause.Set(nil)
}

// UnsetWithClause ensures that no value is present for WithClause, not even an explicit nil
func (o *CommonMssqlNativeObjectProtectionParamsAllOf) UnsetWithClause() {
	o.WithClause.Unset()
}

func (o CommonMssqlNativeObjectProtectionParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NumStreams.IsSet() {
		toSerialize["numStreams"] = o.NumStreams.Get()
	}
	if o.WithClause.IsSet() {
		toSerialize["withClause"] = o.WithClause.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCommonMssqlNativeObjectProtectionParamsAllOf struct {
	value *CommonMssqlNativeObjectProtectionParamsAllOf
	isSet bool
}

func (v NullableCommonMssqlNativeObjectProtectionParamsAllOf) Get() *CommonMssqlNativeObjectProtectionParamsAllOf {
	return v.value
}

func (v *NullableCommonMssqlNativeObjectProtectionParamsAllOf) Set(val *CommonMssqlNativeObjectProtectionParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonMssqlNativeObjectProtectionParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonMssqlNativeObjectProtectionParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonMssqlNativeObjectProtectionParamsAllOf(val *CommonMssqlNativeObjectProtectionParamsAllOf) *NullableCommonMssqlNativeObjectProtectionParamsAllOf {
	return &NullableCommonMssqlNativeObjectProtectionParamsAllOf{value: val, isSet: true}
}

func (v NullableCommonMssqlNativeObjectProtectionParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonMssqlNativeObjectProtectionParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o CommonMssqlNativeObjectProtectionParamsAllOf) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}