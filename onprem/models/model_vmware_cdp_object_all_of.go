/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// VmwareCdpObjectAllOf struct for VmwareCdpObjectAllOf
type VmwareCdpObjectAllOf struct {
	// Specifies the state of CDP IO filter. CDP IO filter is an agent which will be installed on the object for performing continuous backup. <br> 1. 'kNotInstalled' specifies that CDP is enabled on this object but filter is not installed. <br> 2. 'kInstallFilterInProgress' specifies that IO filter installation is triggered and in progress. <br> 3. 'kFilterInstalledIOInactive' specifies that IO filter is installed but IO streaming is disabled due to missing backup or explicitly disabled by the user. <br> 4. 'kIOActivationInProgress' specifies that IO filter is activated to start streaming. <br> 5. 'kIOActive' specifies that filter is attached to the object and started streaming. <br> 6. 'kIODeactivationInProgress' specifies that deactivation has been initiated to stop the IO streaming. <br> 7. 'kUninstallFilterInProgress' specifies that uninstallation of IO filter is in progress.
	IoFilterStatus NullableString `json:"ioFilterStatus,omitempty"`
	// Specifies the error message related to IO filter if there is any.
	IoFilterErrorMessage NullableString `json:"ioFilterErrorMessage,omitempty"`
}

// NewVmwareCdpObjectAllOf instantiates a new VmwareCdpObjectAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmwareCdpObjectAllOf() *VmwareCdpObjectAllOf {
	this := VmwareCdpObjectAllOf{}
	return &this
}

// NewVmwareCdpObjectAllOfWithDefaults instantiates a new VmwareCdpObjectAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmwareCdpObjectAllOfWithDefaults() *VmwareCdpObjectAllOf {
	this := VmwareCdpObjectAllOf{}
	return &this
}

// GetIoFilterStatus returns the IoFilterStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareCdpObjectAllOf) GetIoFilterStatus() string {
	if o == nil || o.IoFilterStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.IoFilterStatus.Get()
}

// GetIoFilterStatusOk returns a tuple with the IoFilterStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareCdpObjectAllOf) GetIoFilterStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IoFilterStatus.Get(), o.IoFilterStatus.IsSet()
}

// HasIoFilterStatus returns a boolean if a field has been set.
func (o *VmwareCdpObjectAllOf) HasIoFilterStatus() bool {
	if o != nil && o.IoFilterStatus.IsSet() {
		return true
	}

	return false
}

// SetIoFilterStatus gets a reference to the given NullableString and assigns it to the IoFilterStatus field.
func (o *VmwareCdpObjectAllOf) SetIoFilterStatus(v string) {
	o.IoFilterStatus.Set(&v)
}
// SetIoFilterStatusNil sets the value for IoFilterStatus to be an explicit nil
func (o *VmwareCdpObjectAllOf) SetIoFilterStatusNil() {
	o.IoFilterStatus.Set(nil)
}

// UnsetIoFilterStatus ensures that no value is present for IoFilterStatus, not even an explicit nil
func (o *VmwareCdpObjectAllOf) UnsetIoFilterStatus() {
	o.IoFilterStatus.Unset()
}

// GetIoFilterErrorMessage returns the IoFilterErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareCdpObjectAllOf) GetIoFilterErrorMessage() string {
	if o == nil || o.IoFilterErrorMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.IoFilterErrorMessage.Get()
}

// GetIoFilterErrorMessageOk returns a tuple with the IoFilterErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareCdpObjectAllOf) GetIoFilterErrorMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IoFilterErrorMessage.Get(), o.IoFilterErrorMessage.IsSet()
}

// HasIoFilterErrorMessage returns a boolean if a field has been set.
func (o *VmwareCdpObjectAllOf) HasIoFilterErrorMessage() bool {
	if o != nil && o.IoFilterErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetIoFilterErrorMessage gets a reference to the given NullableString and assigns it to the IoFilterErrorMessage field.
func (o *VmwareCdpObjectAllOf) SetIoFilterErrorMessage(v string) {
	o.IoFilterErrorMessage.Set(&v)
}
// SetIoFilterErrorMessageNil sets the value for IoFilterErrorMessage to be an explicit nil
func (o *VmwareCdpObjectAllOf) SetIoFilterErrorMessageNil() {
	o.IoFilterErrorMessage.Set(nil)
}

// UnsetIoFilterErrorMessage ensures that no value is present for IoFilterErrorMessage, not even an explicit nil
func (o *VmwareCdpObjectAllOf) UnsetIoFilterErrorMessage() {
	o.IoFilterErrorMessage.Unset()
}

func (o VmwareCdpObjectAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IoFilterStatus.IsSet() {
		toSerialize["ioFilterStatus"] = o.IoFilterStatus.Get()
	}
	if o.IoFilterErrorMessage.IsSet() {
		toSerialize["ioFilterErrorMessage"] = o.IoFilterErrorMessage.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableVmwareCdpObjectAllOf struct {
	value *VmwareCdpObjectAllOf
	isSet bool
}

func (v NullableVmwareCdpObjectAllOf) Get() *VmwareCdpObjectAllOf {
	return v.value
}

func (v *NullableVmwareCdpObjectAllOf) Set(val *VmwareCdpObjectAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableVmwareCdpObjectAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableVmwareCdpObjectAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmwareCdpObjectAllOf(val *VmwareCdpObjectAllOf) *NullableVmwareCdpObjectAllOf {
	return &NullableVmwareCdpObjectAllOf{value: val, isSet: true}
}

func (v NullableVmwareCdpObjectAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmwareCdpObjectAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o VmwareCdpObjectAllOf) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}