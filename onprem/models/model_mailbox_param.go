/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// MailboxParam Specifies parameters to recover a Mailbox.
type MailboxParam struct {
	// Specifies whether to recover the whole Mailbox.
	RecoverEntireMailbox NullableBool `json:"recoverEntireMailbox,omitempty"`
	// Specifies a list of email folders to recover.
	RecoverFolders []FolderItem `json:"recoverFolders,omitempty"`
}

// NewMailboxParam instantiates a new MailboxParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMailboxParam() *MailboxParam {
	this := MailboxParam{}
	return &this
}

// NewMailboxParamWithDefaults instantiates a new MailboxParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMailboxParamWithDefaults() *MailboxParam {
	this := MailboxParam{}
	return &this
}

// GetRecoverEntireMailbox returns the RecoverEntireMailbox field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MailboxParam) GetRecoverEntireMailbox() bool {
	if o == nil || o.RecoverEntireMailbox.Get() == nil {
		var ret bool
		return ret
	}
	return *o.RecoverEntireMailbox.Get()
}

// GetRecoverEntireMailboxOk returns a tuple with the RecoverEntireMailbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MailboxParam) GetRecoverEntireMailboxOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RecoverEntireMailbox.Get(), o.RecoverEntireMailbox.IsSet()
}

// HasRecoverEntireMailbox returns a boolean if a field has been set.
func (o *MailboxParam) HasRecoverEntireMailbox() bool {
	if o != nil && o.RecoverEntireMailbox.IsSet() {
		return true
	}

	return false
}

// SetRecoverEntireMailbox gets a reference to the given NullableBool and assigns it to the RecoverEntireMailbox field.
func (o *MailboxParam) SetRecoverEntireMailbox(v bool) {
	o.RecoverEntireMailbox.Set(&v)
}
// SetRecoverEntireMailboxNil sets the value for RecoverEntireMailbox to be an explicit nil
func (o *MailboxParam) SetRecoverEntireMailboxNil() {
	o.RecoverEntireMailbox.Set(nil)
}

// UnsetRecoverEntireMailbox ensures that no value is present for RecoverEntireMailbox, not even an explicit nil
func (o *MailboxParam) UnsetRecoverEntireMailbox() {
	o.RecoverEntireMailbox.Unset()
}

// GetRecoverFolders returns the RecoverFolders field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MailboxParam) GetRecoverFolders() []FolderItem {
	if o == nil  {
		var ret []FolderItem
		return ret
	}
	return o.RecoverFolders
}

// GetRecoverFoldersOk returns a tuple with the RecoverFolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MailboxParam) GetRecoverFoldersOk() (*[]FolderItem, bool) {
	if o == nil || o.RecoverFolders == nil {
		return nil, false
	}
	return &o.RecoverFolders, true
}

// HasRecoverFolders returns a boolean if a field has been set.
func (o *MailboxParam) HasRecoverFolders() bool {
	if o != nil && o.RecoverFolders != nil {
		return true
	}

	return false
}

// SetRecoverFolders gets a reference to the given []FolderItem and assigns it to the RecoverFolders field.
func (o *MailboxParam) SetRecoverFolders(v []FolderItem) {
	o.RecoverFolders = v
}

func (o MailboxParam) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RecoverEntireMailbox.IsSet() {
		toSerialize["recoverEntireMailbox"] = o.RecoverEntireMailbox.Get()
	}
	if o.RecoverFolders != nil {
		toSerialize["recoverFolders"] = o.RecoverFolders
	}
	return json.Marshal(toSerialize)
}

type NullableMailboxParam struct {
	value *MailboxParam
	isSet bool
}

func (v NullableMailboxParam) Get() *MailboxParam {
	return v.value
}

func (v *NullableMailboxParam) Set(val *MailboxParam) {
	v.value = val
	v.isSet = true
}

func (v NullableMailboxParam) IsSet() bool {
	return v.isSet
}

func (v *NullableMailboxParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMailboxParam(val *MailboxParam) *NullableMailboxParam {
	return &NullableMailboxParam{value: val, isSet: true}
}

func (v NullableMailboxParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMailboxParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o MailboxParam) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}