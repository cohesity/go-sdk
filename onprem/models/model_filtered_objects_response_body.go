/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// FilteredObjectsResponseBody Specifies the filter details.
type FilteredObjectsResponseBody struct {
	// Specifies the list of filtered Objects.
	FilteredObjects []FilteredObject `json:"filteredObjects,omitempty"`
}

// NewFilteredObjectsResponseBody instantiates a new FilteredObjectsResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilteredObjectsResponseBody() *FilteredObjectsResponseBody {
	this := FilteredObjectsResponseBody{}
	return &this
}

// NewFilteredObjectsResponseBodyWithDefaults instantiates a new FilteredObjectsResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilteredObjectsResponseBodyWithDefaults() *FilteredObjectsResponseBody {
	this := FilteredObjectsResponseBody{}
	return &this
}

// GetFilteredObjects returns the FilteredObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FilteredObjectsResponseBody) GetFilteredObjects() []FilteredObject {
	if o == nil  {
		var ret []FilteredObject
		return ret
	}
	return o.FilteredObjects
}

// GetFilteredObjectsOk returns a tuple with the FilteredObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FilteredObjectsResponseBody) GetFilteredObjectsOk() (*[]FilteredObject, bool) {
	if o == nil || o.FilteredObjects == nil {
		return nil, false
	}
	return &o.FilteredObjects, true
}

// HasFilteredObjects returns a boolean if a field has been set.
func (o *FilteredObjectsResponseBody) HasFilteredObjects() bool {
	if o != nil && o.FilteredObjects != nil {
		return true
	}

	return false
}

// SetFilteredObjects gets a reference to the given []FilteredObject and assigns it to the FilteredObjects field.
func (o *FilteredObjectsResponseBody) SetFilteredObjects(v []FilteredObject) {
	o.FilteredObjects = v
}

func (o FilteredObjectsResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FilteredObjects != nil {
		toSerialize["filteredObjects"] = o.FilteredObjects
	}
	return json.Marshal(toSerialize)
}

type NullableFilteredObjectsResponseBody struct {
	value *FilteredObjectsResponseBody
	isSet bool
}

func (v NullableFilteredObjectsResponseBody) Get() *FilteredObjectsResponseBody {
	return v.value
}

func (v *NullableFilteredObjectsResponseBody) Set(val *FilteredObjectsResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableFilteredObjectsResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableFilteredObjectsResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilteredObjectsResponseBody(val *FilteredObjectsResponseBody) *NullableFilteredObjectsResponseBody {
	return &NullableFilteredObjectsResponseBody{value: val, isSet: true}
}

func (v NullableFilteredObjectsResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilteredObjectsResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o FilteredObjectsResponseBody) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}