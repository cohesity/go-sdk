/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// ConnectivityCheckResponseBody Specify the results after checking connectivity on endpoints.
type ConnectivityCheckResponseBody struct {
	// Specifies the results of the nodes in the cluster.
	Nodes []NodeEndpointState `json:"Nodes,omitempty"`
}

// NewConnectivityCheckResponseBody instantiates a new ConnectivityCheckResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectivityCheckResponseBody() *ConnectivityCheckResponseBody {
	this := ConnectivityCheckResponseBody{}
	return &this
}

// NewConnectivityCheckResponseBodyWithDefaults instantiates a new ConnectivityCheckResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectivityCheckResponseBodyWithDefaults() *ConnectivityCheckResponseBody {
	this := ConnectivityCheckResponseBody{}
	return &this
}

// GetNodes returns the Nodes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectivityCheckResponseBody) GetNodes() []NodeEndpointState {
	if o == nil  {
		var ret []NodeEndpointState
		return ret
	}
	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectivityCheckResponseBody) GetNodesOk() (*[]NodeEndpointState, bool) {
	if o == nil || o.Nodes == nil {
		return nil, false
	}
	return &o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *ConnectivityCheckResponseBody) HasNodes() bool {
	if o != nil && o.Nodes != nil {
		return true
	}

	return false
}

// SetNodes gets a reference to the given []NodeEndpointState and assigns it to the Nodes field.
func (o *ConnectivityCheckResponseBody) SetNodes(v []NodeEndpointState) {
	o.Nodes = v
}

func (o ConnectivityCheckResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Nodes != nil {
		toSerialize["Nodes"] = o.Nodes
	}
	return json.Marshal(toSerialize)
}

type NullableConnectivityCheckResponseBody struct {
	value *ConnectivityCheckResponseBody
	isSet bool
}

func (v NullableConnectivityCheckResponseBody) Get() *ConnectivityCheckResponseBody {
	return v.value
}

func (v *NullableConnectivityCheckResponseBody) Set(val *ConnectivityCheckResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectivityCheckResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectivityCheckResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectivityCheckResponseBody(val *ConnectivityCheckResponseBody) *NullableConnectivityCheckResponseBody {
	return &NullableConnectivityCheckResponseBody{value: val, isSet: true}
}

func (v NullableConnectivityCheckResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectivityCheckResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o ConnectivityCheckResponseBody) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}