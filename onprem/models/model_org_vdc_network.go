/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// OrgVDCNetwork Specifies a VDC Organization Network.
type OrgVDCNetwork struct {
	// Specifies the UUID of network associated with the Virtual Cloud director.
	VcdUuid NullableString `json:"vcdUuid"`
	// Specifies the name of the catalog.
	Name NullableString `json:"name"`
	// Specifies the UUID of network associated with the Vcenter.
	VCenterUuid NullableString `json:"vCenterUuid,omitempty"`
}

// NewOrgVDCNetwork instantiates a new OrgVDCNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgVDCNetwork(vcdUuid NullableString, name NullableString) *OrgVDCNetwork {
	this := OrgVDCNetwork{}
	this.VcdUuid = vcdUuid
	this.Name = name
	return &this
}

// NewOrgVDCNetworkWithDefaults instantiates a new OrgVDCNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgVDCNetworkWithDefaults() *OrgVDCNetwork {
	this := OrgVDCNetwork{}
	return &this
}

// GetVcdUuid returns the VcdUuid field value
// If the value is explicit nil, the zero value for string will be returned
func (o *OrgVDCNetwork) GetVcdUuid() string {
	if o == nil || o.VcdUuid.Get() == nil {
		var ret string
		return ret
	}

	return *o.VcdUuid.Get()
}

// GetVcdUuidOk returns a tuple with the VcdUuid field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrgVDCNetwork) GetVcdUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VcdUuid.Get(), o.VcdUuid.IsSet()
}

// SetVcdUuid sets field value
func (o *OrgVDCNetwork) SetVcdUuid(v string) {
	o.VcdUuid.Set(&v)
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *OrgVDCNetwork) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrgVDCNetwork) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *OrgVDCNetwork) SetName(v string) {
	o.Name.Set(&v)
}

// GetVCenterUuid returns the VCenterUuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrgVDCNetwork) GetVCenterUuid() string {
	if o == nil || o.VCenterUuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.VCenterUuid.Get()
}

// GetVCenterUuidOk returns a tuple with the VCenterUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrgVDCNetwork) GetVCenterUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VCenterUuid.Get(), o.VCenterUuid.IsSet()
}

// HasVCenterUuid returns a boolean if a field has been set.
func (o *OrgVDCNetwork) HasVCenterUuid() bool {
	if o != nil && o.VCenterUuid.IsSet() {
		return true
	}

	return false
}

// SetVCenterUuid gets a reference to the given NullableString and assigns it to the VCenterUuid field.
func (o *OrgVDCNetwork) SetVCenterUuid(v string) {
	o.VCenterUuid.Set(&v)
}
// SetVCenterUuidNil sets the value for VCenterUuid to be an explicit nil
func (o *OrgVDCNetwork) SetVCenterUuidNil() {
	o.VCenterUuid.Set(nil)
}

// UnsetVCenterUuid ensures that no value is present for VCenterUuid, not even an explicit nil
func (o *OrgVDCNetwork) UnsetVCenterUuid() {
	o.VCenterUuid.Unset()
}

func (o OrgVDCNetwork) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["vcdUuid"] = o.VcdUuid.Get()
	}
	if true {
		toSerialize["name"] = o.Name.Get()
	}
	if o.VCenterUuid.IsSet() {
		toSerialize["vCenterUuid"] = o.VCenterUuid.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOrgVDCNetwork struct {
	value *OrgVDCNetwork
	isSet bool
}

func (v NullableOrgVDCNetwork) Get() *OrgVDCNetwork {
	return v.value
}

func (v *NullableOrgVDCNetwork) Set(val *OrgVDCNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgVDCNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgVDCNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgVDCNetwork(val *OrgVDCNetwork) *NullableOrgVDCNetwork {
	return &NullableOrgVDCNetwork{value: val, isSet: true}
}

func (v NullableOrgVDCNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgVDCNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o OrgVDCNetwork) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}