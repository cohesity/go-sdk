/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// McmClusterClaimResponseParams Specifies the response of claiming a cluster to Helios.
type McmClusterClaimResponseParams struct {
	// Specifies the cluster id.
	ClusterId NullableInt64 `json:"clusterId,omitempty"`
	// Specifies the cluster incarnation id.
	ClusterIncarnationId NullableInt64 `json:"clusterIncarnationId,omitempty"`
	// Specifies the cluster name.
	ClusterName NullableString `json:"clusterName,omitempty"`
	// Specifies the Salesforce account id used to claim the cluster.
	SfAccountId NullableString `json:"sfAccountId,omitempty"`
	// Specifies the Cluster certificate.
	ClusterCertificate NullableString `json:"clusterCertificate,omitempty"`
	// Specifies the Cluster private key.
	ClusterPrivateKey NullableString `json:"clusterPrivateKey,omitempty"`
	// Specifies the passphrase (if used) to encrypt the cluster private key.
	Passphrase NullableString `json:"passphrase,omitempty"`
	// Specifies the CA chain that is used to sign the Cluster certificate.
	ClusterCaChain NullableString `json:"clusterCaChain,omitempty"`
	// Specifies the Helios certificate that can be used to authenticate api calls made from Helios to cluster.
	HeliosCertificate NullableString `json:"heliosCertificate,omitempty"`
}

// NewMcmClusterClaimResponseParams instantiates a new McmClusterClaimResponseParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcmClusterClaimResponseParams() *McmClusterClaimResponseParams {
	this := McmClusterClaimResponseParams{}
	return &this
}

// NewMcmClusterClaimResponseParamsWithDefaults instantiates a new McmClusterClaimResponseParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcmClusterClaimResponseParamsWithDefaults() *McmClusterClaimResponseParams {
	this := McmClusterClaimResponseParams{}
	return &this
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmClusterClaimResponseParams) GetClusterId() int64 {
	if o == nil || o.ClusterId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ClusterId.Get()
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmClusterClaimResponseParams) GetClusterIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterId.Get(), o.ClusterId.IsSet()
}

// HasClusterId returns a boolean if a field has been set.
func (o *McmClusterClaimResponseParams) HasClusterId() bool {
	if o != nil && o.ClusterId.IsSet() {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given NullableInt64 and assigns it to the ClusterId field.
func (o *McmClusterClaimResponseParams) SetClusterId(v int64) {
	o.ClusterId.Set(&v)
}
// SetClusterIdNil sets the value for ClusterId to be an explicit nil
func (o *McmClusterClaimResponseParams) SetClusterIdNil() {
	o.ClusterId.Set(nil)
}

// UnsetClusterId ensures that no value is present for ClusterId, not even an explicit nil
func (o *McmClusterClaimResponseParams) UnsetClusterId() {
	o.ClusterId.Unset()
}

// GetClusterIncarnationId returns the ClusterIncarnationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmClusterClaimResponseParams) GetClusterIncarnationId() int64 {
	if o == nil || o.ClusterIncarnationId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ClusterIncarnationId.Get()
}

// GetClusterIncarnationIdOk returns a tuple with the ClusterIncarnationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmClusterClaimResponseParams) GetClusterIncarnationIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterIncarnationId.Get(), o.ClusterIncarnationId.IsSet()
}

// HasClusterIncarnationId returns a boolean if a field has been set.
func (o *McmClusterClaimResponseParams) HasClusterIncarnationId() bool {
	if o != nil && o.ClusterIncarnationId.IsSet() {
		return true
	}

	return false
}

// SetClusterIncarnationId gets a reference to the given NullableInt64 and assigns it to the ClusterIncarnationId field.
func (o *McmClusterClaimResponseParams) SetClusterIncarnationId(v int64) {
	o.ClusterIncarnationId.Set(&v)
}
// SetClusterIncarnationIdNil sets the value for ClusterIncarnationId to be an explicit nil
func (o *McmClusterClaimResponseParams) SetClusterIncarnationIdNil() {
	o.ClusterIncarnationId.Set(nil)
}

// UnsetClusterIncarnationId ensures that no value is present for ClusterIncarnationId, not even an explicit nil
func (o *McmClusterClaimResponseParams) UnsetClusterIncarnationId() {
	o.ClusterIncarnationId.Unset()
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmClusterClaimResponseParams) GetClusterName() string {
	if o == nil || o.ClusterName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClusterName.Get()
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmClusterClaimResponseParams) GetClusterNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterName.Get(), o.ClusterName.IsSet()
}

// HasClusterName returns a boolean if a field has been set.
func (o *McmClusterClaimResponseParams) HasClusterName() bool {
	if o != nil && o.ClusterName.IsSet() {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given NullableString and assigns it to the ClusterName field.
func (o *McmClusterClaimResponseParams) SetClusterName(v string) {
	o.ClusterName.Set(&v)
}
// SetClusterNameNil sets the value for ClusterName to be an explicit nil
func (o *McmClusterClaimResponseParams) SetClusterNameNil() {
	o.ClusterName.Set(nil)
}

// UnsetClusterName ensures that no value is present for ClusterName, not even an explicit nil
func (o *McmClusterClaimResponseParams) UnsetClusterName() {
	o.ClusterName.Unset()
}

// GetSfAccountId returns the SfAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmClusterClaimResponseParams) GetSfAccountId() string {
	if o == nil || o.SfAccountId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SfAccountId.Get()
}

// GetSfAccountIdOk returns a tuple with the SfAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmClusterClaimResponseParams) GetSfAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SfAccountId.Get(), o.SfAccountId.IsSet()
}

// HasSfAccountId returns a boolean if a field has been set.
func (o *McmClusterClaimResponseParams) HasSfAccountId() bool {
	if o != nil && o.SfAccountId.IsSet() {
		return true
	}

	return false
}

// SetSfAccountId gets a reference to the given NullableString and assigns it to the SfAccountId field.
func (o *McmClusterClaimResponseParams) SetSfAccountId(v string) {
	o.SfAccountId.Set(&v)
}
// SetSfAccountIdNil sets the value for SfAccountId to be an explicit nil
func (o *McmClusterClaimResponseParams) SetSfAccountIdNil() {
	o.SfAccountId.Set(nil)
}

// UnsetSfAccountId ensures that no value is present for SfAccountId, not even an explicit nil
func (o *McmClusterClaimResponseParams) UnsetSfAccountId() {
	o.SfAccountId.Unset()
}

// GetClusterCertificate returns the ClusterCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmClusterClaimResponseParams) GetClusterCertificate() string {
	if o == nil || o.ClusterCertificate.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClusterCertificate.Get()
}

// GetClusterCertificateOk returns a tuple with the ClusterCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmClusterClaimResponseParams) GetClusterCertificateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterCertificate.Get(), o.ClusterCertificate.IsSet()
}

// HasClusterCertificate returns a boolean if a field has been set.
func (o *McmClusterClaimResponseParams) HasClusterCertificate() bool {
	if o != nil && o.ClusterCertificate.IsSet() {
		return true
	}

	return false
}

// SetClusterCertificate gets a reference to the given NullableString and assigns it to the ClusterCertificate field.
func (o *McmClusterClaimResponseParams) SetClusterCertificate(v string) {
	o.ClusterCertificate.Set(&v)
}
// SetClusterCertificateNil sets the value for ClusterCertificate to be an explicit nil
func (o *McmClusterClaimResponseParams) SetClusterCertificateNil() {
	o.ClusterCertificate.Set(nil)
}

// UnsetClusterCertificate ensures that no value is present for ClusterCertificate, not even an explicit nil
func (o *McmClusterClaimResponseParams) UnsetClusterCertificate() {
	o.ClusterCertificate.Unset()
}

// GetClusterPrivateKey returns the ClusterPrivateKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmClusterClaimResponseParams) GetClusterPrivateKey() string {
	if o == nil || o.ClusterPrivateKey.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClusterPrivateKey.Get()
}

// GetClusterPrivateKeyOk returns a tuple with the ClusterPrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmClusterClaimResponseParams) GetClusterPrivateKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterPrivateKey.Get(), o.ClusterPrivateKey.IsSet()
}

// HasClusterPrivateKey returns a boolean if a field has been set.
func (o *McmClusterClaimResponseParams) HasClusterPrivateKey() bool {
	if o != nil && o.ClusterPrivateKey.IsSet() {
		return true
	}

	return false
}

// SetClusterPrivateKey gets a reference to the given NullableString and assigns it to the ClusterPrivateKey field.
func (o *McmClusterClaimResponseParams) SetClusterPrivateKey(v string) {
	o.ClusterPrivateKey.Set(&v)
}
// SetClusterPrivateKeyNil sets the value for ClusterPrivateKey to be an explicit nil
func (o *McmClusterClaimResponseParams) SetClusterPrivateKeyNil() {
	o.ClusterPrivateKey.Set(nil)
}

// UnsetClusterPrivateKey ensures that no value is present for ClusterPrivateKey, not even an explicit nil
func (o *McmClusterClaimResponseParams) UnsetClusterPrivateKey() {
	o.ClusterPrivateKey.Unset()
}

// GetPassphrase returns the Passphrase field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmClusterClaimResponseParams) GetPassphrase() string {
	if o == nil || o.Passphrase.Get() == nil {
		var ret string
		return ret
	}
	return *o.Passphrase.Get()
}

// GetPassphraseOk returns a tuple with the Passphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmClusterClaimResponseParams) GetPassphraseOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Passphrase.Get(), o.Passphrase.IsSet()
}

// HasPassphrase returns a boolean if a field has been set.
func (o *McmClusterClaimResponseParams) HasPassphrase() bool {
	if o != nil && o.Passphrase.IsSet() {
		return true
	}

	return false
}

// SetPassphrase gets a reference to the given NullableString and assigns it to the Passphrase field.
func (o *McmClusterClaimResponseParams) SetPassphrase(v string) {
	o.Passphrase.Set(&v)
}
// SetPassphraseNil sets the value for Passphrase to be an explicit nil
func (o *McmClusterClaimResponseParams) SetPassphraseNil() {
	o.Passphrase.Set(nil)
}

// UnsetPassphrase ensures that no value is present for Passphrase, not even an explicit nil
func (o *McmClusterClaimResponseParams) UnsetPassphrase() {
	o.Passphrase.Unset()
}

// GetClusterCaChain returns the ClusterCaChain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmClusterClaimResponseParams) GetClusterCaChain() string {
	if o == nil || o.ClusterCaChain.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClusterCaChain.Get()
}

// GetClusterCaChainOk returns a tuple with the ClusterCaChain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmClusterClaimResponseParams) GetClusterCaChainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterCaChain.Get(), o.ClusterCaChain.IsSet()
}

// HasClusterCaChain returns a boolean if a field has been set.
func (o *McmClusterClaimResponseParams) HasClusterCaChain() bool {
	if o != nil && o.ClusterCaChain.IsSet() {
		return true
	}

	return false
}

// SetClusterCaChain gets a reference to the given NullableString and assigns it to the ClusterCaChain field.
func (o *McmClusterClaimResponseParams) SetClusterCaChain(v string) {
	o.ClusterCaChain.Set(&v)
}
// SetClusterCaChainNil sets the value for ClusterCaChain to be an explicit nil
func (o *McmClusterClaimResponseParams) SetClusterCaChainNil() {
	o.ClusterCaChain.Set(nil)
}

// UnsetClusterCaChain ensures that no value is present for ClusterCaChain, not even an explicit nil
func (o *McmClusterClaimResponseParams) UnsetClusterCaChain() {
	o.ClusterCaChain.Unset()
}

// GetHeliosCertificate returns the HeliosCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmClusterClaimResponseParams) GetHeliosCertificate() string {
	if o == nil || o.HeliosCertificate.Get() == nil {
		var ret string
		return ret
	}
	return *o.HeliosCertificate.Get()
}

// GetHeliosCertificateOk returns a tuple with the HeliosCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmClusterClaimResponseParams) GetHeliosCertificateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HeliosCertificate.Get(), o.HeliosCertificate.IsSet()
}

// HasHeliosCertificate returns a boolean if a field has been set.
func (o *McmClusterClaimResponseParams) HasHeliosCertificate() bool {
	if o != nil && o.HeliosCertificate.IsSet() {
		return true
	}

	return false
}

// SetHeliosCertificate gets a reference to the given NullableString and assigns it to the HeliosCertificate field.
func (o *McmClusterClaimResponseParams) SetHeliosCertificate(v string) {
	o.HeliosCertificate.Set(&v)
}
// SetHeliosCertificateNil sets the value for HeliosCertificate to be an explicit nil
func (o *McmClusterClaimResponseParams) SetHeliosCertificateNil() {
	o.HeliosCertificate.Set(nil)
}

// UnsetHeliosCertificate ensures that no value is present for HeliosCertificate, not even an explicit nil
func (o *McmClusterClaimResponseParams) UnsetHeliosCertificate() {
	o.HeliosCertificate.Unset()
}

func (o McmClusterClaimResponseParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterId.IsSet() {
		toSerialize["clusterId"] = o.ClusterId.Get()
	}
	if o.ClusterIncarnationId.IsSet() {
		toSerialize["clusterIncarnationId"] = o.ClusterIncarnationId.Get()
	}
	if o.ClusterName.IsSet() {
		toSerialize["clusterName"] = o.ClusterName.Get()
	}
	if o.SfAccountId.IsSet() {
		toSerialize["sfAccountId"] = o.SfAccountId.Get()
	}
	if o.ClusterCertificate.IsSet() {
		toSerialize["clusterCertificate"] = o.ClusterCertificate.Get()
	}
	if o.ClusterPrivateKey.IsSet() {
		toSerialize["clusterPrivateKey"] = o.ClusterPrivateKey.Get()
	}
	if o.Passphrase.IsSet() {
		toSerialize["passphrase"] = o.Passphrase.Get()
	}
	if o.ClusterCaChain.IsSet() {
		toSerialize["clusterCaChain"] = o.ClusterCaChain.Get()
	}
	if o.HeliosCertificate.IsSet() {
		toSerialize["heliosCertificate"] = o.HeliosCertificate.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMcmClusterClaimResponseParams struct {
	value *McmClusterClaimResponseParams
	isSet bool
}

func (v NullableMcmClusterClaimResponseParams) Get() *McmClusterClaimResponseParams {
	return v.value
}

func (v *NullableMcmClusterClaimResponseParams) Set(val *McmClusterClaimResponseParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMcmClusterClaimResponseParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMcmClusterClaimResponseParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcmClusterClaimResponseParams(val *McmClusterClaimResponseParams) *NullableMcmClusterClaimResponseParams {
	return &NullableMcmClusterClaimResponseParams{value: val, isSet: true}
}

func (v NullableMcmClusterClaimResponseParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcmClusterClaimResponseParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o McmClusterClaimResponseParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}