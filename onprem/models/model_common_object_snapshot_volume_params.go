/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// CommonObjectSnapshotVolumeParams Specifies volume info of snapshot across all enviroments.
type CommonObjectSnapshotVolumeParams struct {
	// Specifies a list of volume info.
	Volumes []VolumeInfo `json:"volumes,omitempty"`
}

// NewCommonObjectSnapshotVolumeParams instantiates a new CommonObjectSnapshotVolumeParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonObjectSnapshotVolumeParams() *CommonObjectSnapshotVolumeParams {
	this := CommonObjectSnapshotVolumeParams{}
	return &this
}

// NewCommonObjectSnapshotVolumeParamsWithDefaults instantiates a new CommonObjectSnapshotVolumeParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonObjectSnapshotVolumeParamsWithDefaults() *CommonObjectSnapshotVolumeParams {
	this := CommonObjectSnapshotVolumeParams{}
	return &this
}

// GetVolumes returns the Volumes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonObjectSnapshotVolumeParams) GetVolumes() []VolumeInfo {
	if o == nil  {
		var ret []VolumeInfo
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonObjectSnapshotVolumeParams) GetVolumesOk() (*[]VolumeInfo, bool) {
	if o == nil || o.Volumes == nil {
		return nil, false
	}
	return &o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *CommonObjectSnapshotVolumeParams) HasVolumes() bool {
	if o != nil && o.Volumes != nil {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []VolumeInfo and assigns it to the Volumes field.
func (o *CommonObjectSnapshotVolumeParams) SetVolumes(v []VolumeInfo) {
	o.Volumes = v
}

func (o CommonObjectSnapshotVolumeParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Volumes != nil {
		toSerialize["volumes"] = o.Volumes
	}
	return json.Marshal(toSerialize)
}

type NullableCommonObjectSnapshotVolumeParams struct {
	value *CommonObjectSnapshotVolumeParams
	isSet bool
}

func (v NullableCommonObjectSnapshotVolumeParams) Get() *CommonObjectSnapshotVolumeParams {
	return v.value
}

func (v *NullableCommonObjectSnapshotVolumeParams) Set(val *CommonObjectSnapshotVolumeParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonObjectSnapshotVolumeParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonObjectSnapshotVolumeParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonObjectSnapshotVolumeParams(val *CommonObjectSnapshotVolumeParams) *NullableCommonObjectSnapshotVolumeParams {
	return &NullableCommonObjectSnapshotVolumeParams{value: val, isSet: true}
}

func (v NullableCommonObjectSnapshotVolumeParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonObjectSnapshotVolumeParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o CommonObjectSnapshotVolumeParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}