/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// CdpObjectInfo Specifies the CDP related information for a given object. This field will only be populated when protection group is configured with policy having CDP retention settings.
type CdpObjectInfo struct {
	// Specifies whether CDP is currently active or not. CDP might have been active on this object before, but it might not be anymore.
	CdpEnabled NullableBool `json:"cdpEnabled,omitempty"`
	LastRunInfo *CdpObjectLastRunInfo `json:"lastRunInfo,omitempty"`
	// Specifies the protection group id to which this CDP object belongs.
	ProtectionGroupId NullableString `json:"protectionGroupId,omitempty"`
}

// NewCdpObjectInfo instantiates a new CdpObjectInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdpObjectInfo() *CdpObjectInfo {
	this := CdpObjectInfo{}
	return &this
}

// NewCdpObjectInfoWithDefaults instantiates a new CdpObjectInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdpObjectInfoWithDefaults() *CdpObjectInfo {
	this := CdpObjectInfo{}
	return &this
}

// GetCdpEnabled returns the CdpEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CdpObjectInfo) GetCdpEnabled() bool {
	if o == nil || o.CdpEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.CdpEnabled.Get()
}

// GetCdpEnabledOk returns a tuple with the CdpEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CdpObjectInfo) GetCdpEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CdpEnabled.Get(), o.CdpEnabled.IsSet()
}

// HasCdpEnabled returns a boolean if a field has been set.
func (o *CdpObjectInfo) HasCdpEnabled() bool {
	if o != nil && o.CdpEnabled.IsSet() {
		return true
	}

	return false
}

// SetCdpEnabled gets a reference to the given NullableBool and assigns it to the CdpEnabled field.
func (o *CdpObjectInfo) SetCdpEnabled(v bool) {
	o.CdpEnabled.Set(&v)
}
// SetCdpEnabledNil sets the value for CdpEnabled to be an explicit nil
func (o *CdpObjectInfo) SetCdpEnabledNil() {
	o.CdpEnabled.Set(nil)
}

// UnsetCdpEnabled ensures that no value is present for CdpEnabled, not even an explicit nil
func (o *CdpObjectInfo) UnsetCdpEnabled() {
	o.CdpEnabled.Unset()
}

// GetLastRunInfo returns the LastRunInfo field value if set, zero value otherwise.
func (o *CdpObjectInfo) GetLastRunInfo() CdpObjectLastRunInfo {
	if o == nil || o.LastRunInfo == nil {
		var ret CdpObjectLastRunInfo
		return ret
	}
	return *o.LastRunInfo
}

// GetLastRunInfoOk returns a tuple with the LastRunInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdpObjectInfo) GetLastRunInfoOk() (*CdpObjectLastRunInfo, bool) {
	if o == nil || o.LastRunInfo == nil {
		return nil, false
	}
	return o.LastRunInfo, true
}

// HasLastRunInfo returns a boolean if a field has been set.
func (o *CdpObjectInfo) HasLastRunInfo() bool {
	if o != nil && o.LastRunInfo != nil {
		return true
	}

	return false
}

// SetLastRunInfo gets a reference to the given CdpObjectLastRunInfo and assigns it to the LastRunInfo field.
func (o *CdpObjectInfo) SetLastRunInfo(v CdpObjectLastRunInfo) {
	o.LastRunInfo = &v
}

// GetProtectionGroupId returns the ProtectionGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CdpObjectInfo) GetProtectionGroupId() string {
	if o == nil || o.ProtectionGroupId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProtectionGroupId.Get()
}

// GetProtectionGroupIdOk returns a tuple with the ProtectionGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CdpObjectInfo) GetProtectionGroupIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionGroupId.Get(), o.ProtectionGroupId.IsSet()
}

// HasProtectionGroupId returns a boolean if a field has been set.
func (o *CdpObjectInfo) HasProtectionGroupId() bool {
	if o != nil && o.ProtectionGroupId.IsSet() {
		return true
	}

	return false
}

// SetProtectionGroupId gets a reference to the given NullableString and assigns it to the ProtectionGroupId field.
func (o *CdpObjectInfo) SetProtectionGroupId(v string) {
	o.ProtectionGroupId.Set(&v)
}
// SetProtectionGroupIdNil sets the value for ProtectionGroupId to be an explicit nil
func (o *CdpObjectInfo) SetProtectionGroupIdNil() {
	o.ProtectionGroupId.Set(nil)
}

// UnsetProtectionGroupId ensures that no value is present for ProtectionGroupId, not even an explicit nil
func (o *CdpObjectInfo) UnsetProtectionGroupId() {
	o.ProtectionGroupId.Unset()
}

func (o CdpObjectInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CdpEnabled.IsSet() {
		toSerialize["cdpEnabled"] = o.CdpEnabled.Get()
	}
	if o.LastRunInfo != nil {
		toSerialize["lastRunInfo"] = o.LastRunInfo
	}
	if o.ProtectionGroupId.IsSet() {
		toSerialize["protectionGroupId"] = o.ProtectionGroupId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCdpObjectInfo struct {
	value *CdpObjectInfo
	isSet bool
}

func (v NullableCdpObjectInfo) Get() *CdpObjectInfo {
	return v.value
}

func (v *NullableCdpObjectInfo) Set(val *CdpObjectInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCdpObjectInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCdpObjectInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdpObjectInfo(val *CdpObjectInfo) *NullableCdpObjectInfo {
	return &NullableCdpObjectInfo{value: val, isSet: true}
}

func (v NullableCdpObjectInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdpObjectInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o CdpObjectInfo) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}