/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// OdpRemoteClusters Specifies a list of ODP Remote Cluster configs.
type OdpRemoteClusters struct {
	// Specifies the list of ODP Remote Cluster configs.
	OdpRemoteClusters *[]OdpRemoteCluster `json:"odpRemoteClusters,omitempty"`
}

// NewOdpRemoteClusters instantiates a new OdpRemoteClusters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOdpRemoteClusters() *OdpRemoteClusters {
	this := OdpRemoteClusters{}
	return &this
}

// NewOdpRemoteClustersWithDefaults instantiates a new OdpRemoteClusters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOdpRemoteClustersWithDefaults() *OdpRemoteClusters {
	this := OdpRemoteClusters{}
	return &this
}

// GetOdpRemoteClusters returns the OdpRemoteClusters field value if set, zero value otherwise.
func (o *OdpRemoteClusters) GetOdpRemoteClusters() []OdpRemoteCluster {
	if o == nil || o.OdpRemoteClusters == nil {
		var ret []OdpRemoteCluster
		return ret
	}
	return *o.OdpRemoteClusters
}

// GetOdpRemoteClustersOk returns a tuple with the OdpRemoteClusters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OdpRemoteClusters) GetOdpRemoteClustersOk() (*[]OdpRemoteCluster, bool) {
	if o == nil || o.OdpRemoteClusters == nil {
		return nil, false
	}
	return o.OdpRemoteClusters, true
}

// HasOdpRemoteClusters returns a boolean if a field has been set.
func (o *OdpRemoteClusters) HasOdpRemoteClusters() bool {
	if o != nil && o.OdpRemoteClusters != nil {
		return true
	}

	return false
}

// SetOdpRemoteClusters gets a reference to the given []OdpRemoteCluster and assigns it to the OdpRemoteClusters field.
func (o *OdpRemoteClusters) SetOdpRemoteClusters(v []OdpRemoteCluster) {
	o.OdpRemoteClusters = &v
}

func (o OdpRemoteClusters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OdpRemoteClusters != nil {
		toSerialize["odpRemoteClusters"] = o.OdpRemoteClusters
	}
	return json.Marshal(toSerialize)
}

type NullableOdpRemoteClusters struct {
	value *OdpRemoteClusters
	isSet bool
}

func (v NullableOdpRemoteClusters) Get() *OdpRemoteClusters {
	return v.value
}

func (v *NullableOdpRemoteClusters) Set(val *OdpRemoteClusters) {
	v.value = val
	v.isSet = true
}

func (v NullableOdpRemoteClusters) IsSet() bool {
	return v.isSet
}

func (v *NullableOdpRemoteClusters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOdpRemoteClusters(val *OdpRemoteClusters) *NullableOdpRemoteClusters {
	return &NullableOdpRemoteClusters{value: val, isSet: true}
}

func (v NullableOdpRemoteClusters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOdpRemoteClusters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o OdpRemoteClusters) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}