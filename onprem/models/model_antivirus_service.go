/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// AntivirusService Specifies an Antivirus Service.
type AntivirusService struct {
	// Specifies the ICAP Uri for the Antivirus Service.
	IcapUri NullableString `json:"icapUri"`
	// Specifies the description for the Antivirus Service.
	Description NullableString `json:"description,omitempty"`
	// Specifies the tag of the Antivirus Service.
	Tag NullableString `json:"tag,omitempty"`
	// Specifies the tag id of the Antivirus Service.
	TagId NullableInt64 `json:"tagId,omitempty"`
}

// NewAntivirusService instantiates a new AntivirusService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAntivirusService(icapUri NullableString) *AntivirusService {
	this := AntivirusService{}
	this.IcapUri = icapUri
	return &this
}

// NewAntivirusServiceWithDefaults instantiates a new AntivirusService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAntivirusServiceWithDefaults() *AntivirusService {
	this := AntivirusService{}
	return &this
}

// GetIcapUri returns the IcapUri field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AntivirusService) GetIcapUri() string {
	if o == nil || o.IcapUri.Get() == nil {
		var ret string
		return ret
	}

	return *o.IcapUri.Get()
}

// GetIcapUriOk returns a tuple with the IcapUri field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusService) GetIcapUriOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IcapUri.Get(), o.IcapUri.IsSet()
}

// SetIcapUri sets field value
func (o *AntivirusService) SetIcapUri(v string) {
	o.IcapUri.Set(&v)
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusService) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusService) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *AntivirusService) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *AntivirusService) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *AntivirusService) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *AntivirusService) UnsetDescription() {
	o.Description.Unset()
}

// GetTag returns the Tag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusService) GetTag() string {
	if o == nil || o.Tag.Get() == nil {
		var ret string
		return ret
	}
	return *o.Tag.Get()
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusService) GetTagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Tag.Get(), o.Tag.IsSet()
}

// HasTag returns a boolean if a field has been set.
func (o *AntivirusService) HasTag() bool {
	if o != nil && o.Tag.IsSet() {
		return true
	}

	return false
}

// SetTag gets a reference to the given NullableString and assigns it to the Tag field.
func (o *AntivirusService) SetTag(v string) {
	o.Tag.Set(&v)
}
// SetTagNil sets the value for Tag to be an explicit nil
func (o *AntivirusService) SetTagNil() {
	o.Tag.Set(nil)
}

// UnsetTag ensures that no value is present for Tag, not even an explicit nil
func (o *AntivirusService) UnsetTag() {
	o.Tag.Unset()
}

// GetTagId returns the TagId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusService) GetTagId() int64 {
	if o == nil || o.TagId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TagId.Get()
}

// GetTagIdOk returns a tuple with the TagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusService) GetTagIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TagId.Get(), o.TagId.IsSet()
}

// HasTagId returns a boolean if a field has been set.
func (o *AntivirusService) HasTagId() bool {
	if o != nil && o.TagId.IsSet() {
		return true
	}

	return false
}

// SetTagId gets a reference to the given NullableInt64 and assigns it to the TagId field.
func (o *AntivirusService) SetTagId(v int64) {
	o.TagId.Set(&v)
}
// SetTagIdNil sets the value for TagId to be an explicit nil
func (o *AntivirusService) SetTagIdNil() {
	o.TagId.Set(nil)
}

// UnsetTagId ensures that no value is present for TagId, not even an explicit nil
func (o *AntivirusService) UnsetTagId() {
	o.TagId.Unset()
}

func (o AntivirusService) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["icapUri"] = o.IcapUri.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Tag.IsSet() {
		toSerialize["tag"] = o.Tag.Get()
	}
	if o.TagId.IsSet() {
		toSerialize["tagId"] = o.TagId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAntivirusService struct {
	value *AntivirusService
	isSet bool
}

func (v NullableAntivirusService) Get() *AntivirusService {
	return v.value
}

func (v *NullableAntivirusService) Set(val *AntivirusService) {
	v.value = val
	v.isSet = true
}

func (v NullableAntivirusService) IsSet() bool {
	return v.isSet
}

func (v *NullableAntivirusService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAntivirusService(val *AntivirusService) *NullableAntivirusService {
	return &NullableAntivirusService{value: val, isSet: true}
}

func (v NullableAntivirusService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAntivirusService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o AntivirusService) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}