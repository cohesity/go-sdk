/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// UpdateActiveDirectoryRequestAllOf struct for UpdateActiveDirectoryRequestAllOf
type UpdateActiveDirectoryRequestAllOf struct {
	// Specifies the params of a user with administrative privilege of this Active Directory. This field is mandatory if machine accounts are updated.
	ActiveDirectoryAdminParams NullableActiveDirectoryAdminParams `json:"activeDirectoryAdminParams,omitempty"`
	// Specifies if specified machine accounts should overwrite existing machine accounts.
	OverwriteMachineAccounts NullableBool `json:"overwriteMachineAccounts,omitempty"`
	// Specifies the params of the user id mapping info of an Active Directory.
	IdMappingParams NullableIdMappingParams `json:"idMappingParams,omitempty"`
	// Specifies level of transitive Active Directory trust domains to be used.
	TransitiveAdTrustLevelLimit NullableInt32 `json:"transitiveAdTrustLevelLimit,omitempty"`
}

// NewUpdateActiveDirectoryRequestAllOf instantiates a new UpdateActiveDirectoryRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateActiveDirectoryRequestAllOf() *UpdateActiveDirectoryRequestAllOf {
	this := UpdateActiveDirectoryRequestAllOf{}
	return &this
}

// NewUpdateActiveDirectoryRequestAllOfWithDefaults instantiates a new UpdateActiveDirectoryRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateActiveDirectoryRequestAllOfWithDefaults() *UpdateActiveDirectoryRequestAllOf {
	this := UpdateActiveDirectoryRequestAllOf{}
	return &this
}

// GetActiveDirectoryAdminParams returns the ActiveDirectoryAdminParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateActiveDirectoryRequestAllOf) GetActiveDirectoryAdminParams() ActiveDirectoryAdminParams {
	if o == nil || o.ActiveDirectoryAdminParams.Get() == nil {
		var ret ActiveDirectoryAdminParams
		return ret
	}
	return *o.ActiveDirectoryAdminParams.Get()
}

// GetActiveDirectoryAdminParamsOk returns a tuple with the ActiveDirectoryAdminParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateActiveDirectoryRequestAllOf) GetActiveDirectoryAdminParamsOk() (*ActiveDirectoryAdminParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ActiveDirectoryAdminParams.Get(), o.ActiveDirectoryAdminParams.IsSet()
}

// HasActiveDirectoryAdminParams returns a boolean if a field has been set.
func (o *UpdateActiveDirectoryRequestAllOf) HasActiveDirectoryAdminParams() bool {
	if o != nil && o.ActiveDirectoryAdminParams.IsSet() {
		return true
	}

	return false
}

// SetActiveDirectoryAdminParams gets a reference to the given NullableActiveDirectoryAdminParams and assigns it to the ActiveDirectoryAdminParams field.
func (o *UpdateActiveDirectoryRequestAllOf) SetActiveDirectoryAdminParams(v ActiveDirectoryAdminParams) {
	o.ActiveDirectoryAdminParams.Set(&v)
}
// SetActiveDirectoryAdminParamsNil sets the value for ActiveDirectoryAdminParams to be an explicit nil
func (o *UpdateActiveDirectoryRequestAllOf) SetActiveDirectoryAdminParamsNil() {
	o.ActiveDirectoryAdminParams.Set(nil)
}

// UnsetActiveDirectoryAdminParams ensures that no value is present for ActiveDirectoryAdminParams, not even an explicit nil
func (o *UpdateActiveDirectoryRequestAllOf) UnsetActiveDirectoryAdminParams() {
	o.ActiveDirectoryAdminParams.Unset()
}

// GetOverwriteMachineAccounts returns the OverwriteMachineAccounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateActiveDirectoryRequestAllOf) GetOverwriteMachineAccounts() bool {
	if o == nil || o.OverwriteMachineAccounts.Get() == nil {
		var ret bool
		return ret
	}
	return *o.OverwriteMachineAccounts.Get()
}

// GetOverwriteMachineAccountsOk returns a tuple with the OverwriteMachineAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateActiveDirectoryRequestAllOf) GetOverwriteMachineAccountsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OverwriteMachineAccounts.Get(), o.OverwriteMachineAccounts.IsSet()
}

// HasOverwriteMachineAccounts returns a boolean if a field has been set.
func (o *UpdateActiveDirectoryRequestAllOf) HasOverwriteMachineAccounts() bool {
	if o != nil && o.OverwriteMachineAccounts.IsSet() {
		return true
	}

	return false
}

// SetOverwriteMachineAccounts gets a reference to the given NullableBool and assigns it to the OverwriteMachineAccounts field.
func (o *UpdateActiveDirectoryRequestAllOf) SetOverwriteMachineAccounts(v bool) {
	o.OverwriteMachineAccounts.Set(&v)
}
// SetOverwriteMachineAccountsNil sets the value for OverwriteMachineAccounts to be an explicit nil
func (o *UpdateActiveDirectoryRequestAllOf) SetOverwriteMachineAccountsNil() {
	o.OverwriteMachineAccounts.Set(nil)
}

// UnsetOverwriteMachineAccounts ensures that no value is present for OverwriteMachineAccounts, not even an explicit nil
func (o *UpdateActiveDirectoryRequestAllOf) UnsetOverwriteMachineAccounts() {
	o.OverwriteMachineAccounts.Unset()
}

// GetIdMappingParams returns the IdMappingParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateActiveDirectoryRequestAllOf) GetIdMappingParams() IdMappingParams {
	if o == nil || o.IdMappingParams.Get() == nil {
		var ret IdMappingParams
		return ret
	}
	return *o.IdMappingParams.Get()
}

// GetIdMappingParamsOk returns a tuple with the IdMappingParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateActiveDirectoryRequestAllOf) GetIdMappingParamsOk() (*IdMappingParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IdMappingParams.Get(), o.IdMappingParams.IsSet()
}

// HasIdMappingParams returns a boolean if a field has been set.
func (o *UpdateActiveDirectoryRequestAllOf) HasIdMappingParams() bool {
	if o != nil && o.IdMappingParams.IsSet() {
		return true
	}

	return false
}

// SetIdMappingParams gets a reference to the given NullableIdMappingParams and assigns it to the IdMappingParams field.
func (o *UpdateActiveDirectoryRequestAllOf) SetIdMappingParams(v IdMappingParams) {
	o.IdMappingParams.Set(&v)
}
// SetIdMappingParamsNil sets the value for IdMappingParams to be an explicit nil
func (o *UpdateActiveDirectoryRequestAllOf) SetIdMappingParamsNil() {
	o.IdMappingParams.Set(nil)
}

// UnsetIdMappingParams ensures that no value is present for IdMappingParams, not even an explicit nil
func (o *UpdateActiveDirectoryRequestAllOf) UnsetIdMappingParams() {
	o.IdMappingParams.Unset()
}

// GetTransitiveAdTrustLevelLimit returns the TransitiveAdTrustLevelLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateActiveDirectoryRequestAllOf) GetTransitiveAdTrustLevelLimit() int32 {
	if o == nil || o.TransitiveAdTrustLevelLimit.Get() == nil {
		var ret int32
		return ret
	}
	return *o.TransitiveAdTrustLevelLimit.Get()
}

// GetTransitiveAdTrustLevelLimitOk returns a tuple with the TransitiveAdTrustLevelLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateActiveDirectoryRequestAllOf) GetTransitiveAdTrustLevelLimitOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TransitiveAdTrustLevelLimit.Get(), o.TransitiveAdTrustLevelLimit.IsSet()
}

// HasTransitiveAdTrustLevelLimit returns a boolean if a field has been set.
func (o *UpdateActiveDirectoryRequestAllOf) HasTransitiveAdTrustLevelLimit() bool {
	if o != nil && o.TransitiveAdTrustLevelLimit.IsSet() {
		return true
	}

	return false
}

// SetTransitiveAdTrustLevelLimit gets a reference to the given NullableInt32 and assigns it to the TransitiveAdTrustLevelLimit field.
func (o *UpdateActiveDirectoryRequestAllOf) SetTransitiveAdTrustLevelLimit(v int32) {
	o.TransitiveAdTrustLevelLimit.Set(&v)
}
// SetTransitiveAdTrustLevelLimitNil sets the value for TransitiveAdTrustLevelLimit to be an explicit nil
func (o *UpdateActiveDirectoryRequestAllOf) SetTransitiveAdTrustLevelLimitNil() {
	o.TransitiveAdTrustLevelLimit.Set(nil)
}

// UnsetTransitiveAdTrustLevelLimit ensures that no value is present for TransitiveAdTrustLevelLimit, not even an explicit nil
func (o *UpdateActiveDirectoryRequestAllOf) UnsetTransitiveAdTrustLevelLimit() {
	o.TransitiveAdTrustLevelLimit.Unset()
}

func (o UpdateActiveDirectoryRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActiveDirectoryAdminParams.IsSet() {
		toSerialize["activeDirectoryAdminParams"] = o.ActiveDirectoryAdminParams.Get()
	}
	if o.OverwriteMachineAccounts.IsSet() {
		toSerialize["overwriteMachineAccounts"] = o.OverwriteMachineAccounts.Get()
	}
	if o.IdMappingParams.IsSet() {
		toSerialize["idMappingParams"] = o.IdMappingParams.Get()
	}
	if o.TransitiveAdTrustLevelLimit.IsSet() {
		toSerialize["transitiveAdTrustLevelLimit"] = o.TransitiveAdTrustLevelLimit.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateActiveDirectoryRequestAllOf struct {
	value *UpdateActiveDirectoryRequestAllOf
	isSet bool
}

func (v NullableUpdateActiveDirectoryRequestAllOf) Get() *UpdateActiveDirectoryRequestAllOf {
	return v.value
}

func (v *NullableUpdateActiveDirectoryRequestAllOf) Set(val *UpdateActiveDirectoryRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateActiveDirectoryRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateActiveDirectoryRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateActiveDirectoryRequestAllOf(val *UpdateActiveDirectoryRequestAllOf) *NullableUpdateActiveDirectoryRequestAllOf {
	return &NullableUpdateActiveDirectoryRequestAllOf{value: val, isSet: true}
}

func (v NullableUpdateActiveDirectoryRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateActiveDirectoryRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o UpdateActiveDirectoryRequestAllOf) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}