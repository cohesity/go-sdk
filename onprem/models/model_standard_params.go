/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// StandardParams Specifies the parameters to register a commercial AWS
type StandardParams struct {
	// Specifies the Authentication method(IamArn/IamRole) used by api
	AuthMethodType NullableString `json:"authMethodType"`
	IamUserAwsCredentials *IamUserAwsCredentials `json:"iamUserAwsCredentials,omitempty"`
	IamRoleAwsCredentials *IamRoleAwsCredentials `json:"iamRoleAwsCredentials,omitempty"`
}

// NewStandardParams instantiates a new StandardParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStandardParams(authMethodType NullableString) *StandardParams {
	this := StandardParams{}
	this.AuthMethodType = authMethodType
	return &this
}

// NewStandardParamsWithDefaults instantiates a new StandardParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStandardParamsWithDefaults() *StandardParams {
	this := StandardParams{}
	return &this
}

// GetAuthMethodType returns the AuthMethodType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *StandardParams) GetAuthMethodType() string {
	if o == nil || o.AuthMethodType.Get() == nil {
		var ret string
		return ret
	}

	return *o.AuthMethodType.Get()
}

// GetAuthMethodTypeOk returns a tuple with the AuthMethodType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StandardParams) GetAuthMethodTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AuthMethodType.Get(), o.AuthMethodType.IsSet()
}

// SetAuthMethodType sets field value
func (o *StandardParams) SetAuthMethodType(v string) {
	o.AuthMethodType.Set(&v)
}

// GetIamUserAwsCredentials returns the IamUserAwsCredentials field value if set, zero value otherwise.
func (o *StandardParams) GetIamUserAwsCredentials() IamUserAwsCredentials {
	if o == nil || o.IamUserAwsCredentials == nil {
		var ret IamUserAwsCredentials
		return ret
	}
	return *o.IamUserAwsCredentials
}

// GetIamUserAwsCredentialsOk returns a tuple with the IamUserAwsCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandardParams) GetIamUserAwsCredentialsOk() (*IamUserAwsCredentials, bool) {
	if o == nil || o.IamUserAwsCredentials == nil {
		return nil, false
	}
	return o.IamUserAwsCredentials, true
}

// HasIamUserAwsCredentials returns a boolean if a field has been set.
func (o *StandardParams) HasIamUserAwsCredentials() bool {
	if o != nil && o.IamUserAwsCredentials != nil {
		return true
	}

	return false
}

// SetIamUserAwsCredentials gets a reference to the given IamUserAwsCredentials and assigns it to the IamUserAwsCredentials field.
func (o *StandardParams) SetIamUserAwsCredentials(v IamUserAwsCredentials) {
	o.IamUserAwsCredentials = &v
}

// GetIamRoleAwsCredentials returns the IamRoleAwsCredentials field value if set, zero value otherwise.
func (o *StandardParams) GetIamRoleAwsCredentials() IamRoleAwsCredentials {
	if o == nil || o.IamRoleAwsCredentials == nil {
		var ret IamRoleAwsCredentials
		return ret
	}
	return *o.IamRoleAwsCredentials
}

// GetIamRoleAwsCredentialsOk returns a tuple with the IamRoleAwsCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandardParams) GetIamRoleAwsCredentialsOk() (*IamRoleAwsCredentials, bool) {
	if o == nil || o.IamRoleAwsCredentials == nil {
		return nil, false
	}
	return o.IamRoleAwsCredentials, true
}

// HasIamRoleAwsCredentials returns a boolean if a field has been set.
func (o *StandardParams) HasIamRoleAwsCredentials() bool {
	if o != nil && o.IamRoleAwsCredentials != nil {
		return true
	}

	return false
}

// SetIamRoleAwsCredentials gets a reference to the given IamRoleAwsCredentials and assigns it to the IamRoleAwsCredentials field.
func (o *StandardParams) SetIamRoleAwsCredentials(v IamRoleAwsCredentials) {
	o.IamRoleAwsCredentials = &v
}

func (o StandardParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["authMethodType"] = o.AuthMethodType.Get()
	}
	if o.IamUserAwsCredentials != nil {
		toSerialize["iamUserAwsCredentials"] = o.IamUserAwsCredentials
	}
	if o.IamRoleAwsCredentials != nil {
		toSerialize["iamRoleAwsCredentials"] = o.IamRoleAwsCredentials
	}
	return json.Marshal(toSerialize)
}

type NullableStandardParams struct {
	value *StandardParams
	isSet bool
}

func (v NullableStandardParams) Get() *StandardParams {
	return v.value
}

func (v *NullableStandardParams) Set(val *StandardParams) {
	v.value = val
	v.isSet = true
}

func (v NullableStandardParams) IsSet() bool {
	return v.isSet
}

func (v *NullableStandardParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStandardParams(val *StandardParams) *NullableStandardParams {
	return &NullableStandardParams{value: val, isSet: true}
}

func (v NullableStandardParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStandardParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o StandardParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}