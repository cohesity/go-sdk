/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// UserIdMappingParams Specifies how the Unix and Windows users are mapped in an Active Directory.
type UserIdMappingParams struct {
	// Specifies the type of the mapping.
	Type string `json:"type"`
	// Specifies the params for Rfc2307 mapping type mapping.
	Rfc2307TypeParams NullableAdRfc2307TypeParams `json:"rfc2307TypeParams,omitempty"`
	// Specifies the params for Sfu30 mapping type mapping.
	Sfu30TypeParams NullableAdSfu30TypeParams `json:"sfu30TypeParams,omitempty"`
	// Specifies the params for LdapProvider mapping type mapping.
	LdapProviderTypeParams NullableAdLdapProviderTypeParams `json:"ldapProviderTypeParams,omitempty"`
	// Specifies the params for NisProvider mapping type mapping.
	NisProviderTypeParams NullableAdNisProviderTypeParams `json:"nisProviderTypeParams,omitempty"`
	// Specifies the params for Centrify mapping type mapping.
	CentrifyTypeParams NullableAdCentrifyTypeParams `json:"centrifyTypeParams,omitempty"`
	// Specifies the params for Fixed mapping type mapping.
	FixedTypeParams NullableAdFixedTypeParams `json:"fixedTypeParams,omitempty"`
	// Specifies the params for CustomAttributes mapping type mapping.
	CustomAttributesTypeParams NullableAdCustomAttributesTypeParams `json:"customAttributesTypeParams,omitempty"`
}

// NewUserIdMappingParams instantiates a new UserIdMappingParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserIdMappingParams(type_ string) *UserIdMappingParams {
	this := UserIdMappingParams{}
	this.Type = type_
	return &this
}

// NewUserIdMappingParamsWithDefaults instantiates a new UserIdMappingParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserIdMappingParamsWithDefaults() *UserIdMappingParams {
	this := UserIdMappingParams{}
	return &this
}

// GetType returns the Type field value
func (o *UserIdMappingParams) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *UserIdMappingParams) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *UserIdMappingParams) SetType(v string) {
	o.Type = v
}

// GetRfc2307TypeParams returns the Rfc2307TypeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserIdMappingParams) GetRfc2307TypeParams() AdRfc2307TypeParams {
	if o == nil || o.Rfc2307TypeParams.Get() == nil {
		var ret AdRfc2307TypeParams
		return ret
	}
	return *o.Rfc2307TypeParams.Get()
}

// GetRfc2307TypeParamsOk returns a tuple with the Rfc2307TypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserIdMappingParams) GetRfc2307TypeParamsOk() (*AdRfc2307TypeParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Rfc2307TypeParams.Get(), o.Rfc2307TypeParams.IsSet()
}

// HasRfc2307TypeParams returns a boolean if a field has been set.
func (o *UserIdMappingParams) HasRfc2307TypeParams() bool {
	if o != nil && o.Rfc2307TypeParams.IsSet() {
		return true
	}

	return false
}

// SetRfc2307TypeParams gets a reference to the given NullableAdRfc2307TypeParams and assigns it to the Rfc2307TypeParams field.
func (o *UserIdMappingParams) SetRfc2307TypeParams(v AdRfc2307TypeParams) {
	o.Rfc2307TypeParams.Set(&v)
}
// SetRfc2307TypeParamsNil sets the value for Rfc2307TypeParams to be an explicit nil
func (o *UserIdMappingParams) SetRfc2307TypeParamsNil() {
	o.Rfc2307TypeParams.Set(nil)
}

// UnsetRfc2307TypeParams ensures that no value is present for Rfc2307TypeParams, not even an explicit nil
func (o *UserIdMappingParams) UnsetRfc2307TypeParams() {
	o.Rfc2307TypeParams.Unset()
}

// GetSfu30TypeParams returns the Sfu30TypeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserIdMappingParams) GetSfu30TypeParams() AdSfu30TypeParams {
	if o == nil || o.Sfu30TypeParams.Get() == nil {
		var ret AdSfu30TypeParams
		return ret
	}
	return *o.Sfu30TypeParams.Get()
}

// GetSfu30TypeParamsOk returns a tuple with the Sfu30TypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserIdMappingParams) GetSfu30TypeParamsOk() (*AdSfu30TypeParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Sfu30TypeParams.Get(), o.Sfu30TypeParams.IsSet()
}

// HasSfu30TypeParams returns a boolean if a field has been set.
func (o *UserIdMappingParams) HasSfu30TypeParams() bool {
	if o != nil && o.Sfu30TypeParams.IsSet() {
		return true
	}

	return false
}

// SetSfu30TypeParams gets a reference to the given NullableAdSfu30TypeParams and assigns it to the Sfu30TypeParams field.
func (o *UserIdMappingParams) SetSfu30TypeParams(v AdSfu30TypeParams) {
	o.Sfu30TypeParams.Set(&v)
}
// SetSfu30TypeParamsNil sets the value for Sfu30TypeParams to be an explicit nil
func (o *UserIdMappingParams) SetSfu30TypeParamsNil() {
	o.Sfu30TypeParams.Set(nil)
}

// UnsetSfu30TypeParams ensures that no value is present for Sfu30TypeParams, not even an explicit nil
func (o *UserIdMappingParams) UnsetSfu30TypeParams() {
	o.Sfu30TypeParams.Unset()
}

// GetLdapProviderTypeParams returns the LdapProviderTypeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserIdMappingParams) GetLdapProviderTypeParams() AdLdapProviderTypeParams {
	if o == nil || o.LdapProviderTypeParams.Get() == nil {
		var ret AdLdapProviderTypeParams
		return ret
	}
	return *o.LdapProviderTypeParams.Get()
}

// GetLdapProviderTypeParamsOk returns a tuple with the LdapProviderTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserIdMappingParams) GetLdapProviderTypeParamsOk() (*AdLdapProviderTypeParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LdapProviderTypeParams.Get(), o.LdapProviderTypeParams.IsSet()
}

// HasLdapProviderTypeParams returns a boolean if a field has been set.
func (o *UserIdMappingParams) HasLdapProviderTypeParams() bool {
	if o != nil && o.LdapProviderTypeParams.IsSet() {
		return true
	}

	return false
}

// SetLdapProviderTypeParams gets a reference to the given NullableAdLdapProviderTypeParams and assigns it to the LdapProviderTypeParams field.
func (o *UserIdMappingParams) SetLdapProviderTypeParams(v AdLdapProviderTypeParams) {
	o.LdapProviderTypeParams.Set(&v)
}
// SetLdapProviderTypeParamsNil sets the value for LdapProviderTypeParams to be an explicit nil
func (o *UserIdMappingParams) SetLdapProviderTypeParamsNil() {
	o.LdapProviderTypeParams.Set(nil)
}

// UnsetLdapProviderTypeParams ensures that no value is present for LdapProviderTypeParams, not even an explicit nil
func (o *UserIdMappingParams) UnsetLdapProviderTypeParams() {
	o.LdapProviderTypeParams.Unset()
}

// GetNisProviderTypeParams returns the NisProviderTypeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserIdMappingParams) GetNisProviderTypeParams() AdNisProviderTypeParams {
	if o == nil || o.NisProviderTypeParams.Get() == nil {
		var ret AdNisProviderTypeParams
		return ret
	}
	return *o.NisProviderTypeParams.Get()
}

// GetNisProviderTypeParamsOk returns a tuple with the NisProviderTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserIdMappingParams) GetNisProviderTypeParamsOk() (*AdNisProviderTypeParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NisProviderTypeParams.Get(), o.NisProviderTypeParams.IsSet()
}

// HasNisProviderTypeParams returns a boolean if a field has been set.
func (o *UserIdMappingParams) HasNisProviderTypeParams() bool {
	if o != nil && o.NisProviderTypeParams.IsSet() {
		return true
	}

	return false
}

// SetNisProviderTypeParams gets a reference to the given NullableAdNisProviderTypeParams and assigns it to the NisProviderTypeParams field.
func (o *UserIdMappingParams) SetNisProviderTypeParams(v AdNisProviderTypeParams) {
	o.NisProviderTypeParams.Set(&v)
}
// SetNisProviderTypeParamsNil sets the value for NisProviderTypeParams to be an explicit nil
func (o *UserIdMappingParams) SetNisProviderTypeParamsNil() {
	o.NisProviderTypeParams.Set(nil)
}

// UnsetNisProviderTypeParams ensures that no value is present for NisProviderTypeParams, not even an explicit nil
func (o *UserIdMappingParams) UnsetNisProviderTypeParams() {
	o.NisProviderTypeParams.Unset()
}

// GetCentrifyTypeParams returns the CentrifyTypeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserIdMappingParams) GetCentrifyTypeParams() AdCentrifyTypeParams {
	if o == nil || o.CentrifyTypeParams.Get() == nil {
		var ret AdCentrifyTypeParams
		return ret
	}
	return *o.CentrifyTypeParams.Get()
}

// GetCentrifyTypeParamsOk returns a tuple with the CentrifyTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserIdMappingParams) GetCentrifyTypeParamsOk() (*AdCentrifyTypeParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CentrifyTypeParams.Get(), o.CentrifyTypeParams.IsSet()
}

// HasCentrifyTypeParams returns a boolean if a field has been set.
func (o *UserIdMappingParams) HasCentrifyTypeParams() bool {
	if o != nil && o.CentrifyTypeParams.IsSet() {
		return true
	}

	return false
}

// SetCentrifyTypeParams gets a reference to the given NullableAdCentrifyTypeParams and assigns it to the CentrifyTypeParams field.
func (o *UserIdMappingParams) SetCentrifyTypeParams(v AdCentrifyTypeParams) {
	o.CentrifyTypeParams.Set(&v)
}
// SetCentrifyTypeParamsNil sets the value for CentrifyTypeParams to be an explicit nil
func (o *UserIdMappingParams) SetCentrifyTypeParamsNil() {
	o.CentrifyTypeParams.Set(nil)
}

// UnsetCentrifyTypeParams ensures that no value is present for CentrifyTypeParams, not even an explicit nil
func (o *UserIdMappingParams) UnsetCentrifyTypeParams() {
	o.CentrifyTypeParams.Unset()
}

// GetFixedTypeParams returns the FixedTypeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserIdMappingParams) GetFixedTypeParams() AdFixedTypeParams {
	if o == nil || o.FixedTypeParams.Get() == nil {
		var ret AdFixedTypeParams
		return ret
	}
	return *o.FixedTypeParams.Get()
}

// GetFixedTypeParamsOk returns a tuple with the FixedTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserIdMappingParams) GetFixedTypeParamsOk() (*AdFixedTypeParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FixedTypeParams.Get(), o.FixedTypeParams.IsSet()
}

// HasFixedTypeParams returns a boolean if a field has been set.
func (o *UserIdMappingParams) HasFixedTypeParams() bool {
	if o != nil && o.FixedTypeParams.IsSet() {
		return true
	}

	return false
}

// SetFixedTypeParams gets a reference to the given NullableAdFixedTypeParams and assigns it to the FixedTypeParams field.
func (o *UserIdMappingParams) SetFixedTypeParams(v AdFixedTypeParams) {
	o.FixedTypeParams.Set(&v)
}
// SetFixedTypeParamsNil sets the value for FixedTypeParams to be an explicit nil
func (o *UserIdMappingParams) SetFixedTypeParamsNil() {
	o.FixedTypeParams.Set(nil)
}

// UnsetFixedTypeParams ensures that no value is present for FixedTypeParams, not even an explicit nil
func (o *UserIdMappingParams) UnsetFixedTypeParams() {
	o.FixedTypeParams.Unset()
}

// GetCustomAttributesTypeParams returns the CustomAttributesTypeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserIdMappingParams) GetCustomAttributesTypeParams() AdCustomAttributesTypeParams {
	if o == nil || o.CustomAttributesTypeParams.Get() == nil {
		var ret AdCustomAttributesTypeParams
		return ret
	}
	return *o.CustomAttributesTypeParams.Get()
}

// GetCustomAttributesTypeParamsOk returns a tuple with the CustomAttributesTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserIdMappingParams) GetCustomAttributesTypeParamsOk() (*AdCustomAttributesTypeParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CustomAttributesTypeParams.Get(), o.CustomAttributesTypeParams.IsSet()
}

// HasCustomAttributesTypeParams returns a boolean if a field has been set.
func (o *UserIdMappingParams) HasCustomAttributesTypeParams() bool {
	if o != nil && o.CustomAttributesTypeParams.IsSet() {
		return true
	}

	return false
}

// SetCustomAttributesTypeParams gets a reference to the given NullableAdCustomAttributesTypeParams and assigns it to the CustomAttributesTypeParams field.
func (o *UserIdMappingParams) SetCustomAttributesTypeParams(v AdCustomAttributesTypeParams) {
	o.CustomAttributesTypeParams.Set(&v)
}
// SetCustomAttributesTypeParamsNil sets the value for CustomAttributesTypeParams to be an explicit nil
func (o *UserIdMappingParams) SetCustomAttributesTypeParamsNil() {
	o.CustomAttributesTypeParams.Set(nil)
}

// UnsetCustomAttributesTypeParams ensures that no value is present for CustomAttributesTypeParams, not even an explicit nil
func (o *UserIdMappingParams) UnsetCustomAttributesTypeParams() {
	o.CustomAttributesTypeParams.Unset()
}

func (o UserIdMappingParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.Rfc2307TypeParams.IsSet() {
		toSerialize["rfc2307TypeParams"] = o.Rfc2307TypeParams.Get()
	}
	if o.Sfu30TypeParams.IsSet() {
		toSerialize["sfu30TypeParams"] = o.Sfu30TypeParams.Get()
	}
	if o.LdapProviderTypeParams.IsSet() {
		toSerialize["ldapProviderTypeParams"] = o.LdapProviderTypeParams.Get()
	}
	if o.NisProviderTypeParams.IsSet() {
		toSerialize["nisProviderTypeParams"] = o.NisProviderTypeParams.Get()
	}
	if o.CentrifyTypeParams.IsSet() {
		toSerialize["centrifyTypeParams"] = o.CentrifyTypeParams.Get()
	}
	if o.FixedTypeParams.IsSet() {
		toSerialize["fixedTypeParams"] = o.FixedTypeParams.Get()
	}
	if o.CustomAttributesTypeParams.IsSet() {
		toSerialize["customAttributesTypeParams"] = o.CustomAttributesTypeParams.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUserIdMappingParams struct {
	value *UserIdMappingParams
	isSet bool
}

func (v NullableUserIdMappingParams) Get() *UserIdMappingParams {
	return v.value
}

func (v *NullableUserIdMappingParams) Set(val *UserIdMappingParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUserIdMappingParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUserIdMappingParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserIdMappingParams(val *UserIdMappingParams) *NullableUserIdMappingParams {
	return &NullableUserIdMappingParams{value: val, isSet: true}
}

func (v NullableUserIdMappingParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserIdMappingParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o UserIdMappingParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}