/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// HeliosMonthScheduleAllOf struct for HeliosMonthScheduleAllOf
type HeliosMonthScheduleAllOf struct {
	// Specifies the week of the month (such as 'Third') in a Monthly Schedule specified by unit field as 'Months'. <br>This field is used in combination with 'dayOfWeek' to define the day in the month to start the Protection Group Run. <br> Example: if 'weekOfMonth' is set to 'Third' and day is set to 'Monday', a backup is performed on the third Monday of every month.
	WeekOfMonth NullableString `json:"weekOfMonth,omitempty"`
}

// NewHeliosMonthScheduleAllOf instantiates a new HeliosMonthScheduleAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosMonthScheduleAllOf() *HeliosMonthScheduleAllOf {
	this := HeliosMonthScheduleAllOf{}
	return &this
}

// NewHeliosMonthScheduleAllOfWithDefaults instantiates a new HeliosMonthScheduleAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosMonthScheduleAllOfWithDefaults() *HeliosMonthScheduleAllOf {
	this := HeliosMonthScheduleAllOf{}
	return &this
}

// GetWeekOfMonth returns the WeekOfMonth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosMonthScheduleAllOf) GetWeekOfMonth() string {
	if o == nil || o.WeekOfMonth.Get() == nil {
		var ret string
		return ret
	}
	return *o.WeekOfMonth.Get()
}

// GetWeekOfMonthOk returns a tuple with the WeekOfMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosMonthScheduleAllOf) GetWeekOfMonthOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WeekOfMonth.Get(), o.WeekOfMonth.IsSet()
}

// HasWeekOfMonth returns a boolean if a field has been set.
func (o *HeliosMonthScheduleAllOf) HasWeekOfMonth() bool {
	if o != nil && o.WeekOfMonth.IsSet() {
		return true
	}

	return false
}

// SetWeekOfMonth gets a reference to the given NullableString and assigns it to the WeekOfMonth field.
func (o *HeliosMonthScheduleAllOf) SetWeekOfMonth(v string) {
	o.WeekOfMonth.Set(&v)
}
// SetWeekOfMonthNil sets the value for WeekOfMonth to be an explicit nil
func (o *HeliosMonthScheduleAllOf) SetWeekOfMonthNil() {
	o.WeekOfMonth.Set(nil)
}

// UnsetWeekOfMonth ensures that no value is present for WeekOfMonth, not even an explicit nil
func (o *HeliosMonthScheduleAllOf) UnsetWeekOfMonth() {
	o.WeekOfMonth.Unset()
}

func (o HeliosMonthScheduleAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WeekOfMonth.IsSet() {
		toSerialize["weekOfMonth"] = o.WeekOfMonth.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableHeliosMonthScheduleAllOf struct {
	value *HeliosMonthScheduleAllOf
	isSet bool
}

func (v NullableHeliosMonthScheduleAllOf) Get() *HeliosMonthScheduleAllOf {
	return v.value
}

func (v *NullableHeliosMonthScheduleAllOf) Set(val *HeliosMonthScheduleAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosMonthScheduleAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosMonthScheduleAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosMonthScheduleAllOf(val *HeliosMonthScheduleAllOf) *NullableHeliosMonthScheduleAllOf {
	return &NullableHeliosMonthScheduleAllOf{value: val, isSet: true}
}

func (v NullableHeliosMonthScheduleAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosMonthScheduleAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o HeliosMonthScheduleAllOf) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}