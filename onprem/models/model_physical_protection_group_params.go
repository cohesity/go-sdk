/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// PhysicalProtectionGroupParams Specifies the parameters specific to Physical Protection Group.
type PhysicalProtectionGroupParams struct {
	// Specifies the Physical Protection Group type.
	ProtectionType string `json:"protectionType"`
	VolumeProtectionTypeParams NullablePhysicalVolumeProtectionGroupParams `json:"volumeProtectionTypeParams,omitempty"`
	FileProtectionTypeParams NullablePhysicalFileProtectionGroupParams `json:"fileProtectionTypeParams,omitempty"`
}

// NewPhysicalProtectionGroupParams instantiates a new PhysicalProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhysicalProtectionGroupParams(protectionType string) *PhysicalProtectionGroupParams {
	this := PhysicalProtectionGroupParams{}
	this.ProtectionType = protectionType
	return &this
}

// NewPhysicalProtectionGroupParamsWithDefaults instantiates a new PhysicalProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhysicalProtectionGroupParamsWithDefaults() *PhysicalProtectionGroupParams {
	this := PhysicalProtectionGroupParams{}
	return &this
}

// GetProtectionType returns the ProtectionType field value
func (o *PhysicalProtectionGroupParams) GetProtectionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProtectionType
}

// GetProtectionTypeOk returns a tuple with the ProtectionType field value
// and a boolean to check if the value has been set.
func (o *PhysicalProtectionGroupParams) GetProtectionTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProtectionType, true
}

// SetProtectionType sets field value
func (o *PhysicalProtectionGroupParams) SetProtectionType(v string) {
	o.ProtectionType = v
}

// GetVolumeProtectionTypeParams returns the VolumeProtectionTypeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhysicalProtectionGroupParams) GetVolumeProtectionTypeParams() PhysicalVolumeProtectionGroupParams {
	if o == nil || o.VolumeProtectionTypeParams.Get() == nil {
		var ret PhysicalVolumeProtectionGroupParams
		return ret
	}
	return *o.VolumeProtectionTypeParams.Get()
}

// GetVolumeProtectionTypeParamsOk returns a tuple with the VolumeProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalProtectionGroupParams) GetVolumeProtectionTypeParamsOk() (*PhysicalVolumeProtectionGroupParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VolumeProtectionTypeParams.Get(), o.VolumeProtectionTypeParams.IsSet()
}

// HasVolumeProtectionTypeParams returns a boolean if a field has been set.
func (o *PhysicalProtectionGroupParams) HasVolumeProtectionTypeParams() bool {
	if o != nil && o.VolumeProtectionTypeParams.IsSet() {
		return true
	}

	return false
}

// SetVolumeProtectionTypeParams gets a reference to the given NullablePhysicalVolumeProtectionGroupParams and assigns it to the VolumeProtectionTypeParams field.
func (o *PhysicalProtectionGroupParams) SetVolumeProtectionTypeParams(v PhysicalVolumeProtectionGroupParams) {
	o.VolumeProtectionTypeParams.Set(&v)
}
// SetVolumeProtectionTypeParamsNil sets the value for VolumeProtectionTypeParams to be an explicit nil
func (o *PhysicalProtectionGroupParams) SetVolumeProtectionTypeParamsNil() {
	o.VolumeProtectionTypeParams.Set(nil)
}

// UnsetVolumeProtectionTypeParams ensures that no value is present for VolumeProtectionTypeParams, not even an explicit nil
func (o *PhysicalProtectionGroupParams) UnsetVolumeProtectionTypeParams() {
	o.VolumeProtectionTypeParams.Unset()
}

// GetFileProtectionTypeParams returns the FileProtectionTypeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhysicalProtectionGroupParams) GetFileProtectionTypeParams() PhysicalFileProtectionGroupParams {
	if o == nil || o.FileProtectionTypeParams.Get() == nil {
		var ret PhysicalFileProtectionGroupParams
		return ret
	}
	return *o.FileProtectionTypeParams.Get()
}

// GetFileProtectionTypeParamsOk returns a tuple with the FileProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalProtectionGroupParams) GetFileProtectionTypeParamsOk() (*PhysicalFileProtectionGroupParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FileProtectionTypeParams.Get(), o.FileProtectionTypeParams.IsSet()
}

// HasFileProtectionTypeParams returns a boolean if a field has been set.
func (o *PhysicalProtectionGroupParams) HasFileProtectionTypeParams() bool {
	if o != nil && o.FileProtectionTypeParams.IsSet() {
		return true
	}

	return false
}

// SetFileProtectionTypeParams gets a reference to the given NullablePhysicalFileProtectionGroupParams and assigns it to the FileProtectionTypeParams field.
func (o *PhysicalProtectionGroupParams) SetFileProtectionTypeParams(v PhysicalFileProtectionGroupParams) {
	o.FileProtectionTypeParams.Set(&v)
}
// SetFileProtectionTypeParamsNil sets the value for FileProtectionTypeParams to be an explicit nil
func (o *PhysicalProtectionGroupParams) SetFileProtectionTypeParamsNil() {
	o.FileProtectionTypeParams.Set(nil)
}

// UnsetFileProtectionTypeParams ensures that no value is present for FileProtectionTypeParams, not even an explicit nil
func (o *PhysicalProtectionGroupParams) UnsetFileProtectionTypeParams() {
	o.FileProtectionTypeParams.Unset()
}

func (o PhysicalProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["protectionType"] = o.ProtectionType
	}
	if o.VolumeProtectionTypeParams.IsSet() {
		toSerialize["volumeProtectionTypeParams"] = o.VolumeProtectionTypeParams.Get()
	}
	if o.FileProtectionTypeParams.IsSet() {
		toSerialize["fileProtectionTypeParams"] = o.FileProtectionTypeParams.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePhysicalProtectionGroupParams struct {
	value *PhysicalProtectionGroupParams
	isSet bool
}

func (v NullablePhysicalProtectionGroupParams) Get() *PhysicalProtectionGroupParams {
	return v.value
}

func (v *NullablePhysicalProtectionGroupParams) Set(val *PhysicalProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullablePhysicalProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullablePhysicalProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhysicalProtectionGroupParams(val *PhysicalProtectionGroupParams) *NullablePhysicalProtectionGroupParams {
	return &NullablePhysicalProtectionGroupParams{value: val, isSet: true}
}

func (v NullablePhysicalProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhysicalProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o PhysicalProtectionGroupParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}