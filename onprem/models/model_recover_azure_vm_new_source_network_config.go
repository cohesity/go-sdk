/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// RecoverAzureVmNewSourceNetworkConfig Specifies the network config parameters to be applied for Azure VMs if recovering to new Source.
type RecoverAzureVmNewSourceNetworkConfig struct {
	// Specifies the Virtual Network.
	VirtualNetwork NullableRecoveryObjectIdentifier `json:"virtualNetwork"`
	// Specifies the subnet within the above virtual network.
	Subnet NullableRecoveryObjectIdentifier `json:"subnet"`
	// Specifies id of the resource group for the selected virtual network.
	NetworkResourceGroup NullableRecoveryObjectIdentifier `json:"networkResourceGroup,omitempty"`
}

// NewRecoverAzureVmNewSourceNetworkConfig instantiates a new RecoverAzureVmNewSourceNetworkConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverAzureVmNewSourceNetworkConfig(virtualNetwork NullableRecoveryObjectIdentifier, subnet NullableRecoveryObjectIdentifier) *RecoverAzureVmNewSourceNetworkConfig {
	this := RecoverAzureVmNewSourceNetworkConfig{}
	this.VirtualNetwork = virtualNetwork
	this.Subnet = subnet
	return &this
}

// NewRecoverAzureVmNewSourceNetworkConfigWithDefaults instantiates a new RecoverAzureVmNewSourceNetworkConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverAzureVmNewSourceNetworkConfigWithDefaults() *RecoverAzureVmNewSourceNetworkConfig {
	this := RecoverAzureVmNewSourceNetworkConfig{}
	return &this
}

// GetVirtualNetwork returns the VirtualNetwork field value
// If the value is explicit nil, the zero value for RecoveryObjectIdentifier will be returned
func (o *RecoverAzureVmNewSourceNetworkConfig) GetVirtualNetwork() RecoveryObjectIdentifier {
	if o == nil || o.VirtualNetwork.Get() == nil {
		var ret RecoveryObjectIdentifier
		return ret
	}

	return *o.VirtualNetwork.Get()
}

// GetVirtualNetworkOk returns a tuple with the VirtualNetwork field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAzureVmNewSourceNetworkConfig) GetVirtualNetworkOk() (*RecoveryObjectIdentifier, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VirtualNetwork.Get(), o.VirtualNetwork.IsSet()
}

// SetVirtualNetwork sets field value
func (o *RecoverAzureVmNewSourceNetworkConfig) SetVirtualNetwork(v RecoveryObjectIdentifier) {
	o.VirtualNetwork.Set(&v)
}

// GetSubnet returns the Subnet field value
// If the value is explicit nil, the zero value for RecoveryObjectIdentifier will be returned
func (o *RecoverAzureVmNewSourceNetworkConfig) GetSubnet() RecoveryObjectIdentifier {
	if o == nil || o.Subnet.Get() == nil {
		var ret RecoveryObjectIdentifier
		return ret
	}

	return *o.Subnet.Get()
}

// GetSubnetOk returns a tuple with the Subnet field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAzureVmNewSourceNetworkConfig) GetSubnetOk() (*RecoveryObjectIdentifier, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Subnet.Get(), o.Subnet.IsSet()
}

// SetSubnet sets field value
func (o *RecoverAzureVmNewSourceNetworkConfig) SetSubnet(v RecoveryObjectIdentifier) {
	o.Subnet.Set(&v)
}

// GetNetworkResourceGroup returns the NetworkResourceGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverAzureVmNewSourceNetworkConfig) GetNetworkResourceGroup() RecoveryObjectIdentifier {
	if o == nil || o.NetworkResourceGroup.Get() == nil {
		var ret RecoveryObjectIdentifier
		return ret
	}
	return *o.NetworkResourceGroup.Get()
}

// GetNetworkResourceGroupOk returns a tuple with the NetworkResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAzureVmNewSourceNetworkConfig) GetNetworkResourceGroupOk() (*RecoveryObjectIdentifier, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkResourceGroup.Get(), o.NetworkResourceGroup.IsSet()
}

// HasNetworkResourceGroup returns a boolean if a field has been set.
func (o *RecoverAzureVmNewSourceNetworkConfig) HasNetworkResourceGroup() bool {
	if o != nil && o.NetworkResourceGroup.IsSet() {
		return true
	}

	return false
}

// SetNetworkResourceGroup gets a reference to the given NullableRecoveryObjectIdentifier and assigns it to the NetworkResourceGroup field.
func (o *RecoverAzureVmNewSourceNetworkConfig) SetNetworkResourceGroup(v RecoveryObjectIdentifier) {
	o.NetworkResourceGroup.Set(&v)
}
// SetNetworkResourceGroupNil sets the value for NetworkResourceGroup to be an explicit nil
func (o *RecoverAzureVmNewSourceNetworkConfig) SetNetworkResourceGroupNil() {
	o.NetworkResourceGroup.Set(nil)
}

// UnsetNetworkResourceGroup ensures that no value is present for NetworkResourceGroup, not even an explicit nil
func (o *RecoverAzureVmNewSourceNetworkConfig) UnsetNetworkResourceGroup() {
	o.NetworkResourceGroup.Unset()
}

func (o RecoverAzureVmNewSourceNetworkConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["virtualNetwork"] = o.VirtualNetwork.Get()
	}
	if true {
		toSerialize["subnet"] = o.Subnet.Get()
	}
	if o.NetworkResourceGroup.IsSet() {
		toSerialize["networkResourceGroup"] = o.NetworkResourceGroup.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverAzureVmNewSourceNetworkConfig struct {
	value *RecoverAzureVmNewSourceNetworkConfig
	isSet bool
}

func (v NullableRecoverAzureVmNewSourceNetworkConfig) Get() *RecoverAzureVmNewSourceNetworkConfig {
	return v.value
}

func (v *NullableRecoverAzureVmNewSourceNetworkConfig) Set(val *RecoverAzureVmNewSourceNetworkConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverAzureVmNewSourceNetworkConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverAzureVmNewSourceNetworkConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverAzureVmNewSourceNetworkConfig(val *RecoverAzureVmNewSourceNetworkConfig) *NullableRecoverAzureVmNewSourceNetworkConfig {
	return &NullableRecoverAzureVmNewSourceNetworkConfig{value: val, isSet: true}
}

func (v NullableRecoverAzureVmNewSourceNetworkConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverAzureVmNewSourceNetworkConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o RecoverAzureVmNewSourceNetworkConfig) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}