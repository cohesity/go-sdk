/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// SearchEmailRequestParamsAllOf struct for SearchEmailRequestParamsAllOf
type SearchEmailRequestParamsAllOf struct {
	O365Params *O365SearchEmailsRequestParams `json:"o365Params,omitempty"`
}

// NewSearchEmailRequestParamsAllOf instantiates a new SearchEmailRequestParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchEmailRequestParamsAllOf() *SearchEmailRequestParamsAllOf {
	this := SearchEmailRequestParamsAllOf{}
	return &this
}

// NewSearchEmailRequestParamsAllOfWithDefaults instantiates a new SearchEmailRequestParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchEmailRequestParamsAllOfWithDefaults() *SearchEmailRequestParamsAllOf {
	this := SearchEmailRequestParamsAllOf{}
	return &this
}

// GetO365Params returns the O365Params field value if set, zero value otherwise.
func (o *SearchEmailRequestParamsAllOf) GetO365Params() O365SearchEmailsRequestParams {
	if o == nil || o.O365Params == nil {
		var ret O365SearchEmailsRequestParams
		return ret
	}
	return *o.O365Params
}

// GetO365ParamsOk returns a tuple with the O365Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchEmailRequestParamsAllOf) GetO365ParamsOk() (*O365SearchEmailsRequestParams, bool) {
	if o == nil || o.O365Params == nil {
		return nil, false
	}
	return o.O365Params, true
}

// HasO365Params returns a boolean if a field has been set.
func (o *SearchEmailRequestParamsAllOf) HasO365Params() bool {
	if o != nil && o.O365Params != nil {
		return true
	}

	return false
}

// SetO365Params gets a reference to the given O365SearchEmailsRequestParams and assigns it to the O365Params field.
func (o *SearchEmailRequestParamsAllOf) SetO365Params(v O365SearchEmailsRequestParams) {
	o.O365Params = &v
}

func (o SearchEmailRequestParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.O365Params != nil {
		toSerialize["o365Params"] = o.O365Params
	}
	return json.Marshal(toSerialize)
}

type NullableSearchEmailRequestParamsAllOf struct {
	value *SearchEmailRequestParamsAllOf
	isSet bool
}

func (v NullableSearchEmailRequestParamsAllOf) Get() *SearchEmailRequestParamsAllOf {
	return v.value
}

func (v *NullableSearchEmailRequestParamsAllOf) Set(val *SearchEmailRequestParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchEmailRequestParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchEmailRequestParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchEmailRequestParamsAllOf(val *SearchEmailRequestParamsAllOf) *NullableSearchEmailRequestParamsAllOf {
	return &NullableSearchEmailRequestParamsAllOf{value: val, isSet: true}
}

func (v NullableSearchEmailRequestParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchEmailRequestParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o SearchEmailRequestParamsAllOf) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}