/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// ADClassConstants AD Class Constants
type ADClassConstants struct {
	// AD Class Constants
	AdClassConstants *string `json:"adClassConstants,omitempty"`
}

// NewADClassConstants instantiates a new ADClassConstants object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADClassConstants() *ADClassConstants {
	this := ADClassConstants{}
	return &this
}

// NewADClassConstantsWithDefaults instantiates a new ADClassConstants object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADClassConstantsWithDefaults() *ADClassConstants {
	this := ADClassConstants{}
	return &this
}

// GetAdClassConstants returns the AdClassConstants field value if set, zero value otherwise.
func (o *ADClassConstants) GetAdClassConstants() string {
	if o == nil || o.AdClassConstants == nil {
		var ret string
		return ret
	}
	return *o.AdClassConstants
}

// GetAdClassConstantsOk returns a tuple with the AdClassConstants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADClassConstants) GetAdClassConstantsOk() (*string, bool) {
	if o == nil || o.AdClassConstants == nil {
		return nil, false
	}
	return o.AdClassConstants, true
}

// HasAdClassConstants returns a boolean if a field has been set.
func (o *ADClassConstants) HasAdClassConstants() bool {
	if o != nil && o.AdClassConstants != nil {
		return true
	}

	return false
}

// SetAdClassConstants gets a reference to the given string and assigns it to the AdClassConstants field.
func (o *ADClassConstants) SetAdClassConstants(v string) {
	o.AdClassConstants = &v
}

func (o ADClassConstants) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdClassConstants != nil {
		toSerialize["adClassConstants"] = o.AdClassConstants
	}
	return json.Marshal(toSerialize)
}

type NullableADClassConstants struct {
	value *ADClassConstants
	isSet bool
}

func (v NullableADClassConstants) Get() *ADClassConstants {
	return v.value
}

func (v *NullableADClassConstants) Set(val *ADClassConstants) {
	v.value = val
	v.isSet = true
}

func (v NullableADClassConstants) IsSet() bool {
	return v.isSet
}

func (v *NullableADClassConstants) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADClassConstants(val *ADClassConstants) *NullableADClassConstants {
	return &NullableADClassConstants{value: val, isSet: true}
}

func (v NullableADClassConstants) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADClassConstants) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o ADClassConstants) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}