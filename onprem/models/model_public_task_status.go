/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// PublicTaskStatus Public Task Status
type PublicTaskStatus struct {
	// Specifies the public task status.
	PublicTaskStatus *string `json:"publicTaskStatus,omitempty"`
}

// NewPublicTaskStatus instantiates a new PublicTaskStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicTaskStatus() *PublicTaskStatus {
	this := PublicTaskStatus{}
	return &this
}

// NewPublicTaskStatusWithDefaults instantiates a new PublicTaskStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicTaskStatusWithDefaults() *PublicTaskStatus {
	this := PublicTaskStatus{}
	return &this
}

// GetPublicTaskStatus returns the PublicTaskStatus field value if set, zero value otherwise.
func (o *PublicTaskStatus) GetPublicTaskStatus() string {
	if o == nil || o.PublicTaskStatus == nil {
		var ret string
		return ret
	}
	return *o.PublicTaskStatus
}

// GetPublicTaskStatusOk returns a tuple with the PublicTaskStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicTaskStatus) GetPublicTaskStatusOk() (*string, bool) {
	if o == nil || o.PublicTaskStatus == nil {
		return nil, false
	}
	return o.PublicTaskStatus, true
}

// HasPublicTaskStatus returns a boolean if a field has been set.
func (o *PublicTaskStatus) HasPublicTaskStatus() bool {
	if o != nil && o.PublicTaskStatus != nil {
		return true
	}

	return false
}

// SetPublicTaskStatus gets a reference to the given string and assigns it to the PublicTaskStatus field.
func (o *PublicTaskStatus) SetPublicTaskStatus(v string) {
	o.PublicTaskStatus = &v
}

func (o PublicTaskStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PublicTaskStatus != nil {
		toSerialize["publicTaskStatus"] = o.PublicTaskStatus
	}
	return json.Marshal(toSerialize)
}

type NullablePublicTaskStatus struct {
	value *PublicTaskStatus
	isSet bool
}

func (v NullablePublicTaskStatus) Get() *PublicTaskStatus {
	return v.value
}

func (v *NullablePublicTaskStatus) Set(val *PublicTaskStatus) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicTaskStatus) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicTaskStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicTaskStatus(val *PublicTaskStatus) *NullablePublicTaskStatus {
	return &NullablePublicTaskStatus{value: val, isSet: true}
}

func (v NullablePublicTaskStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicTaskStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o PublicTaskStatus) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}