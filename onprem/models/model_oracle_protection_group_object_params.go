/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// OracleProtectionGroupObjectParams Specifies the object identifier to create Oracle Protection Group.
type OracleProtectionGroupObjectParams struct {
	// Specifies the id of the host on which databases are hosted.
	SourceId NullableInt64 `json:"sourceId"`
	// Specifies the name of the host on which databases are hosted.
	SourceName NullableString `json:"sourceName,omitempty"`
	// Specifies the properties of the Oracle databases.
	DbParams []OracleProtectionGroupDbParams `json:"dbParams,omitempty"`
}

// NewOracleProtectionGroupObjectParams instantiates a new OracleProtectionGroupObjectParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOracleProtectionGroupObjectParams(sourceId NullableInt64) *OracleProtectionGroupObjectParams {
	this := OracleProtectionGroupObjectParams{}
	this.SourceId = sourceId
	return &this
}

// NewOracleProtectionGroupObjectParamsWithDefaults instantiates a new OracleProtectionGroupObjectParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOracleProtectionGroupObjectParamsWithDefaults() *OracleProtectionGroupObjectParams {
	this := OracleProtectionGroupObjectParams{}
	return &this
}

// GetSourceId returns the SourceId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *OracleProtectionGroupObjectParams) GetSourceId() int64 {
	if o == nil || o.SourceId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OracleProtectionGroupObjectParams) GetSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// SetSourceId sets field value
func (o *OracleProtectionGroupObjectParams) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}

// GetSourceName returns the SourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OracleProtectionGroupObjectParams) GetSourceName() string {
	if o == nil || o.SourceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceName.Get()
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OracleProtectionGroupObjectParams) GetSourceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceName.Get(), o.SourceName.IsSet()
}

// HasSourceName returns a boolean if a field has been set.
func (o *OracleProtectionGroupObjectParams) HasSourceName() bool {
	if o != nil && o.SourceName.IsSet() {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given NullableString and assigns it to the SourceName field.
func (o *OracleProtectionGroupObjectParams) SetSourceName(v string) {
	o.SourceName.Set(&v)
}
// SetSourceNameNil sets the value for SourceName to be an explicit nil
func (o *OracleProtectionGroupObjectParams) SetSourceNameNil() {
	o.SourceName.Set(nil)
}

// UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil
func (o *OracleProtectionGroupObjectParams) UnsetSourceName() {
	o.SourceName.Unset()
}

// GetDbParams returns the DbParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OracleProtectionGroupObjectParams) GetDbParams() []OracleProtectionGroupDbParams {
	if o == nil  {
		var ret []OracleProtectionGroupDbParams
		return ret
	}
	return o.DbParams
}

// GetDbParamsOk returns a tuple with the DbParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OracleProtectionGroupObjectParams) GetDbParamsOk() (*[]OracleProtectionGroupDbParams, bool) {
	if o == nil || o.DbParams == nil {
		return nil, false
	}
	return &o.DbParams, true
}

// HasDbParams returns a boolean if a field has been set.
func (o *OracleProtectionGroupObjectParams) HasDbParams() bool {
	if o != nil && o.DbParams != nil {
		return true
	}

	return false
}

// SetDbParams gets a reference to the given []OracleProtectionGroupDbParams and assigns it to the DbParams field.
func (o *OracleProtectionGroupObjectParams) SetDbParams(v []OracleProtectionGroupDbParams) {
	o.DbParams = v
}

func (o OracleProtectionGroupObjectParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if o.SourceName.IsSet() {
		toSerialize["sourceName"] = o.SourceName.Get()
	}
	if o.DbParams != nil {
		toSerialize["dbParams"] = o.DbParams
	}
	return json.Marshal(toSerialize)
}

type NullableOracleProtectionGroupObjectParams struct {
	value *OracleProtectionGroupObjectParams
	isSet bool
}

func (v NullableOracleProtectionGroupObjectParams) Get() *OracleProtectionGroupObjectParams {
	return v.value
}

func (v *NullableOracleProtectionGroupObjectParams) Set(val *OracleProtectionGroupObjectParams) {
	v.value = val
	v.isSet = true
}

func (v NullableOracleProtectionGroupObjectParams) IsSet() bool {
	return v.isSet
}

func (v *NullableOracleProtectionGroupObjectParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOracleProtectionGroupObjectParams(val *OracleProtectionGroupObjectParams) *NullableOracleProtectionGroupObjectParams {
	return &NullableOracleProtectionGroupObjectParams{value: val, isSet: true}
}

func (v NullableOracleProtectionGroupObjectParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOracleProtectionGroupObjectParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o OracleProtectionGroupObjectParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}