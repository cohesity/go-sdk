/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// AwsSnapshotManagerProtectionGroupParams Specifies the parameters which are specific to AWS related Protection Groups using AWS native snapshot orchestration with snapshot manager. Atlease one of tags or objects must be specified.
type AwsSnapshotManagerProtectionGroupParams struct {
	// Specifies the objects to be included in the Protection Group.
	Objects *[]AwsSnapshotManagerProtectionGroupObjectParams `json:"objects,omitempty"`
	// Specifies the objects to be excluded in the Protection Group.
	ExcludeObjectIds []int64 `json:"excludeObjectIds,omitempty"`
	VolumeExclusionParams NullableEbsVolumeExclusionParams `json:"volumeExclusionParams,omitempty"`
	// Array of Array of VM Tag Ids that Specify VMs to Protect. Optionally specify a list of VMs to protect by listing Protection Source ids of VM Tags in this two dimensional array. Using this two dimensional array of Tag ids, the Cluster generates a list of VMs to protect which are derived from intersections of the inner arrays and union of the outer array, as shown by the following example. To protect only 'Eng' VMs in the East and all the VMs in the West, specify the following tag id array: [ [1101, 2221], [3031] ], where 1101 is the 'Eng' VM Tag id, 2221 is the 'East' VM Tag id and 3031 is the 'West' VM Tag id. The inner array [1101, 2221] produces a list of VMs that are both tagged with 'Eng' and 'East' (an intersection). The outer array combines the list from the inner array with list of VMs tagged with 'West' (a union). The list of resulting VMs are protected by this Protection Group.
	VmTagIds [][]int64 `json:"vmTagIds,omitempty"`
	// Array of Arrays of VM Tag Ids that Specify VMs to Exclude. Optionally specify a list of VMs to exclude from protecting by listing Protection Source ids of VM Tags in this two dimensional array. Using this two dimensional array of Tag ids, the Cluster generates a list of VMs to exclude from protecting, which are derived from intersections of the inner arrays and union of the outer array, as shown by the following example. For example a Datacenter is selected to be protected but you want to exclude all the 'Former Employees' VMs in the East and West but keep all the VMs for 'Former Employees' in the South which are also stored in this Datacenter, by specifying the following tag id array: [ [1000, 2221], [1000, 3031] ], where 1000 is the 'Former Employee' VM Tag id, 2221 is the 'East' VM Tag id and 3031 is the 'West' VM Tag id. The first inner array [1000, 2221] produces a list of VMs that are both tagged with 'Former Employees' and 'East' (an intersection). The second inner array [1000, 3031] produces a list of VMs that are both tagged with 'Former Employees' and 'West' (an intersection). The outer array combines the list of VMs from the two inner arrays. The list of resulting VMs are excluded from being protected this Job.
	ExcludeVmTagIds *[][]int64 `json:"excludeVmTagIds,omitempty"`
	// Specifies whether AMI should be created after taking snapshots of the instance.
	CreateAmi NullableBool `json:"createAmi,omitempty"`
	// The frequency of AMI creation. This should be set if the option to create AMI is set. A value of n creates an AMI from the snapshots after every n runs. eg. n = 2 implies every alternate backup run starting from the first will create an AMI.
	AmiCreationFrequency NullableInt32 `json:"amiCreationFrequency,omitempty"`
	// Specifies the id of the parent of the objects.
	SourceId NullableInt64 `json:"sourceId,omitempty"`
	// Specifies the name of the parent of the objects.
	SourceName NullableString `json:"sourceName,omitempty"`
}

// NewAwsSnapshotManagerProtectionGroupParams instantiates a new AwsSnapshotManagerProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsSnapshotManagerProtectionGroupParams() *AwsSnapshotManagerProtectionGroupParams {
	this := AwsSnapshotManagerProtectionGroupParams{}
	return &this
}

// NewAwsSnapshotManagerProtectionGroupParamsWithDefaults instantiates a new AwsSnapshotManagerProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsSnapshotManagerProtectionGroupParamsWithDefaults() *AwsSnapshotManagerProtectionGroupParams {
	this := AwsSnapshotManagerProtectionGroupParams{}
	return &this
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *AwsSnapshotManagerProtectionGroupParams) GetObjects() []AwsSnapshotManagerProtectionGroupObjectParams {
	if o == nil || o.Objects == nil {
		var ret []AwsSnapshotManagerProtectionGroupObjectParams
		return ret
	}
	return *o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSnapshotManagerProtectionGroupParams) GetObjectsOk() (*[]AwsSnapshotManagerProtectionGroupObjectParams, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *AwsSnapshotManagerProtectionGroupParams) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []AwsSnapshotManagerProtectionGroupObjectParams and assigns it to the Objects field.
func (o *AwsSnapshotManagerProtectionGroupParams) SetObjects(v []AwsSnapshotManagerProtectionGroupObjectParams) {
	o.Objects = &v
}

// GetExcludeObjectIds returns the ExcludeObjectIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsSnapshotManagerProtectionGroupParams) GetExcludeObjectIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.ExcludeObjectIds
}

// GetExcludeObjectIdsOk returns a tuple with the ExcludeObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsSnapshotManagerProtectionGroupParams) GetExcludeObjectIdsOk() (*[]int64, bool) {
	if o == nil || o.ExcludeObjectIds == nil {
		return nil, false
	}
	return &o.ExcludeObjectIds, true
}

// HasExcludeObjectIds returns a boolean if a field has been set.
func (o *AwsSnapshotManagerProtectionGroupParams) HasExcludeObjectIds() bool {
	if o != nil && o.ExcludeObjectIds != nil {
		return true
	}

	return false
}

// SetExcludeObjectIds gets a reference to the given []int64 and assigns it to the ExcludeObjectIds field.
func (o *AwsSnapshotManagerProtectionGroupParams) SetExcludeObjectIds(v []int64) {
	o.ExcludeObjectIds = v
}

// GetVolumeExclusionParams returns the VolumeExclusionParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsSnapshotManagerProtectionGroupParams) GetVolumeExclusionParams() EbsVolumeExclusionParams {
	if o == nil || o.VolumeExclusionParams.Get() == nil {
		var ret EbsVolumeExclusionParams
		return ret
	}
	return *o.VolumeExclusionParams.Get()
}

// GetVolumeExclusionParamsOk returns a tuple with the VolumeExclusionParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsSnapshotManagerProtectionGroupParams) GetVolumeExclusionParamsOk() (*EbsVolumeExclusionParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VolumeExclusionParams.Get(), o.VolumeExclusionParams.IsSet()
}

// HasVolumeExclusionParams returns a boolean if a field has been set.
func (o *AwsSnapshotManagerProtectionGroupParams) HasVolumeExclusionParams() bool {
	if o != nil && o.VolumeExclusionParams.IsSet() {
		return true
	}

	return false
}

// SetVolumeExclusionParams gets a reference to the given NullableEbsVolumeExclusionParams and assigns it to the VolumeExclusionParams field.
func (o *AwsSnapshotManagerProtectionGroupParams) SetVolumeExclusionParams(v EbsVolumeExclusionParams) {
	o.VolumeExclusionParams.Set(&v)
}
// SetVolumeExclusionParamsNil sets the value for VolumeExclusionParams to be an explicit nil
func (o *AwsSnapshotManagerProtectionGroupParams) SetVolumeExclusionParamsNil() {
	o.VolumeExclusionParams.Set(nil)
}

// UnsetVolumeExclusionParams ensures that no value is present for VolumeExclusionParams, not even an explicit nil
func (o *AwsSnapshotManagerProtectionGroupParams) UnsetVolumeExclusionParams() {
	o.VolumeExclusionParams.Unset()
}

// GetVmTagIds returns the VmTagIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsSnapshotManagerProtectionGroupParams) GetVmTagIds() [][]int64 {
	if o == nil  {
		var ret [][]int64
		return ret
	}
	return o.VmTagIds
}

// GetVmTagIdsOk returns a tuple with the VmTagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsSnapshotManagerProtectionGroupParams) GetVmTagIdsOk() (*[][]int64, bool) {
	if o == nil || o.VmTagIds == nil {
		return nil, false
	}
	return &o.VmTagIds, true
}

// HasVmTagIds returns a boolean if a field has been set.
func (o *AwsSnapshotManagerProtectionGroupParams) HasVmTagIds() bool {
	if o != nil && o.VmTagIds != nil {
		return true
	}

	return false
}

// SetVmTagIds gets a reference to the given [][]int64 and assigns it to the VmTagIds field.
func (o *AwsSnapshotManagerProtectionGroupParams) SetVmTagIds(v [][]int64) {
	o.VmTagIds = v
}

// GetExcludeVmTagIds returns the ExcludeVmTagIds field value if set, zero value otherwise.
func (o *AwsSnapshotManagerProtectionGroupParams) GetExcludeVmTagIds() [][]int64 {
	if o == nil || o.ExcludeVmTagIds == nil {
		var ret [][]int64
		return ret
	}
	return *o.ExcludeVmTagIds
}

// GetExcludeVmTagIdsOk returns a tuple with the ExcludeVmTagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSnapshotManagerProtectionGroupParams) GetExcludeVmTagIdsOk() (*[][]int64, bool) {
	if o == nil || o.ExcludeVmTagIds == nil {
		return nil, false
	}
	return o.ExcludeVmTagIds, true
}

// HasExcludeVmTagIds returns a boolean if a field has been set.
func (o *AwsSnapshotManagerProtectionGroupParams) HasExcludeVmTagIds() bool {
	if o != nil && o.ExcludeVmTagIds != nil {
		return true
	}

	return false
}

// SetExcludeVmTagIds gets a reference to the given [][]int64 and assigns it to the ExcludeVmTagIds field.
func (o *AwsSnapshotManagerProtectionGroupParams) SetExcludeVmTagIds(v [][]int64) {
	o.ExcludeVmTagIds = &v
}

// GetCreateAmi returns the CreateAmi field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsSnapshotManagerProtectionGroupParams) GetCreateAmi() bool {
	if o == nil || o.CreateAmi.Get() == nil {
		var ret bool
		return ret
	}
	return *o.CreateAmi.Get()
}

// GetCreateAmiOk returns a tuple with the CreateAmi field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsSnapshotManagerProtectionGroupParams) GetCreateAmiOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreateAmi.Get(), o.CreateAmi.IsSet()
}

// HasCreateAmi returns a boolean if a field has been set.
func (o *AwsSnapshotManagerProtectionGroupParams) HasCreateAmi() bool {
	if o != nil && o.CreateAmi.IsSet() {
		return true
	}

	return false
}

// SetCreateAmi gets a reference to the given NullableBool and assigns it to the CreateAmi field.
func (o *AwsSnapshotManagerProtectionGroupParams) SetCreateAmi(v bool) {
	o.CreateAmi.Set(&v)
}
// SetCreateAmiNil sets the value for CreateAmi to be an explicit nil
func (o *AwsSnapshotManagerProtectionGroupParams) SetCreateAmiNil() {
	o.CreateAmi.Set(nil)
}

// UnsetCreateAmi ensures that no value is present for CreateAmi, not even an explicit nil
func (o *AwsSnapshotManagerProtectionGroupParams) UnsetCreateAmi() {
	o.CreateAmi.Unset()
}

// GetAmiCreationFrequency returns the AmiCreationFrequency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsSnapshotManagerProtectionGroupParams) GetAmiCreationFrequency() int32 {
	if o == nil || o.AmiCreationFrequency.Get() == nil {
		var ret int32
		return ret
	}
	return *o.AmiCreationFrequency.Get()
}

// GetAmiCreationFrequencyOk returns a tuple with the AmiCreationFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsSnapshotManagerProtectionGroupParams) GetAmiCreationFrequencyOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AmiCreationFrequency.Get(), o.AmiCreationFrequency.IsSet()
}

// HasAmiCreationFrequency returns a boolean if a field has been set.
func (o *AwsSnapshotManagerProtectionGroupParams) HasAmiCreationFrequency() bool {
	if o != nil && o.AmiCreationFrequency.IsSet() {
		return true
	}

	return false
}

// SetAmiCreationFrequency gets a reference to the given NullableInt32 and assigns it to the AmiCreationFrequency field.
func (o *AwsSnapshotManagerProtectionGroupParams) SetAmiCreationFrequency(v int32) {
	o.AmiCreationFrequency.Set(&v)
}
// SetAmiCreationFrequencyNil sets the value for AmiCreationFrequency to be an explicit nil
func (o *AwsSnapshotManagerProtectionGroupParams) SetAmiCreationFrequencyNil() {
	o.AmiCreationFrequency.Set(nil)
}

// UnsetAmiCreationFrequency ensures that no value is present for AmiCreationFrequency, not even an explicit nil
func (o *AwsSnapshotManagerProtectionGroupParams) UnsetAmiCreationFrequency() {
	o.AmiCreationFrequency.Unset()
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsSnapshotManagerProtectionGroupParams) GetSourceId() int64 {
	if o == nil || o.SourceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsSnapshotManagerProtectionGroupParams) GetSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *AwsSnapshotManagerProtectionGroupParams) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableInt64 and assigns it to the SourceId field.
func (o *AwsSnapshotManagerProtectionGroupParams) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *AwsSnapshotManagerProtectionGroupParams) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *AwsSnapshotManagerProtectionGroupParams) UnsetSourceId() {
	o.SourceId.Unset()
}

// GetSourceName returns the SourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsSnapshotManagerProtectionGroupParams) GetSourceName() string {
	if o == nil || o.SourceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceName.Get()
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsSnapshotManagerProtectionGroupParams) GetSourceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceName.Get(), o.SourceName.IsSet()
}

// HasSourceName returns a boolean if a field has been set.
func (o *AwsSnapshotManagerProtectionGroupParams) HasSourceName() bool {
	if o != nil && o.SourceName.IsSet() {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given NullableString and assigns it to the SourceName field.
func (o *AwsSnapshotManagerProtectionGroupParams) SetSourceName(v string) {
	o.SourceName.Set(&v)
}
// SetSourceNameNil sets the value for SourceName to be an explicit nil
func (o *AwsSnapshotManagerProtectionGroupParams) SetSourceNameNil() {
	o.SourceName.Set(nil)
}

// UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil
func (o *AwsSnapshotManagerProtectionGroupParams) UnsetSourceName() {
	o.SourceName.Unset()
}

func (o AwsSnapshotManagerProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if o.ExcludeObjectIds != nil {
		toSerialize["excludeObjectIds"] = o.ExcludeObjectIds
	}
	if o.VolumeExclusionParams.IsSet() {
		toSerialize["volumeExclusionParams"] = o.VolumeExclusionParams.Get()
	}
	if o.VmTagIds != nil {
		toSerialize["vmTagIds"] = o.VmTagIds
	}
	if o.ExcludeVmTagIds != nil {
		toSerialize["excludeVmTagIds"] = o.ExcludeVmTagIds
	}
	if o.CreateAmi.IsSet() {
		toSerialize["createAmi"] = o.CreateAmi.Get()
	}
	if o.AmiCreationFrequency.IsSet() {
		toSerialize["amiCreationFrequency"] = o.AmiCreationFrequency.Get()
	}
	if o.SourceId.IsSet() {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if o.SourceName.IsSet() {
		toSerialize["sourceName"] = o.SourceName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAwsSnapshotManagerProtectionGroupParams struct {
	value *AwsSnapshotManagerProtectionGroupParams
	isSet bool
}

func (v NullableAwsSnapshotManagerProtectionGroupParams) Get() *AwsSnapshotManagerProtectionGroupParams {
	return v.value
}

func (v *NullableAwsSnapshotManagerProtectionGroupParams) Set(val *AwsSnapshotManagerProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsSnapshotManagerProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsSnapshotManagerProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsSnapshotManagerProtectionGroupParams(val *AwsSnapshotManagerProtectionGroupParams) *NullableAwsSnapshotManagerProtectionGroupParams {
	return &NullableAwsSnapshotManagerProtectionGroupParams{value: val, isSet: true}
}

func (v NullableAwsSnapshotManagerProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsSnapshotManagerProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o AwsSnapshotManagerProtectionGroupParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}