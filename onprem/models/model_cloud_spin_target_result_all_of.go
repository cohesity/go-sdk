/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// CloudSpinTargetResultAllOf struct for CloudSpinTargetResultAllOf
type CloudSpinTargetResultAllOf struct {
	// Specifies the start time of Cloud Spin in Unix epoch Timestamp(in microseconds) for a target.
	StartTimeUsecs NullableInt64 `json:"startTimeUsecs,omitempty"`
	// Specifies the end time of Cloud Spin in Unix epoch Timestamp(in microseconds) for a target.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	// Status of the Cloud Spin for a target. 'Running' indicates that the run is still running. 'Canceled' indicates that the run has been canceled. 'Canceling' indicates that the run is in the process of being canceled. 'Paused' indicates that the ongoing run has been paused. 'Failed' indicates that the run has failed. 'Missed' indicates that the run was unable to take place at the scheduled time because the previous run was still happening. 'Succeeded' indicates that the run has finished successfully. 'SucceededWithWarning' indicates that the run finished successfully, but there were some warning messages.
	Status NullableString `json:"status,omitempty"`
	// Message about the Cloud Spin run.
	Message NullableString `json:"message,omitempty"`
	Stats *CloudSpinDataStats `json:"stats,omitempty"`
	// Specifies whether the snapshot is deleted manually.
	IsManuallyDeleted NullableBool `json:"isManuallyDeleted,omitempty"`
	// Specifies the expiry time of attempt in Unix epoch Timestamp (in microseconds) for an object.
	ExpiryTimeUsecs NullableInt64 `json:"expiryTimeUsecs,omitempty"`
	// Task ID for a CloudSpin protection run.
	CloudspinTaskId NullableString `json:"cloudspinTaskId,omitempty"`
	// Progress monitor task id for Cloud Spin run.
	ProgressTaskId NullableString `json:"progressTaskId,omitempty"`
	DataLockConstraints *DataLockConstraints `json:"dataLockConstraints,omitempty"`
	// Specifies the legal hold status for a cloud spin target.
	OnLegalHold NullableBool `json:"onLegalHold,omitempty"`
}

// NewCloudSpinTargetResultAllOf instantiates a new CloudSpinTargetResultAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudSpinTargetResultAllOf() *CloudSpinTargetResultAllOf {
	this := CloudSpinTargetResultAllOf{}
	return &this
}

// NewCloudSpinTargetResultAllOfWithDefaults instantiates a new CloudSpinTargetResultAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudSpinTargetResultAllOfWithDefaults() *CloudSpinTargetResultAllOf {
	this := CloudSpinTargetResultAllOf{}
	return &this
}

// GetStartTimeUsecs returns the StartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudSpinTargetResultAllOf) GetStartTimeUsecs() int64 {
	if o == nil || o.StartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StartTimeUsecs.Get()
}

// GetStartTimeUsecsOk returns a tuple with the StartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudSpinTargetResultAllOf) GetStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartTimeUsecs.Get(), o.StartTimeUsecs.IsSet()
}

// HasStartTimeUsecs returns a boolean if a field has been set.
func (o *CloudSpinTargetResultAllOf) HasStartTimeUsecs() bool {
	if o != nil && o.StartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the StartTimeUsecs field.
func (o *CloudSpinTargetResultAllOf) SetStartTimeUsecs(v int64) {
	o.StartTimeUsecs.Set(&v)
}
// SetStartTimeUsecsNil sets the value for StartTimeUsecs to be an explicit nil
func (o *CloudSpinTargetResultAllOf) SetStartTimeUsecsNil() {
	o.StartTimeUsecs.Set(nil)
}

// UnsetStartTimeUsecs ensures that no value is present for StartTimeUsecs, not even an explicit nil
func (o *CloudSpinTargetResultAllOf) UnsetStartTimeUsecs() {
	o.StartTimeUsecs.Unset()
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudSpinTargetResultAllOf) GetEndTimeUsecs() int64 {
	if o == nil || o.EndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudSpinTargetResultAllOf) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *CloudSpinTargetResultAllOf) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *CloudSpinTargetResultAllOf) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *CloudSpinTargetResultAllOf) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *CloudSpinTargetResultAllOf) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudSpinTargetResultAllOf) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudSpinTargetResultAllOf) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *CloudSpinTargetResultAllOf) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *CloudSpinTargetResultAllOf) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *CloudSpinTargetResultAllOf) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *CloudSpinTargetResultAllOf) UnsetStatus() {
	o.Status.Unset()
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudSpinTargetResultAllOf) GetMessage() string {
	if o == nil || o.Message.Get() == nil {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudSpinTargetResultAllOf) GetMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *CloudSpinTargetResultAllOf) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *CloudSpinTargetResultAllOf) SetMessage(v string) {
	o.Message.Set(&v)
}
// SetMessageNil sets the value for Message to be an explicit nil
func (o *CloudSpinTargetResultAllOf) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *CloudSpinTargetResultAllOf) UnsetMessage() {
	o.Message.Unset()
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *CloudSpinTargetResultAllOf) GetStats() CloudSpinDataStats {
	if o == nil || o.Stats == nil {
		var ret CloudSpinDataStats
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudSpinTargetResultAllOf) GetStatsOk() (*CloudSpinDataStats, bool) {
	if o == nil || o.Stats == nil {
		return nil, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *CloudSpinTargetResultAllOf) HasStats() bool {
	if o != nil && o.Stats != nil {
		return true
	}

	return false
}

// SetStats gets a reference to the given CloudSpinDataStats and assigns it to the Stats field.
func (o *CloudSpinTargetResultAllOf) SetStats(v CloudSpinDataStats) {
	o.Stats = &v
}

// GetIsManuallyDeleted returns the IsManuallyDeleted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudSpinTargetResultAllOf) GetIsManuallyDeleted() bool {
	if o == nil || o.IsManuallyDeleted.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsManuallyDeleted.Get()
}

// GetIsManuallyDeletedOk returns a tuple with the IsManuallyDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudSpinTargetResultAllOf) GetIsManuallyDeletedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsManuallyDeleted.Get(), o.IsManuallyDeleted.IsSet()
}

// HasIsManuallyDeleted returns a boolean if a field has been set.
func (o *CloudSpinTargetResultAllOf) HasIsManuallyDeleted() bool {
	if o != nil && o.IsManuallyDeleted.IsSet() {
		return true
	}

	return false
}

// SetIsManuallyDeleted gets a reference to the given NullableBool and assigns it to the IsManuallyDeleted field.
func (o *CloudSpinTargetResultAllOf) SetIsManuallyDeleted(v bool) {
	o.IsManuallyDeleted.Set(&v)
}
// SetIsManuallyDeletedNil sets the value for IsManuallyDeleted to be an explicit nil
func (o *CloudSpinTargetResultAllOf) SetIsManuallyDeletedNil() {
	o.IsManuallyDeleted.Set(nil)
}

// UnsetIsManuallyDeleted ensures that no value is present for IsManuallyDeleted, not even an explicit nil
func (o *CloudSpinTargetResultAllOf) UnsetIsManuallyDeleted() {
	o.IsManuallyDeleted.Unset()
}

// GetExpiryTimeUsecs returns the ExpiryTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudSpinTargetResultAllOf) GetExpiryTimeUsecs() int64 {
	if o == nil || o.ExpiryTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ExpiryTimeUsecs.Get()
}

// GetExpiryTimeUsecsOk returns a tuple with the ExpiryTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudSpinTargetResultAllOf) GetExpiryTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExpiryTimeUsecs.Get(), o.ExpiryTimeUsecs.IsSet()
}

// HasExpiryTimeUsecs returns a boolean if a field has been set.
func (o *CloudSpinTargetResultAllOf) HasExpiryTimeUsecs() bool {
	if o != nil && o.ExpiryTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetExpiryTimeUsecs gets a reference to the given NullableInt64 and assigns it to the ExpiryTimeUsecs field.
func (o *CloudSpinTargetResultAllOf) SetExpiryTimeUsecs(v int64) {
	o.ExpiryTimeUsecs.Set(&v)
}
// SetExpiryTimeUsecsNil sets the value for ExpiryTimeUsecs to be an explicit nil
func (o *CloudSpinTargetResultAllOf) SetExpiryTimeUsecsNil() {
	o.ExpiryTimeUsecs.Set(nil)
}

// UnsetExpiryTimeUsecs ensures that no value is present for ExpiryTimeUsecs, not even an explicit nil
func (o *CloudSpinTargetResultAllOf) UnsetExpiryTimeUsecs() {
	o.ExpiryTimeUsecs.Unset()
}

// GetCloudspinTaskId returns the CloudspinTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudSpinTargetResultAllOf) GetCloudspinTaskId() string {
	if o == nil || o.CloudspinTaskId.Get() == nil {
		var ret string
		return ret
	}
	return *o.CloudspinTaskId.Get()
}

// GetCloudspinTaskIdOk returns a tuple with the CloudspinTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudSpinTargetResultAllOf) GetCloudspinTaskIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CloudspinTaskId.Get(), o.CloudspinTaskId.IsSet()
}

// HasCloudspinTaskId returns a boolean if a field has been set.
func (o *CloudSpinTargetResultAllOf) HasCloudspinTaskId() bool {
	if o != nil && o.CloudspinTaskId.IsSet() {
		return true
	}

	return false
}

// SetCloudspinTaskId gets a reference to the given NullableString and assigns it to the CloudspinTaskId field.
func (o *CloudSpinTargetResultAllOf) SetCloudspinTaskId(v string) {
	o.CloudspinTaskId.Set(&v)
}
// SetCloudspinTaskIdNil sets the value for CloudspinTaskId to be an explicit nil
func (o *CloudSpinTargetResultAllOf) SetCloudspinTaskIdNil() {
	o.CloudspinTaskId.Set(nil)
}

// UnsetCloudspinTaskId ensures that no value is present for CloudspinTaskId, not even an explicit nil
func (o *CloudSpinTargetResultAllOf) UnsetCloudspinTaskId() {
	o.CloudspinTaskId.Unset()
}

// GetProgressTaskId returns the ProgressTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudSpinTargetResultAllOf) GetProgressTaskId() string {
	if o == nil || o.ProgressTaskId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProgressTaskId.Get()
}

// GetProgressTaskIdOk returns a tuple with the ProgressTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudSpinTargetResultAllOf) GetProgressTaskIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProgressTaskId.Get(), o.ProgressTaskId.IsSet()
}

// HasProgressTaskId returns a boolean if a field has been set.
func (o *CloudSpinTargetResultAllOf) HasProgressTaskId() bool {
	if o != nil && o.ProgressTaskId.IsSet() {
		return true
	}

	return false
}

// SetProgressTaskId gets a reference to the given NullableString and assigns it to the ProgressTaskId field.
func (o *CloudSpinTargetResultAllOf) SetProgressTaskId(v string) {
	o.ProgressTaskId.Set(&v)
}
// SetProgressTaskIdNil sets the value for ProgressTaskId to be an explicit nil
func (o *CloudSpinTargetResultAllOf) SetProgressTaskIdNil() {
	o.ProgressTaskId.Set(nil)
}

// UnsetProgressTaskId ensures that no value is present for ProgressTaskId, not even an explicit nil
func (o *CloudSpinTargetResultAllOf) UnsetProgressTaskId() {
	o.ProgressTaskId.Unset()
}

// GetDataLockConstraints returns the DataLockConstraints field value if set, zero value otherwise.
func (o *CloudSpinTargetResultAllOf) GetDataLockConstraints() DataLockConstraints {
	if o == nil || o.DataLockConstraints == nil {
		var ret DataLockConstraints
		return ret
	}
	return *o.DataLockConstraints
}

// GetDataLockConstraintsOk returns a tuple with the DataLockConstraints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudSpinTargetResultAllOf) GetDataLockConstraintsOk() (*DataLockConstraints, bool) {
	if o == nil || o.DataLockConstraints == nil {
		return nil, false
	}
	return o.DataLockConstraints, true
}

// HasDataLockConstraints returns a boolean if a field has been set.
func (o *CloudSpinTargetResultAllOf) HasDataLockConstraints() bool {
	if o != nil && o.DataLockConstraints != nil {
		return true
	}

	return false
}

// SetDataLockConstraints gets a reference to the given DataLockConstraints and assigns it to the DataLockConstraints field.
func (o *CloudSpinTargetResultAllOf) SetDataLockConstraints(v DataLockConstraints) {
	o.DataLockConstraints = &v
}

// GetOnLegalHold returns the OnLegalHold field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudSpinTargetResultAllOf) GetOnLegalHold() bool {
	if o == nil || o.OnLegalHold.Get() == nil {
		var ret bool
		return ret
	}
	return *o.OnLegalHold.Get()
}

// GetOnLegalHoldOk returns a tuple with the OnLegalHold field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudSpinTargetResultAllOf) GetOnLegalHoldOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OnLegalHold.Get(), o.OnLegalHold.IsSet()
}

// HasOnLegalHold returns a boolean if a field has been set.
func (o *CloudSpinTargetResultAllOf) HasOnLegalHold() bool {
	if o != nil && o.OnLegalHold.IsSet() {
		return true
	}

	return false
}

// SetOnLegalHold gets a reference to the given NullableBool and assigns it to the OnLegalHold field.
func (o *CloudSpinTargetResultAllOf) SetOnLegalHold(v bool) {
	o.OnLegalHold.Set(&v)
}
// SetOnLegalHoldNil sets the value for OnLegalHold to be an explicit nil
func (o *CloudSpinTargetResultAllOf) SetOnLegalHoldNil() {
	o.OnLegalHold.Set(nil)
}

// UnsetOnLegalHold ensures that no value is present for OnLegalHold, not even an explicit nil
func (o *CloudSpinTargetResultAllOf) UnsetOnLegalHold() {
	o.OnLegalHold.Unset()
}

func (o CloudSpinTargetResultAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StartTimeUsecs.IsSet() {
		toSerialize["startTimeUsecs"] = o.StartTimeUsecs.Get()
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	if o.Stats != nil {
		toSerialize["stats"] = o.Stats
	}
	if o.IsManuallyDeleted.IsSet() {
		toSerialize["isManuallyDeleted"] = o.IsManuallyDeleted.Get()
	}
	if o.ExpiryTimeUsecs.IsSet() {
		toSerialize["expiryTimeUsecs"] = o.ExpiryTimeUsecs.Get()
	}
	if o.CloudspinTaskId.IsSet() {
		toSerialize["cloudspinTaskId"] = o.CloudspinTaskId.Get()
	}
	if o.ProgressTaskId.IsSet() {
		toSerialize["progressTaskId"] = o.ProgressTaskId.Get()
	}
	if o.DataLockConstraints != nil {
		toSerialize["dataLockConstraints"] = o.DataLockConstraints
	}
	if o.OnLegalHold.IsSet() {
		toSerialize["onLegalHold"] = o.OnLegalHold.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCloudSpinTargetResultAllOf struct {
	value *CloudSpinTargetResultAllOf
	isSet bool
}

func (v NullableCloudSpinTargetResultAllOf) Get() *CloudSpinTargetResultAllOf {
	return v.value
}

func (v *NullableCloudSpinTargetResultAllOf) Set(val *CloudSpinTargetResultAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudSpinTargetResultAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudSpinTargetResultAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudSpinTargetResultAllOf(val *CloudSpinTargetResultAllOf) *NullableCloudSpinTargetResultAllOf {
	return &NullableCloudSpinTargetResultAllOf{value: val, isSet: true}
}

func (v NullableCloudSpinTargetResultAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudSpinTargetResultAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o CloudSpinTargetResultAllOf) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}