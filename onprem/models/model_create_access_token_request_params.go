/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// CreateAccessTokenRequestParams Specifies the Cohesity credentials required for creating an access token.
type CreateAccessTokenRequestParams struct {
	// Specifies the login name of the Cohesity user.
	Username NullableString `json:"username"`
	// Specifies the password of the Cohesity user account.
	Password NullableString `json:"password"`
	// Specifies the domain the user is logging in to. For a local user the domain is LOCAL. For LDAP/AD user, the domain will map to a LDAP connection string. A user is uniquely identified by a combination of username and domain. LOCAL is the default domain.
	Domain NullableString `json:"domain,omitempty"`
}

// NewCreateAccessTokenRequestParams instantiates a new CreateAccessTokenRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAccessTokenRequestParams(username NullableString, password NullableString) *CreateAccessTokenRequestParams {
	this := CreateAccessTokenRequestParams{}
	this.Username = username
	this.Password = password
	return &this
}

// NewCreateAccessTokenRequestParamsWithDefaults instantiates a new CreateAccessTokenRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAccessTokenRequestParamsWithDefaults() *CreateAccessTokenRequestParams {
	this := CreateAccessTokenRequestParams{}
	return &this
}

// GetUsername returns the Username field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateAccessTokenRequestParams) GetUsername() string {
	if o == nil || o.Username.Get() == nil {
		var ret string
		return ret
	}

	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAccessTokenRequestParams) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// SetUsername sets field value
func (o *CreateAccessTokenRequestParams) SetUsername(v string) {
	o.Username.Set(&v)
}

// GetPassword returns the Password field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateAccessTokenRequestParams) GetPassword() string {
	if o == nil || o.Password.Get() == nil {
		var ret string
		return ret
	}

	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAccessTokenRequestParams) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// SetPassword sets field value
func (o *CreateAccessTokenRequestParams) SetPassword(v string) {
	o.Password.Set(&v)
}

// GetDomain returns the Domain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAccessTokenRequestParams) GetDomain() string {
	if o == nil || o.Domain.Get() == nil {
		var ret string
		return ret
	}
	return *o.Domain.Get()
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAccessTokenRequestParams) GetDomainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Domain.Get(), o.Domain.IsSet()
}

// HasDomain returns a boolean if a field has been set.
func (o *CreateAccessTokenRequestParams) HasDomain() bool {
	if o != nil && o.Domain.IsSet() {
		return true
	}

	return false
}

// SetDomain gets a reference to the given NullableString and assigns it to the Domain field.
func (o *CreateAccessTokenRequestParams) SetDomain(v string) {
	o.Domain.Set(&v)
}
// SetDomainNil sets the value for Domain to be an explicit nil
func (o *CreateAccessTokenRequestParams) SetDomainNil() {
	o.Domain.Set(nil)
}

// UnsetDomain ensures that no value is present for Domain, not even an explicit nil
func (o *CreateAccessTokenRequestParams) UnsetDomain() {
	o.Domain.Unset()
}

func (o CreateAccessTokenRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username"] = o.Username.Get()
	}
	if true {
		toSerialize["password"] = o.Password.Get()
	}
	if o.Domain.IsSet() {
		toSerialize["domain"] = o.Domain.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAccessTokenRequestParams struct {
	value *CreateAccessTokenRequestParams
	isSet bool
}

func (v NullableCreateAccessTokenRequestParams) Get() *CreateAccessTokenRequestParams {
	return v.value
}

func (v *NullableCreateAccessTokenRequestParams) Set(val *CreateAccessTokenRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAccessTokenRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAccessTokenRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAccessTokenRequestParams(val *CreateAccessTokenRequestParams) *NullableCreateAccessTokenRequestParams {
	return &NullableCreateAccessTokenRequestParams{value: val, isSet: true}
}

func (v NullableCreateAccessTokenRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAccessTokenRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o CreateAccessTokenRequestParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}