/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// ProtectionPolicyResponseAllOf struct for ProtectionPolicyResponseAllOf
type ProtectionPolicyResponseAllOf struct {
	// Specifies a unique Policy id assigned by the Cohesity Cluster.
	Id NullableString `json:"id,omitempty"`
	// Specifies the parent policy template id to which the policy is linked to. This field is set only when policy is created from template.
	TemplateId NullableString `json:"templateId,omitempty"`
	// This field is set to true if the linked policy which is internally created from a policy templates qualifies as usable to create more policies on the cluster. If the linked policy is partially filled and can not create a working policy then this field will be set to false. In case of normal policy created on the cluster, this field wont be populated.
	IsUsable NullableBool `json:"isUsable,omitempty"`
	// This field is set to true when policy is the replicated policy.
	IsReplicated NullableBool `json:"isReplicated,omitempty"`
	// Specifies the number of protection groups using the protection policy.
	NumProtectionGroups NullableInt64 `json:"numProtectionGroups,omitempty"`
	// Specifies the number of protected objects using the protection policy.
	NumProtectedObjects NullableInt64 `json:"numProtectedObjects,omitempty"`
}

// NewProtectionPolicyResponseAllOf instantiates a new ProtectionPolicyResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionPolicyResponseAllOf() *ProtectionPolicyResponseAllOf {
	this := ProtectionPolicyResponseAllOf{}
	return &this
}

// NewProtectionPolicyResponseAllOfWithDefaults instantiates a new ProtectionPolicyResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionPolicyResponseAllOfWithDefaults() *ProtectionPolicyResponseAllOf {
	this := ProtectionPolicyResponseAllOf{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionPolicyResponseAllOf) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionPolicyResponseAllOf) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ProtectionPolicyResponseAllOf) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ProtectionPolicyResponseAllOf) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ProtectionPolicyResponseAllOf) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ProtectionPolicyResponseAllOf) UnsetId() {
	o.Id.Unset()
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionPolicyResponseAllOf) GetTemplateId() string {
	if o == nil || o.TemplateId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TemplateId.Get()
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionPolicyResponseAllOf) GetTemplateIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TemplateId.Get(), o.TemplateId.IsSet()
}

// HasTemplateId returns a boolean if a field has been set.
func (o *ProtectionPolicyResponseAllOf) HasTemplateId() bool {
	if o != nil && o.TemplateId.IsSet() {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given NullableString and assigns it to the TemplateId field.
func (o *ProtectionPolicyResponseAllOf) SetTemplateId(v string) {
	o.TemplateId.Set(&v)
}
// SetTemplateIdNil sets the value for TemplateId to be an explicit nil
func (o *ProtectionPolicyResponseAllOf) SetTemplateIdNil() {
	o.TemplateId.Set(nil)
}

// UnsetTemplateId ensures that no value is present for TemplateId, not even an explicit nil
func (o *ProtectionPolicyResponseAllOf) UnsetTemplateId() {
	o.TemplateId.Unset()
}

// GetIsUsable returns the IsUsable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionPolicyResponseAllOf) GetIsUsable() bool {
	if o == nil || o.IsUsable.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsUsable.Get()
}

// GetIsUsableOk returns a tuple with the IsUsable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionPolicyResponseAllOf) GetIsUsableOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsUsable.Get(), o.IsUsable.IsSet()
}

// HasIsUsable returns a boolean if a field has been set.
func (o *ProtectionPolicyResponseAllOf) HasIsUsable() bool {
	if o != nil && o.IsUsable.IsSet() {
		return true
	}

	return false
}

// SetIsUsable gets a reference to the given NullableBool and assigns it to the IsUsable field.
func (o *ProtectionPolicyResponseAllOf) SetIsUsable(v bool) {
	o.IsUsable.Set(&v)
}
// SetIsUsableNil sets the value for IsUsable to be an explicit nil
func (o *ProtectionPolicyResponseAllOf) SetIsUsableNil() {
	o.IsUsable.Set(nil)
}

// UnsetIsUsable ensures that no value is present for IsUsable, not even an explicit nil
func (o *ProtectionPolicyResponseAllOf) UnsetIsUsable() {
	o.IsUsable.Unset()
}

// GetIsReplicated returns the IsReplicated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionPolicyResponseAllOf) GetIsReplicated() bool {
	if o == nil || o.IsReplicated.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsReplicated.Get()
}

// GetIsReplicatedOk returns a tuple with the IsReplicated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionPolicyResponseAllOf) GetIsReplicatedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsReplicated.Get(), o.IsReplicated.IsSet()
}

// HasIsReplicated returns a boolean if a field has been set.
func (o *ProtectionPolicyResponseAllOf) HasIsReplicated() bool {
	if o != nil && o.IsReplicated.IsSet() {
		return true
	}

	return false
}

// SetIsReplicated gets a reference to the given NullableBool and assigns it to the IsReplicated field.
func (o *ProtectionPolicyResponseAllOf) SetIsReplicated(v bool) {
	o.IsReplicated.Set(&v)
}
// SetIsReplicatedNil sets the value for IsReplicated to be an explicit nil
func (o *ProtectionPolicyResponseAllOf) SetIsReplicatedNil() {
	o.IsReplicated.Set(nil)
}

// UnsetIsReplicated ensures that no value is present for IsReplicated, not even an explicit nil
func (o *ProtectionPolicyResponseAllOf) UnsetIsReplicated() {
	o.IsReplicated.Unset()
}

// GetNumProtectionGroups returns the NumProtectionGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionPolicyResponseAllOf) GetNumProtectionGroups() int64 {
	if o == nil || o.NumProtectionGroups.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumProtectionGroups.Get()
}

// GetNumProtectionGroupsOk returns a tuple with the NumProtectionGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionPolicyResponseAllOf) GetNumProtectionGroupsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumProtectionGroups.Get(), o.NumProtectionGroups.IsSet()
}

// HasNumProtectionGroups returns a boolean if a field has been set.
func (o *ProtectionPolicyResponseAllOf) HasNumProtectionGroups() bool {
	if o != nil && o.NumProtectionGroups.IsSet() {
		return true
	}

	return false
}

// SetNumProtectionGroups gets a reference to the given NullableInt64 and assigns it to the NumProtectionGroups field.
func (o *ProtectionPolicyResponseAllOf) SetNumProtectionGroups(v int64) {
	o.NumProtectionGroups.Set(&v)
}
// SetNumProtectionGroupsNil sets the value for NumProtectionGroups to be an explicit nil
func (o *ProtectionPolicyResponseAllOf) SetNumProtectionGroupsNil() {
	o.NumProtectionGroups.Set(nil)
}

// UnsetNumProtectionGroups ensures that no value is present for NumProtectionGroups, not even an explicit nil
func (o *ProtectionPolicyResponseAllOf) UnsetNumProtectionGroups() {
	o.NumProtectionGroups.Unset()
}

// GetNumProtectedObjects returns the NumProtectedObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionPolicyResponseAllOf) GetNumProtectedObjects() int64 {
	if o == nil || o.NumProtectedObjects.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumProtectedObjects.Get()
}

// GetNumProtectedObjectsOk returns a tuple with the NumProtectedObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionPolicyResponseAllOf) GetNumProtectedObjectsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumProtectedObjects.Get(), o.NumProtectedObjects.IsSet()
}

// HasNumProtectedObjects returns a boolean if a field has been set.
func (o *ProtectionPolicyResponseAllOf) HasNumProtectedObjects() bool {
	if o != nil && o.NumProtectedObjects.IsSet() {
		return true
	}

	return false
}

// SetNumProtectedObjects gets a reference to the given NullableInt64 and assigns it to the NumProtectedObjects field.
func (o *ProtectionPolicyResponseAllOf) SetNumProtectedObjects(v int64) {
	o.NumProtectedObjects.Set(&v)
}
// SetNumProtectedObjectsNil sets the value for NumProtectedObjects to be an explicit nil
func (o *ProtectionPolicyResponseAllOf) SetNumProtectedObjectsNil() {
	o.NumProtectedObjects.Set(nil)
}

// UnsetNumProtectedObjects ensures that no value is present for NumProtectedObjects, not even an explicit nil
func (o *ProtectionPolicyResponseAllOf) UnsetNumProtectedObjects() {
	o.NumProtectedObjects.Unset()
}

func (o ProtectionPolicyResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.TemplateId.IsSet() {
		toSerialize["templateId"] = o.TemplateId.Get()
	}
	if o.IsUsable.IsSet() {
		toSerialize["isUsable"] = o.IsUsable.Get()
	}
	if o.IsReplicated.IsSet() {
		toSerialize["isReplicated"] = o.IsReplicated.Get()
	}
	if o.NumProtectionGroups.IsSet() {
		toSerialize["numProtectionGroups"] = o.NumProtectionGroups.Get()
	}
	if o.NumProtectedObjects.IsSet() {
		toSerialize["numProtectedObjects"] = o.NumProtectedObjects.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProtectionPolicyResponseAllOf struct {
	value *ProtectionPolicyResponseAllOf
	isSet bool
}

func (v NullableProtectionPolicyResponseAllOf) Get() *ProtectionPolicyResponseAllOf {
	return v.value
}

func (v *NullableProtectionPolicyResponseAllOf) Set(val *ProtectionPolicyResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionPolicyResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionPolicyResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionPolicyResponseAllOf(val *ProtectionPolicyResponseAllOf) *NullableProtectionPolicyResponseAllOf {
	return &NullableProtectionPolicyResponseAllOf{value: val, isSet: true}
}

func (v NullableProtectionPolicyResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionPolicyResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o ProtectionPolicyResponseAllOf) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}