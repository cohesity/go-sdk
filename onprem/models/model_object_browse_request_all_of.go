/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// ObjectBrowseRequestAllOf struct for ObjectBrowseRequestAllOf
type ObjectBrowseRequestAllOf struct {
	HdfsParams *HdfsBrowseRequestParams `json:"hdfsParams,omitempty"`
	PaginationInfo *PaginationInfo `json:"paginationInfo,omitempty"`
}

// NewObjectBrowseRequestAllOf instantiates a new ObjectBrowseRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectBrowseRequestAllOf() *ObjectBrowseRequestAllOf {
	this := ObjectBrowseRequestAllOf{}
	return &this
}

// NewObjectBrowseRequestAllOfWithDefaults instantiates a new ObjectBrowseRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectBrowseRequestAllOfWithDefaults() *ObjectBrowseRequestAllOf {
	this := ObjectBrowseRequestAllOf{}
	return &this
}

// GetHdfsParams returns the HdfsParams field value if set, zero value otherwise.
func (o *ObjectBrowseRequestAllOf) GetHdfsParams() HdfsBrowseRequestParams {
	if o == nil || o.HdfsParams == nil {
		var ret HdfsBrowseRequestParams
		return ret
	}
	return *o.HdfsParams
}

// GetHdfsParamsOk returns a tuple with the HdfsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectBrowseRequestAllOf) GetHdfsParamsOk() (*HdfsBrowseRequestParams, bool) {
	if o == nil || o.HdfsParams == nil {
		return nil, false
	}
	return o.HdfsParams, true
}

// HasHdfsParams returns a boolean if a field has been set.
func (o *ObjectBrowseRequestAllOf) HasHdfsParams() bool {
	if o != nil && o.HdfsParams != nil {
		return true
	}

	return false
}

// SetHdfsParams gets a reference to the given HdfsBrowseRequestParams and assigns it to the HdfsParams field.
func (o *ObjectBrowseRequestAllOf) SetHdfsParams(v HdfsBrowseRequestParams) {
	o.HdfsParams = &v
}

// GetPaginationInfo returns the PaginationInfo field value if set, zero value otherwise.
func (o *ObjectBrowseRequestAllOf) GetPaginationInfo() PaginationInfo {
	if o == nil || o.PaginationInfo == nil {
		var ret PaginationInfo
		return ret
	}
	return *o.PaginationInfo
}

// GetPaginationInfoOk returns a tuple with the PaginationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectBrowseRequestAllOf) GetPaginationInfoOk() (*PaginationInfo, bool) {
	if o == nil || o.PaginationInfo == nil {
		return nil, false
	}
	return o.PaginationInfo, true
}

// HasPaginationInfo returns a boolean if a field has been set.
func (o *ObjectBrowseRequestAllOf) HasPaginationInfo() bool {
	if o != nil && o.PaginationInfo != nil {
		return true
	}

	return false
}

// SetPaginationInfo gets a reference to the given PaginationInfo and assigns it to the PaginationInfo field.
func (o *ObjectBrowseRequestAllOf) SetPaginationInfo(v PaginationInfo) {
	o.PaginationInfo = &v
}

func (o ObjectBrowseRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HdfsParams != nil {
		toSerialize["hdfsParams"] = o.HdfsParams
	}
	if o.PaginationInfo != nil {
		toSerialize["paginationInfo"] = o.PaginationInfo
	}
	return json.Marshal(toSerialize)
}

type NullableObjectBrowseRequestAllOf struct {
	value *ObjectBrowseRequestAllOf
	isSet bool
}

func (v NullableObjectBrowseRequestAllOf) Get() *ObjectBrowseRequestAllOf {
	return v.value
}

func (v *NullableObjectBrowseRequestAllOf) Set(val *ObjectBrowseRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectBrowseRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectBrowseRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectBrowseRequestAllOf(val *ObjectBrowseRequestAllOf) *NullableObjectBrowseRequestAllOf {
	return &NullableObjectBrowseRequestAllOf{value: val, isSet: true}
}

func (v NullableObjectBrowseRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectBrowseRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o ObjectBrowseRequestAllOf) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}