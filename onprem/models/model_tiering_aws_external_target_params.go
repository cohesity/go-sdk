/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// TieringAwsExternalTargetParams Specifies the common parameters which are specific to AWS related External Targets.
type TieringAwsExternalTargetParams struct {
	// Specifies bucket name of the External Target.
	BucketName NullableString `json:"bucketName"`
	// Specifies region of the External Target.
	Region NullableString `json:"region"`
	// Specifies the AWS External Target storage class.
	StorageClass NullableString `json:"storageClass"`
	AwsS3StandardParams *AwsS3StandardParams `json:"awsS3StandardParams,omitempty"`
	AwsS3IntelligentParams *AwsS3IntelligentParams `json:"awsS3IntelligentParams,omitempty"`
}

// NewTieringAwsExternalTargetParams instantiates a new TieringAwsExternalTargetParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTieringAwsExternalTargetParams(bucketName NullableString, region NullableString, storageClass NullableString) *TieringAwsExternalTargetParams {
	this := TieringAwsExternalTargetParams{}
	this.BucketName = bucketName
	this.Region = region
	this.StorageClass = storageClass
	return &this
}

// NewTieringAwsExternalTargetParamsWithDefaults instantiates a new TieringAwsExternalTargetParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTieringAwsExternalTargetParamsWithDefaults() *TieringAwsExternalTargetParams {
	this := TieringAwsExternalTargetParams{}
	return &this
}

// GetBucketName returns the BucketName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TieringAwsExternalTargetParams) GetBucketName() string {
	if o == nil || o.BucketName.Get() == nil {
		var ret string
		return ret
	}

	return *o.BucketName.Get()
}

// GetBucketNameOk returns a tuple with the BucketName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TieringAwsExternalTargetParams) GetBucketNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BucketName.Get(), o.BucketName.IsSet()
}

// SetBucketName sets field value
func (o *TieringAwsExternalTargetParams) SetBucketName(v string) {
	o.BucketName.Set(&v)
}

// GetRegion returns the Region field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TieringAwsExternalTargetParams) GetRegion() string {
	if o == nil || o.Region.Get() == nil {
		var ret string
		return ret
	}

	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TieringAwsExternalTargetParams) GetRegionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// SetRegion sets field value
func (o *TieringAwsExternalTargetParams) SetRegion(v string) {
	o.Region.Set(&v)
}

// GetStorageClass returns the StorageClass field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TieringAwsExternalTargetParams) GetStorageClass() string {
	if o == nil || o.StorageClass.Get() == nil {
		var ret string
		return ret
	}

	return *o.StorageClass.Get()
}

// GetStorageClassOk returns a tuple with the StorageClass field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TieringAwsExternalTargetParams) GetStorageClassOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StorageClass.Get(), o.StorageClass.IsSet()
}

// SetStorageClass sets field value
func (o *TieringAwsExternalTargetParams) SetStorageClass(v string) {
	o.StorageClass.Set(&v)
}

// GetAwsS3StandardParams returns the AwsS3StandardParams field value if set, zero value otherwise.
func (o *TieringAwsExternalTargetParams) GetAwsS3StandardParams() AwsS3StandardParams {
	if o == nil || o.AwsS3StandardParams == nil {
		var ret AwsS3StandardParams
		return ret
	}
	return *o.AwsS3StandardParams
}

// GetAwsS3StandardParamsOk returns a tuple with the AwsS3StandardParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TieringAwsExternalTargetParams) GetAwsS3StandardParamsOk() (*AwsS3StandardParams, bool) {
	if o == nil || o.AwsS3StandardParams == nil {
		return nil, false
	}
	return o.AwsS3StandardParams, true
}

// HasAwsS3StandardParams returns a boolean if a field has been set.
func (o *TieringAwsExternalTargetParams) HasAwsS3StandardParams() bool {
	if o != nil && o.AwsS3StandardParams != nil {
		return true
	}

	return false
}

// SetAwsS3StandardParams gets a reference to the given AwsS3StandardParams and assigns it to the AwsS3StandardParams field.
func (o *TieringAwsExternalTargetParams) SetAwsS3StandardParams(v AwsS3StandardParams) {
	o.AwsS3StandardParams = &v
}

// GetAwsS3IntelligentParams returns the AwsS3IntelligentParams field value if set, zero value otherwise.
func (o *TieringAwsExternalTargetParams) GetAwsS3IntelligentParams() AwsS3IntelligentParams {
	if o == nil || o.AwsS3IntelligentParams == nil {
		var ret AwsS3IntelligentParams
		return ret
	}
	return *o.AwsS3IntelligentParams
}

// GetAwsS3IntelligentParamsOk returns a tuple with the AwsS3IntelligentParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TieringAwsExternalTargetParams) GetAwsS3IntelligentParamsOk() (*AwsS3IntelligentParams, bool) {
	if o == nil || o.AwsS3IntelligentParams == nil {
		return nil, false
	}
	return o.AwsS3IntelligentParams, true
}

// HasAwsS3IntelligentParams returns a boolean if a field has been set.
func (o *TieringAwsExternalTargetParams) HasAwsS3IntelligentParams() bool {
	if o != nil && o.AwsS3IntelligentParams != nil {
		return true
	}

	return false
}

// SetAwsS3IntelligentParams gets a reference to the given AwsS3IntelligentParams and assigns it to the AwsS3IntelligentParams field.
func (o *TieringAwsExternalTargetParams) SetAwsS3IntelligentParams(v AwsS3IntelligentParams) {
	o.AwsS3IntelligentParams = &v
}

func (o TieringAwsExternalTargetParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bucketName"] = o.BucketName.Get()
	}
	if true {
		toSerialize["region"] = o.Region.Get()
	}
	if true {
		toSerialize["storageClass"] = o.StorageClass.Get()
	}
	if o.AwsS3StandardParams != nil {
		toSerialize["awsS3StandardParams"] = o.AwsS3StandardParams
	}
	if o.AwsS3IntelligentParams != nil {
		toSerialize["awsS3IntelligentParams"] = o.AwsS3IntelligentParams
	}
	return json.Marshal(toSerialize)
}

type NullableTieringAwsExternalTargetParams struct {
	value *TieringAwsExternalTargetParams
	isSet bool
}

func (v NullableTieringAwsExternalTargetParams) Get() *TieringAwsExternalTargetParams {
	return v.value
}

func (v *NullableTieringAwsExternalTargetParams) Set(val *TieringAwsExternalTargetParams) {
	v.value = val
	v.isSet = true
}

func (v NullableTieringAwsExternalTargetParams) IsSet() bool {
	return v.isSet
}

func (v *NullableTieringAwsExternalTargetParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTieringAwsExternalTargetParams(val *TieringAwsExternalTargetParams) *NullableTieringAwsExternalTargetParams {
	return &NullableTieringAwsExternalTargetParams{value: val, isSet: true}
}

func (v NullableTieringAwsExternalTargetParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTieringAwsExternalTargetParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o TieringAwsExternalTargetParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}