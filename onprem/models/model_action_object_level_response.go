/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// ActionObjectLevelResponse Specifies the object level response params after performing an action on a protected object.
type ActionObjectLevelResponse struct {
	// Specifies the ID of the object.
	Id NullableInt64 `json:"id"`
	// Specifies the name of the object.
	Name NullableString `json:"name,omitempty"`
	ResumeStatus *ResumeActionObjectLevelResponse `json:"resumeStatus,omitempty"`
	PauseStatus *PauseActionObjectLevelResponse `json:"pauseStatus,omitempty"`
	RunNowStatus *RunNowActionObjectLevelResponse `json:"runNowStatus,omitempty"`
	UnProtectStatus *UnprotectActionObjectLevelResponse `json:"unProtectStatus,omitempty"`
}

// NewActionObjectLevelResponse instantiates a new ActionObjectLevelResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionObjectLevelResponse(id NullableInt64) *ActionObjectLevelResponse {
	this := ActionObjectLevelResponse{}
	this.Id = id
	return &this
}

// NewActionObjectLevelResponseWithDefaults instantiates a new ActionObjectLevelResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionObjectLevelResponseWithDefaults() *ActionObjectLevelResponse {
	this := ActionObjectLevelResponse{}
	return &this
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *ActionObjectLevelResponse) GetId() int64 {
	if o == nil || o.Id.Get() == nil {
		var ret int64
		return ret
	}

	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActionObjectLevelResponse) GetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// SetId sets field value
func (o *ActionObjectLevelResponse) SetId(v int64) {
	o.Id.Set(&v)
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActionObjectLevelResponse) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActionObjectLevelResponse) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ActionObjectLevelResponse) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ActionObjectLevelResponse) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ActionObjectLevelResponse) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ActionObjectLevelResponse) UnsetName() {
	o.Name.Unset()
}

// GetResumeStatus returns the ResumeStatus field value if set, zero value otherwise.
func (o *ActionObjectLevelResponse) GetResumeStatus() ResumeActionObjectLevelResponse {
	if o == nil || o.ResumeStatus == nil {
		var ret ResumeActionObjectLevelResponse
		return ret
	}
	return *o.ResumeStatus
}

// GetResumeStatusOk returns a tuple with the ResumeStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionObjectLevelResponse) GetResumeStatusOk() (*ResumeActionObjectLevelResponse, bool) {
	if o == nil || o.ResumeStatus == nil {
		return nil, false
	}
	return o.ResumeStatus, true
}

// HasResumeStatus returns a boolean if a field has been set.
func (o *ActionObjectLevelResponse) HasResumeStatus() bool {
	if o != nil && o.ResumeStatus != nil {
		return true
	}

	return false
}

// SetResumeStatus gets a reference to the given ResumeActionObjectLevelResponse and assigns it to the ResumeStatus field.
func (o *ActionObjectLevelResponse) SetResumeStatus(v ResumeActionObjectLevelResponse) {
	o.ResumeStatus = &v
}

// GetPauseStatus returns the PauseStatus field value if set, zero value otherwise.
func (o *ActionObjectLevelResponse) GetPauseStatus() PauseActionObjectLevelResponse {
	if o == nil || o.PauseStatus == nil {
		var ret PauseActionObjectLevelResponse
		return ret
	}
	return *o.PauseStatus
}

// GetPauseStatusOk returns a tuple with the PauseStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionObjectLevelResponse) GetPauseStatusOk() (*PauseActionObjectLevelResponse, bool) {
	if o == nil || o.PauseStatus == nil {
		return nil, false
	}
	return o.PauseStatus, true
}

// HasPauseStatus returns a boolean if a field has been set.
func (o *ActionObjectLevelResponse) HasPauseStatus() bool {
	if o != nil && o.PauseStatus != nil {
		return true
	}

	return false
}

// SetPauseStatus gets a reference to the given PauseActionObjectLevelResponse and assigns it to the PauseStatus field.
func (o *ActionObjectLevelResponse) SetPauseStatus(v PauseActionObjectLevelResponse) {
	o.PauseStatus = &v
}

// GetRunNowStatus returns the RunNowStatus field value if set, zero value otherwise.
func (o *ActionObjectLevelResponse) GetRunNowStatus() RunNowActionObjectLevelResponse {
	if o == nil || o.RunNowStatus == nil {
		var ret RunNowActionObjectLevelResponse
		return ret
	}
	return *o.RunNowStatus
}

// GetRunNowStatusOk returns a tuple with the RunNowStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionObjectLevelResponse) GetRunNowStatusOk() (*RunNowActionObjectLevelResponse, bool) {
	if o == nil || o.RunNowStatus == nil {
		return nil, false
	}
	return o.RunNowStatus, true
}

// HasRunNowStatus returns a boolean if a field has been set.
func (o *ActionObjectLevelResponse) HasRunNowStatus() bool {
	if o != nil && o.RunNowStatus != nil {
		return true
	}

	return false
}

// SetRunNowStatus gets a reference to the given RunNowActionObjectLevelResponse and assigns it to the RunNowStatus field.
func (o *ActionObjectLevelResponse) SetRunNowStatus(v RunNowActionObjectLevelResponse) {
	o.RunNowStatus = &v
}

// GetUnProtectStatus returns the UnProtectStatus field value if set, zero value otherwise.
func (o *ActionObjectLevelResponse) GetUnProtectStatus() UnprotectActionObjectLevelResponse {
	if o == nil || o.UnProtectStatus == nil {
		var ret UnprotectActionObjectLevelResponse
		return ret
	}
	return *o.UnProtectStatus
}

// GetUnProtectStatusOk returns a tuple with the UnProtectStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionObjectLevelResponse) GetUnProtectStatusOk() (*UnprotectActionObjectLevelResponse, bool) {
	if o == nil || o.UnProtectStatus == nil {
		return nil, false
	}
	return o.UnProtectStatus, true
}

// HasUnProtectStatus returns a boolean if a field has been set.
func (o *ActionObjectLevelResponse) HasUnProtectStatus() bool {
	if o != nil && o.UnProtectStatus != nil {
		return true
	}

	return false
}

// SetUnProtectStatus gets a reference to the given UnprotectActionObjectLevelResponse and assigns it to the UnProtectStatus field.
func (o *ActionObjectLevelResponse) SetUnProtectStatus(v UnprotectActionObjectLevelResponse) {
	o.UnProtectStatus = &v
}

func (o ActionObjectLevelResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ResumeStatus != nil {
		toSerialize["resumeStatus"] = o.ResumeStatus
	}
	if o.PauseStatus != nil {
		toSerialize["pauseStatus"] = o.PauseStatus
	}
	if o.RunNowStatus != nil {
		toSerialize["runNowStatus"] = o.RunNowStatus
	}
	if o.UnProtectStatus != nil {
		toSerialize["unProtectStatus"] = o.UnProtectStatus
	}
	return json.Marshal(toSerialize)
}

type NullableActionObjectLevelResponse struct {
	value *ActionObjectLevelResponse
	isSet bool
}

func (v NullableActionObjectLevelResponse) Get() *ActionObjectLevelResponse {
	return v.value
}

func (v *NullableActionObjectLevelResponse) Set(val *ActionObjectLevelResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableActionObjectLevelResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableActionObjectLevelResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionObjectLevelResponse(val *ActionObjectLevelResponse) *NullableActionObjectLevelResponse {
	return &NullableActionObjectLevelResponse{value: val, isSet: true}
}

func (v NullableActionObjectLevelResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionObjectLevelResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o ActionObjectLevelResponse) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}