/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// HeliosClaimRequest Specifies the request to register to Helios.
type HeliosClaimRequest struct {
	// Specifies the Helios registration token.
	RegistrationToken NullableString `json:"registrationToken"`
}

// NewHeliosClaimRequest instantiates a new HeliosClaimRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosClaimRequest(registrationToken NullableString) *HeliosClaimRequest {
	this := HeliosClaimRequest{}
	this.RegistrationToken = registrationToken
	return &this
}

// NewHeliosClaimRequestWithDefaults instantiates a new HeliosClaimRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosClaimRequestWithDefaults() *HeliosClaimRequest {
	this := HeliosClaimRequest{}
	return &this
}

// GetRegistrationToken returns the RegistrationToken field value
// If the value is explicit nil, the zero value for string will be returned
func (o *HeliosClaimRequest) GetRegistrationToken() string {
	if o == nil || o.RegistrationToken.Get() == nil {
		var ret string
		return ret
	}

	return *o.RegistrationToken.Get()
}

// GetRegistrationTokenOk returns a tuple with the RegistrationToken field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosClaimRequest) GetRegistrationTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RegistrationToken.Get(), o.RegistrationToken.IsSet()
}

// SetRegistrationToken sets field value
func (o *HeliosClaimRequest) SetRegistrationToken(v string) {
	o.RegistrationToken.Set(&v)
}

func (o HeliosClaimRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["registrationToken"] = o.RegistrationToken.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableHeliosClaimRequest struct {
	value *HeliosClaimRequest
	isSet bool
}

func (v NullableHeliosClaimRequest) Get() *HeliosClaimRequest {
	return v.value
}

func (v *NullableHeliosClaimRequest) Set(val *HeliosClaimRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosClaimRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosClaimRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosClaimRequest(val *HeliosClaimRequest) *NullableHeliosClaimRequest {
	return &NullableHeliosClaimRequest{value: val, isSet: true}
}

func (v NullableHeliosClaimRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosClaimRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o HeliosClaimRequest) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}