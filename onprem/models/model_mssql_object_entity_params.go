/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// MssqlObjectEntityParams Object details for Mssql.
type MssqlObjectEntityParams struct {
	HostInfo *HostInformation `json:"hostInfo,omitempty"`
	AagInfo *AAGInfo `json:"aagInfo,omitempty"`
}

// NewMssqlObjectEntityParams instantiates a new MssqlObjectEntityParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMssqlObjectEntityParams() *MssqlObjectEntityParams {
	this := MssqlObjectEntityParams{}
	return &this
}

// NewMssqlObjectEntityParamsWithDefaults instantiates a new MssqlObjectEntityParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMssqlObjectEntityParamsWithDefaults() *MssqlObjectEntityParams {
	this := MssqlObjectEntityParams{}
	return &this
}

// GetHostInfo returns the HostInfo field value if set, zero value otherwise.
func (o *MssqlObjectEntityParams) GetHostInfo() HostInformation {
	if o == nil || o.HostInfo == nil {
		var ret HostInformation
		return ret
	}
	return *o.HostInfo
}

// GetHostInfoOk returns a tuple with the HostInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MssqlObjectEntityParams) GetHostInfoOk() (*HostInformation, bool) {
	if o == nil || o.HostInfo == nil {
		return nil, false
	}
	return o.HostInfo, true
}

// HasHostInfo returns a boolean if a field has been set.
func (o *MssqlObjectEntityParams) HasHostInfo() bool {
	if o != nil && o.HostInfo != nil {
		return true
	}

	return false
}

// SetHostInfo gets a reference to the given HostInformation and assigns it to the HostInfo field.
func (o *MssqlObjectEntityParams) SetHostInfo(v HostInformation) {
	o.HostInfo = &v
}

// GetAagInfo returns the AagInfo field value if set, zero value otherwise.
func (o *MssqlObjectEntityParams) GetAagInfo() AAGInfo {
	if o == nil || o.AagInfo == nil {
		var ret AAGInfo
		return ret
	}
	return *o.AagInfo
}

// GetAagInfoOk returns a tuple with the AagInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MssqlObjectEntityParams) GetAagInfoOk() (*AAGInfo, bool) {
	if o == nil || o.AagInfo == nil {
		return nil, false
	}
	return o.AagInfo, true
}

// HasAagInfo returns a boolean if a field has been set.
func (o *MssqlObjectEntityParams) HasAagInfo() bool {
	if o != nil && o.AagInfo != nil {
		return true
	}

	return false
}

// SetAagInfo gets a reference to the given AAGInfo and assigns it to the AagInfo field.
func (o *MssqlObjectEntityParams) SetAagInfo(v AAGInfo) {
	o.AagInfo = &v
}

func (o MssqlObjectEntityParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HostInfo != nil {
		toSerialize["hostInfo"] = o.HostInfo
	}
	if o.AagInfo != nil {
		toSerialize["aagInfo"] = o.AagInfo
	}
	return json.Marshal(toSerialize)
}

type NullableMssqlObjectEntityParams struct {
	value *MssqlObjectEntityParams
	isSet bool
}

func (v NullableMssqlObjectEntityParams) Get() *MssqlObjectEntityParams {
	return v.value
}

func (v *NullableMssqlObjectEntityParams) Set(val *MssqlObjectEntityParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMssqlObjectEntityParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMssqlObjectEntityParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMssqlObjectEntityParams(val *MssqlObjectEntityParams) *NullableMssqlObjectEntityParams {
	return &NullableMssqlObjectEntityParams{value: val, isSet: true}
}

func (v NullableMssqlObjectEntityParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMssqlObjectEntityParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o MssqlObjectEntityParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}