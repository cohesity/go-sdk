/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// SearchMsTeamsRequestParams Specifies the request params to search for Teams items.
type SearchMsTeamsRequestParams struct {
	// Specifies the search string to filter the items. User can specify a wildcard character '*' as a suffix to a string where all item names are matched with the prefix string.
	SearchString NullableString `json:"searchString,omitempty"`
	// Specifies a list of Teams item types. Only items within the given types will be returned.
	Types []string `json:"types,omitempty"`
	// Specifies the name of the channel. Only items within the specified channel will be returned.
	ChannelName NullableString `json:"channelName,omitempty"`
}

// NewSearchMsTeamsRequestParams instantiates a new SearchMsTeamsRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchMsTeamsRequestParams() *SearchMsTeamsRequestParams {
	this := SearchMsTeamsRequestParams{}
	return &this
}

// NewSearchMsTeamsRequestParamsWithDefaults instantiates a new SearchMsTeamsRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchMsTeamsRequestParamsWithDefaults() *SearchMsTeamsRequestParams {
	this := SearchMsTeamsRequestParams{}
	return &this
}

// GetSearchString returns the SearchString field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchMsTeamsRequestParams) GetSearchString() string {
	if o == nil || o.SearchString.Get() == nil {
		var ret string
		return ret
	}
	return *o.SearchString.Get()
}

// GetSearchStringOk returns a tuple with the SearchString field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchMsTeamsRequestParams) GetSearchStringOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SearchString.Get(), o.SearchString.IsSet()
}

// HasSearchString returns a boolean if a field has been set.
func (o *SearchMsTeamsRequestParams) HasSearchString() bool {
	if o != nil && o.SearchString.IsSet() {
		return true
	}

	return false
}

// SetSearchString gets a reference to the given NullableString and assigns it to the SearchString field.
func (o *SearchMsTeamsRequestParams) SetSearchString(v string) {
	o.SearchString.Set(&v)
}
// SetSearchStringNil sets the value for SearchString to be an explicit nil
func (o *SearchMsTeamsRequestParams) SetSearchStringNil() {
	o.SearchString.Set(nil)
}

// UnsetSearchString ensures that no value is present for SearchString, not even an explicit nil
func (o *SearchMsTeamsRequestParams) UnsetSearchString() {
	o.SearchString.Unset()
}

// GetTypes returns the Types field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchMsTeamsRequestParams) GetTypes() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchMsTeamsRequestParams) GetTypesOk() (*[]string, bool) {
	if o == nil || o.Types == nil {
		return nil, false
	}
	return &o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *SearchMsTeamsRequestParams) HasTypes() bool {
	if o != nil && o.Types != nil {
		return true
	}

	return false
}

// SetTypes gets a reference to the given []string and assigns it to the Types field.
func (o *SearchMsTeamsRequestParams) SetTypes(v []string) {
	o.Types = v
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchMsTeamsRequestParams) GetChannelName() string {
	if o == nil || o.ChannelName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ChannelName.Get()
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchMsTeamsRequestParams) GetChannelNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ChannelName.Get(), o.ChannelName.IsSet()
}

// HasChannelName returns a boolean if a field has been set.
func (o *SearchMsTeamsRequestParams) HasChannelName() bool {
	if o != nil && o.ChannelName.IsSet() {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given NullableString and assigns it to the ChannelName field.
func (o *SearchMsTeamsRequestParams) SetChannelName(v string) {
	o.ChannelName.Set(&v)
}
// SetChannelNameNil sets the value for ChannelName to be an explicit nil
func (o *SearchMsTeamsRequestParams) SetChannelNameNil() {
	o.ChannelName.Set(nil)
}

// UnsetChannelName ensures that no value is present for ChannelName, not even an explicit nil
func (o *SearchMsTeamsRequestParams) UnsetChannelName() {
	o.ChannelName.Unset()
}

func (o SearchMsTeamsRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SearchString.IsSet() {
		toSerialize["searchString"] = o.SearchString.Get()
	}
	if o.Types != nil {
		toSerialize["types"] = o.Types
	}
	if o.ChannelName.IsSet() {
		toSerialize["channelName"] = o.ChannelName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSearchMsTeamsRequestParams struct {
	value *SearchMsTeamsRequestParams
	isSet bool
}

func (v NullableSearchMsTeamsRequestParams) Get() *SearchMsTeamsRequestParams {
	return v.value
}

func (v *NullableSearchMsTeamsRequestParams) Set(val *SearchMsTeamsRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchMsTeamsRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchMsTeamsRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchMsTeamsRequestParams(val *SearchMsTeamsRequestParams) *NullableSearchMsTeamsRequestParams {
	return &NullableSearchMsTeamsRequestParams{value: val, isSet: true}
}

func (v NullableSearchMsTeamsRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchMsTeamsRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o SearchMsTeamsRequestParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}