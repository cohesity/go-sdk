/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// ExchangeTargetParamsForRecoverExchangeApp Specifies the parameters to recover Exchange applications to an Exchange target.
type ExchangeTargetParamsForRecoverExchangeApp struct {
	Object RecoverExchangeAppSnapshotParams `json:"object"`
}

// NewExchangeTargetParamsForRecoverExchangeApp instantiates a new ExchangeTargetParamsForRecoverExchangeApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExchangeTargetParamsForRecoverExchangeApp(object RecoverExchangeAppSnapshotParams) *ExchangeTargetParamsForRecoverExchangeApp {
	this := ExchangeTargetParamsForRecoverExchangeApp{}
	this.Object = object
	return &this
}

// NewExchangeTargetParamsForRecoverExchangeAppWithDefaults instantiates a new ExchangeTargetParamsForRecoverExchangeApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExchangeTargetParamsForRecoverExchangeAppWithDefaults() *ExchangeTargetParamsForRecoverExchangeApp {
	this := ExchangeTargetParamsForRecoverExchangeApp{}
	return &this
}

// GetObject returns the Object field value
func (o *ExchangeTargetParamsForRecoverExchangeApp) GetObject() RecoverExchangeAppSnapshotParams {
	if o == nil {
		var ret RecoverExchangeAppSnapshotParams
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *ExchangeTargetParamsForRecoverExchangeApp) GetObjectOk() (*RecoverExchangeAppSnapshotParams, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *ExchangeTargetParamsForRecoverExchangeApp) SetObject(v RecoverExchangeAppSnapshotParams) {
	o.Object = v
}

func (o ExchangeTargetParamsForRecoverExchangeApp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["object"] = o.Object
	}
	return json.Marshal(toSerialize)
}

type NullableExchangeTargetParamsForRecoverExchangeApp struct {
	value *ExchangeTargetParamsForRecoverExchangeApp
	isSet bool
}

func (v NullableExchangeTargetParamsForRecoverExchangeApp) Get() *ExchangeTargetParamsForRecoverExchangeApp {
	return v.value
}

func (v *NullableExchangeTargetParamsForRecoverExchangeApp) Set(val *ExchangeTargetParamsForRecoverExchangeApp) {
	v.value = val
	v.isSet = true
}

func (v NullableExchangeTargetParamsForRecoverExchangeApp) IsSet() bool {
	return v.isSet
}

func (v *NullableExchangeTargetParamsForRecoverExchangeApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExchangeTargetParamsForRecoverExchangeApp(val *ExchangeTargetParamsForRecoverExchangeApp) *NullableExchangeTargetParamsForRecoverExchangeApp {
	return &NullableExchangeTargetParamsForRecoverExchangeApp{value: val, isSet: true}
}

func (v NullableExchangeTargetParamsForRecoverExchangeApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExchangeTargetParamsForRecoverExchangeApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o ExchangeTargetParamsForRecoverExchangeApp) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}