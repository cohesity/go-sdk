/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// Office365ProtectionGroupParams Specifies the parameters which are specific to Office 365 related Protection Groups.
type Office365ProtectionGroupParams struct {
	// Specifies the objects to be included in the Protection Group.
	Objects []Office365ProtectionGroupObjectParams `json:"objects"`
	// Specifies the objects to be excluded in the Protection Group.
	ExcludeObjectIds []int64 `json:"excludeObjectIds,omitempty"`
	IndexingPolicy *IndexingPolicy `json:"indexingPolicy,omitempty"`
	// Specifies the Office 365 Protection Group types.
	ProtectionTypes []string `json:"protectionTypes"`
	OutlookProtectionTypeParams *Office365OutlookProtectionGroupParams `json:"outlookProtectionTypeParams,omitempty"`
	OneDriveProtectionTypeParams *Office365OneDriveProtectionGroupParams `json:"oneDriveProtectionTypeParams,omitempty"`
	PublicFoldersProtectionTypeParams *Office365PublicFoldersProtectionGroupParams `json:"publicFoldersProtectionTypeParams,omitempty"`
	// Specifies the id of the parent of the objects.
	SourceId NullableInt64 `json:"sourceId,omitempty"`
	// Specifies the name of the parent of the objects.
	SourceName NullableString `json:"sourceName,omitempty"`
}

// NewOffice365ProtectionGroupParams instantiates a new Office365ProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOffice365ProtectionGroupParams(objects []Office365ProtectionGroupObjectParams, protectionTypes []string) *Office365ProtectionGroupParams {
	this := Office365ProtectionGroupParams{}
	this.Objects = objects
	this.ProtectionTypes = protectionTypes
	return &this
}

// NewOffice365ProtectionGroupParamsWithDefaults instantiates a new Office365ProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOffice365ProtectionGroupParamsWithDefaults() *Office365ProtectionGroupParams {
	this := Office365ProtectionGroupParams{}
	return &this
}

// GetObjects returns the Objects field value
func (o *Office365ProtectionGroupParams) GetObjects() []Office365ProtectionGroupObjectParams {
	if o == nil {
		var ret []Office365ProtectionGroupObjectParams
		return ret
	}

	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value
// and a boolean to check if the value has been set.
func (o *Office365ProtectionGroupParams) GetObjectsOk() (*[]Office365ProtectionGroupObjectParams, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Objects, true
}

// SetObjects sets field value
func (o *Office365ProtectionGroupParams) SetObjects(v []Office365ProtectionGroupObjectParams) {
	o.Objects = v
}

// GetExcludeObjectIds returns the ExcludeObjectIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Office365ProtectionGroupParams) GetExcludeObjectIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.ExcludeObjectIds
}

// GetExcludeObjectIdsOk returns a tuple with the ExcludeObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Office365ProtectionGroupParams) GetExcludeObjectIdsOk() (*[]int64, bool) {
	if o == nil || o.ExcludeObjectIds == nil {
		return nil, false
	}
	return &o.ExcludeObjectIds, true
}

// HasExcludeObjectIds returns a boolean if a field has been set.
func (o *Office365ProtectionGroupParams) HasExcludeObjectIds() bool {
	if o != nil && o.ExcludeObjectIds != nil {
		return true
	}

	return false
}

// SetExcludeObjectIds gets a reference to the given []int64 and assigns it to the ExcludeObjectIds field.
func (o *Office365ProtectionGroupParams) SetExcludeObjectIds(v []int64) {
	o.ExcludeObjectIds = v
}

// GetIndexingPolicy returns the IndexingPolicy field value if set, zero value otherwise.
func (o *Office365ProtectionGroupParams) GetIndexingPolicy() IndexingPolicy {
	if o == nil || o.IndexingPolicy == nil {
		var ret IndexingPolicy
		return ret
	}
	return *o.IndexingPolicy
}

// GetIndexingPolicyOk returns a tuple with the IndexingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office365ProtectionGroupParams) GetIndexingPolicyOk() (*IndexingPolicy, bool) {
	if o == nil || o.IndexingPolicy == nil {
		return nil, false
	}
	return o.IndexingPolicy, true
}

// HasIndexingPolicy returns a boolean if a field has been set.
func (o *Office365ProtectionGroupParams) HasIndexingPolicy() bool {
	if o != nil && o.IndexingPolicy != nil {
		return true
	}

	return false
}

// SetIndexingPolicy gets a reference to the given IndexingPolicy and assigns it to the IndexingPolicy field.
func (o *Office365ProtectionGroupParams) SetIndexingPolicy(v IndexingPolicy) {
	o.IndexingPolicy = &v
}

// GetProtectionTypes returns the ProtectionTypes field value
func (o *Office365ProtectionGroupParams) GetProtectionTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ProtectionTypes
}

// GetProtectionTypesOk returns a tuple with the ProtectionTypes field value
// and a boolean to check if the value has been set.
func (o *Office365ProtectionGroupParams) GetProtectionTypesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProtectionTypes, true
}

// SetProtectionTypes sets field value
func (o *Office365ProtectionGroupParams) SetProtectionTypes(v []string) {
	o.ProtectionTypes = v
}

// GetOutlookProtectionTypeParams returns the OutlookProtectionTypeParams field value if set, zero value otherwise.
func (o *Office365ProtectionGroupParams) GetOutlookProtectionTypeParams() Office365OutlookProtectionGroupParams {
	if o == nil || o.OutlookProtectionTypeParams == nil {
		var ret Office365OutlookProtectionGroupParams
		return ret
	}
	return *o.OutlookProtectionTypeParams
}

// GetOutlookProtectionTypeParamsOk returns a tuple with the OutlookProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office365ProtectionGroupParams) GetOutlookProtectionTypeParamsOk() (*Office365OutlookProtectionGroupParams, bool) {
	if o == nil || o.OutlookProtectionTypeParams == nil {
		return nil, false
	}
	return o.OutlookProtectionTypeParams, true
}

// HasOutlookProtectionTypeParams returns a boolean if a field has been set.
func (o *Office365ProtectionGroupParams) HasOutlookProtectionTypeParams() bool {
	if o != nil && o.OutlookProtectionTypeParams != nil {
		return true
	}

	return false
}

// SetOutlookProtectionTypeParams gets a reference to the given Office365OutlookProtectionGroupParams and assigns it to the OutlookProtectionTypeParams field.
func (o *Office365ProtectionGroupParams) SetOutlookProtectionTypeParams(v Office365OutlookProtectionGroupParams) {
	o.OutlookProtectionTypeParams = &v
}

// GetOneDriveProtectionTypeParams returns the OneDriveProtectionTypeParams field value if set, zero value otherwise.
func (o *Office365ProtectionGroupParams) GetOneDriveProtectionTypeParams() Office365OneDriveProtectionGroupParams {
	if o == nil || o.OneDriveProtectionTypeParams == nil {
		var ret Office365OneDriveProtectionGroupParams
		return ret
	}
	return *o.OneDriveProtectionTypeParams
}

// GetOneDriveProtectionTypeParamsOk returns a tuple with the OneDriveProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office365ProtectionGroupParams) GetOneDriveProtectionTypeParamsOk() (*Office365OneDriveProtectionGroupParams, bool) {
	if o == nil || o.OneDriveProtectionTypeParams == nil {
		return nil, false
	}
	return o.OneDriveProtectionTypeParams, true
}

// HasOneDriveProtectionTypeParams returns a boolean if a field has been set.
func (o *Office365ProtectionGroupParams) HasOneDriveProtectionTypeParams() bool {
	if o != nil && o.OneDriveProtectionTypeParams != nil {
		return true
	}

	return false
}

// SetOneDriveProtectionTypeParams gets a reference to the given Office365OneDriveProtectionGroupParams and assigns it to the OneDriveProtectionTypeParams field.
func (o *Office365ProtectionGroupParams) SetOneDriveProtectionTypeParams(v Office365OneDriveProtectionGroupParams) {
	o.OneDriveProtectionTypeParams = &v
}

// GetPublicFoldersProtectionTypeParams returns the PublicFoldersProtectionTypeParams field value if set, zero value otherwise.
func (o *Office365ProtectionGroupParams) GetPublicFoldersProtectionTypeParams() Office365PublicFoldersProtectionGroupParams {
	if o == nil || o.PublicFoldersProtectionTypeParams == nil {
		var ret Office365PublicFoldersProtectionGroupParams
		return ret
	}
	return *o.PublicFoldersProtectionTypeParams
}

// GetPublicFoldersProtectionTypeParamsOk returns a tuple with the PublicFoldersProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office365ProtectionGroupParams) GetPublicFoldersProtectionTypeParamsOk() (*Office365PublicFoldersProtectionGroupParams, bool) {
	if o == nil || o.PublicFoldersProtectionTypeParams == nil {
		return nil, false
	}
	return o.PublicFoldersProtectionTypeParams, true
}

// HasPublicFoldersProtectionTypeParams returns a boolean if a field has been set.
func (o *Office365ProtectionGroupParams) HasPublicFoldersProtectionTypeParams() bool {
	if o != nil && o.PublicFoldersProtectionTypeParams != nil {
		return true
	}

	return false
}

// SetPublicFoldersProtectionTypeParams gets a reference to the given Office365PublicFoldersProtectionGroupParams and assigns it to the PublicFoldersProtectionTypeParams field.
func (o *Office365ProtectionGroupParams) SetPublicFoldersProtectionTypeParams(v Office365PublicFoldersProtectionGroupParams) {
	o.PublicFoldersProtectionTypeParams = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Office365ProtectionGroupParams) GetSourceId() int64 {
	if o == nil || o.SourceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Office365ProtectionGroupParams) GetSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *Office365ProtectionGroupParams) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableInt64 and assigns it to the SourceId field.
func (o *Office365ProtectionGroupParams) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *Office365ProtectionGroupParams) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *Office365ProtectionGroupParams) UnsetSourceId() {
	o.SourceId.Unset()
}

// GetSourceName returns the SourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Office365ProtectionGroupParams) GetSourceName() string {
	if o == nil || o.SourceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceName.Get()
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Office365ProtectionGroupParams) GetSourceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceName.Get(), o.SourceName.IsSet()
}

// HasSourceName returns a boolean if a field has been set.
func (o *Office365ProtectionGroupParams) HasSourceName() bool {
	if o != nil && o.SourceName.IsSet() {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given NullableString and assigns it to the SourceName field.
func (o *Office365ProtectionGroupParams) SetSourceName(v string) {
	o.SourceName.Set(&v)
}
// SetSourceNameNil sets the value for SourceName to be an explicit nil
func (o *Office365ProtectionGroupParams) SetSourceNameNil() {
	o.SourceName.Set(nil)
}

// UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil
func (o *Office365ProtectionGroupParams) UnsetSourceName() {
	o.SourceName.Unset()
}

func (o Office365ProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["objects"] = o.Objects
	}
	if o.ExcludeObjectIds != nil {
		toSerialize["excludeObjectIds"] = o.ExcludeObjectIds
	}
	if o.IndexingPolicy != nil {
		toSerialize["indexingPolicy"] = o.IndexingPolicy
	}
	if true {
		toSerialize["protectionTypes"] = o.ProtectionTypes
	}
	if o.OutlookProtectionTypeParams != nil {
		toSerialize["outlookProtectionTypeParams"] = o.OutlookProtectionTypeParams
	}
	if o.OneDriveProtectionTypeParams != nil {
		toSerialize["oneDriveProtectionTypeParams"] = o.OneDriveProtectionTypeParams
	}
	if o.PublicFoldersProtectionTypeParams != nil {
		toSerialize["publicFoldersProtectionTypeParams"] = o.PublicFoldersProtectionTypeParams
	}
	if o.SourceId.IsSet() {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if o.SourceName.IsSet() {
		toSerialize["sourceName"] = o.SourceName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOffice365ProtectionGroupParams struct {
	value *Office365ProtectionGroupParams
	isSet bool
}

func (v NullableOffice365ProtectionGroupParams) Get() *Office365ProtectionGroupParams {
	return v.value
}

func (v *NullableOffice365ProtectionGroupParams) Set(val *Office365ProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableOffice365ProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableOffice365ProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOffice365ProtectionGroupParams(val *Office365ProtectionGroupParams) *NullableOffice365ProtectionGroupParams {
	return &NullableOffice365ProtectionGroupParams{value: val, isSet: true}
}

func (v NullableOffice365ProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOffice365ProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o Office365ProtectionGroupParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}