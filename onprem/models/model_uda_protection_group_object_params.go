/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// UdaProtectionGroupObjectParams Specifies the Universal Data Adapter object details.
type UdaProtectionGroupObjectParams struct {
	// Specifies the fully qualified name of the object.
	Name string `json:"name"`
}

// NewUdaProtectionGroupObjectParams instantiates a new UdaProtectionGroupObjectParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUdaProtectionGroupObjectParams(name string) *UdaProtectionGroupObjectParams {
	this := UdaProtectionGroupObjectParams{}
	this.Name = name
	return &this
}

// NewUdaProtectionGroupObjectParamsWithDefaults instantiates a new UdaProtectionGroupObjectParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUdaProtectionGroupObjectParamsWithDefaults() *UdaProtectionGroupObjectParams {
	this := UdaProtectionGroupObjectParams{}
	return &this
}

// GetName returns the Name field value
func (o *UdaProtectionGroupObjectParams) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UdaProtectionGroupObjectParams) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UdaProtectionGroupObjectParams) SetName(v string) {
	o.Name = v
}

func (o UdaProtectionGroupObjectParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableUdaProtectionGroupObjectParams struct {
	value *UdaProtectionGroupObjectParams
	isSet bool
}

func (v NullableUdaProtectionGroupObjectParams) Get() *UdaProtectionGroupObjectParams {
	return v.value
}

func (v *NullableUdaProtectionGroupObjectParams) Set(val *UdaProtectionGroupObjectParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUdaProtectionGroupObjectParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUdaProtectionGroupObjectParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUdaProtectionGroupObjectParams(val *UdaProtectionGroupObjectParams) *NullableUdaProtectionGroupObjectParams {
	return &NullableUdaProtectionGroupObjectParams{value: val, isSet: true}
}

func (v NullableUdaProtectionGroupObjectParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUdaProtectionGroupObjectParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o UdaProtectionGroupObjectParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}