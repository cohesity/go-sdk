/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// ProtectionRunsStats Specifies the statistics of protection runs.
type ProtectionRunsStats struct {
	// Specifies the status of protection runs.
	ProtectionRunStatus NullableString `json:"protectionRunStatus,omitempty"`
	// Specifies the number of protection runs.
	ProtectionRunsCount NullableInt64 `json:"protectionRunsCount,omitempty"`
}

// NewProtectionRunsStats instantiates a new ProtectionRunsStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionRunsStats() *ProtectionRunsStats {
	this := ProtectionRunsStats{}
	return &this
}

// NewProtectionRunsStatsWithDefaults instantiates a new ProtectionRunsStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionRunsStatsWithDefaults() *ProtectionRunsStats {
	this := ProtectionRunsStats{}
	return &this
}

// GetProtectionRunStatus returns the ProtectionRunStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunsStats) GetProtectionRunStatus() string {
	if o == nil || o.ProtectionRunStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProtectionRunStatus.Get()
}

// GetProtectionRunStatusOk returns a tuple with the ProtectionRunStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunsStats) GetProtectionRunStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionRunStatus.Get(), o.ProtectionRunStatus.IsSet()
}

// HasProtectionRunStatus returns a boolean if a field has been set.
func (o *ProtectionRunsStats) HasProtectionRunStatus() bool {
	if o != nil && o.ProtectionRunStatus.IsSet() {
		return true
	}

	return false
}

// SetProtectionRunStatus gets a reference to the given NullableString and assigns it to the ProtectionRunStatus field.
func (o *ProtectionRunsStats) SetProtectionRunStatus(v string) {
	o.ProtectionRunStatus.Set(&v)
}
// SetProtectionRunStatusNil sets the value for ProtectionRunStatus to be an explicit nil
func (o *ProtectionRunsStats) SetProtectionRunStatusNil() {
	o.ProtectionRunStatus.Set(nil)
}

// UnsetProtectionRunStatus ensures that no value is present for ProtectionRunStatus, not even an explicit nil
func (o *ProtectionRunsStats) UnsetProtectionRunStatus() {
	o.ProtectionRunStatus.Unset()
}

// GetProtectionRunsCount returns the ProtectionRunsCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunsStats) GetProtectionRunsCount() int64 {
	if o == nil || o.ProtectionRunsCount.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ProtectionRunsCount.Get()
}

// GetProtectionRunsCountOk returns a tuple with the ProtectionRunsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunsStats) GetProtectionRunsCountOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionRunsCount.Get(), o.ProtectionRunsCount.IsSet()
}

// HasProtectionRunsCount returns a boolean if a field has been set.
func (o *ProtectionRunsStats) HasProtectionRunsCount() bool {
	if o != nil && o.ProtectionRunsCount.IsSet() {
		return true
	}

	return false
}

// SetProtectionRunsCount gets a reference to the given NullableInt64 and assigns it to the ProtectionRunsCount field.
func (o *ProtectionRunsStats) SetProtectionRunsCount(v int64) {
	o.ProtectionRunsCount.Set(&v)
}
// SetProtectionRunsCountNil sets the value for ProtectionRunsCount to be an explicit nil
func (o *ProtectionRunsStats) SetProtectionRunsCountNil() {
	o.ProtectionRunsCount.Set(nil)
}

// UnsetProtectionRunsCount ensures that no value is present for ProtectionRunsCount, not even an explicit nil
func (o *ProtectionRunsStats) UnsetProtectionRunsCount() {
	o.ProtectionRunsCount.Unset()
}

func (o ProtectionRunsStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProtectionRunStatus.IsSet() {
		toSerialize["protectionRunStatus"] = o.ProtectionRunStatus.Get()
	}
	if o.ProtectionRunsCount.IsSet() {
		toSerialize["protectionRunsCount"] = o.ProtectionRunsCount.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProtectionRunsStats struct {
	value *ProtectionRunsStats
	isSet bool
}

func (v NullableProtectionRunsStats) Get() *ProtectionRunsStats {
	return v.value
}

func (v *NullableProtectionRunsStats) Set(val *ProtectionRunsStats) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionRunsStats) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionRunsStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionRunsStats(val *ProtectionRunsStats) *NullableProtectionRunsStats {
	return &NullableProtectionRunsStats{value: val, isSet: true}
}

func (v NullableProtectionRunsStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionRunsStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o ProtectionRunsStats) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}