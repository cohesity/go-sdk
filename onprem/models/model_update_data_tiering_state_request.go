/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// UpdateDataTieringStateRequest Specifies the parameters to perform an action on the data tiering groups for the specified Sources.
type UpdateDataTieringStateRequest struct {
	// Specifies the action to be performed on all the specified data tiering groups. 'Pause'  specifies to pause. 'Resume' specifies to resume.
	Action NullableString `json:"action"`
	// Specifies a list of data tiering groups ids for which the state should change.
	Ids []string `json:"ids"`
}

// NewUpdateDataTieringStateRequest instantiates a new UpdateDataTieringStateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDataTieringStateRequest(action NullableString, ids []string) *UpdateDataTieringStateRequest {
	this := UpdateDataTieringStateRequest{}
	this.Action = action
	this.Ids = ids
	return &this
}

// NewUpdateDataTieringStateRequestWithDefaults instantiates a new UpdateDataTieringStateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDataTieringStateRequestWithDefaults() *UpdateDataTieringStateRequest {
	this := UpdateDataTieringStateRequest{}
	return &this
}

// GetAction returns the Action field value
// If the value is explicit nil, the zero value for string will be returned
func (o *UpdateDataTieringStateRequest) GetAction() string {
	if o == nil || o.Action.Get() == nil {
		var ret string
		return ret
	}

	return *o.Action.Get()
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateDataTieringStateRequest) GetActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Action.Get(), o.Action.IsSet()
}

// SetAction sets field value
func (o *UpdateDataTieringStateRequest) SetAction(v string) {
	o.Action.Set(&v)
}

// GetIds returns the Ids field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *UpdateDataTieringStateRequest) GetIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateDataTieringStateRequest) GetIdsOk() (*[]string, bool) {
	if o == nil || o.Ids == nil {
		return nil, false
	}
	return &o.Ids, true
}

// SetIds sets field value
func (o *UpdateDataTieringStateRequest) SetIds(v []string) {
	o.Ids = v
}

func (o UpdateDataTieringStateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["action"] = o.Action.Get()
	}
	if o.Ids != nil {
		toSerialize["ids"] = o.Ids
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateDataTieringStateRequest struct {
	value *UpdateDataTieringStateRequest
	isSet bool
}

func (v NullableUpdateDataTieringStateRequest) Get() *UpdateDataTieringStateRequest {
	return v.value
}

func (v *NullableUpdateDataTieringStateRequest) Set(val *UpdateDataTieringStateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDataTieringStateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDataTieringStateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDataTieringStateRequest(val *UpdateDataTieringStateRequest) *NullableUpdateDataTieringStateRequest {
	return &NullableUpdateDataTieringStateRequest{value: val, isSet: true}
}

func (v NullableUpdateDataTieringStateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDataTieringStateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o UpdateDataTieringStateRequest) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}