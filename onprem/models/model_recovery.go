/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// Recovery Specifies a Recovery.
type Recovery struct {
	// Specifies the id of the Recovery.
	Id NullableString `json:"id,omitempty"`
	// Specifies the name of the Recovery.
	Name NullableString `json:"name,omitempty"`
	// Specifies the start time of the Recovery in Unix timestamp epoch in microseconds.
	StartTimeUsecs NullableInt64 `json:"startTimeUsecs,omitempty"`
	// Specifies the end time of the Recovery in Unix timestamp epoch in microseconds. This field will be populated only after Recovery is finished.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	// Status of the Recovery. 'Running' indicates that the Recovery is still running. 'Canceled' indicates that the Recovery has been cancelled. 'Canceling' indicates that the Recovery is in the process of being cancelled. 'Failed' indicates that the Recovery has failed. 'Succeeded' indicates that the Recovery has finished successfully. 'SucceededWithWarning' indicates that the Recovery finished successfully, but there were some warning messages.
	Status NullableString `json:"status,omitempty"`
	// Progress monitor task id for Recovery.
	ProgressTaskId NullableString `json:"progressTaskId,omitempty"`
	// Specifies the type of snapshot environment for which the Recovery was performed.
	SnapshotEnvironment *string `json:"snapshotEnvironment,omitempty"`
	// Specifies the type of recover action.
	RecoveryAction *string `json:"recoveryAction,omitempty"`
	// Specifies the list of tenants that have permissions for this recovery.
	Permissions []Tenant `json:"permissions,omitempty"`
	CreationInfo *CreationInfo `json:"creationInfo,omitempty"`
	// Specifies whether it's possible to tear down the objects created by the recovery.
	CanTearDown NullableBool `json:"canTearDown,omitempty"`
	// Specifies the status of the tear down operation. This is only set when the canTearDown is set to true. 'DestroyScheduled' indicates that the tear down is ready to schedule. 'Destroying' indicates that the tear down is still running. 'Destroyed' indicates that the tear down succeeded. 'DestroyError' indicates that the tear down failed.
	TearDownStatus NullableString `json:"tearDownStatus,omitempty"`
	// Specifies the error message about the tear down operation if it fails.
	TearDownMessage NullableString `json:"tearDownMessage,omitempty"`
	// Specifies messages about the recovery.
	Messages []string `json:"messages,omitempty"`
	// Specifies whether the current recovery operation has created child recoveries. This is currently used in SQL recovery where multiple child recoveries can be tracked under a common/parent recovery.
	IsParentRecovery NullableBool `json:"isParentRecovery,omitempty"`
	// If current recovery is child recovery triggered by another parent recovery operation, then this field willt specify the id of the parent recovery.
	ParentRecoveryId NullableString `json:"parentRecoveryId,omitempty"`
	// Specifies the list of persistent state of a retrieve of an archive task.
	RetrieveArchiveTasks []RetrieveArchiveTask `json:"retrieveArchiveTasks,omitempty"`
	VmwareParams *RecoverVmwareParams `json:"vmwareParams,omitempty"`
	AwsParams *RecoverAwsParams `json:"awsParams,omitempty"`
	GcpParams *RecoverGcpParams `json:"gcpParams,omitempty"`
	AzureParams *RecoverAzureParams `json:"azureParams,omitempty"`
	KvmParams *RecoverKvmParams `json:"kvmParams,omitempty"`
	AcropolisParams *RecoverAcropolisParams `json:"acropolisParams,omitempty"`
	MssqlParams *RecoverSqlParams `json:"mssqlParams,omitempty"`
	NetappParams *RecoverNetappParams `json:"netappParams,omitempty"`
	GenericNasParams *RecoverGenericNasParams `json:"genericNasParams,omitempty"`
	IsilonParams *RecoverIsilonParams `json:"isilonParams,omitempty"`
	FlashbladeParams *RecoverFlashbladeParams `json:"flashbladeParams,omitempty"`
	ElastifileParams *RecoverElastifileParams `json:"elastifileParams,omitempty"`
	GpfsParams *RecoverGpfsParams `json:"gpfsParams,omitempty"`
	PhysicalParams *RecoverPhysicalParams `json:"physicalParams,omitempty"`
	HypervParams *RecoverHyperVParams `json:"hypervParams,omitempty"`
	ExchangeParams *RecoverExchangeParams `json:"exchangeParams,omitempty"`
	CassandraParams *CassandraParams `json:"cassandraParams,omitempty"`
	UdaParams *UdaParams `json:"udaParams,omitempty"`
	CouchbaseParams *CouchbaseParams `json:"couchbaseParams,omitempty"`
	HbaseParams *HbaseParams `json:"hbaseParams,omitempty"`
	HdfsParams *HdfsParams `json:"hdfsParams,omitempty"`
	HiveParams *HiveParams `json:"hiveParams,omitempty"`
	MongodbParams *MongodbParams `json:"mongodbParams,omitempty"`
	PureParams *RecoverPureParams `json:"pureParams,omitempty"`
	Office365Params *RecoverO365Params `json:"office365Params,omitempty"`
	KubernetesParams *RecoverKubernetesParams `json:"kubernetesParams,omitempty"`
	OracleParams *RecoverOracleParams `json:"oracleParams,omitempty"`
	ViewParams *RecoverViewParams `json:"viewParams,omitempty"`
}

// NewRecovery instantiates a new Recovery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecovery() *Recovery {
	this := Recovery{}
	return &this
}

// NewRecoveryWithDefaults instantiates a new Recovery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoveryWithDefaults() *Recovery {
	this := Recovery{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Recovery) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Recovery) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *Recovery) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *Recovery) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *Recovery) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *Recovery) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Recovery) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Recovery) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *Recovery) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *Recovery) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *Recovery) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *Recovery) UnsetName() {
	o.Name.Unset()
}

// GetStartTimeUsecs returns the StartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Recovery) GetStartTimeUsecs() int64 {
	if o == nil || o.StartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StartTimeUsecs.Get()
}

// GetStartTimeUsecsOk returns a tuple with the StartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Recovery) GetStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartTimeUsecs.Get(), o.StartTimeUsecs.IsSet()
}

// HasStartTimeUsecs returns a boolean if a field has been set.
func (o *Recovery) HasStartTimeUsecs() bool {
	if o != nil && o.StartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the StartTimeUsecs field.
func (o *Recovery) SetStartTimeUsecs(v int64) {
	o.StartTimeUsecs.Set(&v)
}
// SetStartTimeUsecsNil sets the value for StartTimeUsecs to be an explicit nil
func (o *Recovery) SetStartTimeUsecsNil() {
	o.StartTimeUsecs.Set(nil)
}

// UnsetStartTimeUsecs ensures that no value is present for StartTimeUsecs, not even an explicit nil
func (o *Recovery) UnsetStartTimeUsecs() {
	o.StartTimeUsecs.Unset()
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Recovery) GetEndTimeUsecs() int64 {
	if o == nil || o.EndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Recovery) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *Recovery) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *Recovery) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *Recovery) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *Recovery) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Recovery) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Recovery) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *Recovery) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *Recovery) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *Recovery) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *Recovery) UnsetStatus() {
	o.Status.Unset()
}

// GetProgressTaskId returns the ProgressTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Recovery) GetProgressTaskId() string {
	if o == nil || o.ProgressTaskId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProgressTaskId.Get()
}

// GetProgressTaskIdOk returns a tuple with the ProgressTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Recovery) GetProgressTaskIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProgressTaskId.Get(), o.ProgressTaskId.IsSet()
}

// HasProgressTaskId returns a boolean if a field has been set.
func (o *Recovery) HasProgressTaskId() bool {
	if o != nil && o.ProgressTaskId.IsSet() {
		return true
	}

	return false
}

// SetProgressTaskId gets a reference to the given NullableString and assigns it to the ProgressTaskId field.
func (o *Recovery) SetProgressTaskId(v string) {
	o.ProgressTaskId.Set(&v)
}
// SetProgressTaskIdNil sets the value for ProgressTaskId to be an explicit nil
func (o *Recovery) SetProgressTaskIdNil() {
	o.ProgressTaskId.Set(nil)
}

// UnsetProgressTaskId ensures that no value is present for ProgressTaskId, not even an explicit nil
func (o *Recovery) UnsetProgressTaskId() {
	o.ProgressTaskId.Unset()
}

// GetSnapshotEnvironment returns the SnapshotEnvironment field value if set, zero value otherwise.
func (o *Recovery) GetSnapshotEnvironment() string {
	if o == nil || o.SnapshotEnvironment == nil {
		var ret string
		return ret
	}
	return *o.SnapshotEnvironment
}

// GetSnapshotEnvironmentOk returns a tuple with the SnapshotEnvironment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetSnapshotEnvironmentOk() (*string, bool) {
	if o == nil || o.SnapshotEnvironment == nil {
		return nil, false
	}
	return o.SnapshotEnvironment, true
}

// HasSnapshotEnvironment returns a boolean if a field has been set.
func (o *Recovery) HasSnapshotEnvironment() bool {
	if o != nil && o.SnapshotEnvironment != nil {
		return true
	}

	return false
}

// SetSnapshotEnvironment gets a reference to the given string and assigns it to the SnapshotEnvironment field.
func (o *Recovery) SetSnapshotEnvironment(v string) {
	o.SnapshotEnvironment = &v
}

// GetRecoveryAction returns the RecoveryAction field value if set, zero value otherwise.
func (o *Recovery) GetRecoveryAction() string {
	if o == nil || o.RecoveryAction == nil {
		var ret string
		return ret
	}
	return *o.RecoveryAction
}

// GetRecoveryActionOk returns a tuple with the RecoveryAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetRecoveryActionOk() (*string, bool) {
	if o == nil || o.RecoveryAction == nil {
		return nil, false
	}
	return o.RecoveryAction, true
}

// HasRecoveryAction returns a boolean if a field has been set.
func (o *Recovery) HasRecoveryAction() bool {
	if o != nil && o.RecoveryAction != nil {
		return true
	}

	return false
}

// SetRecoveryAction gets a reference to the given string and assigns it to the RecoveryAction field.
func (o *Recovery) SetRecoveryAction(v string) {
	o.RecoveryAction = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Recovery) GetPermissions() []Tenant {
	if o == nil  {
		var ret []Tenant
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Recovery) GetPermissionsOk() (*[]Tenant, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return &o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *Recovery) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []Tenant and assigns it to the Permissions field.
func (o *Recovery) SetPermissions(v []Tenant) {
	o.Permissions = v
}

// GetCreationInfo returns the CreationInfo field value if set, zero value otherwise.
func (o *Recovery) GetCreationInfo() CreationInfo {
	if o == nil || o.CreationInfo == nil {
		var ret CreationInfo
		return ret
	}
	return *o.CreationInfo
}

// GetCreationInfoOk returns a tuple with the CreationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetCreationInfoOk() (*CreationInfo, bool) {
	if o == nil || o.CreationInfo == nil {
		return nil, false
	}
	return o.CreationInfo, true
}

// HasCreationInfo returns a boolean if a field has been set.
func (o *Recovery) HasCreationInfo() bool {
	if o != nil && o.CreationInfo != nil {
		return true
	}

	return false
}

// SetCreationInfo gets a reference to the given CreationInfo and assigns it to the CreationInfo field.
func (o *Recovery) SetCreationInfo(v CreationInfo) {
	o.CreationInfo = &v
}

// GetCanTearDown returns the CanTearDown field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Recovery) GetCanTearDown() bool {
	if o == nil || o.CanTearDown.Get() == nil {
		var ret bool
		return ret
	}
	return *o.CanTearDown.Get()
}

// GetCanTearDownOk returns a tuple with the CanTearDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Recovery) GetCanTearDownOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CanTearDown.Get(), o.CanTearDown.IsSet()
}

// HasCanTearDown returns a boolean if a field has been set.
func (o *Recovery) HasCanTearDown() bool {
	if o != nil && o.CanTearDown.IsSet() {
		return true
	}

	return false
}

// SetCanTearDown gets a reference to the given NullableBool and assigns it to the CanTearDown field.
func (o *Recovery) SetCanTearDown(v bool) {
	o.CanTearDown.Set(&v)
}
// SetCanTearDownNil sets the value for CanTearDown to be an explicit nil
func (o *Recovery) SetCanTearDownNil() {
	o.CanTearDown.Set(nil)
}

// UnsetCanTearDown ensures that no value is present for CanTearDown, not even an explicit nil
func (o *Recovery) UnsetCanTearDown() {
	o.CanTearDown.Unset()
}

// GetTearDownStatus returns the TearDownStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Recovery) GetTearDownStatus() string {
	if o == nil || o.TearDownStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.TearDownStatus.Get()
}

// GetTearDownStatusOk returns a tuple with the TearDownStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Recovery) GetTearDownStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TearDownStatus.Get(), o.TearDownStatus.IsSet()
}

// HasTearDownStatus returns a boolean if a field has been set.
func (o *Recovery) HasTearDownStatus() bool {
	if o != nil && o.TearDownStatus.IsSet() {
		return true
	}

	return false
}

// SetTearDownStatus gets a reference to the given NullableString and assigns it to the TearDownStatus field.
func (o *Recovery) SetTearDownStatus(v string) {
	o.TearDownStatus.Set(&v)
}
// SetTearDownStatusNil sets the value for TearDownStatus to be an explicit nil
func (o *Recovery) SetTearDownStatusNil() {
	o.TearDownStatus.Set(nil)
}

// UnsetTearDownStatus ensures that no value is present for TearDownStatus, not even an explicit nil
func (o *Recovery) UnsetTearDownStatus() {
	o.TearDownStatus.Unset()
}

// GetTearDownMessage returns the TearDownMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Recovery) GetTearDownMessage() string {
	if o == nil || o.TearDownMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.TearDownMessage.Get()
}

// GetTearDownMessageOk returns a tuple with the TearDownMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Recovery) GetTearDownMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TearDownMessage.Get(), o.TearDownMessage.IsSet()
}

// HasTearDownMessage returns a boolean if a field has been set.
func (o *Recovery) HasTearDownMessage() bool {
	if o != nil && o.TearDownMessage.IsSet() {
		return true
	}

	return false
}

// SetTearDownMessage gets a reference to the given NullableString and assigns it to the TearDownMessage field.
func (o *Recovery) SetTearDownMessage(v string) {
	o.TearDownMessage.Set(&v)
}
// SetTearDownMessageNil sets the value for TearDownMessage to be an explicit nil
func (o *Recovery) SetTearDownMessageNil() {
	o.TearDownMessage.Set(nil)
}

// UnsetTearDownMessage ensures that no value is present for TearDownMessage, not even an explicit nil
func (o *Recovery) UnsetTearDownMessage() {
	o.TearDownMessage.Unset()
}

// GetMessages returns the Messages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Recovery) GetMessages() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Recovery) GetMessagesOk() (*[]string, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return &o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *Recovery) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []string and assigns it to the Messages field.
func (o *Recovery) SetMessages(v []string) {
	o.Messages = v
}

// GetIsParentRecovery returns the IsParentRecovery field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Recovery) GetIsParentRecovery() bool {
	if o == nil || o.IsParentRecovery.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsParentRecovery.Get()
}

// GetIsParentRecoveryOk returns a tuple with the IsParentRecovery field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Recovery) GetIsParentRecoveryOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsParentRecovery.Get(), o.IsParentRecovery.IsSet()
}

// HasIsParentRecovery returns a boolean if a field has been set.
func (o *Recovery) HasIsParentRecovery() bool {
	if o != nil && o.IsParentRecovery.IsSet() {
		return true
	}

	return false
}

// SetIsParentRecovery gets a reference to the given NullableBool and assigns it to the IsParentRecovery field.
func (o *Recovery) SetIsParentRecovery(v bool) {
	o.IsParentRecovery.Set(&v)
}
// SetIsParentRecoveryNil sets the value for IsParentRecovery to be an explicit nil
func (o *Recovery) SetIsParentRecoveryNil() {
	o.IsParentRecovery.Set(nil)
}

// UnsetIsParentRecovery ensures that no value is present for IsParentRecovery, not even an explicit nil
func (o *Recovery) UnsetIsParentRecovery() {
	o.IsParentRecovery.Unset()
}

// GetParentRecoveryId returns the ParentRecoveryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Recovery) GetParentRecoveryId() string {
	if o == nil || o.ParentRecoveryId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ParentRecoveryId.Get()
}

// GetParentRecoveryIdOk returns a tuple with the ParentRecoveryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Recovery) GetParentRecoveryIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ParentRecoveryId.Get(), o.ParentRecoveryId.IsSet()
}

// HasParentRecoveryId returns a boolean if a field has been set.
func (o *Recovery) HasParentRecoveryId() bool {
	if o != nil && o.ParentRecoveryId.IsSet() {
		return true
	}

	return false
}

// SetParentRecoveryId gets a reference to the given NullableString and assigns it to the ParentRecoveryId field.
func (o *Recovery) SetParentRecoveryId(v string) {
	o.ParentRecoveryId.Set(&v)
}
// SetParentRecoveryIdNil sets the value for ParentRecoveryId to be an explicit nil
func (o *Recovery) SetParentRecoveryIdNil() {
	o.ParentRecoveryId.Set(nil)
}

// UnsetParentRecoveryId ensures that no value is present for ParentRecoveryId, not even an explicit nil
func (o *Recovery) UnsetParentRecoveryId() {
	o.ParentRecoveryId.Unset()
}

// GetRetrieveArchiveTasks returns the RetrieveArchiveTasks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Recovery) GetRetrieveArchiveTasks() []RetrieveArchiveTask {
	if o == nil  {
		var ret []RetrieveArchiveTask
		return ret
	}
	return o.RetrieveArchiveTasks
}

// GetRetrieveArchiveTasksOk returns a tuple with the RetrieveArchiveTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Recovery) GetRetrieveArchiveTasksOk() (*[]RetrieveArchiveTask, bool) {
	if o == nil || o.RetrieveArchiveTasks == nil {
		return nil, false
	}
	return &o.RetrieveArchiveTasks, true
}

// HasRetrieveArchiveTasks returns a boolean if a field has been set.
func (o *Recovery) HasRetrieveArchiveTasks() bool {
	if o != nil && o.RetrieveArchiveTasks != nil {
		return true
	}

	return false
}

// SetRetrieveArchiveTasks gets a reference to the given []RetrieveArchiveTask and assigns it to the RetrieveArchiveTasks field.
func (o *Recovery) SetRetrieveArchiveTasks(v []RetrieveArchiveTask) {
	o.RetrieveArchiveTasks = v
}

// GetVmwareParams returns the VmwareParams field value if set, zero value otherwise.
func (o *Recovery) GetVmwareParams() RecoverVmwareParams {
	if o == nil || o.VmwareParams == nil {
		var ret RecoverVmwareParams
		return ret
	}
	return *o.VmwareParams
}

// GetVmwareParamsOk returns a tuple with the VmwareParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetVmwareParamsOk() (*RecoverVmwareParams, bool) {
	if o == nil || o.VmwareParams == nil {
		return nil, false
	}
	return o.VmwareParams, true
}

// HasVmwareParams returns a boolean if a field has been set.
func (o *Recovery) HasVmwareParams() bool {
	if o != nil && o.VmwareParams != nil {
		return true
	}

	return false
}

// SetVmwareParams gets a reference to the given RecoverVmwareParams and assigns it to the VmwareParams field.
func (o *Recovery) SetVmwareParams(v RecoverVmwareParams) {
	o.VmwareParams = &v
}

// GetAwsParams returns the AwsParams field value if set, zero value otherwise.
func (o *Recovery) GetAwsParams() RecoverAwsParams {
	if o == nil || o.AwsParams == nil {
		var ret RecoverAwsParams
		return ret
	}
	return *o.AwsParams
}

// GetAwsParamsOk returns a tuple with the AwsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetAwsParamsOk() (*RecoverAwsParams, bool) {
	if o == nil || o.AwsParams == nil {
		return nil, false
	}
	return o.AwsParams, true
}

// HasAwsParams returns a boolean if a field has been set.
func (o *Recovery) HasAwsParams() bool {
	if o != nil && o.AwsParams != nil {
		return true
	}

	return false
}

// SetAwsParams gets a reference to the given RecoverAwsParams and assigns it to the AwsParams field.
func (o *Recovery) SetAwsParams(v RecoverAwsParams) {
	o.AwsParams = &v
}

// GetGcpParams returns the GcpParams field value if set, zero value otherwise.
func (o *Recovery) GetGcpParams() RecoverGcpParams {
	if o == nil || o.GcpParams == nil {
		var ret RecoverGcpParams
		return ret
	}
	return *o.GcpParams
}

// GetGcpParamsOk returns a tuple with the GcpParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetGcpParamsOk() (*RecoverGcpParams, bool) {
	if o == nil || o.GcpParams == nil {
		return nil, false
	}
	return o.GcpParams, true
}

// HasGcpParams returns a boolean if a field has been set.
func (o *Recovery) HasGcpParams() bool {
	if o != nil && o.GcpParams != nil {
		return true
	}

	return false
}

// SetGcpParams gets a reference to the given RecoverGcpParams and assigns it to the GcpParams field.
func (o *Recovery) SetGcpParams(v RecoverGcpParams) {
	o.GcpParams = &v
}

// GetAzureParams returns the AzureParams field value if set, zero value otherwise.
func (o *Recovery) GetAzureParams() RecoverAzureParams {
	if o == nil || o.AzureParams == nil {
		var ret RecoverAzureParams
		return ret
	}
	return *o.AzureParams
}

// GetAzureParamsOk returns a tuple with the AzureParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetAzureParamsOk() (*RecoverAzureParams, bool) {
	if o == nil || o.AzureParams == nil {
		return nil, false
	}
	return o.AzureParams, true
}

// HasAzureParams returns a boolean if a field has been set.
func (o *Recovery) HasAzureParams() bool {
	if o != nil && o.AzureParams != nil {
		return true
	}

	return false
}

// SetAzureParams gets a reference to the given RecoverAzureParams and assigns it to the AzureParams field.
func (o *Recovery) SetAzureParams(v RecoverAzureParams) {
	o.AzureParams = &v
}

// GetKvmParams returns the KvmParams field value if set, zero value otherwise.
func (o *Recovery) GetKvmParams() RecoverKvmParams {
	if o == nil || o.KvmParams == nil {
		var ret RecoverKvmParams
		return ret
	}
	return *o.KvmParams
}

// GetKvmParamsOk returns a tuple with the KvmParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetKvmParamsOk() (*RecoverKvmParams, bool) {
	if o == nil || o.KvmParams == nil {
		return nil, false
	}
	return o.KvmParams, true
}

// HasKvmParams returns a boolean if a field has been set.
func (o *Recovery) HasKvmParams() bool {
	if o != nil && o.KvmParams != nil {
		return true
	}

	return false
}

// SetKvmParams gets a reference to the given RecoverKvmParams and assigns it to the KvmParams field.
func (o *Recovery) SetKvmParams(v RecoverKvmParams) {
	o.KvmParams = &v
}

// GetAcropolisParams returns the AcropolisParams field value if set, zero value otherwise.
func (o *Recovery) GetAcropolisParams() RecoverAcropolisParams {
	if o == nil || o.AcropolisParams == nil {
		var ret RecoverAcropolisParams
		return ret
	}
	return *o.AcropolisParams
}

// GetAcropolisParamsOk returns a tuple with the AcropolisParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetAcropolisParamsOk() (*RecoverAcropolisParams, bool) {
	if o == nil || o.AcropolisParams == nil {
		return nil, false
	}
	return o.AcropolisParams, true
}

// HasAcropolisParams returns a boolean if a field has been set.
func (o *Recovery) HasAcropolisParams() bool {
	if o != nil && o.AcropolisParams != nil {
		return true
	}

	return false
}

// SetAcropolisParams gets a reference to the given RecoverAcropolisParams and assigns it to the AcropolisParams field.
func (o *Recovery) SetAcropolisParams(v RecoverAcropolisParams) {
	o.AcropolisParams = &v
}

// GetMssqlParams returns the MssqlParams field value if set, zero value otherwise.
func (o *Recovery) GetMssqlParams() RecoverSqlParams {
	if o == nil || o.MssqlParams == nil {
		var ret RecoverSqlParams
		return ret
	}
	return *o.MssqlParams
}

// GetMssqlParamsOk returns a tuple with the MssqlParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetMssqlParamsOk() (*RecoverSqlParams, bool) {
	if o == nil || o.MssqlParams == nil {
		return nil, false
	}
	return o.MssqlParams, true
}

// HasMssqlParams returns a boolean if a field has been set.
func (o *Recovery) HasMssqlParams() bool {
	if o != nil && o.MssqlParams != nil {
		return true
	}

	return false
}

// SetMssqlParams gets a reference to the given RecoverSqlParams and assigns it to the MssqlParams field.
func (o *Recovery) SetMssqlParams(v RecoverSqlParams) {
	o.MssqlParams = &v
}

// GetNetappParams returns the NetappParams field value if set, zero value otherwise.
func (o *Recovery) GetNetappParams() RecoverNetappParams {
	if o == nil || o.NetappParams == nil {
		var ret RecoverNetappParams
		return ret
	}
	return *o.NetappParams
}

// GetNetappParamsOk returns a tuple with the NetappParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetNetappParamsOk() (*RecoverNetappParams, bool) {
	if o == nil || o.NetappParams == nil {
		return nil, false
	}
	return o.NetappParams, true
}

// HasNetappParams returns a boolean if a field has been set.
func (o *Recovery) HasNetappParams() bool {
	if o != nil && o.NetappParams != nil {
		return true
	}

	return false
}

// SetNetappParams gets a reference to the given RecoverNetappParams and assigns it to the NetappParams field.
func (o *Recovery) SetNetappParams(v RecoverNetappParams) {
	o.NetappParams = &v
}

// GetGenericNasParams returns the GenericNasParams field value if set, zero value otherwise.
func (o *Recovery) GetGenericNasParams() RecoverGenericNasParams {
	if o == nil || o.GenericNasParams == nil {
		var ret RecoverGenericNasParams
		return ret
	}
	return *o.GenericNasParams
}

// GetGenericNasParamsOk returns a tuple with the GenericNasParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetGenericNasParamsOk() (*RecoverGenericNasParams, bool) {
	if o == nil || o.GenericNasParams == nil {
		return nil, false
	}
	return o.GenericNasParams, true
}

// HasGenericNasParams returns a boolean if a field has been set.
func (o *Recovery) HasGenericNasParams() bool {
	if o != nil && o.GenericNasParams != nil {
		return true
	}

	return false
}

// SetGenericNasParams gets a reference to the given RecoverGenericNasParams and assigns it to the GenericNasParams field.
func (o *Recovery) SetGenericNasParams(v RecoverGenericNasParams) {
	o.GenericNasParams = &v
}

// GetIsilonParams returns the IsilonParams field value if set, zero value otherwise.
func (o *Recovery) GetIsilonParams() RecoverIsilonParams {
	if o == nil || o.IsilonParams == nil {
		var ret RecoverIsilonParams
		return ret
	}
	return *o.IsilonParams
}

// GetIsilonParamsOk returns a tuple with the IsilonParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetIsilonParamsOk() (*RecoverIsilonParams, bool) {
	if o == nil || o.IsilonParams == nil {
		return nil, false
	}
	return o.IsilonParams, true
}

// HasIsilonParams returns a boolean if a field has been set.
func (o *Recovery) HasIsilonParams() bool {
	if o != nil && o.IsilonParams != nil {
		return true
	}

	return false
}

// SetIsilonParams gets a reference to the given RecoverIsilonParams and assigns it to the IsilonParams field.
func (o *Recovery) SetIsilonParams(v RecoverIsilonParams) {
	o.IsilonParams = &v
}

// GetFlashbladeParams returns the FlashbladeParams field value if set, zero value otherwise.
func (o *Recovery) GetFlashbladeParams() RecoverFlashbladeParams {
	if o == nil || o.FlashbladeParams == nil {
		var ret RecoverFlashbladeParams
		return ret
	}
	return *o.FlashbladeParams
}

// GetFlashbladeParamsOk returns a tuple with the FlashbladeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetFlashbladeParamsOk() (*RecoverFlashbladeParams, bool) {
	if o == nil || o.FlashbladeParams == nil {
		return nil, false
	}
	return o.FlashbladeParams, true
}

// HasFlashbladeParams returns a boolean if a field has been set.
func (o *Recovery) HasFlashbladeParams() bool {
	if o != nil && o.FlashbladeParams != nil {
		return true
	}

	return false
}

// SetFlashbladeParams gets a reference to the given RecoverFlashbladeParams and assigns it to the FlashbladeParams field.
func (o *Recovery) SetFlashbladeParams(v RecoverFlashbladeParams) {
	o.FlashbladeParams = &v
}

// GetElastifileParams returns the ElastifileParams field value if set, zero value otherwise.
func (o *Recovery) GetElastifileParams() RecoverElastifileParams {
	if o == nil || o.ElastifileParams == nil {
		var ret RecoverElastifileParams
		return ret
	}
	return *o.ElastifileParams
}

// GetElastifileParamsOk returns a tuple with the ElastifileParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetElastifileParamsOk() (*RecoverElastifileParams, bool) {
	if o == nil || o.ElastifileParams == nil {
		return nil, false
	}
	return o.ElastifileParams, true
}

// HasElastifileParams returns a boolean if a field has been set.
func (o *Recovery) HasElastifileParams() bool {
	if o != nil && o.ElastifileParams != nil {
		return true
	}

	return false
}

// SetElastifileParams gets a reference to the given RecoverElastifileParams and assigns it to the ElastifileParams field.
func (o *Recovery) SetElastifileParams(v RecoverElastifileParams) {
	o.ElastifileParams = &v
}

// GetGpfsParams returns the GpfsParams field value if set, zero value otherwise.
func (o *Recovery) GetGpfsParams() RecoverGpfsParams {
	if o == nil || o.GpfsParams == nil {
		var ret RecoverGpfsParams
		return ret
	}
	return *o.GpfsParams
}

// GetGpfsParamsOk returns a tuple with the GpfsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetGpfsParamsOk() (*RecoverGpfsParams, bool) {
	if o == nil || o.GpfsParams == nil {
		return nil, false
	}
	return o.GpfsParams, true
}

// HasGpfsParams returns a boolean if a field has been set.
func (o *Recovery) HasGpfsParams() bool {
	if o != nil && o.GpfsParams != nil {
		return true
	}

	return false
}

// SetGpfsParams gets a reference to the given RecoverGpfsParams and assigns it to the GpfsParams field.
func (o *Recovery) SetGpfsParams(v RecoverGpfsParams) {
	o.GpfsParams = &v
}

// GetPhysicalParams returns the PhysicalParams field value if set, zero value otherwise.
func (o *Recovery) GetPhysicalParams() RecoverPhysicalParams {
	if o == nil || o.PhysicalParams == nil {
		var ret RecoverPhysicalParams
		return ret
	}
	return *o.PhysicalParams
}

// GetPhysicalParamsOk returns a tuple with the PhysicalParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetPhysicalParamsOk() (*RecoverPhysicalParams, bool) {
	if o == nil || o.PhysicalParams == nil {
		return nil, false
	}
	return o.PhysicalParams, true
}

// HasPhysicalParams returns a boolean if a field has been set.
func (o *Recovery) HasPhysicalParams() bool {
	if o != nil && o.PhysicalParams != nil {
		return true
	}

	return false
}

// SetPhysicalParams gets a reference to the given RecoverPhysicalParams and assigns it to the PhysicalParams field.
func (o *Recovery) SetPhysicalParams(v RecoverPhysicalParams) {
	o.PhysicalParams = &v
}

// GetHypervParams returns the HypervParams field value if set, zero value otherwise.
func (o *Recovery) GetHypervParams() RecoverHyperVParams {
	if o == nil || o.HypervParams == nil {
		var ret RecoverHyperVParams
		return ret
	}
	return *o.HypervParams
}

// GetHypervParamsOk returns a tuple with the HypervParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetHypervParamsOk() (*RecoverHyperVParams, bool) {
	if o == nil || o.HypervParams == nil {
		return nil, false
	}
	return o.HypervParams, true
}

// HasHypervParams returns a boolean if a field has been set.
func (o *Recovery) HasHypervParams() bool {
	if o != nil && o.HypervParams != nil {
		return true
	}

	return false
}

// SetHypervParams gets a reference to the given RecoverHyperVParams and assigns it to the HypervParams field.
func (o *Recovery) SetHypervParams(v RecoverHyperVParams) {
	o.HypervParams = &v
}

// GetExchangeParams returns the ExchangeParams field value if set, zero value otherwise.
func (o *Recovery) GetExchangeParams() RecoverExchangeParams {
	if o == nil || o.ExchangeParams == nil {
		var ret RecoverExchangeParams
		return ret
	}
	return *o.ExchangeParams
}

// GetExchangeParamsOk returns a tuple with the ExchangeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetExchangeParamsOk() (*RecoverExchangeParams, bool) {
	if o == nil || o.ExchangeParams == nil {
		return nil, false
	}
	return o.ExchangeParams, true
}

// HasExchangeParams returns a boolean if a field has been set.
func (o *Recovery) HasExchangeParams() bool {
	if o != nil && o.ExchangeParams != nil {
		return true
	}

	return false
}

// SetExchangeParams gets a reference to the given RecoverExchangeParams and assigns it to the ExchangeParams field.
func (o *Recovery) SetExchangeParams(v RecoverExchangeParams) {
	o.ExchangeParams = &v
}

// GetCassandraParams returns the CassandraParams field value if set, zero value otherwise.
func (o *Recovery) GetCassandraParams() CassandraParams {
	if o == nil || o.CassandraParams == nil {
		var ret CassandraParams
		return ret
	}
	return *o.CassandraParams
}

// GetCassandraParamsOk returns a tuple with the CassandraParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetCassandraParamsOk() (*CassandraParams, bool) {
	if o == nil || o.CassandraParams == nil {
		return nil, false
	}
	return o.CassandraParams, true
}

// HasCassandraParams returns a boolean if a field has been set.
func (o *Recovery) HasCassandraParams() bool {
	if o != nil && o.CassandraParams != nil {
		return true
	}

	return false
}

// SetCassandraParams gets a reference to the given CassandraParams and assigns it to the CassandraParams field.
func (o *Recovery) SetCassandraParams(v CassandraParams) {
	o.CassandraParams = &v
}

// GetUdaParams returns the UdaParams field value if set, zero value otherwise.
func (o *Recovery) GetUdaParams() UdaParams {
	if o == nil || o.UdaParams == nil {
		var ret UdaParams
		return ret
	}
	return *o.UdaParams
}

// GetUdaParamsOk returns a tuple with the UdaParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetUdaParamsOk() (*UdaParams, bool) {
	if o == nil || o.UdaParams == nil {
		return nil, false
	}
	return o.UdaParams, true
}

// HasUdaParams returns a boolean if a field has been set.
func (o *Recovery) HasUdaParams() bool {
	if o != nil && o.UdaParams != nil {
		return true
	}

	return false
}

// SetUdaParams gets a reference to the given UdaParams and assigns it to the UdaParams field.
func (o *Recovery) SetUdaParams(v UdaParams) {
	o.UdaParams = &v
}

// GetCouchbaseParams returns the CouchbaseParams field value if set, zero value otherwise.
func (o *Recovery) GetCouchbaseParams() CouchbaseParams {
	if o == nil || o.CouchbaseParams == nil {
		var ret CouchbaseParams
		return ret
	}
	return *o.CouchbaseParams
}

// GetCouchbaseParamsOk returns a tuple with the CouchbaseParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetCouchbaseParamsOk() (*CouchbaseParams, bool) {
	if o == nil || o.CouchbaseParams == nil {
		return nil, false
	}
	return o.CouchbaseParams, true
}

// HasCouchbaseParams returns a boolean if a field has been set.
func (o *Recovery) HasCouchbaseParams() bool {
	if o != nil && o.CouchbaseParams != nil {
		return true
	}

	return false
}

// SetCouchbaseParams gets a reference to the given CouchbaseParams and assigns it to the CouchbaseParams field.
func (o *Recovery) SetCouchbaseParams(v CouchbaseParams) {
	o.CouchbaseParams = &v
}

// GetHbaseParams returns the HbaseParams field value if set, zero value otherwise.
func (o *Recovery) GetHbaseParams() HbaseParams {
	if o == nil || o.HbaseParams == nil {
		var ret HbaseParams
		return ret
	}
	return *o.HbaseParams
}

// GetHbaseParamsOk returns a tuple with the HbaseParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetHbaseParamsOk() (*HbaseParams, bool) {
	if o == nil || o.HbaseParams == nil {
		return nil, false
	}
	return o.HbaseParams, true
}

// HasHbaseParams returns a boolean if a field has been set.
func (o *Recovery) HasHbaseParams() bool {
	if o != nil && o.HbaseParams != nil {
		return true
	}

	return false
}

// SetHbaseParams gets a reference to the given HbaseParams and assigns it to the HbaseParams field.
func (o *Recovery) SetHbaseParams(v HbaseParams) {
	o.HbaseParams = &v
}

// GetHdfsParams returns the HdfsParams field value if set, zero value otherwise.
func (o *Recovery) GetHdfsParams() HdfsParams {
	if o == nil || o.HdfsParams == nil {
		var ret HdfsParams
		return ret
	}
	return *o.HdfsParams
}

// GetHdfsParamsOk returns a tuple with the HdfsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetHdfsParamsOk() (*HdfsParams, bool) {
	if o == nil || o.HdfsParams == nil {
		return nil, false
	}
	return o.HdfsParams, true
}

// HasHdfsParams returns a boolean if a field has been set.
func (o *Recovery) HasHdfsParams() bool {
	if o != nil && o.HdfsParams != nil {
		return true
	}

	return false
}

// SetHdfsParams gets a reference to the given HdfsParams and assigns it to the HdfsParams field.
func (o *Recovery) SetHdfsParams(v HdfsParams) {
	o.HdfsParams = &v
}

// GetHiveParams returns the HiveParams field value if set, zero value otherwise.
func (o *Recovery) GetHiveParams() HiveParams {
	if o == nil || o.HiveParams == nil {
		var ret HiveParams
		return ret
	}
	return *o.HiveParams
}

// GetHiveParamsOk returns a tuple with the HiveParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetHiveParamsOk() (*HiveParams, bool) {
	if o == nil || o.HiveParams == nil {
		return nil, false
	}
	return o.HiveParams, true
}

// HasHiveParams returns a boolean if a field has been set.
func (o *Recovery) HasHiveParams() bool {
	if o != nil && o.HiveParams != nil {
		return true
	}

	return false
}

// SetHiveParams gets a reference to the given HiveParams and assigns it to the HiveParams field.
func (o *Recovery) SetHiveParams(v HiveParams) {
	o.HiveParams = &v
}

// GetMongodbParams returns the MongodbParams field value if set, zero value otherwise.
func (o *Recovery) GetMongodbParams() MongodbParams {
	if o == nil || o.MongodbParams == nil {
		var ret MongodbParams
		return ret
	}
	return *o.MongodbParams
}

// GetMongodbParamsOk returns a tuple with the MongodbParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetMongodbParamsOk() (*MongodbParams, bool) {
	if o == nil || o.MongodbParams == nil {
		return nil, false
	}
	return o.MongodbParams, true
}

// HasMongodbParams returns a boolean if a field has been set.
func (o *Recovery) HasMongodbParams() bool {
	if o != nil && o.MongodbParams != nil {
		return true
	}

	return false
}

// SetMongodbParams gets a reference to the given MongodbParams and assigns it to the MongodbParams field.
func (o *Recovery) SetMongodbParams(v MongodbParams) {
	o.MongodbParams = &v
}

// GetPureParams returns the PureParams field value if set, zero value otherwise.
func (o *Recovery) GetPureParams() RecoverPureParams {
	if o == nil || o.PureParams == nil {
		var ret RecoverPureParams
		return ret
	}
	return *o.PureParams
}

// GetPureParamsOk returns a tuple with the PureParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetPureParamsOk() (*RecoverPureParams, bool) {
	if o == nil || o.PureParams == nil {
		return nil, false
	}
	return o.PureParams, true
}

// HasPureParams returns a boolean if a field has been set.
func (o *Recovery) HasPureParams() bool {
	if o != nil && o.PureParams != nil {
		return true
	}

	return false
}

// SetPureParams gets a reference to the given RecoverPureParams and assigns it to the PureParams field.
func (o *Recovery) SetPureParams(v RecoverPureParams) {
	o.PureParams = &v
}

// GetOffice365Params returns the Office365Params field value if set, zero value otherwise.
func (o *Recovery) GetOffice365Params() RecoverO365Params {
	if o == nil || o.Office365Params == nil {
		var ret RecoverO365Params
		return ret
	}
	return *o.Office365Params
}

// GetOffice365ParamsOk returns a tuple with the Office365Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetOffice365ParamsOk() (*RecoverO365Params, bool) {
	if o == nil || o.Office365Params == nil {
		return nil, false
	}
	return o.Office365Params, true
}

// HasOffice365Params returns a boolean if a field has been set.
func (o *Recovery) HasOffice365Params() bool {
	if o != nil && o.Office365Params != nil {
		return true
	}

	return false
}

// SetOffice365Params gets a reference to the given RecoverO365Params and assigns it to the Office365Params field.
func (o *Recovery) SetOffice365Params(v RecoverO365Params) {
	o.Office365Params = &v
}

// GetKubernetesParams returns the KubernetesParams field value if set, zero value otherwise.
func (o *Recovery) GetKubernetesParams() RecoverKubernetesParams {
	if o == nil || o.KubernetesParams == nil {
		var ret RecoverKubernetesParams
		return ret
	}
	return *o.KubernetesParams
}

// GetKubernetesParamsOk returns a tuple with the KubernetesParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetKubernetesParamsOk() (*RecoverKubernetesParams, bool) {
	if o == nil || o.KubernetesParams == nil {
		return nil, false
	}
	return o.KubernetesParams, true
}

// HasKubernetesParams returns a boolean if a field has been set.
func (o *Recovery) HasKubernetesParams() bool {
	if o != nil && o.KubernetesParams != nil {
		return true
	}

	return false
}

// SetKubernetesParams gets a reference to the given RecoverKubernetesParams and assigns it to the KubernetesParams field.
func (o *Recovery) SetKubernetesParams(v RecoverKubernetesParams) {
	o.KubernetesParams = &v
}

// GetOracleParams returns the OracleParams field value if set, zero value otherwise.
func (o *Recovery) GetOracleParams() RecoverOracleParams {
	if o == nil || o.OracleParams == nil {
		var ret RecoverOracleParams
		return ret
	}
	return *o.OracleParams
}

// GetOracleParamsOk returns a tuple with the OracleParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetOracleParamsOk() (*RecoverOracleParams, bool) {
	if o == nil || o.OracleParams == nil {
		return nil, false
	}
	return o.OracleParams, true
}

// HasOracleParams returns a boolean if a field has been set.
func (o *Recovery) HasOracleParams() bool {
	if o != nil && o.OracleParams != nil {
		return true
	}

	return false
}

// SetOracleParams gets a reference to the given RecoverOracleParams and assigns it to the OracleParams field.
func (o *Recovery) SetOracleParams(v RecoverOracleParams) {
	o.OracleParams = &v
}

// GetViewParams returns the ViewParams field value if set, zero value otherwise.
func (o *Recovery) GetViewParams() RecoverViewParams {
	if o == nil || o.ViewParams == nil {
		var ret RecoverViewParams
		return ret
	}
	return *o.ViewParams
}

// GetViewParamsOk returns a tuple with the ViewParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recovery) GetViewParamsOk() (*RecoverViewParams, bool) {
	if o == nil || o.ViewParams == nil {
		return nil, false
	}
	return o.ViewParams, true
}

// HasViewParams returns a boolean if a field has been set.
func (o *Recovery) HasViewParams() bool {
	if o != nil && o.ViewParams != nil {
		return true
	}

	return false
}

// SetViewParams gets a reference to the given RecoverViewParams and assigns it to the ViewParams field.
func (o *Recovery) SetViewParams(v RecoverViewParams) {
	o.ViewParams = &v
}

func (o Recovery) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.StartTimeUsecs.IsSet() {
		toSerialize["startTimeUsecs"] = o.StartTimeUsecs.Get()
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.ProgressTaskId.IsSet() {
		toSerialize["progressTaskId"] = o.ProgressTaskId.Get()
	}
	if o.SnapshotEnvironment != nil {
		toSerialize["snapshotEnvironment"] = o.SnapshotEnvironment
	}
	if o.RecoveryAction != nil {
		toSerialize["recoveryAction"] = o.RecoveryAction
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.CreationInfo != nil {
		toSerialize["creationInfo"] = o.CreationInfo
	}
	if o.CanTearDown.IsSet() {
		toSerialize["canTearDown"] = o.CanTearDown.Get()
	}
	if o.TearDownStatus.IsSet() {
		toSerialize["tearDownStatus"] = o.TearDownStatus.Get()
	}
	if o.TearDownMessage.IsSet() {
		toSerialize["tearDownMessage"] = o.TearDownMessage.Get()
	}
	if o.Messages != nil {
		toSerialize["messages"] = o.Messages
	}
	if o.IsParentRecovery.IsSet() {
		toSerialize["isParentRecovery"] = o.IsParentRecovery.Get()
	}
	if o.ParentRecoveryId.IsSet() {
		toSerialize["parentRecoveryId"] = o.ParentRecoveryId.Get()
	}
	if o.RetrieveArchiveTasks != nil {
		toSerialize["retrieveArchiveTasks"] = o.RetrieveArchiveTasks
	}
	if o.VmwareParams != nil {
		toSerialize["vmwareParams"] = o.VmwareParams
	}
	if o.AwsParams != nil {
		toSerialize["awsParams"] = o.AwsParams
	}
	if o.GcpParams != nil {
		toSerialize["gcpParams"] = o.GcpParams
	}
	if o.AzureParams != nil {
		toSerialize["azureParams"] = o.AzureParams
	}
	if o.KvmParams != nil {
		toSerialize["kvmParams"] = o.KvmParams
	}
	if o.AcropolisParams != nil {
		toSerialize["acropolisParams"] = o.AcropolisParams
	}
	if o.MssqlParams != nil {
		toSerialize["mssqlParams"] = o.MssqlParams
	}
	if o.NetappParams != nil {
		toSerialize["netappParams"] = o.NetappParams
	}
	if o.GenericNasParams != nil {
		toSerialize["genericNasParams"] = o.GenericNasParams
	}
	if o.IsilonParams != nil {
		toSerialize["isilonParams"] = o.IsilonParams
	}
	if o.FlashbladeParams != nil {
		toSerialize["flashbladeParams"] = o.FlashbladeParams
	}
	if o.ElastifileParams != nil {
		toSerialize["elastifileParams"] = o.ElastifileParams
	}
	if o.GpfsParams != nil {
		toSerialize["gpfsParams"] = o.GpfsParams
	}
	if o.PhysicalParams != nil {
		toSerialize["physicalParams"] = o.PhysicalParams
	}
	if o.HypervParams != nil {
		toSerialize["hypervParams"] = o.HypervParams
	}
	if o.ExchangeParams != nil {
		toSerialize["exchangeParams"] = o.ExchangeParams
	}
	if o.CassandraParams != nil {
		toSerialize["cassandraParams"] = o.CassandraParams
	}
	if o.UdaParams != nil {
		toSerialize["udaParams"] = o.UdaParams
	}
	if o.CouchbaseParams != nil {
		toSerialize["couchbaseParams"] = o.CouchbaseParams
	}
	if o.HbaseParams != nil {
		toSerialize["hbaseParams"] = o.HbaseParams
	}
	if o.HdfsParams != nil {
		toSerialize["hdfsParams"] = o.HdfsParams
	}
	if o.HiveParams != nil {
		toSerialize["hiveParams"] = o.HiveParams
	}
	if o.MongodbParams != nil {
		toSerialize["mongodbParams"] = o.MongodbParams
	}
	if o.PureParams != nil {
		toSerialize["pureParams"] = o.PureParams
	}
	if o.Office365Params != nil {
		toSerialize["office365Params"] = o.Office365Params
	}
	if o.KubernetesParams != nil {
		toSerialize["kubernetesParams"] = o.KubernetesParams
	}
	if o.OracleParams != nil {
		toSerialize["oracleParams"] = o.OracleParams
	}
	if o.ViewParams != nil {
		toSerialize["viewParams"] = o.ViewParams
	}
	return json.Marshal(toSerialize)
}

type NullableRecovery struct {
	value *Recovery
	isSet bool
}

func (v NullableRecovery) Get() *Recovery {
	return v.value
}

func (v *NullableRecovery) Set(val *Recovery) {
	v.value = val
	v.isSet = true
}

func (v NullableRecovery) IsSet() bool {
	return v.isSet
}

func (v *NullableRecovery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecovery(val *Recovery) *NullableRecovery {
	return &NullableRecovery{value: val, isSet: true}
}

func (v NullableRecovery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecovery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o Recovery) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}