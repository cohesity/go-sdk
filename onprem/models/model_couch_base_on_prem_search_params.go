/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// CouchBaseOnPremSearchParams Parameters required to search CouchBase on a cluster.
type CouchBaseOnPremSearchParams struct {
	// Specifies the search string to search the Couchbase Objects
	SearchString NullableString `json:"searchString"`
	// Specifies Couchbase object types be searched. For Couchbase it can only be set to 'CouchbaseBuckets'.
	CouchbaseObjectTypes []string `json:"couchbaseObjectTypes"`
	// Specifies a list of source ids. Only files found in these sources will be returned.
	SourceIds []int64 `json:"sourceIds,omitempty"`
}

// NewCouchBaseOnPremSearchParams instantiates a new CouchBaseOnPremSearchParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCouchBaseOnPremSearchParams(searchString NullableString, couchbaseObjectTypes []string) *CouchBaseOnPremSearchParams {
	this := CouchBaseOnPremSearchParams{}
	this.SearchString = searchString
	this.CouchbaseObjectTypes = couchbaseObjectTypes
	return &this
}

// NewCouchBaseOnPremSearchParamsWithDefaults instantiates a new CouchBaseOnPremSearchParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCouchBaseOnPremSearchParamsWithDefaults() *CouchBaseOnPremSearchParams {
	this := CouchBaseOnPremSearchParams{}
	return &this
}

// GetSearchString returns the SearchString field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CouchBaseOnPremSearchParams) GetSearchString() string {
	if o == nil || o.SearchString.Get() == nil {
		var ret string
		return ret
	}

	return *o.SearchString.Get()
}

// GetSearchStringOk returns a tuple with the SearchString field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CouchBaseOnPremSearchParams) GetSearchStringOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SearchString.Get(), o.SearchString.IsSet()
}

// SetSearchString sets field value
func (o *CouchBaseOnPremSearchParams) SetSearchString(v string) {
	o.SearchString.Set(&v)
}

// GetCouchbaseObjectTypes returns the CouchbaseObjectTypes field value
func (o *CouchBaseOnPremSearchParams) GetCouchbaseObjectTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.CouchbaseObjectTypes
}

// GetCouchbaseObjectTypesOk returns a tuple with the CouchbaseObjectTypes field value
// and a boolean to check if the value has been set.
func (o *CouchBaseOnPremSearchParams) GetCouchbaseObjectTypesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CouchbaseObjectTypes, true
}

// SetCouchbaseObjectTypes sets field value
func (o *CouchBaseOnPremSearchParams) SetCouchbaseObjectTypes(v []string) {
	o.CouchbaseObjectTypes = v
}

// GetSourceIds returns the SourceIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CouchBaseOnPremSearchParams) GetSourceIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.SourceIds
}

// GetSourceIdsOk returns a tuple with the SourceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CouchBaseOnPremSearchParams) GetSourceIdsOk() (*[]int64, bool) {
	if o == nil || o.SourceIds == nil {
		return nil, false
	}
	return &o.SourceIds, true
}

// HasSourceIds returns a boolean if a field has been set.
func (o *CouchBaseOnPremSearchParams) HasSourceIds() bool {
	if o != nil && o.SourceIds != nil {
		return true
	}

	return false
}

// SetSourceIds gets a reference to the given []int64 and assigns it to the SourceIds field.
func (o *CouchBaseOnPremSearchParams) SetSourceIds(v []int64) {
	o.SourceIds = v
}

func (o CouchBaseOnPremSearchParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["searchString"] = o.SearchString.Get()
	}
	if true {
		toSerialize["couchbaseObjectTypes"] = o.CouchbaseObjectTypes
	}
	if o.SourceIds != nil {
		toSerialize["sourceIds"] = o.SourceIds
	}
	return json.Marshal(toSerialize)
}

type NullableCouchBaseOnPremSearchParams struct {
	value *CouchBaseOnPremSearchParams
	isSet bool
}

func (v NullableCouchBaseOnPremSearchParams) Get() *CouchBaseOnPremSearchParams {
	return v.value
}

func (v *NullableCouchBaseOnPremSearchParams) Set(val *CouchBaseOnPremSearchParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCouchBaseOnPremSearchParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCouchBaseOnPremSearchParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCouchBaseOnPremSearchParams(val *CouchBaseOnPremSearchParams) *NullableCouchBaseOnPremSearchParams {
	return &NullableCouchBaseOnPremSearchParams{value: val, isSet: true}
}

func (v NullableCouchBaseOnPremSearchParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCouchBaseOnPremSearchParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o CouchBaseOnPremSearchParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}