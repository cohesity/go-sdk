/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// UdaProtectionGroupParams Specifies parameters related to the Universal Data Adapter Protection job.
type UdaProtectionGroupParams struct {
	// Specifies the source Id of the objects to be protected.
	SourceId NullableInt64 `json:"sourceId"`
	// Specifies a list of fully qualified names of the objects to be protected.
	Objects []UdaProtectionGroupObjectParams `json:"objects"`
	// Specifies the custom arguments to be supplied to the full backup script when a full backup is enabled in the policy.
	FullBackupArgs NullableString `json:"fullBackupArgs,omitempty"`
	// Specifies the custom arguments to be supplied to the incremental backup script when an incremental backup is enabled in the policy.
	IncrBackupArgs NullableString `json:"incrBackupArgs,omitempty"`
	// Specifies the custom arguments to be supplied to the log backup script when a log backup is enabled in the policy.
	LogBackupArgs NullableString `json:"logBackupArgs,omitempty"`
	// Specifies the maximum number of concurrent IO Streams that will be created to exchange data with the cluster. If not specified, the default value is taken as 1.
	Concurrency NullableInt32 `json:"concurrency,omitempty"`
	// Specifies the maximum number of view mounts per host. If not specified, the default value is taken as 1.
	Mounts NullableInt32 `json:"mounts,omitempty"`
}

// NewUdaProtectionGroupParams instantiates a new UdaProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUdaProtectionGroupParams(sourceId NullableInt64, objects []UdaProtectionGroupObjectParams) *UdaProtectionGroupParams {
	this := UdaProtectionGroupParams{}
	this.SourceId = sourceId
	this.Objects = objects
	var concurrency int32 = 1
	this.Concurrency = *NewNullableInt32(&concurrency)
	var mounts int32 = 1
	this.Mounts = *NewNullableInt32(&mounts)
	return &this
}

// NewUdaProtectionGroupParamsWithDefaults instantiates a new UdaProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUdaProtectionGroupParamsWithDefaults() *UdaProtectionGroupParams {
	this := UdaProtectionGroupParams{}
	var concurrency int32 = 1
	this.Concurrency = *NewNullableInt32(&concurrency)
	var mounts int32 = 1
	this.Mounts = *NewNullableInt32(&mounts)
	return &this
}

// GetSourceId returns the SourceId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *UdaProtectionGroupParams) GetSourceId() int64 {
	if o == nil || o.SourceId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaProtectionGroupParams) GetSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// SetSourceId sets field value
func (o *UdaProtectionGroupParams) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}

// GetObjects returns the Objects field value
func (o *UdaProtectionGroupParams) GetObjects() []UdaProtectionGroupObjectParams {
	if o == nil {
		var ret []UdaProtectionGroupObjectParams
		return ret
	}

	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value
// and a boolean to check if the value has been set.
func (o *UdaProtectionGroupParams) GetObjectsOk() (*[]UdaProtectionGroupObjectParams, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Objects, true
}

// SetObjects sets field value
func (o *UdaProtectionGroupParams) SetObjects(v []UdaProtectionGroupObjectParams) {
	o.Objects = v
}

// GetFullBackupArgs returns the FullBackupArgs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaProtectionGroupParams) GetFullBackupArgs() string {
	if o == nil || o.FullBackupArgs.Get() == nil {
		var ret string
		return ret
	}
	return *o.FullBackupArgs.Get()
}

// GetFullBackupArgsOk returns a tuple with the FullBackupArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaProtectionGroupParams) GetFullBackupArgsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FullBackupArgs.Get(), o.FullBackupArgs.IsSet()
}

// HasFullBackupArgs returns a boolean if a field has been set.
func (o *UdaProtectionGroupParams) HasFullBackupArgs() bool {
	if o != nil && o.FullBackupArgs.IsSet() {
		return true
	}

	return false
}

// SetFullBackupArgs gets a reference to the given NullableString and assigns it to the FullBackupArgs field.
func (o *UdaProtectionGroupParams) SetFullBackupArgs(v string) {
	o.FullBackupArgs.Set(&v)
}
// SetFullBackupArgsNil sets the value for FullBackupArgs to be an explicit nil
func (o *UdaProtectionGroupParams) SetFullBackupArgsNil() {
	o.FullBackupArgs.Set(nil)
}

// UnsetFullBackupArgs ensures that no value is present for FullBackupArgs, not even an explicit nil
func (o *UdaProtectionGroupParams) UnsetFullBackupArgs() {
	o.FullBackupArgs.Unset()
}

// GetIncrBackupArgs returns the IncrBackupArgs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaProtectionGroupParams) GetIncrBackupArgs() string {
	if o == nil || o.IncrBackupArgs.Get() == nil {
		var ret string
		return ret
	}
	return *o.IncrBackupArgs.Get()
}

// GetIncrBackupArgsOk returns a tuple with the IncrBackupArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaProtectionGroupParams) GetIncrBackupArgsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IncrBackupArgs.Get(), o.IncrBackupArgs.IsSet()
}

// HasIncrBackupArgs returns a boolean if a field has been set.
func (o *UdaProtectionGroupParams) HasIncrBackupArgs() bool {
	if o != nil && o.IncrBackupArgs.IsSet() {
		return true
	}

	return false
}

// SetIncrBackupArgs gets a reference to the given NullableString and assigns it to the IncrBackupArgs field.
func (o *UdaProtectionGroupParams) SetIncrBackupArgs(v string) {
	o.IncrBackupArgs.Set(&v)
}
// SetIncrBackupArgsNil sets the value for IncrBackupArgs to be an explicit nil
func (o *UdaProtectionGroupParams) SetIncrBackupArgsNil() {
	o.IncrBackupArgs.Set(nil)
}

// UnsetIncrBackupArgs ensures that no value is present for IncrBackupArgs, not even an explicit nil
func (o *UdaProtectionGroupParams) UnsetIncrBackupArgs() {
	o.IncrBackupArgs.Unset()
}

// GetLogBackupArgs returns the LogBackupArgs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaProtectionGroupParams) GetLogBackupArgs() string {
	if o == nil || o.LogBackupArgs.Get() == nil {
		var ret string
		return ret
	}
	return *o.LogBackupArgs.Get()
}

// GetLogBackupArgsOk returns a tuple with the LogBackupArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaProtectionGroupParams) GetLogBackupArgsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LogBackupArgs.Get(), o.LogBackupArgs.IsSet()
}

// HasLogBackupArgs returns a boolean if a field has been set.
func (o *UdaProtectionGroupParams) HasLogBackupArgs() bool {
	if o != nil && o.LogBackupArgs.IsSet() {
		return true
	}

	return false
}

// SetLogBackupArgs gets a reference to the given NullableString and assigns it to the LogBackupArgs field.
func (o *UdaProtectionGroupParams) SetLogBackupArgs(v string) {
	o.LogBackupArgs.Set(&v)
}
// SetLogBackupArgsNil sets the value for LogBackupArgs to be an explicit nil
func (o *UdaProtectionGroupParams) SetLogBackupArgsNil() {
	o.LogBackupArgs.Set(nil)
}

// UnsetLogBackupArgs ensures that no value is present for LogBackupArgs, not even an explicit nil
func (o *UdaProtectionGroupParams) UnsetLogBackupArgs() {
	o.LogBackupArgs.Unset()
}

// GetConcurrency returns the Concurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaProtectionGroupParams) GetConcurrency() int32 {
	if o == nil || o.Concurrency.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Concurrency.Get()
}

// GetConcurrencyOk returns a tuple with the Concurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaProtectionGroupParams) GetConcurrencyOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Concurrency.Get(), o.Concurrency.IsSet()
}

// HasConcurrency returns a boolean if a field has been set.
func (o *UdaProtectionGroupParams) HasConcurrency() bool {
	if o != nil && o.Concurrency.IsSet() {
		return true
	}

	return false
}

// SetConcurrency gets a reference to the given NullableInt32 and assigns it to the Concurrency field.
func (o *UdaProtectionGroupParams) SetConcurrency(v int32) {
	o.Concurrency.Set(&v)
}
// SetConcurrencyNil sets the value for Concurrency to be an explicit nil
func (o *UdaProtectionGroupParams) SetConcurrencyNil() {
	o.Concurrency.Set(nil)
}

// UnsetConcurrency ensures that no value is present for Concurrency, not even an explicit nil
func (o *UdaProtectionGroupParams) UnsetConcurrency() {
	o.Concurrency.Unset()
}

// GetMounts returns the Mounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UdaProtectionGroupParams) GetMounts() int32 {
	if o == nil || o.Mounts.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Mounts.Get()
}

// GetMountsOk returns a tuple with the Mounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UdaProtectionGroupParams) GetMountsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Mounts.Get(), o.Mounts.IsSet()
}

// HasMounts returns a boolean if a field has been set.
func (o *UdaProtectionGroupParams) HasMounts() bool {
	if o != nil && o.Mounts.IsSet() {
		return true
	}

	return false
}

// SetMounts gets a reference to the given NullableInt32 and assigns it to the Mounts field.
func (o *UdaProtectionGroupParams) SetMounts(v int32) {
	o.Mounts.Set(&v)
}
// SetMountsNil sets the value for Mounts to be an explicit nil
func (o *UdaProtectionGroupParams) SetMountsNil() {
	o.Mounts.Set(nil)
}

// UnsetMounts ensures that no value is present for Mounts, not even an explicit nil
func (o *UdaProtectionGroupParams) UnsetMounts() {
	o.Mounts.Unset()
}

func (o UdaProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if true {
		toSerialize["objects"] = o.Objects
	}
	if o.FullBackupArgs.IsSet() {
		toSerialize["fullBackupArgs"] = o.FullBackupArgs.Get()
	}
	if o.IncrBackupArgs.IsSet() {
		toSerialize["incrBackupArgs"] = o.IncrBackupArgs.Get()
	}
	if o.LogBackupArgs.IsSet() {
		toSerialize["logBackupArgs"] = o.LogBackupArgs.Get()
	}
	if o.Concurrency.IsSet() {
		toSerialize["concurrency"] = o.Concurrency.Get()
	}
	if o.Mounts.IsSet() {
		toSerialize["mounts"] = o.Mounts.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUdaProtectionGroupParams struct {
	value *UdaProtectionGroupParams
	isSet bool
}

func (v NullableUdaProtectionGroupParams) Get() *UdaProtectionGroupParams {
	return v.value
}

func (v *NullableUdaProtectionGroupParams) Set(val *UdaProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUdaProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUdaProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUdaProtectionGroupParams(val *UdaProtectionGroupParams) *NullableUdaProtectionGroupParams {
	return &NullableUdaProtectionGroupParams{value: val, isSet: true}
}

func (v NullableUdaProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUdaProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o UdaProtectionGroupParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}