/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// CloudSpinRun Specifies information about Cloud Spin run for an object.
type CloudSpinRun struct {
	// Cloud Spin result for a target.
	CloudSpinTargetResults *[]CloudSpinTargetResult `json:"cloudSpinTargetResults,omitempty"`
}

// NewCloudSpinRun instantiates a new CloudSpinRun object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudSpinRun() *CloudSpinRun {
	this := CloudSpinRun{}
	return &this
}

// NewCloudSpinRunWithDefaults instantiates a new CloudSpinRun object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudSpinRunWithDefaults() *CloudSpinRun {
	this := CloudSpinRun{}
	return &this
}

// GetCloudSpinTargetResults returns the CloudSpinTargetResults field value if set, zero value otherwise.
func (o *CloudSpinRun) GetCloudSpinTargetResults() []CloudSpinTargetResult {
	if o == nil || o.CloudSpinTargetResults == nil {
		var ret []CloudSpinTargetResult
		return ret
	}
	return *o.CloudSpinTargetResults
}

// GetCloudSpinTargetResultsOk returns a tuple with the CloudSpinTargetResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudSpinRun) GetCloudSpinTargetResultsOk() (*[]CloudSpinTargetResult, bool) {
	if o == nil || o.CloudSpinTargetResults == nil {
		return nil, false
	}
	return o.CloudSpinTargetResults, true
}

// HasCloudSpinTargetResults returns a boolean if a field has been set.
func (o *CloudSpinRun) HasCloudSpinTargetResults() bool {
	if o != nil && o.CloudSpinTargetResults != nil {
		return true
	}

	return false
}

// SetCloudSpinTargetResults gets a reference to the given []CloudSpinTargetResult and assigns it to the CloudSpinTargetResults field.
func (o *CloudSpinRun) SetCloudSpinTargetResults(v []CloudSpinTargetResult) {
	o.CloudSpinTargetResults = &v
}

func (o CloudSpinRun) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CloudSpinTargetResults != nil {
		toSerialize["cloudSpinTargetResults"] = o.CloudSpinTargetResults
	}
	return json.Marshal(toSerialize)
}

type NullableCloudSpinRun struct {
	value *CloudSpinRun
	isSet bool
}

func (v NullableCloudSpinRun) Get() *CloudSpinRun {
	return v.value
}

func (v *NullableCloudSpinRun) Set(val *CloudSpinRun) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudSpinRun) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudSpinRun) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudSpinRun(val *CloudSpinRun) *NullableCloudSpinRun {
	return &NullableCloudSpinRun{value: val, isSet: true}
}

func (v NullableCloudSpinRun) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudSpinRun) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o CloudSpinRun) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}