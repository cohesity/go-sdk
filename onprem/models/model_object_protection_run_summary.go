/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// ObjectProtectionRunSummary Specifies the response body of the get object runs request.
type ObjectProtectionRunSummary struct {
	// Specifies object id.
	Id NullableInt64 `json:"id,omitempty"`
	// Specifies the name of the object.
	Name NullableString `json:"name,omitempty"`
	// Specifies registered source id to which object belongs.
	SourceId NullableInt64 `json:"sourceId,omitempty"`
	// Specifies registered source name to which object belongs.
	SourceName NullableString `json:"sourceName,omitempty"`
	// Specifies the environment of the object.
	Environment NullableString `json:"environment,omitempty"`
	// Specifies the ID of the protection run.
	RunId NullableString `json:"runId,omitempty"`
	// Type of Protection run. 'kRegular' indicates an incremental (CBT) backup. Incremental backups utilizing CBT (if supported) are captured of the target protection objects. The first run of a kRegular schedule captures all the blocks. 'kFull' indicates a full (no CBT) backup. A complete backup (all blocks) of the target protection objects are always captured and Change Block Tracking (CBT) is not utilized. 'kLog' indicates a Database Log backup. Capture the database transaction logs to allow rolling back to a specific point in time. 'kSystem' indicates system volume backup. It produces an image for bare metal recovery.
	RunType NullableString `json:"runType,omitempty"`
	// Indicated if SLA has been violated for this run.
	IsSlaViolated NullableBool `json:"isSlaViolated,omitempty"`
	// ProtectionGroupId to which this run belongs. This will only be populated if the object is protected by a protection group.
	ProtectionGroupId NullableString `json:"protectionGroupId,omitempty"`
	// Name of the Protection Group to which this run belongs. This will only be populated if the object is protected by a protection group.
	ProtectionGroupName NullableString `json:"protectionGroupName,omitempty"`
	// Specifies if snapshots for this run has been deleted.
	IsLocalSnapshotsDeleted NullableBool `json:"isLocalSnapshotsDeleted,omitempty"`
	// Specifies if this protection run is a replication run.
	IsReplicationRun NullableBool `json:"isReplicationRun,omitempty"`
	// Specifies whether the run is a CAD run if cloud archive direct feature is enabled. If this field is true, the primary backup copy will only be available at the given archived location.
	IsCloudArchivalDirect NullableBool `json:"isCloudArchivalDirect,omitempty"`
	// Specifies the unique id of the Protection Policy associated with the Protection Run. The Policy provides retry settings Protection Schedules, Priority, SLA, etc.
	PolicyId NullableString `json:"policyId,omitempty"`
	// Specifies Specifies the name of the Protection Policy.
	PolicyName NullableString `json:"policyName,omitempty"`
	// Specifies the Storage Domain (View Box) ID where this Protection Run writes data.
	StorageDomainId NullableInt64 `json:"storageDomainId,omitempty"`
	// Specifies the list of tenants that have permissions for this protection group run.
	Permissions []Tenant `json:"permissions,omitempty"`
	OriginClusterIdentifier *ClusterIdentifier `json:"originClusterIdentifier,omitempty"`
	// ProtectionGroupId to which this run belongs on the primary cluster if this run is a replication run.
	OriginProtectionGroupId NullableString `json:"originProtectionGroupId,omitempty"`
	LocalSnapshotInfo *BackupRun `json:"localSnapshotInfo,omitempty"`
	OriginalBackupInfo *BackupRun `json:"originalBackupInfo,omitempty"`
	ReplicationInfo *ReplicationRun `json:"replicationInfo,omitempty"`
	ArchivalInfo *ArchivalRun `json:"archivalInfo,omitempty"`
	CloudSpinInfo *CloudSpinRun `json:"cloudSpinInfo,omitempty"`
	// Specifies if object's snapshot is on legal hold.
	OnLegalHold NullableBool `json:"onLegalHold,omitempty"`
	// Specifies WORM retention type for the local backeup. When a WORM retention type is specified, the snapshots of the Protection Groups using this policy will be kept until the maximum of the snapshot retention time. During that time, the snapshots cannot be deleted. <br>'Compliance' implies WORM retention is set for compliance reason. <br>'Administrative' implies WORM retention is set for administrative purposes.
	DataLock NullableString `json:"dataLock,omitempty"`
}

// NewObjectProtectionRunSummary instantiates a new ObjectProtectionRunSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectProtectionRunSummary() *ObjectProtectionRunSummary {
	this := ObjectProtectionRunSummary{}
	return &this
}

// NewObjectProtectionRunSummaryWithDefaults instantiates a new ObjectProtectionRunSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectProtectionRunSummaryWithDefaults() *ObjectProtectionRunSummary {
	this := ObjectProtectionRunSummary{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetId() int64 {
	if o == nil || o.Id.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt64 and assigns it to the Id field.
func (o *ObjectProtectionRunSummary) SetId(v int64) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ObjectProtectionRunSummary) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ObjectProtectionRunSummary) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ObjectProtectionRunSummary) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetName() {
	o.Name.Unset()
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetSourceId() int64 {
	if o == nil || o.SourceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableInt64 and assigns it to the SourceId field.
func (o *ObjectProtectionRunSummary) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *ObjectProtectionRunSummary) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetSourceId() {
	o.SourceId.Unset()
}

// GetSourceName returns the SourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetSourceName() string {
	if o == nil || o.SourceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceName.Get()
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetSourceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceName.Get(), o.SourceName.IsSet()
}

// HasSourceName returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasSourceName() bool {
	if o != nil && o.SourceName.IsSet() {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given NullableString and assigns it to the SourceName field.
func (o *ObjectProtectionRunSummary) SetSourceName(v string) {
	o.SourceName.Set(&v)
}
// SetSourceNameNil sets the value for SourceName to be an explicit nil
func (o *ObjectProtectionRunSummary) SetSourceNameNil() {
	o.SourceName.Set(nil)
}

// UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetSourceName() {
	o.SourceName.Unset()
}

// GetEnvironment returns the Environment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetEnvironment() string {
	if o == nil || o.Environment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// HasEnvironment returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasEnvironment() bool {
	if o != nil && o.Environment.IsSet() {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given NullableString and assigns it to the Environment field.
func (o *ObjectProtectionRunSummary) SetEnvironment(v string) {
	o.Environment.Set(&v)
}
// SetEnvironmentNil sets the value for Environment to be an explicit nil
func (o *ObjectProtectionRunSummary) SetEnvironmentNil() {
	o.Environment.Set(nil)
}

// UnsetEnvironment ensures that no value is present for Environment, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetEnvironment() {
	o.Environment.Unset()
}

// GetRunId returns the RunId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetRunId() string {
	if o == nil || o.RunId.Get() == nil {
		var ret string
		return ret
	}
	return *o.RunId.Get()
}

// GetRunIdOk returns a tuple with the RunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetRunIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RunId.Get(), o.RunId.IsSet()
}

// HasRunId returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasRunId() bool {
	if o != nil && o.RunId.IsSet() {
		return true
	}

	return false
}

// SetRunId gets a reference to the given NullableString and assigns it to the RunId field.
func (o *ObjectProtectionRunSummary) SetRunId(v string) {
	o.RunId.Set(&v)
}
// SetRunIdNil sets the value for RunId to be an explicit nil
func (o *ObjectProtectionRunSummary) SetRunIdNil() {
	o.RunId.Set(nil)
}

// UnsetRunId ensures that no value is present for RunId, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetRunId() {
	o.RunId.Unset()
}

// GetRunType returns the RunType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetRunType() string {
	if o == nil || o.RunType.Get() == nil {
		var ret string
		return ret
	}
	return *o.RunType.Get()
}

// GetRunTypeOk returns a tuple with the RunType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetRunTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RunType.Get(), o.RunType.IsSet()
}

// HasRunType returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasRunType() bool {
	if o != nil && o.RunType.IsSet() {
		return true
	}

	return false
}

// SetRunType gets a reference to the given NullableString and assigns it to the RunType field.
func (o *ObjectProtectionRunSummary) SetRunType(v string) {
	o.RunType.Set(&v)
}
// SetRunTypeNil sets the value for RunType to be an explicit nil
func (o *ObjectProtectionRunSummary) SetRunTypeNil() {
	o.RunType.Set(nil)
}

// UnsetRunType ensures that no value is present for RunType, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetRunType() {
	o.RunType.Unset()
}

// GetIsSlaViolated returns the IsSlaViolated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetIsSlaViolated() bool {
	if o == nil || o.IsSlaViolated.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsSlaViolated.Get()
}

// GetIsSlaViolatedOk returns a tuple with the IsSlaViolated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetIsSlaViolatedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsSlaViolated.Get(), o.IsSlaViolated.IsSet()
}

// HasIsSlaViolated returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasIsSlaViolated() bool {
	if o != nil && o.IsSlaViolated.IsSet() {
		return true
	}

	return false
}

// SetIsSlaViolated gets a reference to the given NullableBool and assigns it to the IsSlaViolated field.
func (o *ObjectProtectionRunSummary) SetIsSlaViolated(v bool) {
	o.IsSlaViolated.Set(&v)
}
// SetIsSlaViolatedNil sets the value for IsSlaViolated to be an explicit nil
func (o *ObjectProtectionRunSummary) SetIsSlaViolatedNil() {
	o.IsSlaViolated.Set(nil)
}

// UnsetIsSlaViolated ensures that no value is present for IsSlaViolated, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetIsSlaViolated() {
	o.IsSlaViolated.Unset()
}

// GetProtectionGroupId returns the ProtectionGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetProtectionGroupId() string {
	if o == nil || o.ProtectionGroupId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProtectionGroupId.Get()
}

// GetProtectionGroupIdOk returns a tuple with the ProtectionGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetProtectionGroupIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionGroupId.Get(), o.ProtectionGroupId.IsSet()
}

// HasProtectionGroupId returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasProtectionGroupId() bool {
	if o != nil && o.ProtectionGroupId.IsSet() {
		return true
	}

	return false
}

// SetProtectionGroupId gets a reference to the given NullableString and assigns it to the ProtectionGroupId field.
func (o *ObjectProtectionRunSummary) SetProtectionGroupId(v string) {
	o.ProtectionGroupId.Set(&v)
}
// SetProtectionGroupIdNil sets the value for ProtectionGroupId to be an explicit nil
func (o *ObjectProtectionRunSummary) SetProtectionGroupIdNil() {
	o.ProtectionGroupId.Set(nil)
}

// UnsetProtectionGroupId ensures that no value is present for ProtectionGroupId, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetProtectionGroupId() {
	o.ProtectionGroupId.Unset()
}

// GetProtectionGroupName returns the ProtectionGroupName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetProtectionGroupName() string {
	if o == nil || o.ProtectionGroupName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProtectionGroupName.Get()
}

// GetProtectionGroupNameOk returns a tuple with the ProtectionGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetProtectionGroupNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionGroupName.Get(), o.ProtectionGroupName.IsSet()
}

// HasProtectionGroupName returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasProtectionGroupName() bool {
	if o != nil && o.ProtectionGroupName.IsSet() {
		return true
	}

	return false
}

// SetProtectionGroupName gets a reference to the given NullableString and assigns it to the ProtectionGroupName field.
func (o *ObjectProtectionRunSummary) SetProtectionGroupName(v string) {
	o.ProtectionGroupName.Set(&v)
}
// SetProtectionGroupNameNil sets the value for ProtectionGroupName to be an explicit nil
func (o *ObjectProtectionRunSummary) SetProtectionGroupNameNil() {
	o.ProtectionGroupName.Set(nil)
}

// UnsetProtectionGroupName ensures that no value is present for ProtectionGroupName, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetProtectionGroupName() {
	o.ProtectionGroupName.Unset()
}

// GetIsLocalSnapshotsDeleted returns the IsLocalSnapshotsDeleted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetIsLocalSnapshotsDeleted() bool {
	if o == nil || o.IsLocalSnapshotsDeleted.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsLocalSnapshotsDeleted.Get()
}

// GetIsLocalSnapshotsDeletedOk returns a tuple with the IsLocalSnapshotsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetIsLocalSnapshotsDeletedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsLocalSnapshotsDeleted.Get(), o.IsLocalSnapshotsDeleted.IsSet()
}

// HasIsLocalSnapshotsDeleted returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasIsLocalSnapshotsDeleted() bool {
	if o != nil && o.IsLocalSnapshotsDeleted.IsSet() {
		return true
	}

	return false
}

// SetIsLocalSnapshotsDeleted gets a reference to the given NullableBool and assigns it to the IsLocalSnapshotsDeleted field.
func (o *ObjectProtectionRunSummary) SetIsLocalSnapshotsDeleted(v bool) {
	o.IsLocalSnapshotsDeleted.Set(&v)
}
// SetIsLocalSnapshotsDeletedNil sets the value for IsLocalSnapshotsDeleted to be an explicit nil
func (o *ObjectProtectionRunSummary) SetIsLocalSnapshotsDeletedNil() {
	o.IsLocalSnapshotsDeleted.Set(nil)
}

// UnsetIsLocalSnapshotsDeleted ensures that no value is present for IsLocalSnapshotsDeleted, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetIsLocalSnapshotsDeleted() {
	o.IsLocalSnapshotsDeleted.Unset()
}

// GetIsReplicationRun returns the IsReplicationRun field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetIsReplicationRun() bool {
	if o == nil || o.IsReplicationRun.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsReplicationRun.Get()
}

// GetIsReplicationRunOk returns a tuple with the IsReplicationRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetIsReplicationRunOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsReplicationRun.Get(), o.IsReplicationRun.IsSet()
}

// HasIsReplicationRun returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasIsReplicationRun() bool {
	if o != nil && o.IsReplicationRun.IsSet() {
		return true
	}

	return false
}

// SetIsReplicationRun gets a reference to the given NullableBool and assigns it to the IsReplicationRun field.
func (o *ObjectProtectionRunSummary) SetIsReplicationRun(v bool) {
	o.IsReplicationRun.Set(&v)
}
// SetIsReplicationRunNil sets the value for IsReplicationRun to be an explicit nil
func (o *ObjectProtectionRunSummary) SetIsReplicationRunNil() {
	o.IsReplicationRun.Set(nil)
}

// UnsetIsReplicationRun ensures that no value is present for IsReplicationRun, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetIsReplicationRun() {
	o.IsReplicationRun.Unset()
}

// GetIsCloudArchivalDirect returns the IsCloudArchivalDirect field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetIsCloudArchivalDirect() bool {
	if o == nil || o.IsCloudArchivalDirect.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsCloudArchivalDirect.Get()
}

// GetIsCloudArchivalDirectOk returns a tuple with the IsCloudArchivalDirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetIsCloudArchivalDirectOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsCloudArchivalDirect.Get(), o.IsCloudArchivalDirect.IsSet()
}

// HasIsCloudArchivalDirect returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasIsCloudArchivalDirect() bool {
	if o != nil && o.IsCloudArchivalDirect.IsSet() {
		return true
	}

	return false
}

// SetIsCloudArchivalDirect gets a reference to the given NullableBool and assigns it to the IsCloudArchivalDirect field.
func (o *ObjectProtectionRunSummary) SetIsCloudArchivalDirect(v bool) {
	o.IsCloudArchivalDirect.Set(&v)
}
// SetIsCloudArchivalDirectNil sets the value for IsCloudArchivalDirect to be an explicit nil
func (o *ObjectProtectionRunSummary) SetIsCloudArchivalDirectNil() {
	o.IsCloudArchivalDirect.Set(nil)
}

// UnsetIsCloudArchivalDirect ensures that no value is present for IsCloudArchivalDirect, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetIsCloudArchivalDirect() {
	o.IsCloudArchivalDirect.Unset()
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetPolicyId() string {
	if o == nil || o.PolicyId.Get() == nil {
		var ret string
		return ret
	}
	return *o.PolicyId.Get()
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetPolicyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PolicyId.Get(), o.PolicyId.IsSet()
}

// HasPolicyId returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasPolicyId() bool {
	if o != nil && o.PolicyId.IsSet() {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given NullableString and assigns it to the PolicyId field.
func (o *ObjectProtectionRunSummary) SetPolicyId(v string) {
	o.PolicyId.Set(&v)
}
// SetPolicyIdNil sets the value for PolicyId to be an explicit nil
func (o *ObjectProtectionRunSummary) SetPolicyIdNil() {
	o.PolicyId.Set(nil)
}

// UnsetPolicyId ensures that no value is present for PolicyId, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetPolicyId() {
	o.PolicyId.Unset()
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetPolicyName() string {
	if o == nil || o.PolicyName.Get() == nil {
		var ret string
		return ret
	}
	return *o.PolicyName.Get()
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetPolicyNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PolicyName.Get(), o.PolicyName.IsSet()
}

// HasPolicyName returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasPolicyName() bool {
	if o != nil && o.PolicyName.IsSet() {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given NullableString and assigns it to the PolicyName field.
func (o *ObjectProtectionRunSummary) SetPolicyName(v string) {
	o.PolicyName.Set(&v)
}
// SetPolicyNameNil sets the value for PolicyName to be an explicit nil
func (o *ObjectProtectionRunSummary) SetPolicyNameNil() {
	o.PolicyName.Set(nil)
}

// UnsetPolicyName ensures that no value is present for PolicyName, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetPolicyName() {
	o.PolicyName.Unset()
}

// GetStorageDomainId returns the StorageDomainId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetStorageDomainId() int64 {
	if o == nil || o.StorageDomainId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StorageDomainId.Get()
}

// GetStorageDomainIdOk returns a tuple with the StorageDomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetStorageDomainIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StorageDomainId.Get(), o.StorageDomainId.IsSet()
}

// HasStorageDomainId returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasStorageDomainId() bool {
	if o != nil && o.StorageDomainId.IsSet() {
		return true
	}

	return false
}

// SetStorageDomainId gets a reference to the given NullableInt64 and assigns it to the StorageDomainId field.
func (o *ObjectProtectionRunSummary) SetStorageDomainId(v int64) {
	o.StorageDomainId.Set(&v)
}
// SetStorageDomainIdNil sets the value for StorageDomainId to be an explicit nil
func (o *ObjectProtectionRunSummary) SetStorageDomainIdNil() {
	o.StorageDomainId.Set(nil)
}

// UnsetStorageDomainId ensures that no value is present for StorageDomainId, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetStorageDomainId() {
	o.StorageDomainId.Unset()
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetPermissions() []Tenant {
	if o == nil  {
		var ret []Tenant
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetPermissionsOk() (*[]Tenant, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return &o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []Tenant and assigns it to the Permissions field.
func (o *ObjectProtectionRunSummary) SetPermissions(v []Tenant) {
	o.Permissions = v
}

// GetOriginClusterIdentifier returns the OriginClusterIdentifier field value if set, zero value otherwise.
func (o *ObjectProtectionRunSummary) GetOriginClusterIdentifier() ClusterIdentifier {
	if o == nil || o.OriginClusterIdentifier == nil {
		var ret ClusterIdentifier
		return ret
	}
	return *o.OriginClusterIdentifier
}

// GetOriginClusterIdentifierOk returns a tuple with the OriginClusterIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectProtectionRunSummary) GetOriginClusterIdentifierOk() (*ClusterIdentifier, bool) {
	if o == nil || o.OriginClusterIdentifier == nil {
		return nil, false
	}
	return o.OriginClusterIdentifier, true
}

// HasOriginClusterIdentifier returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasOriginClusterIdentifier() bool {
	if o != nil && o.OriginClusterIdentifier != nil {
		return true
	}

	return false
}

// SetOriginClusterIdentifier gets a reference to the given ClusterIdentifier and assigns it to the OriginClusterIdentifier field.
func (o *ObjectProtectionRunSummary) SetOriginClusterIdentifier(v ClusterIdentifier) {
	o.OriginClusterIdentifier = &v
}

// GetOriginProtectionGroupId returns the OriginProtectionGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetOriginProtectionGroupId() string {
	if o == nil || o.OriginProtectionGroupId.Get() == nil {
		var ret string
		return ret
	}
	return *o.OriginProtectionGroupId.Get()
}

// GetOriginProtectionGroupIdOk returns a tuple with the OriginProtectionGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetOriginProtectionGroupIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OriginProtectionGroupId.Get(), o.OriginProtectionGroupId.IsSet()
}

// HasOriginProtectionGroupId returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasOriginProtectionGroupId() bool {
	if o != nil && o.OriginProtectionGroupId.IsSet() {
		return true
	}

	return false
}

// SetOriginProtectionGroupId gets a reference to the given NullableString and assigns it to the OriginProtectionGroupId field.
func (o *ObjectProtectionRunSummary) SetOriginProtectionGroupId(v string) {
	o.OriginProtectionGroupId.Set(&v)
}
// SetOriginProtectionGroupIdNil sets the value for OriginProtectionGroupId to be an explicit nil
func (o *ObjectProtectionRunSummary) SetOriginProtectionGroupIdNil() {
	o.OriginProtectionGroupId.Set(nil)
}

// UnsetOriginProtectionGroupId ensures that no value is present for OriginProtectionGroupId, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetOriginProtectionGroupId() {
	o.OriginProtectionGroupId.Unset()
}

// GetLocalSnapshotInfo returns the LocalSnapshotInfo field value if set, zero value otherwise.
func (o *ObjectProtectionRunSummary) GetLocalSnapshotInfo() BackupRun {
	if o == nil || o.LocalSnapshotInfo == nil {
		var ret BackupRun
		return ret
	}
	return *o.LocalSnapshotInfo
}

// GetLocalSnapshotInfoOk returns a tuple with the LocalSnapshotInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectProtectionRunSummary) GetLocalSnapshotInfoOk() (*BackupRun, bool) {
	if o == nil || o.LocalSnapshotInfo == nil {
		return nil, false
	}
	return o.LocalSnapshotInfo, true
}

// HasLocalSnapshotInfo returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasLocalSnapshotInfo() bool {
	if o != nil && o.LocalSnapshotInfo != nil {
		return true
	}

	return false
}

// SetLocalSnapshotInfo gets a reference to the given BackupRun and assigns it to the LocalSnapshotInfo field.
func (o *ObjectProtectionRunSummary) SetLocalSnapshotInfo(v BackupRun) {
	o.LocalSnapshotInfo = &v
}

// GetOriginalBackupInfo returns the OriginalBackupInfo field value if set, zero value otherwise.
func (o *ObjectProtectionRunSummary) GetOriginalBackupInfo() BackupRun {
	if o == nil || o.OriginalBackupInfo == nil {
		var ret BackupRun
		return ret
	}
	return *o.OriginalBackupInfo
}

// GetOriginalBackupInfoOk returns a tuple with the OriginalBackupInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectProtectionRunSummary) GetOriginalBackupInfoOk() (*BackupRun, bool) {
	if o == nil || o.OriginalBackupInfo == nil {
		return nil, false
	}
	return o.OriginalBackupInfo, true
}

// HasOriginalBackupInfo returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasOriginalBackupInfo() bool {
	if o != nil && o.OriginalBackupInfo != nil {
		return true
	}

	return false
}

// SetOriginalBackupInfo gets a reference to the given BackupRun and assigns it to the OriginalBackupInfo field.
func (o *ObjectProtectionRunSummary) SetOriginalBackupInfo(v BackupRun) {
	o.OriginalBackupInfo = &v
}

// GetReplicationInfo returns the ReplicationInfo field value if set, zero value otherwise.
func (o *ObjectProtectionRunSummary) GetReplicationInfo() ReplicationRun {
	if o == nil || o.ReplicationInfo == nil {
		var ret ReplicationRun
		return ret
	}
	return *o.ReplicationInfo
}

// GetReplicationInfoOk returns a tuple with the ReplicationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectProtectionRunSummary) GetReplicationInfoOk() (*ReplicationRun, bool) {
	if o == nil || o.ReplicationInfo == nil {
		return nil, false
	}
	return o.ReplicationInfo, true
}

// HasReplicationInfo returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasReplicationInfo() bool {
	if o != nil && o.ReplicationInfo != nil {
		return true
	}

	return false
}

// SetReplicationInfo gets a reference to the given ReplicationRun and assigns it to the ReplicationInfo field.
func (o *ObjectProtectionRunSummary) SetReplicationInfo(v ReplicationRun) {
	o.ReplicationInfo = &v
}

// GetArchivalInfo returns the ArchivalInfo field value if set, zero value otherwise.
func (o *ObjectProtectionRunSummary) GetArchivalInfo() ArchivalRun {
	if o == nil || o.ArchivalInfo == nil {
		var ret ArchivalRun
		return ret
	}
	return *o.ArchivalInfo
}

// GetArchivalInfoOk returns a tuple with the ArchivalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectProtectionRunSummary) GetArchivalInfoOk() (*ArchivalRun, bool) {
	if o == nil || o.ArchivalInfo == nil {
		return nil, false
	}
	return o.ArchivalInfo, true
}

// HasArchivalInfo returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasArchivalInfo() bool {
	if o != nil && o.ArchivalInfo != nil {
		return true
	}

	return false
}

// SetArchivalInfo gets a reference to the given ArchivalRun and assigns it to the ArchivalInfo field.
func (o *ObjectProtectionRunSummary) SetArchivalInfo(v ArchivalRun) {
	o.ArchivalInfo = &v
}

// GetCloudSpinInfo returns the CloudSpinInfo field value if set, zero value otherwise.
func (o *ObjectProtectionRunSummary) GetCloudSpinInfo() CloudSpinRun {
	if o == nil || o.CloudSpinInfo == nil {
		var ret CloudSpinRun
		return ret
	}
	return *o.CloudSpinInfo
}

// GetCloudSpinInfoOk returns a tuple with the CloudSpinInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectProtectionRunSummary) GetCloudSpinInfoOk() (*CloudSpinRun, bool) {
	if o == nil || o.CloudSpinInfo == nil {
		return nil, false
	}
	return o.CloudSpinInfo, true
}

// HasCloudSpinInfo returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasCloudSpinInfo() bool {
	if o != nil && o.CloudSpinInfo != nil {
		return true
	}

	return false
}

// SetCloudSpinInfo gets a reference to the given CloudSpinRun and assigns it to the CloudSpinInfo field.
func (o *ObjectProtectionRunSummary) SetCloudSpinInfo(v CloudSpinRun) {
	o.CloudSpinInfo = &v
}

// GetOnLegalHold returns the OnLegalHold field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetOnLegalHold() bool {
	if o == nil || o.OnLegalHold.Get() == nil {
		var ret bool
		return ret
	}
	return *o.OnLegalHold.Get()
}

// GetOnLegalHoldOk returns a tuple with the OnLegalHold field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetOnLegalHoldOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OnLegalHold.Get(), o.OnLegalHold.IsSet()
}

// HasOnLegalHold returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasOnLegalHold() bool {
	if o != nil && o.OnLegalHold.IsSet() {
		return true
	}

	return false
}

// SetOnLegalHold gets a reference to the given NullableBool and assigns it to the OnLegalHold field.
func (o *ObjectProtectionRunSummary) SetOnLegalHold(v bool) {
	o.OnLegalHold.Set(&v)
}
// SetOnLegalHoldNil sets the value for OnLegalHold to be an explicit nil
func (o *ObjectProtectionRunSummary) SetOnLegalHoldNil() {
	o.OnLegalHold.Set(nil)
}

// UnsetOnLegalHold ensures that no value is present for OnLegalHold, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetOnLegalHold() {
	o.OnLegalHold.Unset()
}

// GetDataLock returns the DataLock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectProtectionRunSummary) GetDataLock() string {
	if o == nil || o.DataLock.Get() == nil {
		var ret string
		return ret
	}
	return *o.DataLock.Get()
}

// GetDataLockOk returns a tuple with the DataLock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectProtectionRunSummary) GetDataLockOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DataLock.Get(), o.DataLock.IsSet()
}

// HasDataLock returns a boolean if a field has been set.
func (o *ObjectProtectionRunSummary) HasDataLock() bool {
	if o != nil && o.DataLock.IsSet() {
		return true
	}

	return false
}

// SetDataLock gets a reference to the given NullableString and assigns it to the DataLock field.
func (o *ObjectProtectionRunSummary) SetDataLock(v string) {
	o.DataLock.Set(&v)
}
// SetDataLockNil sets the value for DataLock to be an explicit nil
func (o *ObjectProtectionRunSummary) SetDataLockNil() {
	o.DataLock.Set(nil)
}

// UnsetDataLock ensures that no value is present for DataLock, not even an explicit nil
func (o *ObjectProtectionRunSummary) UnsetDataLock() {
	o.DataLock.Unset()
}

func (o ObjectProtectionRunSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.SourceId.IsSet() {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if o.SourceName.IsSet() {
		toSerialize["sourceName"] = o.SourceName.Get()
	}
	if o.Environment.IsSet() {
		toSerialize["environment"] = o.Environment.Get()
	}
	if o.RunId.IsSet() {
		toSerialize["runId"] = o.RunId.Get()
	}
	if o.RunType.IsSet() {
		toSerialize["runType"] = o.RunType.Get()
	}
	if o.IsSlaViolated.IsSet() {
		toSerialize["isSlaViolated"] = o.IsSlaViolated.Get()
	}
	if o.ProtectionGroupId.IsSet() {
		toSerialize["protectionGroupId"] = o.ProtectionGroupId.Get()
	}
	if o.ProtectionGroupName.IsSet() {
		toSerialize["protectionGroupName"] = o.ProtectionGroupName.Get()
	}
	if o.IsLocalSnapshotsDeleted.IsSet() {
		toSerialize["isLocalSnapshotsDeleted"] = o.IsLocalSnapshotsDeleted.Get()
	}
	if o.IsReplicationRun.IsSet() {
		toSerialize["isReplicationRun"] = o.IsReplicationRun.Get()
	}
	if o.IsCloudArchivalDirect.IsSet() {
		toSerialize["isCloudArchivalDirect"] = o.IsCloudArchivalDirect.Get()
	}
	if o.PolicyId.IsSet() {
		toSerialize["policyId"] = o.PolicyId.Get()
	}
	if o.PolicyName.IsSet() {
		toSerialize["policyName"] = o.PolicyName.Get()
	}
	if o.StorageDomainId.IsSet() {
		toSerialize["storageDomainId"] = o.StorageDomainId.Get()
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.OriginClusterIdentifier != nil {
		toSerialize["originClusterIdentifier"] = o.OriginClusterIdentifier
	}
	if o.OriginProtectionGroupId.IsSet() {
		toSerialize["originProtectionGroupId"] = o.OriginProtectionGroupId.Get()
	}
	if o.LocalSnapshotInfo != nil {
		toSerialize["localSnapshotInfo"] = o.LocalSnapshotInfo
	}
	if o.OriginalBackupInfo != nil {
		toSerialize["originalBackupInfo"] = o.OriginalBackupInfo
	}
	if o.ReplicationInfo != nil {
		toSerialize["replicationInfo"] = o.ReplicationInfo
	}
	if o.ArchivalInfo != nil {
		toSerialize["archivalInfo"] = o.ArchivalInfo
	}
	if o.CloudSpinInfo != nil {
		toSerialize["cloudSpinInfo"] = o.CloudSpinInfo
	}
	if o.OnLegalHold.IsSet() {
		toSerialize["onLegalHold"] = o.OnLegalHold.Get()
	}
	if o.DataLock.IsSet() {
		toSerialize["dataLock"] = o.DataLock.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableObjectProtectionRunSummary struct {
	value *ObjectProtectionRunSummary
	isSet bool
}

func (v NullableObjectProtectionRunSummary) Get() *ObjectProtectionRunSummary {
	return v.value
}

func (v *NullableObjectProtectionRunSummary) Set(val *ObjectProtectionRunSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectProtectionRunSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectProtectionRunSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectProtectionRunSummary(val *ObjectProtectionRunSummary) *NullableObjectProtectionRunSummary {
	return &NullableObjectProtectionRunSummary{value: val, isSet: true}
}

func (v NullableObjectProtectionRunSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectProtectionRunSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o ObjectProtectionRunSummary) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}