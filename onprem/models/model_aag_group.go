/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// AAGGroup Specifies the details of a AAG Group.
type AAGGroup struct {
	// Specifies the unique identifier of the AGGGroup.
	Id NullableString `json:"id,omitempty"`
	// Specifies the name of the AAG Group.
	Name NullableString `json:"name,omitempty"`
	ResourceInfo *AppResource `json:"resourceInfo,omitempty"`
	// Specifies the list of SQL servers which belongs to the given AAG Group.
	Servers []SQLServer `json:"servers,omitempty"`
	// Specifies the list of FCI clusters which belongs to the given AAG Group.
	FciClusters []FCICluster `json:"fciClusters,omitempty"`
}

// NewAAGGroup instantiates a new AAGGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAAGGroup() *AAGGroup {
	this := AAGGroup{}
	return &this
}

// NewAAGGroupWithDefaults instantiates a new AAGGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAAGGroupWithDefaults() *AAGGroup {
	this := AAGGroup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AAGGroup) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AAGGroup) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *AAGGroup) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *AAGGroup) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *AAGGroup) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *AAGGroup) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AAGGroup) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AAGGroup) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AAGGroup) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AAGGroup) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *AAGGroup) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AAGGroup) UnsetName() {
	o.Name.Unset()
}

// GetResourceInfo returns the ResourceInfo field value if set, zero value otherwise.
func (o *AAGGroup) GetResourceInfo() AppResource {
	if o == nil || o.ResourceInfo == nil {
		var ret AppResource
		return ret
	}
	return *o.ResourceInfo
}

// GetResourceInfoOk returns a tuple with the ResourceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AAGGroup) GetResourceInfoOk() (*AppResource, bool) {
	if o == nil || o.ResourceInfo == nil {
		return nil, false
	}
	return o.ResourceInfo, true
}

// HasResourceInfo returns a boolean if a field has been set.
func (o *AAGGroup) HasResourceInfo() bool {
	if o != nil && o.ResourceInfo != nil {
		return true
	}

	return false
}

// SetResourceInfo gets a reference to the given AppResource and assigns it to the ResourceInfo field.
func (o *AAGGroup) SetResourceInfo(v AppResource) {
	o.ResourceInfo = &v
}

// GetServers returns the Servers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AAGGroup) GetServers() []SQLServer {
	if o == nil  {
		var ret []SQLServer
		return ret
	}
	return o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AAGGroup) GetServersOk() (*[]SQLServer, bool) {
	if o == nil || o.Servers == nil {
		return nil, false
	}
	return &o.Servers, true
}

// HasServers returns a boolean if a field has been set.
func (o *AAGGroup) HasServers() bool {
	if o != nil && o.Servers != nil {
		return true
	}

	return false
}

// SetServers gets a reference to the given []SQLServer and assigns it to the Servers field.
func (o *AAGGroup) SetServers(v []SQLServer) {
	o.Servers = v
}

// GetFciClusters returns the FciClusters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AAGGroup) GetFciClusters() []FCICluster {
	if o == nil  {
		var ret []FCICluster
		return ret
	}
	return o.FciClusters
}

// GetFciClustersOk returns a tuple with the FciClusters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AAGGroup) GetFciClustersOk() (*[]FCICluster, bool) {
	if o == nil || o.FciClusters == nil {
		return nil, false
	}
	return &o.FciClusters, true
}

// HasFciClusters returns a boolean if a field has been set.
func (o *AAGGroup) HasFciClusters() bool {
	if o != nil && o.FciClusters != nil {
		return true
	}

	return false
}

// SetFciClusters gets a reference to the given []FCICluster and assigns it to the FciClusters field.
func (o *AAGGroup) SetFciClusters(v []FCICluster) {
	o.FciClusters = v
}

func (o AAGGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ResourceInfo != nil {
		toSerialize["resourceInfo"] = o.ResourceInfo
	}
	if o.Servers != nil {
		toSerialize["servers"] = o.Servers
	}
	if o.FciClusters != nil {
		toSerialize["fciClusters"] = o.FciClusters
	}
	return json.Marshal(toSerialize)
}

type NullableAAGGroup struct {
	value *AAGGroup
	isSet bool
}

func (v NullableAAGGroup) Get() *AAGGroup {
	return v.value
}

func (v *NullableAAGGroup) Set(val *AAGGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableAAGGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableAAGGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAAGGroup(val *AAGGroup) *NullableAAGGroup {
	return &NullableAAGGroup{value: val, isSet: true}
}

func (v NullableAAGGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAAGGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o AAGGroup) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}