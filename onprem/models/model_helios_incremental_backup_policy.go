/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// HeliosIncrementalBackupPolicy Specifies incremental backup settings for a Protection Group.
type HeliosIncrementalBackupPolicy struct {
	Schedule *HeliosIncrementalSchedule `json:"schedule,omitempty"`
}

// NewHeliosIncrementalBackupPolicy instantiates a new HeliosIncrementalBackupPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosIncrementalBackupPolicy() *HeliosIncrementalBackupPolicy {
	this := HeliosIncrementalBackupPolicy{}
	return &this
}

// NewHeliosIncrementalBackupPolicyWithDefaults instantiates a new HeliosIncrementalBackupPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosIncrementalBackupPolicyWithDefaults() *HeliosIncrementalBackupPolicy {
	this := HeliosIncrementalBackupPolicy{}
	return &this
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *HeliosIncrementalBackupPolicy) GetSchedule() HeliosIncrementalSchedule {
	if o == nil || o.Schedule == nil {
		var ret HeliosIncrementalSchedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosIncrementalBackupPolicy) GetScheduleOk() (*HeliosIncrementalSchedule, bool) {
	if o == nil || o.Schedule == nil {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *HeliosIncrementalBackupPolicy) HasSchedule() bool {
	if o != nil && o.Schedule != nil {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given HeliosIncrementalSchedule and assigns it to the Schedule field.
func (o *HeliosIncrementalBackupPolicy) SetSchedule(v HeliosIncrementalSchedule) {
	o.Schedule = &v
}

func (o HeliosIncrementalBackupPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Schedule != nil {
		toSerialize["schedule"] = o.Schedule
	}
	return json.Marshal(toSerialize)
}

type NullableHeliosIncrementalBackupPolicy struct {
	value *HeliosIncrementalBackupPolicy
	isSet bool
}

func (v NullableHeliosIncrementalBackupPolicy) Get() *HeliosIncrementalBackupPolicy {
	return v.value
}

func (v *NullableHeliosIncrementalBackupPolicy) Set(val *HeliosIncrementalBackupPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosIncrementalBackupPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosIncrementalBackupPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosIncrementalBackupPolicy(val *HeliosIncrementalBackupPolicy) *NullableHeliosIncrementalBackupPolicy {
	return &NullableHeliosIncrementalBackupPolicy{value: val, isSet: true}
}

func (v NullableHeliosIncrementalBackupPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosIncrementalBackupPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o HeliosIncrementalBackupPolicy) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}