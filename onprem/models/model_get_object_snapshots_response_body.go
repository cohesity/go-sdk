/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// GetObjectSnapshotsResponseBody Specifies the list of object snapshots.
type GetObjectSnapshotsResponseBody struct {
	// Specifies the list of snapshots.
	Snapshots []ObjectSnapshot `json:"snapshots,omitempty"`
}

// NewGetObjectSnapshotsResponseBody instantiates a new GetObjectSnapshotsResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetObjectSnapshotsResponseBody() *GetObjectSnapshotsResponseBody {
	this := GetObjectSnapshotsResponseBody{}
	return &this
}

// NewGetObjectSnapshotsResponseBodyWithDefaults instantiates a new GetObjectSnapshotsResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetObjectSnapshotsResponseBodyWithDefaults() *GetObjectSnapshotsResponseBody {
	this := GetObjectSnapshotsResponseBody{}
	return &this
}

// GetSnapshots returns the Snapshots field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetObjectSnapshotsResponseBody) GetSnapshots() []ObjectSnapshot {
	if o == nil  {
		var ret []ObjectSnapshot
		return ret
	}
	return o.Snapshots
}

// GetSnapshotsOk returns a tuple with the Snapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetObjectSnapshotsResponseBody) GetSnapshotsOk() (*[]ObjectSnapshot, bool) {
	if o == nil || o.Snapshots == nil {
		return nil, false
	}
	return &o.Snapshots, true
}

// HasSnapshots returns a boolean if a field has been set.
func (o *GetObjectSnapshotsResponseBody) HasSnapshots() bool {
	if o != nil && o.Snapshots != nil {
		return true
	}

	return false
}

// SetSnapshots gets a reference to the given []ObjectSnapshot and assigns it to the Snapshots field.
func (o *GetObjectSnapshotsResponseBody) SetSnapshots(v []ObjectSnapshot) {
	o.Snapshots = v
}

func (o GetObjectSnapshotsResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Snapshots != nil {
		toSerialize["snapshots"] = o.Snapshots
	}
	return json.Marshal(toSerialize)
}

type NullableGetObjectSnapshotsResponseBody struct {
	value *GetObjectSnapshotsResponseBody
	isSet bool
}

func (v NullableGetObjectSnapshotsResponseBody) Get() *GetObjectSnapshotsResponseBody {
	return v.value
}

func (v *NullableGetObjectSnapshotsResponseBody) Set(val *GetObjectSnapshotsResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableGetObjectSnapshotsResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableGetObjectSnapshotsResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetObjectSnapshotsResponseBody(val *GetObjectSnapshotsResponseBody) *NullableGetObjectSnapshotsResponseBody {
	return &NullableGetObjectSnapshotsResponseBody{value: val, isSet: true}
}

func (v NullableGetObjectSnapshotsResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetObjectSnapshotsResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o GetObjectSnapshotsResponseBody) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}