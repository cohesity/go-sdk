/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// MssqlObjectProtectionParams Specifies the parameters specific to MSSQL Object Protection.
type MssqlObjectProtectionParams struct {
	// Specifies the MSSQL Object Protection type.
	ObjectProtectionType string `json:"objectProtectionType"`
	FileObjectProtectionTypeParams *MssqlFileObjectProtectionParams `json:"fileObjectProtectionTypeParams,omitempty"`
	NativeObjectProtectionTypeParams *MssqlNativeObjectProtectionParams `json:"nativeObjectProtectionTypeParams,omitempty"`
}

// NewMssqlObjectProtectionParams instantiates a new MssqlObjectProtectionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMssqlObjectProtectionParams(objectProtectionType string) *MssqlObjectProtectionParams {
	this := MssqlObjectProtectionParams{}
	this.ObjectProtectionType = objectProtectionType
	return &this
}

// NewMssqlObjectProtectionParamsWithDefaults instantiates a new MssqlObjectProtectionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMssqlObjectProtectionParamsWithDefaults() *MssqlObjectProtectionParams {
	this := MssqlObjectProtectionParams{}
	return &this
}

// GetObjectProtectionType returns the ObjectProtectionType field value
func (o *MssqlObjectProtectionParams) GetObjectProtectionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectProtectionType
}

// GetObjectProtectionTypeOk returns a tuple with the ObjectProtectionType field value
// and a boolean to check if the value has been set.
func (o *MssqlObjectProtectionParams) GetObjectProtectionTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ObjectProtectionType, true
}

// SetObjectProtectionType sets field value
func (o *MssqlObjectProtectionParams) SetObjectProtectionType(v string) {
	o.ObjectProtectionType = v
}

// GetFileObjectProtectionTypeParams returns the FileObjectProtectionTypeParams field value if set, zero value otherwise.
func (o *MssqlObjectProtectionParams) GetFileObjectProtectionTypeParams() MssqlFileObjectProtectionParams {
	if o == nil || o.FileObjectProtectionTypeParams == nil {
		var ret MssqlFileObjectProtectionParams
		return ret
	}
	return *o.FileObjectProtectionTypeParams
}

// GetFileObjectProtectionTypeParamsOk returns a tuple with the FileObjectProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MssqlObjectProtectionParams) GetFileObjectProtectionTypeParamsOk() (*MssqlFileObjectProtectionParams, bool) {
	if o == nil || o.FileObjectProtectionTypeParams == nil {
		return nil, false
	}
	return o.FileObjectProtectionTypeParams, true
}

// HasFileObjectProtectionTypeParams returns a boolean if a field has been set.
func (o *MssqlObjectProtectionParams) HasFileObjectProtectionTypeParams() bool {
	if o != nil && o.FileObjectProtectionTypeParams != nil {
		return true
	}

	return false
}

// SetFileObjectProtectionTypeParams gets a reference to the given MssqlFileObjectProtectionParams and assigns it to the FileObjectProtectionTypeParams field.
func (o *MssqlObjectProtectionParams) SetFileObjectProtectionTypeParams(v MssqlFileObjectProtectionParams) {
	o.FileObjectProtectionTypeParams = &v
}

// GetNativeObjectProtectionTypeParams returns the NativeObjectProtectionTypeParams field value if set, zero value otherwise.
func (o *MssqlObjectProtectionParams) GetNativeObjectProtectionTypeParams() MssqlNativeObjectProtectionParams {
	if o == nil || o.NativeObjectProtectionTypeParams == nil {
		var ret MssqlNativeObjectProtectionParams
		return ret
	}
	return *o.NativeObjectProtectionTypeParams
}

// GetNativeObjectProtectionTypeParamsOk returns a tuple with the NativeObjectProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MssqlObjectProtectionParams) GetNativeObjectProtectionTypeParamsOk() (*MssqlNativeObjectProtectionParams, bool) {
	if o == nil || o.NativeObjectProtectionTypeParams == nil {
		return nil, false
	}
	return o.NativeObjectProtectionTypeParams, true
}

// HasNativeObjectProtectionTypeParams returns a boolean if a field has been set.
func (o *MssqlObjectProtectionParams) HasNativeObjectProtectionTypeParams() bool {
	if o != nil && o.NativeObjectProtectionTypeParams != nil {
		return true
	}

	return false
}

// SetNativeObjectProtectionTypeParams gets a reference to the given MssqlNativeObjectProtectionParams and assigns it to the NativeObjectProtectionTypeParams field.
func (o *MssqlObjectProtectionParams) SetNativeObjectProtectionTypeParams(v MssqlNativeObjectProtectionParams) {
	o.NativeObjectProtectionTypeParams = &v
}

func (o MssqlObjectProtectionParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["objectProtectionType"] = o.ObjectProtectionType
	}
	if o.FileObjectProtectionTypeParams != nil {
		toSerialize["fileObjectProtectionTypeParams"] = o.FileObjectProtectionTypeParams
	}
	if o.NativeObjectProtectionTypeParams != nil {
		toSerialize["nativeObjectProtectionTypeParams"] = o.NativeObjectProtectionTypeParams
	}
	return json.Marshal(toSerialize)
}

type NullableMssqlObjectProtectionParams struct {
	value *MssqlObjectProtectionParams
	isSet bool
}

func (v NullableMssqlObjectProtectionParams) Get() *MssqlObjectProtectionParams {
	return v.value
}

func (v *NullableMssqlObjectProtectionParams) Set(val *MssqlObjectProtectionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMssqlObjectProtectionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMssqlObjectProtectionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMssqlObjectProtectionParams(val *MssqlObjectProtectionParams) *NullableMssqlObjectProtectionParams {
	return &NullableMssqlObjectProtectionParams{value: val, isSet: true}
}

func (v NullableMssqlObjectProtectionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMssqlObjectProtectionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o MssqlObjectProtectionParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}