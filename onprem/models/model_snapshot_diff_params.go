/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// SnapshotDiffParams struct for SnapshotDiffParams
type SnapshotDiffParams struct {
	ClusterId int64 `json:"clusterId"`
	IncarnationId *int64 `json:"incarnationId,omitempty"`
	PartitionId int64 `json:"partitionId"`
	JobId int64 `json:"jobId"`
	EntityType string `json:"entityType"`
	BaseSnapshotJobInstanceId int64 `json:"baseSnapshotJobInstanceId"`
	BaseSnapshotTimeUsecs int64 `json:"baseSnapshotTimeUsecs"`
	SnapshotJobInstanceId int64 `json:"snapshotJobInstanceId"`
	SnapshotTimeUsecs int64 `json:"snapshotTimeUsecs"`
	PageNumber int64 `json:"pageNumber"`
	PageSize int64 `json:"pageSize"`
}

// NewSnapshotDiffParams instantiates a new SnapshotDiffParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotDiffParams(clusterId int64, partitionId int64, jobId int64, entityType string, baseSnapshotJobInstanceId int64, baseSnapshotTimeUsecs int64, snapshotJobInstanceId int64, snapshotTimeUsecs int64, pageNumber int64, pageSize int64) *SnapshotDiffParams {
	this := SnapshotDiffParams{}
	this.ClusterId = clusterId
	this.PartitionId = partitionId
	this.JobId = jobId
	this.EntityType = entityType
	this.BaseSnapshotJobInstanceId = baseSnapshotJobInstanceId
	this.BaseSnapshotTimeUsecs = baseSnapshotTimeUsecs
	this.SnapshotJobInstanceId = snapshotJobInstanceId
	this.SnapshotTimeUsecs = snapshotTimeUsecs
	this.PageNumber = pageNumber
	this.PageSize = pageSize
	return &this
}

// NewSnapshotDiffParamsWithDefaults instantiates a new SnapshotDiffParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotDiffParamsWithDefaults() *SnapshotDiffParams {
	this := SnapshotDiffParams{}
	return &this
}

// GetClusterId returns the ClusterId field value
func (o *SnapshotDiffParams) GetClusterId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *SnapshotDiffParams) GetClusterIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *SnapshotDiffParams) SetClusterId(v int64) {
	o.ClusterId = v
}

// GetIncarnationId returns the IncarnationId field value if set, zero value otherwise.
func (o *SnapshotDiffParams) GetIncarnationId() int64 {
	if o == nil || o.IncarnationId == nil {
		var ret int64
		return ret
	}
	return *o.IncarnationId
}

// GetIncarnationIdOk returns a tuple with the IncarnationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotDiffParams) GetIncarnationIdOk() (*int64, bool) {
	if o == nil || o.IncarnationId == nil {
		return nil, false
	}
	return o.IncarnationId, true
}

// HasIncarnationId returns a boolean if a field has been set.
func (o *SnapshotDiffParams) HasIncarnationId() bool {
	if o != nil && o.IncarnationId != nil {
		return true
	}

	return false
}

// SetIncarnationId gets a reference to the given int64 and assigns it to the IncarnationId field.
func (o *SnapshotDiffParams) SetIncarnationId(v int64) {
	o.IncarnationId = &v
}

// GetPartitionId returns the PartitionId field value
func (o *SnapshotDiffParams) GetPartitionId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PartitionId
}

// GetPartitionIdOk returns a tuple with the PartitionId field value
// and a boolean to check if the value has been set.
func (o *SnapshotDiffParams) GetPartitionIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PartitionId, true
}

// SetPartitionId sets field value
func (o *SnapshotDiffParams) SetPartitionId(v int64) {
	o.PartitionId = v
}

// GetJobId returns the JobId field value
func (o *SnapshotDiffParams) GetJobId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value
// and a boolean to check if the value has been set.
func (o *SnapshotDiffParams) GetJobIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.JobId, true
}

// SetJobId sets field value
func (o *SnapshotDiffParams) SetJobId(v int64) {
	o.JobId = v
}

// GetEntityType returns the EntityType field value
func (o *SnapshotDiffParams) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *SnapshotDiffParams) GetEntityTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *SnapshotDiffParams) SetEntityType(v string) {
	o.EntityType = v
}

// GetBaseSnapshotJobInstanceId returns the BaseSnapshotJobInstanceId field value
func (o *SnapshotDiffParams) GetBaseSnapshotJobInstanceId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BaseSnapshotJobInstanceId
}

// GetBaseSnapshotJobInstanceIdOk returns a tuple with the BaseSnapshotJobInstanceId field value
// and a boolean to check if the value has been set.
func (o *SnapshotDiffParams) GetBaseSnapshotJobInstanceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BaseSnapshotJobInstanceId, true
}

// SetBaseSnapshotJobInstanceId sets field value
func (o *SnapshotDiffParams) SetBaseSnapshotJobInstanceId(v int64) {
	o.BaseSnapshotJobInstanceId = v
}

// GetBaseSnapshotTimeUsecs returns the BaseSnapshotTimeUsecs field value
func (o *SnapshotDiffParams) GetBaseSnapshotTimeUsecs() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BaseSnapshotTimeUsecs
}

// GetBaseSnapshotTimeUsecsOk returns a tuple with the BaseSnapshotTimeUsecs field value
// and a boolean to check if the value has been set.
func (o *SnapshotDiffParams) GetBaseSnapshotTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BaseSnapshotTimeUsecs, true
}

// SetBaseSnapshotTimeUsecs sets field value
func (o *SnapshotDiffParams) SetBaseSnapshotTimeUsecs(v int64) {
	o.BaseSnapshotTimeUsecs = v
}

// GetSnapshotJobInstanceId returns the SnapshotJobInstanceId field value
func (o *SnapshotDiffParams) GetSnapshotJobInstanceId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SnapshotJobInstanceId
}

// GetSnapshotJobInstanceIdOk returns a tuple with the SnapshotJobInstanceId field value
// and a boolean to check if the value has been set.
func (o *SnapshotDiffParams) GetSnapshotJobInstanceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SnapshotJobInstanceId, true
}

// SetSnapshotJobInstanceId sets field value
func (o *SnapshotDiffParams) SetSnapshotJobInstanceId(v int64) {
	o.SnapshotJobInstanceId = v
}

// GetSnapshotTimeUsecs returns the SnapshotTimeUsecs field value
func (o *SnapshotDiffParams) GetSnapshotTimeUsecs() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SnapshotTimeUsecs
}

// GetSnapshotTimeUsecsOk returns a tuple with the SnapshotTimeUsecs field value
// and a boolean to check if the value has been set.
func (o *SnapshotDiffParams) GetSnapshotTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SnapshotTimeUsecs, true
}

// SetSnapshotTimeUsecs sets field value
func (o *SnapshotDiffParams) SetSnapshotTimeUsecs(v int64) {
	o.SnapshotTimeUsecs = v
}

// GetPageNumber returns the PageNumber field value
func (o *SnapshotDiffParams) GetPageNumber() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value
// and a boolean to check if the value has been set.
func (o *SnapshotDiffParams) GetPageNumberOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PageNumber, true
}

// SetPageNumber sets field value
func (o *SnapshotDiffParams) SetPageNumber(v int64) {
	o.PageNumber = v
}

// GetPageSize returns the PageSize field value
func (o *SnapshotDiffParams) GetPageSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *SnapshotDiffParams) GetPageSizeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *SnapshotDiffParams) SetPageSize(v int64) {
	o.PageSize = v
}

func (o SnapshotDiffParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["clusterId"] = o.ClusterId
	}
	if o.IncarnationId != nil {
		toSerialize["incarnationId"] = o.IncarnationId
	}
	if true {
		toSerialize["partitionId"] = o.PartitionId
	}
	if true {
		toSerialize["jobId"] = o.JobId
	}
	if true {
		toSerialize["entityType"] = o.EntityType
	}
	if true {
		toSerialize["baseSnapshotJobInstanceId"] = o.BaseSnapshotJobInstanceId
	}
	if true {
		toSerialize["baseSnapshotTimeUsecs"] = o.BaseSnapshotTimeUsecs
	}
	if true {
		toSerialize["snapshotJobInstanceId"] = o.SnapshotJobInstanceId
	}
	if true {
		toSerialize["snapshotTimeUsecs"] = o.SnapshotTimeUsecs
	}
	if true {
		toSerialize["pageNumber"] = o.PageNumber
	}
	if true {
		toSerialize["pageSize"] = o.PageSize
	}
	return json.Marshal(toSerialize)
}

type NullableSnapshotDiffParams struct {
	value *SnapshotDiffParams
	isSet bool
}

func (v NullableSnapshotDiffParams) Get() *SnapshotDiffParams {
	return v.value
}

func (v *NullableSnapshotDiffParams) Set(val *SnapshotDiffParams) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotDiffParams) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotDiffParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotDiffParams(val *SnapshotDiffParams) *NullableSnapshotDiffParams {
	return &NullableSnapshotDiffParams{value: val, isSet: true}
}

func (v NullableSnapshotDiffParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotDiffParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o SnapshotDiffParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}