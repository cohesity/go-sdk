/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// CommonRecoveryRequestParams Specifies the common request parameters to create a Recovery.
type CommonRecoveryRequestParams struct {
	// Specifies the name of the Recovery.
	Name NullableString `json:"name"`
	// Specifies the type of environment of snapshots for which the Recovery has to be performed.
	SnapshotEnvironment string `json:"snapshotEnvironment"`
}

// NewCommonRecoveryRequestParams instantiates a new CommonRecoveryRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonRecoveryRequestParams(name NullableString, snapshotEnvironment string) *CommonRecoveryRequestParams {
	this := CommonRecoveryRequestParams{}
	this.Name = name
	this.SnapshotEnvironment = snapshotEnvironment
	return &this
}

// NewCommonRecoveryRequestParamsWithDefaults instantiates a new CommonRecoveryRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonRecoveryRequestParamsWithDefaults() *CommonRecoveryRequestParams {
	this := CommonRecoveryRequestParams{}
	return &this
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CommonRecoveryRequestParams) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoveryRequestParams) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *CommonRecoveryRequestParams) SetName(v string) {
	o.Name.Set(&v)
}

// GetSnapshotEnvironment returns the SnapshotEnvironment field value
func (o *CommonRecoveryRequestParams) GetSnapshotEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SnapshotEnvironment
}

// GetSnapshotEnvironmentOk returns a tuple with the SnapshotEnvironment field value
// and a boolean to check if the value has been set.
func (o *CommonRecoveryRequestParams) GetSnapshotEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SnapshotEnvironment, true
}

// SetSnapshotEnvironment sets field value
func (o *CommonRecoveryRequestParams) SetSnapshotEnvironment(v string) {
	o.SnapshotEnvironment = v
}

func (o CommonRecoveryRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name.Get()
	}
	if true {
		toSerialize["snapshotEnvironment"] = o.SnapshotEnvironment
	}
	return json.Marshal(toSerialize)
}

type NullableCommonRecoveryRequestParams struct {
	value *CommonRecoveryRequestParams
	isSet bool
}

func (v NullableCommonRecoveryRequestParams) Get() *CommonRecoveryRequestParams {
	return v.value
}

func (v *NullableCommonRecoveryRequestParams) Set(val *CommonRecoveryRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonRecoveryRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonRecoveryRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonRecoveryRequestParams(val *CommonRecoveryRequestParams) *NullableCommonRecoveryRequestParams {
	return &NullableCommonRecoveryRequestParams{value: val, isSet: true}
}

func (v NullableCommonRecoveryRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonRecoveryRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o CommonRecoveryRequestParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}