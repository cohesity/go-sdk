/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// CreateTotpKeyRequestBody Specifies create TOTP key request parameters.
type CreateTotpKeyRequestBody struct {
	// Specifies the key name.
	TotpKeyName NullableString `json:"totpKeyName,omitempty"`
}

// NewCreateTotpKeyRequestBody instantiates a new CreateTotpKeyRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTotpKeyRequestBody() *CreateTotpKeyRequestBody {
	this := CreateTotpKeyRequestBody{}
	return &this
}

// NewCreateTotpKeyRequestBodyWithDefaults instantiates a new CreateTotpKeyRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTotpKeyRequestBodyWithDefaults() *CreateTotpKeyRequestBody {
	this := CreateTotpKeyRequestBody{}
	return &this
}

// GetTotpKeyName returns the TotpKeyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTotpKeyRequestBody) GetTotpKeyName() string {
	if o == nil || o.TotpKeyName.Get() == nil {
		var ret string
		return ret
	}
	return *o.TotpKeyName.Get()
}

// GetTotpKeyNameOk returns a tuple with the TotpKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTotpKeyRequestBody) GetTotpKeyNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotpKeyName.Get(), o.TotpKeyName.IsSet()
}

// HasTotpKeyName returns a boolean if a field has been set.
func (o *CreateTotpKeyRequestBody) HasTotpKeyName() bool {
	if o != nil && o.TotpKeyName.IsSet() {
		return true
	}

	return false
}

// SetTotpKeyName gets a reference to the given NullableString and assigns it to the TotpKeyName field.
func (o *CreateTotpKeyRequestBody) SetTotpKeyName(v string) {
	o.TotpKeyName.Set(&v)
}
// SetTotpKeyNameNil sets the value for TotpKeyName to be an explicit nil
func (o *CreateTotpKeyRequestBody) SetTotpKeyNameNil() {
	o.TotpKeyName.Set(nil)
}

// UnsetTotpKeyName ensures that no value is present for TotpKeyName, not even an explicit nil
func (o *CreateTotpKeyRequestBody) UnsetTotpKeyName() {
	o.TotpKeyName.Unset()
}

func (o CreateTotpKeyRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotpKeyName.IsSet() {
		toSerialize["totpKeyName"] = o.TotpKeyName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTotpKeyRequestBody struct {
	value *CreateTotpKeyRequestBody
	isSet bool
}

func (v NullableCreateTotpKeyRequestBody) Get() *CreateTotpKeyRequestBody {
	return v.value
}

func (v *NullableCreateTotpKeyRequestBody) Set(val *CreateTotpKeyRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTotpKeyRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTotpKeyRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTotpKeyRequestBody(val *CreateTotpKeyRequestBody) *NullableCreateTotpKeyRequestBody {
	return &NullableCreateTotpKeyRequestBody{value: val, isSet: true}
}

func (v NullableCreateTotpKeyRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTotpKeyRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o CreateTotpKeyRequestBody) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}