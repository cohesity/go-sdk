/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// ObjectStats Specifies the object stats.
type ObjectStats struct {
	// Specifies a summary of the object snapshots.
	SnapshotsSummary []SnapshotsSummary `json:"snapshotsSummary,omitempty"`
}

// NewObjectStats instantiates a new ObjectStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStats() *ObjectStats {
	this := ObjectStats{}
	return &this
}

// NewObjectStatsWithDefaults instantiates a new ObjectStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStatsWithDefaults() *ObjectStats {
	this := ObjectStats{}
	return &this
}

// GetSnapshotsSummary returns the SnapshotsSummary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectStats) GetSnapshotsSummary() []SnapshotsSummary {
	if o == nil  {
		var ret []SnapshotsSummary
		return ret
	}
	return o.SnapshotsSummary
}

// GetSnapshotsSummaryOk returns a tuple with the SnapshotsSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectStats) GetSnapshotsSummaryOk() (*[]SnapshotsSummary, bool) {
	if o == nil || o.SnapshotsSummary == nil {
		return nil, false
	}
	return &o.SnapshotsSummary, true
}

// HasSnapshotsSummary returns a boolean if a field has been set.
func (o *ObjectStats) HasSnapshotsSummary() bool {
	if o != nil && o.SnapshotsSummary != nil {
		return true
	}

	return false
}

// SetSnapshotsSummary gets a reference to the given []SnapshotsSummary and assigns it to the SnapshotsSummary field.
func (o *ObjectStats) SetSnapshotsSummary(v []SnapshotsSummary) {
	o.SnapshotsSummary = v
}

func (o ObjectStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SnapshotsSummary != nil {
		toSerialize["snapshotsSummary"] = o.SnapshotsSummary
	}
	return json.Marshal(toSerialize)
}

type NullableObjectStats struct {
	value *ObjectStats
	isSet bool
}

func (v NullableObjectStats) Get() *ObjectStats {
	return v.value
}

func (v *NullableObjectStats) Set(val *ObjectStats) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStats) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStats(val *ObjectStats) *NullableObjectStats {
	return &NullableObjectStats{value: val, isSet: true}
}

func (v NullableObjectStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o ObjectStats) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}