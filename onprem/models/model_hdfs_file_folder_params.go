/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// HdfsFileFolderParams Object details for Hdfs.
type HdfsFileFolderParams struct {
	// Specifies the name.
	Name NullableString `json:"name,omitempty"`
	// Specifies the path.
	Path NullableString `json:"path,omitempty"`
	// Specifies the type of the contents.
	Type *string `json:"type,omitempty"`
	// Specifies the last time file was modified in unix timestamp.
	LastModifiedTimeUsecs NullableInt64 `json:"lastModifiedTimeUsecs,omitempty"`
	// Specifies the file size in bytes.
	SizeBytes NullableInt64 `json:"sizeBytes,omitempty"`
}

// NewHdfsFileFolderParams instantiates a new HdfsFileFolderParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHdfsFileFolderParams() *HdfsFileFolderParams {
	this := HdfsFileFolderParams{}
	return &this
}

// NewHdfsFileFolderParamsWithDefaults instantiates a new HdfsFileFolderParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHdfsFileFolderParamsWithDefaults() *HdfsFileFolderParams {
	this := HdfsFileFolderParams{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HdfsFileFolderParams) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HdfsFileFolderParams) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *HdfsFileFolderParams) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *HdfsFileFolderParams) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *HdfsFileFolderParams) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *HdfsFileFolderParams) UnsetName() {
	o.Name.Unset()
}

// GetPath returns the Path field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HdfsFileFolderParams) GetPath() string {
	if o == nil || o.Path.Get() == nil {
		var ret string
		return ret
	}
	return *o.Path.Get()
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HdfsFileFolderParams) GetPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Path.Get(), o.Path.IsSet()
}

// HasPath returns a boolean if a field has been set.
func (o *HdfsFileFolderParams) HasPath() bool {
	if o != nil && o.Path.IsSet() {
		return true
	}

	return false
}

// SetPath gets a reference to the given NullableString and assigns it to the Path field.
func (o *HdfsFileFolderParams) SetPath(v string) {
	o.Path.Set(&v)
}
// SetPathNil sets the value for Path to be an explicit nil
func (o *HdfsFileFolderParams) SetPathNil() {
	o.Path.Set(nil)
}

// UnsetPath ensures that no value is present for Path, not even an explicit nil
func (o *HdfsFileFolderParams) UnsetPath() {
	o.Path.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *HdfsFileFolderParams) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HdfsFileFolderParams) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *HdfsFileFolderParams) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *HdfsFileFolderParams) SetType(v string) {
	o.Type = &v
}

// GetLastModifiedTimeUsecs returns the LastModifiedTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HdfsFileFolderParams) GetLastModifiedTimeUsecs() int64 {
	if o == nil || o.LastModifiedTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.LastModifiedTimeUsecs.Get()
}

// GetLastModifiedTimeUsecsOk returns a tuple with the LastModifiedTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HdfsFileFolderParams) GetLastModifiedTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastModifiedTimeUsecs.Get(), o.LastModifiedTimeUsecs.IsSet()
}

// HasLastModifiedTimeUsecs returns a boolean if a field has been set.
func (o *HdfsFileFolderParams) HasLastModifiedTimeUsecs() bool {
	if o != nil && o.LastModifiedTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedTimeUsecs gets a reference to the given NullableInt64 and assigns it to the LastModifiedTimeUsecs field.
func (o *HdfsFileFolderParams) SetLastModifiedTimeUsecs(v int64) {
	o.LastModifiedTimeUsecs.Set(&v)
}
// SetLastModifiedTimeUsecsNil sets the value for LastModifiedTimeUsecs to be an explicit nil
func (o *HdfsFileFolderParams) SetLastModifiedTimeUsecsNil() {
	o.LastModifiedTimeUsecs.Set(nil)
}

// UnsetLastModifiedTimeUsecs ensures that no value is present for LastModifiedTimeUsecs, not even an explicit nil
func (o *HdfsFileFolderParams) UnsetLastModifiedTimeUsecs() {
	o.LastModifiedTimeUsecs.Unset()
}

// GetSizeBytes returns the SizeBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HdfsFileFolderParams) GetSizeBytes() int64 {
	if o == nil || o.SizeBytes.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SizeBytes.Get()
}

// GetSizeBytesOk returns a tuple with the SizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HdfsFileFolderParams) GetSizeBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SizeBytes.Get(), o.SizeBytes.IsSet()
}

// HasSizeBytes returns a boolean if a field has been set.
func (o *HdfsFileFolderParams) HasSizeBytes() bool {
	if o != nil && o.SizeBytes.IsSet() {
		return true
	}

	return false
}

// SetSizeBytes gets a reference to the given NullableInt64 and assigns it to the SizeBytes field.
func (o *HdfsFileFolderParams) SetSizeBytes(v int64) {
	o.SizeBytes.Set(&v)
}
// SetSizeBytesNil sets the value for SizeBytes to be an explicit nil
func (o *HdfsFileFolderParams) SetSizeBytesNil() {
	o.SizeBytes.Set(nil)
}

// UnsetSizeBytes ensures that no value is present for SizeBytes, not even an explicit nil
func (o *HdfsFileFolderParams) UnsetSizeBytes() {
	o.SizeBytes.Unset()
}

func (o HdfsFileFolderParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Path.IsSet() {
		toSerialize["path"] = o.Path.Get()
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.LastModifiedTimeUsecs.IsSet() {
		toSerialize["lastModifiedTimeUsecs"] = o.LastModifiedTimeUsecs.Get()
	}
	if o.SizeBytes.IsSet() {
		toSerialize["sizeBytes"] = o.SizeBytes.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableHdfsFileFolderParams struct {
	value *HdfsFileFolderParams
	isSet bool
}

func (v NullableHdfsFileFolderParams) Get() *HdfsFileFolderParams {
	return v.value
}

func (v *NullableHdfsFileFolderParams) Set(val *HdfsFileFolderParams) {
	v.value = val
	v.isSet = true
}

func (v NullableHdfsFileFolderParams) IsSet() bool {
	return v.isSet
}

func (v *NullableHdfsFileFolderParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHdfsFileFolderParams(val *HdfsFileFolderParams) *NullableHdfsFileFolderParams {
	return &NullableHdfsFileFolderParams{value: val, isSet: true}
}

func (v NullableHdfsFileFolderParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHdfsFileFolderParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o HdfsFileFolderParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}