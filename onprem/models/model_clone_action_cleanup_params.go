/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// CloneActionCleanupParams Specifies the params for the cleanup action.
type CloneActionCleanupParams struct {
	// Specifies the type of cleanup to be done.
	CleanupType NullableString `json:"cleanupType"`
	PowerOffVmParams *CloneActionCleanupPowerOffVmParams `json:"powerOffVmParams,omitempty"`
	CloudResourcesCleanupParams *CloneActionCleanupCloudResourcesCleanupParams `json:"cloudResourcesCleanupParams,omitempty"`
}

// NewCloneActionCleanupParams instantiates a new CloneActionCleanupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloneActionCleanupParams(cleanupType NullableString) *CloneActionCleanupParams {
	this := CloneActionCleanupParams{}
	this.CleanupType = cleanupType
	return &this
}

// NewCloneActionCleanupParamsWithDefaults instantiates a new CloneActionCleanupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloneActionCleanupParamsWithDefaults() *CloneActionCleanupParams {
	this := CloneActionCleanupParams{}
	return &this
}

// GetCleanupType returns the CleanupType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CloneActionCleanupParams) GetCleanupType() string {
	if o == nil || o.CleanupType.Get() == nil {
		var ret string
		return ret
	}

	return *o.CleanupType.Get()
}

// GetCleanupTypeOk returns a tuple with the CleanupType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloneActionCleanupParams) GetCleanupTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CleanupType.Get(), o.CleanupType.IsSet()
}

// SetCleanupType sets field value
func (o *CloneActionCleanupParams) SetCleanupType(v string) {
	o.CleanupType.Set(&v)
}

// GetPowerOffVmParams returns the PowerOffVmParams field value if set, zero value otherwise.
func (o *CloneActionCleanupParams) GetPowerOffVmParams() CloneActionCleanupPowerOffVmParams {
	if o == nil || o.PowerOffVmParams == nil {
		var ret CloneActionCleanupPowerOffVmParams
		return ret
	}
	return *o.PowerOffVmParams
}

// GetPowerOffVmParamsOk returns a tuple with the PowerOffVmParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneActionCleanupParams) GetPowerOffVmParamsOk() (*CloneActionCleanupPowerOffVmParams, bool) {
	if o == nil || o.PowerOffVmParams == nil {
		return nil, false
	}
	return o.PowerOffVmParams, true
}

// HasPowerOffVmParams returns a boolean if a field has been set.
func (o *CloneActionCleanupParams) HasPowerOffVmParams() bool {
	if o != nil && o.PowerOffVmParams != nil {
		return true
	}

	return false
}

// SetPowerOffVmParams gets a reference to the given CloneActionCleanupPowerOffVmParams and assigns it to the PowerOffVmParams field.
func (o *CloneActionCleanupParams) SetPowerOffVmParams(v CloneActionCleanupPowerOffVmParams) {
	o.PowerOffVmParams = &v
}

// GetCloudResourcesCleanupParams returns the CloudResourcesCleanupParams field value if set, zero value otherwise.
func (o *CloneActionCleanupParams) GetCloudResourcesCleanupParams() CloneActionCleanupCloudResourcesCleanupParams {
	if o == nil || o.CloudResourcesCleanupParams == nil {
		var ret CloneActionCleanupCloudResourcesCleanupParams
		return ret
	}
	return *o.CloudResourcesCleanupParams
}

// GetCloudResourcesCleanupParamsOk returns a tuple with the CloudResourcesCleanupParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneActionCleanupParams) GetCloudResourcesCleanupParamsOk() (*CloneActionCleanupCloudResourcesCleanupParams, bool) {
	if o == nil || o.CloudResourcesCleanupParams == nil {
		return nil, false
	}
	return o.CloudResourcesCleanupParams, true
}

// HasCloudResourcesCleanupParams returns a boolean if a field has been set.
func (o *CloneActionCleanupParams) HasCloudResourcesCleanupParams() bool {
	if o != nil && o.CloudResourcesCleanupParams != nil {
		return true
	}

	return false
}

// SetCloudResourcesCleanupParams gets a reference to the given CloneActionCleanupCloudResourcesCleanupParams and assigns it to the CloudResourcesCleanupParams field.
func (o *CloneActionCleanupParams) SetCloudResourcesCleanupParams(v CloneActionCleanupCloudResourcesCleanupParams) {
	o.CloudResourcesCleanupParams = &v
}

func (o CloneActionCleanupParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cleanupType"] = o.CleanupType.Get()
	}
	if o.PowerOffVmParams != nil {
		toSerialize["powerOffVmParams"] = o.PowerOffVmParams
	}
	if o.CloudResourcesCleanupParams != nil {
		toSerialize["cloudResourcesCleanupParams"] = o.CloudResourcesCleanupParams
	}
	return json.Marshal(toSerialize)
}

type NullableCloneActionCleanupParams struct {
	value *CloneActionCleanupParams
	isSet bool
}

func (v NullableCloneActionCleanupParams) Get() *CloneActionCleanupParams {
	return v.value
}

func (v *NullableCloneActionCleanupParams) Set(val *CloneActionCleanupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCloneActionCleanupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCloneActionCleanupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloneActionCleanupParams(val *CloneActionCleanupParams) *NullableCloneActionCleanupParams {
	return &NullableCloneActionCleanupParams{value: val, isSet: true}
}

func (v NullableCloneActionCleanupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloneActionCleanupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o CloneActionCleanupParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}