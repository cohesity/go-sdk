/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// IamUserAwsCredentials Specifies the credentials to register a commercial AWS
type IamUserAwsCredentials struct {
	// Specifies Access key of the AWS account.
	AccessKey NullableString `json:"accessKey"`
	// Specifies Secret Access key of the AWS account.
	SecretAccessKey NullableString `json:"secretAccessKey"`
	// Specifies Amazon Resource Name (owner ID) of the IAM user, acts as an unique identifier of as AWS entity.
	Arn NullableString `json:"arn"`
}

// NewIamUserAwsCredentials instantiates a new IamUserAwsCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIamUserAwsCredentials(accessKey NullableString, secretAccessKey NullableString, arn NullableString) *IamUserAwsCredentials {
	this := IamUserAwsCredentials{}
	this.AccessKey = accessKey
	this.SecretAccessKey = secretAccessKey
	this.Arn = arn
	return &this
}

// NewIamUserAwsCredentialsWithDefaults instantiates a new IamUserAwsCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIamUserAwsCredentialsWithDefaults() *IamUserAwsCredentials {
	this := IamUserAwsCredentials{}
	return &this
}

// GetAccessKey returns the AccessKey field value
// If the value is explicit nil, the zero value for string will be returned
func (o *IamUserAwsCredentials) GetAccessKey() string {
	if o == nil || o.AccessKey.Get() == nil {
		var ret string
		return ret
	}

	return *o.AccessKey.Get()
}

// GetAccessKeyOk returns a tuple with the AccessKey field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IamUserAwsCredentials) GetAccessKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccessKey.Get(), o.AccessKey.IsSet()
}

// SetAccessKey sets field value
func (o *IamUserAwsCredentials) SetAccessKey(v string) {
	o.AccessKey.Set(&v)
}

// GetSecretAccessKey returns the SecretAccessKey field value
// If the value is explicit nil, the zero value for string will be returned
func (o *IamUserAwsCredentials) GetSecretAccessKey() string {
	if o == nil || o.SecretAccessKey.Get() == nil {
		var ret string
		return ret
	}

	return *o.SecretAccessKey.Get()
}

// GetSecretAccessKeyOk returns a tuple with the SecretAccessKey field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IamUserAwsCredentials) GetSecretAccessKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SecretAccessKey.Get(), o.SecretAccessKey.IsSet()
}

// SetSecretAccessKey sets field value
func (o *IamUserAwsCredentials) SetSecretAccessKey(v string) {
	o.SecretAccessKey.Set(&v)
}

// GetArn returns the Arn field value
// If the value is explicit nil, the zero value for string will be returned
func (o *IamUserAwsCredentials) GetArn() string {
	if o == nil || o.Arn.Get() == nil {
		var ret string
		return ret
	}

	return *o.Arn.Get()
}

// GetArnOk returns a tuple with the Arn field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IamUserAwsCredentials) GetArnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Arn.Get(), o.Arn.IsSet()
}

// SetArn sets field value
func (o *IamUserAwsCredentials) SetArn(v string) {
	o.Arn.Set(&v)
}

func (o IamUserAwsCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accessKey"] = o.AccessKey.Get()
	}
	if true {
		toSerialize["secretAccessKey"] = o.SecretAccessKey.Get()
	}
	if true {
		toSerialize["arn"] = o.Arn.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableIamUserAwsCredentials struct {
	value *IamUserAwsCredentials
	isSet bool
}

func (v NullableIamUserAwsCredentials) Get() *IamUserAwsCredentials {
	return v.value
}

func (v *NullableIamUserAwsCredentials) Set(val *IamUserAwsCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableIamUserAwsCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableIamUserAwsCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIamUserAwsCredentials(val *IamUserAwsCredentials) *NullableIamUserAwsCredentials {
	return &NullableIamUserAwsCredentials{value: val, isSet: true}
}

func (v NullableIamUserAwsCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIamUserAwsCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o IamUserAwsCredentials) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}