/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// RecoverOracleAppNewSourceConfig Specifies the new destination Source configuration where the databases will be recovered.
type RecoverOracleAppNewSourceConfig struct {
	// Specifies the source id of target host where databases will be recovered. This source id can be a physical host or virtual machine.
	Host NullableRecoveryObjectIdentifier `json:"host"`
	// Specifies if recovery target is a database or a view.
	RecoveryTarget NullableString `json:"recoveryTarget,omitempty"`
	// Specifies recovery parameters when recovering to a database
	RecoverDatabaseParams NullableRecoverOracleNewTargetDatabaseConfig `json:"recoverDatabaseParams,omitempty"`
	// Specifies recovery parameters when recovering to a view.
	RecoverViewParams NullableRecoverOracleNewTargetViewConfig `json:"recoverViewParams,omitempty"`
}

// NewRecoverOracleAppNewSourceConfig instantiates a new RecoverOracleAppNewSourceConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverOracleAppNewSourceConfig(host NullableRecoveryObjectIdentifier) *RecoverOracleAppNewSourceConfig {
	this := RecoverOracleAppNewSourceConfig{}
	this.Host = host
	return &this
}

// NewRecoverOracleAppNewSourceConfigWithDefaults instantiates a new RecoverOracleAppNewSourceConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverOracleAppNewSourceConfigWithDefaults() *RecoverOracleAppNewSourceConfig {
	this := RecoverOracleAppNewSourceConfig{}
	return &this
}

// GetHost returns the Host field value
// If the value is explicit nil, the zero value for RecoveryObjectIdentifier will be returned
func (o *RecoverOracleAppNewSourceConfig) GetHost() RecoveryObjectIdentifier {
	if o == nil || o.Host.Get() == nil {
		var ret RecoveryObjectIdentifier
		return ret
	}

	return *o.Host.Get()
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverOracleAppNewSourceConfig) GetHostOk() (*RecoveryObjectIdentifier, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Host.Get(), o.Host.IsSet()
}

// SetHost sets field value
func (o *RecoverOracleAppNewSourceConfig) SetHost(v RecoveryObjectIdentifier) {
	o.Host.Set(&v)
}

// GetRecoveryTarget returns the RecoveryTarget field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverOracleAppNewSourceConfig) GetRecoveryTarget() string {
	if o == nil || o.RecoveryTarget.Get() == nil {
		var ret string
		return ret
	}
	return *o.RecoveryTarget.Get()
}

// GetRecoveryTargetOk returns a tuple with the RecoveryTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverOracleAppNewSourceConfig) GetRecoveryTargetOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RecoveryTarget.Get(), o.RecoveryTarget.IsSet()
}

// HasRecoveryTarget returns a boolean if a field has been set.
func (o *RecoverOracleAppNewSourceConfig) HasRecoveryTarget() bool {
	if o != nil && o.RecoveryTarget.IsSet() {
		return true
	}

	return false
}

// SetRecoveryTarget gets a reference to the given NullableString and assigns it to the RecoveryTarget field.
func (o *RecoverOracleAppNewSourceConfig) SetRecoveryTarget(v string) {
	o.RecoveryTarget.Set(&v)
}
// SetRecoveryTargetNil sets the value for RecoveryTarget to be an explicit nil
func (o *RecoverOracleAppNewSourceConfig) SetRecoveryTargetNil() {
	o.RecoveryTarget.Set(nil)
}

// UnsetRecoveryTarget ensures that no value is present for RecoveryTarget, not even an explicit nil
func (o *RecoverOracleAppNewSourceConfig) UnsetRecoveryTarget() {
	o.RecoveryTarget.Unset()
}

// GetRecoverDatabaseParams returns the RecoverDatabaseParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverOracleAppNewSourceConfig) GetRecoverDatabaseParams() RecoverOracleNewTargetDatabaseConfig {
	if o == nil || o.RecoverDatabaseParams.Get() == nil {
		var ret RecoverOracleNewTargetDatabaseConfig
		return ret
	}
	return *o.RecoverDatabaseParams.Get()
}

// GetRecoverDatabaseParamsOk returns a tuple with the RecoverDatabaseParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverOracleAppNewSourceConfig) GetRecoverDatabaseParamsOk() (*RecoverOracleNewTargetDatabaseConfig, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RecoverDatabaseParams.Get(), o.RecoverDatabaseParams.IsSet()
}

// HasRecoverDatabaseParams returns a boolean if a field has been set.
func (o *RecoverOracleAppNewSourceConfig) HasRecoverDatabaseParams() bool {
	if o != nil && o.RecoverDatabaseParams.IsSet() {
		return true
	}

	return false
}

// SetRecoverDatabaseParams gets a reference to the given NullableRecoverOracleNewTargetDatabaseConfig and assigns it to the RecoverDatabaseParams field.
func (o *RecoverOracleAppNewSourceConfig) SetRecoverDatabaseParams(v RecoverOracleNewTargetDatabaseConfig) {
	o.RecoverDatabaseParams.Set(&v)
}
// SetRecoverDatabaseParamsNil sets the value for RecoverDatabaseParams to be an explicit nil
func (o *RecoverOracleAppNewSourceConfig) SetRecoverDatabaseParamsNil() {
	o.RecoverDatabaseParams.Set(nil)
}

// UnsetRecoverDatabaseParams ensures that no value is present for RecoverDatabaseParams, not even an explicit nil
func (o *RecoverOracleAppNewSourceConfig) UnsetRecoverDatabaseParams() {
	o.RecoverDatabaseParams.Unset()
}

// GetRecoverViewParams returns the RecoverViewParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverOracleAppNewSourceConfig) GetRecoverViewParams() RecoverOracleNewTargetViewConfig {
	if o == nil || o.RecoverViewParams.Get() == nil {
		var ret RecoverOracleNewTargetViewConfig
		return ret
	}
	return *o.RecoverViewParams.Get()
}

// GetRecoverViewParamsOk returns a tuple with the RecoverViewParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverOracleAppNewSourceConfig) GetRecoverViewParamsOk() (*RecoverOracleNewTargetViewConfig, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RecoverViewParams.Get(), o.RecoverViewParams.IsSet()
}

// HasRecoverViewParams returns a boolean if a field has been set.
func (o *RecoverOracleAppNewSourceConfig) HasRecoverViewParams() bool {
	if o != nil && o.RecoverViewParams.IsSet() {
		return true
	}

	return false
}

// SetRecoverViewParams gets a reference to the given NullableRecoverOracleNewTargetViewConfig and assigns it to the RecoverViewParams field.
func (o *RecoverOracleAppNewSourceConfig) SetRecoverViewParams(v RecoverOracleNewTargetViewConfig) {
	o.RecoverViewParams.Set(&v)
}
// SetRecoverViewParamsNil sets the value for RecoverViewParams to be an explicit nil
func (o *RecoverOracleAppNewSourceConfig) SetRecoverViewParamsNil() {
	o.RecoverViewParams.Set(nil)
}

// UnsetRecoverViewParams ensures that no value is present for RecoverViewParams, not even an explicit nil
func (o *RecoverOracleAppNewSourceConfig) UnsetRecoverViewParams() {
	o.RecoverViewParams.Unset()
}

func (o RecoverOracleAppNewSourceConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["host"] = o.Host.Get()
	}
	if o.RecoveryTarget.IsSet() {
		toSerialize["recoveryTarget"] = o.RecoveryTarget.Get()
	}
	if o.RecoverDatabaseParams.IsSet() {
		toSerialize["recoverDatabaseParams"] = o.RecoverDatabaseParams.Get()
	}
	if o.RecoverViewParams.IsSet() {
		toSerialize["recoverViewParams"] = o.RecoverViewParams.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverOracleAppNewSourceConfig struct {
	value *RecoverOracleAppNewSourceConfig
	isSet bool
}

func (v NullableRecoverOracleAppNewSourceConfig) Get() *RecoverOracleAppNewSourceConfig {
	return v.value
}

func (v *NullableRecoverOracleAppNewSourceConfig) Set(val *RecoverOracleAppNewSourceConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverOracleAppNewSourceConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverOracleAppNewSourceConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverOracleAppNewSourceConfig(val *RecoverOracleAppNewSourceConfig) *NullableRecoverOracleAppNewSourceConfig {
	return &NullableRecoverOracleAppNewSourceConfig{value: val, isSet: true}
}

func (v NullableRecoverOracleAppNewSourceConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverOracleAppNewSourceConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o RecoverOracleAppNewSourceConfig) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}