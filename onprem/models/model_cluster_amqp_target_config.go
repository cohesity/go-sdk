/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// ClusterAMQPTargetConfig Specifies the AMQP target config.
type ClusterAMQPTargetConfig struct {
	// Specifies the server ip.
	ServerIp NullableString `json:"serverIp,omitempty"`
	// Specifies the username.
	Username NullableString `json:"username,omitempty"`
	// Specifies the password.
	Password NullableString `json:"password,omitempty"`
	// Specifies the virtual host.
	VirtualHost NullableString `json:"virtualHost,omitempty"`
	// Specifies the exchange.
	Exchange NullableString `json:"exchange,omitempty"`
	// Specifies the filer id.
	FilerId NullableInt64 `json:"filerId,omitempty"`
	// Specifies the certificate.
	Certificate NullableString `json:"certificate,omitempty"`
}

// NewClusterAMQPTargetConfig instantiates a new ClusterAMQPTargetConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterAMQPTargetConfig() *ClusterAMQPTargetConfig {
	this := ClusterAMQPTargetConfig{}
	return &this
}

// NewClusterAMQPTargetConfigWithDefaults instantiates a new ClusterAMQPTargetConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterAMQPTargetConfigWithDefaults() *ClusterAMQPTargetConfig {
	this := ClusterAMQPTargetConfig{}
	return &this
}

// GetServerIp returns the ServerIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAMQPTargetConfig) GetServerIp() string {
	if o == nil || o.ServerIp.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServerIp.Get()
}

// GetServerIpOk returns a tuple with the ServerIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAMQPTargetConfig) GetServerIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServerIp.Get(), o.ServerIp.IsSet()
}

// HasServerIp returns a boolean if a field has been set.
func (o *ClusterAMQPTargetConfig) HasServerIp() bool {
	if o != nil && o.ServerIp.IsSet() {
		return true
	}

	return false
}

// SetServerIp gets a reference to the given NullableString and assigns it to the ServerIp field.
func (o *ClusterAMQPTargetConfig) SetServerIp(v string) {
	o.ServerIp.Set(&v)
}
// SetServerIpNil sets the value for ServerIp to be an explicit nil
func (o *ClusterAMQPTargetConfig) SetServerIpNil() {
	o.ServerIp.Set(nil)
}

// UnsetServerIp ensures that no value is present for ServerIp, not even an explicit nil
func (o *ClusterAMQPTargetConfig) UnsetServerIp() {
	o.ServerIp.Unset()
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAMQPTargetConfig) GetUsername() string {
	if o == nil || o.Username.Get() == nil {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAMQPTargetConfig) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *ClusterAMQPTargetConfig) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *ClusterAMQPTargetConfig) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *ClusterAMQPTargetConfig) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *ClusterAMQPTargetConfig) UnsetUsername() {
	o.Username.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAMQPTargetConfig) GetPassword() string {
	if o == nil || o.Password.Get() == nil {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAMQPTargetConfig) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *ClusterAMQPTargetConfig) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *ClusterAMQPTargetConfig) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *ClusterAMQPTargetConfig) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *ClusterAMQPTargetConfig) UnsetPassword() {
	o.Password.Unset()
}

// GetVirtualHost returns the VirtualHost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAMQPTargetConfig) GetVirtualHost() string {
	if o == nil || o.VirtualHost.Get() == nil {
		var ret string
		return ret
	}
	return *o.VirtualHost.Get()
}

// GetVirtualHostOk returns a tuple with the VirtualHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAMQPTargetConfig) GetVirtualHostOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VirtualHost.Get(), o.VirtualHost.IsSet()
}

// HasVirtualHost returns a boolean if a field has been set.
func (o *ClusterAMQPTargetConfig) HasVirtualHost() bool {
	if o != nil && o.VirtualHost.IsSet() {
		return true
	}

	return false
}

// SetVirtualHost gets a reference to the given NullableString and assigns it to the VirtualHost field.
func (o *ClusterAMQPTargetConfig) SetVirtualHost(v string) {
	o.VirtualHost.Set(&v)
}
// SetVirtualHostNil sets the value for VirtualHost to be an explicit nil
func (o *ClusterAMQPTargetConfig) SetVirtualHostNil() {
	o.VirtualHost.Set(nil)
}

// UnsetVirtualHost ensures that no value is present for VirtualHost, not even an explicit nil
func (o *ClusterAMQPTargetConfig) UnsetVirtualHost() {
	o.VirtualHost.Unset()
}

// GetExchange returns the Exchange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAMQPTargetConfig) GetExchange() string {
	if o == nil || o.Exchange.Get() == nil {
		var ret string
		return ret
	}
	return *o.Exchange.Get()
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAMQPTargetConfig) GetExchangeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Exchange.Get(), o.Exchange.IsSet()
}

// HasExchange returns a boolean if a field has been set.
func (o *ClusterAMQPTargetConfig) HasExchange() bool {
	if o != nil && o.Exchange.IsSet() {
		return true
	}

	return false
}

// SetExchange gets a reference to the given NullableString and assigns it to the Exchange field.
func (o *ClusterAMQPTargetConfig) SetExchange(v string) {
	o.Exchange.Set(&v)
}
// SetExchangeNil sets the value for Exchange to be an explicit nil
func (o *ClusterAMQPTargetConfig) SetExchangeNil() {
	o.Exchange.Set(nil)
}

// UnsetExchange ensures that no value is present for Exchange, not even an explicit nil
func (o *ClusterAMQPTargetConfig) UnsetExchange() {
	o.Exchange.Unset()
}

// GetFilerId returns the FilerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAMQPTargetConfig) GetFilerId() int64 {
	if o == nil || o.FilerId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.FilerId.Get()
}

// GetFilerIdOk returns a tuple with the FilerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAMQPTargetConfig) GetFilerIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FilerId.Get(), o.FilerId.IsSet()
}

// HasFilerId returns a boolean if a field has been set.
func (o *ClusterAMQPTargetConfig) HasFilerId() bool {
	if o != nil && o.FilerId.IsSet() {
		return true
	}

	return false
}

// SetFilerId gets a reference to the given NullableInt64 and assigns it to the FilerId field.
func (o *ClusterAMQPTargetConfig) SetFilerId(v int64) {
	o.FilerId.Set(&v)
}
// SetFilerIdNil sets the value for FilerId to be an explicit nil
func (o *ClusterAMQPTargetConfig) SetFilerIdNil() {
	o.FilerId.Set(nil)
}

// UnsetFilerId ensures that no value is present for FilerId, not even an explicit nil
func (o *ClusterAMQPTargetConfig) UnsetFilerId() {
	o.FilerId.Unset()
}

// GetCertificate returns the Certificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAMQPTargetConfig) GetCertificate() string {
	if o == nil || o.Certificate.Get() == nil {
		var ret string
		return ret
	}
	return *o.Certificate.Get()
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAMQPTargetConfig) GetCertificateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Certificate.Get(), o.Certificate.IsSet()
}

// HasCertificate returns a boolean if a field has been set.
func (o *ClusterAMQPTargetConfig) HasCertificate() bool {
	if o != nil && o.Certificate.IsSet() {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given NullableString and assigns it to the Certificate field.
func (o *ClusterAMQPTargetConfig) SetCertificate(v string) {
	o.Certificate.Set(&v)
}
// SetCertificateNil sets the value for Certificate to be an explicit nil
func (o *ClusterAMQPTargetConfig) SetCertificateNil() {
	o.Certificate.Set(nil)
}

// UnsetCertificate ensures that no value is present for Certificate, not even an explicit nil
func (o *ClusterAMQPTargetConfig) UnsetCertificate() {
	o.Certificate.Unset()
}

func (o ClusterAMQPTargetConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServerIp.IsSet() {
		toSerialize["serverIp"] = o.ServerIp.Get()
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if o.VirtualHost.IsSet() {
		toSerialize["virtualHost"] = o.VirtualHost.Get()
	}
	if o.Exchange.IsSet() {
		toSerialize["exchange"] = o.Exchange.Get()
	}
	if o.FilerId.IsSet() {
		toSerialize["filerId"] = o.FilerId.Get()
	}
	if o.Certificate.IsSet() {
		toSerialize["certificate"] = o.Certificate.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableClusterAMQPTargetConfig struct {
	value *ClusterAMQPTargetConfig
	isSet bool
}

func (v NullableClusterAMQPTargetConfig) Get() *ClusterAMQPTargetConfig {
	return v.value
}

func (v *NullableClusterAMQPTargetConfig) Set(val *ClusterAMQPTargetConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterAMQPTargetConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterAMQPTargetConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterAMQPTargetConfig(val *ClusterAMQPTargetConfig) *NullableClusterAMQPTargetConfig {
	return &NullableClusterAMQPTargetConfig{value: val, isSet: true}
}

func (v NullableClusterAMQPTargetConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterAMQPTargetConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o ClusterAMQPTargetConfig) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}