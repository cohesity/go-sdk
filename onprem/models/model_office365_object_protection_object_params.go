/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// Office365ObjectProtectionObjectParams Specifies the object parameters to create a Microsoft 365 Object Protection.
type Office365ObjectProtectionObjectParams struct {
	// Specifies the ID of the object being protected. If this is a non leaf level object, then the object will be auto-protected unless leaf objects are specified for exclusion.
	Id int64 `json:"id"`
	// Specifies the name of the object.
	Name NullableString `json:"name,omitempty"`
	// Specifies the ID of the objects to be excluded in the Object Protection.
	ExcludeObjectIds []int64 `json:"excludeObjectIds,omitempty"`
	// Specifies if the object has to be autoprotected. This is applicable only for sharepoint sites.
	ShouldAutoProtectObject NullableBool `json:"shouldAutoProtectObject,omitempty"`
}

// NewOffice365ObjectProtectionObjectParams instantiates a new Office365ObjectProtectionObjectParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOffice365ObjectProtectionObjectParams(id int64) *Office365ObjectProtectionObjectParams {
	this := Office365ObjectProtectionObjectParams{}
	this.Id = id
	return &this
}

// NewOffice365ObjectProtectionObjectParamsWithDefaults instantiates a new Office365ObjectProtectionObjectParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOffice365ObjectProtectionObjectParamsWithDefaults() *Office365ObjectProtectionObjectParams {
	this := Office365ObjectProtectionObjectParams{}
	return &this
}

// GetId returns the Id field value
func (o *Office365ObjectProtectionObjectParams) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Office365ObjectProtectionObjectParams) GetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Office365ObjectProtectionObjectParams) SetId(v int64) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Office365ObjectProtectionObjectParams) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Office365ObjectProtectionObjectParams) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *Office365ObjectProtectionObjectParams) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *Office365ObjectProtectionObjectParams) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *Office365ObjectProtectionObjectParams) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *Office365ObjectProtectionObjectParams) UnsetName() {
	o.Name.Unset()
}

// GetExcludeObjectIds returns the ExcludeObjectIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Office365ObjectProtectionObjectParams) GetExcludeObjectIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.ExcludeObjectIds
}

// GetExcludeObjectIdsOk returns a tuple with the ExcludeObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Office365ObjectProtectionObjectParams) GetExcludeObjectIdsOk() (*[]int64, bool) {
	if o == nil || o.ExcludeObjectIds == nil {
		return nil, false
	}
	return &o.ExcludeObjectIds, true
}

// HasExcludeObjectIds returns a boolean if a field has been set.
func (o *Office365ObjectProtectionObjectParams) HasExcludeObjectIds() bool {
	if o != nil && o.ExcludeObjectIds != nil {
		return true
	}

	return false
}

// SetExcludeObjectIds gets a reference to the given []int64 and assigns it to the ExcludeObjectIds field.
func (o *Office365ObjectProtectionObjectParams) SetExcludeObjectIds(v []int64) {
	o.ExcludeObjectIds = v
}

// GetShouldAutoProtectObject returns the ShouldAutoProtectObject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Office365ObjectProtectionObjectParams) GetShouldAutoProtectObject() bool {
	if o == nil || o.ShouldAutoProtectObject.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ShouldAutoProtectObject.Get()
}

// GetShouldAutoProtectObjectOk returns a tuple with the ShouldAutoProtectObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Office365ObjectProtectionObjectParams) GetShouldAutoProtectObjectOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ShouldAutoProtectObject.Get(), o.ShouldAutoProtectObject.IsSet()
}

// HasShouldAutoProtectObject returns a boolean if a field has been set.
func (o *Office365ObjectProtectionObjectParams) HasShouldAutoProtectObject() bool {
	if o != nil && o.ShouldAutoProtectObject.IsSet() {
		return true
	}

	return false
}

// SetShouldAutoProtectObject gets a reference to the given NullableBool and assigns it to the ShouldAutoProtectObject field.
func (o *Office365ObjectProtectionObjectParams) SetShouldAutoProtectObject(v bool) {
	o.ShouldAutoProtectObject.Set(&v)
}
// SetShouldAutoProtectObjectNil sets the value for ShouldAutoProtectObject to be an explicit nil
func (o *Office365ObjectProtectionObjectParams) SetShouldAutoProtectObjectNil() {
	o.ShouldAutoProtectObject.Set(nil)
}

// UnsetShouldAutoProtectObject ensures that no value is present for ShouldAutoProtectObject, not even an explicit nil
func (o *Office365ObjectProtectionObjectParams) UnsetShouldAutoProtectObject() {
	o.ShouldAutoProtectObject.Unset()
}

func (o Office365ObjectProtectionObjectParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ExcludeObjectIds != nil {
		toSerialize["excludeObjectIds"] = o.ExcludeObjectIds
	}
	if o.ShouldAutoProtectObject.IsSet() {
		toSerialize["shouldAutoProtectObject"] = o.ShouldAutoProtectObject.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOffice365ObjectProtectionObjectParams struct {
	value *Office365ObjectProtectionObjectParams
	isSet bool
}

func (v NullableOffice365ObjectProtectionObjectParams) Get() *Office365ObjectProtectionObjectParams {
	return v.value
}

func (v *NullableOffice365ObjectProtectionObjectParams) Set(val *Office365ObjectProtectionObjectParams) {
	v.value = val
	v.isSet = true
}

func (v NullableOffice365ObjectProtectionObjectParams) IsSet() bool {
	return v.isSet
}

func (v *NullableOffice365ObjectProtectionObjectParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOffice365ObjectProtectionObjectParams(val *Office365ObjectProtectionObjectParams) *NullableOffice365ObjectProtectionObjectParams {
	return &NullableOffice365ObjectProtectionObjectParams{value: val, isSet: true}
}

func (v NullableOffice365ObjectProtectionObjectParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOffice365ObjectProtectionObjectParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o Office365ObjectProtectionObjectParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}