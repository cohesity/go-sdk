/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// CommonAuthenticationMethodParams Specifies the cloud category parameter which are specific to AWS related External Targets.
type CommonAuthenticationMethodParams struct {
	// Specifies the AWS External Target Authentication type.
	AuthenticationType NullableString `json:"authenticationType"`
}

// NewCommonAuthenticationMethodParams instantiates a new CommonAuthenticationMethodParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonAuthenticationMethodParams(authenticationType NullableString) *CommonAuthenticationMethodParams {
	this := CommonAuthenticationMethodParams{}
	this.AuthenticationType = authenticationType
	return &this
}

// NewCommonAuthenticationMethodParamsWithDefaults instantiates a new CommonAuthenticationMethodParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonAuthenticationMethodParamsWithDefaults() *CommonAuthenticationMethodParams {
	this := CommonAuthenticationMethodParams{}
	return &this
}

// GetAuthenticationType returns the AuthenticationType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CommonAuthenticationMethodParams) GetAuthenticationType() string {
	if o == nil || o.AuthenticationType.Get() == nil {
		var ret string
		return ret
	}

	return *o.AuthenticationType.Get()
}

// GetAuthenticationTypeOk returns a tuple with the AuthenticationType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonAuthenticationMethodParams) GetAuthenticationTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AuthenticationType.Get(), o.AuthenticationType.IsSet()
}

// SetAuthenticationType sets field value
func (o *CommonAuthenticationMethodParams) SetAuthenticationType(v string) {
	o.AuthenticationType.Set(&v)
}

func (o CommonAuthenticationMethodParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["authenticationType"] = o.AuthenticationType.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCommonAuthenticationMethodParams struct {
	value *CommonAuthenticationMethodParams
	isSet bool
}

func (v NullableCommonAuthenticationMethodParams) Get() *CommonAuthenticationMethodParams {
	return v.value
}

func (v *NullableCommonAuthenticationMethodParams) Set(val *CommonAuthenticationMethodParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonAuthenticationMethodParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonAuthenticationMethodParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonAuthenticationMethodParams(val *CommonAuthenticationMethodParams) *NullableCommonAuthenticationMethodParams {
	return &NullableCommonAuthenticationMethodParams{value: val, isSet: true}
}

func (v NullableCommonAuthenticationMethodParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonAuthenticationMethodParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o CommonAuthenticationMethodParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}