/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// CassandraSecurityInfo Cassandra security related info.
type CassandraSecurityInfo struct {
	// Cassandra Authenticator/Authorizer.
	CassandraAuthorizer NullableString `json:"cassandraAuthorizer,omitempty"`
	// Is Cassandra authentication required ?
	CassandraAuthRequired NullableBool `json:"cassandraAuthRequired,omitempty"`
	// Cassandra Authentication type.
	CassandraAuthType NullableString `json:"cassandraAuthType,omitempty"`
	// Is DSE Authorization enabled for this cluster ?
	DseAuthorization NullableBool `json:"dseAuthorization,omitempty"`
	// Is Client Encryption enabled for this cluster ?
	ClientEncryption NullableBool `json:"clientEncryption,omitempty"`
	// 'Server internal node Encryption' type.
	ServerInternodeEncryptionType NullableString `json:"serverInternodeEncryptionType,omitempty"`
	// Is 'Server encryption request client authentication' enabled for this cluster ?
	ServerEncryptionReqClientAuth NullableBool `json:"serverEncryptionReqClientAuth,omitempty"`
}

// NewCassandraSecurityInfo instantiates a new CassandraSecurityInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCassandraSecurityInfo() *CassandraSecurityInfo {
	this := CassandraSecurityInfo{}
	return &this
}

// NewCassandraSecurityInfoWithDefaults instantiates a new CassandraSecurityInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCassandraSecurityInfoWithDefaults() *CassandraSecurityInfo {
	this := CassandraSecurityInfo{}
	return &this
}

// GetCassandraAuthorizer returns the CassandraAuthorizer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraSecurityInfo) GetCassandraAuthorizer() string {
	if o == nil || o.CassandraAuthorizer.Get() == nil {
		var ret string
		return ret
	}
	return *o.CassandraAuthorizer.Get()
}

// GetCassandraAuthorizerOk returns a tuple with the CassandraAuthorizer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraSecurityInfo) GetCassandraAuthorizerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CassandraAuthorizer.Get(), o.CassandraAuthorizer.IsSet()
}

// HasCassandraAuthorizer returns a boolean if a field has been set.
func (o *CassandraSecurityInfo) HasCassandraAuthorizer() bool {
	if o != nil && o.CassandraAuthorizer.IsSet() {
		return true
	}

	return false
}

// SetCassandraAuthorizer gets a reference to the given NullableString and assigns it to the CassandraAuthorizer field.
func (o *CassandraSecurityInfo) SetCassandraAuthorizer(v string) {
	o.CassandraAuthorizer.Set(&v)
}
// SetCassandraAuthorizerNil sets the value for CassandraAuthorizer to be an explicit nil
func (o *CassandraSecurityInfo) SetCassandraAuthorizerNil() {
	o.CassandraAuthorizer.Set(nil)
}

// UnsetCassandraAuthorizer ensures that no value is present for CassandraAuthorizer, not even an explicit nil
func (o *CassandraSecurityInfo) UnsetCassandraAuthorizer() {
	o.CassandraAuthorizer.Unset()
}

// GetCassandraAuthRequired returns the CassandraAuthRequired field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraSecurityInfo) GetCassandraAuthRequired() bool {
	if o == nil || o.CassandraAuthRequired.Get() == nil {
		var ret bool
		return ret
	}
	return *o.CassandraAuthRequired.Get()
}

// GetCassandraAuthRequiredOk returns a tuple with the CassandraAuthRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraSecurityInfo) GetCassandraAuthRequiredOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CassandraAuthRequired.Get(), o.CassandraAuthRequired.IsSet()
}

// HasCassandraAuthRequired returns a boolean if a field has been set.
func (o *CassandraSecurityInfo) HasCassandraAuthRequired() bool {
	if o != nil && o.CassandraAuthRequired.IsSet() {
		return true
	}

	return false
}

// SetCassandraAuthRequired gets a reference to the given NullableBool and assigns it to the CassandraAuthRequired field.
func (o *CassandraSecurityInfo) SetCassandraAuthRequired(v bool) {
	o.CassandraAuthRequired.Set(&v)
}
// SetCassandraAuthRequiredNil sets the value for CassandraAuthRequired to be an explicit nil
func (o *CassandraSecurityInfo) SetCassandraAuthRequiredNil() {
	o.CassandraAuthRequired.Set(nil)
}

// UnsetCassandraAuthRequired ensures that no value is present for CassandraAuthRequired, not even an explicit nil
func (o *CassandraSecurityInfo) UnsetCassandraAuthRequired() {
	o.CassandraAuthRequired.Unset()
}

// GetCassandraAuthType returns the CassandraAuthType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraSecurityInfo) GetCassandraAuthType() string {
	if o == nil || o.CassandraAuthType.Get() == nil {
		var ret string
		return ret
	}
	return *o.CassandraAuthType.Get()
}

// GetCassandraAuthTypeOk returns a tuple with the CassandraAuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraSecurityInfo) GetCassandraAuthTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CassandraAuthType.Get(), o.CassandraAuthType.IsSet()
}

// HasCassandraAuthType returns a boolean if a field has been set.
func (o *CassandraSecurityInfo) HasCassandraAuthType() bool {
	if o != nil && o.CassandraAuthType.IsSet() {
		return true
	}

	return false
}

// SetCassandraAuthType gets a reference to the given NullableString and assigns it to the CassandraAuthType field.
func (o *CassandraSecurityInfo) SetCassandraAuthType(v string) {
	o.CassandraAuthType.Set(&v)
}
// SetCassandraAuthTypeNil sets the value for CassandraAuthType to be an explicit nil
func (o *CassandraSecurityInfo) SetCassandraAuthTypeNil() {
	o.CassandraAuthType.Set(nil)
}

// UnsetCassandraAuthType ensures that no value is present for CassandraAuthType, not even an explicit nil
func (o *CassandraSecurityInfo) UnsetCassandraAuthType() {
	o.CassandraAuthType.Unset()
}

// GetDseAuthorization returns the DseAuthorization field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraSecurityInfo) GetDseAuthorization() bool {
	if o == nil || o.DseAuthorization.Get() == nil {
		var ret bool
		return ret
	}
	return *o.DseAuthorization.Get()
}

// GetDseAuthorizationOk returns a tuple with the DseAuthorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraSecurityInfo) GetDseAuthorizationOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DseAuthorization.Get(), o.DseAuthorization.IsSet()
}

// HasDseAuthorization returns a boolean if a field has been set.
func (o *CassandraSecurityInfo) HasDseAuthorization() bool {
	if o != nil && o.DseAuthorization.IsSet() {
		return true
	}

	return false
}

// SetDseAuthorization gets a reference to the given NullableBool and assigns it to the DseAuthorization field.
func (o *CassandraSecurityInfo) SetDseAuthorization(v bool) {
	o.DseAuthorization.Set(&v)
}
// SetDseAuthorizationNil sets the value for DseAuthorization to be an explicit nil
func (o *CassandraSecurityInfo) SetDseAuthorizationNil() {
	o.DseAuthorization.Set(nil)
}

// UnsetDseAuthorization ensures that no value is present for DseAuthorization, not even an explicit nil
func (o *CassandraSecurityInfo) UnsetDseAuthorization() {
	o.DseAuthorization.Unset()
}

// GetClientEncryption returns the ClientEncryption field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraSecurityInfo) GetClientEncryption() bool {
	if o == nil || o.ClientEncryption.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ClientEncryption.Get()
}

// GetClientEncryptionOk returns a tuple with the ClientEncryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraSecurityInfo) GetClientEncryptionOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClientEncryption.Get(), o.ClientEncryption.IsSet()
}

// HasClientEncryption returns a boolean if a field has been set.
func (o *CassandraSecurityInfo) HasClientEncryption() bool {
	if o != nil && o.ClientEncryption.IsSet() {
		return true
	}

	return false
}

// SetClientEncryption gets a reference to the given NullableBool and assigns it to the ClientEncryption field.
func (o *CassandraSecurityInfo) SetClientEncryption(v bool) {
	o.ClientEncryption.Set(&v)
}
// SetClientEncryptionNil sets the value for ClientEncryption to be an explicit nil
func (o *CassandraSecurityInfo) SetClientEncryptionNil() {
	o.ClientEncryption.Set(nil)
}

// UnsetClientEncryption ensures that no value is present for ClientEncryption, not even an explicit nil
func (o *CassandraSecurityInfo) UnsetClientEncryption() {
	o.ClientEncryption.Unset()
}

// GetServerInternodeEncryptionType returns the ServerInternodeEncryptionType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraSecurityInfo) GetServerInternodeEncryptionType() string {
	if o == nil || o.ServerInternodeEncryptionType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServerInternodeEncryptionType.Get()
}

// GetServerInternodeEncryptionTypeOk returns a tuple with the ServerInternodeEncryptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraSecurityInfo) GetServerInternodeEncryptionTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServerInternodeEncryptionType.Get(), o.ServerInternodeEncryptionType.IsSet()
}

// HasServerInternodeEncryptionType returns a boolean if a field has been set.
func (o *CassandraSecurityInfo) HasServerInternodeEncryptionType() bool {
	if o != nil && o.ServerInternodeEncryptionType.IsSet() {
		return true
	}

	return false
}

// SetServerInternodeEncryptionType gets a reference to the given NullableString and assigns it to the ServerInternodeEncryptionType field.
func (o *CassandraSecurityInfo) SetServerInternodeEncryptionType(v string) {
	o.ServerInternodeEncryptionType.Set(&v)
}
// SetServerInternodeEncryptionTypeNil sets the value for ServerInternodeEncryptionType to be an explicit nil
func (o *CassandraSecurityInfo) SetServerInternodeEncryptionTypeNil() {
	o.ServerInternodeEncryptionType.Set(nil)
}

// UnsetServerInternodeEncryptionType ensures that no value is present for ServerInternodeEncryptionType, not even an explicit nil
func (o *CassandraSecurityInfo) UnsetServerInternodeEncryptionType() {
	o.ServerInternodeEncryptionType.Unset()
}

// GetServerEncryptionReqClientAuth returns the ServerEncryptionReqClientAuth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraSecurityInfo) GetServerEncryptionReqClientAuth() bool {
	if o == nil || o.ServerEncryptionReqClientAuth.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ServerEncryptionReqClientAuth.Get()
}

// GetServerEncryptionReqClientAuthOk returns a tuple with the ServerEncryptionReqClientAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraSecurityInfo) GetServerEncryptionReqClientAuthOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServerEncryptionReqClientAuth.Get(), o.ServerEncryptionReqClientAuth.IsSet()
}

// HasServerEncryptionReqClientAuth returns a boolean if a field has been set.
func (o *CassandraSecurityInfo) HasServerEncryptionReqClientAuth() bool {
	if o != nil && o.ServerEncryptionReqClientAuth.IsSet() {
		return true
	}

	return false
}

// SetServerEncryptionReqClientAuth gets a reference to the given NullableBool and assigns it to the ServerEncryptionReqClientAuth field.
func (o *CassandraSecurityInfo) SetServerEncryptionReqClientAuth(v bool) {
	o.ServerEncryptionReqClientAuth.Set(&v)
}
// SetServerEncryptionReqClientAuthNil sets the value for ServerEncryptionReqClientAuth to be an explicit nil
func (o *CassandraSecurityInfo) SetServerEncryptionReqClientAuthNil() {
	o.ServerEncryptionReqClientAuth.Set(nil)
}

// UnsetServerEncryptionReqClientAuth ensures that no value is present for ServerEncryptionReqClientAuth, not even an explicit nil
func (o *CassandraSecurityInfo) UnsetServerEncryptionReqClientAuth() {
	o.ServerEncryptionReqClientAuth.Unset()
}

func (o CassandraSecurityInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CassandraAuthorizer.IsSet() {
		toSerialize["cassandraAuthorizer"] = o.CassandraAuthorizer.Get()
	}
	if o.CassandraAuthRequired.IsSet() {
		toSerialize["cassandraAuthRequired"] = o.CassandraAuthRequired.Get()
	}
	if o.CassandraAuthType.IsSet() {
		toSerialize["cassandraAuthType"] = o.CassandraAuthType.Get()
	}
	if o.DseAuthorization.IsSet() {
		toSerialize["dseAuthorization"] = o.DseAuthorization.Get()
	}
	if o.ClientEncryption.IsSet() {
		toSerialize["clientEncryption"] = o.ClientEncryption.Get()
	}
	if o.ServerInternodeEncryptionType.IsSet() {
		toSerialize["serverInternodeEncryptionType"] = o.ServerInternodeEncryptionType.Get()
	}
	if o.ServerEncryptionReqClientAuth.IsSet() {
		toSerialize["serverEncryptionReqClientAuth"] = o.ServerEncryptionReqClientAuth.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCassandraSecurityInfo struct {
	value *CassandraSecurityInfo
	isSet bool
}

func (v NullableCassandraSecurityInfo) Get() *CassandraSecurityInfo {
	return v.value
}

func (v *NullableCassandraSecurityInfo) Set(val *CassandraSecurityInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCassandraSecurityInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCassandraSecurityInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCassandraSecurityInfo(val *CassandraSecurityInfo) *NullableCassandraSecurityInfo {
	return &NullableCassandraSecurityInfo{value: val, isSet: true}
}

func (v NullableCassandraSecurityInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCassandraSecurityInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o CassandraSecurityInfo) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}