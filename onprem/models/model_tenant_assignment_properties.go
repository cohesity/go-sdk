/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// TenantAssignmentProperties List of all the assigned properties to a Tenant.
type TenantAssignmentProperties struct {
	StorageDomains *StorageDomains `json:"storageDomains,omitempty"`
	// A list of Ids of properties assigned to the tenant.
	Objects *[]int64 `json:"objects,omitempty"`
	// A list of Ids of properties assigned to the tenant.
	Vlans *[]string `json:"vlans,omitempty"`
	Views *GetViewsResult `json:"views,omitempty"`
	Policies *ProtectionPolicyResponseWithPagination `json:"policies,omitempty"`
}

// NewTenantAssignmentProperties instantiates a new TenantAssignmentProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantAssignmentProperties() *TenantAssignmentProperties {
	this := TenantAssignmentProperties{}
	return &this
}

// NewTenantAssignmentPropertiesWithDefaults instantiates a new TenantAssignmentProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantAssignmentPropertiesWithDefaults() *TenantAssignmentProperties {
	this := TenantAssignmentProperties{}
	return &this
}

// GetStorageDomains returns the StorageDomains field value if set, zero value otherwise.
func (o *TenantAssignmentProperties) GetStorageDomains() StorageDomains {
	if o == nil || o.StorageDomains == nil {
		var ret StorageDomains
		return ret
	}
	return *o.StorageDomains
}

// GetStorageDomainsOk returns a tuple with the StorageDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantAssignmentProperties) GetStorageDomainsOk() (*StorageDomains, bool) {
	if o == nil || o.StorageDomains == nil {
		return nil, false
	}
	return o.StorageDomains, true
}

// HasStorageDomains returns a boolean if a field has been set.
func (o *TenantAssignmentProperties) HasStorageDomains() bool {
	if o != nil && o.StorageDomains != nil {
		return true
	}

	return false
}

// SetStorageDomains gets a reference to the given StorageDomains and assigns it to the StorageDomains field.
func (o *TenantAssignmentProperties) SetStorageDomains(v StorageDomains) {
	o.StorageDomains = &v
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *TenantAssignmentProperties) GetObjects() []int64 {
	if o == nil || o.Objects == nil {
		var ret []int64
		return ret
	}
	return *o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantAssignmentProperties) GetObjectsOk() (*[]int64, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *TenantAssignmentProperties) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []int64 and assigns it to the Objects field.
func (o *TenantAssignmentProperties) SetObjects(v []int64) {
	o.Objects = &v
}

// GetVlans returns the Vlans field value if set, zero value otherwise.
func (o *TenantAssignmentProperties) GetVlans() []string {
	if o == nil || o.Vlans == nil {
		var ret []string
		return ret
	}
	return *o.Vlans
}

// GetVlansOk returns a tuple with the Vlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantAssignmentProperties) GetVlansOk() (*[]string, bool) {
	if o == nil || o.Vlans == nil {
		return nil, false
	}
	return o.Vlans, true
}

// HasVlans returns a boolean if a field has been set.
func (o *TenantAssignmentProperties) HasVlans() bool {
	if o != nil && o.Vlans != nil {
		return true
	}

	return false
}

// SetVlans gets a reference to the given []string and assigns it to the Vlans field.
func (o *TenantAssignmentProperties) SetVlans(v []string) {
	o.Vlans = &v
}

// GetViews returns the Views field value if set, zero value otherwise.
func (o *TenantAssignmentProperties) GetViews() GetViewsResult {
	if o == nil || o.Views == nil {
		var ret GetViewsResult
		return ret
	}
	return *o.Views
}

// GetViewsOk returns a tuple with the Views field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantAssignmentProperties) GetViewsOk() (*GetViewsResult, bool) {
	if o == nil || o.Views == nil {
		return nil, false
	}
	return o.Views, true
}

// HasViews returns a boolean if a field has been set.
func (o *TenantAssignmentProperties) HasViews() bool {
	if o != nil && o.Views != nil {
		return true
	}

	return false
}

// SetViews gets a reference to the given GetViewsResult and assigns it to the Views field.
func (o *TenantAssignmentProperties) SetViews(v GetViewsResult) {
	o.Views = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *TenantAssignmentProperties) GetPolicies() ProtectionPolicyResponseWithPagination {
	if o == nil || o.Policies == nil {
		var ret ProtectionPolicyResponseWithPagination
		return ret
	}
	return *o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantAssignmentProperties) GetPoliciesOk() (*ProtectionPolicyResponseWithPagination, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *TenantAssignmentProperties) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given ProtectionPolicyResponseWithPagination and assigns it to the Policies field.
func (o *TenantAssignmentProperties) SetPolicies(v ProtectionPolicyResponseWithPagination) {
	o.Policies = &v
}

func (o TenantAssignmentProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StorageDomains != nil {
		toSerialize["storageDomains"] = o.StorageDomains
	}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if o.Vlans != nil {
		toSerialize["vlans"] = o.Vlans
	}
	if o.Views != nil {
		toSerialize["views"] = o.Views
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableTenantAssignmentProperties struct {
	value *TenantAssignmentProperties
	isSet bool
}

func (v NullableTenantAssignmentProperties) Get() *TenantAssignmentProperties {
	return v.value
}

func (v *NullableTenantAssignmentProperties) Set(val *TenantAssignmentProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantAssignmentProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantAssignmentProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantAssignmentProperties(val *TenantAssignmentProperties) *NullableTenantAssignmentProperties {
	return &NullableTenantAssignmentProperties{value: val, isSet: true}
}

func (v NullableTenantAssignmentProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantAssignmentProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o TenantAssignmentProperties) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}