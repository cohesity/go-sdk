/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// CloneActionCleanupCloudResourcesCleanupParams Specifies the params for cloud resource cleanup.
type CloneActionCleanupCloudResourcesCleanupParams struct {
	// Specifies the IDs of the restore tasks which were used to spawn the cloud resources.
	RestoreTaskIds []float32 `json:"restoreTaskIds,omitempty"`
}

// NewCloneActionCleanupCloudResourcesCleanupParams instantiates a new CloneActionCleanupCloudResourcesCleanupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloneActionCleanupCloudResourcesCleanupParams() *CloneActionCleanupCloudResourcesCleanupParams {
	this := CloneActionCleanupCloudResourcesCleanupParams{}
	return &this
}

// NewCloneActionCleanupCloudResourcesCleanupParamsWithDefaults instantiates a new CloneActionCleanupCloudResourcesCleanupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloneActionCleanupCloudResourcesCleanupParamsWithDefaults() *CloneActionCleanupCloudResourcesCleanupParams {
	this := CloneActionCleanupCloudResourcesCleanupParams{}
	return &this
}

// GetRestoreTaskIds returns the RestoreTaskIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloneActionCleanupCloudResourcesCleanupParams) GetRestoreTaskIds() []float32 {
	if o == nil  {
		var ret []float32
		return ret
	}
	return o.RestoreTaskIds
}

// GetRestoreTaskIdsOk returns a tuple with the RestoreTaskIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloneActionCleanupCloudResourcesCleanupParams) GetRestoreTaskIdsOk() (*[]float32, bool) {
	if o == nil || o.RestoreTaskIds == nil {
		return nil, false
	}
	return &o.RestoreTaskIds, true
}

// HasRestoreTaskIds returns a boolean if a field has been set.
func (o *CloneActionCleanupCloudResourcesCleanupParams) HasRestoreTaskIds() bool {
	if o != nil && o.RestoreTaskIds != nil {
		return true
	}

	return false
}

// SetRestoreTaskIds gets a reference to the given []float32 and assigns it to the RestoreTaskIds field.
func (o *CloneActionCleanupCloudResourcesCleanupParams) SetRestoreTaskIds(v []float32) {
	o.RestoreTaskIds = v
}

func (o CloneActionCleanupCloudResourcesCleanupParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RestoreTaskIds != nil {
		toSerialize["restoreTaskIds"] = o.RestoreTaskIds
	}
	return json.Marshal(toSerialize)
}

type NullableCloneActionCleanupCloudResourcesCleanupParams struct {
	value *CloneActionCleanupCloudResourcesCleanupParams
	isSet bool
}

func (v NullableCloneActionCleanupCloudResourcesCleanupParams) Get() *CloneActionCleanupCloudResourcesCleanupParams {
	return v.value
}

func (v *NullableCloneActionCleanupCloudResourcesCleanupParams) Set(val *CloneActionCleanupCloudResourcesCleanupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCloneActionCleanupCloudResourcesCleanupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCloneActionCleanupCloudResourcesCleanupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloneActionCleanupCloudResourcesCleanupParams(val *CloneActionCleanupCloudResourcesCleanupParams) *NullableCloneActionCleanupCloudResourcesCleanupParams {
	return &NullableCloneActionCleanupCloudResourcesCleanupParams{value: val, isSet: true}
}

func (v NullableCloneActionCleanupCloudResourcesCleanupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloneActionCleanupCloudResourcesCleanupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o CloneActionCleanupCloudResourcesCleanupParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}