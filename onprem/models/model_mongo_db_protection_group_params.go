/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// MongoDBProtectionGroupParams Specifies the parameters for MongoDB Protection Group.
type MongoDBProtectionGroupParams struct {
	// Specifies the objects to be included in the Protection Group.
	Objects *[]NoSqlProtectionGroupObjectParams `json:"objects,omitempty"`
	// Specifies the maximum number of concurrent IO Streams that will be created to exchange data with the cluster.
	Concurrency NullableInt32 `json:"concurrency,omitempty"`
	// Specifies the maximum network bandwidth that each concurrent IO Stream can use for exchanging data with the cluster.
	BandwidthMBPS NullableInt64 `json:"bandwidthMBPS,omitempty"`
	// Specifies the objects to be excluded in the Protection Group.
	ExcludeObjectIds []int64 `json:"excludeObjectIds,omitempty"`
	// Object ID of the Source on which this protection was run .
	SourceId NullableInt64 `json:"sourceId,omitempty"`
	// Specifies the name of the Source on which this protection was run.
	SourceName NullableString `json:"sourceName,omitempty"`
	// Specifies the CDP related information for a given protection group. This field will only be populated when protection group is configured with a CDP policy.
	CdpInfo *MongoDBCdpJobInfo `json:"cdpInfo,omitempty"`
}

// NewMongoDBProtectionGroupParams instantiates a new MongoDBProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMongoDBProtectionGroupParams() *MongoDBProtectionGroupParams {
	this := MongoDBProtectionGroupParams{}
	return &this
}

// NewMongoDBProtectionGroupParamsWithDefaults instantiates a new MongoDBProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMongoDBProtectionGroupParamsWithDefaults() *MongoDBProtectionGroupParams {
	this := MongoDBProtectionGroupParams{}
	return &this
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *MongoDBProtectionGroupParams) GetObjects() []NoSqlProtectionGroupObjectParams {
	if o == nil || o.Objects == nil {
		var ret []NoSqlProtectionGroupObjectParams
		return ret
	}
	return *o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongoDBProtectionGroupParams) GetObjectsOk() (*[]NoSqlProtectionGroupObjectParams, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *MongoDBProtectionGroupParams) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []NoSqlProtectionGroupObjectParams and assigns it to the Objects field.
func (o *MongoDBProtectionGroupParams) SetObjects(v []NoSqlProtectionGroupObjectParams) {
	o.Objects = &v
}

// GetConcurrency returns the Concurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MongoDBProtectionGroupParams) GetConcurrency() int32 {
	if o == nil || o.Concurrency.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Concurrency.Get()
}

// GetConcurrencyOk returns a tuple with the Concurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MongoDBProtectionGroupParams) GetConcurrencyOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Concurrency.Get(), o.Concurrency.IsSet()
}

// HasConcurrency returns a boolean if a field has been set.
func (o *MongoDBProtectionGroupParams) HasConcurrency() bool {
	if o != nil && o.Concurrency.IsSet() {
		return true
	}

	return false
}

// SetConcurrency gets a reference to the given NullableInt32 and assigns it to the Concurrency field.
func (o *MongoDBProtectionGroupParams) SetConcurrency(v int32) {
	o.Concurrency.Set(&v)
}
// SetConcurrencyNil sets the value for Concurrency to be an explicit nil
func (o *MongoDBProtectionGroupParams) SetConcurrencyNil() {
	o.Concurrency.Set(nil)
}

// UnsetConcurrency ensures that no value is present for Concurrency, not even an explicit nil
func (o *MongoDBProtectionGroupParams) UnsetConcurrency() {
	o.Concurrency.Unset()
}

// GetBandwidthMBPS returns the BandwidthMBPS field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MongoDBProtectionGroupParams) GetBandwidthMBPS() int64 {
	if o == nil || o.BandwidthMBPS.Get() == nil {
		var ret int64
		return ret
	}
	return *o.BandwidthMBPS.Get()
}

// GetBandwidthMBPSOk returns a tuple with the BandwidthMBPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MongoDBProtectionGroupParams) GetBandwidthMBPSOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BandwidthMBPS.Get(), o.BandwidthMBPS.IsSet()
}

// HasBandwidthMBPS returns a boolean if a field has been set.
func (o *MongoDBProtectionGroupParams) HasBandwidthMBPS() bool {
	if o != nil && o.BandwidthMBPS.IsSet() {
		return true
	}

	return false
}

// SetBandwidthMBPS gets a reference to the given NullableInt64 and assigns it to the BandwidthMBPS field.
func (o *MongoDBProtectionGroupParams) SetBandwidthMBPS(v int64) {
	o.BandwidthMBPS.Set(&v)
}
// SetBandwidthMBPSNil sets the value for BandwidthMBPS to be an explicit nil
func (o *MongoDBProtectionGroupParams) SetBandwidthMBPSNil() {
	o.BandwidthMBPS.Set(nil)
}

// UnsetBandwidthMBPS ensures that no value is present for BandwidthMBPS, not even an explicit nil
func (o *MongoDBProtectionGroupParams) UnsetBandwidthMBPS() {
	o.BandwidthMBPS.Unset()
}

// GetExcludeObjectIds returns the ExcludeObjectIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MongoDBProtectionGroupParams) GetExcludeObjectIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.ExcludeObjectIds
}

// GetExcludeObjectIdsOk returns a tuple with the ExcludeObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MongoDBProtectionGroupParams) GetExcludeObjectIdsOk() (*[]int64, bool) {
	if o == nil || o.ExcludeObjectIds == nil {
		return nil, false
	}
	return &o.ExcludeObjectIds, true
}

// HasExcludeObjectIds returns a boolean if a field has been set.
func (o *MongoDBProtectionGroupParams) HasExcludeObjectIds() bool {
	if o != nil && o.ExcludeObjectIds != nil {
		return true
	}

	return false
}

// SetExcludeObjectIds gets a reference to the given []int64 and assigns it to the ExcludeObjectIds field.
func (o *MongoDBProtectionGroupParams) SetExcludeObjectIds(v []int64) {
	o.ExcludeObjectIds = v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MongoDBProtectionGroupParams) GetSourceId() int64 {
	if o == nil || o.SourceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MongoDBProtectionGroupParams) GetSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *MongoDBProtectionGroupParams) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableInt64 and assigns it to the SourceId field.
func (o *MongoDBProtectionGroupParams) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *MongoDBProtectionGroupParams) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *MongoDBProtectionGroupParams) UnsetSourceId() {
	o.SourceId.Unset()
}

// GetSourceName returns the SourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MongoDBProtectionGroupParams) GetSourceName() string {
	if o == nil || o.SourceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceName.Get()
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MongoDBProtectionGroupParams) GetSourceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceName.Get(), o.SourceName.IsSet()
}

// HasSourceName returns a boolean if a field has been set.
func (o *MongoDBProtectionGroupParams) HasSourceName() bool {
	if o != nil && o.SourceName.IsSet() {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given NullableString and assigns it to the SourceName field.
func (o *MongoDBProtectionGroupParams) SetSourceName(v string) {
	o.SourceName.Set(&v)
}
// SetSourceNameNil sets the value for SourceName to be an explicit nil
func (o *MongoDBProtectionGroupParams) SetSourceNameNil() {
	o.SourceName.Set(nil)
}

// UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil
func (o *MongoDBProtectionGroupParams) UnsetSourceName() {
	o.SourceName.Unset()
}

// GetCdpInfo returns the CdpInfo field value if set, zero value otherwise.
func (o *MongoDBProtectionGroupParams) GetCdpInfo() MongoDBCdpJobInfo {
	if o == nil || o.CdpInfo == nil {
		var ret MongoDBCdpJobInfo
		return ret
	}
	return *o.CdpInfo
}

// GetCdpInfoOk returns a tuple with the CdpInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongoDBProtectionGroupParams) GetCdpInfoOk() (*MongoDBCdpJobInfo, bool) {
	if o == nil || o.CdpInfo == nil {
		return nil, false
	}
	return o.CdpInfo, true
}

// HasCdpInfo returns a boolean if a field has been set.
func (o *MongoDBProtectionGroupParams) HasCdpInfo() bool {
	if o != nil && o.CdpInfo != nil {
		return true
	}

	return false
}

// SetCdpInfo gets a reference to the given MongoDBCdpJobInfo and assigns it to the CdpInfo field.
func (o *MongoDBProtectionGroupParams) SetCdpInfo(v MongoDBCdpJobInfo) {
	o.CdpInfo = &v
}

func (o MongoDBProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if o.Concurrency.IsSet() {
		toSerialize["concurrency"] = o.Concurrency.Get()
	}
	if o.BandwidthMBPS.IsSet() {
		toSerialize["bandwidthMBPS"] = o.BandwidthMBPS.Get()
	}
	if o.ExcludeObjectIds != nil {
		toSerialize["excludeObjectIds"] = o.ExcludeObjectIds
	}
	if o.SourceId.IsSet() {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if o.SourceName.IsSet() {
		toSerialize["sourceName"] = o.SourceName.Get()
	}
	if o.CdpInfo != nil {
		toSerialize["cdpInfo"] = o.CdpInfo
	}
	return json.Marshal(toSerialize)
}

type NullableMongoDBProtectionGroupParams struct {
	value *MongoDBProtectionGroupParams
	isSet bool
}

func (v NullableMongoDBProtectionGroupParams) Get() *MongoDBProtectionGroupParams {
	return v.value
}

func (v *NullableMongoDBProtectionGroupParams) Set(val *MongoDBProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMongoDBProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMongoDBProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMongoDBProtectionGroupParams(val *MongoDBProtectionGroupParams) *NullableMongoDBProtectionGroupParams {
	return &NullableMongoDBProtectionGroupParams{value: val, isSet: true}
}

func (v NullableMongoDBProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMongoDBProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o MongoDBProtectionGroupParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}