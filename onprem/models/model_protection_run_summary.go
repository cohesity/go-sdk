/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// ProtectionRunSummary Specifies the summary of a protection run.
type ProtectionRunSummary struct {
	// Specifies the ID of the Protection Group run.
	Id NullableString `json:"id,omitempty"`
	// ProtectionGroupId to which this run belongs.
	ProtectionGroupId NullableString `json:"protectionGroupId,omitempty"`
	// Name of the Protection Group to which this run belongs.
	ProtectionGroupName NullableString `json:"protectionGroupName,omitempty"`
	// Specifies the environment type of the Protection Group.
	Environment NullableString `json:"environment,omitempty"`
	// Indicated if SLA has been violated for this run.
	IsSlaViolated NullableBool `json:"isSlaViolated,omitempty"`
	// Specifies the start time of backup run in Unix epoch Timestamp(in microseconds).
	StartTimeUsecs NullableInt64 `json:"startTimeUsecs,omitempty"`
	// Specifies the end time of backup run in Unix epoch Timestamp(in microseconds).
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	// Status of the backup run. 'Running' indicates that the run is still running. 'Canceled' indicates that the run has been canceled. 'Canceling' indicates that the run is in the process of being canceled. 'Paused' indicates that the ongoing run has been paused. 'Failed' indicates that the run has failed. 'Missed' indicates that the run was unable to take place at the scheduled time because the previous run was still happening. 'Succeeded' indicates that the run has finished successfully. 'SucceededWithWarning' indicates that the run finished successfully, but there were some warning messages.
	Status NullableString `json:"status,omitempty"`
	// Specifies if the protection run is a full run.
	IsFullRun NullableBool `json:"isFullRun,omitempty"`
	// Specifies the total number of objects protected in this run.
	TotalObjectsCount NullableInt64 `json:"totalObjectsCount,omitempty"`
	// Specifies the number of objects which are successfully protected in this run.
	SuccessObjectsCount NullableInt64 `json:"successObjectsCount,omitempty"`
	// Specifies total logical size of object(s) in bytes.
	LogicalSizeBytes NullableInt64 `json:"logicalSizeBytes,omitempty"`
	// Specifies total size of data in bytes written after taking backup.
	BytesWritten NullableInt64 `json:"bytesWritten,omitempty"`
}

// NewProtectionRunSummary instantiates a new ProtectionRunSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionRunSummary() *ProtectionRunSummary {
	this := ProtectionRunSummary{}
	return &this
}

// NewProtectionRunSummaryWithDefaults instantiates a new ProtectionRunSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionRunSummaryWithDefaults() *ProtectionRunSummary {
	this := ProtectionRunSummary{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunSummary) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunSummary) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ProtectionRunSummary) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ProtectionRunSummary) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ProtectionRunSummary) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ProtectionRunSummary) UnsetId() {
	o.Id.Unset()
}

// GetProtectionGroupId returns the ProtectionGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunSummary) GetProtectionGroupId() string {
	if o == nil || o.ProtectionGroupId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProtectionGroupId.Get()
}

// GetProtectionGroupIdOk returns a tuple with the ProtectionGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunSummary) GetProtectionGroupIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionGroupId.Get(), o.ProtectionGroupId.IsSet()
}

// HasProtectionGroupId returns a boolean if a field has been set.
func (o *ProtectionRunSummary) HasProtectionGroupId() bool {
	if o != nil && o.ProtectionGroupId.IsSet() {
		return true
	}

	return false
}

// SetProtectionGroupId gets a reference to the given NullableString and assigns it to the ProtectionGroupId field.
func (o *ProtectionRunSummary) SetProtectionGroupId(v string) {
	o.ProtectionGroupId.Set(&v)
}
// SetProtectionGroupIdNil sets the value for ProtectionGroupId to be an explicit nil
func (o *ProtectionRunSummary) SetProtectionGroupIdNil() {
	o.ProtectionGroupId.Set(nil)
}

// UnsetProtectionGroupId ensures that no value is present for ProtectionGroupId, not even an explicit nil
func (o *ProtectionRunSummary) UnsetProtectionGroupId() {
	o.ProtectionGroupId.Unset()
}

// GetProtectionGroupName returns the ProtectionGroupName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunSummary) GetProtectionGroupName() string {
	if o == nil || o.ProtectionGroupName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProtectionGroupName.Get()
}

// GetProtectionGroupNameOk returns a tuple with the ProtectionGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunSummary) GetProtectionGroupNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionGroupName.Get(), o.ProtectionGroupName.IsSet()
}

// HasProtectionGroupName returns a boolean if a field has been set.
func (o *ProtectionRunSummary) HasProtectionGroupName() bool {
	if o != nil && o.ProtectionGroupName.IsSet() {
		return true
	}

	return false
}

// SetProtectionGroupName gets a reference to the given NullableString and assigns it to the ProtectionGroupName field.
func (o *ProtectionRunSummary) SetProtectionGroupName(v string) {
	o.ProtectionGroupName.Set(&v)
}
// SetProtectionGroupNameNil sets the value for ProtectionGroupName to be an explicit nil
func (o *ProtectionRunSummary) SetProtectionGroupNameNil() {
	o.ProtectionGroupName.Set(nil)
}

// UnsetProtectionGroupName ensures that no value is present for ProtectionGroupName, not even an explicit nil
func (o *ProtectionRunSummary) UnsetProtectionGroupName() {
	o.ProtectionGroupName.Unset()
}

// GetEnvironment returns the Environment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunSummary) GetEnvironment() string {
	if o == nil || o.Environment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunSummary) GetEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// HasEnvironment returns a boolean if a field has been set.
func (o *ProtectionRunSummary) HasEnvironment() bool {
	if o != nil && o.Environment.IsSet() {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given NullableString and assigns it to the Environment field.
func (o *ProtectionRunSummary) SetEnvironment(v string) {
	o.Environment.Set(&v)
}
// SetEnvironmentNil sets the value for Environment to be an explicit nil
func (o *ProtectionRunSummary) SetEnvironmentNil() {
	o.Environment.Set(nil)
}

// UnsetEnvironment ensures that no value is present for Environment, not even an explicit nil
func (o *ProtectionRunSummary) UnsetEnvironment() {
	o.Environment.Unset()
}

// GetIsSlaViolated returns the IsSlaViolated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunSummary) GetIsSlaViolated() bool {
	if o == nil || o.IsSlaViolated.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsSlaViolated.Get()
}

// GetIsSlaViolatedOk returns a tuple with the IsSlaViolated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunSummary) GetIsSlaViolatedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsSlaViolated.Get(), o.IsSlaViolated.IsSet()
}

// HasIsSlaViolated returns a boolean if a field has been set.
func (o *ProtectionRunSummary) HasIsSlaViolated() bool {
	if o != nil && o.IsSlaViolated.IsSet() {
		return true
	}

	return false
}

// SetIsSlaViolated gets a reference to the given NullableBool and assigns it to the IsSlaViolated field.
func (o *ProtectionRunSummary) SetIsSlaViolated(v bool) {
	o.IsSlaViolated.Set(&v)
}
// SetIsSlaViolatedNil sets the value for IsSlaViolated to be an explicit nil
func (o *ProtectionRunSummary) SetIsSlaViolatedNil() {
	o.IsSlaViolated.Set(nil)
}

// UnsetIsSlaViolated ensures that no value is present for IsSlaViolated, not even an explicit nil
func (o *ProtectionRunSummary) UnsetIsSlaViolated() {
	o.IsSlaViolated.Unset()
}

// GetStartTimeUsecs returns the StartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunSummary) GetStartTimeUsecs() int64 {
	if o == nil || o.StartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StartTimeUsecs.Get()
}

// GetStartTimeUsecsOk returns a tuple with the StartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunSummary) GetStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartTimeUsecs.Get(), o.StartTimeUsecs.IsSet()
}

// HasStartTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionRunSummary) HasStartTimeUsecs() bool {
	if o != nil && o.StartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the StartTimeUsecs field.
func (o *ProtectionRunSummary) SetStartTimeUsecs(v int64) {
	o.StartTimeUsecs.Set(&v)
}
// SetStartTimeUsecsNil sets the value for StartTimeUsecs to be an explicit nil
func (o *ProtectionRunSummary) SetStartTimeUsecsNil() {
	o.StartTimeUsecs.Set(nil)
}

// UnsetStartTimeUsecs ensures that no value is present for StartTimeUsecs, not even an explicit nil
func (o *ProtectionRunSummary) UnsetStartTimeUsecs() {
	o.StartTimeUsecs.Unset()
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunSummary) GetEndTimeUsecs() int64 {
	if o == nil || o.EndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunSummary) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionRunSummary) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *ProtectionRunSummary) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *ProtectionRunSummary) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *ProtectionRunSummary) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunSummary) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunSummary) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ProtectionRunSummary) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *ProtectionRunSummary) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *ProtectionRunSummary) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ProtectionRunSummary) UnsetStatus() {
	o.Status.Unset()
}

// GetIsFullRun returns the IsFullRun field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunSummary) GetIsFullRun() bool {
	if o == nil || o.IsFullRun.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsFullRun.Get()
}

// GetIsFullRunOk returns a tuple with the IsFullRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunSummary) GetIsFullRunOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsFullRun.Get(), o.IsFullRun.IsSet()
}

// HasIsFullRun returns a boolean if a field has been set.
func (o *ProtectionRunSummary) HasIsFullRun() bool {
	if o != nil && o.IsFullRun.IsSet() {
		return true
	}

	return false
}

// SetIsFullRun gets a reference to the given NullableBool and assigns it to the IsFullRun field.
func (o *ProtectionRunSummary) SetIsFullRun(v bool) {
	o.IsFullRun.Set(&v)
}
// SetIsFullRunNil sets the value for IsFullRun to be an explicit nil
func (o *ProtectionRunSummary) SetIsFullRunNil() {
	o.IsFullRun.Set(nil)
}

// UnsetIsFullRun ensures that no value is present for IsFullRun, not even an explicit nil
func (o *ProtectionRunSummary) UnsetIsFullRun() {
	o.IsFullRun.Unset()
}

// GetTotalObjectsCount returns the TotalObjectsCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunSummary) GetTotalObjectsCount() int64 {
	if o == nil || o.TotalObjectsCount.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalObjectsCount.Get()
}

// GetTotalObjectsCountOk returns a tuple with the TotalObjectsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunSummary) GetTotalObjectsCountOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalObjectsCount.Get(), o.TotalObjectsCount.IsSet()
}

// HasTotalObjectsCount returns a boolean if a field has been set.
func (o *ProtectionRunSummary) HasTotalObjectsCount() bool {
	if o != nil && o.TotalObjectsCount.IsSet() {
		return true
	}

	return false
}

// SetTotalObjectsCount gets a reference to the given NullableInt64 and assigns it to the TotalObjectsCount field.
func (o *ProtectionRunSummary) SetTotalObjectsCount(v int64) {
	o.TotalObjectsCount.Set(&v)
}
// SetTotalObjectsCountNil sets the value for TotalObjectsCount to be an explicit nil
func (o *ProtectionRunSummary) SetTotalObjectsCountNil() {
	o.TotalObjectsCount.Set(nil)
}

// UnsetTotalObjectsCount ensures that no value is present for TotalObjectsCount, not even an explicit nil
func (o *ProtectionRunSummary) UnsetTotalObjectsCount() {
	o.TotalObjectsCount.Unset()
}

// GetSuccessObjectsCount returns the SuccessObjectsCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunSummary) GetSuccessObjectsCount() int64 {
	if o == nil || o.SuccessObjectsCount.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SuccessObjectsCount.Get()
}

// GetSuccessObjectsCountOk returns a tuple with the SuccessObjectsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunSummary) GetSuccessObjectsCountOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SuccessObjectsCount.Get(), o.SuccessObjectsCount.IsSet()
}

// HasSuccessObjectsCount returns a boolean if a field has been set.
func (o *ProtectionRunSummary) HasSuccessObjectsCount() bool {
	if o != nil && o.SuccessObjectsCount.IsSet() {
		return true
	}

	return false
}

// SetSuccessObjectsCount gets a reference to the given NullableInt64 and assigns it to the SuccessObjectsCount field.
func (o *ProtectionRunSummary) SetSuccessObjectsCount(v int64) {
	o.SuccessObjectsCount.Set(&v)
}
// SetSuccessObjectsCountNil sets the value for SuccessObjectsCount to be an explicit nil
func (o *ProtectionRunSummary) SetSuccessObjectsCountNil() {
	o.SuccessObjectsCount.Set(nil)
}

// UnsetSuccessObjectsCount ensures that no value is present for SuccessObjectsCount, not even an explicit nil
func (o *ProtectionRunSummary) UnsetSuccessObjectsCount() {
	o.SuccessObjectsCount.Unset()
}

// GetLogicalSizeBytes returns the LogicalSizeBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunSummary) GetLogicalSizeBytes() int64 {
	if o == nil || o.LogicalSizeBytes.Get() == nil {
		var ret int64
		return ret
	}
	return *o.LogicalSizeBytes.Get()
}

// GetLogicalSizeBytesOk returns a tuple with the LogicalSizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunSummary) GetLogicalSizeBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LogicalSizeBytes.Get(), o.LogicalSizeBytes.IsSet()
}

// HasLogicalSizeBytes returns a boolean if a field has been set.
func (o *ProtectionRunSummary) HasLogicalSizeBytes() bool {
	if o != nil && o.LogicalSizeBytes.IsSet() {
		return true
	}

	return false
}

// SetLogicalSizeBytes gets a reference to the given NullableInt64 and assigns it to the LogicalSizeBytes field.
func (o *ProtectionRunSummary) SetLogicalSizeBytes(v int64) {
	o.LogicalSizeBytes.Set(&v)
}
// SetLogicalSizeBytesNil sets the value for LogicalSizeBytes to be an explicit nil
func (o *ProtectionRunSummary) SetLogicalSizeBytesNil() {
	o.LogicalSizeBytes.Set(nil)
}

// UnsetLogicalSizeBytes ensures that no value is present for LogicalSizeBytes, not even an explicit nil
func (o *ProtectionRunSummary) UnsetLogicalSizeBytes() {
	o.LogicalSizeBytes.Unset()
}

// GetBytesWritten returns the BytesWritten field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionRunSummary) GetBytesWritten() int64 {
	if o == nil || o.BytesWritten.Get() == nil {
		var ret int64
		return ret
	}
	return *o.BytesWritten.Get()
}

// GetBytesWrittenOk returns a tuple with the BytesWritten field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionRunSummary) GetBytesWrittenOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BytesWritten.Get(), o.BytesWritten.IsSet()
}

// HasBytesWritten returns a boolean if a field has been set.
func (o *ProtectionRunSummary) HasBytesWritten() bool {
	if o != nil && o.BytesWritten.IsSet() {
		return true
	}

	return false
}

// SetBytesWritten gets a reference to the given NullableInt64 and assigns it to the BytesWritten field.
func (o *ProtectionRunSummary) SetBytesWritten(v int64) {
	o.BytesWritten.Set(&v)
}
// SetBytesWrittenNil sets the value for BytesWritten to be an explicit nil
func (o *ProtectionRunSummary) SetBytesWrittenNil() {
	o.BytesWritten.Set(nil)
}

// UnsetBytesWritten ensures that no value is present for BytesWritten, not even an explicit nil
func (o *ProtectionRunSummary) UnsetBytesWritten() {
	o.BytesWritten.Unset()
}

func (o ProtectionRunSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.ProtectionGroupId.IsSet() {
		toSerialize["protectionGroupId"] = o.ProtectionGroupId.Get()
	}
	if o.ProtectionGroupName.IsSet() {
		toSerialize["protectionGroupName"] = o.ProtectionGroupName.Get()
	}
	if o.Environment.IsSet() {
		toSerialize["environment"] = o.Environment.Get()
	}
	if o.IsSlaViolated.IsSet() {
		toSerialize["isSlaViolated"] = o.IsSlaViolated.Get()
	}
	if o.StartTimeUsecs.IsSet() {
		toSerialize["startTimeUsecs"] = o.StartTimeUsecs.Get()
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.IsFullRun.IsSet() {
		toSerialize["isFullRun"] = o.IsFullRun.Get()
	}
	if o.TotalObjectsCount.IsSet() {
		toSerialize["totalObjectsCount"] = o.TotalObjectsCount.Get()
	}
	if o.SuccessObjectsCount.IsSet() {
		toSerialize["successObjectsCount"] = o.SuccessObjectsCount.Get()
	}
	if o.LogicalSizeBytes.IsSet() {
		toSerialize["logicalSizeBytes"] = o.LogicalSizeBytes.Get()
	}
	if o.BytesWritten.IsSet() {
		toSerialize["bytesWritten"] = o.BytesWritten.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProtectionRunSummary struct {
	value *ProtectionRunSummary
	isSet bool
}

func (v NullableProtectionRunSummary) Get() *ProtectionRunSummary {
	return v.value
}

func (v *NullableProtectionRunSummary) Set(val *ProtectionRunSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionRunSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionRunSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionRunSummary(val *ProtectionRunSummary) *NullableProtectionRunSummary {
	return &NullableProtectionRunSummary{value: val, isSet: true}
}

func (v NullableProtectionRunSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionRunSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o ProtectionRunSummary) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}