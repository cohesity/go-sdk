/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// KubernetesProtectionGroupParams Specifies the parameters which are related to Kubernetes Protection Groups.
type KubernetesProtectionGroupParams struct {
	// Specifies the objects included in the Protection Group.
	Objects *[]KubernetesProtectionGroupObjectParams `json:"objects,omitempty"`
	// Specifies the objects to be excluded in the Protection Group.
	ExcludeObjectIds *[]int64 `json:"excludeObjectIds,omitempty"`
	// Specifies the id of the parent of the objects.
	SourceId NullableInt64 `json:"sourceId,omitempty"`
	// Specifies the name of the parent of the objects.
	SourceName NullableString `json:"sourceName,omitempty"`
	// Array of array of label IDs that specify labels to protect. Optionally specify a list of labels to protect by listing protection source ids of labels in this two dimensional array. Using this two dimensional array of label IDs, the cluster generates a list of namespaces to protect, which are derived from intersections of the inner arrays and union of the outer array.
	LabelIds [][]int64 `json:"labelIds,omitempty"`
	// Array of arrays of label IDs that specify labels to exclude. Optionally specify a list of labels to exclude from protecting by listing protection source ids of labels in this two dimensional array. Using this two dimensional array of label IDs, the Cluster generates a list of namespaces to exclude from protecting, which are derived from intersections of the inner arrays and union of the outer array.
	ExcludeLabelIds *[][]int64 `json:"excludeLabelIds,omitempty"`
	IncludeParams NullableKubernetesFilterParams `json:"includeParams,omitempty"`
	ExcludeParams NullableKubernetesFilterParams `json:"excludeParams,omitempty"`
	// Specifies if CSI snapshots should be used for backup of namespaces.
	LeverageCSISnapshot NullableBool `json:"leverageCSISnapshot,omitempty"`
}

// NewKubernetesProtectionGroupParams instantiates a new KubernetesProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesProtectionGroupParams() *KubernetesProtectionGroupParams {
	this := KubernetesProtectionGroupParams{}
	return &this
}

// NewKubernetesProtectionGroupParamsWithDefaults instantiates a new KubernetesProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesProtectionGroupParamsWithDefaults() *KubernetesProtectionGroupParams {
	this := KubernetesProtectionGroupParams{}
	return &this
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *KubernetesProtectionGroupParams) GetObjects() []KubernetesProtectionGroupObjectParams {
	if o == nil || o.Objects == nil {
		var ret []KubernetesProtectionGroupObjectParams
		return ret
	}
	return *o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesProtectionGroupParams) GetObjectsOk() (*[]KubernetesProtectionGroupObjectParams, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *KubernetesProtectionGroupParams) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []KubernetesProtectionGroupObjectParams and assigns it to the Objects field.
func (o *KubernetesProtectionGroupParams) SetObjects(v []KubernetesProtectionGroupObjectParams) {
	o.Objects = &v
}

// GetExcludeObjectIds returns the ExcludeObjectIds field value if set, zero value otherwise.
func (o *KubernetesProtectionGroupParams) GetExcludeObjectIds() []int64 {
	if o == nil || o.ExcludeObjectIds == nil {
		var ret []int64
		return ret
	}
	return *o.ExcludeObjectIds
}

// GetExcludeObjectIdsOk returns a tuple with the ExcludeObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesProtectionGroupParams) GetExcludeObjectIdsOk() (*[]int64, bool) {
	if o == nil || o.ExcludeObjectIds == nil {
		return nil, false
	}
	return o.ExcludeObjectIds, true
}

// HasExcludeObjectIds returns a boolean if a field has been set.
func (o *KubernetesProtectionGroupParams) HasExcludeObjectIds() bool {
	if o != nil && o.ExcludeObjectIds != nil {
		return true
	}

	return false
}

// SetExcludeObjectIds gets a reference to the given []int64 and assigns it to the ExcludeObjectIds field.
func (o *KubernetesProtectionGroupParams) SetExcludeObjectIds(v []int64) {
	o.ExcludeObjectIds = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesProtectionGroupParams) GetSourceId() int64 {
	if o == nil || o.SourceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesProtectionGroupParams) GetSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *KubernetesProtectionGroupParams) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableInt64 and assigns it to the SourceId field.
func (o *KubernetesProtectionGroupParams) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *KubernetesProtectionGroupParams) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *KubernetesProtectionGroupParams) UnsetSourceId() {
	o.SourceId.Unset()
}

// GetSourceName returns the SourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesProtectionGroupParams) GetSourceName() string {
	if o == nil || o.SourceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceName.Get()
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesProtectionGroupParams) GetSourceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceName.Get(), o.SourceName.IsSet()
}

// HasSourceName returns a boolean if a field has been set.
func (o *KubernetesProtectionGroupParams) HasSourceName() bool {
	if o != nil && o.SourceName.IsSet() {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given NullableString and assigns it to the SourceName field.
func (o *KubernetesProtectionGroupParams) SetSourceName(v string) {
	o.SourceName.Set(&v)
}
// SetSourceNameNil sets the value for SourceName to be an explicit nil
func (o *KubernetesProtectionGroupParams) SetSourceNameNil() {
	o.SourceName.Set(nil)
}

// UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil
func (o *KubernetesProtectionGroupParams) UnsetSourceName() {
	o.SourceName.Unset()
}

// GetLabelIds returns the LabelIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesProtectionGroupParams) GetLabelIds() [][]int64 {
	if o == nil  {
		var ret [][]int64
		return ret
	}
	return o.LabelIds
}

// GetLabelIdsOk returns a tuple with the LabelIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesProtectionGroupParams) GetLabelIdsOk() (*[][]int64, bool) {
	if o == nil || o.LabelIds == nil {
		return nil, false
	}
	return &o.LabelIds, true
}

// HasLabelIds returns a boolean if a field has been set.
func (o *KubernetesProtectionGroupParams) HasLabelIds() bool {
	if o != nil && o.LabelIds != nil {
		return true
	}

	return false
}

// SetLabelIds gets a reference to the given [][]int64 and assigns it to the LabelIds field.
func (o *KubernetesProtectionGroupParams) SetLabelIds(v [][]int64) {
	o.LabelIds = v
}

// GetExcludeLabelIds returns the ExcludeLabelIds field value if set, zero value otherwise.
func (o *KubernetesProtectionGroupParams) GetExcludeLabelIds() [][]int64 {
	if o == nil || o.ExcludeLabelIds == nil {
		var ret [][]int64
		return ret
	}
	return *o.ExcludeLabelIds
}

// GetExcludeLabelIdsOk returns a tuple with the ExcludeLabelIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesProtectionGroupParams) GetExcludeLabelIdsOk() (*[][]int64, bool) {
	if o == nil || o.ExcludeLabelIds == nil {
		return nil, false
	}
	return o.ExcludeLabelIds, true
}

// HasExcludeLabelIds returns a boolean if a field has been set.
func (o *KubernetesProtectionGroupParams) HasExcludeLabelIds() bool {
	if o != nil && o.ExcludeLabelIds != nil {
		return true
	}

	return false
}

// SetExcludeLabelIds gets a reference to the given [][]int64 and assigns it to the ExcludeLabelIds field.
func (o *KubernetesProtectionGroupParams) SetExcludeLabelIds(v [][]int64) {
	o.ExcludeLabelIds = &v
}

// GetIncludeParams returns the IncludeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesProtectionGroupParams) GetIncludeParams() KubernetesFilterParams {
	if o == nil || o.IncludeParams.Get() == nil {
		var ret KubernetesFilterParams
		return ret
	}
	return *o.IncludeParams.Get()
}

// GetIncludeParamsOk returns a tuple with the IncludeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesProtectionGroupParams) GetIncludeParamsOk() (*KubernetesFilterParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IncludeParams.Get(), o.IncludeParams.IsSet()
}

// HasIncludeParams returns a boolean if a field has been set.
func (o *KubernetesProtectionGroupParams) HasIncludeParams() bool {
	if o != nil && o.IncludeParams.IsSet() {
		return true
	}

	return false
}

// SetIncludeParams gets a reference to the given NullableKubernetesFilterParams and assigns it to the IncludeParams field.
func (o *KubernetesProtectionGroupParams) SetIncludeParams(v KubernetesFilterParams) {
	o.IncludeParams.Set(&v)
}
// SetIncludeParamsNil sets the value for IncludeParams to be an explicit nil
func (o *KubernetesProtectionGroupParams) SetIncludeParamsNil() {
	o.IncludeParams.Set(nil)
}

// UnsetIncludeParams ensures that no value is present for IncludeParams, not even an explicit nil
func (o *KubernetesProtectionGroupParams) UnsetIncludeParams() {
	o.IncludeParams.Unset()
}

// GetExcludeParams returns the ExcludeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesProtectionGroupParams) GetExcludeParams() KubernetesFilterParams {
	if o == nil || o.ExcludeParams.Get() == nil {
		var ret KubernetesFilterParams
		return ret
	}
	return *o.ExcludeParams.Get()
}

// GetExcludeParamsOk returns a tuple with the ExcludeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesProtectionGroupParams) GetExcludeParamsOk() (*KubernetesFilterParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExcludeParams.Get(), o.ExcludeParams.IsSet()
}

// HasExcludeParams returns a boolean if a field has been set.
func (o *KubernetesProtectionGroupParams) HasExcludeParams() bool {
	if o != nil && o.ExcludeParams.IsSet() {
		return true
	}

	return false
}

// SetExcludeParams gets a reference to the given NullableKubernetesFilterParams and assigns it to the ExcludeParams field.
func (o *KubernetesProtectionGroupParams) SetExcludeParams(v KubernetesFilterParams) {
	o.ExcludeParams.Set(&v)
}
// SetExcludeParamsNil sets the value for ExcludeParams to be an explicit nil
func (o *KubernetesProtectionGroupParams) SetExcludeParamsNil() {
	o.ExcludeParams.Set(nil)
}

// UnsetExcludeParams ensures that no value is present for ExcludeParams, not even an explicit nil
func (o *KubernetesProtectionGroupParams) UnsetExcludeParams() {
	o.ExcludeParams.Unset()
}

// GetLeverageCSISnapshot returns the LeverageCSISnapshot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesProtectionGroupParams) GetLeverageCSISnapshot() bool {
	if o == nil || o.LeverageCSISnapshot.Get() == nil {
		var ret bool
		return ret
	}
	return *o.LeverageCSISnapshot.Get()
}

// GetLeverageCSISnapshotOk returns a tuple with the LeverageCSISnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesProtectionGroupParams) GetLeverageCSISnapshotOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LeverageCSISnapshot.Get(), o.LeverageCSISnapshot.IsSet()
}

// HasLeverageCSISnapshot returns a boolean if a field has been set.
func (o *KubernetesProtectionGroupParams) HasLeverageCSISnapshot() bool {
	if o != nil && o.LeverageCSISnapshot.IsSet() {
		return true
	}

	return false
}

// SetLeverageCSISnapshot gets a reference to the given NullableBool and assigns it to the LeverageCSISnapshot field.
func (o *KubernetesProtectionGroupParams) SetLeverageCSISnapshot(v bool) {
	o.LeverageCSISnapshot.Set(&v)
}
// SetLeverageCSISnapshotNil sets the value for LeverageCSISnapshot to be an explicit nil
func (o *KubernetesProtectionGroupParams) SetLeverageCSISnapshotNil() {
	o.LeverageCSISnapshot.Set(nil)
}

// UnsetLeverageCSISnapshot ensures that no value is present for LeverageCSISnapshot, not even an explicit nil
func (o *KubernetesProtectionGroupParams) UnsetLeverageCSISnapshot() {
	o.LeverageCSISnapshot.Unset()
}

func (o KubernetesProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if o.ExcludeObjectIds != nil {
		toSerialize["excludeObjectIds"] = o.ExcludeObjectIds
	}
	if o.SourceId.IsSet() {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if o.SourceName.IsSet() {
		toSerialize["sourceName"] = o.SourceName.Get()
	}
	if o.LabelIds != nil {
		toSerialize["labelIds"] = o.LabelIds
	}
	if o.ExcludeLabelIds != nil {
		toSerialize["excludeLabelIds"] = o.ExcludeLabelIds
	}
	if o.IncludeParams.IsSet() {
		toSerialize["includeParams"] = o.IncludeParams.Get()
	}
	if o.ExcludeParams.IsSet() {
		toSerialize["excludeParams"] = o.ExcludeParams.Get()
	}
	if o.LeverageCSISnapshot.IsSet() {
		toSerialize["leverageCSISnapshot"] = o.LeverageCSISnapshot.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableKubernetesProtectionGroupParams struct {
	value *KubernetesProtectionGroupParams
	isSet bool
}

func (v NullableKubernetesProtectionGroupParams) Get() *KubernetesProtectionGroupParams {
	return v.value
}

func (v *NullableKubernetesProtectionGroupParams) Set(val *KubernetesProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesProtectionGroupParams(val *KubernetesProtectionGroupParams) *NullableKubernetesProtectionGroupParams {
	return &NullableKubernetesProtectionGroupParams{value: val, isSet: true}
}

func (v NullableKubernetesProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o KubernetesProtectionGroupParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}