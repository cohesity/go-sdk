/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// RemoteAdapterProtectionGroupReplicationParams Specifies the parameters for Remote Adapter replication.
type RemoteAdapterProtectionGroupReplicationParams struct {
	// Specifies whether or not to create a remote view on replication cluster.
	CreateView NullableBool `json:"createView"`
	// Specifies the name of the remote view. By default the name will be same as the protected view. If a view with the specified name already exists on the remote cluster, the created name will have a suffix '-1'.
	ViewName NullableString `json:"viewName,omitempty"`
}

// NewRemoteAdapterProtectionGroupReplicationParams instantiates a new RemoteAdapterProtectionGroupReplicationParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoteAdapterProtectionGroupReplicationParams(createView NullableBool) *RemoteAdapterProtectionGroupReplicationParams {
	this := RemoteAdapterProtectionGroupReplicationParams{}
	this.CreateView = createView
	return &this
}

// NewRemoteAdapterProtectionGroupReplicationParamsWithDefaults instantiates a new RemoteAdapterProtectionGroupReplicationParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoteAdapterProtectionGroupReplicationParamsWithDefaults() *RemoteAdapterProtectionGroupReplicationParams {
	this := RemoteAdapterProtectionGroupReplicationParams{}
	return &this
}

// GetCreateView returns the CreateView field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *RemoteAdapterProtectionGroupReplicationParams) GetCreateView() bool {
	if o == nil || o.CreateView.Get() == nil {
		var ret bool
		return ret
	}

	return *o.CreateView.Get()
}

// GetCreateViewOk returns a tuple with the CreateView field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RemoteAdapterProtectionGroupReplicationParams) GetCreateViewOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreateView.Get(), o.CreateView.IsSet()
}

// SetCreateView sets field value
func (o *RemoteAdapterProtectionGroupReplicationParams) SetCreateView(v bool) {
	o.CreateView.Set(&v)
}

// GetViewName returns the ViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RemoteAdapterProtectionGroupReplicationParams) GetViewName() string {
	if o == nil || o.ViewName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ViewName.Get()
}

// GetViewNameOk returns a tuple with the ViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RemoteAdapterProtectionGroupReplicationParams) GetViewNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewName.Get(), o.ViewName.IsSet()
}

// HasViewName returns a boolean if a field has been set.
func (o *RemoteAdapterProtectionGroupReplicationParams) HasViewName() bool {
	if o != nil && o.ViewName.IsSet() {
		return true
	}

	return false
}

// SetViewName gets a reference to the given NullableString and assigns it to the ViewName field.
func (o *RemoteAdapterProtectionGroupReplicationParams) SetViewName(v string) {
	o.ViewName.Set(&v)
}
// SetViewNameNil sets the value for ViewName to be an explicit nil
func (o *RemoteAdapterProtectionGroupReplicationParams) SetViewNameNil() {
	o.ViewName.Set(nil)
}

// UnsetViewName ensures that no value is present for ViewName, not even an explicit nil
func (o *RemoteAdapterProtectionGroupReplicationParams) UnsetViewName() {
	o.ViewName.Unset()
}

func (o RemoteAdapterProtectionGroupReplicationParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["createView"] = o.CreateView.Get()
	}
	if o.ViewName.IsSet() {
		toSerialize["viewName"] = o.ViewName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRemoteAdapterProtectionGroupReplicationParams struct {
	value *RemoteAdapterProtectionGroupReplicationParams
	isSet bool
}

func (v NullableRemoteAdapterProtectionGroupReplicationParams) Get() *RemoteAdapterProtectionGroupReplicationParams {
	return v.value
}

func (v *NullableRemoteAdapterProtectionGroupReplicationParams) Set(val *RemoteAdapterProtectionGroupReplicationParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoteAdapterProtectionGroupReplicationParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoteAdapterProtectionGroupReplicationParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoteAdapterProtectionGroupReplicationParams(val *RemoteAdapterProtectionGroupReplicationParams) *NullableRemoteAdapterProtectionGroupReplicationParams {
	return &NullableRemoteAdapterProtectionGroupReplicationParams{value: val, isSet: true}
}

func (v NullableRemoteAdapterProtectionGroupReplicationParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoteAdapterProtectionGroupReplicationParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o RemoteAdapterProtectionGroupReplicationParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}