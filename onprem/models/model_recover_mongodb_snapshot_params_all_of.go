/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// RecoverMongodbSnapshotParamsAllOf struct for RecoverMongodbSnapshotParamsAllOf
type RecoverMongodbSnapshotParamsAllOf struct {
	// Specifies details of objects to be recovered.
	Objects []RecoverMongodbNoSqlObjectParams `json:"objects,omitempty"`
}

// NewRecoverMongodbSnapshotParamsAllOf instantiates a new RecoverMongodbSnapshotParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverMongodbSnapshotParamsAllOf() *RecoverMongodbSnapshotParamsAllOf {
	this := RecoverMongodbSnapshotParamsAllOf{}
	return &this
}

// NewRecoverMongodbSnapshotParamsAllOfWithDefaults instantiates a new RecoverMongodbSnapshotParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverMongodbSnapshotParamsAllOfWithDefaults() *RecoverMongodbSnapshotParamsAllOf {
	this := RecoverMongodbSnapshotParamsAllOf{}
	return &this
}

// GetObjects returns the Objects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverMongodbSnapshotParamsAllOf) GetObjects() []RecoverMongodbNoSqlObjectParams {
	if o == nil  {
		var ret []RecoverMongodbNoSqlObjectParams
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverMongodbSnapshotParamsAllOf) GetObjectsOk() (*[]RecoverMongodbNoSqlObjectParams, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return &o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *RecoverMongodbSnapshotParamsAllOf) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []RecoverMongodbNoSqlObjectParams and assigns it to the Objects field.
func (o *RecoverMongodbSnapshotParamsAllOf) SetObjects(v []RecoverMongodbNoSqlObjectParams) {
	o.Objects = v
}

func (o RecoverMongodbSnapshotParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverMongodbSnapshotParamsAllOf struct {
	value *RecoverMongodbSnapshotParamsAllOf
	isSet bool
}

func (v NullableRecoverMongodbSnapshotParamsAllOf) Get() *RecoverMongodbSnapshotParamsAllOf {
	return v.value
}

func (v *NullableRecoverMongodbSnapshotParamsAllOf) Set(val *RecoverMongodbSnapshotParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverMongodbSnapshotParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverMongodbSnapshotParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverMongodbSnapshotParamsAllOf(val *RecoverMongodbSnapshotParamsAllOf) *NullableRecoverMongodbSnapshotParamsAllOf {
	return &NullableRecoverMongodbSnapshotParamsAllOf{value: val, isSet: true}
}

func (v NullableRecoverMongodbSnapshotParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverMongodbSnapshotParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o RecoverMongodbSnapshotParamsAllOf) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}