/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// SourceConnectionRequestParamsAllOf struct for SourceConnectionRequestParamsAllOf
type SourceConnectionRequestParamsAllOf struct {
	CassandraConnectionParams *CassandraConnectionParams `json:"cassandraConnectionParams,omitempty"`
	HiveConnectionParams *HadoopConnectionParams `json:"hiveConnectionParams,omitempty"`
	HbaseConnectionParams *HadoopConnectionParams `json:"hbaseConnectionParams,omitempty"`
	HdfsConnectionParams *HadoopConnectionParams `json:"hdfsConnectionParams,omitempty"`
	MssqlConnectionParams *MssqlConnectionParams `json:"mssqlConnectionParams,omitempty"`
	OracleConnectionParams *OracleConnectionParams `json:"oracleConnectionParams,omitempty"`
	VmwareConnectionParams *VmwareConnectionParams `json:"vmwareConnectionParams,omitempty"`
}

// NewSourceConnectionRequestParamsAllOf instantiates a new SourceConnectionRequestParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceConnectionRequestParamsAllOf() *SourceConnectionRequestParamsAllOf {
	this := SourceConnectionRequestParamsAllOf{}
	return &this
}

// NewSourceConnectionRequestParamsAllOfWithDefaults instantiates a new SourceConnectionRequestParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceConnectionRequestParamsAllOfWithDefaults() *SourceConnectionRequestParamsAllOf {
	this := SourceConnectionRequestParamsAllOf{}
	return &this
}

// GetCassandraConnectionParams returns the CassandraConnectionParams field value if set, zero value otherwise.
func (o *SourceConnectionRequestParamsAllOf) GetCassandraConnectionParams() CassandraConnectionParams {
	if o == nil || o.CassandraConnectionParams == nil {
		var ret CassandraConnectionParams
		return ret
	}
	return *o.CassandraConnectionParams
}

// GetCassandraConnectionParamsOk returns a tuple with the CassandraConnectionParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceConnectionRequestParamsAllOf) GetCassandraConnectionParamsOk() (*CassandraConnectionParams, bool) {
	if o == nil || o.CassandraConnectionParams == nil {
		return nil, false
	}
	return o.CassandraConnectionParams, true
}

// HasCassandraConnectionParams returns a boolean if a field has been set.
func (o *SourceConnectionRequestParamsAllOf) HasCassandraConnectionParams() bool {
	if o != nil && o.CassandraConnectionParams != nil {
		return true
	}

	return false
}

// SetCassandraConnectionParams gets a reference to the given CassandraConnectionParams and assigns it to the CassandraConnectionParams field.
func (o *SourceConnectionRequestParamsAllOf) SetCassandraConnectionParams(v CassandraConnectionParams) {
	o.CassandraConnectionParams = &v
}

// GetHiveConnectionParams returns the HiveConnectionParams field value if set, zero value otherwise.
func (o *SourceConnectionRequestParamsAllOf) GetHiveConnectionParams() HadoopConnectionParams {
	if o == nil || o.HiveConnectionParams == nil {
		var ret HadoopConnectionParams
		return ret
	}
	return *o.HiveConnectionParams
}

// GetHiveConnectionParamsOk returns a tuple with the HiveConnectionParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceConnectionRequestParamsAllOf) GetHiveConnectionParamsOk() (*HadoopConnectionParams, bool) {
	if o == nil || o.HiveConnectionParams == nil {
		return nil, false
	}
	return o.HiveConnectionParams, true
}

// HasHiveConnectionParams returns a boolean if a field has been set.
func (o *SourceConnectionRequestParamsAllOf) HasHiveConnectionParams() bool {
	if o != nil && o.HiveConnectionParams != nil {
		return true
	}

	return false
}

// SetHiveConnectionParams gets a reference to the given HadoopConnectionParams and assigns it to the HiveConnectionParams field.
func (o *SourceConnectionRequestParamsAllOf) SetHiveConnectionParams(v HadoopConnectionParams) {
	o.HiveConnectionParams = &v
}

// GetHbaseConnectionParams returns the HbaseConnectionParams field value if set, zero value otherwise.
func (o *SourceConnectionRequestParamsAllOf) GetHbaseConnectionParams() HadoopConnectionParams {
	if o == nil || o.HbaseConnectionParams == nil {
		var ret HadoopConnectionParams
		return ret
	}
	return *o.HbaseConnectionParams
}

// GetHbaseConnectionParamsOk returns a tuple with the HbaseConnectionParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceConnectionRequestParamsAllOf) GetHbaseConnectionParamsOk() (*HadoopConnectionParams, bool) {
	if o == nil || o.HbaseConnectionParams == nil {
		return nil, false
	}
	return o.HbaseConnectionParams, true
}

// HasHbaseConnectionParams returns a boolean if a field has been set.
func (o *SourceConnectionRequestParamsAllOf) HasHbaseConnectionParams() bool {
	if o != nil && o.HbaseConnectionParams != nil {
		return true
	}

	return false
}

// SetHbaseConnectionParams gets a reference to the given HadoopConnectionParams and assigns it to the HbaseConnectionParams field.
func (o *SourceConnectionRequestParamsAllOf) SetHbaseConnectionParams(v HadoopConnectionParams) {
	o.HbaseConnectionParams = &v
}

// GetHdfsConnectionParams returns the HdfsConnectionParams field value if set, zero value otherwise.
func (o *SourceConnectionRequestParamsAllOf) GetHdfsConnectionParams() HadoopConnectionParams {
	if o == nil || o.HdfsConnectionParams == nil {
		var ret HadoopConnectionParams
		return ret
	}
	return *o.HdfsConnectionParams
}

// GetHdfsConnectionParamsOk returns a tuple with the HdfsConnectionParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceConnectionRequestParamsAllOf) GetHdfsConnectionParamsOk() (*HadoopConnectionParams, bool) {
	if o == nil || o.HdfsConnectionParams == nil {
		return nil, false
	}
	return o.HdfsConnectionParams, true
}

// HasHdfsConnectionParams returns a boolean if a field has been set.
func (o *SourceConnectionRequestParamsAllOf) HasHdfsConnectionParams() bool {
	if o != nil && o.HdfsConnectionParams != nil {
		return true
	}

	return false
}

// SetHdfsConnectionParams gets a reference to the given HadoopConnectionParams and assigns it to the HdfsConnectionParams field.
func (o *SourceConnectionRequestParamsAllOf) SetHdfsConnectionParams(v HadoopConnectionParams) {
	o.HdfsConnectionParams = &v
}

// GetMssqlConnectionParams returns the MssqlConnectionParams field value if set, zero value otherwise.
func (o *SourceConnectionRequestParamsAllOf) GetMssqlConnectionParams() MssqlConnectionParams {
	if o == nil || o.MssqlConnectionParams == nil {
		var ret MssqlConnectionParams
		return ret
	}
	return *o.MssqlConnectionParams
}

// GetMssqlConnectionParamsOk returns a tuple with the MssqlConnectionParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceConnectionRequestParamsAllOf) GetMssqlConnectionParamsOk() (*MssqlConnectionParams, bool) {
	if o == nil || o.MssqlConnectionParams == nil {
		return nil, false
	}
	return o.MssqlConnectionParams, true
}

// HasMssqlConnectionParams returns a boolean if a field has been set.
func (o *SourceConnectionRequestParamsAllOf) HasMssqlConnectionParams() bool {
	if o != nil && o.MssqlConnectionParams != nil {
		return true
	}

	return false
}

// SetMssqlConnectionParams gets a reference to the given MssqlConnectionParams and assigns it to the MssqlConnectionParams field.
func (o *SourceConnectionRequestParamsAllOf) SetMssqlConnectionParams(v MssqlConnectionParams) {
	o.MssqlConnectionParams = &v
}

// GetOracleConnectionParams returns the OracleConnectionParams field value if set, zero value otherwise.
func (o *SourceConnectionRequestParamsAllOf) GetOracleConnectionParams() OracleConnectionParams {
	if o == nil || o.OracleConnectionParams == nil {
		var ret OracleConnectionParams
		return ret
	}
	return *o.OracleConnectionParams
}

// GetOracleConnectionParamsOk returns a tuple with the OracleConnectionParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceConnectionRequestParamsAllOf) GetOracleConnectionParamsOk() (*OracleConnectionParams, bool) {
	if o == nil || o.OracleConnectionParams == nil {
		return nil, false
	}
	return o.OracleConnectionParams, true
}

// HasOracleConnectionParams returns a boolean if a field has been set.
func (o *SourceConnectionRequestParamsAllOf) HasOracleConnectionParams() bool {
	if o != nil && o.OracleConnectionParams != nil {
		return true
	}

	return false
}

// SetOracleConnectionParams gets a reference to the given OracleConnectionParams and assigns it to the OracleConnectionParams field.
func (o *SourceConnectionRequestParamsAllOf) SetOracleConnectionParams(v OracleConnectionParams) {
	o.OracleConnectionParams = &v
}

// GetVmwareConnectionParams returns the VmwareConnectionParams field value if set, zero value otherwise.
func (o *SourceConnectionRequestParamsAllOf) GetVmwareConnectionParams() VmwareConnectionParams {
	if o == nil || o.VmwareConnectionParams == nil {
		var ret VmwareConnectionParams
		return ret
	}
	return *o.VmwareConnectionParams
}

// GetVmwareConnectionParamsOk returns a tuple with the VmwareConnectionParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceConnectionRequestParamsAllOf) GetVmwareConnectionParamsOk() (*VmwareConnectionParams, bool) {
	if o == nil || o.VmwareConnectionParams == nil {
		return nil, false
	}
	return o.VmwareConnectionParams, true
}

// HasVmwareConnectionParams returns a boolean if a field has been set.
func (o *SourceConnectionRequestParamsAllOf) HasVmwareConnectionParams() bool {
	if o != nil && o.VmwareConnectionParams != nil {
		return true
	}

	return false
}

// SetVmwareConnectionParams gets a reference to the given VmwareConnectionParams and assigns it to the VmwareConnectionParams field.
func (o *SourceConnectionRequestParamsAllOf) SetVmwareConnectionParams(v VmwareConnectionParams) {
	o.VmwareConnectionParams = &v
}

func (o SourceConnectionRequestParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CassandraConnectionParams != nil {
		toSerialize["cassandraConnectionParams"] = o.CassandraConnectionParams
	}
	if o.HiveConnectionParams != nil {
		toSerialize["hiveConnectionParams"] = o.HiveConnectionParams
	}
	if o.HbaseConnectionParams != nil {
		toSerialize["hbaseConnectionParams"] = o.HbaseConnectionParams
	}
	if o.HdfsConnectionParams != nil {
		toSerialize["hdfsConnectionParams"] = o.HdfsConnectionParams
	}
	if o.MssqlConnectionParams != nil {
		toSerialize["mssqlConnectionParams"] = o.MssqlConnectionParams
	}
	if o.OracleConnectionParams != nil {
		toSerialize["oracleConnectionParams"] = o.OracleConnectionParams
	}
	if o.VmwareConnectionParams != nil {
		toSerialize["vmwareConnectionParams"] = o.VmwareConnectionParams
	}
	return json.Marshal(toSerialize)
}

type NullableSourceConnectionRequestParamsAllOf struct {
	value *SourceConnectionRequestParamsAllOf
	isSet bool
}

func (v NullableSourceConnectionRequestParamsAllOf) Get() *SourceConnectionRequestParamsAllOf {
	return v.value
}

func (v *NullableSourceConnectionRequestParamsAllOf) Set(val *SourceConnectionRequestParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceConnectionRequestParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceConnectionRequestParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceConnectionRequestParamsAllOf(val *SourceConnectionRequestParamsAllOf) *NullableSourceConnectionRequestParamsAllOf {
	return &NullableSourceConnectionRequestParamsAllOf{value: val, isSet: true}
}

func (v NullableSourceConnectionRequestParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceConnectionRequestParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o SourceConnectionRequestParamsAllOf) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}