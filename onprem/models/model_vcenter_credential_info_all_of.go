/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// VcenterCredentialInfoAllOf struct for VcenterCredentialInfoAllOf
type VcenterCredentialInfoAllOf struct {
	// Specifies the name of the vCenter.
	Name NullableString `json:"name,omitempty"`
}

// NewVcenterCredentialInfoAllOf instantiates a new VcenterCredentialInfoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterCredentialInfoAllOf() *VcenterCredentialInfoAllOf {
	this := VcenterCredentialInfoAllOf{}
	return &this
}

// NewVcenterCredentialInfoAllOfWithDefaults instantiates a new VcenterCredentialInfoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterCredentialInfoAllOfWithDefaults() *VcenterCredentialInfoAllOf {
	this := VcenterCredentialInfoAllOf{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VcenterCredentialInfoAllOf) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VcenterCredentialInfoAllOf) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *VcenterCredentialInfoAllOf) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *VcenterCredentialInfoAllOf) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *VcenterCredentialInfoAllOf) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *VcenterCredentialInfoAllOf) UnsetName() {
	o.Name.Unset()
}

func (o VcenterCredentialInfoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterCredentialInfoAllOf struct {
	value *VcenterCredentialInfoAllOf
	isSet bool
}

func (v NullableVcenterCredentialInfoAllOf) Get() *VcenterCredentialInfoAllOf {
	return v.value
}

func (v *NullableVcenterCredentialInfoAllOf) Set(val *VcenterCredentialInfoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterCredentialInfoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterCredentialInfoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterCredentialInfoAllOf(val *VcenterCredentialInfoAllOf) *NullableVcenterCredentialInfoAllOf {
	return &NullableVcenterCredentialInfoAllOf{value: val, isSet: true}
}

func (v NullableVcenterCredentialInfoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterCredentialInfoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o VcenterCredentialInfoAllOf) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}