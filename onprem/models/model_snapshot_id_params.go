/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package onprem
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/onprem/utils"
	"fmt"
)

var _ = NullableBool{}

// SnapshotIdParams Params to fetch snapshot id for an object.
type SnapshotIdParams struct {
	// Specifies the protection group id.
	ProtectionGroupId NullableString `json:"protectionGroupId"`
	// Specifies the instance id of the snapshot.
	SnapshotJobInstanceId NullableInt64 `json:"snapshotJobInstanceId,omitempty"`
	// Specifies the start time of the snapshot in micro seconds.
	RunStartTimeUsecs NullableInt64 `json:"runStartTimeUsecs,omitempty"`
	// Specifies the vault id.
	VaultId NullableInt64 `json:"vaultId,omitempty"`
}

// NewSnapshotIdParams instantiates a new SnapshotIdParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotIdParams(protectionGroupId NullableString) *SnapshotIdParams {
	this := SnapshotIdParams{}
	this.ProtectionGroupId = protectionGroupId
	return &this
}

// NewSnapshotIdParamsWithDefaults instantiates a new SnapshotIdParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotIdParamsWithDefaults() *SnapshotIdParams {
	this := SnapshotIdParams{}
	return &this
}

// GetProtectionGroupId returns the ProtectionGroupId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SnapshotIdParams) GetProtectionGroupId() string {
	if o == nil || o.ProtectionGroupId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProtectionGroupId.Get()
}

// GetProtectionGroupIdOk returns a tuple with the ProtectionGroupId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotIdParams) GetProtectionGroupIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionGroupId.Get(), o.ProtectionGroupId.IsSet()
}

// SetProtectionGroupId sets field value
func (o *SnapshotIdParams) SetProtectionGroupId(v string) {
	o.ProtectionGroupId.Set(&v)
}

// GetSnapshotJobInstanceId returns the SnapshotJobInstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotIdParams) GetSnapshotJobInstanceId() int64 {
	if o == nil || o.SnapshotJobInstanceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SnapshotJobInstanceId.Get()
}

// GetSnapshotJobInstanceIdOk returns a tuple with the SnapshotJobInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotIdParams) GetSnapshotJobInstanceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SnapshotJobInstanceId.Get(), o.SnapshotJobInstanceId.IsSet()
}

// HasSnapshotJobInstanceId returns a boolean if a field has been set.
func (o *SnapshotIdParams) HasSnapshotJobInstanceId() bool {
	if o != nil && o.SnapshotJobInstanceId.IsSet() {
		return true
	}

	return false
}

// SetSnapshotJobInstanceId gets a reference to the given NullableInt64 and assigns it to the SnapshotJobInstanceId field.
func (o *SnapshotIdParams) SetSnapshotJobInstanceId(v int64) {
	o.SnapshotJobInstanceId.Set(&v)
}
// SetSnapshotJobInstanceIdNil sets the value for SnapshotJobInstanceId to be an explicit nil
func (o *SnapshotIdParams) SetSnapshotJobInstanceIdNil() {
	o.SnapshotJobInstanceId.Set(nil)
}

// UnsetSnapshotJobInstanceId ensures that no value is present for SnapshotJobInstanceId, not even an explicit nil
func (o *SnapshotIdParams) UnsetSnapshotJobInstanceId() {
	o.SnapshotJobInstanceId.Unset()
}

// GetRunStartTimeUsecs returns the RunStartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotIdParams) GetRunStartTimeUsecs() int64 {
	if o == nil || o.RunStartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RunStartTimeUsecs.Get()
}

// GetRunStartTimeUsecsOk returns a tuple with the RunStartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotIdParams) GetRunStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RunStartTimeUsecs.Get(), o.RunStartTimeUsecs.IsSet()
}

// HasRunStartTimeUsecs returns a boolean if a field has been set.
func (o *SnapshotIdParams) HasRunStartTimeUsecs() bool {
	if o != nil && o.RunStartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetRunStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the RunStartTimeUsecs field.
func (o *SnapshotIdParams) SetRunStartTimeUsecs(v int64) {
	o.RunStartTimeUsecs.Set(&v)
}
// SetRunStartTimeUsecsNil sets the value for RunStartTimeUsecs to be an explicit nil
func (o *SnapshotIdParams) SetRunStartTimeUsecsNil() {
	o.RunStartTimeUsecs.Set(nil)
}

// UnsetRunStartTimeUsecs ensures that no value is present for RunStartTimeUsecs, not even an explicit nil
func (o *SnapshotIdParams) UnsetRunStartTimeUsecs() {
	o.RunStartTimeUsecs.Unset()
}

// GetVaultId returns the VaultId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotIdParams) GetVaultId() int64 {
	if o == nil || o.VaultId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.VaultId.Get()
}

// GetVaultIdOk returns a tuple with the VaultId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotIdParams) GetVaultIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VaultId.Get(), o.VaultId.IsSet()
}

// HasVaultId returns a boolean if a field has been set.
func (o *SnapshotIdParams) HasVaultId() bool {
	if o != nil && o.VaultId.IsSet() {
		return true
	}

	return false
}

// SetVaultId gets a reference to the given NullableInt64 and assigns it to the VaultId field.
func (o *SnapshotIdParams) SetVaultId(v int64) {
	o.VaultId.Set(&v)
}
// SetVaultIdNil sets the value for VaultId to be an explicit nil
func (o *SnapshotIdParams) SetVaultIdNil() {
	o.VaultId.Set(nil)
}

// UnsetVaultId ensures that no value is present for VaultId, not even an explicit nil
func (o *SnapshotIdParams) UnsetVaultId() {
	o.VaultId.Unset()
}

func (o SnapshotIdParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["protectionGroupId"] = o.ProtectionGroupId.Get()
	}
	if o.SnapshotJobInstanceId.IsSet() {
		toSerialize["snapshotJobInstanceId"] = o.SnapshotJobInstanceId.Get()
	}
	if o.RunStartTimeUsecs.IsSet() {
		toSerialize["runStartTimeUsecs"] = o.RunStartTimeUsecs.Get()
	}
	if o.VaultId.IsSet() {
		toSerialize["vaultId"] = o.VaultId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSnapshotIdParams struct {
	value *SnapshotIdParams
	isSet bool
}

func (v NullableSnapshotIdParams) Get() *SnapshotIdParams {
	return v.value
}

func (v *NullableSnapshotIdParams) Set(val *SnapshotIdParams) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotIdParams) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotIdParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotIdParams(val *SnapshotIdParams) *NullableSnapshotIdParams {
	return &NullableSnapshotIdParams{value: val, isSet: true}
}

func (v NullableSnapshotIdParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotIdParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}




func (o SnapshotIdParams) Print() {
		if byteArray, err := o.MarshalJSON(); err != nil {
				fmt.Println(err)
		} else {
				fmt.Println(string(byteArray))
		}
}