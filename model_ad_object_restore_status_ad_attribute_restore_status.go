/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ADObjectRestoreStatusADAttributeRestoreStatus struct for ADObjectRestoreStatusADAttributeRestoreStatus
type ADObjectRestoreStatusADAttributeRestoreStatus struct {
	// Error status. If the 'attrstatus_vec' is empty or contains kNoError, treat the attribute restore as success. For multi-valued properties such as 'memberOf', this vector may contain failure to add or remove specific value within the multi-value set.
	AttrstatusVec []ErrorProto `json:"attrstatusVec,omitempty"`
	// LDAP name of the attribute.
	LdapName NullableString `json:"ldapName,omitempty"`
}

// NewADObjectRestoreStatusADAttributeRestoreStatus instantiates a new ADObjectRestoreStatusADAttributeRestoreStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADObjectRestoreStatusADAttributeRestoreStatus() *ADObjectRestoreStatusADAttributeRestoreStatus {
	this := ADObjectRestoreStatusADAttributeRestoreStatus{}
	return &this
}

// NewADObjectRestoreStatusADAttributeRestoreStatusWithDefaults instantiates a new ADObjectRestoreStatusADAttributeRestoreStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADObjectRestoreStatusADAttributeRestoreStatusWithDefaults() *ADObjectRestoreStatusADAttributeRestoreStatus {
	this := ADObjectRestoreStatusADAttributeRestoreStatus{}
	return &this
}

// GetAttrstatusVec returns the AttrstatusVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ADObjectRestoreStatusADAttributeRestoreStatus) GetAttrstatusVec() []ErrorProto {
	if o == nil  {
		var ret []ErrorProto
		return ret
	}
	return o.AttrstatusVec
}

// GetAttrstatusVecOk returns a tuple with the AttrstatusVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ADObjectRestoreStatusADAttributeRestoreStatus) GetAttrstatusVecOk() (*[]ErrorProto, bool) {
	if o == nil || o.AttrstatusVec == nil {
		return nil, false
	}
	return &o.AttrstatusVec, true
}

// HasAttrstatusVec returns a boolean if a field has been set.
func (o *ADObjectRestoreStatusADAttributeRestoreStatus) HasAttrstatusVec() bool {
	if o != nil && o.AttrstatusVec != nil {
		return true
	}

	return false
}

// SetAttrstatusVec gets a reference to the given []ErrorProto and assigns it to the AttrstatusVec field.
func (o *ADObjectRestoreStatusADAttributeRestoreStatus) SetAttrstatusVec(v []ErrorProto) {
	o.AttrstatusVec = v
}

// GetLdapName returns the LdapName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ADObjectRestoreStatusADAttributeRestoreStatus) GetLdapName() string {
	if o == nil || o.LdapName.Get() == nil {
		var ret string
		return ret
	}
	return *o.LdapName.Get()
}

// GetLdapNameOk returns a tuple with the LdapName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ADObjectRestoreStatusADAttributeRestoreStatus) GetLdapNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LdapName.Get(), o.LdapName.IsSet()
}

// HasLdapName returns a boolean if a field has been set.
func (o *ADObjectRestoreStatusADAttributeRestoreStatus) HasLdapName() bool {
	if o != nil && o.LdapName.IsSet() {
		return true
	}

	return false
}

// SetLdapName gets a reference to the given NullableString and assigns it to the LdapName field.
func (o *ADObjectRestoreStatusADAttributeRestoreStatus) SetLdapName(v string) {
	o.LdapName.Set(&v)
}
// SetLdapNameNil sets the value for LdapName to be an explicit nil
func (o *ADObjectRestoreStatusADAttributeRestoreStatus) SetLdapNameNil() {
	o.LdapName.Set(nil)
}

// UnsetLdapName ensures that no value is present for LdapName, not even an explicit nil
func (o *ADObjectRestoreStatusADAttributeRestoreStatus) UnsetLdapName() {
	o.LdapName.Unset()
}

func (o ADObjectRestoreStatusADAttributeRestoreStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AttrstatusVec != nil {
		toSerialize["attrstatusVec"] = o.AttrstatusVec
	}
	if o.LdapName.IsSet() {
		toSerialize["ldapName"] = o.LdapName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableADObjectRestoreStatusADAttributeRestoreStatus struct {
	value *ADObjectRestoreStatusADAttributeRestoreStatus
	isSet bool
}

func (v NullableADObjectRestoreStatusADAttributeRestoreStatus) Get() *ADObjectRestoreStatusADAttributeRestoreStatus {
	return v.value
}

func (v *NullableADObjectRestoreStatusADAttributeRestoreStatus) Set(val *ADObjectRestoreStatusADAttributeRestoreStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableADObjectRestoreStatusADAttributeRestoreStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableADObjectRestoreStatusADAttributeRestoreStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADObjectRestoreStatusADAttributeRestoreStatus(val *ADObjectRestoreStatusADAttributeRestoreStatus) *NullableADObjectRestoreStatusADAttributeRestoreStatus {
	return &NullableADObjectRestoreStatusADAttributeRestoreStatus{value: val, isSet: true}
}

func (v NullableADObjectRestoreStatusADAttributeRestoreStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADObjectRestoreStatusADAttributeRestoreStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


