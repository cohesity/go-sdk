openapi: 3.0.1
info:
  description: Cohesity API provides a RESTful interface to access the various data
    management operations on Cohesity cluster and Helios.
  title: Cohesity REST API
  version: "2.0"
servers:
- url: /v2
paths:
  /access-tokens:
    post:
      description: |-
        Before making other REST API requests, your REST client must make a an access token request with a valid Cohesity username and password. This POST request returns an access token and type in the response that is generated by the Cohesity Cluster. Subsequent requests to other Cohesity REST API operations must specify the returned access token and type by setting 'Authorization' in the http header in the following format:
        Authorization: token_type access_token
        The generated token is valid for 24 hours. If a request is made with an expired token, the 'Token expired' error message is returned. Add code to your REST client to check for this error and request another access token before reissuing the request.
      operationId: CreateAccessToken
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessTokenRequestParams'
        description: Specifies the parameters to generate an access token
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a new API access token
      tags:
      - AccessToken
      x-codegen-request-body-name: body
  /active-directories:
    get:
      description: Get the list of Active Directories.
      operationId: GetActiveDirectory
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by a list of Active Directory domain names.
        explode: false
        in: query
        name: domainNames
        schema:
          items:
            pattern: ^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])(\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9]))*$
            type: string
          type: array
        style: form
      - description: Filter by a list of Active Directory Ids.
        explode: false
        in: query
        name: ids
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: TenantIds contains ids of the tenants for which Active Directories
          are to be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the response will include Active Directories which were
          created by all tenants which the current user has permission to see. If
          false, then only Active Directories created by the current user will be
          returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectories'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the list of Active Directories.
      tags:
      - ActiveDirectory
    post:
      description: Create an Active Directory.
      operationId: CreateActiveDirectory
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActiveDirectoryRequest'
        description: Specifies the parameters to create an Active Directory.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectory'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create an Active Directory.
      tags:
      - ActiveDirectory
      x-codegen-request-body-name: body
  /active-directories/{id}:
    delete:
      description: Delete an Active Directory.
      operationId: DeleteActiveDirectory
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies id of an Active Directory.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: Specifies the username of the Active Direcotry Admin.
        in: header
        name: activeDirectoryAdminUsername
        required: true
        schema:
          type: string
      - description: Specifies the password of the Active Direcotry Admin.
        in: header
        name: activeDirectoryAdminPassword
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete an Active Directory.
      tags:
      - ActiveDirectory
    get:
      description: Get an Active Directory by id.
      operationId: GetActiveDirectoryById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies id of an Active Directory.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: Specifies whether to include Centrify Zones of the Active Directory
          in response.
        in: query
        name: includeCentrifyZones
        schema:
          type: boolean
      - description: Specifies whether to include Domain Controllers of the Active
          Directory in response.
        in: query
        name: includeDomainControllers
        schema:
          type: boolean
      - description: Specifies whether to include Security Principals of the Active
          Directory in response.
        in: query
        name: includeSecurityPrincipals
        schema:
          type: boolean
      - description: Specifies a prefix, only security principals with name or sAMAccountName
          having this prefix (ignoring cases) will be returned. This field is appliciable
          and mandatory if 'includeSecurityPrincipals' is set to true.
        in: query
        name: prefix
        schema:
          type: string
      - description: Specifies a list of object classes, only security principals
          with object class in this list will be returned. This field is appliciable
          if 'includeSecurityPrincipals' is set to true.
        explode: false
        in: query
        name: objectClass
        schema:
          items:
            enum:
            - User
            - Group
            - Computer
            - WellKnownPrincipal
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectory'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get an Active Directory by id.
      tags:
      - ActiveDirectory
    put:
      description: Update an Active Directory.
      operationId: UpdateActiveDirectory
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies id of an Active Directory.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActiveDirectoryRequest'
        description: Request to update an Active Directory.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectory'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update an Active Directory.
      tags:
      - ActiveDirectory
      x-codegen-request-body-name: body
  /alerts-summary:
    get:
      description: Get alerts summary grouped by category.
      operationId: GetAlertSummary
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by start time. Specify the start time as a Unix epoch
          Timestamp (in microseconds). By default it is current time minus a day.
        in: query
        name: startTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Filter by end time. Specify the end time as a Unix epoch Timestamp
          (in microseconds). By default it is current time.
        in: query
        name: endTimeUsecs
        schema:
          format: int64
          type: integer
      - description: |-
          IncludeTenants specifies if alerts of all the tenants under the
          hierarchy of the logged in user's organization should be used to
          compute summary.
        in: query
        name: includeTenants
        schema:
          nullable: true
          type: boolean
      - description: |-
          TenantIds contains ids of the tenants for which alerts are to be
          used to compute summary.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |-
          Specifies list of alert states to filter alerts by. If not specified,
          only open alerts will be used to get summary.
        explode: false
        in: query
        name: statesList
        schema:
          items:
            enum:
            - kResolved
            - kOpen
            - kNote
            - kSuppressed
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsSummaryResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get alerts summary.
      tags:
      - Alert
  /antivirus-service/groups:
    get:
      description: Get Antivirus Service groups.
      operationId: GetAntivirusServiceGroups
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AntivirusServiceGroups'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Antivirus Service groups.
      tags:
      - AntivirusService
  /antivirus-service/icap-uri-connection-status:
    get:
      description: Get ICAP Uri connection status.
      operationId: GetIcapUriConnectionStatus
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a list of URIs to check connection status.
        explode: false
        in: query
        name: uris
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IcapUriConnectionStatusList'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get ICAP Uri connection status.
      tags:
      - AntivirusService
  /antivirus-service/infected-files:
    get:
      description: Get infected files.
      operationId: GetInfectedFiles
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a list of view ids. Only infected files from these
          views will be returned.
        explode: false
        in: query
        name: viewIds
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Specifies the file path.
        in: query
        name: path
        schema:
          type: string
      - description: Specifies the file states.
        explode: false
        in: query
        name: states
        schema:
          items:
            enum:
            - Quarantined
            - Unquarantined
            type: string
          type: array
        style: form
      - description: Specifies the max number of files to be returned.
        in: query
        name: maxCount
        schema:
          format: int64
          type: integer
      - description: Specifies the pagination cookie.
        in: query
        name: cookie
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfectedFiles'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get infected files.
      tags:
      - AntivirusService
  /audit-logs:
    get:
      description: Get a cluster audit logs.
      operationId: GetAuditLogs
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Search audit logs by 'entityName' or 'details'.
        in: query
        name: searchString
        schema:
          nullable: true
          type: string
      - description: Specifies a list of usernames, only audit logs made by these
          users will be returned.
        explode: false
        in: query
        name: usernames
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Specifies a list of domains, only audit logs made by user in
          these domains will be returned.
        explode: false
        in: query
        name: domains
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Specifies a list of entity types, only audit logs containing
          these entity types will be returned.
        explode: false
        in: query
        name: entityTypes
        schema:
          items:
            enum:
            - ClusterPartition
            - StorageDomain
            - View
            - Share
            - Node
            - Disk
            - Cluster
            - Vlan
            - User
            - ApiKey
            - Chassis
            - SslCertificate
            - ProtectionGroup
            - Source
            - RecoveryTask
            - SmtpServer
            - EncryptionKey
            - ProtectionPolicy
            - Alert
            - Resolution
            - AlertNotificationRule
            - Vault
            - RemoteCluster
            - ActiveDirectory
            - KerberosProvider
            - Ldap
            - AntivirusServiceGroup
            - InfectedFile
            - PreferredDomainController
            - Group
            - Role
            - ProtectionRun
            - SearchJob
            - PhysicalAgent
            - CloneTask
            - CloneRefreshTask
            - Network
            - Interface
            - NetworkInerfaceGroup
            - Scheduler
            - ProxyServer
            - StaticRoute
            - Ip
            - Qos
            - KmsConfiguration
            - CloudSpin
            - Tenant
            - IdpConfiguration
            - App
            - HeliosEvent
            - Object
            - ClusterServices
            - AccessToken
            - SnmpConfig
            - IoTier
            - ServiceFlag
            - SupportServer
            - Csr
            - Keystone
            - SwiftRoles
            - Tags
            - Nis
            - Snapshot
            - HybridExtender
            - DataTieringAnalysisGroup
            - DataTieringDowntierTask
            - DataTieringUptierTask
            - TrustedCA
            - AMQPTargetConfiguration
            - Patch
            - Hotfix
            type: string
          nullable: true
          type: array
        style: form
      - description: Specifies a list of actions, only audit logs containing these
          actions will be returned.
        explode: false
        in: query
        name: actions
        schema:
          items:
            enum:
            - Login
            - Logout
            - Create
            - Modify
            - Delete
            - Activate
            - Deactivate
            - Pause
            - Resume
            - RunNow
            - Clone
            - Recover
            - Cancel
            - Register
            - Unregister
            - Update
            - Refresh
            - Upgrade
            - Upload
            - Download
            - Rename
            - Accept
            - Mark
            - Close
            - Join
            - DisJoin
            - Overwrite
            - MarkRemoval
            - CloudSpin
            - Assign
            - Unassign
            - NotificationRule
            - ScheduleReport
            - Install
            - Uninstall
            - Stop
            - Start
            - Restart
            - RunDiagnostics
            - Apply
            - Revert
            - Import
            - Validate
            type: string
          nullable: true
          type: array
        style: form
      - description: Specifies a unix timestamp in microseconds, only audit logs made
          after this time will be returned.
        in: query
        name: startTimeUsecs
        schema:
          format: int64
          nullable: true
          type: integer
      - description: Specifies a unix timestamp in microseconds, only audit logs made
          before this time will be returned.
        in: query
        name: endTimeUsecs
        schema:
          format: int64
          nullable: true
          type: integer
      - description: Specifies a list of tenant ids, only audit logs made by these
          tenants will be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: If true, the response will include Protection Groups which were
          created by all tenants which the current user has permission to see. If
          false, then only Protection Groups created by the current user will be returned.
        in: query
        name: includeTenants
        schema:
          nullable: true
          type: boolean
      - description: Specifies a start index. The oldest logs before this index will
          skipped, only audit logs from this index will be fetched.
        in: query
        name: startIndex
        schema:
          format: int64
          nullable: true
          type: integer
      - description: Specifies the number of indexed obejcts to be fetched from the
          specified start index.
        in: query
        name: count
        schema:
          format: int64
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogs'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get cluster audit logs.
      tags:
      - AuditLog
  /audit-logs/actions:
    get:
      description: Get all actions of cluster audit logs.
      operationId: GetAuditLogsActions
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogsActions'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get cluster audit logs actions.
      tags:
      - AuditLog
  /audit-logs/entity-types:
    get:
      description: Get all entity types of cluster audit logs.
      operationId: GetAuditLogsEntityTypes
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogsEntityTypes'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get cluster audit logs entity types.
      tags:
      - AuditLog
  /audit-logs/filer-configs:
    get:
      description: Get filer audit log configs.
      operationId: GetFilerAuditLogConfigs
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilerAuditLogConfigs'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get filer audit log configs.
      tags:
      - AuditLog
    put:
      description: Update filer audit log configs.
      operationId: UpdateFilerAuditLogConfigs
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilerAuditLogConfigs'
        description: Specifies the filer audit log config to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilerAuditLogConfigs'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update filer audit log configs.
      tags:
      - AuditLog
      x-codegen-request-body-name: body
  /chassis:
    get:
      description: Get list of all chassis info that are part of cluster.
      operationId: GetChassis
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filters chassis that have no rack assigned.
        in: query
        name: noRackAssigned
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChassisList'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get list of chassis
      tags:
      - Platform
  /chassis/{id}:
    get:
      description: Get a chassis info by id.
      operationId: GetChassisById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of chassis.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chassis'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a chassis by chassis id.
      tags:
      - Platform
    patch:
      description: Update selected properties of chassis info by id.
      operationId: UpdateChassisById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of chassis.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chassis'
        description: Specifies the parameters to update chassis.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chassis'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a chassis by chassis id.
      tags:
      - Platform
      x-codegen-request-body-name: body
  /client-csr:
    post:
      description: Create two Certificate Signing Request on the cluster with the
        given details one each for client and server. Each service can have at most
        one outstanding pair of CSR.
      operationId: CreateClientcsr
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCsrRequest'
        description: Specifies the parameters to create the Certificate Signing Requests.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClientcsrResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create Certificate Signing Requests on the cluster.
      tags:
      - Security
      x-codegen-request-body-name: body
  /client-csr/certificate:
    post:
      description: Import the signed certificates on the cluster after the Certificate
        Signing Requests are created.
      operationId: ImportCertificateByClientcsr
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportCertificateByClientcsrRequest'
        description: Specifies the parameters to import the certificate.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportCertificateByClientcsrResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Import the signed certificates on the cluster after the Certificate
        Signing Requests are created.
      tags:
      - Security
      x-codegen-request-body-name: body
  /clusters:
    get:
      description: Retrieve some summary information about the Cluster Configuration.
      operationId: GetCluster
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Retrieve Cluster Configuration
      tags:
      - Platform
    post:
      description: Create a cluster with given network and cluster configuration.
      operationId: CreateCluster
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterParams'
        description: Specifies the parameters to create cluster.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a cluster.
      tags:
      - Platform
      x-codegen-request-body-name: body
    put:
      description: Update the Cluster with the given configuration.
      operationId: UpdateCluster
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
        description: Specifies the parameters to update cluster.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a cluster.
      tags:
      - Platform
      x-codegen-request-body-name: body
  /clusters/amqp-target-config:
    delete:
      description: Delete AMQP target config on the cluster.
      operationId: DeleteAMQPTargetConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete AMQP Target Config
      tags:
      - Platform
    get:
      description: Fetch AMQP target config on the cluster.
      operationId: GetAMQPTargetConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAMQPTargetConfig'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get AMQP Target Config
      tags:
      - Platform
    put:
      description: Updates AMQP target config on the cluster.
      operationId: UpdateAMQPTargetConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterAMQPTargetConfig'
        description: Specifies the parameters to update cluster AMQP target config.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAMQPTargetConfig'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update AMQP Target Config
      tags:
      - Platform
      x-codegen-request-body-name: body
  /clusters/feature-flag:
    get:
      description: Get the list of feature flag overrides defined on cluster.
      operationId: ListFeatureFlag
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          $ref: '#/definitions/FeatureFlagList'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get feature flag overrides list.
      tags:
      - Platform
    put:
      description: Update a feature flag override status to cluster.
      operationId: UpdateFeatureFlag
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFeatureFlagParams'
        description: Param for feature flag override request.
        required: true
      responses:
        "200":
          $ref: '#/definitions/FeatureFlagList'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update feature flag override status.
      tags:
      - Platform
      x-codegen-request-body-name: body
  /clusters/is-dmaas:
    get:
      description: Get whether the cluster is a DMaaS cluster.
      operationId: GetIsDMaaSCluster
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DMaaSInfo'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get whether the cluster is a DMaaS cluster.
      tags:
      - Platform
      x-cohesity-internal: true
    put:
      description: Update whether the cluster is a DMaaS cluster.
      operationId: UpdateIsDMaaSCluster
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DMaaSInfo'
        description: Param to update whether the cluster is a DMaaS cluster.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DMaaSInfo'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update whether the cluster is a DMaaS cluster.
      tags:
      - Platform
      x-cohesity-internal: true
      x-codegen-request-body-name: body
  /clusters/local-domain-sid:
    get:
      description: Fetch SID of cluster local domain.
      operationId: GetClusterLocalDomainSID
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterLocalDomainSID'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Cluster Local Domain SID
      tags:
      - Platform
  /clusters/tenant-config:
    get:
      description: Get Tenant related configurations for the cluster.
      operationId: GetOnPremTenantConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnPremTenantConfig'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Tenants Config.
      tags:
      - Tenant
    post:
      description: Update Tenant related configurations for the cluster.
      operationId: UpdateOnPremTenantConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnPremTenantConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnPremTenantConfig'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update Tenants Config.
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /csr:
    get:
      description: List Certificate Signing Requests on the cluster with service name
        filtering.
      operationId: GetCsrList
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the Cohesity service name for which the CSR is generated.
          If this is not specified, all the csrs on the cluster will be returned.
        in: query
        name: serviceName
        schema:
          enum:
          - iris
          type: string
      - description: Specifies the ids of the csrs. If this is not specified, all
          the csrs on the cluster will be returned.
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCsrListResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List Certificate Signing Requests on the cluster.
      tags:
      - Security
    post:
      description: Create a Certificate Signing Request on the cluster with the given
        details. Each service has at most one outstanding CSR.
      operationId: CreateCsr
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCsrRequest'
        description: Specifies the parameters to create a Certificate Signing Request.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCsrResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a Certificate Signing Request on the cluster.
      tags:
      - Security
      x-codegen-request-body-name: body
  /csr/certificate:
    post:
      description: Update the signed certificate on the cluster after a Certificate
        Signing Request is created.
      operationId: UpdateCertificateByCsr
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCertificateByCsrRequest'
        description: Specifies the parameters to update the certificate.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCertificateByCsrResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update the signed certificate on the cluster after a Certificate Signing
        Request is created.
      tags:
      - Security
      x-codegen-request-body-name: body
  /csr/{id}:
    delete:
      description: Delete a Certificate Signing Request on the cluster.
      operationId: DeleteCsr
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the csr to be deleted.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete a Certificate Signing Request on the cluster.
      tags:
      - Security
    get:
      description: List the specified Certificate Signing Request.
      operationId: GetCsrById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the csr.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonCsrResponseParams'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List the specified Certificate Signing Request.
      tags:
      - Security
  /data-protect/agents/upgrade-tasks:
    get:
      description: Get the list of agent upgrade tasks.
      operationId: GetUpgradeTasks
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies IDs of tasks to be fetched.
        explode: false
        in: query
        name: ids
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: TenantIds contains ids of the tenants for which objects are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the response will include upgrade tasks which were created
          by all tenants which the current user has permission to see. If false, then
          only upgrade tasks created by the current user will be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentUpgradeTaskStates'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get upgrade tasks
      tags:
      - Agent
    post:
      description: Create a schedule based agent upgrade task.
      operationId: CreateUpgradeTask
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpgradeTaskRequest'
        description: Specifies parameters to create a schedule based agent upgrade
          task.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentUpgradeTaskState'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create an upgrade task
      tags:
      - Agent
      x-codegen-request-body-name: body
  /data-protect/agents/upgrade-tasks/actions:
    post:
      description: Perform actions on an agent upgrade task.
      operationId: PerformActionOnAgentUpgradeTask
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentUpgradeTaskActionRequest'
        description: Specifies the parameters to perform an action on an agent upgrade
          task.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentUpgradeTaskActionObject'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Perform action on an upgrade task.
      tags:
      - Agent
      x-codegen-request-body-name: body
  /data-protect/external-targets:
    get:
      description: Get the list of External Targets.
      operationId: GetExternalTargets
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by a list of External Target ids.
        explode: false
        in: query
        name: ids
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Filter by a list of External Target names.
        explode: false
        in: query
        name: names
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by a list of External Target purpose types.
        explode: false
        in: query
        name: purposeTypes
        schema:
          items:
            enum:
            - Archival
            - Tiering
            type: string
          type: array
        style: form
      - description: Filter by a list of External Target storage types.
        explode: false
        in: query
        name: storageTypes
        schema:
          items:
            enum:
            - Azure
            - Google
            - AWS
            - Oracle
            - Nas
            - QStarTape
            - S3Compatible
            type: string
          type: array
        style: form
      - description: Filter by a list of External Target storage classes.
        explode: false
        in: query
        name: storageClasses
        schema:
          items:
            enum:
            - AmazonS3Standard
            - AmazonS3StandardIA
            - AmazonS3OneZoneIA
            - AmazonS3IntelligentTiering
            - AmazonS3Glacier
            - AmazonS3GlacierDeepArchive
            - AmazonGlacier
            - AzureArchiveBlob
            - AzureCoolBlob
            - AzureHotBlob
            - GCPStandard
            - GCPColdline
            - GCPNearline
            - OracleObjectStorage
            - OracleArchiveStorage
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalTargets'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the list of External Targets.
      tags:
      - ExternalTarget
    post:
      description: Create a External Target.
      operationId: CreateExternalTarget
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalTarget'
        description: Specifies the parameters to create a External Target.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalTarget'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a External Target.
      tags:
      - ExternalTarget
      x-codegen-request-body-name: body
  /data-protect/external-targets/settings:
    get:
      description: Get the list of External Target Settings
      operationId: GetExternalTargetSettings
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalTarget'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the list of External Target Settings.
      tags:
      - ExternalTarget
    put:
      description: Update External Target Settings
      operationId: UpdateExternalTargetSettings
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalBandwidthSettings'
        description: Specifies the parameters to update a External Target Settings.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalBandwidthSettings'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update External Target Settings
      tags:
      - ExternalTarget
      x-codegen-request-body-name: body
  /data-protect/external-targets/{id}:
    delete:
      description: Returns Success if the External Target is deleted.
      operationId: DeleteExternalTarget
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the External Target.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete a External Target.
      tags:
      - ExternalTarget
    get:
      description: Returns the External Target corresponding to the specified Group
        id.
      operationId: GetExternalTargetById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the External Target.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalTarget'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List details about single External Target.
      tags:
      - ExternalTarget
    put:
      description: Update the specified External Target.
      operationId: UpdateExternalTarget
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the External Target.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalTarget'
        description: Specifies the parameters to update a External Target.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalTarget'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a External Target.
      tags:
      - ExternalTarget
      x-codegen-request-body-name: body
  /data-protect/failover/planned-runs:
    get:
      description: Poll to see whether planned run has been scheduled or not.
      operationId: PollPlannedRuns
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Get runs for specific failover workflows.
        explode: false
        in: query
        name: failoverIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: TenantIds contains ids of the tenants for which objects are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the response will include Protection Groups which were
          created by all tenants which the current user has permission to see. If
          false, then only Protection Groups created by the current user will be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailoverRunsResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the list of failover planned runs.
      tags:
      - Failover
  /data-protect/failover/views/{id}:
    get:
      description: Get failover tasks of a View.
      operationId: GetViewFailover
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a view id to create an failover task.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetViewFailoverResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get View Failover.
      tags:
      - Failover
    post:
      description: Create a view failover task.
      operationId: CreateViewFailover
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a view id to create an failover task.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateViewFailoverRequest'
        description: Specifies the request body to create failover task.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Failover'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create View Failover Task.
      tags:
      - Failover
      x-codegen-request-body-name: body
  /data-protect/failover/views/{id}/cancel:
    post:
      description: Cancel an in progress view failover task.
      operationId: CancelViewFailover
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a view id to cancel it's failover.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Cancel View Failover Task.
      tags:
      - Failover
  /data-protect/failover/{id}:
    post:
      description: Initiate a failover request.
      operationId: InitFailover
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the failover workflow.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitFailoverRequest'
        description: Specifies the parameters to initiate a failover. This failover
          request should be intiaited from replication cluster.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitFailoverResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Initiate a failover request.
      tags:
      - Failover
      x-codegen-request-body-name: body
  /data-protect/failover/{id}/backup-activation:
    post:
      description: Specifies the configuration required for activating backup for
        failover objects on replication cluster. Here orchastrator can call this API
        multiple times as long as full set of object are non-overlapping. They can
        also use the existing job if its compatible to backup failover objects.
      operationId: ReplicationBackupActivation
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the failover workflow.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplicationBackupActivation'
        description: Specifies the paramteres to activate the backup of failover entities.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationBackupActivationResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Activate failover entity backup on replication clsuter.
      tags:
      - Failover
      x-codegen-request-body-name: body
  /data-protect/failover/{id}/backup-deactivation:
    post:
      description: Specifies the configuration required for deactivating backup for
        failover entities on source cluster.
      operationId: SourceBackupDeactivation
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the failover workflow.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceBackupDeactivation'
        description: Specifies the paramteres to deactivate the backup of failover
          entities.
        required: true
      responses:
        "201":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Deactivate failover entity backup on source clsuter.
      tags:
      - Failover
      x-codegen-request-body-name: body
  /data-protect/failover/{id}/cancel:
    post:
      description: Specifies the request to cancel failover workflow. The cancellation
        request should not be made if '/backupActivation' or '/backupDeactivaetion'
        are already called on replication or source cluster respectively.
      operationId: CancelFailover
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the failover workflow.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "201":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Cancel failover workflow.
      tags:
      - Failover
  /data-protect/failover/{id}/object-linkage:
    post:
      description: Specifies the request to link failover objects on replication cluster
        to the replicated entity from source cluster. This linking need to be done
        after perforing recoveries for failed entities on replication cluster. This
        linkage will be useful when merging snapshots of object across replications
        and failovers.
      operationId: ObjectLinkage
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the failover workflow.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectLinkingRequest'
        description: Specifies the paramteres to create links between replicated objects
          and failover objects.
        required: true
      responses:
        "201":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Linking between replicated objects and failover objects
      tags:
      - Failover
      x-codegen-request-body-name: body
  /data-protect/failover/{id}/planned-run:
    post:
      description: Specifies the configuration required for executing a special run
        as a part of failover workflow. This special run is triggered during palnned
        failover to sync the source cluster to replication cluster with minimum possible
        delta.
      operationId: CreatePlannedRun
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the failover workflow.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailoverRunConfiguration'
        description: Specifies the paramteres to create a planned run while failover
          workflow.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailoverCreateRunResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a planned run for backup and replication.
      tags:
      - Failover
      x-codegen-request-body-name: body
  /data-protect/filter/objects:
    post:
      description: List all the filtered objects using given regular expressions and
        wildcard supported search strings. We are currenly supporting this for only
        SQL adapter.
      operationId: FilterObjects
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterObjectsRequest'
        description: Specifies the parameters to filter objects.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilteredObjectsResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List all the filtered objects.
      tags:
      - Object
      x-codegen-request-body-name: body
  /data-protect/objects:
    get:
      description: Get Objects Configurations.
      operationId: GetProtectedObjectsOfAnyType
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by a list of Object ids.
        explode: false
        in: query
        name: ids
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Filter by ObjectActionKey, uniquely represent protection of an
          object. An object can be protected in multiple ways but atmost once for
          a given combination of ObjectActionKey, when specified Only objects of given
          action_key are returned for corresponding object id and this vec's size
          needs to be same as 'ids'.
        explode: false
        in: query
        name: objectActionKeys
        schema:
          items:
            enum:
            - kVMware
            - kHyperV
            - kAzure
            - kGCP
            - kKVM
            - kAcropolis
            - kAWS
            - kPhysical
            - kGPFS
            - kElastifile
            - kNetapp
            - kGenericNas
            - kIsilon
            - kFlashBlade
            - kPure
            - kSQL
            - kExchange
            - kAD
            - kOracle
            - kView
            - kRemoteAdapter
            - kO365
            - kO365PublicFolders
            - kO365Teams
            - kO365Group
            - kO365Exchange
            - kO365OneDrive
            - kO365Sharepoint
            - kKubernetes
            - kCassandra
            - kMongoDB
            - kCouchbase
            - kHdfs
            - kHive
            - kHBase
            - kUDA
            type: string
          type: array
        style: form
      - description: Filter by Policy ids that are associated with Protected Objects.
        explode: false
        in: query
        name: policyIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by Parent Id. Parent id is a unique object Id which may
          contain protected objects underneath in the source tree.
        in: query
        name: parentId
        schema:
          format: int64
          type: integer
      - description: If true, the response will include only objects which have been
          protected.
        in: query
        name: onlyProtectedObjects
        schema:
          type: boolean
      - description: Filter by Storage Domain id. Only Objects protected to this Storage
          Domain will be returned.
        in: query
        name: storageDomainId
        schema:
          format: int64
          type: integer
      - description: Filter by environment types such as 'kVMware', 'kView', etc.
          Only Protected objects protecting the specified environment types are returned.
        explode: false
        in: query
        name: environments
        schema:
          items:
            enum:
            - kVMware
            - kHyperV
            - kAzure
            - kGCP
            - kKVM
            - kAcropolis
            - kAWS
            - kPhysical
            - kGPFS
            - kElastifile
            - kNetapp
            - kGenericNas
            - kIsilon
            - kFlashBlade
            - kPure
            - kSQL
            - kExchange
            - kAD
            - kOracle
            - kView
            - kRemoteAdapter
            - kO365
            - kO365PublicFolders
            - kO365Teams
            - kO365Group
            - kO365Exchange
            - kO365OneDrive
            - kO365Sharepoint
            - kKubernetes
            - kCassandra
            - kMongoDB
            - kCouchbase
            - kHdfs
            - kHive
            - kHBase
            - kUDA
            type: string
          type: array
        style: form
      - description: TenantIds contains ids of the tenants for which objects are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the response will include Objects which were protected
          by all tenants which the current user has permission to see. If false, then
          only objects protected by the current user will be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: If true, the response will include information about the last
          protection run on this object.
        in: query
        name: includeLastRunInfo
        schema:
          type: boolean
      - description: If true, the response will include only the auto protected objects.
        in: query
        name: onlyAutoProtectedObjects
        schema:
          type: boolean
      - description: If true, the response will include only the leaf level objects.
        in: query
        name: onlyLeafObjects
        schema:
          type: boolean
      - description: Filter by a list of region ids.
        explode: false
        in: query
        name: regionIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by a list of protection types.
        explode: false
        in: query
        name: protectionTypes
        schema:
          items:
            enum:
            - kAWSNative
            - kAWSSnapshotManager
            - kPhysical
            - kSQL
            - kOracle
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProtectedObjectsResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Objects.
      tags:
      - Object
  /data-protect/objects/actions:
    post:
      description: Specifies the request to perform various actions on multiple objects.
      operationId: ObjectsActions
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectsActionRequest'
        description: Specifies the paramteres to execute actions on given list of
          objects.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Actions on Objects
      tags:
      - Object
      x-codegen-request-body-name: body
  /data-protect/objects/last-run:
    get:
      description: Get last protection run of objects.
      operationId: GetObjectsLastRun
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a list of object ids, only last runs for these objects
          will be returned.
        explode: false
        in: query
        name: ids
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: TenantIds contains ids of the tenants for which objects are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the response will include Objects which belongs to all
          tenants which the current user has permission to see.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: Specifies the pagination cookie with which subsequent parts of
          the response can be fetched.
        in: query
        name: paginationCookie
        schema:
          type: string
      - description: Specifies the number of objects to be fetched for the specified
          pagination cookie.
        in: query
        name: count
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectsLastRun'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get last protection run of objects.
      tags:
      - Object
  /data-protect/objects/object-identifiers:
    get:
      description: Get Object Identifiers.
      operationId: GetObjectIdentifiers
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Get the object identifier matching specified global IDs.
        explode: false
        in: query
        name: globalIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Get the object identifier matching specified local IDs.
        explode: false
        in: query
        name: localIds
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalGlobalObjectIdList'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Object Identifiers
      tags:
      - Object
  /data-protect/objects/runs/cancel:
    post:
      description: Cancel object runs for object based protection. This does not apply
        to Group based protection.
      operationId: CancelObjectRuns
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelObjectRunsRequest'
        description: Specifies the parameters to cancel object runs.
        required: true
      responses:
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelObjectRunsResults'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Cancel object runs.
      tags:
      - Object
      x-codegen-request-body-name: body
  /data-protect/objects/{id}:
    get:
      description: Get Object configrations for given object id.
      operationId: GetProtectedObjectOfAnyTypeById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the Object.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: Filter by ObjectActionKey, uniquely represent protection of an
          object. An object can be protected in multiple ways but atmost once for
          a given combination of ObjectActionKey, when specified Only objects of given
          action_key are returned for corresponding object id and this vec's size
          needs to be same as 'id'.
        explode: false
        in: query
        name: objectActionKey
        schema:
          items:
            enum:
            - kVMware
            - kHyperV
            - kAzure
            - kGCP
            - kKVM
            - kAcropolis
            - kAWS
            - kPhysical
            - kGPFS
            - kElastifile
            - kNetapp
            - kGenericNas
            - kIsilon
            - kFlashBlade
            - kPure
            - kSQL
            - kExchange
            - kAD
            - kOracle
            - kView
            - kRemoteAdapter
            - kO365
            - kO365PublicFolders
            - kO365Teams
            - kO365Group
            - kO365Exchange
            - kO365OneDrive
            - kO365Sharepoint
            - kKubernetes
            - kCassandra
            - kMongoDB
            - kCouchbase
            - kHdfs
            - kHive
            - kHBase
            - kUDA
            type: string
          type: array
        style: form
      - description: If true, the response will include only objects which have been
          protected.
        in: query
        name: onlyProtectedObjects
        schema:
          type: boolean
      - description: Filter by Storage Domain id. Only Objects protected to this Storage
          Domain will be returned.
        in: query
        name: storageDomainId
        schema:
          format: int64
          type: integer
      - description: Filter by environment types such as 'kVMware', 'kView', etc.
          Only Protected objects protecting the specified environment types are returned.
        explode: false
        in: query
        name: environments
        schema:
          items:
            enum:
            - kVMware
            - kHyperV
            - kAzure
            - kGCP
            - kKVM
            - kAcropolis
            - kAWS
            - kPhysical
            - kGPFS
            - kElastifile
            - kNetapp
            - kGenericNas
            - kIsilon
            - kFlashBlade
            - kPure
            - kSQL
            - kExchange
            - kAD
            - kOracle
            - kView
            - kRemoteAdapter
            - kO365
            - kO365PublicFolders
            - kO365Teams
            - kO365Group
            - kO365Exchange
            - kO365OneDrive
            - kO365Sharepoint
            - kKubernetes
            - kCassandra
            - kMongoDB
            - kCouchbase
            - kHdfs
            - kHive
            - kHBase
            - kUDA
            type: string
          type: array
        style: form
      - description: TenantIds contains ids of the tenants for which objects are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the response will include Objects which were protected
          by all tenants which the current user has permission to see. If false, then
          only objects protected by the current user will be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: If true, the response will include information about the last
          protection run on this object.
        in: query
        name: includeLastRunInfo
        schema:
          type: boolean
      - description: If true, the response will include only the auto protected objects.
        in: query
        name: onlyAutoProtectedObjects
        schema:
          type: boolean
      - description: If true, the response will include only the leaf level objects.
        in: query
        name: onlyLeafObjects
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectedObjectInfo'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get an Object.
      tags:
      - Object
  /data-protect/objects/{id}/actions:
    post:
      description: Perform an action on an object. Depending on the object environment
        type, different actions are available.
      operationId: PerformActionOnObject
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the Object.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectActionRequest'
        description: Specifies the parameters to perform an action on an object.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Perform an action on an object.
      tags:
      - Object
      x-codegen-request-body-name: body
  /data-protect/objects/{id}/browse:
    post:
      description: Fetch the contents (files & folders) of the specified path inside
        the specified object.
      operationId: BrowseObjectContents
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the Object.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectBrowseRequest'
        description: Specifies the parameters to fetch contents of an object.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileFolderInfo'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Fetch the contents (files & folders) for the specified object.
      tags:
      - Object
      x-codegen-request-body-name: body
  /data-protect/objects/{id}/pit-ranges:
    get:
      description: Returns the ranges in various types like time, SCN etc. within
        which the specified protected object can be restored to any Point in time.
      operationId: GetPITRangesForProtectedObject
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the ID of the protected object.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: If specified, return the restore ranges that lie after this timestamp.
          This parameter is specified as the timestamp in Unix time epoch in microseconds.
        in: query
        name: fromTimeUsecs
        schema:
          format: int64
          type: integer
      - description: If specified, return the restore ranges that lie before this
          timestamp. This parameter is specified as the timestamp in Unix time epoch
          in microseconds.
        in: query
        name: toTimeUsecs
        schema:
          format: int64
          type: integer
      - description: If specified, return only the points in time corresponding to
          these protection group IDs.
        explode: false
        in: query
        name: protectionGroupIds
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPITRangesProtectedObjectResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get PIT ranges for an object
      tags:
      - Object
  /data-protect/objects/{id}/runs:
    get:
      description: Get the runs for a particular object.
      operationId: GetObjectRuns
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the object.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: Specifies a unique id of the run.
        in: query
        name: runId
        schema:
          type: string
      - description: Filter by a start time when the run starts. Specify the start
          time as a Unix epoch Timestamp (in microseconds).
        in: query
        name: startTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Filter by a end time when the run starts. Specify the start time
          as a Unix epoch Timestamp (in microseconds).
        in: query
        name: endTimeUsecs
        schema:
          format: int64
          type: integer
      - description: TenantIds contains ids of the tenants for which objects are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the response will include Protection Group Runs which
          were created by all tenants which the current user has permission to see.
          If false, then only Protection Group Runs created by the current user will
          be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: Filter by run type. Only protection run matching the specified
          types will be returned.
        explode: false
        in: query
        name: runTypes
        schema:
          items:
            enum:
            - kAll
            - kLog
            - kSystem
            - kIncremental
            - kFull
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Specifies a list of status for the object in the backup run.
        explode: false
        in: query
        name: localBackupObjectStatus
        schema:
          items:
            enum:
            - kInProgress
            - kSuccessful
            - kFailed
            - kWaitingForNextAttempt
            - kWarning
            - kCurrentAttemptPaused
            type: string
          type: array
        style: form
      - description: Specifies a list of status for the object in the replication
          run.
        explode: false
        in: query
        name: replicationObjectStatus
        schema:
          items:
            enum:
            - kInProgress
            - kSuccessful
            - kFailed
            - kWaitingForNextAttempt
            - kWarning
            - kCurrentAttemptPaused
            type: string
          type: array
        style: form
      - description: Specifies a list of status for the object in the archival run.
        explode: false
        in: query
        name: archivalObjectStatus
        schema:
          items:
            enum:
            - kInProgress
            - kSuccessful
            - kFailed
            - kWaitingForNextAttempt
            - kWarning
            - kCurrentAttemptPaused
            type: string
          type: array
        style: form
      - description: Specifies a list of status for the object in the cloud spin run.
        explode: false
        in: query
        name: cloudSpinRunStatus
        schema:
          items:
            enum:
            - kInProgress
            - kSuccessful
            - kFailed
            - kWaitingForNextAttempt
            - kWarning
            - kCurrentAttemptPaused
            type: string
          type: array
        style: form
      - description: Specifies the max number of runs. If not specified, at most 100
          runs will be returned.
        in: query
        name: numRuns
        schema:
          format: int64
          type: integer
      - description: Specifies the pagination cookie with which subsequent parts of
          the response can be fetched. Users can use this to get next runs
        in: query
        name: paginationCookie
        schema:
          type: string
      - description: Specifies whether to exclude non restorable runs. Run is treated
          restorable only if there is atleast one object snapshot (which may be either
          a local or an archival snapshot) which is not deleted or expired. Default
          value is false.
        in: query
        name: excludeNonRestorableRuns
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetObjectRunsResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the list of runs for an object.
      tags:
      - Object
  /data-protect/objects/{id}/runs/{runId}:
    get:
      description: Get a run for an object.
      operationId: GetObjectRunByRunId
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the object.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: Specifies the id of the run.
        in: path
        name: runId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectProtectionRunSummary'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a run for an object.
      tags:
      - Object
  /data-protect/objects/{id}/snapshot-diff:
    post:
      description: Get diff (files added/deleted) between two snapshots of a given
        object.
      operationId: GetSnapshotDiff
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotDiffParams'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotDiffResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get diff between two snapshots of a given object.
      tags:
      - Object
      x-codegen-request-body-name: body
  /data-protect/objects/{id}/snapshots:
    get:
      description: List the snapshots for a given object.
      operationId: GetObjectSnapshots
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the Object.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: Specifies the timestamp in Unix time epoch in microseconds to
          filter Object's snapshots which were taken after this value.
        in: query
        name: fromTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Specifies the timestamp in Unix time epoch in microseconds to
          filter Object's snapshots which were taken before this value.
        in: query
        name: toTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Specifies the timestamp in Unix time epoch in microseconds to
          filter Object's snapshots which were run after this value.
        in: query
        name: runStartFromTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Specifies the timestamp in Unix time epoch in microseconds to
          filter Object's snapshots which were run before this value.
        in: query
        name: runStartToTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Filter by run type. Only protection run matching the specified
          types will be returned. By default, CDP hydration snapshots are not included,
          unless explicitly queried using this field.
        explode: false
        in: query
        name: runTypes
        schema:
          items:
            enum:
            - kRegular
            - kFull
            - kLog
            - kSystem
            - kHydrateCDP
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: If specified, this returns only the snapshots of the specified
          object ID, which belong to the provided protection group IDs.
        explode: false
        in: query
        name: protectionGroupIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by a list run instance ids. If specified, only snapshots
          created by these protection runs will be returned.
        explode: false
        in: query
        name: runInstanceIds
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Filter by a list of region ids.
        explode: false
        in: query
        name: regionIds
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetObjectSnapshotsResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List the snapshots for a given object.
      tags:
      - Object
  /data-protect/objects/{id}/snapshots/{snapshotId}:
    put:
      description: Update an object snapshot.
      operationId: UpdateObjectSnapshot
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the Object.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: 'Specifies the id of the snapshot.<br> Note: 1. If the snapshotid
          of one of the apps is specified, it applies for all the databases in the
          Protection Run.<br> 2. In case of volume based jobs, please specify the
          snapshotid of the source not the database. if source snapshot is specified,
          applied to source snapshot. if database snapshotid is specified in case
          of volume based jobs, then it is applicable for host''s snapshot.'
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateObjectSnapshotRequest'
        description: Specifies the parameters update an object snapshot.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectSnapshot'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update an object snapshot.
      tags:
      - Object
      x-codegen-request-body-name: body
  /data-protect/objects/{id}/stats:
    get:
      description: Get stats for a given object.
      operationId: GetObjectStats
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the Object.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: Filter by a list of region ids.
        explode: false
        in: query
        name: regionIds
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStats'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get stats for a given object.
      tags:
      - Object
  /data-protect/objects/{id}/tree:
    get:
      description: Get the objects tree hierarchy for for an Object. If the object
        does not have a hierarchy then a single object will be returned.
      operationId: GetObjectTree
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the Object.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectWithChildren'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the objects tree hierarchy for for an Object.
      tags:
      - Object
  /data-protect/objects/{objectId}/indexed-objects/snapshots:
    get:
      description: Get snapshots of indexed object.
      operationId: GetAllIndexedObjectSnapshots
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the object id.
        in: path
        name: objectId
        required: true
        schema:
          format: int64
          type: integer
      - description: Specifies the indexed object name.
        in: query
        name: indexedObjectName
        required: true
        schema:
          type: string
      - description: Specifies the protection group id.
        in: query
        name: protectionGroupId
        schema:
          type: string
      - description: Specifies whether to only return snapshots which are indexed.
          In an indexed snapshot files are guaranteed to exist, while in a non-indexed
          snapshot files may not exist.
        in: query
        name: includeIndexedSnapshotsOnly
        schema:
          default: false
          type: boolean
      - description: Specifies the timestamp in Unix time epoch in microseconds to
          filter indexed object's snapshots which are taken after this value.
        in: query
        name: fromTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Specifies the timestamp in Unix time epoch in microseconds to
          filter indexed object's snapshots which are taken before this value.
        in: query
        name: toTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Filter by run type. Only protection run matching the specified
          types will be returned. By default, CDP hydration snapshots are not included,
          unless explicitly queried using this field.
        explode: false
        in: query
        name: runTypes
        schema:
          items:
            enum:
            - kRegular
            - kFull
            - kLog
            - kSystem
            - kHydrateCDP
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIndexedObjectSnapshotsResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get snapshots of indexed object.
      tags:
      - Object
  /data-protect/objects/{objectId}/protection-groups/{protectionGroupId}/indexed-objects/snapshots:
    get:
      description: Get snapshots of indexed object.
      operationId: GetIndexedObjectSnapshots
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the protection group id.
        in: path
        name: protectionGroupId
        required: true
        schema:
          type: string
      - description: Specifies the object id.
        in: path
        name: objectId
        required: true
        schema:
          format: int64
          type: integer
      - description: Specifies the indexed object name.
        in: query
        name: indexedObjectName
        required: true
        schema:
          type: string
      - description: Specifies whether to only return snapshots which are indexed.
          In an indexed snapshots file are guaranteened to exist, while in a non-indexed
          snapshots file may not exist.
        in: query
        name: includeIndexedSnapshotsOnly
        schema:
          default: false
          type: boolean
      - description: Specifies the timestamp in Unix time epoch in microseconds to
          filter indexed object's snapshots which are taken after this value.
        in: query
        name: fromTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Specifies the timestamp in Unix time epoch in microseconds to
          filter indexed object's snapshots which are taken before this value.
        in: query
        name: toTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Filter by run type. Only protection run matching the specified
          types will be returned. By default, CDP hydration snapshots are not included,
          unless explicitly queried using this field.
        explode: false
        in: query
        name: runTypes
        schema:
          items:
            enum:
            - kRegular
            - kFull
            - kLog
            - kSystem
            - kHydrateCDP
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIndexedObjectSnapshotsResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get snapshots of indexed object.
      tags:
      - Object
  /data-protect/policies:
    get:
      description: Lists protection policies based on filtering query parameters.
      operationId: GetProtectionPolicies
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter policies by a list of policy ids.
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter policies by a list of policy names.
        explode: false
        in: query
        name: policyNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: TenantIds contains ids of the organizations for which objects
          are to be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: IncludeTenantPolicies specifies if objects of all the organizations
          under the hierarchy of the logged in user's organization should be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: Types specifies the policy type of policies to be returned
        explode: false
        in: query
        name: types
        schema:
          default: '["Regular"]'
          items:
            enum:
            - Regular
            - Internal
            type: string
          type: array
        style: form
      - description: If excludeLinkedPolicies is set to true then only local policies
          created on cluster will be returned. The result will exclude all linked
          policies created from policy templates.
        in: query
        name: excludeLinkedPolicies
        schema:
          type: boolean
      - description: If includeReplicatedPolicies is set to true, then response will
          also contain replicated policies. By default, replication policies are not
          included in the response.
        in: query
        name: includeReplicatedPolicies
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionPolicyResponseWithPagination'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List Protection Policies based on provided filtering parameters.
      tags:
      - Policy
    post:
      description: Create the Protection Policy and returns the newly created policy
        object.
      operationId: CreateProtectionPolicy
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionPolicyRequest'
        description: Request to create a Protection Policy.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionPolicyResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a Protection Policy.
      tags:
      - Policy
      x-codegen-request-body-name: body
  /data-protect/policies/{id}:
    delete:
      description: Deletes a Protection Policy based on given policy id.
      operationId: DeleteProtectionPolicy
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the Protection Policy to delete.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete a Protection Policy.
      tags:
      - Policy
    get:
      description: Returns the Protection Policy details based on provided Policy
        Id.
      operationId: GetProtectionPolicyById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the Protection Policy to return.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionPolicyResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List details about a single Protection Policy.
      tags:
      - Policy
    put:
      description: Specifies the request to update the existing Protection Policy.
        On successful update, returns the updated policy object.
      operationId: UpdateProtectionPolicy
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the Protection Policy to update.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionPolicyRequest'
        description: Request to update a Protection Policy.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionPolicyResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a Protection Policy.
      tags:
      - Policy
      x-codegen-request-body-name: body
  /data-protect/policy-templates:
    get:
      description: Returns the policy templates based on the filtering parameters.
        If no parameters are specified, then all the policy templates are returned.
      operationId: GetPolicyTemplates
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter policies by a list of policy template ids.
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter policies by a list of policy names.
        explode: false
        in: query
        name: policyNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: TenantIds contains ids of the organizations for which objects
          are to be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: IncludeTenantPolicies specifies if objects of all the organizations
          under the hierarchy of the logged in user's organization should be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTemplatesResponseWithPagination'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List Policy Templates filtered by query parameters.
      tags:
      - Policy
  /data-protect/policy-templates/{id}:
    get:
      description: Returns the Policy Template corresponding to the specified Policy
        Id.
      operationId: GetPolicyTemplateById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the Policy Template to return.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTemplateResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List details about a single Policy Template.
      tags:
      - Policy
  /data-protect/protected-objects:
    post:
      description: Create Protect Objects Backup.
      operationId: ProtectObjectsOfAnyType
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProtectedObjectsRequest'
        description: Specifies the parameters to protect objects.
        required: true
      responses:
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProtectedObjectsResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create Object Backup.
      tags:
      - ProtectedObject
      x-codegen-request-body-name: body
  /data-protect/protected-objects/actions:
    post:
      description: Perform actions on Protected Objects.
      operationId: PerformActionOnProtectObjects
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectdObjectsActionRequest'
        description: Specifies the parameters to perform an action on an already protected
          object.
        required: true
      responses:
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectedObjectActionResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Perform Actions on Protect Objects.
      tags:
      - ProtectedObject
      x-codegen-request-body-name: body
  /data-protect/protected-objects/{id}:
    put:
      description: Update Protected object backup configuration given a object id.
      operationId: UpdateProtectedObjectsOfAnyType
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the Protected Object.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProtectedObjectsRequest'
        description: Specifies the parameters to perform an update on protected objects.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProtectedObjectResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update Object Backup.
      tags:
      - ProtectedObject
      x-codegen-request-body-name: body
  /data-protect/protection-groups:
    get:
      description: Get the list of Protection Groups.
      operationId: GetProtectionGroups
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by a list of Protection Group ids.
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by a list of Protection Group names.
        explode: false
        in: query
        name: names
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by Policy ids that are associated with Protection Groups.
          Only Protection Groups associated with the specified Policy ids, are returned.
        explode: false
        in: query
        name: policyIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by Storage Domain id. Only Protection Groups writing data
          to this Storage Domain will be returned.
        in: query
        name: storageDomainId
        schema:
          format: int64
          type: integer
      - description: Whether to only return Protection Groups with a datalock.
        in: query
        name: includeGroupsWithDatalockOnly
        schema:
          type: boolean
      - description: Filter by environment types such as 'kVMware', 'kView', etc.
          Only Protection Groups protecting the specified environment types are returned.
        explode: false
        in: query
        name: environments
        schema:
          items:
            enum:
            - kVMware
            - kHyperV
            - kAzure
            - kGCP
            - kKVM
            - kAcropolis
            - kAWS
            - kPhysical
            - kGPFS
            - kElastifile
            - kNetapp
            - kGenericNas
            - kIsilon
            - kFlashBlade
            - kPure
            - kSQL
            - kExchange
            - kAD
            - kOracle
            - kView
            - kRemoteAdapter
            - kO365
            - kO365PublicFolders
            - kO365Teams
            - kO365Group
            - kO365Exchange
            - kO365OneDrive
            - kO365Sharepoint
            - kKubernetes
            - kCassandra
            - kMongoDB
            - kCouchbase
            - kHdfs
            - kHive
            - kHBase
            - kUDA
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: office365Workloads
        schema:
          items:
            enum:
            - kMailbox
            - kOneDrive
            - kSharePoint
            - kPublicFolders
            - kGroups
            - kTeams
            type: string
          type: array
        style: form
      - description: Filter by Inactive or Active Protection Groups. If not set, all
          Inactive and Active Protection Groups are returned. If true, only Active
          Protection Groups are returned. If false, only Inactive Protection Groups
          are returned. When you create a Protection Group on a Primary Cluster with
          a replication schedule, the Cluster creates an Inactive copy of the Protection
          Group on the Remote Cluster. In addition, when an Active and running Protection
          Group is deactivated, the Protection Group becomes Inactive.
        in: query
        name: isActive
        schema:
          type: boolean
      - description: If true, return only Protection Groups that have been deleted
          but still have Snapshots associated with them. If false, return all Protection
          Groups except those Protection Groups that have been deleted and still have
          Snapshots associated with them. A Protection Group that is deleted with
          all its Snapshots is not returned for either of these cases.
        in: query
        name: isDeleted
        schema:
          type: boolean
      - description: Filter by paused or non paused Protection Groups, If not set,
          all paused and non paused Protection Groups are returned. If true, only
          paused Protection Groups are returned. If false, only non paused Protection
          Groups are returned.
        in: query
        name: isPaused
        schema:
          type: boolean
      - description: Filter by last local backup run status.<br> 'Running' indicates
          that the run is still running.<br> 'Canceled' indicates that the run has
          been canceled.<br> 'Canceling' indicates that the run is in the process
          of being canceled.<br> 'Failed' indicates that the run has failed.<br> 'Missed'
          indicates that the run was unable to take place at the scheduled time because
          the previous run was still happening.<br> 'Succeeded' indicates that the
          run has finished successfully.<br> 'SucceededWithWarning' indicates that
          the run finished successfully, but there were some warning messages.
        explode: false
        in: query
        name: lastRunLocalBackupStatus
        schema:
          items:
            enum:
            - Accepted
            - Running
            - Canceled
            - Canceling
            - Failed
            - Missed
            - Succeeded
            - SucceededWithWarning
            - OnHold
            type: string
          type: array
        style: form
      - description: Filter by last remote replication run status.<br> 'Running' indicates
          that the run is still running.<br> 'Canceled' indicates that the run has
          been canceled.<br> 'Canceling' indicates that the run is in the process
          of being canceled.<br> 'Failed' indicates that the run has failed.<br> 'Missed'
          indicates that the run was unable to take place at the scheduled time because
          the previous run was still happening.<br> 'Succeeded' indicates that the
          run has finished successfully.<br> 'SucceededWithWarning' indicates that
          the run finished successfully, but there were some warning messages.
        explode: false
        in: query
        name: lastRunReplicationStatus
        schema:
          items:
            enum:
            - Accepted
            - Running
            - Canceled
            - Canceling
            - Failed
            - Missed
            - Succeeded
            - SucceededWithWarning
            - OnHold
            type: string
          type: array
        style: form
      - description: Filter by last cloud archival run status.<br> 'Running' indicates
          that the run is still running.<br> 'Canceled' indicates that the run has
          been canceled.<br> 'Canceling' indicates that the run is in the process
          of being canceled.<br> 'Failed' indicates that the run has failed.<br> 'Missed'
          indicates that the run was unable to take place at the scheduled time because
          the previous run was still happening.<br> 'Succeeded' indicates that the
          run has finished successfully.<br> 'SucceededWithWarning' indicates that
          the run finished successfully, but there were some warning messages.
        explode: false
        in: query
        name: lastRunArchivalStatus
        schema:
          items:
            enum:
            - Accepted
            - Running
            - Canceled
            - Canceling
            - Failed
            - Missed
            - Succeeded
            - SucceededWithWarning
            - OnHold
            type: string
          type: array
        style: form
      - description: Filter by last cloud spin run status.<br> 'Running' indicates
          that the run is still running.<br> 'Canceled' indicates that the run has
          been canceled.<br> 'Canceling' indicates that the run is in the process
          of being canceled.<br> 'Failed' indicates that the run has failed.<br> 'Missed'
          indicates that the run was unable to take place at the scheduled time because
          the previous run was still happening.<br> 'Succeeded' indicates that the
          run has finished successfully.<br> 'SucceededWithWarning' indicates that
          the run finished successfully, but there were some warning messages.
        explode: false
        in: query
        name: lastRunCloudSpinStatus
        schema:
          items:
            enum:
            - Accepted
            - Running
            - Canceled
            - Canceling
            - Failed
            - Missed
            - Succeeded
            - SucceededWithWarning
            - OnHold
            type: string
          type: array
        style: form
      - description: Filter by last any run status.<br> 'Running' indicates that the
          run is still running.<br> 'Canceled' indicates that the run has been canceled.<br>
          'Canceling' indicates that the run is in the process of being canceled.<br>
          'Failed' indicates that the run has failed.<br> 'Missed' indicates that
          the run was unable to take place at the scheduled time because the previous
          run was still happening.<br> 'Succeeded' indicates that the run has finished
          successfully.<br> 'SucceededWithWarning' indicates that the run finished
          successfully, but there were some warning messages.
        explode: false
        in: query
        name: lastRunAnyStatus
        schema:
          items:
            enum:
            - Accepted
            - Running
            - Canceled
            - Canceling
            - Failed
            - Missed
            - Succeeded
            - SucceededWithWarning
            - OnHold
            type: string
          type: array
        style: form
      - description: If true, return Protection Groups for which last run SLA was
          violated.
        in: query
        name: isLastRunSlaViolated
        schema:
          type: boolean
      - description: TenantIds contains ids of the tenants for which objects are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the response will include Protection Groups which were
          created by all tenants which the current user has permission to see. If
          false, then only Protection Groups created by the current user will be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: If true, the response will include last run info. If it is false
          or not specified, the last run info won't be returned.
        in: query
        name: includeLastRunInfo
        schema:
          type: boolean
      - description: If true, the response will not include the list of excluded source
          IDs in groups that contain this field. This can be set to true in order
          to improve performance if excluded source IDs are not needed by the user.
        in: query
        name: pruneExcludedSourceIds
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroups'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the list of Protection Groups.
      tags:
      - ProtectionGroup
    post:
      description: Create a Protection Group.
      operationId: CreateProtectionGroup
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateProtectionGroupRequest'
        description: Specifies the parameters to create a Protection Group.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroup'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a Protection Group.
      tags:
      - ProtectionGroup
      x-codegen-request-body-name: body
  /data-protect/protection-groups/states:
    post:
      description: Perform an action like pause, resume, active, deactivate on all
        specified Protection Groups. Note that the pause or resume actions will take
        effect from next Protection Run. Also, user can specify only one type of action
        on all the Protection Groups. Deactivate and activate actions are independent
        of pause and resume state. Deactivate and activate actions are useful in case
        of failover situations. Returns success if the state of all the Protection
        Groups state is changed successfully.
      operationId: UpdateProtectionGroupsState
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProtectionGroupsStateRequest'
        description: Specifies the parameters to perform an action of list of Protection
          Groups.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProtectionGroupsState'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Perform an action like pause, resume, active, deactivate on all specified
        Protection Groups.
      tags:
      - ProtectionGroup
      x-codegen-request-body-name: body
  /data-protect/protection-groups/{id}:
    delete:
      description: Returns Success if the Protection Group is deleted.
      operationId: DeleteProtectionGroup
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the Protection Group.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Specifies if Snapshots generated by the Protection Group should
          also be deleted when the Protection Group is deleted.
        in: query
        name: deleteSnapshots
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete a Protection Group.
      tags:
      - ProtectionGroup
    get:
      description: Returns the Protection Group corresponding to the specified Group
        id.
      operationId: GetProtectionGroupById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the Protection Group.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: If true, the response will include last run info. If it is false
          or not specified, the last run info won't be returned.
        in: query
        name: includeLastRunInfo
        schema:
          type: boolean
      - description: If true, the response will not include the list of excluded source
          IDs in groups that contain this field. This can be set to true in order
          to improve performance if excluded source IDs are not needed by the user.
        in: query
        name: pruneExcludedSourceIds
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroup'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List details about single Protection Group.
      tags:
      - ProtectionGroup
    put:
      description: Update the specified Protection Group.
      operationId: UpdateProtectionGroup
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the Protection Group.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateProtectionGroupRequest'
        description: Specifies the parameters to update a Protection Group.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroup'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a Protection Group.
      tags:
      - ProtectionGroup
      x-codegen-request-body-name: body
  /data-protect/protection-groups/{id}/runs:
    get:
      description: Get the runs for a particular Protection Group.
      operationId: GetProtectionGroupRuns
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the Protection Group.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Specifies the protection run id.
        in: query
        name: runId
        schema:
          pattern: ^\d+:\d+$
          type: string
      - description: Filter by a start time. Specify the start time as a Unix epoch
          Timestamp (in microseconds).
        in: query
        name: startTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Filter by a end time. Specify the start time as a Unix epoch
          Timestamp (in microseconds).
        in: query
        name: endTimeUsecs
        schema:
          format: int64
          type: integer
      - description: TenantIds contains ids of the tenants for which objects are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the response will include Protection Group Runs which
          were created by all tenants which the current user has permission to see.
          If false, then only Protection Group Runs created by the current user will
          be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: Filter by run type. Only protection run matching the specified
          types will be returned.
        explode: false
        in: query
        name: runTypes
        schema:
          items:
            enum:
            - kAll
            - kLog
            - kSystem
            - kIncremental
            - kFull
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Specifies if the result includes the object details for each
          protection run. If set to true, details of the protected object will be
          returned. If set to false or not specified, details will not be returned.
        in: query
        name: includeObjectDetails
        schema:
          type: boolean
      - description: Specifies a list of local backup status, runs matching the status
          will be returned.<br> 'Running' indicates that the run is still running.<br>
          'Canceled' indicates that the run has been canceled.<br> 'Canceling' indicates
          that the run is in the process of being canceled.<br> 'Failed' indicates
          that the run has failed.<br> 'Missed' indicates that the run was unable
          to take place at the scheduled time because the previous run was still happening.<br>
          'Succeeded' indicates that the run has finished successfully.<br> 'SucceededWithWarning'
          indicates that the run finished successfully, but there were some warning
          messages.
        explode: false
        in: query
        name: localBackupRunStatus
        schema:
          items:
            enum:
            - Accepted
            - Running
            - Canceled
            - Canceling
            - Failed
            - Missed
            - Succeeded
            - SucceededWithWarning
            - OnHold
            type: string
          type: array
        style: form
      - description: Specifies a list of replication status, runs matching the status
          will be returned.<br> 'Running' indicates that the run is still running.<br>
          'Canceled' indicates that the run has been canceled.<br> 'Canceling' indicates
          that the run is in the process of being canceled.<br> 'Failed' indicates
          that the run has failed.<br> 'Missed' indicates that the run was unable
          to take place at the scheduled time because the previous run was still happening.<br>
          'Succeeded' indicates that the run has finished successfully.<br> 'SucceededWithWarning'
          indicates that the run finished successfully, but there were some warning
          messages.
        explode: false
        in: query
        name: replicationRunStatus
        schema:
          items:
            enum:
            - Accepted
            - Running
            - Canceled
            - Canceling
            - Failed
            - Missed
            - Succeeded
            - SucceededWithWarning
            - OnHold
            type: string
          type: array
        style: form
      - description: Specifies a list of archival status, runs matching the status
          will be returned.<br> 'Running' indicates that the run is still running.<br>
          'Canceled' indicates that the run has been canceled.<br> 'Canceling' indicates
          that the run is in the process of being canceled.<br> 'Failed' indicates
          that the run has failed.<br> 'Missed' indicates that the run was unable
          to take place at the scheduled time because the previous run was still happening.<br>
          'Succeeded' indicates that the run has finished successfully.<br> 'SucceededWithWarning'
          indicates that the run finished successfully, but there were some warning
          messages.
        explode: false
        in: query
        name: archivalRunStatus
        schema:
          items:
            enum:
            - Accepted
            - Running
            - Canceled
            - Canceling
            - Failed
            - Missed
            - Succeeded
            - SucceededWithWarning
            - OnHold
            type: string
          type: array
        style: form
      - description: Specifies a list of cloud spin status, runs matching the status
          will be returned.<br> 'Running' indicates that the run is still running.<br>
          'Canceled' indicates that the run has been canceled.<br> 'Canceling' indicates
          that the run is in the process of being canceled.<br> 'Failed' indicates
          that the run has failed.<br> 'Missed' indicates that the run was unable
          to take place at the scheduled time because the previous run was still happening.<br>
          'Succeeded' indicates that the run has finished successfully.<br> 'SucceededWithWarning'
          indicates that the run finished successfully, but there were some warning
          messages.
        explode: false
        in: query
        name: cloudSpinRunStatus
        schema:
          items:
            enum:
            - Accepted
            - Running
            - Canceled
            - Canceling
            - Failed
            - Missed
            - Succeeded
            - SucceededWithWarning
            - OnHold
            type: string
          type: array
        style: form
      - description: Specifies the max number of runs. If not specified, at most 100
          runs will be returned.
        in: query
        name: numRuns
        schema:
          format: int64
          type: integer
      - description: Specifies whether to exclude non restorable runs. Run is treated
          restorable only if there is atleast one object snapshot (which may be either
          a local or an archival snapshot) which is not deleted or expired. Default
          value is false.
        in: query
        name: excludeNonRestorableRuns
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroupRuns'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the list of runs for a Protection Group.
      tags:
      - ProtectionGroup
    post:
      description: Create a new protection run. This can be used to start a run for
        a Protection Group on demand, ignoring the schedule and retention specified
        in the protection policy.
      operationId: CreateProtectionGroupRun
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the Protection Group.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProtectionGroupRunRequest'
        description: Specifies the parameters to start a protection run.
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProtectionGroupRunResponseBody'
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a new protection run.
      tags:
      - ProtectionGroup
      x-codegen-request-body-name: body
    put:
      description: 'Update runs for a particular Protection Group. A user can perform
        the following actions: 1. Extend or reduce retention of a local, replication
        and archival snapshots. 2. Can perform resync operation on failed copy snapshots
        attempts in this Run. 3. Add new replication and archival snapshot targets
        to the Run. 4. Add or remove legal hold on the snapshots. Only a user with
        DSO role can perform this operation. 5. Delete the snapshots that were created
        as a part of this Run. 6. Apply datalock on existing snapshots where a user
        cannot manually delete snapshots before the expiry time. '
      operationId: UpdateProtectionGroupRun
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the Protection Group.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProtectionGroupRunRequestBody'
        description: Specifies the parameters to update a Protection Group Run.
        required: true
      responses:
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProtectionGroupRunResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update runs for a particular Protection Group.
      tags:
      - ProtectionGroup
      x-codegen-request-body-name: body
  /data-protect/protection-groups/{id}/runs/actions:
    post:
      description: Perform various actions on a Protection Group run.
      operationId: PerformActionOnProtectionGroupRun
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the Protection Group.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerformActionOnProtectionGroupRunRequest'
        description: Specifies the parameters to perform an action on a protection
          run.
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformRunActionResponse'
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Actions on protection group run.
      tags:
      - ProtectionGroup
      x-codegen-request-body-name: body
  /data-protect/protection-groups/{id}/runs/{runId}:
    get:
      description: Get a run for a particular Protection Group.
      operationId: GetProtectionGroupRun
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the Protection Group.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Specifies a unique run id of the Protection Group run.
        in: path
        name: runId
        required: true
        schema:
          pattern: ^\d+:\d+$
          type: string
      - description: TenantIds contains ids of the tenants for which the run is to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the response will include Protection Group Runs which
          were created by all tenants which the current user has permission to see.
          If false, then only Protection Groups created by the current user will be
          returned. If it's not specified, it is true by default.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: Specifies if the result includes the object details for a protection
          run. If set to true, details of the protected object will be returned. If
          set to false or not specified, details will not be returned.
        in: query
        name: includeObjectDetails
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroupRun'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a run for a Protection Group.
      tags:
      - ProtectionGroup
  /data-protect/protection-groups/{id}/runs/{runId}/debug-logs:
    get:
      description: Get the debug logs for all objects of a run for a particular Protection
        Group.
      operationId: GetRunDebugLogs
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the Protection Group.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      - description: Specifies a unique run id of the Protection Group run.
        in: path
        name: runId
        required: true
        schema:
          pattern: ^\d+:\d+$
          type: string
      - description: 'Specifies the id of the object for which debug logs are to be
          returned. '
        in: query
        name: objectId
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the debug logs for a run from a Protection Group.
      tags:
      - ProtectionGroup
  /data-protect/protection-groups/{id}/runs/{runId}/objects/{objectId}/debug-logs:
    get:
      description: Get the debug logs for a particular object of a run for a particular
        Protection Group.
      operationId: GetRunDebugLogsForObject
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the Protection Group.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      - description: Specifies a unique run id of the Protection Group run.
        in: path
        name: runId
        required: true
        schema:
          pattern: ^\d+:\d+$
          type: string
      - description: 'Specifies the id of the object for which debug logs are to be
          returned. '
        in: path
        name: objectId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the debug logs for a particular object in a run from a Protection
        Group.
      tags:
      - ProtectionGroup
  /data-protect/protection-groups/{id}/runs/{runId}/objects/{objectId}/download-messages:
    get:
      description: Get an CSV error report for given objectId and run id. Each row
        in CSV report contains the File Path, error/warning code and error/warning
        message.
      operationId: GetRunErrorsReport
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the Protection Group.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Specifies a unique run id of the Protection Group run.
        in: path
        name: runId
        required: true
        schema:
          pattern: ^\d+:\d+$
          type: string
      - description: 'Specifies the id of the object for which errors/warnings are
          to be returned. '
        in: path
        name: objectId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the CSV of errors/warnings for a given run and an object.
      tags:
      - ProtectionGroup
  /data-protect/recoveries:
    get:
      description: Lists the Recoveries.
      operationId: GetRecoveries
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter Recoveries for given ids.
        explode: false
        in: query
        name: ids
        schema:
          items:
            pattern: ^\d+:\d+:\d+$
            type: string
          type: array
        style: form
      - description: 'Returns only child recoveries if passed as true. This filter
          should always be used along with ''ids'' filter. '
        in: query
        name: returnOnlyChildRecoveries
        schema:
          type: boolean
      - description: TenantIds contains ids of the organizations for which recoveries
          are to be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies if objects of all the organizations under the hierarchy
          of the logged in user's organization should be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: Returns the recoveries which are started after the specific time.
          This value should be in Unix timestamp epoch in microseconds.
        in: query
        name: startTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Returns the recoveries which are started before the specific
          time. This value should be in Unix timestamp epoch in microseconds.
        in: query
        name: endTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Filter by Storage Domain id. Only recoveries writing data to
          this Storage Domain will be returned.
        in: query
        name: storageDomainId
        schema:
          format: int64
          type: integer
      - description: Specifies the snapshot's target type from which recovery has
          been performed.
        explode: false
        in: query
        name: snapshotTargetType
        schema:
          items:
            enum:
            - Local
            - Archival
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Specifies the snapshot's archival target type from which recovery
          has been performed. This parameter applies only if 'snapshotTargetType'
          is 'Archival'.
        explode: false
        in: query
        name: archivalTargetType
        schema:
          items:
            enum:
            - Tape
            - Cloud
            - Nas
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Specifies the list of snapshot environment types to filter Recoveries.
          If empty, Recoveries related to all environments will be returned.
        explode: false
        in: query
        name: snapshotEnvironments
        schema:
          items:
            enum:
            - kVMware
            - kHyperV
            - kAzure
            - kGCP
            - kKVM
            - kAcropolis
            - kAWS
            - kPhysical
            - kGPFS
            - kElastifile
            - kNetapp
            - kGenericNas
            - kIsilon
            - kFlashBlade
            - kPure
            - kSQL
            - kExchange
            - kAD
            - kOracle
            - kView
            - kRemoteAdapter
            - kO365
            - kKubernetes
            - kCassandra
            - kMongoDB
            - kCouchbase
            - kHdfs
            - kHive
            - kHBase
            - kUDA
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Specifies the list of run status to filter Recoveries. If empty,
          Recoveries with all run status will be returned.
        explode: false
        in: query
        name: status
        schema:
          items:
            enum:
            - Accepted
            - Running
            - Canceled
            - Canceling
            - Failed
            - Missed
            - Succeeded
            - SucceededWithWarning
            - OnHold
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Specifies the list of recovery actions to filter Recoveries.
          If empty, Recoveries related to all actions will be returned.
        explode: false
        in: query
        name: recoveryActions
        schema:
          items:
            enum:
            - RecoverVMs
            - RecoverFiles
            - InstantVolumeMount
            - RecoverVmDisks
            - RecoverVApps
            - RecoverVAppTemplates
            - UptierSnapshot
            - RecoverRDS
            - RecoverAurora
            - RecoverApps
            - RecoverNasVolume
            - RecoverPhysicalVolumes
            - RecoverSystem
            - CloneAppView
            - RecoverSanVolumes
            - RecoverMailbox
            - RecoverOneDrive
            - RecoverSharePoint
            - RecoverPublicFolders
            - RecoverMsGroup
            - RecoverMsTeam
            - RecoverNamespaces
            - RecoverObjects
            - DownloadFilesAndFolders
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recoveries'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Lists the Recoveries.
      tags:
      - Recovery
    post:
      description: Performs a Recovery.
      operationId: CreateRecovery
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRecoveryRequest'
        description: Specifies the parameters to create a Recovery.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recovery'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Performs a Recovery.
      tags:
      - Recovery
      x-codegen-request-body-name: body
  /data-protect/recoveries/download-files-folders:
    post:
      description: Creates a download files and folders recovery.
      operationId: CreateDownloadFilesAndFoldersRecovery
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadFilesAndFoldersRequestParams'
        description: Specifies the parameters to create a download files and folder
          recovery.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recovery'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a download files and folders recovery.
      tags:
      - Recovery
      x-codegen-request-body-name: body
  /data-protect/recoveries/{id}:
    get:
      description: Get Recovery for a given id.
      operationId: GetRecoveryById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of a Recovery.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      - description: Specifies if objects of all the organizations under the hierarchy
          of the logged in user's organization should be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recovery'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Recovery for a given id.
      tags:
      - Recovery
  /data-protect/recoveries/{id}/cancel:
    post:
      description: Cancel Recovery for a given id.
      operationId: CancelRecoveryById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of a Recovery.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Cancel Recovery for a given id.
      tags:
      - Recovery
  /data-protect/recoveries/{id}/debug-logs:
    get:
      description: Get the debug logs for a particular recovery operation.
      operationId: GetRecoveryDebugLogs
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of a Recovery job.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      responses:
        "200":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the debug logs for a particular recovery operation.
      tags:
      - Recovery
  /data-protect/recoveries/{id}/download-files:
    get:
      description: Download files from the given download file recovery.
      operationId: DownloadFilesFromRecovery
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of a Recovery.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      - description: Specifies the start offset of file chunk to be downloaded.
        in: query
        name: startOffset
        schema:
          format: int64
          type: integer
      - description: Specifies the length of bytes to download. This can not be greater
          than 8MB (8388608 byets)
        in: query
        name: length
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Download files from the given download file recovery.
      tags:
      - Recovery
  /data-protect/recoveries/{id}/download-messages:
    get:
      description: Get a CSV error report for given recovery operation. Each row in
        CSV report contains the File Path, error/warning code and error/warning message.
      operationId: GetRecoveryErrorsReport
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique ID of a Recovery.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      responses:
        "200":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the CSV of errors/warnings for a given recovery operation.
      tags:
      - Recovery
  /data-protect/recoveries/{id}/tear-down:
    post:
      description: Tear down Recovery for a given id.
      operationId: TearDownRecoveryById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of a Recovery.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Tear down Recovery for a given id.
      tags:
      - Recovery
  /data-protect/runs/summary:
    get:
      description: Get a list of protection runs.
      operationId: GetProtectionRuns
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by a start time. Specify the start time as a Unix epoch
          Timestamp (in microseconds), only runs executing after this time will be
          returned. By default it is endTimeUsecs minus an hour.
        in: query
        name: startTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Filter by a end time. Specify the start time as a Unix epoch
          Timestamp (in microseconds), only runs executing before this time will be
          returned. By default it is current time.
        in: query
        name: endTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Specifies a list of status, runs matching the status will be
          returned.<br> 'Running' indicates that the run is still running.<br> 'Canceled'
          indicates that the run has been canceled.<br> 'Canceling' indicates that
          the run is in the process of being canceled.<br> 'Failed' indicates that
          the run has failed.<br> 'Missed' indicates that the run was unable to take
          place at the scheduled time because the previous run was still happening.<br>
          'Succeeded' indicates that the run has finished successfully.<br> 'SucceededWithWarning'
          indicates that the run finished successfully, but there were some warning
          messages.
        explode: false
        in: query
        name: runStatus
        schema:
          items:
            enum:
            - Accepted
            - Running
            - Canceled
            - Canceling
            - Failed
            - Missed
            - Succeeded
            - SucceededWithWarning
            - OnHold
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionRunsSummary'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the list of runs.
      tags:
      - ProtectionGroup
  /data-protect/runs/{runId}/progress:
    get:
      description: Get the progress of a run.
      operationId: GetProtectionRunProgress
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique run id of the Protection Run.
        in: path
        name: runId
        required: true
        schema:
          type: string
      - description: Specifies the objects whose progress will be returned. This only
          applies to protection group runs and will be ignored for object runs. If
          the objects are specified, the run progress will not be returned and only
          the progress of the specified objects will be returned.
        explode: false
        in: query
        name: objects
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: TenantIds contains ids of the tenants for which the run is to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the response will include Protection Group Runs which
          were created by all tenants which the current user has permission to see.
          If false, then only Protection Groups created by the current user will be
          returned. If it's not specified, it is true by default.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: Specifies whether to return finished tasks. By default only active
          tasks are returned.
        in: query
        name: includeFinishedTasks
        schema:
          type: boolean
      - description: Specifies the time after which the progress task starts in Unix
          epoch Timestamp(in microseconds).
        in: query
        name: startTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Specifies the time before which the progress task ends in Unix
          epoch Timestamp(in microseconds).
        in: query
        name: endTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Specifies the maximum number of tasks to return.
        in: query
        name: maxTasksNum
        schema:
          format: int32
          type: integer
      - description: Specifies whether to return objects. By default all the task
          tree are returned.
        in: query
        name: excludeObjectDetails
        schema:
          type: boolean
      - description: Specifies whether to include event logs
        in: query
        name: includeEventLogs
        schema:
          type: boolean
      - description: Specifies the number of levels till which to fetch the event
          logs. This is applicable only when includeEventLogs is true.
        in: query
        name: maxLogLevel
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProtectionRunProgressBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the progress of a run.
      tags:
      - ProtectionGroup
  /data-protect/search/indexed-objects:
    post:
      description: List all the indexed objects like files and folders, emails, mailboxes
        etc., that match the specified search and filter criteria from protected objects.
      operationId: SearchIndexedObjects
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchIndexedObjectsRequest'
        description: Specifies the parameters to search for indexed objects.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchIndexedObjectsResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List indexed objects.
      tags:
      - Search
      x-codegen-request-body-name: body
  /data-protect/search/objects:
    get:
      description: List objects.
      operationId: SearchObjects
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the search string to filter the objects. This search
          string will be applicable for objectnames. User can specify a wildcard character
          '*' as a suffix to a string where all object names are matched with the
          prefix string. For example, if vm1 and vm2 are the names of objects, user
          can specify vm* to list the objects. If not specified, then all the objects
          will be returned which will match other filtering criteria.
        in: query
        name: searchString
        schema:
          type: string
      - description: Specifies the environment type to filter objects.
        explode: false
        in: query
        name: environments
        schema:
          items:
            enum:
            - kVMware
            - kHyperV
            - kAzure
            - kKVM
            - kAWS
            - kAcropolis
            - kGCP
            - kPhysical
            - kPhysicalFiles
            - kIsilon
            - kNetapp
            - kGenericNas
            - kFlashBlade
            - kElastifile
            - kGPFS
            - kPure
            - kNimble
            - kSQL
            - kOracle
            - kExchange
            - kAD
            - kView
            - kO365
            - kHyperFlex
            - kKubernetes
            - kCassandra
            - kMongoDB
            - kCouchbase
            - kHdfs
            - kHive
            - kHBase
            - kUDA
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Specifies the protection type to filter objects.
        explode: false
        in: query
        name: protectionTypes
        schema:
          items:
            enum:
            - kAgent
            - kNative
            - kSnapshotManager
            - kRDSSnapshotManager
            - kAuroraSnapshotManager
            - kFile
            - kVolume
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: TenantIds contains ids of the tenants for which objects are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the response will include Objects which belongs to all
          tenants which the current user has permission to see.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: Specifies a list of Protection Group ids to filter the objects.
          If specified, the objects protected by specified Protection Group ids will
          be returned.
        explode: false
        in: query
        name: protectionGroupIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies a list of Object ids to filter.
        explode: false
        in: query
        name: objectIds
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Specifies the operating system types to filter objects on.
        explode: false
        in: query
        name: osTypes
        schema:
          items:
            enum:
            - kLinux
            - kWindows
            - kAix
            - kSolaris
            - kSapHana
            - kOther
            type: string
          type: array
        style: form
      - description: Specifies a list of Protection Source object ids to filter the
          objects. If specified, the object which are present in those Sources will
          be returned.
        explode: false
        in: query
        name: sourceIds
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Specifies a list of Protection Source object uuids to filter
          the objects. If specified, the object which are present in those Sources
          will be returned.
        explode: false
        in: query
        name: sourceUuids
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies the protection status of objects. If set to true, only
          protected objects will be returned. If set to false, only unprotected objects
          will be returned. If not specified, all objects will be returned.
        in: query
        name: isProtected
        schema:
          type: boolean
      - description: Specifies the deletion status of objects. If set to true, only
          deleted objects will be returned. If set to false, only not deleted objects
          will be returned. If not specified, all objects will be returned.
        in: query
        name: isDeleted
        schema:
          type: boolean
      - description: Specifies a list of status of the object's last protection run.
          Only objects with last run status of these will be returned.
        explode: false
        in: query
        name: lastRunStatusList
        schema:
          items:
            enum:
            - Accepted
            - Running
            - Canceled
            - Canceling
            - Failed
            - Missed
            - Succeeded
            - SucceededWithWarning
            - OnHold
            type: string
          type: array
        style: form
      - description: Specifies a list of region ids. Only records from clusters having
          these region ids will be returned.
        explode: false
        in: query
        name: regionIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies the list of cluster identifiers. Format is clusterId:clusterIncarnationId.
          Only records from clusters having these identifiers will be returned.
        explode: false
        in: query
        name: clusterIdentifiers
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies the list of storage domain ids. Format is clusterId:clusterIncarnationId:storageDomainId.
          Only objects having protection in these storage domains will be returned.
        explode: false
        in: query
        name: storageDomainIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies whether to include deleted objects in response. These
          objects can't be protected but can be recovered. This field is deprecated.
        in: query
        name: includeDeletedObjects
        schema:
          type: boolean
      - description: Specifies the pagination cookie with which subsequent parts of
          the response can be fetched.
        in: query
        name: paginationCookie
        schema:
          type: string
      - description: Specifies the number of objects to be fetched for the specified
          pagination cookie.
        in: query
        name: count
        schema:
          format: int32
          type: integer
      - description: Specifies tags which must be all present in the document.
        explode: false
        in: query
        name: mustHaveTagIds
        schema:
          items:
            pattern: ^\d+:\d+:[A-Z0-9-]+$
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: |-
          Specifies list of tags, one or more of which might be present in
          the document. These are OR'ed together and the resulting criteria
          AND'ed with the rest of the query.
        explode: false
        in: query
        name: mightHaveTagIds
        schema:
          items:
            pattern: ^\d+:\d+:[A-Z0-9-]+$
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Specifies snapshot tags which must be all present in the document.
        explode: false
        in: query
        name: mustHaveSnapshotTagIds
        schema:
          items:
            pattern: ^\d+:\d+:[A-Z0-9-]+$
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: |-
          Specifies list of snapshot tags, one or more of which might be
          present in the document. These are OR'ed together and the resulting
          criteria AND'ed with the rest of the query.
        explode: false
        in: query
        name: mightHaveSnapshotTagIds
        schema:
          items:
            pattern: ^\d+:\d+:[A-Z0-9-]+$
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectsSearchResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List Objects.
      tags:
      - Search
  /data-protect/search/protected-objects:
    get:
      description: List protected objects and corresponding detail information from
        registered sources filtered by specified query parameters. If no search pattern
        or filter parameters are specified, all protected objects currently found
        are returned.
      operationId: SearchProtectedObjects
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the search string to filter the objects. This search
          string will be applicable for objectnames and Protection Group names. User
          can specify a wildcard character '*' as a suffix to a string where all object
          and their Protection Group names are matched with the prefix string. For
          example, if vm1 and vm2 are the names of objects, user can specify vm* to
          list the objects. If not specified, then all the objects with Protection
          Groups will be returned which will match other filtering criteria.
        in: query
        name: searchString
        schema:
          type: string
      - description: Specifies the environment type to filter objects.
        explode: false
        in: query
        name: environments
        schema:
          items:
            enum:
            - kVMware
            - kHyperV
            - kAzure
            - kKVM
            - kAWS
            - kAcropolis
            - kGCP
            - kPhysical
            - kPhysicalFiles
            - kIsilon
            - kNetapp
            - kGenericNas
            - kFlashBlade
            - kElastifile
            - kGPFS
            - kPure
            - kNimble
            - kSQL
            - kOracle
            - kExchange
            - kAD
            - kView
            - kO365
            - kHyperFlex
            - kKubernetes
            - kCassandra
            - kMongoDB
            - kCouchbase
            - kHdfs
            - kHive
            - kHBase
            - kUDA
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Specifies a list of recovery actions. Only snapshots that applies
          to these actions will be returned.
        explode: false
        in: query
        name: snapshotActions
        schema:
          items:
            enum:
            - RecoverVMs
            - RecoverFiles
            - InstantVolumeMount
            - RecoverVmDisks
            - MountVolumes
            - RecoverVApps
            - RecoverRDS
            - RecoverAurora
            - RecoverApps
            - RecoverNasVolume
            - RecoverPhysicalVolumes
            - RecoverSystem
            - RecoverSanVolumes
            - RecoverNamespaces
            - RecoverObjects
            - DownloadFilesAndFolders
            - RecoverPublicFolders
            - RecoverVAppTemplates
            - RecoverMailbox
            - RecoverOneDrive
            - RecoverMsTeam
            - RecoverMsGroup
            - RecoverSharePoint
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: TenantIds contains ids of the tenants for which objects are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the response will include Objects which belongs to all
          tenants which the current user has permission to see.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: Specifies a list of Protection Group ids to filter the objects.
          If specified, the objects protected by specified Protection Group ids will
          be returned.
        explode: false
        in: query
        name: protectionGroupIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies a list of Object ids to filter.
        explode: false
        in: query
        name: objectIds
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Specifies the Storage Domain ids to filter objects for which
          Protection Groups are writing data to Cohesity Views on the specified Storage
          Domains.
        explode: false
        in: query
        name: storageDomainIds
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Specifies the size of objects to be fetched for a single subresult.
        in: query
        name: subResultSize
        schema:
          format: int32
          type: integer
      - description: Specifies the timestamp in Unix time epoch in microseconds to
          filter the objects if the Object has a successful snapshot after this value.
        in: query
        name: filterSnapshotFromUsecs
        schema:
          format: int64
          type: integer
      - description: Specifies the timestamp in Unix time epoch in microseconds to
          filter the objects if the Object has a successful snapshot before this value.
        in: query
        name: filterSnapshotToUsecs
        schema:
          format: int64
          type: integer
      - description: Specifies the operating system types to filter objects on.
        explode: false
        in: query
        name: osTypes
        schema:
          items:
            enum:
            - kLinux
            - kWindows
            - kAix
            - kSolaris
            - kSapHana
            - kOther
            type: string
          type: array
        style: form
      - description: Specifies a list of Protection Source object ids to filter the
          objects. If specified, the object which are present in those Sources will
          be returned.
        explode: false
        in: query
        name: sourceIds
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Specifies a list of run instance ids. If specified only objects
          belonging to the provided run id will be retunrned.
        explode: false
        in: query
        name: runInstanceIds
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Specifies whether to only return the CDP protected objects.
        in: query
        name: cdpProtectedOnly
        schema:
          type: boolean
      - description: Specifies a list of region ids. Only records from clusters having
          these region ids will be returned.
        explode: false
        in: query
        name: regionIds
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectedObjectsSearchResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List Protected Objects.
      tags:
      - Search
  /data-protect/snapshots/{snapshotId}:
    get:
      description: Get details of object snapshot.
      operationId: GetObjectSnapshotInfo
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the snapshot id.
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectSnapshot'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get details of object snapshot.
      tags:
      - Object
  /data-protect/snapshots/{snapshotId}/meta-info:
    post:
      description: Construct meta info from object snapshot and some additional params.
      operationId: ConstructMetaInfo
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the snapshot id.
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConstructMetaInfoParams'
        description: Specifies the parameters to construct meta info for desired workflow.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstructMetaInfoResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Construct meta info for any workflow from object snapshot and some
        other information.
      tags:
      - Object
      x-codegen-request-body-name: body
  /data-protect/snapshots/{snapshotId}/volume:
    get:
      description: Get volume info of object snapshot.
      operationId: GetObjectSnapshotVolumeInfo
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the snapshot id.
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
      - description: Specifies whether to only return supported volumes.
        in: query
        name: includeSupportedOnly
        schema:
          type: boolean
      - description: Specifies the point-in-time timestamp (in usecs from epoch) between
          snapshots for which the volume info is to be returned.
        in: query
        name: pointInTimeUsecs
        schema:
          format: int64
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectSnapshotVolumeInfo'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get volume info of object snapshot.
      tags:
      - Object
  /data-protect/snapshots/{snapshotsId}/download-file:
    get:
      description: Download an indexed file from a snapshot.
      operationId: DownloadIndexedFile
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the snapshot id to download from.
        in: path
        name: snapshotsId
        required: true
        schema:
          type: string
      - description: Specifies the path to the file to download. If no path is specified
          and snapshot environment is kVMWare, VMX file for VMware will be downloaded.
          For other snapshot environments, this field must be specified.
        in: query
        name: filePath
        schema:
          type: string
      - description: Specifies the number of attempts the protection run took to create
          this file.
        in: query
        name: retryAttempt
        schema:
          format: int64
          type: integer
      - description: Specifies the start offset of file chunk to be downloaded.
        in: query
        name: startOffset
        schema:
          format: int64
          type: integer
      - description: Specifies the length of bytes to download. This can not be greater
          than 8MB (8388608 byets)
        in: query
        name: length
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Download an indexed file.
      tags:
      - Recovery
  /data-protect/sources:
    get:
      description: Get a List of Protection Sources.
      operationId: GetProtectionSources
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: TenantIds contains ids of the tenants for which Sources are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the response will include Sources which belong belong
          to all tenants which the current user has permission to see. If false, then
          only Sources for the current user will be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: If true, the encrypted crednetial for the registered sources
          will be included. Credential is first encrypted with internal key and then
          reencrypted with user supplied encryption key.
        in: query
        name: includeSourceCredentials
        schema:
          type: boolean
      - description: Specifies the key to be used to encrypt the source credential.
          If includeSourceCredentials is set to true this key must be specified.
        in: query
        name: encryptionKey
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sources'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a List of Protection Sources.
      tags:
      - Source
  /data-protect/sources/filters:
    get:
      description: Get a List of attribute filters for leaf entities within a a source
      operationId: GetSourceAttributeFilters
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the source UUID of the parent entity.
        in: query
        name: sourceUuid
        required: true
        schema:
          type: string
      - description: Specifies the environment type of the Protection Source.
        in: query
        name: environment
        schema:
          enum:
          - kVMware
          - kHyperV
          - kAcropolis
          - kKVM
          - kAWS
          - kGCP
          - kAzure
          - kPhysical
          - kPure
          - kNimble
          - kNetapp
          - kGenericNas
          - kIsilon
          - kFlashBlade
          - kGPFS
          - kElastifile
          - kO365
          - kHyperFlex
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          - kSQL
          - kOracle
          nullable: true
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceAttributeFiltersResponseParams'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List attribute filters for a source.
      tags:
      - Source
  /data-protect/sources/registrations:
    get:
      description: Get the list of Protection Source registrations.
      operationId: GetSourceRegistrations
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Ids specifies the list of source registration ids to return.
          If left empty, every source registration will be returned by default.
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: TenantIds contains ids of the tenants for which objects are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the response will include Registrations which were created
          by all tenants which the current user has permission to see. If false, then
          only Registrations created by the current user will be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: If true, the encrypted crednetial for the registered sources
          will be included. Credential is first encrypted with internal key and then
          reencrypted with user supplied encryption key.
        in: query
        name: includeSourceCredentials
        schema:
          type: boolean
      - description: Specifies the key to be used to encrypt the source credential.
          If includeSourceCredentials is set to true this key must be specified.
        in: query
        name: encryptionKey
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRegistrations'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the list of Protection Source registrations.
      tags:
      - Source
    post:
      description: Register a Protection Source.
      operationId: RegisterProtectionSource
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceRegistrationRequestParams'
        description: Specifies the parameters to register a Protection Source.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRegistration'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Register a Protection Source.
      tags:
      - Source
      x-codegen-request-body-name: body
  /data-protect/sources/registrations/{id}:
    delete:
      description: Delete Protection Source Registration.
      operationId: DeleteProtectionSourceRegistration
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the ID of the Protection Source Registration.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete Protection Source Registration.
      tags:
      - Source
    get:
      description: Get a Protection Source registration.
      operationId: GetProtectionSourceRegistration
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the Protection Source registration.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRegistration'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a Protection Source registration.
      tags:
      - Source
    put:
      description: Update Protection Source registration.
      operationId: UpdateProtectionSourceRegistration
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the Protection Source registration.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceRegistrationUpdateRequestParams'
        description: Specifies the parameters to update the registration.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRegistration'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update Protection Source registration.
      tags:
      - Source
      x-codegen-request-body-name: body
  /data-protect/sources/test-connection:
    post:
      description: Test connection to a source.
      operationId: TestConnectionProtectionSource
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceConnectionRequestParams'
        description: Specifies the parameters to test connectivity with a source.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceConnectionResponseParams'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Test connection to a source.
      tags:
      - Source
      x-codegen-request-body-name: body
  /data-protect/sources/virtual-datacenter/{id}:
    get:
      description: Get the details such as catelogs, Org networks associated with
        a VMware virtual datacenter (VDC).
      operationId: GetVdcDetails
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the ID of the VMware virtual datacenter.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VdcObject'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get VDC Details.
      tags:
      - Source
  /data-protect/sources/{id}:
    get:
      description: Get a Protection Source.
      operationId: ProtectionSourceById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the Protection Source.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a Protection Sources.
      tags:
      - Source
  /data-protect/sources/{sourceId}/objects:
    get:
      description: List objects which can be used for data protection.
      operationId: GetSourceHierarchyObjects
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the source ID for which objects should be returned.
        in: path
        name: sourceId
        required: true
        schema:
          format: int64
          type: integer
      - description: Specifies the parent ID under which objects should be returned.
        in: query
        name: parentId
        schema:
          format: int64
          nullable: true
          type: integer
      - description: TenantIds contains ids of the tenants for which objects are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the response will include Objects which belongs to all
          tenants which the current user has permission to see.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: Specifies the VMware object types to filter objects.
        explode: false
        in: query
        name: vmwareObjectTypes
        schema:
          items:
            enum:
            - kVCenter
            - kStandaloneHost
            - kvCloudDirector
            - kFolder
            - kDatacenter
            - kComputeResource
            - kClusterComputeResource
            - kResourcePool
            - kDatastore
            - kHostSystem
            - kVirtualMachine
            - kVirtualApp
            - kStoragePod
            - kNetwork
            - kDistributedVirtualPortgroup
            - kTagCategory
            - kTag
            - kOpaqueNetwork
            - kOrganization
            - kVirtualDatacenter
            - kCatalog
            - kOrgMetadata
            - kStoragePolicy
            - kVirtualAppTemplate
            type: string
          type: array
        style: form
      - description: Specifies the Netapp object types to filter objects.
        explode: false
        in: query
        name: netappObjectTypes
        schema:
          items:
            enum:
            - kCluster
            - kVserver
            - kVolume
            type: string
          type: array
        style: form
      - description: Specifies the Office 365 object types to filter objects.
        explode: false
        in: query
        name: o365ObjectTypes
        schema:
          items:
            enum:
            - kDomain
            - kOutlook
            - kMailbox
            - kUsers
            - kGroups
            - kSites
            - kUser
            - kGroup
            - kSite
            - kApplication
            - kGraphUser
            - kPublicFolders
            - kPublicFolder
            - kTeams
            - kTeam
            type: string
          type: array
        style: form
      - description: Specifies the Cassandra object types to filter objects.
        explode: false
        in: query
        name: cassandraObjectTypes
        schema:
          items:
            enum:
            - kCluster
            - kKeyspace
            - kTable
            type: string
          type: array
        style: form
      - description: Specifies the Mongo DB object types to filter objects.
        explode: false
        in: query
        name: mongodbObjectTypes
        schema:
          items:
            enum:
            - kCluster
            - kDatabase
            - kCollection
            type: string
          type: array
        style: form
      - description: Specifies the Couchbase object types to filter objects.
        explode: false
        in: query
        name: couchbaseObjectTypes
        schema:
          items:
            enum:
            - kCluster
            - kBucket
            type: string
          type: array
        style: form
      - description: Specifies the HDFS object types to filter objects.
        explode: false
        in: query
        name: hdfsObjectTypes
        schema:
          items:
            enum:
            - kCluster
            type: string
          type: array
        style: form
      - description: Specifies the Hbase object types to filter objects.
        explode: false
        in: query
        name: hbaseObjectTypes
        schema:
          items:
            enum:
            - kCluster
            - kNamespace
            - kTable
            type: string
          type: array
        style: form
      - description: Specifies the Hive object types to filter objects.
        explode: false
        in: query
        name: hiveObjectTypes
        schema:
          items:
            enum:
            - kCluster
            - kDatabase
            - kTable
            type: string
          type: array
        style: form
      - description: Specifies the HyperV object types to filter objects.
        explode: false
        in: query
        name: hypervObjectTypes
        schema:
          items:
            enum:
            - kSCVMMServer
            - kStandaloneHost
            - kStandaloneCluster
            - kHostGroup
            - kHypervHost
            - kHostCluster
            - kVirtualMachine
            - kNetwork
            - kDatastore
            - kTag
            - kCustomProperty
            type: string
          type: array
        style: form
      - description: Specifies the Azure object types to filter objects.
        explode: false
        in: query
        name: azureObjectTypes
        schema:
          items:
            enum:
            - kSubscription
            - kResourceGroup
            - kVirtualMachine
            - kStorageAccount
            - kStorageKey
            - kStorageContainer
            - kStorageBlob
            - kNetworkSecurityGroup
            - kVirtualNetwork
            - kSubnet
            - kComputeOptions
            - kSnapshotManagerPermit
            - kTag
            - kAvailabilitySet
            type: string
          type: array
        style: form
      - description: Specifies the KVM object types to filter objects.
        explode: false
        in: query
        name: kvmObjectTypes
        schema:
          items:
            enum:
            - kOVirtManager
            - kStandaloneHost
            - kDatacenter
            - kCluster
            - kHost
            - kVirtualMachine
            - kNetwork
            - kStorageDomain
            - kVNicProfile
            type: string
          type: array
        style: form
      - description: Specifies the AWS object types to filter objects.
        explode: false
        in: query
        name: awsObjectTypes
        schema:
          items:
            enum:
            - kIAMUser
            - kRegion
            - kAvailabilityZone
            - kEC2Instance
            - kVPC
            - kSubnet
            - kNetworkSecurityGroup
            - kInstanceType
            - kKeyPair
            - kTag
            - kRDSOptionGroup
            - kRDSParameterGroup
            - kRDSInstance
            - kRDSSubnet
            - kRDSTag
            - kAuroraTag
            - kAuroraCluster
            - kAccount
            - kSubTaskPermit
            type: string
          type: array
        style: form
      - description: Specifies the GCP object types to filter objects.
        explode: false
        in: query
        name: gcpObjectTypes
        schema:
          items:
            enum:
            - kIAMUser
            - kProject
            - kRegion
            - kAvailabilityZone
            - kVirtualMachine
            - kVPC
            - kSubnet
            - kNetworkSecurityGroup
            - kInstanceType
            - kLabel
            - kMetadata
            - kTag
            - kVPCConnector
            type: string
          type: array
        style: form
      - description: Specifies the Acropolis object types to filter objects.
        explode: false
        in: query
        name: acropolisObjectTypes
        schema:
          items:
            enum:
            - kPrismCentral
            - kStandaloneCluster
            - kOtherHypervisorCluster
            - kCluster
            - kHost
            - kVirtualMachine
            - kNetwork
            - kStorageContainer
            type: string
          type: array
        style: form
      - description: Specifies the generic NAS object types to filter objects.
        explode: false
        in: query
        name: genericNasObjectTypes
        schema:
          items:
            enum:
            - kGroup
            - kHost
            - kDfsGroup
            - kDfsTopDir
            type: string
          type: array
        style: form
      - description: Specifies the Isilon object types to filter objects.
        explode: false
        in: query
        name: isilonObjectTypes
        schema:
          items:
            enum:
            - kCluster
            - kZone
            - kMountPoint
            type: string
          type: array
        style: form
      - description: Specifies the Flashblade object types to filter objects.
        explode: false
        in: query
        name: flashbladeObjectTypes
        schema:
          items:
            enum:
            - kStorageArray
            - kFileSystem
            type: string
          type: array
        style: form
      - description: Specifies the Elastifile object types to filter objects.
        explode: false
        in: query
        name: elastifileObjectTypes
        schema:
          items:
            enum:
            - kCluster
            - kContainer
            type: string
          type: array
        style: form
      - description: Specifies the GPFS object types to filter objects.
        explode: false
        in: query
        name: gpfsObjectTypes
        schema:
          items:
            enum:
            - kCluster
            - kFilesystem
            - kFileset
            type: string
          type: array
        style: form
      - description: Specifies the Pure object types to filter objects.
        explode: false
        in: query
        name: pureObjectTypes
        schema:
          items:
            enum:
            - kStorageArray
            - kVolume
            type: string
          type: array
        style: form
      - description: Specifies the Nimble object types to filter objects.
        explode: false
        in: query
        name: nimbleObjectTypes
        schema:
          items:
            enum:
            - kStorageArray
            - kVolume
            type: string
          type: array
        style: form
      - description: Specifies the Physical object types to filter objects.
        explode: false
        in: query
        name: physicalObjectTypes
        schema:
          items:
            enum:
            - kGroup
            - kHost
            - kWindowsCluster
            - kOracleRACCluster
            - kOracleAPCluster
            type: string
          type: array
        style: form
      - description: Specifies the Kubernetes object types to filter objects.
        explode: false
        in: query
        name: kubernetesObjectTypes
        schema:
          items:
            enum:
            - kCluster
            - kNamespace
            - kService
            - kPVC
            - kPersistentVolumeClaim
            - kPersistentVolume
            - kLabel
            type: string
          type: array
        style: form
      - description: Specifies the Exchange object types to filter objects.
        explode: false
        in: query
        name: exchangeObjectTypes
        schema:
          items:
            enum:
            - kRootContainer
            - kDAGRootContainer
            - kExchangeNode
            - kExchangeDAGDatabaseCopy
            - kExchangeStandaloneDatabase
            - kExchangeDAG
            - kExchangeDAGDatabase
            type: string
          type: array
        style: form
      - description: Specifies the AD object types to filter objects.
        explode: false
        in: query
        name: adObjectTypes
        schema:
          items:
            enum:
            - kRootContainer
            - kDomainController
            type: string
          type: array
        style: form
      - description: Specifies the MSSQL object types to filter objects.
        explode: false
        in: query
        name: mssqlObjectTypes
        schema:
          items:
            enum:
            - kInstance
            - kDatabase
            - kAAG
            - kAAGRootContainer
            - kRootContainer
            type: string
          type: array
        style: form
      - description: Specifies the Oracle object types to filter objects.
        explode: false
        in: query
        name: oracleObjectTypes
        schema:
          items:
            enum:
            - kRACRootContainer
            - kRootContainer
            - kHost
            - kDatabase
            - kTableSpace
            - kTable
            - kPDB
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceHierarchyObjectSummaries'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List objects on a source which can be used for data protection.
      tags:
      - Object
  /data-tiering/analysis-groups:
    get:
      description: Get list of all data tiering analysis groups.
      operationId: GetDataTieringAnalysisGroups
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by a list of Analysis Group IDs.
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTieringAnalysisGroups'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the list of data tiering analysis groups.
      tags:
      - DataTiering
    post:
      description: Create a data tiering analysis group.
      operationId: CreateDataTieringAnalysisGroup
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonDataTieringAnalysisGroupParams'
        description: Specifies the data tiering analysis group.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTieringAnalysisGroup'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a data tiering analysis group.
      tags:
      - DataTiering
      x-codegen-request-body-name: body
  /data-tiering/analysis-groups/states:
    post:
      description: |-
        Perform actions like pause or resume on the data tiering analysis
        groups for the specified sources.
      operationId: UpdateDataTieringAnalysisGroupsState
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataTieringStateRequest'
        description: |-
          Specifies the parameters to perform an action of list of data tiering
          analysis groups.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDataTieringState'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update data tiering analysis groups state.
      tags:
      - DataTiering
      x-codegen-request-body-name: body
  /data-tiering/analysis-groups/{id}:
    delete:
      description: |-
        Returns NoContentResponse if the data tiering analysis group is
        deleted.
      operationId: DeleteDataTieringAnalysisGroup
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the data tiering analysis group.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete data tiering analysis group.
      tags:
      - DataTiering
    get:
      description: Get data tiering analysis group by id.
      operationId: GetDataTieringAnalysisGroupById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the data tiering analysis group.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTieringAnalysisGroup'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get data tiering analysis group by id.
      tags:
      - DataTiering
    put:
      description: Update a data tiering analysis group.
      operationId: UpdateDataTieringAnalysisGroup
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the data tiering analysis group.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonDataTieringAnalysisGroupParams'
        description: Specifies the data tiering analysis group.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTieringAnalysisGroup'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: |-
        Update a data tiering analysis group. Currently, it supports updating
        sources only.
      tags:
      - DataTiering
      x-codegen-request-body-name: body
  /data-tiering/analysis-groups/{id}/config:
    put:
      description: Update data tiering analysis group config.
      operationId: UpdateDataTieringAnalysisGroupTagsConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the data tiering analysis group.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataTieringTagConfig'
        description: Specifies the data tiering analysis Tags Config.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTieringTagConfig'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update data tiering analysis group config.
      tags:
      - DataTiering
      x-codegen-request-body-name: body
  /data-tiering/analysis-groups/{id}/runs:
    post:
      description: Create a data tiering analysis group run.
      operationId: CreateDataTieringAnalysisGroupRun
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the data tiering analysis group.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataTieringAnalysisRunRequest'
        description: Specifies the request to run analysis group once.
        required: false
      responses:
        "202":
          content: {}
          description: Request Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a data tiering analysis group run.
      tags:
      - DataTiering
      x-codegen-request-body-name: body
  /data-tiering/analysis-groups/{id}/runs/{runId}/cancel:
    post:
      description: |-
        Cancel data tiering analysis run for given analysis group ID
        and run ID
      operationId: CancelDataTieringAnalysisGroupRun
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of data tiering group.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      - description: Specifies a unique run id of data tiering group run.
        in: path
        name: runId
        required: true
        schema:
          pattern: ^\d+:\d+$
          type: string
      responses:
        "202":
          content: {}
          description: Request Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Cancel data tiering analysis run.
      tags:
      - DataTiering
  /data-tiering/tasks:
    get:
      description: Get the list of data tiering tasks.
      operationId: GetDataTieringTasks
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by a list of data tiering task ids.
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          If true, it will also return a list of downtiered data locations
          for downtiered tasks.
        in: query
        name: includeDowntieredDataLocation
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTieringTasks'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the list of data tiering tasks.
      tags:
      - DataTiering
    post:
      description: Create a data tiering task.
      operationId: CreateDataTieringTask
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateDataTieringTaskRequest'
        description: Specifies the parameters to create a data tiering task.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTieringTask'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a data tiering task.
      tags:
      - DataTiering
      x-codegen-request-body-name: body
  /data-tiering/tasks/states:
    post:
      description: Perform actions like pause or resume on the data tiering tasks.
      operationId: UpdateDataTieringTasksState
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataTieringStateRequest'
        description: |-
          Specifies the parameters to perform an action of list of data tiering
          tasks.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDataTieringState'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update data tiering source analysis tasks state.
      tags:
      - DataTiering
      x-codegen-request-body-name: body
  /data-tiering/tasks/{id}:
    delete:
      description: Returns Success if the data tiering task is deleted.
      operationId: DeleteDataTieringTask
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the data tiering task.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: delete the data tiering task.
      tags:
      - DataTiering
    get:
      description: Get data tiering task by id.
      operationId: GetDataTieringTaskById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the data tiering task.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTieringTask'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get data tiering task by id.
      tags:
      - DataTiering
    put:
      description: Update a data tiering task.
      operationId: UpdateDataTieringTask
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the data tiering task.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateDataTieringTaskRequest'
        description: Specifies the parameters to update a data tiering task.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTieringTask'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a data tiering task.
      tags:
      - DataTiering
      x-codegen-request-body-name: body
  /data-tiering/tasks/{id}/runs:
    post:
      description: Create a data tiering tasks run.
      operationId: CreateDataTieringTaskRun
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the data tiering tasks.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataTieringTaskRunRequest'
        description: Specifies the request to run tiering task once.
        required: false
      responses:
        "202":
          content: {}
          description: Request Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a data tiering tasks run.
      tags:
      - DataTiering
      x-codegen-request-body-name: body
  /data-tiering/tasks/{id}/runs/{runId}/cancel:
    post:
      description: Cancel data tiering task run for given data tiering task id and
        run id.
      operationId: CancelDataTieringTaskRun
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of data tiering task.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      - description: Specifies a unique run id of data tiering task.
        in: path
        name: runId
        required: true
        schema:
          pattern: ^\d+:\d+$
          type: string
      responses:
        "202":
          content: {}
          description: Request Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Cancel data tiering task.
      tags:
      - DataTiering
  /disks/assimilate:
    post:
      description: Assimilate list of disks from one or more nodes of cluster.
      operationId: DisksAssimilate
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterFreeDisks'
        description: Specifies the parameter to assimilate disks.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFreeDisks'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Assimilate disks.
      tags:
      - Platform
      x-codegen-request-body-name: body
  /disks/discover:
    get:
      description: Discover disks that are ready for activation
      operationId: DiscoverDisks
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFreeDisks'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Discover new disks
      tags:
      - Platform
  /disks/identify:
    post:
      description: Turn on/off led light of a disk.
      operationId: DiskIdentify
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiskIdentify'
        description: Specifies the parameter to identify disk.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskIdentify'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Identify a disk
      tags:
      - Platform
      x-codegen-request-body-name: body
  /disks/local:
    get:
      description: Get list of local disks.
      operationId: ListDisks
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies node id of the node to get list of disks
        in: query
        name: nodeId
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisksList'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get list of disks
      tags:
      - Platform
  /disks/remote:
    get:
      description: Get remote disks.
      operationId: GetRemoteDisks
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a list of disk ids, only disks having these ids will
          be returned.
        explode: false
        in: query
        name: diskIds
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Specifies a list of node ids, only disks in these nodes will
          be returned.
        explode: false
        in: query
        name: nodeIds
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Specifies a list of disk tiers, only disks with given tiers will
          be returned.
        explode: false
        in: query
        name: tiers
        schema:
          items:
            enum:
            - PCIeSSD
            - SATA-SSD
            - SATA-HDD
            - CLOUD
            type: string
          type: array
        style: form
      - description: This field is deprecated. Providing this queryparam will not
          have any impact. Please use fileSystem query param to filter instead.
        in: query
        name: mountPath
        schema:
          type: string
      - description: Specified file system name to search. only disks with file system
          name that partially matches the specified name will be returned.
        in: query
        name: fileSystem
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteDisks'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get remote disks
      tags:
      - Platform
    post:
      description: Add a remote disk.
      operationId: AddRemoteDisk
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteDisks'
        description: Specifies the remote disk configuration.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddRemoteDiskResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Add remote disk
      tags:
      - Platform
      x-codegen-request-body-name: body
  /disks/remote/{id}:
    delete:
      description: Remove a remote disk.
      operationId: RemoveRemoteDisk
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the remote disk to remove.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Remove remote disk
      tags:
      - Platform
  /disks/{id}/remove:
    post:
      description: Mark disk for removal or cancel removal if a disk is already marked
        for removal.
      operationId: MarkDiskRemoval
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies unique id of the disk to mark for removal.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiskRemovalParams'
        description: Specifies parameters to mark/cancel disk removal.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveDisk'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Mark Disk for removal
      tags:
      - Platform
      x-codegen-request-body-name: body
  /domain-controllers:
    get:
      description: Get Domain Controllers of specified domains.
      operationId: GetDomainControllers
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a list of domain names.
        explode: false
        in: query
        name: domainNames
        required: true
        schema:
          items:
            pattern: ^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])(\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9]))*$
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: Specifies the Id of the connection which the connector belongs
          to.
        in: query
        name: connectionId
        schema:
          format: int64
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainControllersResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Domain Controllers of specified domains.
      tags:
      - ActiveDirectory
  /email-otp:
    post:
      description: Creates a new One Time Password for the user email. This is used
        for API login.
      operationId: CreateEmailOtp
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmailOtpRequestBody'
        description: Specifies the parameters to send email OTP.
        required: false
      responses:
        "204":
          content: {}
          description: Successfully sent an email to the configured address
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Creates a new OTP to be sent to the user email.
      tags:
      - MFA
      x-codegen-request-body-name: body
  /file-services/shares:
    get:
      description: Get Shares.
      operationId: GetShares
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the Share name.
        in: query
        name: name
        schema:
          type: string
      - description: If true, the share nane is matched by any partial rather than
          exactly matched.
        in: query
        name: matchPartialName
        schema:
          type: boolean
      - description: Specifies a limit on the number of Views returned.
        in: query
        name: maxCount
        schema:
          format: int32
          type: integer
      - description: Specifies the cookie.
        in: query
        name: cookie
        schema:
          type: string
      - description: TenantIds contains ids of the tenants for which objects are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: IncludeTenants specifies if objects of all the tenants under
          the hierarchy of the logged in user's organization should be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shares'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Shares.
      tags:
      - View
    post:
      description: Create a Share.
      operationId: CreateShare
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Share'
        description: Specifies the request to create a Share.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Share'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a Share.
      tags:
      - View
      x-codegen-request-body-name: body
  /file-services/shares/{name}:
    delete:
      description: Delete a Share.
      operationId: DeleteShare
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the Share name to delete.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete a Share.
      tags:
      - View
    get:
      description: Get a Share by name.
      operationId: GetShareByName
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the Share name.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Share'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a Share by name.
      tags:
      - View
    put:
      description: Update a Share.
      operationId: UpdateShare
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the Share name to update.
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShareParam'
        description: Specifies the request to update a Share.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Share'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a Share.
      tags:
      - View
      x-codegen-request-body-name: body
  /file-services/view-template:
    get:
      description: |-
        All view templates on the Cohesity Cluster are returned.
        Specifying parameters filters the results that are returned.
      operationId: ReadViewTemplates
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetViewTemplatesResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List View Templates
      tags:
      - View
    post:
      description: Creates a View Template.
      operationId: CreateViewTemplate
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
        description: Request to create a view template.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a View Template
      tags:
      - View
      x-codegen-request-body-name: body
  /file-services/view-template/{id}:
    delete:
      description: Deletes a view template based on given template id.
      operationId: DeleteViewTemplate
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the view template to delete.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete a View Template
      tags:
      - View
    get:
      description: Reads a view template based on given template id.
      operationId: ReadViewTemplateById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the view template.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Read a View Template by Id
      tags:
      - View
    put:
      description: Updates a View Template.
      operationId: UpdateViewTemplate
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the view template.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
        description: Request to update a view template.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a View Template
      tags:
      - View
      x-codegen-request-body-name: body
  /file-services/views:
    get:
      description: |-
        If no parameters are specified, all Views on the Cohesity Cluster are returned.
        Specifying parameters filters the results that are returned.
        NOTE: If maxCount is set and the number of Views returned exceeds the maxCount,
        there are more Views to return.
        To get the next set of Views, send another request and specify the id of the
        last View returned in viewList from the previous response.
      operationId: GetViews
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by a list of View names.
        explode: false
        in: query
        name: viewNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by a list of View ids.
        explode: false
        in: query
        name: viewIds
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Filter by a list of Storage Domains (View Boxes) specified by
          id.
        explode: false
        in: query
        name: storageDomainIds
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Filter by a list of View Box names.
        explode: false
        in: query
        name: storageDomainNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by a list of protocol accesses. Only views with
          protocol accesses in these specified accesses list will be returned.
        explode: false
        in: query
        name: protocolAccesses
        schema:
          items:
            enum:
            - NFS
            - NFS4
            - SMB
            - S3
            - Swift
            type: string
          type: array
        style: form
      - description: |-
          If true, the names in viewNames are matched by any partial rather than
          exactly matched.
        in: query
        name: matchPartialNames
        schema:
          type: boolean
      - description: Specifies a limit on the number of Views returned.
        in: query
        name: maxCount
        schema:
          format: int32
          type: integer
      - description: |-
          Specifies if internal Views created by the Cohesity Cluster are
          also returned. In addition, regular Views are returned.
        in: query
        name: includeInternalViews
        schema:
          type: boolean
      - description: |-
          Specifies if Protection Groups information needs to be returned along with
          view metadata. By default, if not set or set to true, Group information is
          returned.
        in: query
        name: includeProtectionGroups
        schema:
          type: boolean
      - description: |-
          If the number of Views to return exceeds the maxCount specified in the
          original request, specify the id of the last View
          from the viewList in the previous response
          to get the next set of Views.
        in: query
        name: maxViewId
        schema:
          format: int64
          type: integer
      - description: |-
          Specifies if inactive Views on this Remote Cluster (which have
          Snapshots copied by replication) should also be returned.
          Inactive Views are not counted towards the maxCount.
          By default, this field is set to false.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: |-
          This field will be deprecated. Filter by Protection Group ids.
          Return Views that are being protected by listed Groups, which are specified by ids.
          If both protectionGroupIds and viewProtectionGroupIds are specified, only
          viewProtectionGroupIds will be used.
        explode: false
        in: query
        name: protectionGroupIds
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: |-
          Filter by Protection Group ids. Return Views that are being protected by
          listed Groups, which are specified by ids.
        explode: false
        in: query
        name: viewProtectionGroupIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Whether to get just the total number of views with the given input
          filters. If the flag is true, we ignore the parameter 'maxViews' for the
          count. Also, if flag is true, list of views will not be returned.
        in: query
        name: viewCountOnly
        schema:
          type: boolean
      - description: |-
          Whether to get only view summary including 'name', 'viewId',
          'storageDomainName', 'storageDomainId' and 'tenantId'.
        in: query
        name: summaryOnly
        schema:
          type: boolean
      - description: If set to true, the list is sorted descending by logical usage.
        in: query
        name: sortByLogicalUsage
        schema:
          type: boolean
      - description: |-
          Sids of restricted principals who can access the view. This is an
          internal field and therefore does not have json tag.
        explode: false
        in: query
        name: internalAccessSids
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, view aliases are also matched with the names in viewNames.
        in: query
        name: matchAliasNames
        schema:
          type: boolean
      - description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          IncludeTenants specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: |-
          If set to true, stats of views will be returned. By default this parameter
          is set to false.
        in: query
        name: includeStats
        schema:
          type: boolean
      - description: Whether to include View file count by size.
        in: query
        name: includeFileCountBySize
        schema:
          type: boolean
      - description: |-
          If set to true, the list will contain only the views for which antivirus
          scan is enabled.
        in: query
        name: includeViewsWithAntivirusEnabledOnly
        schema:
          type: boolean
      - description: |-
          If set to true, the list will contain only the views for which either
          file level data lock is enabled or view level data lock is enabled.
        in: query
        name: includeViewsWithDataLockEnabledOnly
        schema:
          type: boolean
      - description: |-
          If set to true, only views with filer audit log enabled will be returned.
          If set to false, only views with filer audit log disabled will be returned.
        in: query
        name: filerAuditLogEnabled
        schema:
          type: boolean
      - description: Filter by a list of View categories.
        explode: false
        in: query
        name: categories
        schema:
          items:
            enum:
            - BackupTarget
            - FileServices
            - ObjectServices
            type: string
          type: array
        style: form
      - description: Filter by a list of View protection types.
        explode: false
        in: query
        name: viewProtectionTypes
        schema:
          items:
            enum:
            - Local
            - Archival
            - ReplicationOut
            - ReplicationIn
            type: string
          type: array
        style: form
      - description: Filter by last local backup run status of the view.<br> 'Running'
          indicates that the run is still running.<br> 'Canceled' indicates that the
          run has been canceled.<br> 'Canceling' indicates that the run is in the
          process of being canceled.<br> 'Failed' indicates that the run has failed.<br>
          'Missed' indicates that the run was unable to take place at the scheduled
          time because the previous run was still happening.<br> 'Succeeded' indicates
          that the run has finished successfully.<br> 'SucceededWithWarning' indicates
          that the run finished successfully, but there were some warning messages.
        explode: false
        in: query
        name: lastRunLocalBackupStatuses
        schema:
          items:
            enum:
            - Accepted
            - Running
            - Canceled
            - Canceling
            - Failed
            - Missed
            - Succeeded
            - SucceededWithWarning
            - OnHold
            type: string
          type: array
        style: form
      - description: Filter by last remote replication run status of the view.<br>
          'Running' indicates that the run is still running.<br> 'Canceled' indicates
          that the run has been canceled.<br> 'Canceling' indicates that the run is
          in the process of being canceled.<br> 'Failed' indicates that the run has
          failed.<br> 'Missed' indicates that the run was unable to take place at
          the scheduled time because the previous run was still happening.<br> 'Succeeded'
          indicates that the run has finished successfully.<br> 'SucceededWithWarning'
          indicates that the run finished successfully, but there were some warning
          messages.
        explode: false
        in: query
        name: lastRunReplicationStatuses
        schema:
          items:
            enum:
            - Accepted
            - Running
            - Canceled
            - Canceling
            - Failed
            - Missed
            - Succeeded
            - SucceededWithWarning
            - OnHold
            type: string
          type: array
        style: form
      - description: Filter by last cloud archival run status of the view.<br> 'Running'
          indicates that the run is still running.<br> 'Canceled' indicates that the
          run has been canceled.<br> 'Canceling' indicates that the run is in the
          process of being canceled.<br> 'Failed' indicates that the run has failed.<br>
          'Missed' indicates that the run was unable to take place at the scheduled
          time because the previous run was still happening.<br> 'Succeeded' indicates
          that the run has finished successfully.<br> 'SucceededWithWarning' indicates
          that the run finished successfully, but there were some warning messages.
        explode: false
        in: query
        name: lastRunArchivalStatuses
        schema:
          items:
            enum:
            - Accepted
            - Running
            - Canceled
            - Canceling
            - Failed
            - Missed
            - Succeeded
            - SucceededWithWarning
            - OnHold
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetViewsResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List Views
      tags:
      - View
    post:
      description: Creates a View.
      operationId: CreateView
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateViewRequest'
        description: Request to create a View.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a View
      tags:
      - View
      x-codegen-request-body-name: body
  /file-services/views-summary:
    get:
      description: Get Views summary.
      operationId: GetViewsSummary
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewsSummary'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Views summary.
      tags:
      - View
  /file-services/views/{id}:
    delete:
      description: Deletes a View based on given id.
      operationId: DeleteView
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the View to delete.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete a View
      tags:
      - View
    get:
      description: Get a View based on given Id.
      operationId: GetViewById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the View to fetch.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a View by Id
      tags:
      - View
    put:
      description: Updates a View based on given id.
      operationId: UpdateView
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the View to update.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/View'
        description: Request to update a view.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a View
      tags:
      - View
      x-codegen-request-body-name: body
  /file-services/views/{id}/directory-quotas:
    delete:
      description: Delete directory quota for the View.
      operationId: DeleteViewDirectoryQuota
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the View id.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: Specifies the directory path to delete. Exactly one of 'directoryPath'
          and 'deleteAllDirectoryQuotas' should be provided.
        in: query
        name: directoryPath
        schema:
          type: string
      - description: Specifies whether to delete all directory quotas for this view.
          Exactly one of 'directoryPath' and 'deleteAllDirectoryQuotas' should be
          provided.
        in: query
        name: deleteAllDirectoryQuotas
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete directory quota for the View.
      tags:
      - View
    get:
      description: Get directory quotas for the View.
      operationId: GetViewDirectoryQuotas
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the View id.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: Specifies a limit on the number of quotas returned.
        in: query
        name: maxCount
        schema:
          format: int64
          type: integer
      - description: Specifies the cookie.
        in: query
        name: cookie
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewDirectoryQuotas'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get directory quotas for the View.
      tags:
      - View
    put:
      description: Update directory quota for the View.
      operationId: UpdateViewDirectoryQuota
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the View id.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewDirectoryQuota'
        description: Specifies the request to update directory quota.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewDirectoryQuota'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Upadte directory quota for the View.
      tags:
      - View
      x-codegen-request-body-name: body
  /file-services/views/{id}/user-quotas:
    get:
      description: Get user quotas for the View.
      operationId: GetViewUserQuotas
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the View id.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: Specifies a limit on the number of quotas returned.
        in: query
        name: maxCount
        schema:
          format: int64
          type: integer
      - description: Specifies the cookie.
        in: query
        name: cookie
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewUserQuotas'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get user quotas for the View.
      tags:
      - View
  /file-services/views/{id}/user-quotas-config:
    get:
      description: Get View user quotas config.
      operationId: GetViewUserQuotasConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the View id.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewUserQuotasConfig'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get View user quotas config.
      tags:
      - View
  /groups:
    get:
      description: Get Groups.
      operationId: GetGroups
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the Group domain to filter.
        in: query
        name: domain
        schema:
          type: string
      - description: Specifies a list of names to filter.
        explode: false
        in: query
        name: names
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies a list of roles to filter.
        explode: false
        in: query
        name: roles
        schema:
          items:
            type: string
          type: array
        style: form
      - description: TenantIds contains ids of the tenants for which groups are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: IncludeTenants specifies if groups of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Groups.
      tags:
      - User
  /helios-onprem/config:
    get:
      description: View the configuration for Helios OnPrem VM Node.
      operationId: GetHeliosOnPremConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeliosOnPremConfig'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Retreive Helios OnPrem Configuration
      tags:
      - HeliosOnPrem
    put:
      description: Update the configuration for Helios OnPrem VM Node.
      operationId: UpdateHeliosOnPremConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeliosOnPremConfig'
        description: Specifies the parameters for config update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeliosOnPremConfig'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update Helios OnPrem Configuration
      tags:
      - HeliosOnPrem
      x-codegen-request-body-name: body
  /helios-registration:
    post:
      description: Claim to Helios.
      operationId: HeliosClaim
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeliosClaimRequest'
        description: Specifies the parameters to claim to Helios.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Register to Helios.
      tags:
      - Registration
      x-codegen-request-body-name: body
  /helios-registration-config:
    get:
      description: Lists the Helios Registration Config.
      operationId: GetHeliosRegConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeliosRegConfig'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Lists the Helios Registration Config.
      tags:
      - Registration
  /kerberos-providers:
    get:
      description: Get the list of Kerberos Authentication Providers.
      operationId: GetKerberosProviders
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by a list of realm names.
        explode: false
        in: query
        name: realmNames
        schema:
          items:
            type: string
          type: array
          x-omitempty: true
        style: form
        x-omitempty: true
      - description: Filter by a list of Kerberos Provider Ids.
        explode: false
        in: query
        name: ids
        schema:
          items:
            format: int64
            type: integer
          type: array
          x-omitempty: true
        style: form
        x-omitempty: true
      - description: Filter by a list of KDC servers.
        explode: false
        in: query
        name: kdcServers
        schema:
          items:
            type: string
          type: array
          x-omitempty: true
        style: form
        x-omitempty: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosProviders'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the list of Kerberos Providers.
      tags:
      - KerberosProvider
  /kerberos-providers/register:
    post:
      description: Register a Kerberos Authentication Provider.
      operationId: RegisterKerberosProvider
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterOrUpdateKerberosProviderRequest'
        description: Specifies the parameters to Register a Kerberos Provider.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosProvider'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Register a Kerberos Authentication Provider.
      tags:
      - KerberosProvider
      x-codegen-request-body-name: body
  /kerberos-providers/{id}:
    get:
      description: Get the Registered Kerberos Provider by id.
      operationId: GetKerberosProviderById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: |-
          Specifies the id which will be of the pattern
          cluster_id:clusterincarnation_id:resource_id.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosProvider'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the Registered Kerberos Provider by id.
      tags:
      - KerberosProvider
    put:
      description: Update the Kerberos Provider Registration.
      operationId: UpdateKerberosProvider
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: |-
          Specifies the id which will be of the pattern
          cluster_id:clusterincarnation_id:resource_id.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterOrUpdateKerberosProviderRequest'
        description: Request to update a Kerberos Provider.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosProvider'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update the Kerberos Provider Registration.
      tags:
      - KerberosProvider
      x-codegen-request-body-name: body
  /kerberos-providers/{id}/unregister:
    post:
      description: Unregister a Kerberos Provider.
      operationId: UnregisterKerberosProvider
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:\d+$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnregisterKerberosRequest'
        description: Request to unregister a Kerberos Provider.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnregisterKerberosProvider'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Unregister a Kerberos Provider.
      tags:
      - KerberosProvider
      x-codegen-request-body-name: body
  /keystones:
    get:
      description: Get Keystones.
      operationId: GetKeystones
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a list of Keystone names.
        explode: false
        in: query
        name: names
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: TenantIds contains ids of the tenants for which objects are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: If true, the response will include Keystones which were created
          by all tenants which the current user has permission to see. If false, then
          only Keystones created by the current user will be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Keystones'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Keystones.
      tags:
      - Keystone
    post:
      description: Create a Keystone configuration.
      operationId: CreateKeystone
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKeystoneRequest'
        description: Specifies the paremters to create a Keystone configuration.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Keystone'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a Keystone configuration.
      tags:
      - Keystone
      x-codegen-request-body-name: body
  /keystones/{id}:
    delete:
      description: Delete a Keystone configuration.
      operationId: DeleteKeystone
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the Keystone id.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: Specifies the password of Keystone administrator.
        in: header
        name: adminPassword
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete a Keystone configuration.
      tags:
      - Keystone
    get:
      description: Get a Keystone by its id.
      operationId: GetKeystonesById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the Keystone id.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Keystone'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a Keystone by its id.
      tags:
      - Keystone
    put:
      description: Update a Keystone configuration.
      operationId: UpdateKeystone
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the Keystone id.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKeystoneRequest'
        description: Specifies the paremters to update a Keystone configuration.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Keystone'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a Keystone configuration.
      tags:
      - Keystone
      x-codegen-request-body-name: body
  /ldap:
    get:
      description: Get LDAPs.
      operationId: GetLdaps
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a list of ids to filter.
        explode: false
        in: query
        name: ids
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: TenantIds contains ids of the tenants for which LDAPs are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: IncludeTenants specifies if LDAPs of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ldaps'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Groups.
      tags:
      - LDAP
  /ldap/{id}/connection-status:
    get:
      description: Get LDAP connection status.
      operationId: GetLdapConnectionStatus
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the LDAP id.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapStatus'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get LDAP connection status.
      tags:
      - LDAP
  /mcm/accounts/tenant-config:
    get:
      description: Get Tenant related configurations for the account.
      operationId: GetAccountTenantConfig
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConfig'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Tenants Config.
      tags:
      - Tenant
    patch:
      description: Update Tenant related configurations for the account.
      operationId: UpdateAccountTenantConfig
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConfig'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update Tenant's Config.
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /mcm/clusters/tenant-config:
    get:
      description: Get Tenant related configurations for all the clusters.
      operationId: GetClustersTenantConfig
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClustersTenantConfigs'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Tenant's config for all clusters.
      tags:
      - Tenant
    post:
      description: Update Tenant related configurations for a list of clusters.
      operationId: UpdateClustersTenantConfig
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClustersTenantConfigs'
        required: true
      responses:
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateClustersTenantConfigsResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update Tenant's config for clusters.
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /mcm/data-protect/agents/images:
    get:
      description: Get agent information on Helios.
      operationId: McmGetAgentImageDetails
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a platform for which agent information need to be fetched.
        in: query
        name: platform
        schema:
          enum:
          - Windows
          - Linux
          - Solaris
          type: string
      - description: Specifies a package type for which agent information need to
          be fetched.
        in: query
        name: packageType
        schema:
          enum:
          - Script
          - RPM
          - SuseRPM
          - DEB
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/McmAgentImagesResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get agent images details.
      tags:
      - Agent
  /mcm/data-protect/objects/activity:
    post:
      description: Get object activity on Helios. Activity includes Protection Group
        Runs and Recoveries.
      operationId: GetMcmObjectsActivity
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by a list of region ids.
        explode: false
        in: query
        name: regionIds
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMcmObjectsActivityReqParams'
        description: Request parameters to filter object activity.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/McmObjectsActivity'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Object activity on Helios.
      tags:
      - Object
      x-codegen-request-body-name: body
  /mcm/data-protect/objects/snapshots:
    get:
      description: List the snapshots for a given object.
      operationId: GetMcmObjectSnapshots
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the uuid of the Object. This field is deprecated.
        in: query
        name: uuid
        schema:
          type: string
      - description: Specifies the global id of the Object.
        in: query
        name: globalId
        required: true
        schema:
          type: string
      - description: Specifies the timestamp in Unix time epoch in microseconds to
          filter Object's snapshots which are taken after this value.
        in: query
        name: fromTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Specifies the timestamp in Unix time epoch in microseconds to
          filter Object's snapshots which are taken before this value.
        in: query
        name: toTimeUsecs
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetObjectSnapshotsResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List the snapshots for a given object.
      tags:
      - Object
  /mcm/data-protect/objects/stats:
    get:
      description: Get stats for a given object.
      operationId: GetMcmObjectStats
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the entity hash global id of the Object. This field
          is deprecated.
        in: query
        name: entityHash
        schema:
          type: string
      - description: Specifies the global id of the Object. This field is required
          because we only fetches snapshots stats for one object.
        in: query
        name: globalId
        required: true
        schema:
          type: string
      - description: Specifies a list of region ids. Only records from clusters having
          these region ids will be returned.
        explode: false
        in: query
        name: regionIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies the list of cluster identifiers. Format is clusterId:clusterIncarnationId.
          Only records from clusters having these identifiers will be returned.
        explode: false
        in: query
        name: clusterIdentifiers
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStats'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get stats for a given object.
      tags:
      - Object
  /mcm/data-protect/policies:
    get:
      description: Lists policies based on filtering query parameters.
      operationId: GetHeliosPolicies
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter policies by a list of policy ids.
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter policies by a list of policy names.
        explode: false
        in: query
        name: policyNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Type specifies the policy type of policies to be returned. If
          not specified, all types of policies are fetched.
        explode: false
        in: query
        name: types
        schema:
          items:
            enum:
            - GlobalPolicy
            - DMaaSPolicy
            - OnPremPolicy
            type: string
          nullable: true
          type: array
        style: form
      - description: |-
          Specifies the list of cluster identifiers.
          This is applicable only for type OnPremPolicy. The format is
          clusterId:clusterIncarnationId.
        explode: false
        in: query
        name: clusterIdentifiers
        schema:
          items:
            pattern: ^([0-9]+:[0-9]+)$
            type: string
          type: array
        style: form
      - description: List of Tenant Ids to filter from. This is applicable only for
          type OnPremPolicy.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            minLength: 2
            nullable: true
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeliosPoliciesResponseWithPagination'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List Policies based on provided filtering parameters.
      tags:
      - Policy
    post:
      description: Create a Global policy or a DMaaS on Helios.
      operationId: CreateHeliosPolicy
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeliosPolicyRequest'
        description: Request to create a Helios Policy.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeliosPolicyResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a Policy.
      tags:
      - Policy
      x-codegen-request-body-name: body
  /mcm/data-protect/policies/{id}:
    delete:
      description: Deletes a Policy based on given policy id.
      operationId: DeleteHeliosPolicy
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the Policy to delete.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete a Policy.
      tags:
      - Policy
    get:
      description: Returns the Protection Policy details based on provided Policy
        Id.
      operationId: GetHeliosPolicyById
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the Protection Policy to return.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeliosPolicyResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List details about a single Protection Policy.
      tags:
      - Policy
    put:
      description: Specifies the request to update the existing Protection Policy.
        On successful update, returns the updated policy object.
      operationId: UpdateHeliosPolicy
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the Protection Policy to update.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeliosPolicyRequest'
        description: Request to update a Protection Policy.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeliosPolicyResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a Protection Policy.
      tags:
      - Policy
      x-codegen-request-body-name: body
  /mcm/data-protect/sources:
    get:
      description: Get a List of Protection Sources.
      operationId: McmGetProtectionSources
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the list of environment type of the Protection Source.
        explode: false
        in: query
        name: environments
        schema:
          items:
            enum:
            - kVMware
            - kHyperV
            - kAcropolis
            - kKVM
            - kAWS
            - kGCP
            - kAzure
            - kPhysical
            - kPure
            - kNimble
            - kNetapp
            - kGenericNas
            - kIsilon
            - kFlashBlade
            - kGPFS
            - kElastifile
            - kO365
            - kHyperFlex
            - kKubernetes
            - kCassandra
            - kMongoDB
            - kCouchbase
            - kHdfs
            - kHive
            - kHBase
            - kUDA
            - kSQL
            - kOracle
            type: string
          type: array
        style: form
      - description: Specifies the list of ids to filter Protection Sources.
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by a list of region ids.
        explode: false
        in: query
        name: regionIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Whether to exclude Protection Sources protection stats in response.
        in: query
        name: excludeProtectionStats
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/McmSources'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a List of Protection Sources.
      tags:
      - Source
  /mcm/data-protect/sources/registrations:
    post:
      description: Register a Protection Source.
      operationId: McmRegisterProtectionSource
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the destination cluster id on which this Source needs
          to be registered.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/McmSourceRegistrationRequestParams'
        description: Specifies the parameters to register a Protection Source.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/McmSourceRegistration'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Register a Protection Source.
      tags:
      - Source
      x-codegen-request-body-name: body
  /mcm/data-protect/sources/registrations/{id}:
    delete:
      description: Delete Protection Source Registration.
      operationId: McmDeleteProtectionSourceRegistration
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the ID of the Protection Source Registration.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete Protection Source Registration.
      tags:
      - Source
    get:
      description: Get a Protection Source registration.
      operationId: McmGetProtectionSourceRegistration
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the Protection Source registration.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/McmSourceRegistration'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a Protection Source registration.
      tags:
      - Source
    put:
      description: Update Protection Source registration.
      operationId: UpdateProtectionSourceRegistrationMixin1
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the Protection Source registration.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/McmSourceRegistrationUpdateRequestParams'
        description: Specifies the parameters to update the registration.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/McmSourceRegistration'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update Protection Source registration.
      tags:
      - Source
      x-codegen-request-body-name: body
  /mcm/data-protect/sources/test-connection:
    post:
      description: Specifies the endpoint to test the source connectivity.
      operationId: McmTestSourceConnection
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the destination cluster id on which this Source needs
          to be registered.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceConnectionRequestParams'
        description: Specifies the parameters to test connectivity of a Protection
          Source.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceConnectionResponseParams'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Test connection to a source.
      tags:
      - Source
      x-codegen-request-body-name: body
  /mcm/idp/authenticate:
    post:
      description: Authenticate Identity Provider (IDP)
      operationId: AuthenticateIdp
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the parameters to authenticate an Identity Provider.
        in: query
        name: SAMLResponse
        required: true
        schema:
          type: string
      responses:
        "302":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create an Identity Provider Configuration.
      tags:
      - IdentityProvider
  /mcm/idps:
    get:
      description: Get the list of Identity Providers (IDP) configurations.
      operationId: GetIdps
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by a list of IDP ids.
        explode: false
        in: query
        name: ids
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Idps'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the list of IDP configurations.
      tags:
      - IdentityProvider
    post:
      description: Create Identity Provider (IDP) Configuration.
      operationId: CreateIdp
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateIdpRequest'
        description: Specifies the parameters to create an Identity Provider.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Idp'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create an Identity Provider Configuration.
      tags:
      - IdentityProvider
      x-codegen-request-body-name: body
  /mcm/idps/principals:
    get:
      description: List the IDP Principals which have been created.
      operationId: ListIdpPrincipals
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpPrincipals'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List IDP Principals
      tags:
      - IdentityProvider
    post:
      description: Create and IDP User or Group.
      operationId: CreateIdpPrincipal
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdpPrincipal'
        description: Specifies the parameters to create an IDP Principal.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpPrincipal'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create an Identity Provider Configuration.
      tags:
      - IdentityProvider
      x-codegen-request-body-name: body
  /mcm/idps/principals/{sid}:
    delete:
      description: Returns Success if the Identity Provider Principal is deleted.
      operationId: DeleteIdpPrincipal
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique SID of the Principal.
        in: path
        name: sid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete an IDP Principal.
      tags:
      - IdentityProvider
    get:
      description: List the IDP Principals which have been created.
      operationId: GetIdpPrincipalBySid
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the ID of the IDP Principal.
        in: path
        name: sid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpPrincipal'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get IDP Principal by SID
      tags:
      - IdentityProvider
    put:
      description: Update the specified IDP Principal
      operationId: UpdateIdpPrincipal
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the SID of the IDP Principal.
        in: path
        name: sid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdpPrincipal'
        description: Specifies the parameters to update IDP Principal.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpPrincipal'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update IDP Principal.
      tags:
      - IdentityProvider
      x-codegen-request-body-name: body
  /mcm/idps/{id}:
    delete:
      description: Returns Success if the Identity Provider configuration is deleted.
      operationId: DeleteIdp
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the IDP.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete a IDP configuration.
      tags:
      - IdentityProvider
    get:
      description: Returns a specific Identity Provider configuration.
      operationId: GetIdpById
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the IDP.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Idp'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List details about single Identity Provider configuration.
      tags:
      - IdentityProvider
    put:
      description: Update the specified Identity Provider Configuration.
      operationId: UpdateIdp
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the IDP configuration.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateIdpRequest'
        description: Specifies the parameters to update IDP configuration.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Idp'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update IDP Configuration.
      tags:
      - IdentityProvider
      x-codegen-request-body-name: body
  /mcm/mfa:
    get:
      description: Gets the current status for Multi factor authentication with Salesforce
      operationId: GetMfaPreferences
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeliosMfa'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get MFA Preferences
      tags:
      - MFA
    put:
      description: Enables/Disables Multi factor authentication with Salesforce
      operationId: UpdateMfaPreferences
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeliosMfa'
        description: Specifies the parameters to support MFA.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeliosMfa'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update MFA Preferences
      tags:
      - MFA
      x-codegen-request-body-name: body
  /mcm/search/indexed-objects:
    post:
      description: Search for indexed objects like files, emails etc across clusters.
      operationId: GlobalSearchIndexedObjects
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeliosSearchIndexedObjectsRequest'
        description: Specifies the parameters to search for indexed objects.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeliosSearchIndexedObjectsResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Search for indexed objects.
      tags:
      - Search
      x-codegen-request-body-name: body
  /mcm/security/anomalies:
    get:
      description: Get the anomaly details.
      operationId: GetAnomalyAlertNotifLevel
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnomalyAlert'
          description: Returns the response of the notification operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the anomaly details.
      tags:
      - Security
    put:
      description: Update the anomaly settings such as notification threshold.
      operationId: UpdateAnomalyAlertNotifLevel
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnomalyAlert'
        description: Specifies the parameters to update an account notification threshold
        required: true
      responses:
        "204":
          content: {}
          description: Updated successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Updates the anomaly notification threshold.
      tags:
      - Security
      x-codegen-request-body-name: body
  /mcm/ssl-certificate:
    get:
      description: Get the Helios SSL certificate.
      operationId: GetHeliosSslCertificate
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SslCertificateParams'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get the Helios SSL Certificate.
      tags:
      - Certificate
  /mcm/stats/alerts-summary:
    get:
      description: Get alerts summary grouped by category.
      operationId: GetHeliosAlertsSummary
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the list of cluster identifiers. Format is clusterId:clusterIncarnationId.
        explode: false
        in: query
        name: clusterIdentifiers
        schema:
          items:
            type: string
          nullable: true
          type: array
          x-go-name: ClusterIdentifiers
        style: form
        x-go-name: ClusterIdentifiers
      - description: Filter by start time. Specify the start time as a Unix epoch
          Timestamp (in microseconds). By default it is current time minus a day.
        in: query
        name: startTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Filter by end time. Specify the end time as a Unix epoch Timestamp
          (in microseconds). By default it is current time.
        in: query
        name: endTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Specifies list of alert states to filter alerts by. If not specified,
          only open alerts will be used to get summary.
        explode: false
        in: query
        name: statesList
        schema:
          items:
            enum:
            - kResolved
            - kOpen
            - kNote
            - kSuppressed
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsSummaryResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get alerts summary on Helios.
      tags:
      - Alert
  /mcm/stats/policies/last-run:
    get:
      description: Compute stats of last Protection Run of Protection Policies.
      operationId: McmGetPolicyLastRunStats
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by a list of region ids.
        explode: false
        in: query
        name: regionIds
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/McmGetPolicyLastRunStatsResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Compute stats of last Protection Run of Protection Policies.
      tags:
      - Stats
  /mcm/stats/protection-runs/last-run:
    get:
      description: Compute stats of last Protection Run across all objects.
      operationId: McmGetProtectionRunLastRunStats
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by a list of region ids.
        explode: false
        in: query
        name: regionIds
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/McmGetProtectionLastRunStatsResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Compute stats of last Protection Run across all objects.
      tags:
      - Stats
  /mcm/tenants:
    get:
      operationId: GetHeliosTenants
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: |-
          Specifies the list of cluster identifiers. The format is
          clusterId:clusterIncarnationId.
        explode: false
        in: query
        name: clusterIdentifiers
        schema:
          items:
            pattern: ^([0-9]+:[0-9]+)$
            type: string
          type: array
        style: form
      - description: List of Tenant Ids to filter from.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            minLength: 2
            nullable: true
            type: string
          type: array
        style: form
      - description: |-
          Status of the tenant on Helios.
          Only Active and Inactive are returned if this field is not specified.
          If specified, only helios managed tenants are returned.
        explode: false
        in: query
        name: statuses
        schema:
          items:
            enum:
            - Active
            - Inactive
            - MarkedForDeletion
            - Deleted
            nullable: true
            type: string
          type: array
        style: form
      - description: Wether managed on helios or not.
        in: query
        name: managedOnHelios
        schema:
          nullable: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTenantData'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a list of tenants.
      tags:
      - Tenant
    post:
      operationId: CreateHeliosTenant
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTenantParams'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeliosTenant'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a new Tenant on Helios.
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /mcm/tenants/object-ids:
    post:
      description: Get the object IDs for a given DMaaS tenant given a list of object
        hashes.
      operationId: McmGetTenantObjectIds
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/McmTenantObjectIdsParams'
        description: Specifies the parameters to fetch object IDs.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/McmTenantObjectIds'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: GetTenantObjectIds
      tags:
      - Object
      x-cohesity-internal: true
      x-codegen-request-body-name: body
  /mcm/tenants/stats:
    get:
      description: |-
        Get Statistics on Sources and Storage Domains assigned to the
        Tenants belonging to an account.
      operationId: GetTenantStats
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: List of Tenant Ids to filter from.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            pattern: ^([a-zA-Z0-9]+/)$
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeliosTenantsStats'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Tenant Statistics.
      tags:
      - Tenant
  /mcm/tenants/{id}:
    delete:
      operationId: DeleteHeliosTenant
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - in: path
        name: id
        required: true
        schema:
          minLength: 2
          pattern: ^([a-zA-Z0-9]+/)$
          type: string
      - description: Wether or not to delete the tenants on the cluster, default is
          true.
        in: query
        name: deleteClusterTenants
        schema:
          default: true
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete a Tenant on Helios.
      tags:
      - Tenant
    patch:
      operationId: UpdateHeliosTenant
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - in: path
        name: id
        required: true
        schema:
          minLength: 2
          nullable: true
          pattern: ^([a-zA-Z0-9]+/)$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTenantParams'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeliosTenant'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update Tenant properties on Helios.
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /mcm/tenants/{id}/actions:
    post:
      description: Perform actions like activate and deactivate on a given Tenant
        on Helios.
      operationId: PerformHeliosTenantAction
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: The Tenant id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantActionBody'
        description: Specifies the parameters to perform an action on a Tenant.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeliosTenant'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Perform actions on a Helios Tenant.
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /mcm/tenants/{id}/assignments:
    put:
      description: |-
        Assign properties like policies etc. to a tenant on a given cluster.
        The API expects a list of all the assignments (policies etc.) that are
        supposed to be associated to the Tenant. The list of assignments passed
        get assigned to the Tenant and anything else that was already assigned
        gets unassigned.
      operationId: HeliosAssignPropertiesToTenant
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: The Tenant id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeliosTenantAssignmentsParams'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeliosTenantAssignmentsResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Assign properties to a tenant.
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /mcm/tenants/{id}/clusters:
    post:
      operationId: AssignClusterToTenant
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - in: path
        name: id
        required: true
        schema:
          minLength: 2
          nullable: true
          pattern: ^([a-zA-Z0-9]+/)$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignClusterToTenantParamsBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeliosTenant'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Assign a Cluster to a tenant.
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /mcm/tenants/{id}/manage:
    post:
      description: For a specific, TenantId enable it to be managed by Helios.
      operationId: ConfirmTenant
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - in: path
        name: id
        required: true
        schema:
          minLength: 2
          nullable: true
          pattern: ^([a-zA-Z0-9]+/)$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmTenantParamsBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeliosTenant'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Enable Helios Management for Tenant.
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /mcm/users:
    get:
      description: Get helios users
      operationId: GetUsersMixin1
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Users.
      tags:
      - User
  /mcm/users/tenant-access:
    get:
      description: List Tenant Access
      operationId: GetTenantAccess
      parameters:
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: List of Tenant Ids to filter from.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            minLength: 2
            nullable: true
            type: string
          type: array
        style: form
      - description: |-
          By Default, only valid tenant access are returned. If set to true,
          inactive or ineffective or expired tenant access would be returned
          as well.
        in: query
        name: includeInactive
        schema:
          nullable: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantAccessResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a list of available tenant access available to the logged in User.
      tags:
      - User
  /mfa-config:
    get:
      description: Returns the current MFA configuration for the cluster.
      operationId: GetMFAConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MfaConfigInfo'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Returns the current MFA configuration.
      tags:
      - MFA
    put:
      description: Stores the updated MFA configuration for the cluster.
      operationId: UpdateMFAConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MfaConfigInfo'
        description: The update request for the MFA Settings
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MfaConfigInfo'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Stores the updated MFA configuration.
      tags:
      - MFA
      x-codegen-request-body-name: body
  /network-interfaces:
    get:
      description: Get a list of interfaces present on the node or cluster.
      operationId: GetNetworkInterfaces
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterInterfaces'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get list of interfaces
      tags:
      - Platform
  /nis-netgroups:
    get:
      description: Get a list of NIS netgroups.
      operationId: GetNisNetgroups
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by a list of NIS netgroup names.
        explode: false
        in: query
        name: netgroupNames
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NisNetgroups'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a list of NIS netgroups.
      tags:
      - NetworkInformationService
    post:
      description: Create an NIS netgroup.
      operationId: CreateNisNetgroup
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NisNetgroup'
        description: Specifies the parameters to create an NIS netgroup.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NisNetgroup'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create an NIS netgroup.
      tags:
      - NetworkInformationService
      x-codegen-request-body-name: body
  /nis-netgroups/{name}:
    delete:
      description: Delete an NIS netgroup by name.
      operationId: DeleteNisNetgroupByName
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies name of the NIS netgroup.
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NisNetgroup'
        description: Request to delete the NIS netgroup.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete an NIS netgroup by name.
      tags:
      - NetworkInformationService
      x-codegen-request-body-name: body
    get:
      description: Get an NIS netgroup by name.
      operationId: GetNisNetgroupByName
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies name of the NIS netgroup.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NisNetgroup'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get an NIS netgroup by name.
      tags:
      - NetworkInformationService
    put:
      description: Update an NIS netgroup by name.
      operationId: UpdateNisNetgroupByName
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies name of the NIS netgroup.
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NisNetgroup'
        description: Request to update the NIS netgroup.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NisNetgroup'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update an NIS netgroup by name.
      tags:
      - NetworkInformationService
      x-codegen-request-body-name: body
  /nis-providers:
    get:
      description: Get a list of NIS Providers.
      operationId: GetNisProviders
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by a list of NIS domain names.
        explode: false
        in: query
        name: domainNames
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NisProviders'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a list of NIS Providers.
      tags:
      - NetworkInformationService
    post:
      description: Create an NIS Provider.
      operationId: CreateNisProvider
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NisProvider'
        description: Specifies the parameters to create an NIS provider entry.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NisProvider'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create an NIS Provider.
      tags:
      - NetworkInformationService
      x-codegen-request-body-name: body
  /nis-providers/{domain}:
    delete:
      description: Delete an NIS Provider by domain name.
      operationId: DeleteNisProviderByDomainName
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies domain name of an NIS Provider.
        in: path
        name: domain
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete an NIS Provider by domain name.
      tags:
      - NetworkInformationService
    get:
      description: Get an NIS Provider by domain name.
      operationId: GetNisProviderByDomainName
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies domain of an NIS Provider.
        in: path
        name: domain
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NisProvider'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get an NIS Provider by domain name.
      tags:
      - NetworkInformationService
    put:
      description: Update an NIS Provider by domain name.
      operationId: UpdateNisProviderByDomainName
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies domain name of an NIS Provider.
        in: path
        name: domain
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NisProvider'
        description: Request to update an NIS Provider.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NisProvider'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update an NIS Provider by domain name.
      tags:
      - NetworkInformationService
      x-codegen-request-body-name: body
  /node-groups:
    get:
      description: List node groups.
      operationId: GetNodeGroups
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter node groups by a list of node group names.
        explode: false
        in: query
        name: groupNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter node groups by a node group type.
        in: query
        name: groupType
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeGroupResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List Node Groups based on provided filtering parameters.
      tags:
      - NodeGroup
    post:
      description: Create the Node Group and returns the newly created node group
        object.
      operationId: CreateNodeGroup
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeGroupRequest'
        description: Request to create a Node Group.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeGroupResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a Node Group.
      tags:
      - NodeGroup
      x-codegen-request-body-name: body
  /node-groups/{groupName}:
    delete:
      description: Deletes a Node Group based on given node group name.
      operationId: DeleteNodeGroup
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique name of the Node Group to delete.
        in: path
        name: groupName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete a Node Group.
      tags:
      - NodeGroup
    get:
      description: Returns Node Group for given Group Name.
      operationId: GetNodeGroupByName
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of Node Group to return.
        in: path
        name: groupName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeGroupResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List Node Groups for a given Group Name.
      tags:
      - NodeGroup
    put:
      description: Specifies the request to update the existing Node Group. On successful
        update, returns the updated node group object.
      operationId: UpdateNodeGroup
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique name of the Node Group to update.
        in: path
        name: groupName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeGroupRequest'
        description: Request to update a Node Group.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeGroupResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a Node Group.
      tags:
      - NodeGroup
      x-codegen-request-body-name: body
  /node-power:
    post:
      description: Reboot or shutdown nodes in cluster.
      operationId: SetNodePower
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodePowerOperation'
        description: Specifies the reboot or shutdown operation.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Reboot or shutdown nodes in cluster.
      tags:
      - Platform
      x-codegen-request-body-name: body
  /nodes/{id}/identify:
    post:
      description: Turn on/off LED light of a node to identify.
      operationId: Identify node
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies id of node to identify.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeIdentifyParams'
        description: Specifies the parameter to identify node.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeIdentifyParams'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Identify node
      tags:
      - Platform
      x-codegen-request-body-name: body
  /nodes/{id}/remove:
    post:
      description: Mark node for removal or Cancel if a node is already marked for
        removal.
      operationId: MarkNodeRemoval
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies id of node to cancel removal.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeRemovalParams'
        description: Specifies parameters to initiate/cancel node removal .
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveNode'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Mark Node for removal
      tags:
      - Platform
      x-codegen-request-body-name: body
  /patch-management/applied-patches:
    get:
      description: Returns a list of currently applied patches that are running on
        the cluster.
      operationId: GetAppliedPatches
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies optional service name whose current patch is returned.
          If it is not specified, all the applied patches are returned.
        in: query
        name: service
        schema:
          type: string
      - description: Specifies whether to return the details of all the fixes in the
          patch. By default, returns only the most recent fix made for the service
          in the patch.
        in: query
        name: includeDetails
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppliedPatches'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get applied patches
      tags:
      - Patch
    post:
      description: Revert an applied service patch and its dependencies.
      operationId: RevertPatches
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevertPatchesRequest'
        description: Request to revert patches.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePatchLevels'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Revert patches
      tags:
      - Patch
      x-codegen-request-body-name: body
  /patch-management/available-patches:
    get:
      description: Returns a list of patches that are available and ready to apply
        on the cluster.
      operationId: GetAvailablePatches
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies optional service name whose available patch is returned.
          If it is not specified, available patches for all the serivces are returned.
        in: query
        name: service
        schema:
          type: string
      - description: Specifies whether to return the description of all the fixes
          in the patch. By default, returns only the most recent fix made for the
          service in the patch.
        in: query
        name: includeDetails
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailablePatches'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get available patches
      tags:
      - Patch
    post:
      description: Apply a service patch and its dependencies.
      operationId: ApplyPatches
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyPatchesRequest'
        description: Request to apply patches.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePatchLevels'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Apply patches
      tags:
      - Patch
      x-codegen-request-body-name: body
    put:
      description: Import a patch or a hotfix to the cluster.
      operationId: ImportPatches
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                fileName:
                  type: string
                checksum:
                  type: string
                patch:
                  format: binary
                  type: string
              required:
              - checksum
              - fileName
              - patch
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchesDetails'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Import patches
      tags:
      - Patch
  /patch-management/operation-status:
    get:
      description: Returns the status of the current or the last patch operation.
        There can be only one active patch operation at any given time.
      operationId: GetPatchOperationStatus
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies whether to return details of all service patch opertions
          on all nodes. By default, returns whether there is a patch operation in
          progress or not.
        in: query
        name: includeDetails
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchOperationStatus'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get patch operation status
      tags:
      - Patch
  /patch-management/patches-history:
    get:
      description: Get the history of all the patch management operations.
      operationId: GetPatchesHistory
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies optional service name whose patch operation history
          is returned. If it is not specified, patch operations of all the serivces
          are returned.
        in: query
        name: service
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchesHistory'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get patches history
      tags:
      - Patch
  /privileges:
    get:
      description: Get Privileges.
      operationId: GetPrivileges
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by a list of Privilege names.
        explode: false
        in: query
        name: names
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Privileges'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Privileges.
      tags:
      - Privilege
  /racks:
    delete:
      description: Delete all the racks.
      operationId: DeleteRacks
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete all the racks.
      tags:
      - Platform
    get:
      description: Get list of all racks that are part of cluster.
      operationId: GetRacks
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Racks'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get list of racks
      tags:
      - Platform
    patch:
      description: Updates list of racks with name, chassis list or/and location
      operationId: UpdateRacks
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Racks'
        description: Specifies the parameters to update racks.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Racks'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update racks
      tags:
      - Platform
      x-codegen-request-body-name: body
    post:
      description: Create list of racks and optionally also assign list of chassis
        to each rack
      operationId: CreateRacks
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Racks'
        description: Specifies the parameters to create racks.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Racks'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create racks
      tags:
      - Platform
      x-codegen-request-body-name: body
  /racks/{id}:
    delete:
      description: Delete a given rack by id.
      operationId: DeleteRackById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the rack.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete a rack by id.
      tags:
      - Platform
    get:
      description: Get a rack info by id.
      operationId: GetRackById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of rack.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rack'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a rack by rack id.
      tags:
      - Platform
    patch:
      description: Update selected properties of a rack given by id.
      operationId: UpdateRackById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of rack.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rack'
        description: Specifies the parameters to update rack.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rack'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      tags:
      - Platform
      x-codegen-request-body-name: body
  /remote-storage:
    get:
      description: Get summary about list of registered remote storage servers.
      operationId: GetRegisteredRemoteStorageList
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisteredRemoteStorageList'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Registered Remote Storage Servers List
      tags:
      - RemoteStorage
    post:
      description: Register a remote storage to be used for disaggregated storage.
      operationId: RegisterNewRemoteStorage
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteStorageInfo'
        description: Specifies the parameters to register a remote storage management
          server.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteStorageInfo'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Register Remote Storage
      tags:
      - RemoteStorage
      x-codegen-request-body-name: body
  /remote-storage/{id}:
    delete:
      description: Delete remote storage registration.
      operationId: DeleteRemoteStorageRegistration
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the registration id of the registered remote storage.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete Remote Storage Registration
      tags:
      - RemoteStorage
    get:
      description: Get details of remote storage given by id.
      operationId: GetRemoteStorageDetails
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the registered remote storage.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: Specifies whether to include available capacity on remote storage.
        in: query
        name: includeAvailableSpace
        schema:
          default: false
          type: boolean
          x-go-name: IncludeAvailableSpace
        x-go-name: IncludeAvailableSpace
      - description: Specifies whether to include available data vips on remote storage.
        in: query
        name: includeAvailableDataVips
        schema:
          default: false
          type: boolean
          x-go-name: IncludeAvailableDataVips
        x-go-name: IncludeAvailableDataVips
      - description: Includes flashblade specific info like name, software os and
          version of pure flashblade.
        in: query
        name: includeArrayInfo
        schema:
          default: false
          type: boolean
          x-go-name: IncludeArrayInfo
        x-go-name: IncludeArrayInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteStorageInfo'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get remote storage details
      tags:
      - RemoteStorage
    patch:
      description: Update Registered Remote Storage Config.
      operationId: UpdateRemoteStorageRegistration
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the registration id of the registered remote storage.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteStorageInfo'
        description: Specifies the parameters to update the registration.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteStorageInfo'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update Remote Storage Config
      tags:
      - RemoteStorage
      x-codegen-request-body-name: body
  /roles:
    get:
      description: Get Roles.
      operationId: GetRoles
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a list of Role names.
        explode: false
        in: query
        name: names
        schema:
          items:
            type: string
          type: array
        style: form
      - description: TenantIds contains ids of the tenants for which Roles are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the response will include Roles which were created by
          all tenants which the current user has permission to see. If false, then
          only Roles created by the current user will be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Roles'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Roles.
      tags:
      - Role
    post:
      description: Create a Role.
      operationId: CreateRole
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleParams'
        description: Specifies the request body to create a Role.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a Role.
      tags:
      - Role
      x-codegen-request-body-name: body
  /roles/{name}:
    delete:
      description: Delete a Role.
      operationId: DeleteRole
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the name of Role to delete.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete a Role.
      tags:
      - Role
    put:
      description: Update a Role.
      operationId: UpdateRole
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the name of Role to update.
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleParams'
        description: Specifies the request body to update a Role.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a Role.
      tags:
      - Role
      x-codegen-request-body-name: body
  /security-config:
    get:
      description: Get cluster security settings.
      operationId: GetSecurityConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityConfigResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get cluster security settings.
      tags:
      - Security
    put:
      description: Update cluster security settings.
      operationId: UpdateSecurityConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSecurityConfigRequest'
        description: Specifies the parameters to update security config.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityConfigResponse'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update cluster security settings.
      tags:
      - Security
      x-codegen-request-body-name: body
  /security-principals:
    get:
      description: Get Security Principals
      operationId: GetSecurityPrincipals
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a list of SIDs.
        explode: false
        in: query
        name: sids
        required: true
        schema:
          items:
            pattern: ^(S\-\d\-(\d+\-){1,14}\d+)$
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPrincipals'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Security Principals.
      tags:
      - User
  /security/ciphers:
    get:
      description: Gets the list of ciphers enabled on the cluster.
      operationId: GetCiphers
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiphersResp'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Gets the list of ciphers enabled on the cluster.
      tags:
      - Security
    post:
      description: Enable/Disable a list of ciphers on the cluster.
      operationId: ModifyCiphers
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyCiphersRequestBody'
        description: Enable/Disable ciphers.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiphersResp'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Enable/Disable a list of ciphers on the cluster. Iris must be restarted
        for the change to take effect.
      tags:
      - Security
      x-codegen-request-body-name: body
  /send-email-otp:
    post:
      description: Creates a new One Time Password for the user email
      operationId: SendEmailOtp
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "204":
          content: {}
          description: Successfully sent an email to the configured address
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Creates a new OTP to be sent to the user email.
      tags:
      - MFA
  /stats/protection-runs:
    get:
      description: Get statistics of protection runs.
      operationId: GetProtectionRunsStats
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specify the start time as a Unix epoch Timestamp (in microseconds),
          only runs executing after this time will be counted. By default it is current
          time minus a day.
        in: query
        name: startTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Specify the end time as a Unix epoch Timestamp (in microseconds),
          only runs executing before this time will be counted. By default it is current
          time.
        in: query
        name: endTimeUsecs
        schema:
          format: int64
          type: integer
      - description: Specifies a list of status, runs matching the status will be
          returned. 'Running' indicates that the run is still running. 'Canceled'
          indicates that the run has been canceled. 'Failed' indicates that the run
          has failed. 'Succeeded' indicates that the run has finished successfully.
          'SucceededWithWarning' indicates that the run finished successfully, but
          there were some warning messages.
        explode: false
        in: query
        name: runStatus
        schema:
          items:
            enum:
            - Running
            - Canceled
            - Failed
            - Succeeded
            - SucceededWithWarning
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProtectionRunsStatusResponseBody'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get statistics of protection runs.
      tags:
      - Stats
  /storage-domains:
    get:
      description: Get Storage Domains.
      operationId: GetStorageDomains
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Filter by a list of Storage Domain ids.
        explode: false
        in: query
        name: ids
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Filter by a list of Storage Domain names.
        explode: false
        in: query
        name: names
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by a list of cluster partition ids.
        explode: false
        in: query
        name: clusterPartitionIds
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: TenantIds contains ids of the tenants for which Storage Domains
          are to be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: IncludeTenants specifies if Storage Domains of all the tenants
          under the hierarchy of the logged in user's organization should be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: Whether to include Storage Domain stats in response.
        in: query
        name: includeStats
        schema:
          type: boolean
      - description: Whether to include Storage Domain time series schema in response.
        in: query
        name: includeTimeSeriesSchema
        schema:
          type: boolean
      - description: Whether to include Storage Domain file count by size.
        in: query
        name: includeFileCountBySize
        schema:
          type: boolean
      - description: If true, the names in viewNames are matched by any partial rather
          than exactly matched.
        in: query
        name: matchPartialNames
        schema:
          type: boolean
      - description: Specifies a view template id for Storage Domain. Storage Domains
          with same deduplication and compression settings will be recommended.
        in: query
        name: viewTemplateId
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageDomains'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Storage Domains.
      tags:
      - StorageDomain
    post:
      description: Create a Storage Domain.
      operationId: CreateStorageDomain
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStorageDomainParam'
        description: Specified the request to create a Storage Domain.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageDomain'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a Storage Domain.
      tags:
      - StorageDomain
      x-codegen-request-body-name: body
  /storage-domains/{id}:
    delete:
      description: Delete a Storage Domain.
      operationId: DeleteStorageDomain
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specified the Storage Domain id to delete.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete a Storage Domain.
      tags:
      - StorageDomain
    get:
      description: Get a Storage Domain by id.
      operationId: GetStorageDomainById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specified the Storage Domain id to fetch.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: Whether to include Storage Domain stats in response.
        in: query
        name: includeStats
        schema:
          type: boolean
      - description: Whether to include Storage Domain time series schema in response.
        in: query
        name: includeTimeSeriesSchema
        schema:
          type: boolean
      - description: Whether to include Storage Domain file count by size.
        in: query
        name: includeFileCountBySize
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageDomain'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a Storage Domain by id.
      tags:
      - StorageDomain
    put:
      description: Update a Storage Domain.
      operationId: UpdateStorageDomain
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specified the Storage Domain id to update.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStorageDomainParam'
        description: Specified the request to update a Storage Domain.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageDomain'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a Storage Domain.
      tags:
      - StorageDomain
      x-codegen-request-body-name: body
  /support-channel-config:
    get:
      description: Get support channel configuration.
      operationId: GetSupportChannelConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportChannelConfig'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get support channel configuration.
      tags:
      - Platform
    put:
      description: Update support channel configuration.
      operationId: UpdateSupportChannelConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupportChannelConfig'
        description: Specifies the support channel configuration.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportChannelConfig'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update support channel configuration.
      tags:
      - Platform
      x-codegen-request-body-name: body
  /support-user/mfa:
    get:
      description: Returns the current MFA configuration for support user.
      operationId: GetSupportMFAConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportMfaConfigInfo'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Returns the current MFA configuration.
      tags:
      - MFA
    patch:
      description: Update MFA configuration for support user.
      operationId: UpdateSupportMFAConfig
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupportMfaConfigInfo'
        description: The update request for the MFA Settings
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMFAResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Stores the updated MFA configuration.
      tags:
      - MFA
      x-codegen-request-body-name: body
  /support-user/verify-totp:
    post:
      description: Verify totp code for support user.
      operationId: VerifySupportUserTotp
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyTotpRequest'
        description: Totp code to be verified.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyTotpResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Verify the totp code for support user.
      tags:
      - MFA
      x-codegen-request-body-name: body
  /syslog:
    delete:
      description: Delete all syslog servers.
      operationId: RemoveSyslogServers
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Remove syslog servers
      tags:
      - Syslog
    get:
      description: Get list of syslog servers.
      operationId: GetSyslogServers
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogServers'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get list of syslog servers.
      tags:
      - Syslog
    post:
      description: Add a new syslog server
      operationId: AddSyslogServer
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyslogServer'
        description: Specifies parameters to add syslog server.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogServer'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Add Syslog Server
      tags:
      - Syslog
      x-codegen-request-body-name: body
  /syslog/audit-tags:
    get:
      description: Get cluster audit tags.
      operationId: GetSyslogAuditTags
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogAuditTag'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get cluster audit tags.
      tags:
      - Syslog
    post:
      description: Update cluster audit tags.
      operationId: UpdateSyslogAuditTags
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyslogAuditTag'
        description: Specifies syslog audit tag to update.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogAuditTag'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update cluster audit tags.
      tags:
      - Syslog
      x-codegen-request-body-name: body
  /syslog/program-names:
    get:
      description: Get supported program names to configure for a syslog server.
      operationId: GetSupportedSyslogProgramNames
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get supported program names.
      tags:
      - Syslog
  /syslog/{id}:
    delete:
      description: Delete syslog server by id.
      operationId: RemoveSyslogServer
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a unique id of the syslog server.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Remove syslog server by id
      tags:
      - Syslog
    get:
      description: Get a syslog server by id.
      operationId: GetSyslogServerById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of syslog server.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogServer'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a syslog server by id.
      tags:
      - Syslog
    patch:
      description: Patch syslog server by id.
      operationId: PatchSyslogServerById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of syslog server.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyslogServer'
        description: Specifies the body of syslog server fields to patch.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogServer'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Patch a syslog server by id.
      tags:
      - Syslog
      x-codegen-request-body-name: body
    put:
      description: Update syslog server by id.
      operationId: UpdateSyslogServerById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of syslog server.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyslogServer'
        description: Specifies the body of syslog server body to update.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogServer'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a syslog server by id.
      tags:
      - Syslog
      x-codegen-request-body-name: body
  /syslog/{id}/status:
    get:
      description: Check syslog server reachability by given Id.
      operationId: GetSyslogServerStatusById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of syslog server.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogServerStatus'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a syslog server reachability status.
      tags:
      - Syslog
  /tags:
    get:
      description: |-
        If no parameters are specified, all tags are returned.
        Specifying parameters filters the results that are returned.
      operationId: GetTags
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: |-
          Filter by a list of Tag Ids. If Ids are mentioned all other fields
          will be ignored.
        explode: false
        in: query
        name: ids
        schema:
          items:
            pattern: ^\d+:\d+:[A-Z0-9-]+$
            type: string
          type: array
        style: form
      - description: Filter by a list of Tag names.
        explode: false
        in: query
        name: names
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by a list of Namespaces.
        explode: false
        in: query
        name: namespaces
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          TenantIds contains ids of the tenants for which tags are to be
          returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          IncludeTenants specifies if tags of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
          False, by default.
        in: query
        name: includeTenants
        schema:
          type: boolean
      - description: |-
          Specifies if tags marked for deletion should be shown. These are
          tags which are undergoing deletion. False, by default.
        in: query
        name: includeMarkedForDeletion
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTagsResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get tags based on filters.
      tags:
      - Tag
    post:
      description: Creates a Tag.
      operationId: CreateTag
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        description: Request to create a Tag.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a Tag
      tags:
      - Tag
      x-codegen-request-body-name: body
  /tags/{id}:
    delete:
      description: Deletes a Tag by id.
      operationId: DeleteTag
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the Id of the tag.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:[A-Z0-9-]+$
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete a Tag
      tags:
      - Tag
    get:
      description: Get Tag by id.
      operationId: GetTagById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the Id of the tag.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:[A-Z0-9-]+$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Tag by id.
      tags:
      - Tag
    put:
      description: Updates a Tag by id.
      operationId: UpdateTag
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the Id of the tag.
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+:\d+:[A-Z0-9-]+$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        description: Request to update a tag.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a Tag
      tags:
      - Tag
      x-codegen-request-body-name: body
  /tdm/objects:
    get:
      description: Get all TDM objects matching specified optional filter criteria.
      operationId: GetTdmObjects
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Get the objects matching specifies IDs.
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Get the objects matching specified environments.
        explode: false
        in: query
        name: environments
        schema:
          items:
            enum:
            - kSQL
            - kOracle
            type: string
          type: array
        style: form
      - description: Get the objects matching specified name.
        in: query
        name: name
        schema:
          type: string
      - description: Get the objects belonging to the specified TDM task IDs.
        explode: false
        in: query
        name: taskIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Get the objects matching specified statuses.
        explode: false
        in: query
        name: statuses
        schema:
          items:
            enum:
            - scheduled
            - inProgress
            - succeeded
            - failed
            - canceled
            type: string
          type: array
        style: form
      - description: Get the next set of objects by specifying the cookie string,
          as received from the server in the last call.
        in: query
        name: paginationCookie
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TdmObjects'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get all TDM objects
      tags:
      - TestDataManagement
  /tdm/objects/{id}:
    get:
      description: Get a TDM object by specifying its ID.
      operationId: GetTdmObjectById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the ID of the TDM object.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TdmObject'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get TDM object by ID
      tags:
      - TestDataManagement
  /tdm/objects/{id}/timeline-events:
    get:
      description: Get the collection of timeline events of a TDM object by specifying
        its ID.
      operationId: GetTdmTimelineEventsByObjectId
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the ID of the TDM object.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Get the events created after the specified time (in usecs from
          epoch).
        in: query
        name: createdAfter
        schema:
          format: int64
          type: integer
      - description: Get the events created before the specified time (in usecs from
          epoch).
        in: query
        name: createdBefore
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TdmObjectTimelineEvents'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get timeline events of object
      tags:
      - TestDataManagement
  /tdm/snapshots/{id}:
    delete:
      description: Delete a snapshot by specifying its ID.
      operationId: DeleteTdmSnapshotById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the ID of the snapshot.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete a snapshot by ID
      tags:
      - TestDataManagement
    put:
      description: Update the details of a snapshot by specifying its ID.
      operationId: UpdateTdmSnapshotById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the ID of the snapshot.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTdmSnapshotRequest'
        description: Specifies the parameters to update the snapshot.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TdmSnapshot'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a snapshot by ID
      tags:
      - TestDataManagement
      x-codegen-request-body-name: body
  /tdm/tasks:
    get:
      description: Get all the TDM tasks matching specified optional filter criteria.
      operationId: GetTdmTasks
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Get the tasks matching specified IDs.
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Get the tasks matching specified actions.
        explode: false
        in: query
        name: actions
        schema:
          items:
            enum:
            - clone
            - teardown
            - refresh
            - snapshot
            - rewind
            type: string
          type: array
        style: form
      - description: Get the tasks matching specified environments.
        explode: false
        in: query
        name: environments
        schema:
          items:
            enum:
            - kSQL
            - kOracle
            type: string
          type: array
        style: form
      - description: Get the tasks created after the specified time (in usecs from
          epoch).
        in: query
        name: createdAfterUsecs
        schema:
          format: int64
          type: integer
      - description: Get the tasks created before the specified time (in usecs from
          epoch).
        in: query
        name: createdBeforeUsecs
        schema:
          format: int64
          type: integer
      - description: Get the tasks matching specified statuses.
        explode: false
        in: query
        name: statuses
        schema:
          items:
            enum:
            - scheduled
            - inProgress
            - succeeded
            - failed
            - canceled
            type: string
          type: array
        style: form
      - description: Get the tasks for the specified TDM object IDs.
        explode: false
        in: query
        name: objectIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Get the next set of tasks by specifying the cookie string, as
          received from the server in the last call.
        in: query
        name: paginationCookie
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TdmTasks'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get all TDM tasks
      tags:
      - TestDataManagement
    post:
      description: Create a task for the Test Data Management (TDM) workflow.
      operationId: CreateTdmTask
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTdmTaskRequest'
        description: Specifies the parameters to create a TDM task.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TdmTask'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a TDM task
      tags:
      - TestDataManagement
      x-codegen-request-body-name: body
  /tdm/tasks/{id}:
    get:
      description: Get a TDM task by ID.
      operationId: GetTdmTaskById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the ID of the TDM task.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TdmTask'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a TDM task by ID
      tags:
      - TestDataManagement
  /tenants:
    get:
      operationId: ListTenants
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: List of tenantIds to filter.
        explode: false
        in: query
        name: ids
        schema:
          items:
            nullable: true
            type: string
          type: array
        style: form
      - description: |-
          Filter by current status of tenant.
          If left blank, only active and inactive tenants are returned.
        explode: false
        in: query
        name: statuses
        schema:
          items:
            enum:
            - Active
            - Inactive
            - MarkedForDeletion
            - Deleted
            nullable: true
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantsInfo'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a list of Tenants.
      tags:
      - Tenant
    post:
      operationId: CreateTenant
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTenantParamsOthers'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantInfo'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a new Tenant.
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /tenants/swift:
    get:
      description: Get a Swift configuration.
      operationId: GetTenantSwift
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the tenant Id.
        in: query
        name: tenantId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwiftParams'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get a Swift configuration.
      tags:
      - Tenant
    put:
      description: Update a Swift configuration.
      operationId: UpdateTenantSwift
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwiftParams'
        description: Specifies the parameters to update a Swift configuration.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwiftParams'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update a Swift configuration.
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /tenants/swift/register:
    post:
      description: Register Swift service on Keystone server.
      operationId: RegisterSwift
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterSwiftParams'
        description: Specifies the parameters to register a Swift service on Keystone
          server.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Register Swift service on a Keystone server.
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /tenants/swift/unregister:
    post:
      description: Unregister Swift service from Keystone server.
      operationId: UnregisterSwift
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnregisterSwiftParams'
        description: Specifies the parameters to unregister a Swift service from Keystone
          server.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Unregister Swift service from a Keystone server.
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /tenants/{id}:
    delete:
      operationId: DeleteTenant
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: The Tenant id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete Tenant with given ID.
      tags:
      - Tenant
    get:
      operationId: GetTenantByID
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: The Tenant id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantInfo'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Tenant by ID.
      tags:
      - Tenant
    put:
      description: Update Tenant's properties.
      operationId: UpdateTenant
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - in: path
        name: id
        required: true
        schema:
          minLength: 2
          nullable: true
          pattern: ^([a-zA-Z0-9]+/)$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTenantBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantInfo'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update Tenant.
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /tenants/{id}/actions:
    post:
      description: Perform actions like activate and deactivate on a given Tenant.
      operationId: PerformTenantAction
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: The Tenant id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantActionBody'
        description: Specifies the parameters to perform an action on a Tenant.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantInfo'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Perform actions on a Tenant.
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /tenants/{id}/assignments:
    get:
      description: |-
        Get all assigned properties like storage domain, entities, policies etc.
        for the tenant.
      operationId: GetAssignedPropertiesForTenant
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: The Tenant id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantAssignments'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get tenant assignments.
      tags:
      - Tenant
    put:
      description: |-
        Assign/Unassign properties like storage domain, entities, policies etc.
        to the tenant.
        The API expects a list of all the assignments (policies etc.) that are
        supposed to be associated to the Tenant. The list of assignments passed
        get assigned to the Tenant and anything else that was already assigned
        gets unassigned.
        In case a few objects fail the assignment and some objects get assigned,
        error is returned for all assignments except for policies.
      operationId: AssignPropertiesToTenant
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: The Tenant id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantAssignmentsParams'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantAssignments'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Update assginment of properties for a tenant.
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /totp-key:
    post:
      description: Create a TOTP key.
      operationId: CreateTotpKey
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTotpKeyRequestBody'
        description: Specifies the key id for creating the TOTP key.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TotpKeyInfo'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a new TOTP secret URI and store the secret key.
      tags:
      - MFA
      x-codegen-request-body-name: body
  /trusted-cas:
    get:
      description: List all trusted certificates in cluster trust store.
      operationId: ListTrustedCas
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the ids of the certificates to be returned.
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies the names of the certificates to be returned.
        explode: false
        in: query
        name: names
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrustedCasResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List all Certificates with cluster trust store.
      tags:
      - Security
    post:
      description: Register CA Certificate to the cluster trust store.
      operationId: RegisterTrustedCas
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterTrustedCas'
        description: Specifies the parameters to register a Certificate.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrustedCasResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Register CA Certificate to the cluster trust store.
      tags:
      - Security
      x-codegen-request-body-name: body
  /trusted-cas/{id}:
    delete:
      description: Unregister CA Certificate from the cluster trust store.
      operationId: UnregisterTrustedCa
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the certificate to be unregistered.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Unregister CA Certificate from the cluster trust store.
      tags:
      - Security
    get:
      description: List the specified Certificate.
      operationId: ListTrustedCaById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the certificate.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedCa'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: List the specified Certificate.
      tags:
      - Security
  /trusted-cas/{id}/validate:
    post:
      description: Certificate will be checked for Expiration and Revocation.
      operationId: ValidateTrustedCaById
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the id of the certificate to be validated.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedCa'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Validate CA Certificate.
      tags:
      - Security
  /users:
    get:
      description: Get Users.
      operationId: GetUsers
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies the user domain to filter.
        in: query
        name: domain
        schema:
          type: string
      - description: Specifies a list of usernames to filter.
        explode: false
        in: query
        name: usernames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, the names in usernames are matched by any partial rather
          than exactly matched.
        in: query
        name: matchPartialNames
        schema:
          type: boolean
      - description: Specifies a list of email addresses to filter.
        explode: false
        in: query
        name: emailAddresses
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies a list of roles to filter.
        explode: false
        in: query
        name: roles
        schema:
          items:
            type: string
          type: array
        style: form
      - description: TenantIds contains ids of the tenants for which users are to
          be returned.
        explode: false
        in: query
        name: tenantIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: IncludeTenants specifies if users of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        in: query
        name: includeTenants
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersList'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Get Users.
      tags:
      - User
  /users/sessions:
    delete:
      description: Deletes all sessions for given user sid or system wide sessions
      operationId: DeleteSession
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      - description: Specifies a user sid. If sid is not given system wide sessions
          are deleted.
        in: query
        name: sid
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Delete user sessions
      tags:
      - User
    post:
      description: Create a user session
      operationId: CreateSession
      parameters:
      - description: This field uniquely represents a Cohesity Cluster and is used
          for making on-prem calls from Helios.
        in: header
        name: accessClusterId
        schema:
          format: int64
          type: integer
          x-go-name: AccessClusterId
        x-go-name: AccessClusterId
      - description: This field uniquely represents a region and is used for making
          Helios calls to a specific region.
        in: header
        name: regionId
        schema:
          type: string
          x-go-name: RegionId
        x-go-name: RegionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserSessionRequestParams'
        description: Specifies the parameters to create a user session
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - APIKeyHeader: []
      summary: Create a user session
      tags:
      - User
      x-codegen-request-body-name: body
components:
  parameters:
    cid:
      description: This field uniquely represents a Cohesity Cluster and is used for
        making on-prem calls from Helios.
      in: header
      name: accessClusterId
      schema:
        format: int64
        type: integer
        x-go-name: AccessClusterId
      x-go-name: AccessClusterId
    rid:
      description: This field uniquely represents a region and is used for making
        Helios calls to a specific region.
      in: header
      name: regionId
      schema:
        type: string
        x-go-name: RegionId
      x-go-name: RegionId
  responses:
    AcceptedResponse:
      content: {}
      description: Request Accepted
    AddDmaasTenantCertResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddDmaasTenantCertRequest'
      description: Success
    AddRemoteDiskResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddRemoteDiskResponseBody'
      description: Success
    AddSyslogServerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SyslogServer'
      description: Success
    AgentUpgradeTaskActionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgentUpgradeTaskActionObject'
      description: Success
    AnomalyAlertResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AnomalyAlert'
      description: Returns the response of the notification operation.
    ApplyPatchesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServicePatchLevels'
      description: Success
    CancelObjectRunsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelObjectRunsResults'
      description: Success
    ChassisListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChassisList'
      description: Success
    ChassisResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Chassis'
      description: Success
    CiphersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CiphersResp'
      description: Success
    ClusterAMQPTargetConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClusterAMQPTargetConfig'
      description: Success
    ClusterLocalDomainSIDResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClusterLocalDomainSID'
      description: Success
    ClusterResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cluster'
      description: Success
    ClusterTenantResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HeliosTenant'
      description: Success
    ClusterUiConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClusterUiConfig'
      description: Success
    ClustersTenantConfigsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClustersTenantConfigs'
      description: Success
    ConnectivityCheckResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectivityCheckResponseBody'
      description: Success
    ConstructMetaInfoResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConstructMetaInfoResult'
      description: Success
    CreateAccessTokenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessTokenResponse'
      description: Success
    CreateCadStorageDomainResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StorageDomain'
      description: Success
    CreateClientcsrResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateClientcsrResponseBody'
      description: Success
    CreateCsrResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCsrResponseBody'
      description: Success
    CreateDownloadFilesAndFoldersRecoveryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Recovery'
      description: Success
    CreateHeliosPolicyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HeliosPolicyResponse'
      description: Success
    CreateIndexingCloudConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexingCloudConfig'
      description: Success
    CreateMcmClaimResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateMcmClaimResponseBody'
      description: Success
    CreateMcmSignupResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/McmSignup'
      description: Success
    CreateNodeGroupResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NodeGroupResponse'
      description: Success
    CreateOdpRemoteClusterResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OdpRemoteCluster'
      description: Success
    CreateOrUpdateActiveDirectoryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActiveDirectory'
      description: Success
    CreateOrUpdateBifrostConnectionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BifrostConnection'
      description: Success
    CreateOrUpdateBifrostConnectorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BifrostConnector'
      description: Success
    CreateOrUpdateDataTieringAnalysisGroupResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DataTieringAnalysisGroup'
      description: Success
    CreateOrUpdateIdpPrincipalResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IdpPrincipal'
      description: Success
    CreateOrUpdateIdpResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Idp'
      description: Success
    CreateOrUpdateProtectionGroupResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProtectionGroup'
      description: Success
    CreateOrUpdateRigelConnectionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RigelConnection'
      description: Success
    CreateOrUpdateRigelConnectorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RigelConnector'
      description: Success
    CreateProtectedObjectsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateProtectedObjectsResponse'
      description: Success
    CreateProtectionGroupRunResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateProtectionGroupRunResponseBody'
      description: Accepted
    CreateProtectionPolicyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProtectionPolicyResponse'
      description: Success
    CreateRecoveryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Recovery'
      description: Success
    CreateRoleResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Role'
      description: Success
    CreateShareResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Share'
      description: Success
    CreateStorageDomainResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StorageDomain'
      description: Success
    CreateTdmTaskResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TdmTask'
      description: Success
    CreateTotpKeyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TotpKeyInfo'
      description: Success
    CreateUpgradeTaskResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgentUpgradeTaskState'
      description: Success
    CreateViewFailoverResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Failover'
      description: Success
    CreateViewResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/View'
      description: Success
    CreateViewTemplateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Template'
      description: Success
    DataTieringTaskResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DataTieringTask'
      description: Success
    DataTieringTasksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DataTieringTasks'
      description: Success
    DefaultTenantResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TenantInfo'
      description: Success
    DiscoverDisksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClusterFreeDisks'
      description: Success
    DiskAssimilationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClusterFreeDisks'
      description: Success
    DiskIdentifyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DiskIdentify'
      description: Success
    DiskRemovalResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RemoveDisk'
      description: Success
    DisksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DisksList'
      description: Success
    ErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Error
    FailoverCreateRunResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FailoverCreateRunResponse'
      description: Success
    FailoverRunsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FailoverRunsResponse'
      description: Success
    FilterObjectsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FilteredObjectsResponseBody'
      description: Success
    GetAccountsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HeliosAccounts'
      description: Success
    GetActiveDirectoriesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActiveDirectories'
      description: Success
    GetActiveDirectoryByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActiveDirectory'
      description: Success
    GetAgentImagesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/McmAgentImagesResponse'
      description: Success
    GetAlertsSummary:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlertsSummaryResponse'
      description: Success
    GetAlertsSummaryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlertsSummaryResponse'
      description: Success
    GetAntivirusServiceGroupsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AntivirusServiceGroups'
      description: Success
    GetAppliedPatchesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppliedPatches'
      description: Success
    GetAuditLogsActionsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuditLogsActions'
      description: Success
    GetAuditLogsEntityTypesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuditLogsEntityTypes'
      description: Success
    GetAuditLogsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuditLogs'
      description: Success
    GetAvailablePatchesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AvailablePatches'
      description: Success
    GetAwsRegistrationVerificationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HeliosAwsResponse'
      description: Success
    GetBifrostConnectionByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BifrostConnection'
      description: Success
    GetBifrostConnectionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BifrostConnections'
      description: Success
    GetBifrostConnectorByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BifrostConnector'
      description: Success
    GetBifrostConnectorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BifrostConnectors'
      description: Success
    GetConnectionBandwidthResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetConnectionBandwidthResponseBody'
      description: Success
    GetCsrListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCsrListResponseBody'
      description: Success
    GetCsrResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommonCsrResponseParams'
      description: Success
    GetDataTieringAnalysisGroupResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DataTieringAnalysisGroup'
      description: Success
    GetDataTieringAnalysisGroupsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DataTieringAnalysisGroups'
      description: Success
    GetDmaasTenantCertsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TenantDmaasCerts'
      description: Success
    GetDomainControllersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DomainControllersResponse'
      description: Success
    GetExternalTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExternalTarget'
      description: Success
    GetExternalTargetSettingsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GlobalBandwidthSettings'
      description: Success
    GetExternalTargetsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExternalTargets'
      description: Success
    GetFilerAuditLogConfigsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FilerAuditLogConfigs'
      description: Success
    GetGroupsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Groups'
      description: Success
    GetHeliosLoginConfiguration:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HeliosLoginConfiguration'
      description: Helios Login Configuration
    GetHeliosPoliciesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HeliosPoliciesResponseWithPagination'
      description: Success
    GetHeliosPolicyByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HeliosPolicyResponse'
      description: Success
    GetIcapUriConnectionStatusResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IcapUriConnectionStatusList'
      description: Success
    GetIdpResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Idp'
      description: Success
    GetIdpsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Idps'
      description: Success
    GetIndexedObjectSnapshotsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetIndexedObjectSnapshotsResponseBody'
      description: Success
    GetInfectedFilesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InfectedFiles'
      description: Success
    GetIsDMaaSClusterResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DMaaSInfo'
      description: Success
    GetKerberosProviderByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KerberosProvider'
      description: Success
    GetKerberosProvidersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KerberosProviders'
      description: Success
    GetKeystonesByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Keystone'
      description: Success
    GetKeystonesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Keystones'
      description: Success
    GetLdapConnectionStatusResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LdapStatus'
      description: Success
    GetLdapsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ldaps'
      description: Success
    GetMFAConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MfaConfigInfo'
      description: Success
    GetMcmObjectsActivityResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/McmObjectsActivity'
      description: Success
    GetMcmSignupsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/McmSignups'
      description: Success
    GetNetworkInterfacesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClusterInterfaces'
      description: Success
    GetNisNetgroupByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NisNetgroup'
      description: Success
    GetNisNetgroupsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NisNetgroups'
      description: Success
    GetNisProviderByDomainNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NisProvider'
      description: Success
    GetNisProvidersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NisProviders'
      description: Success
    GetNodeGroupByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NodeGroupResponse'
      description: Success
    GetNodeGroupsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NodeGroupResponse'
      description: Success
    GetNodesResetStateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResetStates'
      description: Success
    GetObjectIdentifiersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LocalGlobalObjectIdList'
      description: Success
    GetObjectRunResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ObjectProtectionRunSummary'
      description: Success
    GetObjectRunsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetObjectRunsResponseBody'
      description: Success
    GetObjectSnapshotInfoResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ObjectSnapshot'
      description: Success
    GetObjectSnapshotVolumeInfoResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ObjectSnapshotVolumeInfo'
      description: Success
    GetObjectSnapshotsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetObjectSnapshotsResponseBody'
      description: Success
    GetObjectStatsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ObjectStats'
      description: Success
    GetObjectsLastRunResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ObjectsLastRun'
      description: Success
    GetOdpRemoteClusterByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OdpRemoteCluster'
      description: Success
    GetOdpRemoteClustersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OdpRemoteClusters'
      description: Success
    GetPITRangesProtectedObjectResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPITRangesProtectedObjectResponseBody'
      description: Success
    GetPatchOperationStatusResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatchOperationStatus'
      description: Success
    GetPatchesHistoryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatchesHistory'
      description: Success
    GetPrivilegesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Privileges'
      description: Success
    GetProtectedObjectResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProtectedObjectResponse'
      description: Success
    GetProtectedObjectsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProtectedObjectsResponse'
      description: Success
    GetProtectionGroupResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProtectionGroup'
      description: Success
    GetProtectionGroupRunResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProtectionGroupRun'
      description: Success
    GetProtectionGroupRunsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProtectionGroupRuns'
      description: Success
    GetProtectionGroupsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProtectionGroups'
      description: Success
    GetProtectionPoliciesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProtectionPolicyResponseWithPagination'
      description: Success
    GetProtectionPolicyByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProtectionPolicyResponse'
      description: Success
    GetProtectionPolicyTemplateByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PolicyTemplateResponse'
      description: Success
    GetProtectionPolicyTemplatesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PolicyTemplatesResponseWithPagination'
      description: Success
    GetProtectionRunProgress:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProtectionRunProgressBody'
      description: Success
    GetProtectionRunsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProtectionRunsSummary'
      description: Success
    GetProtectionRunsStatusResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProtectionRunsStatusResponseBody'
      description: Success
    GetRecoveries:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Recoveries'
      description: Success
    GetRecovery:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Recovery'
      description: Success
    GetRemoteDisksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RemoteDisks'
      description: Success
    GetRigelClaimLogsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RigelClaimLogs'
      description: Success
    GetRigelConnectionByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RigelConnection'
      description: Success
    GetRigelConnectionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RigelConnections'
      description: Success
    GetRigelConnectorByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RigelConnector'
      description: Success
    GetRigelConnectorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RigelConnectors'
      description: Success
    GetRolesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Roles'
      description: Success
    GetSecurityPrincipalsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecurityPrincipals'
      description: Success
    GetShareByNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Share'
      description: Success
    GetSharesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Shares'
      description: Success
    GetSslCertificateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SslCertificateParams'
      description: Success
    GetStorageDomainByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StorageDomain'
      description: Success
    GetStorageDomainsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StorageDomains'
      description: Success
    GetSupportChannelConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SupportChannelConfig'
      description: Success
    GetSupportMFAConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SupportMfaConfigInfo'
      description: Success
    GetSwiftResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SwiftParams'
      description: Success
    GetSyslogServersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SyslogServers'
      description: Success
    GetTagsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetTagsResult'
      description: Success
    GetTdmObjectResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TdmObject'
      description: Success
    GetTdmObjectTimelineEventsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TdmObjectTimelineEvents'
      description: Success
    GetTdmObjectsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TdmObjects'
      description: Success
    GetTdmTaskResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TdmTask'
      description: Success
    GetTdmTasksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TdmTasks'
      description: Success
    GetTenantAccessResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TenantAccessResult'
      description: Success
    GetUpgradeTasksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgentUpgradeTaskStates'
      description: Success
    GetUsersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Users'
      description: Success
    GetVdcByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VdcObject'
      description: Success
    GetViewByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/View'
      description: Success
    GetViewDirectoryQuotasResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ViewDirectoryQuotas'
      description: Success
    GetViewFailoverResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetViewFailoverResponseBody'
      description: Success
    GetViewUserQuotasConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ViewUserQuotasConfig'
      description: Success
    GetViewUserQuotasResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ViewUserQuotas'
      description: Success
    GetViewsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetViewsResult'
      description: Success
    GetViewsSummaryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ViewsSummary'
      description: Success
    HeliosOnPremConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HeliosOnPremConfig'
      description: Success
    HeliosRegConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HeliosRegConfig'
      description: Success
    HeliosSearchIndexedObjectsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HeliosSearchIndexedObjectsResponseBody'
      description: Success
    HeliosTenantAssignmentsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HeliosTenantAssignmentsResult'
      description: Success
    HeliosTenantStatsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HeliosTenantsStats'
      description: Success
    ImportCertificateByClientcsrResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImportCertificateByClientcsrResponseBody'
      description: Success
    ImportPatchesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatchesDetails'
      description: Success
    InitFailoverResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitFailoverResponse'
      description: Success
    ListIdpPrincipalsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IdpPrincipals'
      description: Success
    ListTenantAssignmentsReponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TenantAssignments'
      description: Success
    ListTenantResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TenantsInfo'
      description: Success
    ListTenantsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListTenantData'
      description: Success
    ListTrustedCaByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrustedCa'
      description: Success
    ListTrustedCasResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListTrustedCasResult'
      description: Success
    ListUsersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UsersList'
      description: Success
    McmGetPolicyLastRunStatsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/McmGetPolicyLastRunStatsResponseBody'
      description: Success
    McmGetProtectionLastRunStatsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/McmGetProtectionLastRunStatsResponseBody'
      description: Success
    McmGetTenantProfilesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/McmTenantProfiles'
      description: Success
    McmMfaResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HeliosMfa'
      description: Success
    McmSourceRegistrationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/McmSourceRegistration'
      description: Success
    McmSourcesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/McmSources'
      description: Success
    McmTenantActionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/McmTenantAction'
      description: Success
    McmTenantObjectIdsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/McmTenantObjectIds'
      description: Success
    McmTenantObjectProtectionsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/McmTenantObjectProtections'
      description: Success
    McmTenantSourceRegistrationsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/McmTenantSourceRegistrations'
      description: Success
    NisNetgroupResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NisNetgroup'
      description: Success
    NisProviderResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NisProvider'
      description: Success
    NoContentResponse:
      content: {}
      description: No Content
    NodeIdentifyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NodeIdentifyParams'
      description: Success
    NodeRemovalResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RemoveNode'
      description: Success
    ObjectBrowseResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FileFolderInfo'
      description: Success
    ObjectResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Object'
      description: Success
    ObjectTreeResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ObjectWithChildren'
      description: Success
    ObjectsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Objects'
      description: Success
    ObjectsSearchResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ObjectsSearchResponseBody'
      description: Success
    OnPremTenantConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OnPremTenantConfig'
      description: Success
    PerformRunActionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PerformRunActionResponse'
      description: Accepted
    ProgressTasksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgressTasks'
      description: Success
    ProtectedObjectActionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProtectedObjectActionResponse'
      description: Success
    ProtectedObjectResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProtectedObjectInfo'
      description: Success
    ProtectedObjectsSearchResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProtectedObjectsSearchResponseBody'
      description: Success
    RackResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rack'
      description: Success
    RacksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Racks'
      description: Success
    ReadViewTemplateByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Template'
      description: Success
    ReadViewTemplatesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetViewTemplatesResult'
      description: Success
    ReassociateKeyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReassociateKeyResponseBody'
      description: Success
    RegisterOrUpdateKerberosProviderResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KerberosProvider'
      description: Success
    RegisteredRemoteStorageListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisteredRemoteStorageList'
      description: Success
    RemoteStorageRegistrationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RemoteStorageInfo'
      description: Success
    ReplicationBackupActivationResult:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReplicationBackupActivationResult'
      description: Success
    RevertPatchesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServicePatchLevels'
      description: Success
    SearchIndexedObjectsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchIndexedObjectsResponseBody'
      description: Success
    SecurityConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecurityConfigResponse'
      description: Success
    SnapshotDiffResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SnapshotDiffResult'
      description: Success
    SourceAttributeFiltersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SourceAttributeFiltersResponseParams'
      description: Success
    SourceConnectionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SourceConnectionResponseParams'
      description: Success
    SourceHierarchyObjectSummariesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SourceHierarchyObjectSummaries'
      description: Success
    SourceRegistrationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SourceRegistration'
      description: Success
    SourceRegistrationsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SourceRegistrations'
      description: Success
    SourceResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Source'
      description: Success
    SourcesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sources'
      description: Success
    SyslogAuditTagResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SyslogAuditTag'
      description: Success
    SyslogProgramNamesResponse:
      content:
        application/json:
          schema:
            items:
              type: string
            type: array
      description: Success
    SyslogServerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SyslogServer'
      description: Success
    SyslogServerStatusResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SyslogServerStatus'
      description: Success
    TagResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Tag'
      description: Success
    TenantAssignmentsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TenantAssignments'
      description: Success
    TenantConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TenantConfig'
      description: Success
    UnregisterKerberosProviderResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnregisterKerberosProvider'
      description: Success
    UpdateActiveDirectoryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActiveDirectory'
      description: Success
    UpdateBifrostConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/McmRigelClaimResponseParams'
      description: Success
    UpdateCertificateByCsrResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCertificateByCsrResponseBody'
      description: Success
    UpdateClustersTenantConfigsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateClustersTenantConfigsResponse'
      description: Success
    UpdateDataTieringStateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateDataTieringState'
      description: Success
    UpdateDataTieringTagConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DataTieringTagConfig'
      description: Success
    UpdateExternalTargetSettingsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GlobalBandwidthSettings'
      description: Success
    UpdateFleetEnvInfoResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateFleetEnvInfoRequest'
      description: Success
    UpdateHeliosPolicyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HeliosPolicyResponse'
      description: Success
    UpdateIsDMaaSClusterResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DMaaSInfo'
      description: Success
    UpdateMcmSignupResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/McmSignup'
      description: Success
    UpdateMfaConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateMFAResult'
      description: Success
    UpdateNodeGroupResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NodeGroupResponse'
      description: Success
    UpdateObjectSnapshotResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ObjectSnapshot'
      description: Success
    UpdateOdpRemoteClusterResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OdpRemoteCluster'
      description: Success
    UpdateProtectionGroupRunResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProtectionGroupRunResponseBody'
      description: Success
    UpdateProtectionGroupsStateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProtectionGroupsState'
      description: Success
    UpdateProtectionPolicyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProtectionPolicyResponse'
      description: Success
    UpdateRoleResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Role'
      description: Success
    UpdateShareResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Share'
      description: Success
    UpdateStorageDomainResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StorageDomain'
      description: Success
    UpdateSwiftResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SwiftParams'
      description: Success
    UpdateTdmSnapshotResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TdmSnapshot'
      description: Success
    UpdateViewDirectoryQuotaResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ViewDirectoryQuota'
      description: Success
    UpdateViewResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/View'
      description: Success
    UpdateViewTemplateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Template'
      description: Success
    UserSessionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserSession'
      description: Success
    UserUiConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserUiConfig'
      description: Success
    VerifyTotpCodeResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VerifyTotpResult'
      description: Success
  schemas:
    AAGGroup:
      description: Specifies the details of a AAG Group.
      properties:
        id:
          description: Specifies the unique identifier of the AGGGroup.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the name of the AAG Group.
          nullable: true
          type: string
          x-order: 1
        resourceInfo:
          $ref: '#/components/schemas/AppResource'
        servers:
          description: Specifies the list of SQL servers which belongs to the given
            AAG Group.
          items:
            $ref: '#/components/schemas/SQLServer'
          nullable: true
          type: array
          x-order: 3
        fciClusters:
          description: Specifies the list of FCI clusters which belongs to the given
            AAG Group.
          items:
            $ref: '#/components/schemas/FCICluster'
          nullable: true
          type: array
          x-order: 4
      type: object
    AAGInfo:
      description: Object details for Mssql.
      properties:
        objectId:
          description: Specifies the AAG object Id.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the AAG name.
          nullable: true
          type: string
          x-order: 1
      type: object
    ADAttributeConstants:
      description: AD Attribute Constants
      properties:
        adAttributeConstants:
          description: AD Attribute Constants
          enum:
          - name
          - objectSid
          - sAMAccountName
          - objectClass
          type: string
          x-order: 0
      title: AD Attribute Constants
      type: object
    ADClassConstants:
      description: AD Class Constants
      properties:
        adClassConstants:
          description: AD Class Constants
          enum:
          - user
          - group
          - computer
          - wellKnownPrincipal
          type: string
          x-order: 0
      title: AD Class Constants
      type: object
    ADProtectionGroupParams:
      description: Specifies the parameters which are specific to Active directory
        related Protection Groups.
      properties:
        objects:
          description: Specifies the list of object ids to be protected.
          items:
            $ref: '#/components/schemas/ActiveDirectoryProtectionGroupObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
      required:
      - objects
      title: Active Directory(AD) Protection Group Parameters.
      type: object
    AWSTags:
      description: Specifies the AWS tags.
      nullable: true
      properties:
        vmTagIds:
          description: 'Array of Arrays of VMs Tags Ids that Specify VMs to Protect.
            Optionally specify a list of VMs to protect by listing Protection Source
            ids of VM Tags in this two dimensional array. Using this two dimensional
            array of Tag ids, the Cluster generates a list of VMs to protect which
            are derived from intersections of the inner arrays and union of the outer
            array, as shown by the following example. To protect only ''Eng'' VMs
            in the East and all the VMs in the West, specify the following tag id
            array: [ [1101, 2221], [3031] ], where 1101 is the ''Eng'' VM Tag id,
            2221 is the ''East'' VM Tag id and 3031 is the ''West'' VM Tag id. The
            inner array [1101, 2221] produces a list of VMs that are both tagged with
            ''Eng'' and ''East'' (an intersection). The outer array combines the list
            from the inner array with list of VMs tagged with ''West'' (a union).
            The list of resulting VMs are protected by this Protection Group.'
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
          x-order: 0
      type: object
      x-nullable: true
    AWSTargetConfig:
      description: Specifies the configuration for adding AWS as repilcation target
      properties:
        sourceId:
          description: Specifies the source id of the AWS protection source registered
            on Cohesity cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the AWS Replication target.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        region:
          description: Specifies id of the AWS region in which to replicate the Snapshot
            to. Applicable if replication target is AWS target.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        regionName:
          description: Specifies name of the AWS region in which to replicate the
            Snapshot to. Applicable if replication target is AWS target.
          nullable: true
          readOnly: true
          type: string
          x-order: 3
      required:
      - region
      - sourceId
      title: AWS Target Configuration
      type: object
    AWSTier:
      allOf:
      - $ref: '#/components/schemas/CommonCloudTierSettings'
      - $ref: '#/components/schemas/AWSTier_allOf'
      description: Specifies the settings for a aws tier.
    AWSTieringLevels:
      description: AWS Tiering Levels
      properties:
        type:
          description: AWS Tiering Levels
          enum:
          - kAmazonS3Standard
          - kAmazonS3StandardIA
          - kAmazonS3OneZoneIA
          - kAmazonS3IntelligentTiering
          - kAmazonS3Glacier
          - kAmazonS3GlacierDeepArchive
          type: string
          x-order: 0
      title: AWS Tiering Levels.
      type: object
    AWSTiers:
      description: Specifies aws tiers.
      properties:
        tiers:
          description: Specifies the tiers that are used to move the archived backup
            from current tier to next tier. The order of the tiers determines which
            tier will be used next for moving the archived backup. The first tier
            input should always be default tier where backup will be acrhived. Each
            tier specifies how much time after the backup will be moved to next tier
            from the current tier.
          items:
            $ref: '#/components/schemas/AWSTier'
          nullable: true
          type: array
          x-order: 0
      required:
      - tiers
      type: object
    AagBackupPreference:
      description: Specifies Aag Backup Preference Type.
      properties:
        aagBackupPreference:
          description: Specifies Aag Backup Preference Type.
          enum:
          - kPrimaryReplicaOnly
          - kSecondaryReplicaOnly
          - kPreferSecondaryReplica
          - kAnyReplica
          type: string
          x-order: 0
      title: Aag Backup Preference Type.
      type: object
    AccessTokenResponse:
      description: Access token generation response
      example:
        privileges:
        - privileges
        - privileges
        accessToken: accessToken
        tokenType: tokenType
      properties:
        accessToken:
          description: Created access token.
          nullable: true
          type: string
          x-order: 0
        privileges:
          description: Privileges for the user.
          items:
            type: string
          type: array
          x-omitempty: true
          x-order: 1
        tokenType:
          description: Access token type.
          nullable: true
          type: string
          x-order: 2
      type: object
    AclConfig:
      description: Specifies the ACL config of an S3 bucket.
      properties:
        grants:
          description: Specifies a list of ACL grants.
          items:
            $ref: '#/components/schemas/AclGrant'
          nullable: true
          type: array
          x-order: 0
      type: object
    AclGrant:
      description: Specifies an ACL grant.
      properties:
        grantee:
          allOf:
          - $ref: '#/components/schemas/AclGrantee'
          - type: object
            x-nullable: true
          description: Specifies the grantee.
          type: object
          x-order: 0
        permissions:
          description: Specifies a list of permissions granted to the grantees.
          items:
            enum:
            - Read
            - Write
            - ReadACP
            - WriteACP
            - FullControl
            type: string
          minItems: 1
          nullable: true
          type: array
          x-order: 1
      required:
      - grantee
      - permissions
      type: object
    AclGrantee:
      description: Specifies an ACL grantee.
      properties:
        type:
          description: Specifies the grantee type.
          enum:
          - RegisteredUser
          nullable: true
          type: string
          x-order: 0
        userId:
          description: Specifies the user id of the grantee.
          nullable: true
          type: string
          x-order: 1
      required:
      - type
      type: object
    AcropolisProtectionGroupObjectParams:
      description: Specifies an object protected by a Acropolis Protection Group.
      properties:
        id:
          description: Specifies the ID of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the virtual machine.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      type: object
    AcropolisProtectionGroupParams:
      description: Specifies the parameters which are related to Acropolis Protection
        Groups.
      properties:
        objects:
          description: Specifies the objects included in the Protection Group.
          items:
            $ref: '#/components/schemas/AcropolisProtectionGroupObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 1
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 2
        excludeObjectIds:
          description: Specifies the object ids to be excluded in the Protection Group.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          uniqueItems: true
          x-order: 3
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        appConsistentSnapshot:
          description: Specifies whether or not to quiesce apps and the file system
            in order to take app consistent snapshots. If not specified or false then
            snapshots will not be app consistent.
          nullable: true
          type: boolean
          x-order: 5
        continueOnQuiesceFailure:
          description: Specifies whether to continue backing up on quiesce failure
          nullable: true
          type: boolean
          x-order: 6
      required:
      - objects
      type: object
    AcropolisRecoverFilesNewTargetConfig:
      description: Specifies the configuration for recovering files and folders to
        the new target.
      properties:
        targetVm:
          allOf:
          - $ref: '#/components/schemas/RecoverTarget'
          - type: object
            x-nullable: true
          description: Specifies the target VM to recover files and folders to.
          nullable: true
          type: object
          x-order: 0
        targetVmCredentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          - type: object
            x-nullable: true
          description: Specifies the credentials for the target VM.
          nullable: true
          type: object
          x-order: 1
        absolutePath:
          description: Specifies the absolute path location to recover files to.
          nullable: true
          type: string
          x-order: 2
      required:
      - absolutePath
      - targetVm
      - targetVmCredentials
      title: Acropolis Recover Files New Target Config.
      type: object
    AcropolisRecoverFilesOriginalTargetConfig:
      description: Specifies the configuration for recovering files and folders to
        the original target.
      properties:
        targetVmCredentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          - type: object
            x-nullable: true
          description: Specifies the credentials for the target VM.
          nullable: true
          type: object
          x-order: 0
        recoverToOriginalPath:
          description: Specifies whether to recover files and folders to the original
            path location. If false, alternatePath must be specified.
          nullable: true
          type: boolean
          x-order: 1
        alternatePath:
          description: Specifies the alternate path location to recover files to.
          nullable: true
          type: string
          x-order: 2
      required:
      - recoverToOriginalPath
      - targetVmCredentials
      title: Acropolis Recover Files Original Target Config.
      type: object
    AcropolisTargetParamsForRecoverFileAndFolder:
      description: Specifies the parameters for an Acropolis files and folders recovery
        target.
      properties:
        recoverToOriginalTarget:
          description: Specifies whether to recover to the original target. If true,
            originalTargetConfig must be specified. If false, newTargetConfig must
            be specified.
          nullable: true
          type: boolean
          x-order: 0
        originalTargetConfig:
          allOf:
          - $ref: '#/components/schemas/AcropolisRecoverFilesOriginalTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the configuration for recovering to the original
            target.
          nullable: true
          type: object
          x-order: 1
        newTargetConfig:
          allOf:
          - $ref: '#/components/schemas/AcropolisRecoverFilesNewTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the configuration for recovering to a new target.
          nullable: true
          type: object
          x-order: 2
        overwriteExisting:
          description: Specifies whether to overwrite the existing files. Default
            is true.
          nullable: true
          type: boolean
          x-order: 3
        preserveAttributes:
          description: Specifies whether to preserve original file/folder attributes.
            Default is true.
          nullable: true
          type: boolean
          x-order: 4
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of the objects encounters an error. Default is false.
          nullable: true
          type: boolean
          x-order: 5
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered files
            and folders. If this is not specified, then the VLAN settings will be
            automatically selected from one of the below options: a. If VLANs are
            configured on Cohesity, then the VLAN host/VIP will be automatically based
            on the client''s (e.g. ESXI host) IP address. b. If VLANs are not configured
            on Cohesity, then the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 6
      required:
      - recoverToOriginalTarget
      title: Acropolis Target Params for Recover Files
      type: object
    AcropolisTargetParamsForRecoverVm:
      description: Specifies the parameters for an Acropolis recovery target.
      properties:
        renameRecoveredVmsParams:
          allOf:
          - $ref: '#/components/schemas/RecoveredOrClonedVmsRenameConfig'
          - type: object
            x-nullable: true
          description: Specifies params to rename the VMs that are recovered. If not
            specified, the original names of the VMs are preserved.
          nullable: true
          type: object
          x-order: 0
        recoveryTargetConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverAcropolisVmTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the recovery target configuration if recovery has
            to be done to a different location which is different from original source
            or to original Source with different configuration. If not specified,
            then the recovery of the vms will be performed to original location with
            all configuration parameters retained.
          nullable: true
          type: object
          x-order: 1
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered. If this
            is not specified, then the VLAN settings will be automatically selected
            from one of the below options: a. If VLANs are configured on Cohesity,
            then the VLAN host/VIP will be automatically based on the client''s (e.g.
            ESXI host) IP address. b. If VLANs are not configured on Cohesity, then
            the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 2
        powerOnVms:
          description: Specifies whether to power on vms after recovery. If not specified,
            or false, recovered vms will be in powered off state.
          nullable: true
          type: boolean
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other vms if one of
            vms failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
      title: Acropolis Target Params.
      type: object
    ActionObjectLevelResponse:
      allOf:
      - $ref: '#/components/schemas/ProtectionObjectInput'
      - $ref: '#/components/schemas/ActionObjectLevelResponse_allOf'
      description: Specifies the object level response params after performing an
        action on a protected object.
    ActionObjectMapping:
      description: Specifies the object paring for performing action on list of objects.
      properties:
        sourceObjectId:
          description: Specifies the source object id.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        destinationObjectId:
          description: Specifies the destination object id.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    ActiveDirectories:
      description: Response of Active Directories.
      example:
        activeDirectories:
        - null
        - null
      properties:
        activeDirectories:
          description: A list of Active Directories.
          items:
            $ref: '#/components/schemas/ActiveDirectory'
          nullable: true
          type: array
          x-order: 0
      type: object
    ActiveDirectory:
      allOf:
      - $ref: '#/components/schemas/CommonActiveDirectoryParams'
      - $ref: '#/components/schemas/ActiveDirectory_allOf'
      description: Specifies an Active Directory.
    ActiveDirectoryAdminParams:
      description: Specifies the params of a user with administrative privilege of
        an Active Directory.
      properties:
        username:
          description: Specifies the user name.
          nullable: true
          type: string
          x-order: 0
        password:
          description: Specifies the password of the user.
          nullable: true
          type: string
          x-order: 1
      required:
      - password
      - username
      type: object
    ActiveDirectoryAppParams:
      description: Specifies the Active Directory special parameters for the Protection
        Group.
      properties:
        appId:
          description: Specifies the application id of the Active Directory instance.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        appName:
          description: Specifies the application name of the Active Directory instance.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      title: Active Directory App Parameters.
      type: object
    ActiveDirectoryProtectionGroupObjectParams:
      description: Specifies the object identifier to for the active directory protection
        group.
      properties:
        sourceId:
          description: Specifies the id of the registered active directory source.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        sourceName:
          description: Specifies the name of the registered active directory source.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        appParams:
          description: Specifies the specific parameters required for active directory
            app configuration.
          items:
            $ref: '#/components/schemas/ActiveDirectoryAppParams'
          nullable: true
          type: array
          x-order: 2
        enableSystemBackup:
          description: Specifies whether to take bmr backup. If this is not specified,
            the bmr backup won't be enabled.
          nullable: true
          type: boolean
          x-order: 3
      required:
      - sourceId
      title: Active Directory Protection Group Object Params.
      type: object
    AdAuthMapping:
      description: Describes AD user mapping options for certificate based authentication.
      properties:
        enum:
          description: Specifies the auth field options
          enum:
          - SamAccountName
          - UserPrincipalName
          type: string
          x-order: 0
      title: AD User Auth Mapping
      type: object
    AdCentrifyTypeParams:
      allOf:
      - $ref: '#/components/schemas/CentrifyZone'
      - $ref: '#/components/schemas/AdCentrifyTypeParams_allOf'
      description: Specifies the properties associated to a Centrify type user id
        mapping.
    AdCustomAttributesTypeParams:
      description: Specifies the properties accociated to a CustomAttributes type
        user id mapping.
      properties:
        uidAttrName:
          description: Specifies the custom field name in Active Directory user properties
            to get the UID.
          nullable: true
          type: string
          x-order: 0
        gidAttrName:
          description: Specifies the custom field name in Active Directory user properties
            to get the GID.
          nullable: true
          type: string
          x-order: 1
        fallbackOption:
          allOf:
          - $ref: '#/components/schemas/FallbackUserIdMappingParams'
          - type: object
            x-nullable: true
          description: Specifies a fallback user id mapping param in case the primary
            config does not work.
          nullable: true
          type: object
          x-order: 2
      required:
      - fallbackOption
      - gidAttrName
      - uidAttrName
      type: object
    AdFixedTypeParams:
      description: Specifies the properties accociated to a Fixed type user id mapping.
      properties:
        uid:
          description: Specifies the fixed Unix UID, when mapping type is set to kFixed.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        gid:
          description: Specifies the fixed Unix GID, when mapping type is set to kFixed.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      required:
      - gid
      - uid
      type: object
    AdLdapProviderTypeParams:
      description: Specifies the properties associated to a LdapProvider type user
        id mapping.
      properties:
        fallbackOption:
          allOf:
          - $ref: '#/components/schemas/FallbackUserIdMappingParams'
          - type: object
            x-nullable: true
          description: Specifies a fallback user id mapping param in case the primary
            config does not work.
          nullable: true
          type: object
          x-order: 0
      required:
      - fallbackOption
      type: object
    AdNisProviderTypeParams:
      description: Specifies the properties associated to a NisProvider type user
        id mapping.
      properties:
        fallbackOption:
          allOf:
          - $ref: '#/components/schemas/FallbackUserIdMappingParams'
          - type: object
            x-nullable: true
          description: Specifies a fallback user id mapping param in case the primary
            config does not work.
          nullable: true
          type: object
          x-order: 0
      required:
      - fallbackOption
      type: object
    AdRfc2307TypeParams:
      description: Specifies the properties associated to a Rfc2307 type user id mapping.
      properties:
        fallbackOption:
          allOf:
          - $ref: '#/components/schemas/FallbackUserIdMappingParams'
          - type: object
            x-nullable: true
          description: Specifies a fallback user id mapping param in case the primary
            config does not work.
          nullable: true
          type: object
          x-order: 0
      required:
      - fallbackOption
      type: object
    AdSfu30TypeParams:
      description: Specifies the properties associated to a Sfu30 type user id mapping.
      properties:
        fallbackOption:
          allOf:
          - $ref: '#/components/schemas/FallbackUserIdMappingParams'
          - type: object
            x-nullable: true
          description: Specifies a fallback user id mapping param in case the primary
            config does not work.
          nullable: true
          type: object
          x-order: 0
      required:
      - fallbackOption
      type: object
    AddDmaasTenantCertRequest:
      description: Specifies the parameters to add an Orion tenant certificate.
      properties:
        tenantId:
          description: The id of the tenant.
          nullable: true
          type: string
          x-order: 0
        certificate:
          description: Specifies the tenant certificate.
          nullable: true
          type: string
          x-order: 1
        privateKey:
          description: Specifies the tenant private key.
          nullable: true
          type: string
          x-order: 2
        connectorCaChain:
          description: Specifies the CA chain that is used to sign the connector certificate.
          nullable: true
          type: string
          x-order: 3
        passphrase:
          description: Specifies the passphrase used to encode the private key.
          nullable: true
          type: string
          x-order: 4
      required:
      - certificate
      - connectorCaChain
      - privateKey
      - tenantId
      title: Add Tenant Cert Request.
      type: object
    AddRemoteDiskResponseBody:
      description: Specifies the response of creating remote disk.
      example:
        remoteDisks:
        - mountPath: mountPath
          tier: PCIeSSD
          message: message
          nodeId: 0
          status: Succeeded
        - mountPath: mountPath
          tier: PCIeSSD
          message: message
          nodeId: 0
          status: Succeeded
      properties:
        remoteDisks:
          description: Specifies a list of remote disk creating status.
          items:
            $ref: '#/components/schemas/CreateRemoteDiskStatus'
          nullable: true
          type: array
          x-order: 0
      type: object
    AgentInfoObject:
      description: Specifies the upgrade state of the agent.
      example:
        endTimeUsecs: 2
        name: name
        previousSoftwareVersion: previousSoftwareVersion
        startTimeUsecs: 3
        error:
          errorCode: errorCode
          message: message
        status: Scheduled
      properties:
        name:
          description: Specifies the name of the source where the agent is installed.
          nullable: true
          type: string
          x-order: 0
        previousSoftwareVersion:
          description: Specifies the software version of the agent before upgrade.
          nullable: true
          type: string
          x-order: 1
        status:
          description: Specifies the upgrade status of the agent.<br> 'Scheduled'
            indicates that upgrade for the agent is yet to start.<br> 'Started' indicates
            that upgrade for the agent is started.<br> 'Succeeded' indicates that
            agent was upgraded successfully.<br> 'Failed' indicates that upgrade for
            the agent has failed.<br> 'Skipped' indicates that upgrade for the agent
            was skipped.
          enum:
          - Scheduled
          - Started
          - Succeeded
          - Failed
          - Skipped
          nullable: true
          type: string
          x-order: 2
        startTimeUsecs:
          description: Specifies the time when the upgrade for an agent started as
            a Unix epoch Timestamp (in microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 3
        endTimeUsecs:
          description: Specifies the time when the upgrade for an agent completed
            as a Unix epoch Timestamp (in microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 4
        error:
          $ref: '#/components/schemas/Error'
      type: object
    AgentInformation:
      description: Specifies the agent details.
      properties:
        connectionStatus:
          description: Specifies the status of agent connection.
          enum:
          - Unknown
          - Healthy
          - Unregistered
          - Unreachable
          - Unhealthy
          - Error
          nullable: true
          type: string
          x-order: 0
        supportStatus:
          description: Specifies the whether agent version is compatible with cluster
            version ro use various features.
          enum:
          - Supported
          - Upgrade
          - Unsupported
          nullable: true
          type: string
          x-order: 1
        agentSwVersion:
          description: Specifies the software version of the agent
          nullable: true
          type: string
          x-order: 2
        lastFetchedTimeInUsecs:
          description: Specifies the time in usecs when the last agent info was fetched.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        hostSettingChecks:
          description: Specifies the list of host checks and its results.
          items:
            $ref: '#/components/schemas/HostSettingCheck'
          nullable: true
          type: array
          x-order: 4
      type: object
    AgentUpgradeInfoObject:
      description: Specifies the agent upgrade state.
      example:
        id: 9
        info:
          endTimeUsecs: 2
          name: name
          previousSoftwareVersion: previousSoftwareVersion
          startTimeUsecs: 3
          error:
            errorCode: errorCode
            message: message
          status: Scheduled
      properties:
        id:
          description: Specifies the ID of the agent.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        info:
          $ref: '#/components/schemas/AgentInfoObject'
      type: object
    AgentUpgradeTaskActionObject:
      description: Specifies the action on an upgrade task.
      example:
        error:
          errorCode: errorCode
          message: message
      properties:
        error:
          $ref: '#/components/schemas/Error'
      type: object
    AgentUpgradeTaskActionRequest:
      description: Specifies the params to perform an action on an agent upgrade task.
      example:
        action: Retry
        id: 0
      properties:
        action:
          description: Specifies the action type.<br> 'Cancel' indicates that the
            upgrade task needs to be cancelled.
          enum:
          - Retry
          - Cancel
          nullable: true
          type: string
          x-order: 0
        id:
          description: Specifies the ID of the task.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      title: Upgrade task action params
      type: object
    AgentUpgradeTaskState:
      description: Specifies the state of an agent upgrade task.
      example:
        agentIDs:
        - 5
        - 5
        isRetryable: true
        retriedTaskID: 7
        description: description
        scheduleEndTimeUsecs: 2
        startTimeUsecs: 6
        type: Auto
        error:
          errorCode: errorCode
          message: message
        clusterVersion: clusterVersion
        agents:
        - id: 9
          info:
            endTimeUsecs: 2
            name: name
            previousSoftwareVersion: previousSoftwareVersion
            startTimeUsecs: 3
            error:
              errorCode: errorCode
              message: message
            status: Scheduled
        - id: 9
          info:
            endTimeUsecs: 2
            name: name
            previousSoftwareVersion: previousSoftwareVersion
            startTimeUsecs: 3
            error:
              errorCode: errorCode
              message: message
            status: Scheduled
        endTimeUsecs: 1
        scheduleTimeUsecs: 5
        name: name
        id: 0
        status: Scheduled
      properties:
        name:
          description: Specifies the name of the task.
          nullable: true
          type: string
          x-order: 0
        description:
          description: Specifies the description of the task.
          nullable: true
          type: string
          x-order: 1
        id:
          description: Specifies the ID of the task.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        startTimeUsecs:
          description: Specifies the time, as a Unix epoch timestamp in microseconds,
            when the task started execution.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        endTimeUsecs:
          description: Specifies the time when the upgrade task completed execution
            as a Unix epoch Timestamp (in microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 4
        status:
          description: Specifies the status of the task.<br> 'Scheduled' indicates
            that the upgrade task is yet to start.<br> 'Running' indicates that the
            upgrade task has started execution.<br> 'Succeeded' indicates that the
            upgrade task completed without an error.<br> 'Failed' indicates that upgrade
            has failed for all agents. 'PartiallyFailed' indicates that upgrade has
            failed for some agents.
          enum:
          - Scheduled
          - Running
          - Succeeded
          - Failed
          - PartiallyFailed
          - Canceled
          nullable: true
          type: string
          x-order: 5
        agentIDs:
          description: Specifies the agents upgraded in the task.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 6
        clusterVersion:
          description: Specifies the version to which agents are upgraded.
          nullable: true
          type: string
          x-order: 7
        type:
          description: Specifes the type of task.<br> 'Auto' indicates an auto agent
            upgrade task which is started after a cluster upgrade.<br> 'Manual' indicates
            a schedule based agent upgrade task.<br> 'Retry' indicates an agent upgrade
            task which was retried.
          enum:
          - Auto
          - Manual
          - Retry
          nullable: true
          type: string
          x-order: 8
        scheduleTimeUsecs:
          description: Specifies the time when the task should start execution as
            a Unix epoch Timestamp (in microseconds). If no schedule is specified,
            the task will start immediately.
          format: int64
          nullable: true
          type: integer
          x-order: 9
        scheduleEndTimeUsecs:
          description: Specifies the time before which the upgrade task should start
            execution as a Unix epoch Timestamp (in microseconds). If this is not
            specified the task will start anytime after scheduleTimeUsecs.
          format: int64
          nullable: true
          type: integer
          x-order: 10
        retriedTaskID:
          description: Specifies ID of a task which was retried if type is 'Retry'.
          format: int64
          nullable: true
          type: integer
          x-order: 11
        isRetryable:
          description: Specifies if a task can be retried.
          nullable: true
          type: boolean
          x-order: 12
        error:
          $ref: '#/components/schemas/Error'
        agents:
          description: Specifies the upgrade information for each agent.
          items:
            $ref: '#/components/schemas/AgentUpgradeInfoObject'
          nullable: true
          type: array
          x-order: 14
      title: Agent upgrade task state
      type: object
    AgentUpgradeTaskStates:
      description: List of agent upgrade tasks.
      example:
        tasks:
        - agentIDs:
          - 5
          - 5
          isRetryable: true
          retriedTaskID: 7
          description: description
          scheduleEndTimeUsecs: 2
          startTimeUsecs: 6
          type: Auto
          error:
            errorCode: errorCode
            message: message
          clusterVersion: clusterVersion
          agents:
          - id: 9
            info:
              endTimeUsecs: 2
              name: name
              previousSoftwareVersion: previousSoftwareVersion
              startTimeUsecs: 3
              error:
                errorCode: errorCode
                message: message
              status: Scheduled
          - id: 9
            info:
              endTimeUsecs: 2
              name: name
              previousSoftwareVersion: previousSoftwareVersion
              startTimeUsecs: 3
              error:
                errorCode: errorCode
                message: message
              status: Scheduled
          endTimeUsecs: 1
          scheduleTimeUsecs: 5
          name: name
          id: 0
          status: Scheduled
        - agentIDs:
          - 5
          - 5
          isRetryable: true
          retriedTaskID: 7
          description: description
          scheduleEndTimeUsecs: 2
          startTimeUsecs: 6
          type: Auto
          error:
            errorCode: errorCode
            message: message
          clusterVersion: clusterVersion
          agents:
          - id: 9
            info:
              endTimeUsecs: 2
              name: name
              previousSoftwareVersion: previousSoftwareVersion
              startTimeUsecs: 3
              error:
                errorCode: errorCode
                message: message
              status: Scheduled
          - id: 9
            info:
              endTimeUsecs: 2
              name: name
              previousSoftwareVersion: previousSoftwareVersion
              startTimeUsecs: 3
              error:
                errorCode: errorCode
                message: message
              status: Scheduled
          endTimeUsecs: 1
          scheduleTimeUsecs: 5
          name: name
          id: 0
          status: Scheduled
      properties:
        tasks:
          description: Specifies the list of agent upgrade tasks.
          items:
            $ref: '#/components/schemas/AgentUpgradeTaskState'
          nullable: true
          type: array
          x-order: 0
      title: Agent upgrade task list
      type: object
    AlertGroupSummary:
      description: Specifies alerts summary grouped for an alert category.
      example:
        warningCount: 0
        category: kDisk
        type: type
        totalCount: 5
        criticalCount: 6
        infoCount: 1
      properties:
        category:
          description: Category of alerts by which summary is grouped.
          enum:
          - kDisk
          - kNode
          - kCluster
          - kChassis
          - kPowerSupply
          - kCPU
          - kMemory
          - kTemperature
          - kFan
          - kNIC
          - kFirmware
          - kNodeHealth
          - kOperatingSystem
          - kDataPath
          - kMetadata
          - kIndexing
          - kHelios
          - kAppMarketPlace
          - kSystemService
          - kLicense
          - kSecurity
          - kUpgrade
          - kClusterManagement
          - kAuditLog
          - kNetworking
          - kConfiguration
          - kStorageUsage
          - kFaultTolerance
          - kBackupRestore
          - kArchivalRestore
          - kRemoteReplication
          - kQuota
          - kCDP
          - kViewFailover
          type: string
          x-order: 0
        type:
          description: Type/bucket that this alert category belongs to.
          type: string
          x-order: 1
        warningCount:
          description: Specifies count of warning alerts.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        criticalCount:
          description: Specifies count of critical alerts.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        infoCount:
          description: Specifies count of info alerts.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        totalCount:
          description: Specifies count of total alerts.
          format: int64
          nullable: true
          type: integer
          x-order: 5
      type: object
    AlertStatus:
      description: Alert Status type.
      properties:
        alertStatus:
          description: Specifies Alert Status type.
          enum:
          - kSuccess
          - kFailure
          - kSlaViolation
          type: string
          x-order: 0
      title: Alert Status type.
      type: object
    AlertTarget:
      description: Specifies an alert target to receive an alert.
      properties:
        emailAddress:
          description: Specifies an email address to receive an alert.
          nullable: true
          type: string
          x-order: 0
        language:
          description: Specifies the language of the delivery target. Default value
            is 'en-us'.
          enum:
          - en-us
          - ja-jp
          - zh-cn
          nullable: true
          type: string
          x-order: 1
        recipientType:
          description: Specifies the recipient type of email recipient. Default value
            is 'kTo'.
          enum:
          - kTo
          - kCc
          nullable: true
          type: string
          x-order: 2
      required:
      - emailAddress
      type: object
    AlertsSummaryResponse:
      description: Specifies the response of alerts summary.
      example:
        alertsSummary:
        - warningCount: 0
          category: kDisk
          type: type
          totalCount: 5
          criticalCount: 6
          infoCount: 1
        - warningCount: 0
          category: kDisk
          type: type
          totalCount: 5
          criticalCount: 6
          infoCount: 1
      properties:
        alertsSummary:
          description: Specifies a list of alerts summary grouped by category.
          items:
            $ref: '#/components/schemas/AlertGroupSummary'
          nullable: true
          type: array
          x-order: 0
      type: object
    AliasSmbConfig:
      description: Message defining SMB config for IRIS. SMB config contains SMB encryption
        flags, SMB discoverable flag and Share level permissions.
      properties:
        discoveryEnabled:
          description: Whether the share is discoverable.
          nullable: true
          type: boolean
          x-order: 0
        encryptionEnabled:
          description: Whether SMB encryption is enabled for this share. Encryption
            is supported only by SMB 3.x dialects. Dialects that do not support would
            still access data in unencrypted format.
          nullable: true
          type: boolean
          x-order: 1
        encryptionRequired:
          description: Whether to enforce encryption for all the sessions for this
            view. When enabled all unencrypted sessions are disallowed.
          nullable: true
          type: boolean
          x-order: 2
        permissions:
          description: Share level permissions.
          items:
            $ref: '#/components/schemas/SmbPermission'
          nullable: true
          type: array
          x-order: 3
        superUserSids:
          description: Specifies a list of super user sids.
          items:
            type: string
          nullable: true
          type: array
          x-order: 4
        cachingEnabled:
          description: Indicate if offline file caching is supported.
          nullable: true
          type: boolean
          x-order: 5
        isShareLevelPermissionEmpty:
          description: Indicate if share level permission is cleared by user.
          nullable: true
          type: boolean
          x-order: 6
        oplockEnabled:
          description: Indicate the operation lock is enabled by this view.
          nullable: true
          type: boolean
          x-order: 7
        continuousAvailability:
          description: Whether file open handles are persited to scribe to survive
            bridge process crash. When set to false, open handles will be kept in
            memory untill the current node has exclusive ticket for the entity handle.
            When the entity is opened from another node, the exclusive ticket would
            be revoked from the node. In revoke control flow, the current node would
            persist the state to scribe. On acquiring the exclusive ticket,another
            node would read the file open handles from scribe and resume the handling
            of operation.
          nullable: true
          type: boolean
          x-order: 8
      type: object
    AnomalyAlert:
      description: Specifies the anomaly alert threshold.
      example:
        notificationInfo:
          anomalyStrengthThreshold: 0
      properties:
        notificationInfo:
          $ref: '#/components/schemas/NotificationInfo'
      title: Anomaly alert notification.
      type: object
    AntivirusScanConfig:
      description: Specifies the antivirus scan config settings for this View.
      properties:
        blockAccessOnScanFailure:
          description: Specifies whether block access to the file when antivirus scan
            fails.
          nullable: true
          type: boolean
          x-order: 0
        isEnabled:
          description: Specifies whether the antivirus service is enabled or not.
          nullable: true
          type: boolean
          x-order: 1
        maximumScanFileSize:
          description: |-
            Specifies maximum file size that will be sent to antivirus server for
            scanning. if greater than zero, the file size that exceeds this size
            would be skipped from virus scan.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        scanFilter:
          allOf:
          - $ref: '#/components/schemas/FileExtensionFilter'
          - type: object
            x-nullable: true
          description: |-
            Files extension that meets these filter criteria will be sent to
            antivirus server for the scan.
          type: object
          x-order: 3
        scanOnAccess:
          description: Specifies whether to scan a file when it is opened.
          nullable: true
          type: boolean
          x-order: 4
        scanOnClose:
          description: Specifies whether to scan a file when it is closed after modify.
          nullable: true
          type: boolean
          x-order: 5
        scanTimeoutUsecs:
          description: |-
            Specifies the maximum amount of time that a scan can take before timing
            out.
          format: int32
          nullable: true
          type: integer
          x-order: 6
      title: Antivirus scan config
      type: object
    AntivirusService:
      description: Specifies an Antivirus Service.
      properties:
        icapUri:
          description: Specifies the ICAP Uri for the Antivirus Service.
          nullable: true
          type: string
          x-order: 0
        description:
          description: Specifies the description for the Antivirus Service.
          nullable: true
          type: string
          x-order: 1
        tag:
          description: Specifies the tag of the Antivirus Service.
          nullable: true
          readOnly: true
          type: string
          x-order: 2
        tagId:
          description: Specifies the tag id of the Antivirus Service.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 3
      required:
      - icapUri
      type: object
    AntivirusServiceGroup:
      allOf:
      - $ref: '#/components/schemas/CreateAntivirusServiceGroupParams'
      - $ref: '#/components/schemas/AntivirusServiceGroup_allOf'
      description: Specifies an Antivirus Service group.
    AntivirusServiceGroups:
      description: Specifies a list of Antivirus Service groups.
      example:
        antivirusServiceGroups:
        - null
        - null
      properties:
        antivirusServiceGroups:
          description: Specifies the list of Antivirus Service groups.
          items:
            $ref: '#/components/schemas/AntivirusServiceGroup'
          nullable: true
          type: array
          x-order: 0
      type: object
    AppResource:
      description: Specifies the details about App Resource.
      properties:
        id:
          description: Specifies the unique id of the app resource.
          nullable: true
          type: string
          x-order: 0
        type:
          description: Specifies the type of the app resource.
          enum:
          - standaloneServer
          - windowsCluster
          - sqlCluster
          nullable: true
          type: string
          x-order: 1
        endpoints:
          description: Specifies the information about endpoint associated with this
            resorce.
          items:
            $ref: '#/components/schemas/ResourceEndpoint'
          nullable: true
          type: array
          x-order: 2
      type: object
    AppliedPatch:
      description: Specifies the description of an applied patch.
      example:
        component: component
        versionReplaced: versionReplaced
        service: service
        appliedTimeMsecs: 6
        count: 1
        fixedIssues:
        - id: 5
          releaseNote: releaseNote
        - id: 5
          releaseNote: releaseNote
        patchLevel: 0
        version: version
        dependencies:
        - dependencies
        - dependencies
      properties:
        service:
          description: Specifies the name of the service.
          type: string
          x-order: 0
        component:
          description: Specifies the description of the service.
          type: string
          x-order: 1
        version:
          description: Specifies the version of the patch.
          type: string
          x-order: 2
        versionReplaced:
          description: Specifies the version it replaced.
          type: string
          x-order: 3
        patchLevel:
          description: Specifies the number of patches applied so far for this service.
          format: int64
          type: integer
          x-order: 4
        appliedTimeMsecs:
          description: Specifies the time when the patch was applied in Unix epoch
            in milliseconds.
          format: int64
          type: integer
          x-order: 5
        count:
          description: Specifies the number of fixed issues.
          format: int64
          type: integer
          x-order: 6
        dependencies:
          description: Specifies the services for which their patches were applied
            together. They will also be reverted together.
          items:
            type: string
          nullable: true
          type: array
          x-order: 7
        fixedIssues:
          description: Specifies the details of the issues fixed in the patch.
          items:
            $ref: '#/components/schemas/FixedIssue'
          type: array
          x-order: 8
      title: Applied Patch.
      type: object
    AppliedPatches:
      description: Specifies the applied patches on the cluster.
      items:
        $ref: '#/components/schemas/AppliedPatch'
      title: Applied Patches.
      type: array
    ApplyPatchesRequest:
      description: Specifies the request to apply a patch.
      example:
        all: true
        service: service
      properties:
        service:
          description: Specifies the name of the service whose patch should be applied.
          nullable: true
          type: string
          x-order: 0
        all:
          description: Specifies all the available patches should be applied.
          nullable: true
          type: boolean
          x-order: 1
      title: Apply patch.
      type: object
    ArchivalAwsExternalTargetParams:
      allOf:
      - $ref: '#/components/schemas/CommonArchivalAwsExternalTargetParams'
      - $ref: '#/components/schemas/ArchivalAwsExternalTargetParams_allOf'
      description: Specifies the common parameters which are specific to AWS related
        External Targets.
      title: AWS External Target Request Params for archival purpose type.
    ArchivalAzureExternalTargetParams:
      allOf:
      - $ref: '#/components/schemas/CommonArchivalAzureExternalTargetParams'
      - $ref: '#/components/schemas/ArchivalAzureExternalTargetParams_allOf'
      description: Specifies the common parameters which are specific to Azure related
        External Targets.
      title: Azure External Target Request Params for archival purpose type.
    ArchivalBandwidthSettings:
      allOf:
      - $ref: '#/components/schemas/CommonBandwidthSettings'
      description: Specifies the global bandwidth setting of the Archival External
        Target.
      title: Archival Bandwidth Settings
    ArchivalConfig:
      allOf:
      - $ref: '#/components/schemas/CommonTargetConfiguration'
      - $ref: '#/components/schemas/ArchivalConfig_allOf'
      description: Specifies settings for copying Snapshots External Targets (such
        as AWS or Tape). This also specifies the retention policy that should be applied
        to Snapshots after they have been copied to the specified target.
      title: Archival Target Configuration
    ArchivalDataStats:
      description: Specifies statistics about archival data.
      properties:
        logicalSizeBytes:
          description: Specifies the logicalSizeBytes.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        bytesRead:
          description: Specifies total logical bytes read for creating the snapshot.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        logicalBytesTransferred:
          description: Specifies the logical bytes transferred.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        physicalBytesTransferred:
          description: Specifies the physical bytes transferred.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        avgLogicalTransferRateBps:
          description: Specifies the average rate of transfer in bytes per second.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        fileWalkDone:
          description: Specifies whether the file system walk is done. Only applicable
            to file based backups.
          nullable: true
          type: boolean
          x-order: 5
        totalFileCount:
          description: Specifies the total number of file and directory entities visited
            in this backup. Only applicable to file based backups.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        backupFileCount:
          description: Specifies the total number of file and directory entities that
            are backed up in this run. Only applicable to file based backups.
          format: int64
          nullable: true
          type: integer
          x-order: 7
      title: Archival data statistics.
      type: object
    ArchivalExternalTargetParams:
      allOf:
      - $ref: '#/components/schemas/CommonArchivalExternalTargetParams'
      - $ref: '#/components/schemas/ArchivalExternalTargetParams_allOf'
      description: Specifies the parameters which are specific to Archival purpose
        type External Targets.
    ArchivalGcpExternalTargetParams:
      allOf:
      - $ref: '#/components/schemas/CommonGcpExternalTargetParams'
      - $ref: '#/components/schemas/ArchivalGcpExternalTargetParams_allOf'
      description: Specifies the parameters which are specific to GCP related External
        Targets of archival purpose type.
      title: GCP Common External Target Request Common Params for archival purpose
        type.
    ArchivalNasExternalTargetParams:
      description: Specifies the parameters which are specific to Nas related External
        Targets of archival purpose type.
      properties:
        host:
          description: Specifies the host of the NAS external target.
          nullable: true
          type: string
          x-order: 0
        mountPath:
          description: Specifies the mount path of the NAS external target.
          nullable: true
          type: string
          x-order: 1
        shareType:
          description: Specifies the share type of the NAS external target.
          enum:
          - CIFS
          - NFS
          nullable: true
          type: string
          x-order: 2
        sourceSideDeduplication:
          description: Specifies the Source Side Deduplication setting for the Nas
            external target
          nullable: true
          type: boolean
          x-order: 3
        isIncrementalArchivalEnabled:
          description: Specifies if Incremental Archival setting is enabled or not.
          nullable: true
          type: boolean
          x-order: 4
        isForeverIncrementalArchivalEnabled:
          description: Specifies if Forever Incremental Archival setting is enabled
            or not.
          nullable: true
          type: boolean
          x-order: 5
      required:
      - host
      - mountPath
      title: Nas External Target Params for archival purpose type.
      type: object
    ArchivalOracleExternalTargetParams:
      allOf:
      - $ref: '#/components/schemas/CommonOracleExternalTargetParams'
      - $ref: '#/components/schemas/ArchivalOracleExternalTargetParams_allOf'
      description: Specifies the common parameters which are specific to Oracle related
        External Targets.
      title: Oracle External Target Request Params for archival purpose type.
    ArchivalQstarTapeExternalTargetParams:
      description: Specifies the parameters which are specific to QStar Tape related
        External Targets of archival purpose type.
      properties:
        host:
          description: Specifies the host of the QStar Tape external target.
          nullable: true
          type: string
          x-order: 0
        webServicesPort:
          description: Specifies the Web Services Port of the QStar Tape external
            target.
          format: int32
          nullable: true
          type: integer
          x-order: 1
        username:
          description: Specifies the Username of the QStar Tape external target.
          nullable: true
          type: string
          x-order: 2
        password:
          description: Specifies the Password of the QStar Tape external target.
          nullable: true
          type: string
          x-order: 3
        shareType:
          description: Specifies the share type of QStar Tape external target.
          enum:
          - CIFS
          - NFS
          nullable: true
          type: string
          x-order: 4
        useHttps:
          description: Specifies whether HTTPS is used or not.
          nullable: true
          type: boolean
          x-order: 5
        integralVolumeNames:
          description: Specifies the Integral Volume Names of the QStar Tape external
            target.
          items:
            type: string
          nullable: true
          type: array
          x-order: 6
        isIncrementalArchivalEnabled:
          description: Specifies if Incremental Archival setting is enabled or not.
          nullable: true
          type: boolean
          x-order: 7
        isForeverIncrementalArchivalEnabled:
          description: Specifies if Forever Incremental Archival setting is enabled
            or not.
          nullable: true
          type: boolean
          x-order: 8
      required:
      - host
      - password
      - username
      - webServicesPort
      title: QStar Tape External Target Params for archival purpose type.
      type: object
    ArchivalRun:
      description: Specifies information about archival run for an object.
      properties:
        archivalTargetResults:
          description: Archival result for an archival target.
          items:
            $ref: '#/components/schemas/ArchivalTargetResult'
          type: array
          x-order: 0
      title: Archival run information for an object.
      type: object
    ArchivalRunFilterParams:
      description: Specifies the additional filtering params for archival runs.
      example:
        runTypes:
        - kRegular
        - kRegular
        protectionEnvironmentTypes:
        - kVMware
        - kVMware
      properties:
        runTypes:
          description: Specifies the run types to filter archival runs.
          items:
            enum:
            - kRegular
            - kFull
            - kLog
            - kSystem
            - kHydrateCDP
            type: string
          nullable: true
          type: array
          x-order: 0
        protectionEnvironmentTypes:
          description: Specifies the protection environment types to filter archival
            runs.
          items:
            enum:
            - kVMware
            - kHyperV
            - kAzure
            - kGCP
            - kKVM
            - kAcropolis
            - kAWS
            - kPhysical
            - kGPFS
            - kElastifile
            - kNetapp
            - kGenericNas
            - kIsilon
            - kFlashBlade
            - kPure
            - kSQL
            - kExchange
            - kAD
            - kOracle
            - kView
            - kRemoteAdapter
            - kO365
            - kO365PublicFolders
            - kO365Teams
            - kO365Group
            - kO365Exchange
            - kO365OneDrive
            - kO365Sharepoint
            - kKubernetes
            - kCassandra
            - kMongoDB
            - kCouchbase
            - kHdfs
            - kHive
            - kHBase
            - kUDA
            type: string
          nullable: true
          type: array
          x-order: 1
      type: object
    ArchivalRunSummary:
      description: Specifies summary information about archival run.
      properties:
        archivalTargetResults:
          description: Archival results for each archival target.
          items:
            $ref: '#/components/schemas/ArchivalTargetResult'
          type: array
          x-order: 0
      title: Summary information for archival run.
      type: object
    ArchivalS3CompExternalTargetParams:
      allOf:
      - $ref: '#/components/schemas/CommonS3CompExternalTargetParams'
      - $ref: '#/components/schemas/ArchivalS3CompExternalTargetParams_allOf'
      description: Specifies the parameters which are specific to S3 Compatible related
        External Targets of archival purpose type.
      title: S3 Compatible Common External Target Request Common Params for archival
        purpose type.
    ArchivalTargetProgressInfo:
      allOf:
      - $ref: '#/components/schemas/ArchivalTargetSummaryInfo'
      - $ref: '#/components/schemas/ProgressTaskInfo'
      - $ref: '#/components/schemas/ArchivalTargetProgressInfo_allOf'
      description: Specifies the progress of an archival run target.
    ArchivalTargetResult:
      allOf:
      - $ref: '#/components/schemas/ArchivalTargetSummaryInfo'
      - $ref: '#/components/schemas/ArchivalTargetResult_allOf'
      description: Archival result for an archival target.
      title: Archival result for a target.
    ArchivalTargetStorageType:
      description: Specifies the storage type of External Target of archival purpose
        type.
      properties:
        enum:
          description: Specifies the storage type of External Target of archival purpose
            type.
          enum:
          - Azure
          - Google
          - AWS
          - Oracle
          - Nas
          - QStarTape
          - S3Compatible
          type: string
          x-order: 0
      title: Archival Target Storage Type
      type: object
    ArchivalTargetSummaryInfo:
      description: Specifies archival target summary information.
      properties:
        targetId:
          description: Specifies the archival target ID.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        archivalTaskId:
          description: Specifies the archival task id. This is a protection group
            UID which only applies when archival type is 'Tape'.
          nullable: true
          type: string
          x-order: 1
        targetName:
          description: Specifies the archival target name.
          nullable: true
          type: string
          x-order: 2
        targetType:
          description: Specifies the archival target type.
          enum:
          - Tape
          - Cloud
          - Nas
          nullable: true
          type: string
          x-order: 3
        tierSettings:
          $ref: '#/components/schemas/ArchivalTargetTierInfo'
      title: Archival target.
      type: object
    ArchivalTargetTierInfo:
      allOf:
      - $ref: '#/components/schemas/TierLevelSettings'
      - $ref: '#/components/schemas/ArchivalTargetTierInfo_allOf'
      description: Specifies the tier info for archival.
      title: Archival Target Tier Info
    ArchivalTargets:
      description: Archival Targets
      properties:
        archivalTargets:
          description: Specifies the archival target.
          enum:
          - Tape
          - Cloud
          - Nas
          type: string
          x-order: 0
      title: ArchivalTargets
      type: object
    AssignClusterToTenantParamsBody:
      description: Params to assign a cluster or region to a tenant
      example:
        clusterIdentifier: clusterIdentifier
        network:
          clusterIps:
          - clusterIps
          - clusterIps
          clusterHostname: clusterHostname
          connectorEnabled: true
      properties:
        clusterIdentifier:
          description: |-
            Specifies the list of cluster identifiers. The format is
            clusterId:clusterIncarnationId.
          nullable: true
          pattern: ^([0-9]+:[0-9]+)$
          type: string
          x-order: 0
        network:
          $ref: '#/components/schemas/TenantNetwork'
      required:
      - clusterIdentifier
      - network
      title: AssignClusterToTenantParamsBody
      type: object
    AuditActions:
      description: Audit Actions
      properties:
        actions:
          description: Audit Actions
          enum:
          - Login
          - Logout
          - Create
          - Modify
          - Delete
          - Activate
          - Deactivate
          - Pause
          - Resume
          - RunNow
          - Clone
          - Recover
          - Cancel
          - Register
          - Unregister
          - Update
          - Refresh
          - Upgrade
          - Upload
          - Download
          - Rename
          - Accept
          - Mark
          - Close
          - Join
          - DisJoin
          - Overwrite
          - MarkRemoval
          - CloudSpin
          - Assign
          - Unassign
          - NotificationRule
          - ScheduleReport
          - Install
          - Uninstall
          - Stop
          - Start
          - Restart
          - RunDiagnostics
          - Apply
          - Revert
          - Import
          - Validate
          type: string
          x-order: 0
      title: Audit Actions
      type: object
    AuditEntityTypes:
      description: Entity Types
      properties:
        entityTypes:
          description: Entity Types
          enum:
          - ClusterPartition
          - StorageDomain
          - View
          - Share
          - Node
          - Disk
          - Cluster
          - Vlan
          - User
          - ApiKey
          - Chassis
          - SslCertificate
          - ProtectionGroup
          - Source
          - RecoveryTask
          - SmtpServer
          - EncryptionKey
          - ProtectionPolicy
          - Alert
          - Resolution
          - AlertNotificationRule
          - Vault
          - RemoteCluster
          - ActiveDirectory
          - KerberosProvider
          - Ldap
          - AntivirusServiceGroup
          - InfectedFile
          - PreferredDomainController
          - Group
          - Role
          - ProtectionRun
          - SearchJob
          - PhysicalAgent
          - CloneTask
          - CloneRefreshTask
          - Network
          - Interface
          - NetworkInerfaceGroup
          - Scheduler
          - ProxyServer
          - StaticRoute
          - Ip
          - Qos
          - KmsConfiguration
          - CloudSpin
          - Tenant
          - IdpConfiguration
          - App
          - HeliosEvent
          - Object
          - ClusterServices
          - AccessToken
          - SnmpConfig
          - IoTier
          - ServiceFlag
          - SupportServer
          - Csr
          - Keystone
          - SwiftRoles
          - Tags
          - Nis
          - Snapshot
          - HybridExtender
          - DataTieringAnalysisGroup
          - DataTieringDowntierTask
          - DataTieringUptierTask
          - TrustedCA
          - AMQPTargetConfiguration
          - Patch
          - Hotfix
          type: string
          x-order: 0
      title: Entity Types
      type: object
    AuditLog:
      description: Specifies an audit log message.
      example:
        originalTenantName: originalTenantName
        entityType: entityType
        previousRecord: previousRecord
        ip: ip
        isImpersonation: true
        tenantName: tenantName
        entityName: entityName
        domain: domain
        timestampUsecs: 0
        tenantId: tenantId
        action: action
        originalTenantId: originalTenantId
        details: details
        newRecord: newRecord
        username: username
      properties:
        details:
          description: Specifies the change details of this audit log.
          nullable: true
          type: string
          x-order: 0
        username:
          description: Specifies the username who made this audit log.
          nullable: true
          type: string
          x-order: 1
        domain:
          description: Specifies the domain of user who made this audit log.
          nullable: true
          type: string
          x-order: 2
        entityName:
          description: Specifies the entity name.
          nullable: true
          type: string
          x-order: 3
        entityType:
          description: Specifies the entity type.
          nullable: true
          type: string
          x-order: 4
        action:
          description: Specifies the action type of this audit log.
          nullable: true
          type: string
          x-order: 5
        timestampUsecs:
          description: Specifies a unix timestamp in micro seconds when the audit
            log was taken.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        ip:
          description: Specifies the ip of user who made this audit log.
          nullable: true
          type: string
          x-order: 7
        isImpersonation:
          description: Specifies if the action is made through impersonation.
          nullable: true
          type: boolean
          x-order: 8
        tenantId:
          description: Specifies the tenant id who made this audit log.
          nullable: true
          type: string
          x-order: 9
        tenantName:
          description: Specifies the tenant name who made this audit log.
          nullable: true
          type: string
          x-order: 10
        originalTenantId:
          description: Specifies the original tenant id who made this audit log.
          nullable: true
          type: string
          x-order: 11
        originalTenantName:
          description: Specifies the original tenant name who made this audit log.
          nullable: true
          type: string
          x-order: 12
        previousRecord:
          description: 'Specifies the record before the action is invoked. This will
            be returned only if verbose audit is enabled. '
          nullable: true
          type: string
          x-order: 13
        newRecord:
          description: 'Specifies the record after the action is invoked. This will
            be returned only if verbose audit is enabled. '
          nullable: true
          type: string
          x-order: 14
      type: object
    AuditLogs:
      description: Sepcifies the audit logs.
      example:
        auditLogs:
        - originalTenantName: originalTenantName
          entityType: entityType
          previousRecord: previousRecord
          ip: ip
          isImpersonation: true
          tenantName: tenantName
          entityName: entityName
          domain: domain
          timestampUsecs: 0
          tenantId: tenantId
          action: action
          originalTenantId: originalTenantId
          details: details
          newRecord: newRecord
          username: username
        - originalTenantName: originalTenantName
          entityType: entityType
          previousRecord: previousRecord
          ip: ip
          isImpersonation: true
          tenantName: tenantName
          entityName: entityName
          domain: domain
          timestampUsecs: 0
          tenantId: tenantId
          action: action
          originalTenantId: originalTenantId
          details: details
          newRecord: newRecord
          username: username
        count: 6
      properties:
        auditLogs:
          description: Specifies a list of audit logs.
          items:
            $ref: '#/components/schemas/AuditLog'
          nullable: true
          type: array
          x-order: 0
        count:
          description: Specifies the total number of audit logs that match the filter
            and search criteria. Use this value to determine how many additional requests
            are required to get the full result.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    AuditLogsActions:
      description: Specifies actions of audit logs.
      example:
        actions:
        - actions
        - actions
      properties:
        actions:
          description: Specifies a list of audit logs actions.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
      type: object
    AuditLogsEntityTypes:
      description: Specifies entity types of audit logs.
      example:
        entityTypes:
        - entityTypes
        - entityTypes
      properties:
        entityTypes:
          description: Specifies a list of audit logs entity types.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
      type: object
    AuroraConfig:
      description: Specifies the parameters to recover AWS Aurora.
      properties:
        dbPort:
          description: Specifies the port to use for the DB in the restored Aurora
            instance.
          format: int32
          nullable: true
          type: integer
          x-order: 0
        dbInstanceId:
          description: Specifies the DB instance identifier to use for the restored
            DB.
          nullable: true
          type: string
          x-order: 1
        isMultiAzDeployment:
          description: Specifies whether this is a multi-az deployment or not.
          nullable: true
          type: boolean
          x-order: 2
        enablePublicAccessibility:
          description: Specifies whether this DB will be publicly accessible or not.
          nullable: true
          type: boolean
          x-order: 3
        enableIamDbAuthentication:
          description: Specifies whether to enable IAM authentication for the DB.
          nullable: true
          type: boolean
          x-order: 4
        enableCopyTagsToSnapshots:
          description: Specifies whether to enable copying of tags to snapshots of
            the DB.
          nullable: true
          type: boolean
          x-order: 5
        enableAutoMinorVersionUpgrade:
          description: Specifies whether to enable auto minor version upgrade in the
            restored DB.
          nullable: true
          type: boolean
          x-order: 6
        dbOptionGroup:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies entity representing the Aurora option group to use
            while restoring the DB.
          nullable: true
          type: object
          x-order: 7
        dbParameterGroup:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the entity representing the Aurora parameter group
            to use while restoring the DB.
          nullable: true
          type: object
          x-order: 8
      required:
      - dbInstanceId
      - dbPort
      - enableAutoMinorVersionUpgrade
      - enableCopyTagsToSnapshots
      - enableIamDbAuthentication
      - isMultiAzDeployment
      title: Recover AWS Aurora params.
      type: object
    AvailablePatch:
      description: Specifies the description of an available patch.
      example:
        component: component
        service: service
        count: 0
        fixedIssues:
        - id: 5
          releaseNote: releaseNote
        - id: 5
          releaseNote: releaseNote
        version: version
        dependencies:
        - dependencies
        - dependencies
      properties:
        service:
          description: Specifies the name of the service.
          type: string
          x-order: 0
        component:
          description: Specifies the description of the service.
          type: string
          x-order: 1
        version:
          description: Specifies the version of the patch.
          type: string
          x-order: 2
        count:
          description: Specifies the number of fixed issues.
          format: int64
          type: integer
          x-order: 3
        dependencies:
          description: Specifies the services for which their patches must be applied
            together.
          items:
            type: string
          nullable: true
          type: array
          x-order: 4
        fixedIssues:
          description: Specifies the details of the issues fixed in the patch.
          items:
            $ref: '#/components/schemas/FixedIssue'
          type: array
          x-order: 5
      title: Available Patch.
      type: object
    AvailablePatches:
      description: Specifies the available patches for the cluster.
      items:
        $ref: '#/components/schemas/AvailablePatch'
      title: Available Patches.
      type: array
    AwsAgentProtectionGroupObjectParams:
      description: Specifies the object parameters to create agent based AWS Protection
        Group.
      properties:
        id:
          description: Specifies the id of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the virtual machine.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      title: Agent based AWS Protection Group Object Params.
      type: object
    AwsAgentProtectionGroupParams:
      description: Specifies the parameters which are specific to AWS related Protection
        Groups using cohesity protection-service installed on EC2 instance.
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/AwsAgentProtectionGroupObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        excludeObjectIds:
          description: Specifies the objects to be excluded in the Protection Group.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          uniqueItems: true
          x-order: 1
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 2
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 3
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        appConsistentSnapshot:
          description: Specifies whether or not to quiesce apps and the file system
            in order to take app consistent snapshots. If not specified or false then
            snapshots will not be app consistent.
          nullable: true
          type: boolean
          x-order: 5
      required:
      - objects
      title: Agent based AWS Protection Group Request Params.
      type: object
    AwsArchivalStorageClass:
      description: Specifies the storage class of Aws External Target of archival
        purpose type.
      properties:
        enum:
          description: Specifies the storage class of Aws External Target of archival
            purpose type.
          enum:
          - AmazonS3Standard
          - AmazonS3StandardIA
          - AmazonS3OneZoneIA
          - AmazonS3IntelligentTiering
          - AmazonS3Glacier
          - AmazonS3GlacierDeepArchive
          - AmazonGlacier
          type: string
          x-order: 0
      title: Aws Archival Storage Class
      type: object
    AwsAuroraProtectionGroupObjectParams:
      description: Specifies the object parameters to create an AWS Aurora Protection
        Group.
      properties:
        id:
          description: Specifies the id of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the virtual machine.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      title: AWS Aurora Snapshot Manager Protection Group Object Params.
      type: object
    AwsAuroraProtectionGroupParams:
      description: Specifies the parameters which are specific to AWS Aurora related
        Protection Groups.
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/AwsAuroraProtectionGroupObjectParams'
          type: array
          uniqueItems: true
          x-order: 0
        excludeObjectIds:
          description: Specifies the objects to be excluded in the Protection Group.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          uniqueItems: true
          x-order: 1
        auroraTagIds:
          description: Array of arrays of Aurora Tag Ids that specify aurora clusters
            to protect.
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
          x-order: 2
        excludeAuroraTagIds:
          description: Array of arrays of RDS Tag Ids that specify aurora clusters
            to exclude.
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
          x-order: 3
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 4
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 5
      title: AWS Aurora Snapshot Manager Protection Group Request Params.
      type: object
    AwsAuroraRecoveryTargetConfig:
      description: Specifies the target object parameters to recover AWS Aurora.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or an existing Source Target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverAwsAuroraNewSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the Aurora instances will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
      required:
      - recoverToNewSource
      title: AWS Aurora Recovery Target Config.
      type: object
    AwsAuthMethod:
      description: Describes the Authentication Methods of AWS External Targets
      properties:
        enum:
          description: Specifies Authentication Methods of AWS External Targets
          enum:
          - kUseIAMUser
          - kUseIAMRole
          type: string
          x-order: 0
      title: AWS External Target Authentication Methods
      type: object
    AwsAuthMethodType:
      description: AWS Authentication Method Type
      properties:
        awsAuthMethodType:
          description: Specifies the AWS Authentication Method types.
          enum:
          - kUseIAMUser
          - kUseIAMRole
          type: string
          x-order: 0
      title: AWS Authentication Method Type
      type: object
    AwsAuthenticationMethodsParams:
      allOf:
      - $ref: '#/components/schemas/CommonAuthenticationMethodParams'
      - $ref: '#/components/schemas/AwsAuthenticationMethodsParams_allOf'
      description: Specifies the Authentication Methods parameters which are specific
        to AWS related External Targets.
      title: AWS External Targets Authentication Methods Params.
    AwsCloudC2SParams:
      description: Specifies the parameters which are specific to AWS related External
        Targets with Cloud Type C2S.
      properties:
        baseURL:
          description: Specifies base url of the External Target.
          nullable: true
          type: string
          x-order: 0
        agency:
          description: Specifies agency of the External Target.
          nullable: true
          type: string
          x-order: 1
        mission:
          description: Specifies mission of the External Target
          nullable: true
          type: string
          x-order: 2
        role:
          description: Specifies role of the External Target
          nullable: true
          type: string
          x-order: 3
        clientCertificatePassword:
          description: Specifies client certificate password of the External Target
          nullable: true
          type: string
          x-order: 4
        serverCATrustedCertificate:
          description: Specifies server CA trusted certificate of the External Target
          nullable: true
          type: string
          x-order: 5
        clientCertificate:
          description: Specifies client certificate of the External Target
          nullable: true
          type: string
          x-order: 6
        clientPrivateKey:
          description: Specifies client private key of the External Target
          nullable: true
          type: string
          x-order: 7
      required:
      - agency
      - baseURL
      - clientCertificate
      - clientCertificatePassword
      - clientPrivateKey
      - mission
      - role
      - serverCATrustedCertificate
      title: AWS External Target C2S Cloud Type Params.
      type: object
    AwsCloudGovParams:
      description: Specifies the parameters which are specific to AWS related External
        Targets with Cloud Type Gov.
      properties:
        authenticationMethod:
          $ref: '#/components/schemas/AwsAuthenticationMethodsParams'
      title: AWS External Target Gov Cloud Type Params.
      type: object
    AwsCloudSpinParams:
      description: Specifies various resources when converting and deploying a VM
        to AWS.
      properties:
        region:
          description: Specifies id of the AWS region in which to deploy the VM.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        vpcId:
          description: Specifies id of the Virtual Private Cloud to chose for the
            instance type.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        subnetId:
          description: Specifies id of the subnet within above VPC.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      required:
      - region
      title: AWS Parameters.
      type: object
    AwsCloudStandardParams:
      description: Specifies the parameters which are specific to AWS related External
        Targets with Cloud Type Standard.
      properties:
        authenticationMethod:
          $ref: '#/components/schemas/AwsAuthenticationMethodsParams'
      title: AWS External Target Standard Cloud Type Params.
      type: object
    AwsCommonObjectProtectionParams:
      description: Specifies the parameters which are specific to AWS related Object
        Protection and common to different AWS protection types.
      properties:
        protectionType:
          description: Specifies the AWS Protection Job type.
          enum:
          - kAgent
          - kNative
          - kSnapshotManager
          - kRDSSnapshotManager
          - kAuroraSnapshotManager
          type: string
          x-order: 0
      title: AWS Common Object Protection Params.
      type: object
    AwsGlacierParams:
      allOf:
      - $ref: '#/components/schemas/CommonAWSCategoryParams'
      - $ref: '#/components/schemas/AwsGlacierParams_allOf'
      description: Specifies the parameters which are specific to AWS related External
        Targets with storage class Glacier.
      title: AWS Glacier Request Params.
    AwsIAmRoleParams:
      description: Specifies the parameters which are specific to IAmRole Authentication
        Method for AWS External Target.
      properties:
        accountId:
          description: Specifies the Account Id of the external target.
          nullable: true
          type: string
          x-order: 0
        iAmRole:
          description: Specifies the I Am Role of the external target.
          nullable: true
          type: string
          x-order: 1
      required:
      - accountId
      - iAmRole
      title: AWS IAmRole params.
      type: object
    AwsIAmUserParams:
      description: Specifies the parameters which are specific to IAmUSer Authentication
        Method for AWS External Target.
      properties:
        accessKeyId:
          description: Specifies the Access Key Id of the external target.
          nullable: true
          type: string
          x-order: 0
        secretAccessKey:
          description: Specifies the Secret Access Key of the external target.
          nullable: true
          type: string
          x-order: 1
      required:
      - accessKeyId
      - secretAccessKey
      title: AWS IAmUser params.
      type: object
    AwsNativeObjectProtectionParams:
      description: Specifies the parameters which are specific to AWS Object Protection
        Groups using AWS native snapshot APIs. Atlease one of tags or objects must
        be specified.
      properties:
        objects:
          description: Specifies the objects to be protected.
          items:
            $ref: '#/components/schemas/AwsObjectLevelParams'
          type: array
          x-order: 0
        volumeExclusionParams:
          $ref: '#/components/schemas/EbsVolumeExclusionParams'
      title: AWS Native Object Protection Request Params.
      type: object
    AwsNativeProtectionGroupObjectParams:
      description: Specifies the object parameters to create AWS Native Protection
        Group.
      properties:
        id:
          description: Specifies the id of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the virtual machine.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        volumeExclusionParams:
          $ref: '#/components/schemas/EbsVolumeExclusionParams'
      required:
      - id
      title: AWS Native Protection Group Object Params.
      type: object
    AwsNativeProtectionGroupParams:
      description: Specifies the parameters which are specific to AWS related Protection
        Groups using AWS native snapshot APIs. Atlease one of tags or objects must
        be specified.
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/AwsNativeProtectionGroupObjectParams'
          type: array
          x-order: 0
        excludeObjectIds:
          description: Specifies the objects to be excluded in the Protection Group.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          uniqueItems: true
          x-order: 1
        volumeExclusionParams:
          $ref: '#/components/schemas/EbsVolumeExclusionParams'
        vmTagIds:
          description: 'Array of Array of VM Tag Ids that Specify VMs to Protect.
            Optionally specify a list of VMs to protect by listing Protection Source
            ids of VM Tags in this two dimensional array. Using this two dimensional
            array of Tag ids, the Cluster generates a list of VMs to protect which
            are derived from intersections of the inner arrays and union of the outer
            array, as shown by the following example. To protect only ''Eng'' VMs
            in the East and all the VMs in the West, specify the following tag id
            array: [ [1101, 2221], [3031] ], where 1101 is the ''Eng'' VM Tag id,
            2221 is the ''East'' VM Tag id and 3031 is the ''West'' VM Tag id. The
            inner array [1101, 2221] produces a list of VMs that are both tagged with
            ''Eng'' and ''East'' (an intersection). The outer array combines the list
            from the inner array with list of VMs tagged with ''West'' (a union).
            The list of resulting VMs are protected by this Protection Group.'
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
          x-order: 3
        excludeVmTagIds:
          description: 'Array of Arrays of VM Tag Ids that Specify VMs to Exclude.
            Optionally specify a list of VMs to exclude from protecting by listing
            Protection Source ids of VM Tags in this two dimensional array. Using
            this two dimensional array of Tag ids, the Cluster generates a list of
            VMs to exclude from protecting, which are derived from intersections of
            the inner arrays and union of the outer array, as shown by the following
            example. For example a Datacenter is selected to be protected but you
            want to exclude all the ''Former Employees'' VMs in the East and West
            but keep all the VMs for ''Former Employees'' in the South which are also
            stored in this Datacenter, by specifying the following tag id array: [
            [1000, 2221], [1000, 3031] ], where 1000 is the ''Former Employee'' VM
            Tag id, 2221 is the ''East'' VM Tag id and 3031 is the ''West'' VM Tag
            id. The first inner array [1000, 2221] produces a list of VMs that are
            both tagged with ''Former Employees'' and ''East'' (an intersection).
            The second inner array [1000, 3031] produces a list of VMs that are both
            tagged with ''Former Employees'' and ''West'' (an intersection). The outer
            array combines the list of VMs from the two inner arrays. The list of
            resulting VMs are excluded from being protected this Job.'
          items:
            items:
              format: int64
              type: integer
            type: array
          type: array
          x-order: 4
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 5
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 6
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
      title: AWS Native Protection Group Request Params.
      type: object
    AwsObjectLevelParams:
      description: Specifies the Aws object level settings for object protection.
      properties:
        id:
          description: Specifies the id of the object being protected. This can be
            a leaf level or non leaf level object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        volumeExclusionParams:
          $ref: '#/components/schemas/EbsVolumeExclusionParams'
      required:
      - id
      title: AWS Object Level Params
      type: object
    AwsObjectProtectionRequestParams:
      allOf:
      - $ref: '#/components/schemas/AwsCommonObjectProtectionParams'
      - $ref: '#/components/schemas/AwsObjectProtectionRequestParams_allOf'
      description: Specifies the parameters which are specific to AWS related Object
        Protection.
      title: AWS Object Protection Request Params.
    AwsObjectProtectionResponseParams:
      allOf:
      - $ref: '#/components/schemas/AwsCommonObjectProtectionParams'
      - $ref: '#/components/schemas/AwsObjectProtectionRequestParams_allOf'
      description: Specifies the parameters which are specific to AWS related Object
        Protection response.
      title: AWS Object Protection Response Params.
    AwsObjectProtectionUpdateRequestParams:
      allOf:
      - $ref: '#/components/schemas/AwsCommonObjectProtectionParams'
      - $ref: '#/components/schemas/AwsObjectProtectionRequestParams_allOf'
      description: Specifies the parameters which are specific to AWS related Object
        Protection update request.
      title: AWS Object Protection Update Request Params.
    AwsProtectionGroupParams:
      description: Specifies the parameters which are specific to AWS related Protection
        Groups.
      properties:
        protectionType:
          description: Specifies the AWS Protection Group type.
          enum:
          - kAgent
          - kNative
          - kSnapshotManager
          - kRDSSnapshotManager
          - kAuroraSnapshotManager
          type: string
          x-order: 0
        agentProtectionTypeParams:
          $ref: '#/components/schemas/AwsAgentProtectionGroupParams'
        nativeProtectionTypeParams:
          $ref: '#/components/schemas/AwsNativeProtectionGroupParams'
        snapshotManagerProtectionTypeParams:
          $ref: '#/components/schemas/AwsSnapshotManagerProtectionGroupParams'
        rdsProtectionTypeParams:
          $ref: '#/components/schemas/AwsRdsProtectionGroupParams'
        auroraProtectionTypeParams:
          $ref: '#/components/schemas/AwsAuroraProtectionGroupParams'
      required:
      - protectionType
      title: AWS Protection Group Request Params.
      type: object
    AwsProtectionGroupType:
      description: AWS Protection Group type.
      properties:
        environment:
          description: Specifies AWS Protection Group type.
          enum:
          - kAgent
          - kNative
          - kSnapshotManager
          - kRDSSnapshotManager
          - kAuroraSnapshotManager
          type: string
          x-order: 0
      title: AWS Protection Group type.
      type: object
    AwsRdsProtectionGroupObjectParams:
      description: Specifies the object parameters to create an AWS RDS Protection
        Group.
      properties:
        id:
          description: Specifies the id of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the virtual machine.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      title: AWS RDS Snapshot Manager Protection Group Object Params.
      type: object
    AwsRdsProtectionGroupParams:
      description: Specifies the parameters which are specific to AWS RDS related
        Protection Groups.
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/AwsRdsProtectionGroupObjectParams'
          type: array
          uniqueItems: true
          x-order: 0
        excludeObjectIds:
          description: Specifies the objects to be excluded in the Protection Group.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          uniqueItems: true
          x-order: 1
        rdsTagIds:
          description: Array of arrays of RDS Tag Ids that Specify db instaces to
            Protect.
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
          x-order: 2
        excludeRdsTagIds:
          description: Array of arrays of RDS Tag Ids that Specify db instaces to
            Exclude.
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
          x-order: 3
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 4
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 5
      title: AWS RDS Snapshot Manager Protection Group Request Params.
      type: object
    AwsRdsRecoveryTargetConfig:
      description: Specifies the target object parameters to recover AWS RDS.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or an existing Source Target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverAwsRdsNewSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the RDS instances will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
      required:
      - recoverToNewSource
      title: AWS RDS Recovery Target Config.
      type: object
    AwsRecoverFilesNewTargetConfig:
      description: Specifies the configuration for recovering files and folders to
        a new target.
      properties:
        targetVm:
          allOf:
          - $ref: '#/components/schemas/RecoverTarget'
          - type: object
            x-nullable: true
          description: Specifies the target VM to recover files and folders to.
          nullable: true
          type: object
          x-order: 0
        targetVmCredentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          - type: object
            x-nullable: true
          description: Specifies the credentials for the target VM.
          nullable: true
          type: object
          x-order: 1
        absolutePath:
          description: Specifies the path location to recover files to.
          nullable: true
          type: string
          x-order: 2
      required:
      - absolutePath
      - targetVm
      - targetVmCredentials
      title: AWS Recover Files New Target Config.
      type: object
    AwsRecoverFilesOriginalTargetConfig:
      description: Specifies the configuration for recovering files and folders to
        the original target.
      properties:
        targetVmCredentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          - type: object
            x-nullable: true
          description: Specifies the credentials for the target VM.
          nullable: true
          type: object
          x-order: 0
        recoverToOriginalPath:
          description: Specifies whether to recover files and folders to the original
            path location. If false, alternatePath must be specified.
          nullable: true
          type: boolean
          x-order: 1
        alternatePath:
          description: Specifies the alternate path location to recover files to.
          nullable: true
          type: string
          x-order: 2
      required:
      - recoverToOriginalPath
      - targetVmCredentials
      title: AWS Recover Files Original Target Config.
      type: object
    AwsS3GlacierDeepArchiveParams:
      allOf:
      - $ref: '#/components/schemas/CommonAWSCategoryParams'
      - $ref: '#/components/schemas/AwsS3GlacierDeepArchiveParams_allOf'
      description: Specifies the parameters which are specific to AWS related External
        Targets with storage class S3 Glacier Deep Archive.
      title: AWS S3 Glacier Deep Archive Request Params.
    AwsS3GlacierParams:
      allOf:
      - $ref: '#/components/schemas/CommonAWSCategoryParams'
      - $ref: '#/components/schemas/AwsS3GlacierDeepArchiveParams_allOf'
      description: Specifies the parameters which are specific to AWS related External
        Targets with storage class S3 Glacier.
      title: AWS S3 Glacier Request Params.
    AwsS3IntelligentParams:
      allOf:
      - $ref: '#/components/schemas/CommonAWSCategoryParams'
      - $ref: '#/components/schemas/AwsS3GlacierDeepArchiveParams_allOf'
      description: Specifies the parameters which are specific to AWS related External
        Targets with storage class S3 Intelligent.
      title: AWS S3 Intelligent Request Params.
    AwsS3OneZoneIAParams:
      allOf:
      - $ref: '#/components/schemas/CommonAWSCategoryParams'
      - $ref: '#/components/schemas/AwsS3GlacierDeepArchiveParams_allOf'
      description: Specifies the parameters which are specific to AWS related External
        Targets with storage class S3 One Zone IA.
      title: AWS S3 One Zone IA Request Params.
    AwsS3StandardIAParams:
      allOf:
      - $ref: '#/components/schemas/CommonAWSCategoryParams'
      - $ref: '#/components/schemas/AwsGlacierParams_allOf'
      description: Specifies the parameters which are specific to AWS related External
        Targets with storage class S3 Standard IA.
      title: AWS S3 Standard IA Request Params.
    AwsS3StandardParams:
      allOf:
      - $ref: '#/components/schemas/CommonAWSCategoryParams'
      - $ref: '#/components/schemas/AwsGlacierParams_allOf'
      description: Specifies the parameters which are specific to AWS related External
        Targets with storage class S3 Standard.
      title: AWS S3 Standard Request Params.
    AwsSnapshotManagerObjectProtectionParams:
      description: Specifies the parameters which are specific to AWS Object Protection
        using AWS native snapshot orchestration with snapshot manager. Atlease one
        of tags or objects must be specified.
      properties:
        objects:
          description: Specifies the objects to be protected.
          items:
            $ref: '#/components/schemas/AwsObjectLevelParams'
          type: array
          x-order: 0
        volumeExclusionParams:
          $ref: '#/components/schemas/EbsVolumeExclusionParams'
        createAmi:
          description: Specifies whether AMI should be created after taking snapshots
            of the instance.
          nullable: true
          type: boolean
          x-order: 2
        amiCreationFrequency:
          description: The frequency of AMI creation. This should be set if the option
            to create AMI is set. A value of n creates an AMI from the snapshots after
            every n runs. eg. n = 2 implies every alternate backup run starting from
            the first will create an AMI.
          format: int32
          nullable: true
          type: integer
          x-order: 3
      title: Create AWS Snapshot Manager Object Protection Request Body
      type: object
    AwsSnapshotManagerProtectionGroupObjectParams:
      description: Specifies the object parameters to create AWS Snapshot Manager
        Protection Group.
      properties:
        id:
          description: Specifies the id of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the virtual machine.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        volumeExclusionParams:
          $ref: '#/components/schemas/EbsVolumeExclusionParams'
      required:
      - id
      title: AWS Snapshot Manager Protection Group Object Params.
      type: object
    AwsSnapshotManagerProtectionGroupParams:
      description: Specifies the parameters which are specific to AWS related Protection
        Groups using AWS native snapshot orchestration with snapshot manager. Atlease
        one of tags or objects must be specified.
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/AwsSnapshotManagerProtectionGroupObjectParams'
          type: array
          x-order: 0
        excludeObjectIds:
          description: Specifies the objects to be excluded in the Protection Group.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          uniqueItems: true
          x-order: 1
        volumeExclusionParams:
          $ref: '#/components/schemas/EbsVolumeExclusionParams'
        vmTagIds:
          description: 'Array of Array of VM Tag Ids that Specify VMs to Protect.
            Optionally specify a list of VMs to protect by listing Protection Source
            ids of VM Tags in this two dimensional array. Using this two dimensional
            array of Tag ids, the Cluster generates a list of VMs to protect which
            are derived from intersections of the inner arrays and union of the outer
            array, as shown by the following example. To protect only ''Eng'' VMs
            in the East and all the VMs in the West, specify the following tag id
            array: [ [1101, 2221], [3031] ], where 1101 is the ''Eng'' VM Tag id,
            2221 is the ''East'' VM Tag id and 3031 is the ''West'' VM Tag id. The
            inner array [1101, 2221] produces a list of VMs that are both tagged with
            ''Eng'' and ''East'' (an intersection). The outer array combines the list
            from the inner array with list of VMs tagged with ''West'' (a union).
            The list of resulting VMs are protected by this Protection Group.'
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
          x-order: 3
        excludeVmTagIds:
          description: 'Array of Arrays of VM Tag Ids that Specify VMs to Exclude.
            Optionally specify a list of VMs to exclude from protecting by listing
            Protection Source ids of VM Tags in this two dimensional array. Using
            this two dimensional array of Tag ids, the Cluster generates a list of
            VMs to exclude from protecting, which are derived from intersections of
            the inner arrays and union of the outer array, as shown by the following
            example. For example a Datacenter is selected to be protected but you
            want to exclude all the ''Former Employees'' VMs in the East and West
            but keep all the VMs for ''Former Employees'' in the South which are also
            stored in this Datacenter, by specifying the following tag id array: [
            [1000, 2221], [1000, 3031] ], where 1000 is the ''Former Employee'' VM
            Tag id, 2221 is the ''East'' VM Tag id and 3031 is the ''West'' VM Tag
            id. The first inner array [1000, 2221] produces a list of VMs that are
            both tagged with ''Former Employees'' and ''East'' (an intersection).
            The second inner array [1000, 3031] produces a list of VMs that are both
            tagged with ''Former Employees'' and ''West'' (an intersection). The outer
            array combines the list of VMs from the two inner arrays. The list of
            resulting VMs are excluded from being protected this Job.'
          items:
            items:
              format: int64
              type: integer
            type: array
          type: array
          x-order: 4
        createAmi:
          description: Specifies whether AMI should be created after taking snapshots
            of the instance.
          nullable: true
          type: boolean
          x-order: 5
        amiCreationFrequency:
          description: The frequency of AMI creation. This should be set if the option
            to create AMI is set. A value of n creates an AMI from the snapshots after
            every n runs. eg. n = 2 implies every alternate backup run starting from
            the first will create an AMI.
          format: int32
          nullable: true
          type: integer
          x-order: 6
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 7
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 8
      title: Create AWS Snapshot Manager Protection Group Request Body
      type: object
    AwsSnapshotParams:
      description: Specifies parameters of AWS type snapshots.
      properties:
        protectionType:
          description: Specifies the protection type of AWS snapshots.
          enum:
          - kAgent
          - kNative
          - kSnapshotManager
          - kRDSSnapshotManager
          - kAuroraSnapshotManager
          nullable: true
          type: string
          x-order: 0
      type: object
    AwsSourceRegistrationParams:
      description: Specifies the paramaters to register an AWS source.
      properties:
        subscriptionType:
          description: Specifies the AWS Subscription type (Commercial/Gov).
          enum:
          - kAWSCommercial
          - kAWSGovCloud
          - kAWSC2S
          nullable: true
          type: string
          x-order: 0
        standardParams:
          $ref: '#/components/schemas/StandardParams'
      required:
      - subscriptionType
      type: object
    AwsSubscriptionType:
      description: AWS Subscription Type
      properties:
        awsSubscriptionType:
          description: Specifies the AWS Subscription types.
          enum:
          - kAWSCommercial
          - kAWSGovCloud
          - kAWSC2S
          type: string
          x-order: 0
      title: AWS Subscription Type
      type: object
    AwsTargetCategory:
      description: Specifies the category of AWS External Target.
      properties:
        enum:
          description: Specifies the category of AWS External Target.
          enum:
          - AmazonStandard
          - AmazonGov
          - AmazonC2S
          type: string
          x-order: 0
      title: AWS Target Category
      type: object
    AwsTargetParamsForRecoverAurora:
      description: Specifies the parameters for an AWS recovery target.
      properties:
        recoveryTargetConfig:
          allOf:
          - $ref: '#/components/schemas/AwsAuroraRecoveryTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the recovery target configuration if recovery has
            to be done to a different location which is different from original source
            or to original Source with different configuration. If not specified,
            then the recovery of the vms will be performed to original location with
            all configuration parameters retained.
          nullable: true
          type: object
          x-order: 0
        auroraConfig:
          allOf:
          - $ref: '#/components/schemas/AuroraConfig'
          - type: object
            x-nullable: true
          description: Specifies the Aurora params.
          nullable: true
          type: object
          x-order: 1
      title: AWS Aurora Recovery Target Params
      type: object
    AwsTargetParamsForRecoverFileAndFolder:
      description: Specifies the parameters for an AWS recovery target.
      properties:
        recoverToOriginalTarget:
          description: Specifies whether to recover to the original target. If true,
            originalTargetConfig must be specified. If false, newTargetConfig must
            be specified.
          nullable: true
          type: boolean
          x-order: 0
        originalTargetConfig:
          allOf:
          - $ref: '#/components/schemas/AwsRecoverFilesOriginalTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the configuration for recovering to the original
            target.
          nullable: true
          type: object
          x-order: 1
        newTargetConfig:
          allOf:
          - $ref: '#/components/schemas/AwsRecoverFilesNewTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the configuration for recovering to a new target.
          nullable: true
          type: object
          x-order: 2
        overwriteExisting:
          description: Specifies whether to override the existing files. Default is
            true.
          nullable: true
          type: boolean
          x-order: 3
        preserveAttributes:
          description: Specifies whether to preserve original attributes. Default
            is true.
          nullable: true
          type: boolean
          x-order: 4
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of files or folders failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 5
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered files
            and folders. If this is not specified, then the VLAN settings will be
            automatically selected from one of the below options: a. If VLANs are
            configured on Cohesity, then the VLAN host/VIP will be automatically based
            on the client''s (e.g. ESXI host) IP address. b. If VLANs are not configured
            on Cohesity, then the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 6
      required:
      - recoverToOriginalTarget
      title: AWS Target Params for Recover File And Folder
      type: object
    AwsTargetParamsForRecoverRds:
      description: Specifies the parameters for an AWS recovery target.
      properties:
        recoveryTargetConfig:
          allOf:
          - $ref: '#/components/schemas/AwsRdsRecoveryTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the recovery target configuration if recovery has
            to be done to a different location which is different from original source
            or to original Source with different configuration. If not specified,
            then the recovery of the vms will be performed to original location with
            all configuration parameters retained.
          nullable: true
          type: object
          x-order: 0
        rdsConfig:
          allOf:
          - $ref: '#/components/schemas/RdsConfig'
          - type: object
            x-nullable: true
          description: Specifies the RDS params.
          nullable: true
          type: object
          x-order: 1
      title: AWS RDS Recovery Target Params
      type: object
    AwsTargetParamsForRecoverVm:
      description: Specifies the parameters for an AWS recovery target.
      properties:
        renameRecoveredVmsParams:
          allOf:
          - $ref: '#/components/schemas/RecoveredOrClonedVmsRenameConfig'
          - type: object
            x-nullable: true
          description: Specifies params to rename the VMs that are recovered. If not
            specified, the original names of the VMs are preserved.
          nullable: true
          type: object
          x-order: 0
        recoveryTargetConfig:
          allOf:
          - $ref: '#/components/schemas/AwsVmRecoveryTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the recovery target configuration if recovery has
            to be done to a different location which is different from original source
            or to original Source with different configuration. If not specified,
            then the recovery of the vms will be performed to original location with
            all configuration parameters retained.
          nullable: true
          type: object
          x-order: 1
        fleetConfig:
          allOf:
          - $ref: '#/components/schemas/FleetConfig'
          - type: object
            x-nullable: true
          description: Specifies the fleet params.
          nullable: true
          type: object
          x-order: 2
        powerOnVms:
          description: Specifies whether to power on vms after recovery. If not specified,
            or false, recovered vms will be in powered off state.
          nullable: true
          type: boolean
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other vms if one of
            vms failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
      title: AWS Recovery Target Params
      type: object
    AwsTieringStorageClass:
      description: Specifies the storage class of Aws External Target of tiering purpose
        type.
      properties:
        enum:
          description: Specifies the storage class of Aws External Target of tiering
            purpose type.
          enum:
          - AmazonS3Standard
          - AmazonS3StandardIA
          type: string
          x-order: 0
      title: Aws Tiering Storage Class
      type: object
    AwsVmRecoveryTargetConfig:
      description: Specifies the target object parameters to recover AWS vms.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or an existing Source Target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverAwsVmNewSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the VMs will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
      required:
      - recoverToNewSource
      title: AWS VMs Recovery Target Config.
      type: object
    AzureAgentProtectionGroupObjectParams:
      description: Specifies the object parameters to create agent based Azure Protection
        Group.
      properties:
        id:
          description: Specifies the id of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the virtual machine.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      title: Agent based Azure Protection Group Object Params has.
      type: object
    AzureAgentProtectionGroupParams:
      description: Specifies the parameters which are specific to Azure related Protection
        Groups using cohesity protection-service installed on the instance. Objects
        must be specified.
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/AzureAgentProtectionGroupObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        excludeObjectIds:
          description: Specifies the objects to be excluded in the Protection Group.
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
          x-order: 1
        appConsistentSnapshot:
          description: Specifies whether or not to quiesce apps and the file system
            in order to take app consistent snapshots.
          nullable: true
          type: boolean
          x-order: 2
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        cloudMigration:
          description: Specifies whether or not to move the workload to the cloud.
          nullable: true
          type: boolean
          x-order: 4
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 5
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 6
      required:
      - objects
      title: Agent based Azure Protection Group Request Params.
      type: object
    AzureArchivalStorageClass:
      description: Specifies the storage class of Azure External Target of archival
        purpose type.
      properties:
        enum:
          description: Specifies the storage class of Azure External Target of archival
            purpose type.
          enum:
          - AzureArchiveBlob
          - AzureCoolBlob
          - AzureHotBlob
          type: string
          x-order: 0
      title: Azure Archival Storage Class
      type: object
    AzureCloudSpinParams:
      description: Specifies various resources when converting and deploying a VM
        to Azure.
      properties:
        networkResourceGroupId:
          description: Specifies id of the resource group for the selected virtual
            network.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        resourceGroupId:
          description: Specifies id of the Azure resource group. Its value is globally
            unique within Azure.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        storageAccountId:
          description: Specifies id of the storage account that will contain the storage
            container within which we will create the blob that will become the VHD
            disk for the cloned VM.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        storageContainerId:
          description: Specifies id of the storage container within the above storage
            account.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        storageResourceGroupId:
          description: Specifies id of the resource group for the selected storage
            account.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        availabilitySetId:
          description: Specifies the availability set.
          format: int64
          nullable: true
          type: integer
          x-order: 5
        tempVmResourceGroupId:
          description: Specifies id of the temporary Azure resource group.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        tempVmStorageAccountId:
          description: Specifies id of the temporary VM storage account that will
            contain the storage container within which we will create the blob that
            will become the VHD disk for the cloned VM.
          format: int64
          nullable: true
          type: integer
          x-order: 7
        tempVmStorageContainerId:
          description: Specifies id of the temporary VM storage container within the
            above storage account.
          format: int64
          nullable: true
          type: integer
          x-order: 8
        tempVmSubnetId:
          description: Specifies Id of the temporary VM subnet within the above virtual
            network.
          format: int64
          nullable: true
          type: integer
          x-order: 9
        tempVmVirtualNetworkId:
          description: Specifies Id of the temporary VM Virtual Network.
          format: int64
          nullable: true
          type: integer
          x-order: 10
      title: Azure Parameters.
      type: object
    AzureCoolBlobParams:
      description: Specifies the parameters which are specific to Azure related with
        tier type Cool Blob
      properties:
        category:
          description: Specifies the category of the external target.
          enum:
          - AzureStandard
          - AzureGovCloud
          nullable: true
          type: string
          x-order: 0
      required:
      - category
      title: Azure Cool Blob Request Params.
      type: object
    AzureHotBlobParams:
      description: Specifies the parameters which are specific to Azure related with
        tier type Hot Blob
      properties:
        category:
          description: Specifies the category of the external target.
          enum:
          - AzureStandard
          - AzureGovCloud
          nullable: true
          type: string
          x-order: 0
      required:
      - category
      title: Azure Hot Blob Request Params.
      type: object
    AzureNativeProtectionGroupObjectParams:
      description: Specifies the object parameters to create Azure Native Protection
        Group.
      properties:
        id:
          description: Specifies the id of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the virtual machine.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      title: Azure Native Protection Group Object Params.
      type: object
    AzureNativeProtectionGroupParams:
      description: Specifies the parameters which are specific to Azure related Protection
        Groups using Azure native snapshot APIs. Objects must be specified.
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/AzureNativeProtectionGroupObjectParams'
          type: array
          x-order: 0
        excludeObjectIds:
          description: Specifies the objects to be excluded in the Protection Group.
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
          x-order: 1
        vmTagIds:
          description: Array of arrays of VM Tag Ids that Specify VMs to Protect.
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
          x-order: 2
        excludeVmTagIds:
          description: Array of arrays of VM Tag Ids that Specify VMs to Exclude.
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
          x-order: 3
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        cloudMigration:
          description: Specifies whether or not to move the workload to the cloud.
          nullable: true
          type: boolean
          x-order: 5
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 6
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 7
      title: Azure Native Protection Group Request Params.
      type: object
    AzureProtectionGroupParams:
      description: Specifies the parameters which are specific to Azure related Protection
        Groups.
      properties:
        protectionType:
          description: Specifies the Azure Protection Group type.
          enum:
          - kAgent
          - kNative
          - kSnapshotManager
          type: string
          x-order: 0
        agentProtectionTypeParams:
          $ref: '#/components/schemas/AzureAgentProtectionGroupParams'
        nativeProtectionTypeParams:
          $ref: '#/components/schemas/AzureNativeProtectionGroupParams'
        snapshotManagerProtectionTypeParams:
          $ref: '#/components/schemas/AzureSnapshotManagerProtectionGroupParams'
      required:
      - protectionType
      title: Azure Protection Group Request Params.
      type: object
    AzureProtectionGroupType:
      description: Azure Protection Group type.
      properties:
        environment:
          description: Specifies Azure Protection Group type.
          enum:
          - kAgent
          - kNative
          - kSnapshotManager
          type: string
          x-order: 0
      title: Azure Protection Group type.
      type: object
    AzureRecoverFilesNewTargetConfig:
      description: Specifies the configuration for recovering files and folders to
        the new target.
      properties:
        targetVm:
          allOf:
          - $ref: '#/components/schemas/RecoverTarget'
          - type: object
            x-nullable: true
          description: Specifies the target VM to recover files and folders to.
          nullable: true
          type: object
          x-order: 0
        targetVmCredentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          - type: object
            x-nullable: true
          description: Specifies the credentials for the target VM.
          nullable: true
          type: object
          x-order: 1
        absolutePath:
          description: Specifies the absolute path location to recover files to.
          nullable: true
          type: string
          x-order: 2
      required:
      - absolutePath
      - targetVm
      - targetVmCredentials
      title: Azure Recover Files New Target Config.
      type: object
    AzureRecoverFilesOriginalTargetConfig:
      description: Specifies the configuration for recovering files and folders to
        the original target.
      properties:
        targetVmCredentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          - type: object
            x-nullable: true
          description: Specifies the credentials for the target VM.
          nullable: true
          type: object
          x-order: 0
        recoverToOriginalPath:
          description: Specifies whether to recover files and folders to the original
            path location. If false, alternatePath must be specified.
          nullable: true
          type: boolean
          x-order: 1
        alternatePath:
          description: Specifies the alternate path location to recover files to.
          nullable: true
          type: string
          x-order: 2
      required:
      - recoverToOriginalPath
      - targetVmCredentials
      title: Azure Recover Files Original Target Config.
      type: object
    AzureSnapshotManagerProtectionGroupObjectParams:
      description: Specifies the object parameters to create Azure Snapshot Manager
        Protection Group.
      properties:
        id:
          description: Specifies the id of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the virtual machine.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      title: Azure Snapshot Manager Protection Group Object Params.
      type: object
    AzureSnapshotManagerProtectionGroupParams:
      description: Specifies the parameters which are specific to Azure related Protection
        Groups using Azure native snapshot orchestration with snapshot manager. Objects
        must be specified.
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/AzureSnapshotManagerProtectionGroupObjectParams'
          type: array
          uniqueItems: true
          x-order: 0
        excludeObjectIds:
          description: Specifies the objects to be excluded in the Protection Group.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          uniqueItems: true
          x-order: 1
        vmTagIds:
          description: Array of arrays of VM Tag Ids that Specify VMs to Protect.
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
          x-order: 2
        excludeVmTagIds:
          description: Array of arrays of VM Tag Ids that Specify VMs to Exclude.
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
          x-order: 3
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 4
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 5
      title: Create Azure Snapshot Manager Protection Group Request Body
      type: object
    AzureSnapshotParams:
      description: Specifies parameters of Azure type snapshots.
      properties:
        protectionType:
          description: Specifies the protection type of Azure snapshots.
          enum:
          - kAgent
          - kNative
          - kSnapshotManager
          nullable: true
          type: string
          x-order: 0
      type: object
    AzureTargetCategory:
      description: Specifies the category of Azure External Target.
      properties:
        enum:
          description: Specifies the category of Azure External Target.
          enum:
          - AzureStandard
          - AzureGovCloud
          type: string
          x-order: 0
      title: Azure Target Category
      type: object
    AzureTargetConfig:
      description: Specifies the configuration for adding Azure as replication target
      properties:
        sourceId:
          description: Specifies the source id of the Azure protection source registered
            on Cohesity cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the Azure Replication target.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        resourceGroup:
          description: Specifies id of the Azure resource group used to filter regions
            in UI.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        resourceGroupName:
          description: Specifies name of the Azure resource group used to filter regions
            in UI.
          nullable: true
          readOnly: true
          type: string
          x-order: 3
        storageAccount:
          description: Specifies id of the storage account of Azure replication target
            which will contain storage container.
          nullable: true
          readOnly: true
          type: integer
          x-order: 4
        storageAccountName:
          description: Specifies name of the storage account of Azure replication
            target which will contain storage container.
          nullable: true
          readOnly: true
          type: string
          x-order: 5
        storageContainer:
          description: Specifies id of the storage container of Azure Replication
            target.
          nullable: true
          readOnly: true
          type: integer
          x-order: 6
        storageContainerName:
          description: Specifies name of the storage container of Azure Replication
            target.
          nullable: true
          readOnly: true
          type: string
          x-order: 7
        storageResourceGroup:
          description: Specifies id of the storage resource group of Azure Replication
            target.
          nullable: true
          readOnly: true
          type: integer
          x-order: 8
        storageResourceGroupName:
          description: Specifies name of the storage resource group of Azure Replication
            target.
          nullable: true
          readOnly: true
          type: string
          x-order: 9
      required:
      - sourceId
      title: Azure Target Configuration
      type: object
    AzureTargetParamsForRecoverFileAndFolder:
      description: Specifies the parameters for an Azure files and folders recovery
        target.
      properties:
        recoverToOriginalTarget:
          description: Specifies whether to recover to the original target. If true,
            originalTargetConfig must be specified. If false, newTargetConfig must
            be specified.
          nullable: true
          type: boolean
          x-order: 0
        originalTargetConfig:
          allOf:
          - $ref: '#/components/schemas/AzureRecoverFilesOriginalTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the configuration for recovering to the original
            target.
          nullable: true
          type: object
          x-order: 1
        newTargetConfig:
          allOf:
          - $ref: '#/components/schemas/AzureRecoverFilesNewTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the configuration for recovering to a new target.
          nullable: true
          type: object
          x-order: 2
        overwriteExisting:
          description: Specifies whether to overwrite the existing files. Default
            is true.
          nullable: true
          type: boolean
          x-order: 3
        preserveAttributes:
          description: Specifies whether to preserve original file/folder attributes.
            Default is true.
          nullable: true
          type: boolean
          x-order: 4
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of the objects encounters an error. Default is false.
          nullable: true
          type: boolean
          x-order: 5
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered files
            and folders. If this is not specified, then the VLAN settings will be
            automatically selected from one of the below options: a. If VLANs are
            configured on Cohesity, then the VLAN host/VIP will be automatically based
            on the client''s (e.g. ESXI host) IP address. b. If VLANs are not configured
            on Cohesity, then the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 6
      required:
      - recoverToOriginalTarget
      title: Azure Target Params for Recover Files
      type: object
    AzureTargetParamsForRecoverVm:
      description: Specifies the parameters for an Azure recovery target.
      properties:
        renameRecoveredVmsParams:
          allOf:
          - $ref: '#/components/schemas/RecoveredOrClonedVmsRenameConfig'
          - type: object
            x-nullable: true
          description: Specifies params to rename the VMs that are recovered. If not
            specified, the original names of the VMs are preserved.
          nullable: true
          type: object
          x-order: 0
        recoveryTargetConfig:
          allOf:
          - $ref: '#/components/schemas/AzureVmRecoveryTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the recovery target configuration if recovery has
            to be done to a different location which is different from original source
            or to original Source with different configuration. If not specified,
            then the recovery of the vms will be performed to original location with
            all configuration parameters retained.
          nullable: true
          type: object
          x-order: 1
        powerOnVms:
          description: Specifies whether to power on vms after recovery. If not specified,
            or false, recovered vms will be in powered off state.
          nullable: true
          type: boolean
          x-order: 2
        continueOnError:
          description: Specifies whether to continue recovering other vms if one of
            vms failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 3
      title: Azure Recovery Target Params
      type: object
    AzureTier:
      allOf:
      - $ref: '#/components/schemas/CommonCloudTierSettings'
      - $ref: '#/components/schemas/AzureTier_allOf'
      description: Specifies the settings for a Azure tier.
    AzureTieringLevels:
      description: Azure Tiering Levels
      properties:
        type:
          description: Azure Tiering Levels
          enum:
          - kAzureTierHot
          - kAzureTierCool
          - kAzureTierArchive
          type: string
          x-order: 0
      title: Azure Tiering Levels.
      type: object
    AzureTieringStorageClass:
      description: Specifies the storage class of Azure External Target of tiering
        purpose type.
      properties:
        enum:
          description: Specifies the storage class of Azure External Target of tiering
            purpose type.
          enum:
          - AzureHotBlob
          type: string
          x-order: 0
      title: Azure Tiering Storage Class
      type: object
    AzureTiers:
      description: Specifies Azure tiers.
      properties:
        tiers:
          description: Specifies the tiers that are used to move the archived backup
            from current tier to next tier. The order of the tiers determines which
            tier will be used next for moving the archived backup. The first tier
            input should always be default tier where backup will be acrhived. Each
            tier specifies how much time after the backup will be moved to next tier
            from the current tier.
          items:
            $ref: '#/components/schemas/AzureTier'
          nullable: true
          type: array
          x-order: 0
      required:
      - tiers
      type: object
    AzureVmRecoveryTargetConfig:
      description: Specifies the target object parameters to recover Azure vms.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or an existing Source Target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverAzureVmNewSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the VMs will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
      required:
      - recoverToNewSource
      title: Azure VMs Recovery Target Config.
      type: object
    BackupAttempt:
      description: Specifies a backup attempt for an object.
      properties:
        startTimeUsecs:
          description: Specifies the start time of attempt in Unix epoch Timestamp(in
            microseconds) for an object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        endTimeUsecs:
          description: Specifies the end time of attempt in Unix epoch Timestamp(in
            microseconds) for an object.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        admittedTimeUsecs:
          description: Specifies the time at which the backup task was admitted to
            run in Unix epoch Timestamp(in microseconds) for an object.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        permitGrantTimeUsecs:
          description: Specifies the time when gatekeeper permit is granted to the
            backup task. If the backup task is rescheduled due to errors, the field
            is updated to the time when permit is granted again.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        queueDurationUsecs:
          description: Specifies the duration between the startTime and when gatekeeper
            permit is granted to the backup task. If the backup task is rescheduled
            due to errors, the field is updated considering the time when permit is
            granted again. Queue duration = PermitGrantTimeUsecs - StartTimeUsecs
          format: int64
          nullable: true
          type: integer
          x-order: 4
        snapshotCreationTimeUsecs:
          description: Specifies the time at which the source snapshot was taken in
            Unix epoch Timestamp(in microseconds) for an object.
          format: int64
          nullable: true
          type: integer
          x-order: 5
        status:
          description: Status of the attempt for an object. 'Running' indicates that
            the run is still running. 'Canceled' indicates that the run has been canceled.
            'Canceling' indicates that the run is in the process of being canceled.
            'Paused' indicates that the ongoing run has been paused. 'Pausing' indicates
            that the ongoing run is in the process of being paused. 'Resuming' indicates
            that the already paused run is in the process of being running again.
            'Failed' indicates that the run has failed. 'Missed' indicates that the
            run was unable to take place at the scheduled time because the previous
            run was still happening. 'Succeeded' indicates that the run has finished
            successfully. 'SucceededWithWarning' indicates that the run finished successfully,
            but there were some warning messages.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          - Paused
          - Pausing
          - Resuming
          nullable: true
          type: string
          x-order: 6
        stats:
          $ref: '#/components/schemas/BackupDataStats'
        progressTaskId:
          description: Progress monitor task for an object..
          nullable: true
          type: string
          x-order: 8
        message:
          description: A message about the error if encountered while performing backup.
          nullable: true
          type: string
          x-order: 9
      title: Attempt information for an object.
      type: object
    BackupDataStats:
      description: Specifies statistics about local snapshot.
      properties:
        logicalSizeBytes:
          description: Specifies total logical size of object(s) in bytes.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        bytesWritten:
          description: Specifies total size of data in bytes written after taking
            backup.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        bytesRead:
          description: Specifies total logical bytes read for creating the snapshot.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      title: Local snapshot statistics.
      type: object
    BackupPolicy:
      description: Specifies the backup schedule and retentions of a Protection Policy.
      properties:
        regular:
          $ref: '#/components/schemas/RegularBackupPolicy'
        log:
          $ref: '#/components/schemas/LogBackupPolicy'
        bmr:
          $ref: '#/components/schemas/BmrBackupPolicy'
        cdp:
          $ref: '#/components/schemas/CdpBackupPolicy'
      required:
      - regular
      title: Backup Schedule and Retention.
      type: object
    BackupRun:
      description: Specifies information about backup run for an object.
      properties:
        snapshotInfo:
          $ref: '#/components/schemas/SnapshotInfo'
        failedAttempts:
          description: Failed backup attempts for an object.
          items:
            $ref: '#/components/schemas/BackupAttempt'
          type: array
          x-order: 1
      title: Snapshot run information for an object.
      type: object
    BackupRunFilterParams:
      description: Specifies the additional filtering params for backup runs.
      properties:
        runTypes:
          description: Specifies the run types to filter backup runs.
          items:
            enum:
            - kRegular
            - kFull
            - kLog
            - kSystem
            - kHydrateCDP
            type: string
          nullable: true
          type: array
          x-order: 0
        protectionEnvironmentTypes:
          description: Specifies the protection environment types to filter backup
            runs.
          items:
            enum:
            - kVMware
            - kHyperV
            - kAzure
            - kGCP
            - kKVM
            - kAcropolis
            - kAWS
            - kPhysical
            - kGPFS
            - kElastifile
            - kNetapp
            - kGenericNas
            - kIsilon
            - kFlashBlade
            - kPure
            - kSQL
            - kExchange
            - kAD
            - kOracle
            - kView
            - kRemoteAdapter
            - kO365
            - kO365PublicFolders
            - kO365Teams
            - kO365Group
            - kO365Exchange
            - kO365OneDrive
            - kO365Sharepoint
            - kKubernetes
            - kCassandra
            - kMongoDB
            - kCouchbase
            - kHdfs
            - kHive
            - kHBase
            - kUDA
            type: string
          nullable: true
          type: array
          x-order: 1
      type: object
    BackupRunProgressInfo:
      allOf:
      - $ref: '#/components/schemas/ProgressTaskInfo'
      - $ref: '#/components/schemas/ArchivalTargetProgressInfo_allOf'
      description: Specifies the progress of a local backup run.
    BackupRunSummary:
      description: Specifies summary information about local snapshot run across all
        objects.
      properties:
        runType:
          description: Type of Protection Group run. 'kRegular' indicates an incremental
            (CBT) backup. Incremental backups utilizing CBT (if supported) are captured
            of the target protection objects. The first run of a kRegular schedule
            captures all the blocks. 'kFull' indicates a full (no CBT) backup. A complete
            backup (all blocks) of the target protection objects are always captured
            and Change Block Tracking (CBT) is not utilized. 'kLog' indicates a Database
            Log backup. Capture the database transaction logs to allow rolling back
            to a specific point in time. 'kSystem' indicates system volume backup.
            It produces an image for bare metal recovery.
          enum:
          - kRegular
          - kFull
          - kLog
          - kSystem
          - kHydrateCDP
          nullable: true
          type: string
          x-order: 0
        isSlaViolated:
          description: Indicated if SLA has been violated for this run.
          nullable: true
          type: boolean
          x-order: 1
        startTimeUsecs:
          description: Specifies the start time of backup run in Unix epoch Timestamp(in
            microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 2
        endTimeUsecs:
          description: Specifies the end time of backup run in Unix epoch Timestamp(in
            microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 3
        status:
          description: Status of the backup run. 'Running' indicates that the run
            is still running. 'Canceled' indicates that the run has been canceled.
            'Canceling' indicates that the run is in the process of being canceled.
            'Paused' indicates that the ongoing run has been paused. 'Failed' indicates
            that the run has failed. 'Missed' indicates that the run was unable to
            take place at the scheduled time because the previous run was still happening.
            'Succeeded' indicates that the run has finished successfully. 'SucceededWithWarning'
            indicates that the run finished successfully, but there were some warning
            messages.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          - Paused
          - Pausing
          - Resuming
          nullable: true
          type: string
          x-order: 4
        messages:
          description: Message about the backup run.
          items:
            type: string
          nullable: true
          type: array
          x-order: 5
        successfulObjectsCount:
          description: Specifies the count of objects for which backup was successful.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        failedObjectsCount:
          description: Specifies the count of objects for which backup failed.
          format: int64
          nullable: true
          type: integer
          x-order: 7
        cancelledObjectsCount:
          description: Specifies the count of objects for which backup was cancelled.
          format: int64
          nullable: true
          type: integer
          x-order: 8
        successfulAppObjectsCount:
          description: Specifies the count of app objects for which backup was successful.
          format: int32
          nullable: true
          type: integer
          x-order: 9
        failedAppObjectsCount:
          description: Specifies the count of app objects for which backup failed.
          format: int32
          nullable: true
          type: integer
          x-order: 10
        cancelledAppObjectsCount:
          description: Specifies the count of app objects for which backup was cancelled.
          format: int32
          nullable: true
          type: integer
          x-order: 11
        localSnapshotStats:
          $ref: '#/components/schemas/BackupDataStats'
        indexingTaskId:
          description: Progress monitor task for indexing.
          nullable: true
          type: string
          x-order: 13
        progressTaskId:
          description: Progress monitor task id for local backup run.
          nullable: true
          type: string
          x-order: 14
        dataLock:
          description: This field is deprecated. Use DataLockConstraints field instead.
          enum:
          - Compliance
          - Administrative
          nullable: true
          type: string
          x-order: 15
        localTaskId:
          description: Task ID for a local protection run.
          nullable: true
          type: string
          x-order: 16
        dataLockConstraints:
          $ref: '#/components/schemas/DataLockConstraints'
      title: Summary information for local snapshot run.
      type: object
    BandwidthLimit:
      description: Specifies bandwidth limit for limiting the data transfer rate between
        the SaaS Connection and Helios to be enforced during the specified daily time
        period for the specified days of the week.
      properties:
        bytesPerSecond:
          description: Specifies the value for the specified time period. The value
            is specified in bytes per second.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        timePeriods:
          $ref: '#/components/schemas/TimeOfAWeek'
      title: Bandwidth Limit
      type: object
    BandwidthThrottling:
      description: Specifies settings for limiting the data transfer rate between
        the local and remote Clusters.
      properties:
        RateLimitBytesPerSec:
          description: Specifies the maximum allowed data transfer rate between the
            local Cluster and remote Clusters.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        timezone:
          description: Specifies a time zone for the specified time period.
          nullable: true
          type: string
          x-order: 1
        bandwidthLimitOverrides:
          description: Specifies the max rate limit at which we upload the data.
          items:
            $ref: '#/components/schemas/BandwidthThrottlingOverride'
          type: array
          x-omitempty: true
          x-order: 2
      title: Bandwidth Throttling
      type: object
    BandwidthThrottlingOverride:
      description: Specifies a list of override bandwidth limits and time periods
        when those limits override the rateLimitBytesPerSec limit.
      properties:
        bytesPerSecond:
          description: Specifies the value for the specified time period. The value
            is specified in bytes per second.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        timePeriods:
          $ref: '#/components/schemas/TimeOfAWeek'
      title: BandWidth
      type: object
    BgpInstance:
      description: BGP instance.
      example:
        timers:
          keepAlive: 2
          holdTime: 7
        localAS: 5
        peers:
        - timers:
            keepAlive: 2
            holdTime: 7
          remoteAS: 5
          description: description
          addressOrTag: addressOrTag
        - timers:
            keepAlive: 2
            holdTime: 7
          remoteAS: 5
          description: description
          addressOrTag: addressOrTag
      properties:
        localAS:
          description: Local AS.
          format: uint32
          nullable: true
          type: integer
          x-order: 0
        peers:
          description: List of bgp peer groups.
          items:
            $ref: '#/components/schemas/BgpPeer'
          nullable: true
          type: array
          x-order: 1
        timers:
          $ref: '#/components/schemas/BgpTimers'
      title: bgpInstance
      type: object
    BgpPeer:
      description: BGP peer information.
      example:
        timers:
          keepAlive: 2
          holdTime: 7
        remoteAS: 5
        description: description
        addressOrTag: addressOrTag
      properties:
        addressOrTag:
          description: IP Address.
          nullable: true
          type: string
          x-order: 0
        description:
          description: Peer's description.
          nullable: true
          type: string
          x-order: 1
        remoteAS:
          description: Remote AS.
          format: uint32
          nullable: true
          type: integer
          x-order: 2
        timers:
          $ref: '#/components/schemas/BgpTimers'
      title: BgpPeer
      type: object
    BgpTimers:
      description: BGP protocol timers.
      example:
        keepAlive: 2
        holdTime: 7
      properties:
        keepAlive:
          description: Keep alive interval in seconds.
          format: int32
          nullable: true
          type: integer
          x-order: 0
        holdTime:
          description: Hold time in seconds.
          format: int32
          nullable: true
          type: integer
          x-order: 1
      title: BgpTimers
      type: object
    BifrostConnection:
      description: Specify a connection of Bifrost.
      properties:
        id:
          description: Specifies the id of the connection.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the connection.
          nullable: true
          type: string
          x-order: 1
        subnet:
          $ref: '#/components/schemas/ConnectionSubnet'
        certificateVersion:
          description: Specifies the version of the connection's certificate. The
            version is used to revoke/renew connection's certificates.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        networkConnectionInfo:
          $ref: '#/components/schemas/NetworkConnectionInfo'
      title: Bifrost connection.
      type: object
    BifrostConnections:
      description: Specify a list of connection of Bifrost.
      properties:
        BifrostConnections:
          description: Specifies a list of connection of Bifrost.
          items:
            $ref: '#/components/schemas/BifrostConnection'
          nullable: true
          type: array
          x-order: 0
      title: Bifrost connections.
      type: object
    BifrostConnector:
      description: Specify a Bifrost connector.
      properties:
        id:
          description: Specifies the id of the connector.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the connector.
          nullable: true
          type: string
          x-order: 1
        connectionId:
          description: Specifies the Id of the connection which this connector belongs
            to.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        connectionStatus:
          $ref: '#/components/schemas/ConnectorConnectionInfo'
        cohesitySideIp:
          description: Specifies the cohesity side ip of the connector
          nullable: true
          readOnly: true
          type: string
          x-order: 4
        tenantSourceSideIp:
          description: Specifies the tenant source side ip of the connector
          nullable: true
          readOnly: true
          type: string
          x-order: 5
        hyxVersion:
          description: Specifies the connector's software Version
          nullable: true
          readOnly: true
          type: string
          x-order: 6
      title: Bifrost Connector.
      type: object
    BifrostConnectors:
      description: Specify a list of Bifrost connectors.
      properties:
        BifrostConnectors:
          description: Specifies a list of Bifrost Connectors.
          items:
            $ref: '#/components/schemas/BifrostConnector'
          nullable: true
          type: array
          x-order: 0
      title: Bifrost Connectors.
      type: object
    BlackoutWindow:
      description: Specifies a time range in a single day when new Protection Group
        Runs of Protection Groups cannot be started. For example, a Protection Group
        with a daily schedule could define a blackout period for Sunday.
      properties:
        day:
          description: Specifies a day in the week when no new Protection Group Runs
            should be started such as 'Sunday'. Specifies a day in a week such as
            'Sunday', 'Monday', etc.
          enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          nullable: true
          type: string
          x-order: 0
        startTime:
          $ref: '#/components/schemas/TimeOfDay'
        endTime:
          $ref: '#/components/schemas/TimeOfDay'
        configId:
          description: Specifies the unique identifier for the target getting added.
            This field need to be passed olny when policies are updated.
          nullable: true
          type: string
          x-order: 3
      required:
      - day
      - endTime
      - startTime
      title: Blackout Window
      type: object
    BmrBackupPolicy:
      description: Specifies the BMR schedule in case of physical source protection.
      properties:
        schedule:
          $ref: '#/components/schemas/BmrSchedule'
        retention:
          $ref: '#/components/schemas/Retention'
      required:
      - retention
      - schedule
      title: BMR Backup (Physical) Schedule and Retention.
      type: object
    BmrSchedule:
      description: Specifies settings that defines how frequent bmr backup will be
        performed for a Protection Group.
      properties:
        unit:
          description: Specifies how often to start new runs of a Protection Group.
            <br>'Weeks' specifies that new Protection Group runs start weekly on certain
            days specified using 'dayOfWeek' field. <br>'Months' specifies that new
            Protection Group runs start monthly on certain day of specific week.
          enum:
          - Days
          - Weeks
          - Months
          nullable: true
          type: string
          x-order: 0
        daySchedule:
          $ref: '#/components/schemas/DaySchedule'
        weekSchedule:
          $ref: '#/components/schemas/WeekSchedule'
        monthSchedule:
          $ref: '#/components/schemas/MonthSchedule'
      required:
      - unit
      title: Bmr Schedule
      type: object
    BondingModeType:
      description: Type of bonding mode.
      properties:
        bondingModeType:
          description: Specifies the bonding mode type.
          enum:
          - ActiveBackup
          - 802_3ad
          - BalanceAlb
          - Invalid
          type: string
          x-order: 0
      title: Bonding Mode Type
      type: object
    CDPFilterStatus:
      description: CDP Filter Status
      properties:
        cdpFilterStatus:
          description: Specifies the CDP filter status.
          enum:
          - NotInstalled
          - InstallFilterInProgress
          - FilterInstalledIOInactive
          - FilterInstalled
          - IOInactive
          - IOActivationInProgress
          - IOActive
          - IODeactivationInProgress
          - UninstallFilterInProgress
          - UpgradeFilterInProgress
          - UpgradeFilterFailed
          - WaitingForCDPPolicyAttach
          type: string
          x-order: 0
      title: CDP Filter Status
      type: object
    CancelObjectRunParams:
      description: One object run to cancel.
      example:
        replicationTargets:
        - clusterName: clusterName
          clusterId: 1
          clusterIncarnationId: 5
        - clusterName: clusterName
          clusterId: 1
          clusterIncarnationId: 5
        cloudSpinTargetIds:
        - 5
        - 5
        cancelLocalRun: true
        archivalTargetIds:
        - 6
        - 6
        runId: runId
      properties:
        runId:
          description: Specifies the id of the run to cancel.
          nullable: true
          type: string
          x-order: 0
        cancelLocalRun:
          description: Specifies whether to cancel the local backup run. Default is
            false.
          nullable: true
          type: boolean
          x-order: 1
        archivalTargetIds:
          description: Specifies the archival target ids where the tasks run. If specified,
            the archival target ids must be present within the run specified by the
            runId above.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 2
        replicationTargets:
          description: Specifies the cluster identifiers where the tasks run. If specified,
            the archival target ids must be present within the run specified by the
            runId above.
          items:
            $ref: '#/components/schemas/ClusterIdentifier'
          nullable: true
          type: array
          x-order: 3
        cloudSpinTargetIds:
          description: Specifies the cloud spin target ids where the tasks run. If
            specified, the archival target ids must be present within the run specified
            by the runId above.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 4
      required:
      - runId
      type: object
    CancelObjectRunsParams:
      description: Request to cancel object runs.
      example:
        runsConfig:
        - replicationTargets:
          - clusterName: clusterName
            clusterId: 1
            clusterIncarnationId: 5
          - clusterName: clusterName
            clusterId: 1
            clusterIncarnationId: 5
          cloudSpinTargetIds:
          - 5
          - 5
          cancelLocalRun: true
          archivalTargetIds:
          - 6
          - 6
          runId: runId
        - replicationTargets:
          - clusterName: clusterName
            clusterId: 1
            clusterIncarnationId: 5
          - clusterName: clusterName
            clusterId: 1
            clusterIncarnationId: 5
          cloudSpinTargetIds:
          - 5
          - 5
          cancelLocalRun: true
          archivalTargetIds:
          - 6
          - 6
          runId: runId
        objectId: 0
      properties:
        objectId:
          description: Specifies object id
          format: int64
          nullable: true
          type: integer
          x-order: 0
        runsConfig:
          description: Specifies a list of runs to cancel. If no runs are specified,
            then all the outstanding runs will be canceled.
          items:
            $ref: '#/components/schemas/CancelObjectRunParams'
          nullable: true
          type: array
          x-order: 1
      required:
      - objectId
      type: object
    CancelObjectRunsRequest:
      description: Request to cancel object runs.
      example:
        objectRuns:
        - runsConfig:
          - replicationTargets:
            - clusterName: clusterName
              clusterId: 1
              clusterIncarnationId: 5
            - clusterName: clusterName
              clusterId: 1
              clusterIncarnationId: 5
            cloudSpinTargetIds:
            - 5
            - 5
            cancelLocalRun: true
            archivalTargetIds:
            - 6
            - 6
            runId: runId
          - replicationTargets:
            - clusterName: clusterName
              clusterId: 1
              clusterIncarnationId: 5
            - clusterName: clusterName
              clusterId: 1
              clusterIncarnationId: 5
            cloudSpinTargetIds:
            - 5
            - 5
            cancelLocalRun: true
            archivalTargetIds:
            - 6
            - 6
            runId: runId
          objectId: 0
        - runsConfig:
          - replicationTargets:
            - clusterName: clusterName
              clusterId: 1
              clusterIncarnationId: 5
            - clusterName: clusterName
              clusterId: 1
              clusterIncarnationId: 5
            cloudSpinTargetIds:
            - 5
            - 5
            cancelLocalRun: true
            archivalTargetIds:
            - 6
            - 6
            runId: runId
          - replicationTargets:
            - clusterName: clusterName
              clusterId: 1
              clusterIncarnationId: 5
            - clusterName: clusterName
              clusterId: 1
              clusterIncarnationId: 5
            cloudSpinTargetIds:
            - 5
            - 5
            cancelLocalRun: true
            archivalTargetIds:
            - 6
            - 6
            runId: runId
          objectId: 0
      properties:
        objectRuns:
          description: Specifies a list of object runs to cancel.
          items:
            $ref: '#/components/schemas/CancelObjectRunsParams'
          nullable: true
          type: array
          x-order: 0
      type: object
    CancelObjectRunsResult:
      description: Result after canceling object runs.
      example:
        errorMessage: errorMessage
        objectId: 0
      properties:
        objectId:
          description: Specifies the id of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        errorMessage:
          description: Specifies the error message if any error happens.
          nullable: true
          type: string
          x-order: 1
      type: object
    CancelObjectRunsResults:
      description: Results after canceling object runs. If no errors happen, this
        will not be returned.
      example:
        results:
        - errorMessage: errorMessage
          objectId: 0
        - errorMessage: errorMessage
          objectId: 0
      properties:
        results:
          description: Specifies results after canceling object runs.
          items:
            $ref: '#/components/schemas/CancelObjectRunsResult'
          nullable: true
          type: array
          x-order: 0
      type: object
    CancelProtectionGroupRunRequest:
      description: Specifies the request to cancel a protection run.
      example:
        archivalTaskId:
        - archivalTaskId
        - archivalTaskId
        replicationTaskId:
        - replicationTaskId
        - replicationTaskId
        cloudSpinTaskId:
        - cloudSpinTaskId
        - cloudSpinTaskId
        localTaskId: localTaskId
        runId: runId
        objectIds:
        - 0
        - 0
      properties:
        runId:
          description: Specifies a unique run id of the Protection Group run.
          nullable: true
          pattern: ^\d+:\d+$
          type: string
          x-order: 0
        localTaskId:
          description: Specifies the task id of the local run.
          nullable: true
          pattern: ^\d+:\d+:\d+$
          type: string
          x-order: 1
        objectIds:
          description: List of entity ids for which we need to cancel the backup tasks.
            If this is provided it will not cancel the complete run but will cancel
            only subset of backup tasks (if backup tasks are cancelled correspoding
            copy task will also get cancelled). If the backup tasks are completed
            successfully it will not cancel those backup tasks.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 2
        replicationTaskId:
          description: Specifies the task id of the replication run.
          items:
            pattern: ^\d+:\d+:\d+$
            type: string
          nullable: true
          type: array
          x-order: 3
        archivalTaskId:
          description: Specifies the task id of the archival run.
          items:
            pattern: ^\d+:\d+:\d+$
            type: string
          nullable: true
          type: array
          x-order: 4
        cloudSpinTaskId:
          description: Specifies the task id of the cloudSpin run.
          items:
            pattern: ^\d+:\d+:\d+$
            type: string
          nullable: true
          type: array
          x-order: 5
      required:
      - runId
      title: Cancel protection run request.
      type: object
    CancelProtectionGroupRunResponseParams:
      description: Specifies the response of a cancel action on protection runs.
      example:
        runId: runId
      properties:
        runId:
          description: Specifies a unique run id of the Protection Group run.
          nullable: true
          pattern: ^\d+:\d+$
          type: string
          x-order: 0
      type: object
    CassandraAuthType:
      description: Enumeration of all the Cassandra Authentication types.
      properties:
        CassandraAuthType:
          description: Enumeration of all the Cassandra Authentication.
          enum:
          - PASSWORD
          - KERBEROS
          - LDAP
          type: string
          x-order: 0
      title: Enumeration of all the Cassandra Authentication types.
      type: object
    CassandraConnectionParams:
      description: Specifies the parameters to connect to a Cassandra seed node and
        fetch information from its cassandra config file.
      properties:
        seedNode:
          description: Any one seed node of the Cassandra cluster.
          type: string
          x-order: 0
        configDirectory:
          description: Directory path containing Cassandra configuration YAML file.
          type: string
          x-order: 1
        dseConfigurationDirectory:
          description: Directory from where DSE specific configuration can be read.
            This should be set only when you are using the DSE distribution of Cassandra.
          nullable: true
          type: string
          x-order: 2
        isDseTieredStorage:
          description: Set to true if this cluster has DSE tiered storage.
          type: boolean
          x-order: 3
        isDseAuthenticator:
          description: Set to true if this cluster has DSE Authenticator.
          type: boolean
          x-order: 4
        sshPasswordCredentials:
          $ref: '#/components/schemas/CassandraConnectionParams_sshPasswordCredentials'
        sshPrivateKeyCredentials:
          $ref: '#/components/schemas/CassandraConnectionParams_sshPrivateKeyCredentials'
      required:
      - configDirectory
      - isDseAuthenticator
      - isDseTieredStorage
      - seedNode
      title: Parameters to connect and query cassandra config file.
      type: object
    CassandraIndexedObject:
      allOf:
      - $ref: '#/components/schemas/CommonIndexedObjectParams'
      - $ref: '#/components/schemas/CassandraIndexedObject_allOf'
      description: Specifies a Cassandra indexed object.
      title: CassandraIndexedObject
    CassandraIndexedObjects:
      description: Specifies the indexed Cassandra objects.
      items:
        $ref: '#/components/schemas/CassandraIndexedObject'
      type: array
    CassandraOnPremSearchParams:
      allOf:
      - $ref: '#/components/schemas/CassandraSearchParams'
      - $ref: '#/components/schemas/OnPremSourceIds'
      description: Parameters required to search Cassandra on a cluster.
      title: CassandraOnPremSearchParams
    CassandraParams:
      description: Specifies the recovery options specific to Cassandra environment.
      properties:
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverObjects
          type: string
          x-order: 0
        recoverCassandraParams:
          $ref: '#/components/schemas/RecoverCassandraParams'
      required:
      - recoverCassandraParams
      - recoveryAction
      title: Recover Cassandra environment params.
      type: object
    CassandraPortInfo:
      description: Contains info about specific cassandra ports.
      example:
        nativeTransportPort: 6
        sslStoragePort: 5
        jmxPort: 2
        storagePort: 5
        rpcPort: 1
      properties:
        nativeTransportPort:
          description: Port for the CQL native transport.
          format: int32
          nullable: true
          type: integer
          x-order: 0
        rpcPort:
          description: Remote Procedure Call (RPC) port for general mechanism for
            client-server applications.
          format: int32
          nullable: true
          type: integer
          x-order: 1
        storagePort:
          description: TCP port for data. Internally used by Cassandra bulk loader.
          format: int32
          nullable: true
          type: integer
          x-order: 2
        sslStoragePort:
          description: SSL port for encrypted communication. Internally used by the
            Cassandra bulk loader.
          format: int32
          nullable: true
          type: integer
          x-order: 3
        jmxPort:
          description: Cassandra management port.
          format: int32
          nullable: true
          type: integer
          x-order: 4
      title: Cassandra specific port info.
      type: object
    CassandraProtectionGroupParams:
      allOf:
      - $ref: '#/components/schemas/NoSqlProtectionGroupParams'
      - $ref: '#/components/schemas/CassandraProtectionGroupParams_allOf'
      description: Specifies the parameters for Cassandra Protection Group.
    CassandraSearchParams:
      description: Specifies the parameters which are specific for searching Cassandra
        objects.
      properties:
        searchString:
          description: Specifies the search string to search the Cassandra Objects
          nullable: true
          type: string
          x-order: 0
        cassandraObjectTypes:
          description: Specifies one or more Cassandra object types to be searched.
          items:
            enum:
            - CassandraKeyspaces
            - CassandraTables
            type: string
          type: array
          x-order: 1
      required:
      - cassandraObjectTypes
      - searchString
      type: object
    CassandraSecurityInfo:
      description: Cassandra security related info.
      example:
        cassandraAuthorizer: cassandraAuthorizer
        dseAuthorization: true
        cassandraAuthRequired: true
        serverInternodeEncryptionType: serverInternodeEncryptionType
        serverEncryptionReqClientAuth: true
        cassandraAuthType: PASSWORD
        clientEncryption: true
      properties:
        cassandraAuthorizer:
          description: Cassandra Authenticator/Authorizer.
          nullable: true
          type: string
          x-order: 0
        cassandraAuthRequired:
          description: Is Cassandra authentication required ?
          nullable: true
          type: boolean
          x-order: 1
        cassandraAuthType:
          description: Cassandra Authentication type.
          enum:
          - PASSWORD
          - KERBEROS
          - LDAP
          nullable: true
          type: string
          x-order: 2
        dseAuthorization:
          description: Is DSE Authorization enabled for this cluster ?
          nullable: true
          type: boolean
          x-order: 3
        clientEncryption:
          description: Is Client Encryption enabled for this cluster ?
          nullable: true
          type: boolean
          x-order: 4
        serverInternodeEncryptionType:
          description: '''Server internal node Encryption'' type.'
          nullable: true
          type: string
          x-order: 5
        serverEncryptionReqClientAuth:
          description: Is 'Server encryption request client authentication' enabled
            for this cluster ?
          nullable: true
          type: boolean
          x-order: 6
      title: Cassandra security info.
      type: object
    CassandraSourceConfigParams:
      description: Specifies the parameters fetched by reading cassandra configuration
        on the seed node.
      example:
        dseVersion: dseVersion
        cassandraSecurityInfo:
          cassandraAuthorizer: cassandraAuthorizer
          dseAuthorization: true
          cassandraAuthRequired: true
          serverInternodeEncryptionType: serverInternodeEncryptionType
          serverEncryptionReqClientAuth: true
          cassandraAuthType: PASSWORD
          clientEncryption: true
        dataCenterNames:
        - dataCenterNames
        - dataCenterNames
        cassandraPartitioner: cassandraPartitioner
        seeds:
        - seeds
        - seeds
        cassandraVersion: cassandraVersion
        isJmxAuthEnable: true
        cassandraPortInfo:
          nativeTransportPort: 6
          sslStoragePort: 5
          jmxPort: 2
          storagePort: 5
          rpcPort: 1
        kerberosSaslProtocol: kerberosSaslProtocol
        endpointSnitch: endpointSnitch
      properties:
        seeds:
          description: Seed nodes of this cluster.
          items:
            type: string
          type: array
          x-order: 0
        isJmxAuthEnable:
          description: Is JMX Authentication enabled in this cluster ?
          nullable: true
          type: boolean
          x-order: 1
        cassandraPortInfo:
          $ref: '#/components/schemas/CassandraPortInfo'
        cassandraSecurityInfo:
          $ref: '#/components/schemas/CassandraSecurityInfo'
        dataCenterNames:
          description: Data centers for this cluster.
          items:
            type: string
          type: array
          x-order: 4
        endpointSnitch:
          description: Endpoint snitch used for this cluster.
          nullable: true
          type: string
          x-order: 5
        cassandraPartitioner:
          description: Cassandra partitioner required in compaction.
          nullable: true
          type: string
          x-order: 6
        kerberosSaslProtocol:
          description: Populated if cassandraAuthType is Kerberos.
          nullable: true
          type: string
          x-order: 7
        cassandraVersion:
          description: Cassandra Version.
          nullable: true
          type: string
          x-order: 8
        dseVersion:
          description: DSE Version
          nullable: true
          type: string
          x-order: 9
      title: Parameters fetched by reading cassandra config file.
      type: object
    CassandraSourceRegistrationParams:
      allOf:
      - $ref: '#/components/schemas/CassandraConnectionParams'
      - $ref: '#/components/schemas/CassandraSourceRegistrationParams_allOf'
      description: Specifies parameters to register cassandra source.
      title: Register cassandra source request parameters.
    CassandraSourceRegistrationUpdateParams:
      description: Specifies parameters to update cassandra source.
      properties:
        seedNode:
          description: Any one seed node of the Cassandra cluster.
          type: string
          x-order: 0
        configDirectory:
          description: Directory path containing Cassandra configuration YAML file.
          type: string
          x-order: 1
        dseConfigurationDirectory:
          description: Directory from where DSE specific configuration can be read.
            This should be set only when you are using the DSE distribution of Cassandra.
          nullable: true
          type: string
          x-order: 2
        isDseTieredStorage:
          description: Set to true if this cluster has DSE tiered storage.
          type: boolean
          x-order: 3
        isDseAuthenticator:
          description: Set to true if this cluster has DSE Authenticator.
          type: boolean
          x-order: 4
        sshPasswordCredentials:
          $ref: '#/components/schemas/CassandraConnectionParams_sshPasswordCredentials'
        sshPrivateKeyCredentials:
          $ref: '#/components/schemas/CassandraConnectionParams_sshPrivateKeyCredentials'
        jmxCredentials:
          $ref: '#/components/schemas/CassandraSourceRegistrationUpdateParams_jmxCredentials'
        cassandraCredentials:
          $ref: '#/components/schemas/CassandraSourceRegistrationUpdateParams_cassandraCredentials'
        dataCenterNames:
          description: Data centers for this cluster.
          items:
            type: string
          type: array
          x-order: 9
        kerberosPrincipal:
          description: Principal for the kerberos connection. (This is required only
            if your Cassandra has Kerberos authentication. Please refer to the user
            guide.)
          nullable: true
          type: string
          x-order: 10
        dseSolrInfo:
          $ref: '#/components/schemas/DSESolrInfo'
      title: Update cassandra source request parameters.
      type: object
    CdpBackupPolicy:
      description: Specifies CDP (Continious Data Protection) backup settings for
        a Protection Group.
      properties:
        retention:
          $ref: '#/components/schemas/CdpRetention'
      required:
      - retention
      title: Continious Data Protection (CDP) Policy.
      type: object
    CdpLocalBackupInfo:
      description: Specifies the last local backup information for a given CDP object.
      properties:
        startTimeInUsecs:
          description: Specifies the start time of the last local backup taken.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        endTimeInUsecs:
          description: Specifies the end time of the last local backup taken.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    CdpObjectInfo:
      description: Specifies the CDP related information for a given object. This
        field will only be populated when protection group is configured with policy
        having CDP retention settings.
      properties:
        cdpEnabled:
          description: Specifies whether CDP is currently active or not. CDP might
            have been active on this object before, but it might not be anymore.
          nullable: true
          type: boolean
          x-order: 0
        lastRunInfo:
          $ref: '#/components/schemas/CdpObjectLastRunInfo'
        protectionGroupId:
          description: Specifies the protection group id to which this CDP object
            belongs.
          nullable: true
          readOnly: true
          type: string
          x-order: 2
      type: object
    CdpObjectLastRunInfo:
      description: Specifies the last backup information for a given CDP object.
      properties:
        localBackupInfo:
          $ref: '#/components/schemas/CdpLocalBackupInfo'
      type: object
    CdpRetention:
      description: Specifies the retention of a CDP backup.
      properties:
        unit:
          description: Specificies the Retention Unit of a CDP backup measured in
            minutes or hours.
          enum:
          - Minutes
          - Hours
          nullable: true
          type: string
          x-order: 0
        duration:
          description: Specifies the duration for a cdp backup retention.
          format: int32
          minimum: 1
          nullable: true
          type: integer
          x-order: 1
        dataLockConfig:
          $ref: '#/components/schemas/DataLockConfig'
      required:
      - duration
      - unit
      type: object
    CentrifyZone:
      description: Specifies a centrify zone.
      properties:
        description:
          description: Specifies a description of the Centrify zone.
          nullable: true
          type: string
          x-order: 0
        distinguishedName:
          description: Specifies the distinguished name of the Centrify zone.
          nullable: true
          type: string
          x-order: 1
        schema:
          description: Specifies the schema of this Centrify zone.
          enum:
          - CentrifyDynamicSchema_1_0
          - CentrifyDynamicSchema_2_0
          - CentrifySfu_3_0
          - CentrifySfu_4_0
          - CentrifyCdcRfc2307
          - CentrifyDynamicSchema_3_0
          - CentrifyCdcRfc2307_2
          - CentrifyDynamicSchema_5_0
          - CentrifyCdcRfc2307_3
          - CentrifySfu_3_0_V5
          nullable: true
          type: string
          x-order: 2
        zoneName:
          description: Specifies the zone name of the Centrify zone.
          nullable: true
          readOnly: true
          type: string
          x-order: 3
        zoneDomain:
          description: Specifies the zone domain of the Centrify zone.
          nullable: true
          readOnly: true
          type: string
          x-order: 4
      required:
      - description
      - distinguishedName
      - schema
      type: object
    CentrifyZones:
      description: Specifies a list of centrify zones for a domain.
      properties:
        domainName:
          description: Specifies a domain name with these centrify zones.
          nullable: true
          type: string
          x-order: 0
        centrifyZones:
          description: Specifies a list of centrify zones for this domain.
          items:
            $ref: '#/components/schemas/CentrifyZone'
          nullable: true
          type: array
          x-order: 1
      type: object
    CertificateAuthMapping:
      description: |-
        Describes certificate mapping options for certificate based
        authentication.
      properties:
        enum:
          description: Specifies the auth field options
          enum:
          - CommonName
          - EmailAddress
          - UserPrincipalName
          type: string
          x-order: 0
      title: Certificate Auth Mapping
      type: object
    CertificateValidationStatus:
      description: Describes the certificate validation status.
      properties:
        type:
          description: Specifies the certificate validation status
          enum:
          - Valid
          - Expired
          - Revoked
          - Unknown
          type: string
          x-order: 0
      title: Certificate Validation Status.
      type: object
    Chassis:
      description: Specifies information about hardware chassis.
      example:
        nodeIds:
        - 6
        - 6
        serialNumber: serialNumber
        hardwareModel: hardwareModel
        name: name
        id: 0
        rackId: 1
      properties:
        id:
          description: Specifies the id of the chassis used to uniquely identify a
            chassis.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        hardwareModel:
          description: Specifies the hardware model of the chassis.
          nullable: true
          type: string
          x-order: 1
        name:
          description: Specifies the name of the chassis.
          nullable: true
          type: string
          x-order: 2
        serialNumber:
          description: Specifies the serial number of the chassis.
          nullable: true
          type: string
          x-order: 3
        nodeIds:
          description: Specifies list of ids of all the nodes in chassis.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 4
        rackId:
          description: Rack Id that this chassis belong to
          format: int64
          nullable: true
          type: integer
          x-order: 5
      title: Chassis specific response.
      type: object
    ChassisList:
      description: Specifies the list of hardware chassis.
      example:
        chassis:
        - nodeIds:
          - 6
          - 6
          serialNumber: serialNumber
          hardwareModel: hardwareModel
          name: name
          id: 0
          rackId: 1
        - nodeIds:
          - 6
          - 6
          serialNumber: serialNumber
          hardwareModel: hardwareModel
          name: name
          id: 0
          rackId: 1
      properties:
        chassis:
          description: Specifies the list of chassis.
          items:
            $ref: '#/components/schemas/Chassis'
          nullable: true
          type: array
          x-order: 0
      title: List of chassis
      type: object
    CipherSuite:
      description: Cipher Suite
      properties:
        cipher:
          description: Specifies the cipher suite used for TLS handshake.
          enum:
          - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
          - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
          - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
          - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
          - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
          - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
          - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
          - TLS_RSA_WITH_AES_256_GCM_SHA384
          - TLS_RSA_WITH_AES_128_GCM_SHA256
          - TLS_RSA_WITH_AES_256_CBC_SHA
          - TLS_RSA_WITH_AES_128_CBC_SHA
          type: string
          x-order: 0
      title: CipherSuite
      type: object
    CiphersResp:
      description: Specifies a list of enabled/disabled ciphers on the cluster.
      example:
        disabledCiphers:
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        enabledCiphers:
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      properties:
        enabledCiphers:
          description: Enabled ciphers.
          items:
            enum:
            - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
            - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
            - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
            - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
            - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
            - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
            - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
            - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
            - TLS_RSA_WITH_AES_256_GCM_SHA384
            - TLS_RSA_WITH_AES_128_GCM_SHA256
            - TLS_RSA_WITH_AES_256_CBC_SHA
            - TLS_RSA_WITH_AES_128_CBC_SHA
            type: string
          type: array
          x-order: 0
        disabledCiphers:
          description: Disabled ciphers.
          items:
            enum:
            - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
            - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
            - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
            - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
            - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
            - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
            - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
            - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
            - TLS_RSA_WITH_AES_256_GCM_SHA384
            - TLS_RSA_WITH_AES_128_GCM_SHA256
            - TLS_RSA_WITH_AES_256_CBC_SHA
            - TLS_RSA_WITH_AES_128_CBC_SHA
            type: string
          type: array
          x-order: 1
      title: 'Response with two lists: a list of enabled ciphers and a list of disabled
        ciphers.'
      type: object
    CloneActionCleanupCloudResourcesCleanupParams:
      description: Specifies the params for cloud resource cleanup.
      properties:
        restoreTaskIds:
          description: Specifies the IDs of the restore tasks which were used to spawn
            the cloud resources.
          items:
            format: int64
            type: number
          nullable: true
          type: array
          x-order: 0
      type: object
    CloneActionCleanupParams:
      description: Specifies the params for the cleanup action.
      properties:
        cleanupType:
          description: Specifies the type of cleanup to be done.
          enum:
          - PowerOffVM
          - CloudResourcesCleanup
          nullable: true
          type: string
          x-order: 0
        powerOffVmParams:
          $ref: '#/components/schemas/CloneActionCleanupPowerOffVmParams'
        cloudResourcesCleanupParams:
          $ref: '#/components/schemas/CloneActionCleanupCloudResourcesCleanupParams'
      required:
      - cleanupType
      type: object
    CloneActionCleanupPowerOffVmParams:
      description: Specifies the params for powering off the VMs.
      properties:
        vmIds:
          description: Specifies the Entity IDs of the VMs to be powered off.
          items:
            format: int64
            type: number
          nullable: true
          type: array
          x-order: 0
      type: object
    CloudDomain:
      description: Specifies the parameters which are specific to cloud domain.
      properties:
        domainId:
          description: Specifies the Id of the cloud domain..
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 0
        viewBoxId:
          description: Specifies the Id of ViewBox related to the cloud domain.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 1
      type: object
    CloudDownWaterFallParams:
      description: Specifies parameters for cloud down water fall thresholds.
      properties:
        thresholdPercentage:
          description: Specifies the threshold percentage for cloud down water fall.
            This value indicates how full a storage domain is before cohesity cluster
            down water fall its data to cloud tier. This field is only appliciable
            if physicalQuota is set.
          format: int32
          nullable: true
          type: integer
          x-order: 0
        thresholdSecs:
          description: Specifes a time in seconds when cloud down water fall starts.
          format: int32
          nullable: true
          type: integer
          x-order: 1
      title: Cloud Down Water Fall Parameters
      type: object
    CloudSpinConfig:
      allOf:
      - $ref: '#/components/schemas/CommonTargetConfiguration'
      - $ref: '#/components/schemas/CloudSpinConfig_allOf'
      description: Specifies settings for copying Snapshots to Cloud. This also specifies
        the retention policy that should be applied to Snapshots after they have been
        copied to Cloud.
      title: CloudSpin Target Configuration.
    CloudSpinDataStats:
      description: Specifies statistics about Cloud Spin data.
      properties:
        physicalBytesTransferred:
          description: Specifies the physical bytes transferred.
          format: int64
          nullable: true
          type: integer
          x-order: 0
      title: Cloud Spin data statistics.
      type: object
    CloudSpinRun:
      description: Specifies information about Cloud Spin run for an object.
      properties:
        cloudSpinTargetResults:
          description: Cloud Spin result for a target.
          items:
            $ref: '#/components/schemas/CloudSpinTargetResult'
          type: array
          x-order: 0
      title: Cloud Spin run information for an object.
      type: object
    CloudSpinRunSummary:
      description: Specifies summary information about cloud spin run.
      properties:
        cloudSpinTargetResults:
          description: Cloud Spin results for each Cloud Spin target.
          items:
            $ref: '#/components/schemas/CloudSpinTargetResult'
          type: array
          x-order: 0
      title: Summary information for cloud spin run.
      type: object
    CloudSpinTarget:
      description: Specifies the details about Cloud Spin target where backup snapshots
        may be converted and stored.
      properties:
        id:
          description: Specifies the unique id of the cloud spin entity.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        awsParams:
          $ref: '#/components/schemas/AwsCloudSpinParams'
        azureParams:
          $ref: '#/components/schemas/AzureCloudSpinParams'
        name:
          description: Specifies the name of the already added cloud spin target.
          nullable: true
          readOnly: true
          type: string
          x-order: 3
      type: object
    CloudSpinTargetResult:
      allOf:
      - $ref: '#/components/schemas/CloudSpinTarget'
      - $ref: '#/components/schemas/CloudSpinTargetResult_allOf'
      description: Cloud Spin result for a target.
      title: Cloud Spin result for a target.
    Cluster:
      description: Specifies the cluster details.
      example:
        swVersion: swVersion
        networkConfig:
          ntpServers:
          - ntpServers
          - ntpServers
          vipHostName: vipHostName
          dhcpNetworkConfig:
            subnetIp: subnetIp
            subnetMask: subnetMask
            dnsServers:
            - dnsServers
            - dnsServers
            gateway: gateway
          domainNames:
          - domainNames
          - domainNames
          ipPreference: Ipv4
          manualNetworkConfig:
            subnetIp: subnetIp
            subnetMask: subnetMask
            dnsServers:
            - dnsServers
            - dnsServers
            gateway: gateway
          useDhcp: true
        description: description
        type: Physical
        incarnationId: 6
        rigelClusterParams:
          nodes:
          - nodeIp: nodeIp
            nodeId: 1
          - nodeIp: nodeIp
            nodeId: 1
          claimToken: claimToken
          dataplaneEndpoint: dataplaneEndpoint
        proxyServerConfig:
          password: password
          port: 5
          ip: ip
          name: name
          username: username
        regionId: regionId
        name: name
        tenantId: tenantId
        localTenantId: localTenantId
        id: 0
        enableEncryption: true
      properties:
        id:
          description: Specifies the cluster id of the new cluster.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 0
        incarnationId:
          description: Specifies the incarnation id of the new cluster.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 1
        name:
          description: Name of the new cluster.
          nullable: true
          type: string
          x-order: 2
        description:
          description: Description of the cluster.
          nullable: true
          type: string
          x-order: 3
        type:
          description: Specifies the type of the new cluster.
          enum:
          - Physical
          - Virtual
          - Cloud
          - Rigel
          - Unknown
          - HeliosOnPremVM
          nullable: true
          readOnly: true
          type: string
          x-order: 4
        localTenantId:
          description: Specifies the local tenant id. Only applicable on Helios.
          nullable: true
          readOnly: true
          type: string
          x-order: 5
        tenantId:
          description: Specifies the globally unique tenant id. Only applicable on
            Helios.
          nullable: true
          readOnly: true
          type: string
          x-order: 6
        regionId:
          description: Specifies the region id on which this cluster is present. Only
            applicable on Helios for DMaaS clusters.
          nullable: true
          readOnly: true
          type: string
          x-order: 7
        rigelClusterParams:
          $ref: '#/components/schemas/RigelClusterConfigParams'
        swVersion:
          description: Software version of the new cluster.
          nullable: true
          readOnly: true
          type: string
          x-order: 9
        networkConfig:
          $ref: '#/components/schemas/ClusterCreateNetworkConfig'
        proxyServerConfig:
          $ref: '#/components/schemas/ClusterProxyServerConfig'
        enableEncryption:
          description: Specifies whether or not encryption is enabled. If encryption
            is enabled, all data on the Cluster will be encrypted.
          nullable: true
          readOnly: true
          type: boolean
          x-order: 12
      title: Create Cluster Response.
      type: object
    ClusterAMQPTargetConfig:
      description: Specifies the AMQP target config.
      example:
        password: password
        filerId: 0
        certificate: certificate
        serverIp: serverIp
        exchange: exchange
        virtualHost: virtualHost
        username: username
      properties:
        serverIp:
          description: Specifies the server ip.
          nullable: true
          type: string
          x-order: 0
        username:
          description: Specifies the username.
          nullable: true
          type: string
          x-order: 1
        password:
          description: Specifies the password.
          nullable: true
          type: string
          x-order: 2
        virtualHost:
          description: Specifies the virtual host.
          nullable: true
          type: string
          x-order: 3
        exchange:
          description: Specifies the exchange.
          nullable: true
          type: string
          x-order: 4
        filerId:
          description: Specifies the filer id.
          format: int64
          nullable: true
          type: integer
          x-order: 5
        certificate:
          description: Specifies the certificate.
          nullable: true
          type: string
          x-order: 6
      type: object
    ClusterCreateCloudParams:
      description: Params for Cloud Edition Cluster Creation
      example:
        nodeIps:
        - nodeIps
        - nodeIps
      nullable: true
      properties:
        nodeIps:
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
      title: Cloud Cluster Params.
      type: object
      x-nullable: true
    ClusterCreateNetworkConfig:
      description: Specifies all of the parameters needed for network configuration
        of the new Cluster.
      example:
        ntpServers:
        - ntpServers
        - ntpServers
        vipHostName: vipHostName
        dhcpNetworkConfig:
          subnetIp: subnetIp
          subnetMask: subnetMask
          dnsServers:
          - dnsServers
          - dnsServers
          gateway: gateway
        domainNames:
        - domainNames
        - domainNames
        ipPreference: Ipv4
        manualNetworkConfig:
          subnetIp: subnetIp
          subnetMask: subnetMask
          dnsServers:
          - dnsServers
          - dnsServers
          gateway: gateway
        useDhcp: true
      properties:
        ntpServers:
          description: Specifies the list of NTP Servers new cluster should be configured
            with.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
        domainNames:
          description: Specifies the list of Domain Names new cluster should be configured
            with.
          items:
            type: string
          nullable: true
          type: array
          x-order: 1
        vipHostName:
          description: Specifies the FQDN hostname of the cluster.
          nullable: true
          type: string
          x-order: 2
        ipPreference:
          description: Specifies IP preference of the cluster to be Ipv4/Ipv6. It
            is Ipv4 by default.
          enum:
          - Ipv4
          - Ipv6
          nullable: true
          type: string
          x-order: 3
        useDhcp:
          description: Specifies whether or not to use DHCP to configure the network
            of the Cluster.
          nullable: true
          type: boolean
          x-order: 4
        dhcpNetworkConfig:
          $ref: '#/components/schemas/ClusterDhcpNetworkConfig'
        manualNetworkConfig:
          $ref: '#/components/schemas/ClusterManualNetworkConfig'
      required:
      - domainNames
      - ntpServers
      - useDhcp
      title: Cluster Network Config.
      type: object
    ClusterCreateNodeParams:
      description: Node params required for cluster creation
      example:
        nodeIp: nodeIp
        nodeId: 0
      properties:
        nodeId:
          description: Specifies the node id of the node.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        nodeIp:
          description: Specifies the node ip address which is either in ipv4/ipv6
            format.
          nullable: true
          type: string
          x-order: 1
      required:
      - nodeId
      - nodeIp
      title: Node Specific Params.
      type: object
    ClusterCreateNodeStatusResponse:
      description: Specifies node specific response of cluster create.
      nullable: true
      properties:
        nodeId:
          description: Specifies the id of the node.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        nodeIp:
          description: Specifies the Ip address of the node.
          nullable: true
          type: string
          x-order: 1
        message:
          description: Specifies optional message related to node status.
          nullable: true
          type: string
          x-order: 2
      title: Node specific response.
      type: object
      x-nullable: true
    ClusterCreatePhysicalParams:
      description: Params for Physical Edition Cluster Creation
      example:
        nodes:
        - nodeIp: nodeIp
          nodeId: 0
        - nodeIp: nodeIp
          nodeId: 0
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/ClusterCreateNodeParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
      title: Physical Cluster Params.
      type: object
    ClusterCreateRigelParams:
      description: Params for Rigel Cluster Creation
      example:
        nodes:
        - nodeIp: nodeIp
          nodeId: 1
        - nodeIp: nodeIp
          nodeId: 1
        claimToken: claimToken
      nullable: true
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/RigelClusterNode'
          type: array
          uniqueItems: true
          x-order: 0
        claimToken:
          description: Specifies the token which will be used to claim this Cluster
            to Helios.
          nullable: true
          type: string
          x-order: 1
      required:
      - claimToken
      - nodes
      title: Rigel Cluster Params.
      type: object
      x-nullable: true
    ClusterCreateVirtualParams:
      description: Params for Virtual Edition Cluster Creation
      example:
        nodes:
        - nodeIp: nodeIp
          nodeId: 0
        - nodeIp: nodeIp
          nodeId: 0
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/ClusterCreateNodeParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
      title: Virtual Cluster Params.
      type: object
    ClusterDhcpNetworkConfig:
      description: Specifies all of the parameters needed for network configuration
        of the new Cluster using DHCP.
      example:
        subnetIp: subnetIp
        subnetMask: subnetMask
        dnsServers:
        - dnsServers
        - dnsServers
        gateway: gateway
      properties:
        gateway:
          description: Specifies the gateway of the new cluster network.
          nullable: true
          readOnly: true
          type: string
          x-order: 0
        subnetIp:
          description: Specifies the ip subnet ip of the cluster network.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        subnetMask:
          description: Specifies the ip subnet mask of the cluster network.
          nullable: true
          readOnly: true
          type: string
          x-order: 2
        dnsServers:
          description: Specifies the list of Dns Servers new cluster should be configured
            with.
          items:
            type: string
          nullable: true
          type: array
          x-order: 3
      required:
      - dnsServers
      title: Cluster Network Config.
      type: object
    ClusterFreeDisks:
      description: Sepcifies the free disks of cluster.
      example:
        nodeFreeDisks:
        - freeDisks:
          - path: path
            serialNumber: serialNumber
            sizeInBytes: 6
            location: location
          - path: path
            serialNumber: serialNumber
            sizeInBytes: 6
            location: location
          chassisSerial: chassisSerial
          errorMessage: errorMessage
          slot: 1
          nodeId: 0
        - freeDisks:
          - path: path
            serialNumber: serialNumber
            sizeInBytes: 6
            location: location
          - path: path
            serialNumber: serialNumber
            sizeInBytes: 6
            location: location
          chassisSerial: chassisSerial
          errorMessage: errorMessage
          slot: 1
          nodeId: 0
      properties:
        nodeFreeDisks:
          description: Specifies list of free disks of cluster.
          items:
            $ref: '#/components/schemas/NodeFreeDisks'
          nullable: true
          type: array
          x-order: 0
      required:
      - nodeFreeDisks
      title: ClusterFreeDisks
      type: object
    ClusterIdentifier:
      description: Specifies the information about a cluster.
      example:
        clusterName: clusterName
        clusterId: 1
        clusterIncarnationId: 5
      properties:
        clusterId:
          description: Specifies the id of the cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        clusterIncarnationId:
          description: Specifies the incarnation id of the cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        clusterName:
          description: Specifies the name of the cluster.
          nullable: true
          readOnly: true
          type: string
          x-order: 2
      title: Cluster Identifier
      type: object
    ClusterInterfaces:
      description: Specifies the interfaces present on a Cluster grouped by the Node
        where they are present.
      example:
        nodes:
        - interfaces:
          - bondSlaveNames:
            - bondSlaveNames
            - bondSlaveNames
            subnet: subnet
            role: Primary
            staticIP: staticIP
            isConnected: true
            type: Physical
            defaultRoute: true
            speed: 1Gbit/s
            virtualIP: virtualIP
            mtu: 6
            macAddress: macAddress
            isUp: true
            bondingMode: ActiveBackup
            name: name
            gateway: gateway
            bondSlaveSlots:
            - bondSlaveSlots
            - bondSlaveSlots
            group: group
          - bondSlaveNames:
            - bondSlaveNames
            - bondSlaveNames
            subnet: subnet
            role: Primary
            staticIP: staticIP
            isConnected: true
            type: Physical
            defaultRoute: true
            speed: 1Gbit/s
            virtualIP: virtualIP
            mtu: 6
            macAddress: macAddress
            isUp: true
            bondingMode: ActiveBackup
            name: name
            gateway: gateway
            bondSlaveSlots:
            - bondSlaveSlots
            - bondSlaveSlots
            group: group
          id: 0
        - interfaces:
          - bondSlaveNames:
            - bondSlaveNames
            - bondSlaveNames
            subnet: subnet
            role: Primary
            staticIP: staticIP
            isConnected: true
            type: Physical
            defaultRoute: true
            speed: 1Gbit/s
            virtualIP: virtualIP
            mtu: 6
            macAddress: macAddress
            isUp: true
            bondingMode: ActiveBackup
            name: name
            gateway: gateway
            bondSlaveSlots:
            - bondSlaveSlots
            - bondSlaveSlots
            group: group
          - bondSlaveNames:
            - bondSlaveNames
            - bondSlaveNames
            subnet: subnet
            role: Primary
            staticIP: staticIP
            isConnected: true
            type: Physical
            defaultRoute: true
            speed: 1Gbit/s
            virtualIP: virtualIP
            mtu: 6
            macAddress: macAddress
            isUp: true
            bondingMode: ActiveBackup
            name: name
            gateway: gateway
            bondSlaveSlots:
            - bondSlaveSlots
            - bondSlaveSlots
            group: group
          id: 0
      properties:
        nodes:
          description: Specifies the list of nodes present in the cluster. If the
            request was sent to a free node, then this list will have exactly one
            entry.
          items:
            $ref: '#/components/schemas/NodeInterfaces'
          type: array
          x-order: 0
      title: Cluster Interfaces
      type: object
    ClusterLocalDomainSID:
      description: Specifies the SID of cluster local domain.
      example:
        sid: sid
      properties:
        sid:
          description: Specifies the SID of cluster local domain.
          nullable: true
          type: string
          x-order: 0
      type: object
    ClusterLogType:
      description: cluster log type.
      properties:
        type:
          description: Cluster Log Type.
          enum:
          - Info
          - Warning
          - Error
          type: string
          x-order: 0
      title: Cluster Log Type.
      type: object
    ClusterManualNetworkConfig:
      description: Specifies all of the parameters needed for network configuration
        of the new Cluster using manual configuration.
      example:
        subnetIp: subnetIp
        subnetMask: subnetMask
        dnsServers:
        - dnsServers
        - dnsServers
        gateway: gateway
      properties:
        gateway:
          description: Specifies the gateway of the new cluster network.
          nullable: true
          type: string
          x-order: 0
        subnetIp:
          description: Specifies the ip subnet ip of the cluster network.
          nullable: true
          type: string
          x-order: 1
        subnetMask:
          description: Specifies the ip subnet mask of the cluster network.
          nullable: true
          type: string
          x-order: 2
        dnsServers:
          description: Specifies the list of Dns Servers new cluster should be configured
            with.
          items:
            type: string
          nullable: true
          type: array
          x-order: 3
      required:
      - dnsServers
      - gateway
      - subnetIp
      - subnetMask
      title: Cluster Network Config.
      type: object
    ClusterProxyServerConfig:
      description: Specifies the parameters of the proxy server to be used for external
        traffic.
      example:
        password: password
        port: 5
        ip: ip
        name: name
        username: username
      nullable: true
      properties:
        name:
          description: Specifies the unique name of the proxy server.
          nullable: true
          readOnly: true
          type: string
          x-order: 0
        ip:
          description: Specifies the IP address of the proxy server.
          nullable: true
          type: string
          x-order: 1
        port:
          description: Specifies the port on which the server is listening.
          format: int32
          nullable: true
          type: integer
          x-order: 2
        username:
          description: Specifies the username for the proxy.
          nullable: true
          type: string
          x-order: 3
        password:
          description: Specifies the password for the proxy.
          nullable: true
          type: string
          x-order: 4
      required:
      - ip
      - port
      title: Cluster Proxy Server Config.
      type: object
      x-nullable: true
    ClusterTenantConfig:
      description: All configurations related to tenants for a cluster.
      example:
        organizationsEnabled: true
        clusterIdentifier: clusterIdentifier
        organizationsStorageDomainSharingEnabled: true
      properties:
        clusterIdentifier:
          description: |-
            List of Clusters Identifiers to filter from.
            The format is clusterId:clusterIncarnationId.
          nullable: true
          pattern: ^([0-9]+:[0-9]+)$
          type: string
          x-order: 0
        organizationsEnabled:
          description: Wether organizations is enabled on the cluster.
          nullable: true
          type: boolean
          x-order: 1
        organizationsStorageDomainSharingEnabled:
          description: |-
            Wether storage domain sharing is enabled for organizations on
            the cluster.
          nullable: true
          type: boolean
          x-order: 2
      required:
      - clusterIdentifier
      - organizationsEnabled
      - organizationsStorageDomainSharingEnabled
      title: ClusterTenantConfig
      type: object
    ClusterTenantConfigUpdateWithErrorError:
      description: Error description for cluster config update.
      properties:
        errorMessage:
          description: Error message for the cluster.
          nullable: true
          type: string
          x-order: 0
      title: ClusterTenantConfigUpdateError
      type: object
    ClusterType:
      description: Cluster Type
      properties:
        clusterType:
          description: Specifies the cluster types.
          enum:
          - Physical
          - Virtual
          - Cloud
          - Rigel
          - Unknown
          - HeliosOnPremVM
          type: string
          x-order: 0
      title: Cluster Type
      type: object
    ClusterUiConfig:
      description: Specifies the params to update UI config.
      properties:
        uiConfig:
          description: Specifies the customized UI config.
          nullable: true
          type: string
          x-order: 0
      required:
      - uiConfig
      type: object
    ClustersTenantConfigs:
      description: All configurations related to tenants for all clusters.
      example:
        clusters:
        - organizationsEnabled: true
          clusterIdentifier: clusterIdentifier
          organizationsStorageDomainSharingEnabled: true
        - organizationsEnabled: true
          clusterIdentifier: clusterIdentifier
          organizationsStorageDomainSharingEnabled: true
      properties:
        clusters:
          description: The list of clusters.
          items:
            $ref: '#/components/schemas/ClusterTenantConfig'
          minItems: 1
          type: array
          x-order: 0
      title: ClustersTenantConfigs
      type: object
    CommonAWSCategoryParams:
      description: Specifies the cloud category parameter which are specific to AWS
        related External Targets.
      properties:
        cloudType:
          description: Specifies the AWS External Target type.
          enum:
          - AmazonStandard
          - AmazonGov
          - AmazonC2S
          nullable: true
          type: string
          x-order: 0
      required:
      - cloudType
      title: AWS External Target Request Cloud Category Params.
      type: object
    CommonActiveDirectoryParams:
      description: Specifies the params of Active Directory which are used across
        creating and updating.
      properties:
        machineAccounts:
          description: Specifies a list of computer names used to identify the Cohesity
            Cluster on the Active Directory domain. The first machine account is used
            as primary machine account and it can not be modified.
          items:
            $ref: '#/components/schemas/MachineAccount'
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-order: 0
        id:
          description: Specifies the id of the Active Directory.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 1
        organizationalUnitName:
          description: Specifies an optional organizational unit name.
          nullable: true
          type: string
          x-order: 2
        workGroupName:
          description: Specifies a work group name.
          nullable: true
          type: string
          x-order: 3
        preferredDomainControllers:
          description: Specifies a list of preferred domain controllers of this Active
            Directory.
          items:
            $ref: '#/components/schemas/DomainController'
          nullable: true
          type: array
          x-order: 4
        ldapProviderId:
          description: Specifies the LDAP provider id which is mapped to this Active
            Directory
          format: int64
          nullable: true
          type: integer
          x-order: 5
        trustedDomainParams:
          allOf:
          - $ref: '#/components/schemas/TrustedDomainParams'
          - type: object
            x-nullable: true
          description: Specifies the params of trusted domain info of an Active Directory.
          nullable: true
          type: object
          x-order: 6
        nisProviderDomainName:
          description: Specifies the name of the NIS Provider which is mapped to this
            Active Directory.
          nullable: true
          type: string
          x-order: 7
        connectionId:
          description: Specifies the id of the connection.
          format: int64
          nullable: true
          type: integer
          x-order: 8
      required:
      - machineAccounts
      type: object
    CommonArchivalAwsExternalTargetParams:
      allOf:
      - $ref: '#/components/schemas/CommonAwsExternalTargetParams'
      - $ref: '#/components/schemas/CommonArchivalAwsExternalTargetParams_allOf'
      description: Specifies the common parameters which are specific to AWS related
        External Targets of archival purpose type.
      title: AWS External Target Request Common Params for archival purpose type.
    CommonArchivalAzureExternalTargetParams:
      allOf:
      - $ref: '#/components/schemas/CommonAzureExternalTargetParams'
      - $ref: '#/components/schemas/CommonArchivalAzureExternalTargetParams_allOf'
      description: Specifies the common parameters which are specific to Azure related
        External Targets of archival purpose type.
      title: Azure External Target Request Common Params for archival purpose type.
    CommonArchivalExternalTargetParams:
      description: Specifies the common parameters which are specific to Archival
        purpose type External Targets.
      properties:
        storageType:
          description: Specifies the Storage type of the External Target.
          enum:
          - Azure
          - Google
          - AWS
          - Oracle
          - Nas
          - QStarTape
          - S3Compatible
          nullable: true
          type: string
          x-order: 0
        encryption:
          $ref: '#/components/schemas/EncryptionSettings'
        targetBandwidthThrottlings:
          $ref: '#/components/schemas/TargetBandwidthThrottlings'
      required:
      - encryption
      - storageType
      type: object
    CommonAuthenticationMethodParams:
      description: Specifies the cloud category parameter which are specific to AWS
        related External Targets.
      properties:
        authenticationType:
          description: Specifies the AWS External Target Authentication type.
          enum:
          - kUseIAMUser
          - kUseIAMRole
          nullable: true
          type: string
          x-order: 0
      required:
      - authenticationType
      title: AWS External Target Request Cloud Category Params.
      type: object
    CommonAwsExternalTargetParams:
      description: Specifies the common parameters which are specific to AWS related
        External Targets.
      properties:
        bucketName:
          description: Specifies bucket name of the External Target.
          nullable: true
          type: string
          x-order: 0
        region:
          description: Specifies region of the External Target.
          nullable: true
          type: string
          x-order: 1
      required:
      - bucketName
      - region
      title: AWS External Target Request Common Params.
      type: object
    CommonAzureExternalTargetParams:
      description: Specifies the common parameters which are specific to Azure related
        External Targets.
      properties:
        containerName:
          description: Specifies the container name of the external target.
          nullable: true
          type: string
          x-order: 0
        storageAccountName:
          description: Specifies the storage account name of the external target.
          nullable: true
          type: string
          x-order: 1
        storageAccessKey:
          description: Specifies the storage access key of the external target.
          nullable: true
          type: string
          x-order: 2
      required:
      - containerName
      - storageAccessKey
      - storageAccountName
      title: Azure External Target Request Common Params for archival purpose type.
      type: object
    CommonBackupParams:
      description: Specifies the common parameters for backup. These parameters are
        common across protection group and object protection.
      properties:
        policyId:
          description: Specifies the unique id of the Protection Policy. The Policy
            settings will be attached with every object and will be used in backup.
          nullable: true
          type: string
          x-order: 0
        policyConfig:
          $ref: '#/components/schemas/PolicyConfig'
        storageDomainId:
          description: Specifies the Storage Domain (View Box) ID where the object
            backup will be taken. This is not required if Cloud archive direct is
            benig used.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        startTime:
          $ref: '#/components/schemas/TimeOfDay'
        priority:
          description: Specifies the priority for the objects backup.
          enum:
          - kLow
          - kMedium
          - kHigh
          nullable: true
          type: string
          x-order: 4
        sla:
          description: Specifies the SLA parameters for list of objects.
          items:
            $ref: '#/components/schemas/SlaRule'
          nullable: true
          type: array
          x-order: 5
        qosPolicy:
          description: Specifies whether object backup will be written to HDD or SSD.
          enum:
          - kBackupHDD
          - kBackupSSD
          - kTestAndDevHigh
          - kBackupAll
          nullable: true
          type: string
          x-order: 6
        abortInBlackouts:
          description: Specifies whether currently executing object backup should
            abort if a blackout period specified by a policy starts. Available only
            if the selected policy has at least one blackout period. Default value
            is false.
          nullable: true
          type: boolean
          x-order: 7
        endTimeUsecs:
          description: Specifies the end time in micro seconds for this Protection
            Group. If this is not specified, the Protection Group won't be ended.
          format: int64
          nullable: true
          type: integer
          x-order: 8
      type: object
    CommonBandwidthSettings:
      description: Specifies the common bandwidth setting of the External Target
      properties:
        download:
          $ref: '#/components/schemas/BandwidthThrottling'
        upload:
          $ref: '#/components/schemas/BandwidthThrottling'
      title: Common Bandwidth Settings
      type: object
    CommonCdpParams:
      description: Specifies the params for Continuous Data Protection.
      properties:
        enableCdpSyncReplication:
          description: Specifies whether synchronous replication is enabled for CDP
            Protection Group when replication target is specified in attached policy.
          nullable: true
          type: boolean
          x-order: 0
      title: Continuous Data Protection Params.
      type: object
    CommonCloudTierSettings:
      description: Specifies the common settings required for configuring cloud tiering.
      properties:
        moveAfterUnit:
          description: Specifies the unit for moving the data from current tier to
            next tier. This unit will be a base unit for the 'moveAfter' field specified
            below.
          enum:
          - Days
          - Weeks
          - Months
          - Years
          nullable: true
          type: string
          x-order: 0
        moveAfter:
          description: Specifies the time period after which the backup will be moved
            from current tier to next tier.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    CommonCreateOrUpdateRigelConnectionRequest:
      description: Specify the common params to create or update a connection of Rigel.
      properties:
        tenantId:
          description: Specifies the id of the tenant which the connection belongs
            to.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the name of the connection.
          nullable: true
          type: string
          x-order: 1
      required:
      - name
      - tenantId
      title: Common Create Or Update Rigel Connection Request.
      type: object
    CommonCreateOrUpdateRigelConnectorRequest:
      description: Specify the common params to create or update a Rigel connector.
      properties:
        connectionId:
          description: Specifies the Id of the connection which this connector belongs
            to.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        tenantId:
          description: Specifies the id of the tenant which the connector belongs
            to.
          nullable: true
          type: string
          x-order: 1
        name:
          description: Specifies the name of the connector.
          nullable: true
          type: string
          x-order: 2
        certificateVersion:
          description: Specifies the version of the connector's certificate. The version
            is used to revoke/renew connector's certificates.
          format: int64
          nullable: true
          type: integer
          x-order: 3
      required:
      - certificateVersion
      - connectionId
      - name
      - tenantId
      title: Common Create Or Update Rigel connector Request.
      type: object
    CommonCsrRequestParams:
      description: Specifies the parameters of a CSR.
      properties:
        organization:
          description: Specifies the organization attribute, which is part of the
            distinguished name definition. It is used to specify the name of the company.
          nullable: true
          type: string
          x-order: 0
        organizationUnit:
          description: Specifies the organization unit attribute, which is part of
            the distinguished name definition. It is used to identify the specific
            department or business unit in the company that is owning the Cluster.
          nullable: true
          type: string
          x-order: 1
        countryCode:
          description: Specifies the country attribute, which is part of the distinguished
            name definition. It is used to identify the country where the state is
            located. It is specified as two letter code defined by the ISO standard.
          nullable: true
          type: string
          x-order: 2
        state:
          description: Specifies the state attribute, which is part of the distinguished
            name definition. It is used to identify the state where the city is located.
          nullable: true
          type: string
          x-order: 3
        city:
          description: Specifies the locality attribute, which is part of the distinguished
            name definition. It is used to identify the city where the company is
            located or the Cluster is installed.
          nullable: true
          type: string
          x-order: 4
        keyType:
          default: rsa
          description: Specifies the algorithm to be used to generate the key pair.
            RSA is the default value.
          enum:
          - rsa
          - ecdsa
          nullable: true
          type: string
          x-order: 5
        keySizeBits:
          description: Specifies the size of the keys in bits. The default is 2048
            bits for the RSA keys and 256 bits for ECDSA.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        commonName:
          description: Specifies the common name attribute, which is part of the distinguished
            name definition. Common name is used to specify a context for the certificate,
            for example, the name of the Cluster to which the certificate is to be
            assigned. Default value is the name of the Cluster.
          nullable: true
          type: string
          x-order: 7
        dnsNames:
          description: Specifies an alternative subject name component to be included
            in the certificate. It is used to identify the ways the Cluster will be
            accessed. It is given as a comma separated list of FQDNs. The default
            value is the Cluster's VIP hostname.
          items:
            type: string
          nullable: true
          type: array
          x-order: 8
        hostIps:
          description: Specifies an alternative subject name component to be included
            in the certificate. It is used to identify the ways the Cluster will be
            accessed. It is given as a comma separated list of IP addresses. The default
            value is the Cluster's VIP addresses.
          items:
            type: string
          nullable: true
          type: array
          x-order: 9
        emailAddress:
          description: Specifies an alternative subject name component to be included
            in the certificate. Format is a standard e-mail address, for example joe@company.com.
          nullable: true
          type: string
          x-order: 10
        serviceName:
          default: iris
          description: Specifies the Cohesity service name for which the CSR is generated.
            Default service name is iris.
          enum:
          - iris
          nullable: true
          type: string
          x-order: 11
      required:
      - city
      - countryCode
      - organization
      - organizationUnit
      - state
      type: object
    CommonCsrResponseParams:
      allOf:
      - $ref: '#/components/schemas/CommonCsrRequestParams'
      - $ref: '#/components/schemas/CommonCsrResponseParams_allOf'
      description: Specifies the common response params for a CSR.
    CommonDataTieringAnalysisGroupParams:
      description: Specifies the data tiering analysis group.
      example:
        name: name
        source:
          environment: kGenericNas
          isilonParams:
            sourceId: 1
            objects:
            - name: name
              id: 0
            - name: name
              id: 0
          genericNasParams:
            sourceId: 6
            objects:
            - name: name
              id: 0
            - name: name
              id: 0
          netappParams:
            sourceId: 5
            objects:
            - name: name
              id: 0
            - name: name
              id: 0
      properties:
        name:
          description: Specifies the name of the data tiering analysis group.
          nullable: true
          type: string
          x-order: 0
        source:
          $ref: '#/components/schemas/DataTieringSource'
      required:
      - name
      - source
      type: object
    CommonDataTieringTaskParams:
      description: Specifies the data tiering task details.
      properties:
        name:
          description: Specifies the name of the data tiering task.
          nullable: true
          type: string
          x-order: 0
        description:
          description: Specifies a description of the data tiering task.
          nullable: true
          type: string
          x-order: 1
        alertPolicy:
          $ref: '#/components/schemas/ProtectionGroupAlertingPolicy'
        source:
          $ref: '#/components/schemas/DataTieringSource'
        target:
          $ref: '#/components/schemas/DataTieringTarget'
        schedule:
          $ref: '#/components/schemas/DataTieringSchedule'
        type:
          description: |-
            Type of data tiering task.
            'Downtier' indicates downtiering task.
            'Uptier' indicates uptiering task.
          enum:
          - Downtier
          - Uptier
          nullable: true
          type: string
          x-order: 6
      required:
      - name
      - type
      type: object
      x-cohesity-discriminator-details:
        propertyName: type
    CommonDataTieringTaskResponse:
      description: Specifies the data tiering task details.
      properties:
        id:
          description: Specifies the id of the data tiering task.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the name of the data tiering task.
          nullable: true
          type: string
          x-order: 1
        description:
          description: Specifies a description of the data tiering task.
          nullable: true
          type: string
          x-order: 2
        alertPolicy:
          $ref: '#/components/schemas/ProtectionGroupAlertingPolicy'
        source:
          $ref: '#/components/schemas/DataTieringSource'
        target:
          $ref: '#/components/schemas/DataTieringTarget'
        schedule:
          $ref: '#/components/schemas/DataTieringSchedule'
        type:
          description: |-
            Type of data tiering task.
            'Downtier' indicates downtiering task.
            'Uptier' indicates uptiering task.
          enum:
          - Downtier
          - Uptier
          nullable: true
          type: string
          x-order: 7
        lastRun:
          $ref: '#/components/schemas/DataTieringTaskRun'
        isActive:
          default: true
          description: Whether the data tiering task is active or not.
          nullable: true
          type: boolean
          x-order: 9
        isPaused:
          default: true
          description: |-
            Whether the data tiering task is paused. New runs are not scheduled
            for the paused tasks. Active run of the task (if any) is not
            impacted.
          nullable: true
          type: boolean
          x-order: 10
        isDeleted:
          default: true
          description: Tracks whether the backup job has actually been deleted.
          nullable: true
          type: boolean
          x-order: 11
      required:
      - name
      - type
      type: object
      x-cohesity-discriminator-details:
        propertyName: type
    CommonDownloadFileAndFolderParams:
      description: Specifies the parameters to download files and folders.
      properties:
        filesAndFolders:
          description: Specifies the info about the files and folders to be recovered.
          items:
            $ref: '#/components/schemas/CommonRecoverFileAndFolderInfo'
          nullable: true
          type: array
          x-order: 0
        downloadFilePath:
          description: Specifies the path location to download the files and folders.
          nullable: true
          type: string
          x-order: 1
      title: Download File And Folder Params
      type: object
    CommonEnvSpecificObjectProtectionParams:
      description: Specifies common properties of Object Protection Operations
      properties:
        environment:
          description: Specifies the environment for current object.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kGCP
          - kKVM
          - kAcropolis
          - kAWS
          - kPhysical
          - kGPFS
          - kElastifile
          - kNetapp
          - kGenericNas
          - kIsilon
          - kFlashBlade
          - kPure
          - kSQL
          - kExchange
          - kAD
          - kOracle
          - kView
          - kRemoteAdapter
          - kO365
          - kO365PublicFolders
          - kO365Teams
          - kO365Group
          - kO365Exchange
          - kO365OneDrive
          - kO365Sharepoint
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          nullable: true
          type: string
          x-order: 0
      type: object
      x-cohesity-discriminator-details:
        propertyName: environment
    CommonExternalTargetParams:
      description: Specifies the parameters which are common between all External
        Target.
      properties:
        id:
          description: Specifies the ID of the External Target.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the External Target.
          nullable: true
          type: string
          x-order: 1
        purposeType:
          description: Specifies the purpose of the External Target.
          enum:
          - Archival
          - Tiering
          nullable: true
          type: string
          x-order: 2
        compression:
          description: Specifies whether the type of compression of the External Target
          enum:
          - None
          - Low
          - High
          nullable: true
          type: string
          x-order: 3
        status:
          description: Specifies the registration status of the External Target
          enum:
          - Registered
          - Unregistering
          - Unregistered
          nullable: true
          readOnly: true
          type: string
          x-order: 4
        tenantIds:
          description: Specifies the list of tenantIds for the External Target
          items:
            type: string
          type: array
          x-omitEmpty: true
          x-order: 5
        cloudDomains:
          description: Specifies the cloud domain information.
          items:
            $ref: '#/components/schemas/CloudDomain'
          nullable: true
          type: array
          x-order: 6
      required:
      - name
      - purposeType
      type: object
    CommonGcpExternalTargetParams:
      description: Specifies the common parameters which are specific to GCP related
        External Targets.
      properties:
        bucketName:
          description: Specifies the bucket name of the external target.
          nullable: true
          type: string
          x-order: 0
        projectId:
          description: Specifies the project Id of the external target.
          nullable: true
          type: string
          x-order: 1
        clientEmailAddress:
          description: Specifies the client email address of the external target.
          nullable: true
          type: string
          x-order: 2
        clientPrivateKey:
          description: Specifies the client private key of the external target.
          nullable: true
          type: string
          x-order: 3
      required:
      - bucketName
      - clientEmailAddress
      - clientPrivateKey
      - projectId
      title: GCP External Target Request Common Params.
      type: object
    CommonGenericNasProtectionParams:
      description: Specifies the parameters which are specific to Generic NAS Protection.
      properties:
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        continueOnError:
          description: Specifies whether or not the backup should continue regardless
            of whether or not an error was encountered.
          nullable: true
          type: boolean
          x-order: 1
        encryptionEnabled:
          description: Specifies whether the encryption should be used while backup
            or not.
          nullable: true
          type: boolean
          x-order: 2
        fileLockConfig:
          $ref: '#/components/schemas/FileLevelDataLockConfig'
        fileFilters:
          $ref: '#/components/schemas/FileFilteringPolicy'
        prePostScript:
          $ref: '#/components/schemas/HostBasedBackupScriptParams'
        throttlingConfig:
          $ref: '#/components/schemas/NasThrottlingConfig'
      type: object
    CommonHyperVObjectParams:
      description: Specifies the common object parameters required for HyperV protection.
      properties:
        backupsCopyOnly:
          description: Specifies whether the backups should be copy-only.
          nullable: true
          type: boolean
          x-order: 0
      type: object
    CommonHyperVProtectionParams:
      description: Specifies the common parameters which are specific to HyperV related
        protection.
      properties:
        appConsistentSnapshot:
          description: Specifies whether or not to quiesce apps and the file system
            in order to take app consistent snapshots. If not specified or false then
            snapshots will not be app consistent.
          nullable: true
          type: boolean
          x-order: 0
        fallbackToCrashConsistentSnapshot:
          description: Specifies whether or not to fallback to a crash consistent
            snapshot in the event that an app consistent snapshot fails.
          nullable: true
          type: boolean
          x-order: 1
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
      type: object
    CommonIdpParams:
      description: Specifies the Identity Provider Configuration.
      properties:
        name:
          description: Specifies the name of the vendor providing IDP service.
          nullable: true
          type: string
          x-order: 0
        domain:
          description: Specifies a unique name for this IdP configuration.
          nullable: true
          type: string
          x-order: 1
        ssoUrl:
          description: Specifies the SSO URL of the IdP service for the customer.
            This is the URL given by IdP when the customer created an account. For
            example, dev-332534.oktapreview.com.
          nullable: true
          type: string
          x-order: 2
        issuerId:
          description: Specifies the IdP provided Issuer ID for the app. For example,
            exkh1aov1nhHrgFhN0h7.
          nullable: true
          type: string
          x-order: 3
        sfAccountId:
          description: Specifies the salesforce account ID linked to this IDP. Either
            TenantId or SfAccountId should be set for IdP.
          nullable: true
          readOnly: true
          type: string
          x-order: 4
        certificate:
          description: Specifies the certificate generated for the app by the IdP
            service when the Helios is registered as an app. This is required to verify
            the SAML response.
          nullable: true
          type: string
          x-order: 5
        defaultRoles:
          description: Specifies a list of default roles assigned to an IdP user if
            rolesSamlAttributeName is not given.
          items:
            type: string
          nullable: true
          type: array
          x-order: 6
        defaultClusters:
          description: Specifies a list of default clusterIds assigned to an IdP user
            if clustersSamlAttributeName is not given. 'All' must be specified to
            give access to all clusters.
          items:
            type: string
          nullable: true
          type: array
          x-order: 7
        signRequest:
          description: Specifies whether to sign the SAML request or not. When it
            is set to true, SAML request will be signed. When it is set to false,
            SAML request is not signed. Default is false. Set this flag to true if
            the IdP site is configured to expect the SAML request from Helios signed.
            If this is set to true, users must get the Helios certificate and upload
            it on the IdP site.
          nullable: true
          type: boolean
          x-order: 8
        isEnabled:
          description: Specifies a flag to enable or disable this IdP service. When
            it is set to true, IdP service is enabled. When it is set to false, IdP
            service is disabled. Default value is true.
          nullable: true
          type: boolean
          x-order: 9
        tenantId:
          description: Specifies the Tenant Id if the IdP is configured for a Tenant.
            Either TenantId or SfAccountId should be set for IdP.
          nullable: true
          type: string
          x-order: 10
      required:
      - certificate
      - domain
      - issuerId
      - name
      - ssoUrl
      title: IDP Configuration.
      type: object
    CommonIndexedObjectParams:
      allOf:
      - $ref: '#/components/schemas/CommonIndexedObjectParams_allOf'
      - $ref: '#/components/schemas/TagObject'
      description: Holds parameters common to an indexed object.
      title: CommonIndexedObjectParams
    CommonMSSQLProtectionGroupParams:
      description: Specifies the common params to create a MSSQL Protection Group.
      properties:
        userDbBackupPreferenceType:
          description: Specifies the preference type for backing up user databases
            on the host.
          enum:
          - kBackupAllDatabases
          - kBackupAllExceptAAGDatabases
          - kBackupOnlyAAGDatabases
          nullable: true
          type: string
          x-order: 0
        backupSystemDbs:
          description: Specifies whether to backup system databases. If not specified
            then parameter is set to true.
          nullable: true
          type: boolean
          x-order: 1
        useAagPreferencesFromServer:
          description: Specifies whether or not the AAG backup preferences specified
            on the SQL Server host should be used.
          nullable: true
          type: boolean
          x-order: 2
        aagBackupPreferenceType:
          description: Specifies the preference type for backing up databases that
            are part of an AAG. If not specified, then default preferences of the
            AAG server are applied. This field wont be applicable if user DB preference
            is set to skip AAG databases.
          enum:
          - kPrimaryReplicaOnly
          - kSecondaryReplicaOnly
          - kPreferSecondaryReplica
          - kAnyReplica
          nullable: true
          type: string
          x-order: 3
        fullBackupsCopyOnly:
          description: Specifies whether full backups should be copy-only.
          nullable: true
          type: boolean
          x-order: 4
        prePostScript:
          $ref: '#/components/schemas/PrePostScriptParams'
        excludeFilters:
          description: Specifies the list of exclusion filters applied during the
            group creation or edit. These exclusion filters can be wildcard supported
            strings or regular expressions. Objects satisfying the will filters will
            be excluded during backup and also auto protected objects will be ignored
            if filtered by any of the filters.
          items:
            $ref: '#/components/schemas/Filter'
          nullable: true
          type: array
          x-order: 6
      title: Common MSSQL Protection Group Request Params.
      type: object
    CommonMcmSignupParams:
      description: Specifies the common params to create MCM signup request.
      properties:
        contactInfo:
          $ref: '#/components/schemas/McmSignupUserContactInfo'
        workloads:
          description: Specifies the workload requirements of the company to use Cohesity
            MCM.
          items:
            enum:
            - kVMware
            - kHyperV
            - kAzure
            - kKVM
            - kAWS
            - kAcropolis
            - kGCP
            - kPhysical
            - kPhysicalFiles
            - kIsilon
            - kNetapp
            - kGenericNas
            - kFlashBlade
            - kElastifile
            - kGPFS
            - kPure
            - kNimble
            - kSQL
            - kOracle
            - kExchange
            - kAD
            - kView
            - kO365
            - kHyperFlex
            - kKubernetes
            - kCassandra
            - kMongoDB
            - kCouchbase
            - kHdfs
            - kHive
            - kHBase
            - kUDA
            type: string
          type: array
          x-order: 1
        dmaasParams:
          $ref: '#/components/schemas/DmaasSignupParams'
      required:
      - contactInfo
      title: Common MCM Signup params.
      type: object
    CommonMssqlFileObjectProtectionParams:
      allOf:
      - $ref: '#/components/schemas/CommonMSSQLProtectionGroupParams'
      description: Specifies the common params to create a File based MSSQL Object
        Protection.
    CommonMssqlNativeObjectProtectionParams:
      allOf:
      - $ref: '#/components/schemas/CommonMssqlNativeObjectProtectionParams_allOf'
      - $ref: '#/components/schemas/CommonMSSQLProtectionGroupParams'
      description: Specifies the common params to create a Native based MSSQL Object
        Protection.
    CommonMssqlObjectProtectionParams:
      description: Specifies the common parameters for MSSQL Object Protection.
      properties:
        objectProtectionType:
          description: Specifies the MSSQL Object Protection type.
          enum:
          - kFile
          - kVolume
          - kNative
          type: string
          x-order: 0
        commonFileObjectProtectionTypeParams:
          $ref: '#/components/schemas/CommonMssqlFileObjectProtectionParams'
        commonNativeObjectProtectionTypeParams:
          $ref: '#/components/schemas/CommonMssqlNativeObjectProtectionParams'
      required:
      - objectProtectionType
      type: object
    CommonNasObjectParams:
      description: Specifies the common parameters for NAS objects.
      properties:
        supportedNasMountProtocols:
          description: Specifies a list of NAS mount protocols supported by this object.
          items:
            enum:
            - kNoProtocol
            - kNfs3
            - kNfs4_1
            - kCifs1
            - kCifs2
            - kCifs3
            type: string
          nullable: true
          type: array
          x-order: 0
      type: object
    CommonNasProtectionParams:
      description: Specifies the parameters which are specific to NAS Protection.
      properties:
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        continueOnError:
          description: Specifies whether or not the backup should continue regardless
            of whether or not an error was encountered.
          nullable: true
          type: boolean
          x-order: 1
        encryptionEnabled:
          description: Specifies whether the encryption should be used while backup
            or not.
          nullable: true
          type: boolean
          x-order: 2
        fileLockConfig:
          $ref: '#/components/schemas/FileLevelDataLockConfig'
        fileFilters:
          $ref: '#/components/schemas/FileFilteringPolicy'
        prePostScript:
          $ref: '#/components/schemas/HostBasedBackupScriptParams'
        throttlingConfig:
          $ref: '#/components/schemas/NasThrottlingConfig'
      type: object
    CommonNoSqlRecoveryOptions:
      description: Specifies the common properties required by all Nosl adapters at
        the time of recovery.
      properties:
        recoverTo:
          description: Specifies the 'Source Registration ID' of the source where
            the objects are to be recovered. If this is not specified, the recovery
            job will recover to the original location.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        overwrite:
          description: Set to true to overwrite an existing object at the destination.
            If set to false, and the same object exists at the destination, then recovery
            will fail for that object.
          nullable: true
          type: boolean
          x-order: 1
        concurrency:
          description: Specifies the maximum number of concurrent IO Streams that
            will be created to exchange data with the cluster.
          format: int32
          nullable: true
          type: integer
          x-order: 2
        bandwidthMBPS:
          description: Specifies the maximum network bandwidth that each concurrent
            IO Stream can use for exchanging data with the cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        warnings:
          description: This field will hold the warnings in cases where the job status
            is SucceededWithWarnings.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
          x-order: 4
      type: object
    CommonObjectActionRequest:
      description: Specifies the common request parameters for performing an action
        on Object.
      properties:
        environment:
          description: Specifies the environment type of the Object.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kKVM
          - kAWS
          - kAcropolis
          - kGCP
          - kPhysical
          - kPhysicalFiles
          - kIsilon
          - kNetapp
          - kGenericNas
          - kFlashBlade
          - kElastifile
          - kGPFS
          - kPure
          - kNimble
          - kSQL
          - kOracle
          - kExchange
          - kAD
          - kView
          - kO365
          - kHyperFlex
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          nullable: true
          type: string
          x-order: 0
      required:
      - environment
      title: Common Object Action Request.
      type: object
      x-cohesity-discriminator-details:
        propertyName: environment
    CommonObjectProtectParams:
      allOf:
      - $ref: '#/components/schemas/CommonBackupParams'
      description: Specifies the common parameters for object backup. These parameters
        are common across all types of adapters and objects.
    CommonObjectSnapshotVolumeParams:
      description: Specifies volume info of snapshot across all enviroments.
      properties:
        volumes:
          description: Specifies a list of volume info.
          items:
            $ref: '#/components/schemas/VolumeInfo'
          nullable: true
          type: array
          x-order: 0
      type: object
    CommonObjectSummary:
      allOf:
      - $ref: '#/components/schemas/ObjectSummary'
      - $ref: '#/components/schemas/CommonObjectSummary_allOf'
      description: Specifies an Common summary properties for an object.
      title: Common Object Entity Summary.
      x-cohesity-discriminator-details:
        propertyName: environment
    CommonObjectsActionParams:
      description: Specifies the comon action params needed for performing bulk actions
        on list of objects.
      properties:
        objectMap:
          description: Specifies the objectMap that will be used to perform bulk actions
            such as linking and unlinking.
          items:
            $ref: '#/components/schemas/ActionObjectMapping'
          nullable: true
          type: array
          x-order: 0
      type: object
    CommonOracleAppSourceConfig:
      description: Specifies a common parameters used when restoring back to original
        or new source.
      properties:
        restoreTimeUsecs:
          description: Specifies the time in the past to which the Oracle db needs
            to be restored. This allows for granular recovery of Oracle databases.
            If this is not set, the Oracle db will be restored from the full/incremental
            snapshot.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        dbChannels:
          description: Specifies the Oracle database node channels info. If not specified,
            the default values assigned by the server are applied to all the databases.
          items:
            $ref: '#/components/schemas/OracleDbChannel'
          nullable: true
          type: array
          x-order: 1
        recoveryMode:
          description: Specifies if database should be left in recovery mode.
          nullable: true
          type: boolean
          x-order: 2
        shellEvironmentVars:
          description: Specifies key value pairs of shell variables which defines
            the restore shell environment.
          items:
            $ref: '#/components/schemas/ShellKeyValuePair'
          nullable: true
          type: array
          x-order: 3
        granularRestoreInfo:
          allOf:
          - $ref: '#/components/schemas/RecoverOracleGranularRestoreInfo'
          - type: object
            x-nullable: true
          description: Specifies information about list of objects (PDBs) to restore.
          type: object
          x-order: 4
        oracleArchiveLogInfo:
          allOf:
          - $ref: '#/components/schemas/OracleArchiveLogInfo'
          - type: object
            x-nullable: true
          description: Specifies Range in Time, Scn or Sequence to restore archive
            logs of a DB.
          type: object
          x-order: 5
      title: Common Oracle App Source Config.
      type: object
    CommonOracleCloneParams:
      description: Specifies the common properties of an Oracle clone.
      properties:
        dbName:
          description: Specifies the name of the cloned database.
          nullable: true
          type: string
          x-order: 0
        homeFolder:
          description: Specifies the home folder for the cloned database.
          nullable: true
          type: string
          x-order: 1
        baseFolder:
          description: Specifies the base folder of Oracle installation on the target
            host.
          nullable: true
          type: string
          x-order: 2
        sga:
          description: Specifies the System Global Area (SGA) for the clone database.
          nullable: true
          type: string
          x-order: 3
      required:
      - baseFolder
      - dbName
      - homeFolder
      type: object
    CommonOracleExternalTargetParams:
      description: Specifies the common parameters which are specific to Oracle related
        External Targets.
      properties:
        bucketName:
          description: Specifies the bucket name of the external target.
          nullable: true
          type: string
          x-order: 0
        region:
          description: Specifies the region of the external target.
          nullable: true
          type: string
          x-order: 1
        accessKeyId:
          description: Specifies the access key id of the external target.
          nullable: true
          type: string
          x-order: 2
        storageAccessKey:
          description: Specifies the storage access key of the external target.
          nullable: true
          type: string
          x-order: 3
        tenancy:
          description: Specifies the tenancy of the external target.
          nullable: true
          type: string
          x-order: 4
      required:
      - accessKeyId
      - bucketName
      - region
      - storageAccessKey
      - tenancy
      title: Oracle External Target Request Common Params for archival purpose type.
      type: object
    CommonPITRangesProtectedObjectResponse:
      description: Specifies common properties for PIT Response
      properties:
        environment:
          description: Specifies the environment for which restore ranges are returned.
          enum:
          - kOracle
          nullable: true
          type: string
          x-order: 0
      title: Common PIT Response
      type: object
      x-cohesity-discriminator-details:
        propertyName: environment
    CommonPostBackupScriptParams:
      allOf:
      - $ref: '#/components/schemas/CommonPrePostScriptParams'
      description: Specifies the common params for PostBackup scripts.
      title: Common PostBackup Script Params
    CommonPreBackupScriptParams:
      allOf:
      - $ref: '#/components/schemas/CommonPrePostScriptParams'
      - $ref: '#/components/schemas/CommonPreBackupScriptParams_allOf'
      description: Specifies the common params for PreBackup scripts.
      title: Common PreBackup Script Params
    CommonPrePostScriptParams:
      description: Specifies the path to the remote script and any common parameters
        expected by the remote script.
      properties:
        path:
          description: Specifies the absolute path to the script on the remote host.
          type: string
          x-order: 0
        params:
          description: 'Specifies the arguments or parameters and values to pass into
            the remote script. For example if the script expects values for the ''database''
            and ''user'' parameters, specify the parameters and values using the following
            string: "database=myDatabase user=me".'
          nullable: true
          type: string
          x-order: 1
        timeoutSecs:
          description: Specifies the timeout of the script in seconds. The script
            will be killed if it exceeds this value. By default, no timeout will occur
            if left empty.
          format: int32
          minimum: 1
          nullable: true
          type: integer
          x-order: 2
        isActive:
          description: Specifies whether the script should be enabled, default value
            set to true.
          nullable: true
          type: boolean
          x-order: 3
      required:
      - path
      title: Common PrePost Script Params
      type: object
    CommonProtectionGroupRequestParams:
      description: Specifies the parameters which are common between all Protection
        Group requests.
      properties:
        name:
          description: Specifies the name of the Protection Group.
          nullable: true
          type: string
          x-order: 0
        policyId:
          description: Specifies the unique id of the Protection Policy associated
            with the Protection Group. The Policy provides retry settings Protection
            Schedules, Priority, SLA, etc.
          nullable: true
          type: string
          x-order: 1
        priority:
          description: Specifies the priority of the Protection Group.
          enum:
          - kLow
          - kMedium
          - kHigh
          nullable: true
          type: string
          x-order: 2
        storageDomainId:
          description: Specifies the Storage Domain (View Box) ID where this Protection
            Group writes data.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        description:
          description: Specifies a description of the Protection Group.
          nullable: true
          type: string
          x-order: 4
        startTime:
          $ref: '#/components/schemas/TimeOfDay'
        endTimeUsecs:
          description: Specifies the end time in micro seconds for this Protection
            Group. If this is not specified, the Protection Group won't be ended.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        alertPolicy:
          $ref: '#/components/schemas/ProtectionGroupAlertingPolicy'
        sla:
          description: Specifies the SLA parameters for this Protection Group.
          items:
            $ref: '#/components/schemas/SlaRule'
          nullable: true
          type: array
          x-order: 8
        qosPolicy:
          description: Specifies whether the Protection Group will be written to HDD
            or SSD.
          enum:
          - kBackupHDD
          - kBackupSSD
          - kTestAndDevHigh
          - kBackupAll
          nullable: true
          type: string
          x-order: 9
        abortInBlackouts:
          description: Specifies whether currently executing jobs should abort if
            a blackout period specified by a policy starts. Available only if the
            selected policy has at least one blackout period. Default value is false.
            This field should not be set to true if 'pauseInBlackouts' is set to true.
          nullable: true
          type: boolean
          x-order: 10
        pauseInBlackouts:
          description: Specifies whether currently executing jobs should be paused
            if a blackout period specified by a policy starts. Available only if the
            selected policy has at least one blackout period. Default value is false.
            This field should not be set to true if 'abortInBlackouts' is sent as
            true.
          nullable: true
          type: boolean
          x-order: 11
        environment:
          description: Specifies the environment type of the Protection Group.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kGCP
          - kKVM
          - kAcropolis
          - kAWS
          - kPhysical
          - kGPFS
          - kElastifile
          - kNetapp
          - kGenericNas
          - kIsilon
          - kFlashBlade
          - kPure
          - kSQL
          - kExchange
          - kAD
          - kOracle
          - kView
          - kRemoteAdapter
          - kO365
          - kO365PublicFolders
          - kO365Teams
          - kO365Group
          - kO365Exchange
          - kO365OneDrive
          - kO365Sharepoint
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          nullable: true
          type: string
          x-order: 12
        isPaused:
          description: Specifies if the the Protection Group is paused. New runs are
            not scheduled for the paused Protection Groups. Active run if any is not
            impacted.
          nullable: true
          type: boolean
          x-order: 13
      required:
      - environment
      - name
      - policyId
      type: object
      x-cohesity-discriminator-details:
        propertyName: environment
    CommonProtectionGroupResponseParams:
      description: Specifies the parameters which are common between all Protection
        Group responses.
      properties:
        id:
          description: Specifies the ID of the Protection Group.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the name of the Protection Group.
          nullable: true
          type: string
          x-order: 1
        policyId:
          description: Specifies the unique id of the Protection Policy associated
            with the Protection Group. The Policy provides retry settings Protection
            Schedules, Priority, SLA, etc.
          nullable: true
          type: string
          x-order: 2
        priority:
          description: Specifies the priority of the Protection Group.
          enum:
          - kLow
          - kMedium
          - kHigh
          nullable: true
          type: string
          x-order: 3
        storageDomainId:
          description: Specifies the Storage Domain (View Box) ID where this Protection
            Group writes data.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        description:
          description: Specifies a description of the Protection Group.
          nullable: true
          type: string
          x-order: 5
        startTime:
          $ref: '#/components/schemas/TimeOfDay'
        endTimeUsecs:
          description: Specifies the end time in micro seconds for this Protection
            Group. If this is not specified, the Protection Group won't be ended.
          format: int64
          nullable: true
          type: integer
          x-order: 7
        alertPolicy:
          $ref: '#/components/schemas/ProtectionGroupAlertingPolicy'
        sla:
          description: Specifies the SLA parameters for this Protection Group.
          items:
            $ref: '#/components/schemas/SlaRule'
          nullable: true
          type: array
          x-order: 9
        qosPolicy:
          description: Specifies whether the Protection Group will be written to HDD
            or SSD.
          enum:
          - kBackupHDD
          - kBackupSSD
          - kTestAndDevHigh
          - kBackupAll
          nullable: true
          type: string
          x-order: 10
        abortInBlackouts:
          description: Specifies whether currently executing jobs should abort if
            a blackout period specified by a policy starts. Available only if the
            selected policy has at least one blackout period. Default value is false.
          nullable: true
          type: boolean
          x-order: 11
        pauseInBlackouts:
          description: Specifies whether currently executing jobs should be paused
            if a blackout period specified by a policy starts. Available only if the
            selected policy has at least one blackout period. Default value is false.
            This field should not be set to true if 'abortInBlackouts' is sent as
            true.
          nullable: true
          type: boolean
          x-order: 12
        isActive:
          description: Specifies if the Protection Group is active or not.
          nullable: true
          type: boolean
          x-order: 13
        isDeleted:
          description: Specifies if the Protection Group has been deleted.
          nullable: true
          type: boolean
          x-order: 14
        isPaused:
          description: Specifies if the the Protection Group is paused. New runs are
            not scheduled for the paused Protection Groups. Active run if any is not
            impacted.
          nullable: true
          type: boolean
          x-order: 15
        environment:
          description: Specifies the environment of the Protection Group.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kGCP
          - kKVM
          - kAcropolis
          - kAWS
          - kPhysical
          - kGPFS
          - kElastifile
          - kNetapp
          - kGenericNas
          - kIsilon
          - kFlashBlade
          - kPure
          - kSQL
          - kExchange
          - kAD
          - kOracle
          - kView
          - kRemoteAdapter
          - kO365
          - kO365PublicFolders
          - kO365Teams
          - kO365Group
          - kO365Exchange
          - kO365OneDrive
          - kO365Sharepoint
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          nullable: true
          type: string
          x-order: 16
        lastRun:
          $ref: '#/components/schemas/ProtectionGroupRun'
        permissions:
          description: Specifies the list of tenants that have permissions for this
            protection group.
          items:
            $ref: '#/components/schemas/Tenant'
          nullable: true
          type: array
          x-order: 18
        isProtectOnce:
          description: Specifies if the the Protection Group is using a protect once
            type of policy. This field is helpful to identify run happen for this
            group.
          nullable: true
          type: boolean
          x-order: 19
        missingEntities:
          description: Specifies the Information about missing entities.
          items:
            $ref: '#/components/schemas/MissingEntityParams'
          nullable: true
          type: array
          x-order: 20
        numProtectedObjects:
          description: Specifies the number of protected objects of the Protection
            Group.
          format: int64
          nullable: true
          type: integer
          x-order: 21
      type: object
      x-cohesity-discriminator-details:
        propertyName: environment
    CommonProtectionGroupRunResponseParameters:
      description: Specifies the parameters which are common between Protection Group
        runs of all Protection Groups.
      properties:
        id:
          description: Specifies the ID of the Protection Group run.
          nullable: true
          type: string
          x-order: 0
        protectionGroupInstanceId:
          description: Protection Group instance Id. This field will be removed later.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        protectionGroupId:
          description: ProtectionGroupId to which this run belongs.
          nullable: true
          type: string
          x-order: 2
        isReplicationRun:
          description: Specifies if this protection run is a replication run.
          nullable: true
          type: boolean
          x-order: 3
        originClusterIdentifier:
          $ref: '#/components/schemas/ClusterIdentifier'
        originProtectionGroupId:
          description: ProtectionGroupId to which this run belongs on the primary
            cluster if this run is a replication run.
          nullable: true
          type: string
          x-order: 5
        protectionGroupName:
          description: Name of the Protection Group to which this run belongs.
          nullable: true
          type: string
          x-order: 6
        isLocalSnapshotsDeleted:
          description: Specifies if snapshots for this run has been deleted.
          nullable: true
          type: boolean
          x-order: 7
        objects:
          description: Snapahot, replication, archival results for each object.
          items:
            $ref: '#/components/schemas/ObjectRunResult'
          type: array
          x-order: 8
        localBackupInfo:
          $ref: '#/components/schemas/BackupRunSummary'
        originalBackupInfo:
          $ref: '#/components/schemas/BackupRunSummary'
        replicationInfo:
          $ref: '#/components/schemas/ReplicationRunSummary'
        archivalInfo:
          $ref: '#/components/schemas/ArchivalRunSummary'
        cloudSpinInfo:
          $ref: '#/components/schemas/CloudSpinRunSummary'
        onLegalHold:
          description: Specifies if the Protection Run is on legal hold.
          nullable: true
          type: boolean
          x-order: 14
        permissions:
          description: Specifies the list of tenants that have permissions for this
            protection group run.
          items:
            $ref: '#/components/schemas/Tenant'
          nullable: true
          type: array
          x-order: 15
        isCloudArchivalDirect:
          description: Specifies whether the run is a CAD run if cloud archive direct
            feature is enabled. If this field is true, the primary backup copy will
            only be available at the given archived location.
          nullable: true
          type: boolean
          x-order: 16
        hasLocalSnapshot:
          description: Specifies whether the run has a local snapshot. For cloud retrieved
            runs there may not be local snapshots.
          nullable: true
          type: boolean
          x-order: 17
        environment:
          description: Specifies the environment of the Protection Group.
          nullable: true
          type: string
          x-order: 18
          x-cohesity-enum: protection_group_run_type
        externallyTriggeredBackupTag:
          description: The tag of externally triggered backup job.
          nullable: true
          type: string
          x-order: 19
      title: Common Protection Group run response parameters.
      type: object
    CommonRecoverFileAndFolderInfo:
      description: Specifies the information about the specific file or folder to
        recover.
      properties:
        absolutePath:
          description: Specifies the absolute path to the file or folder.
          nullable: true
          type: string
          x-order: 0
        destinationDir:
          description: Specifies the destination directory where the file/directory
            was copied.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        isDirectory:
          description: Specifies whether this is a directory or not.
          nullable: true
          type: boolean
          x-order: 2
        status:
          description: Specifies the recovery status for this file or folder.
          enum:
          - NotStarted
          - EstimationInProgress
          - EstimationDone
          - CopyInProgress
          - Finished
          nullable: true
          readOnly: true
          type: string
          x-order: 3
        messages:
          description: Specify error messages about the file during recovery.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
          x-order: 4
      required:
      - absolutePath
      title: Common File And Folder Info
      type: object
    CommonRecoverObjectSnapshotParams:
      description: Specifies the common snapshot parameters for a protected object.
      example:
        snapshotCreationTimeUsecs: 6
        archivalTargetInfo: '{}'
        storageDomainId: 1
        snapshotId: snapshotId
        pointInTimeUsecs: 0
        protectionGroupName: protectionGroupName
        recoverFromStandby: true
        startTimeUsecs: 5
        snapshotTargetType: Local
        endTimeUsecs: 5
        protectionGroupId: protectionGroupId
        messages:
        - messages
        - messages
        progressTaskId: progressTaskId
        objectInfo: '{}'
        status: Accepted
      properties:
        snapshotId:
          description: Specifies the snapshot id.
          type: string
          x-order: 0
        pointInTimeUsecs:
          description: Specifies the timestamp (in microseconds. from epoch) for recovering
            to a point-in-time in the past.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        protectionGroupId:
          description: Specifies the protection group id of the object snapshot.
          nullable: true
          type: string
          x-order: 2
        protectionGroupName:
          description: Specifies the protection group name of the object snapshot.
          nullable: true
          type: string
          x-order: 3
        snapshotCreationTimeUsecs:
          description: Specifies the time when the snapshot is created in Unix timestamp
            epoch in microseconds.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 4
        objectInfo:
          allOf:
          - $ref: '#/components/schemas/ObjectSummary'
          - type: object
            x-nullable: true
          description: Specifies the information about the object for which the snapshot
            is taken.
          nullable: true
          type: object
          x-order: 5
        snapshotTargetType:
          description: Specifies the snapshot target type.
          enum:
          - Local
          - Archival
          nullable: true
          readOnly: true
          type: string
          x-order: 6
        storageDomainId:
          description: Specifies the ID of the Storage Domain where this snapshot
            is stored.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 7
        archivalTargetInfo:
          allOf:
          - $ref: '#/components/schemas/ArchivalTargetSummaryInfo'
          - type: object
            x-nullable: true
          description: Specifies the archival target information if the snapshot is
            an archival snapshot.
          nullable: true
          type: object
          x-order: 8
        progressTaskId:
          description: Progress monitor task id for Recovery of VM.
          nullable: true
          readOnly: true
          type: string
          x-order: 9
        recoverFromStandby:
          description: Specifies that user wants to perform standby restore if it
            is enabled for this object.
          nullable: true
          type: boolean
          x-order: 10
        status:
          description: Status of the Recovery. 'Running' indicates that the Recovery
            is still running. 'Canceled' indicates that the Recovery has been cancelled.
            'Canceling' indicates that the Recovery is in the process of being cancelled.
            'Failed' indicates that the Recovery has failed. 'Succeeded' indicates
            that the Recovery has finished successfully. 'SucceededWithWarning' indicates
            that the Recovery finished successfully, but there were some warning messages.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          nullable: true
          readOnly: true
          type: string
          x-order: 11
        startTimeUsecs:
          description: Specifies the start time of the Recovery in Unix timestamp
            epoch in microseconds.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 12
        endTimeUsecs:
          description: Specifies the end time of the Recovery in Unix timestamp epoch
            in microseconds. This field will be populated only after Recovery is finished.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 13
        messages:
          description: Specify error messages about the object.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
          x-order: 14
      required:
      - snapshotId
      title: Common Recover Object Snapshot Params.
      type: object
    CommonRecoverOracleAppTargetParams:
      description: Specifies the snapshot parameters to recover Oracle databases.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new source or an original Source Target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverOracleAppNewSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the destination Source configuration parameters where
            the databases will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverOracleAppOriginalSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if databases are being recovered
            to Original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Recover Oracle App Snapshot Params.
      type: object
    CommonRecoverSqlAppTargetParams:
      description: Specifies the snapshot parameters to recover Sql databases.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new sources or an original Source Target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverSqlAppNewSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the destination Source configuration parameters where
            the databases will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverSqlAppOriginalSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if databases are being recovered
            to Original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Recover Sql App Snapshot Params.
      type: object
    CommonRecoveryRequestParams:
      description: Specifies the common request parameters to create a Recovery.
      properties:
        name:
          description: Specifies the name of the Recovery.
          nullable: true
          type: string
          x-order: 0
        snapshotEnvironment:
          description: Specifies the type of environment of snapshots for which the
            Recovery has to be performed.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kGCP
          - kKVM
          - kAcropolis
          - kAWS
          - kPhysical
          - kGPFS
          - kElastifile
          - kNetapp
          - kGenericNas
          - kIsilon
          - kFlashBlade
          - kPure
          - kSQL
          - kExchange
          - kAD
          - kOracle
          - kView
          - kRemoteAdapter
          - kO365
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          type: string
          x-order: 1
      required:
      - name
      - snapshotEnvironment
      title: Common Recovery Request Params.
      type: object
      x-cohesity-discriminator-details:
        propertyName: snapshotEnvironment
    CommonRecoveryResponseParams:
      description: Specifies the common response parameters to create a Recovery
      properties:
        id:
          description: Specifies the id of the Recovery.
          nullable: true
          pattern: ^\d+:\d+:\d+$
          type: string
          x-order: 0
        name:
          description: Specifies the name of the Recovery.
          nullable: true
          type: string
          x-order: 1
        startTimeUsecs:
          description: Specifies the start time of the Recovery in Unix timestamp
            epoch in microseconds.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        endTimeUsecs:
          description: Specifies the end time of the Recovery in Unix timestamp epoch
            in microseconds. This field will be populated only after Recovery is finished.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        status:
          description: Status of the Recovery. 'Running' indicates that the Recovery
            is still running. 'Canceled' indicates that the Recovery has been cancelled.
            'Canceling' indicates that the Recovery is in the process of being cancelled.
            'Failed' indicates that the Recovery has failed. 'Succeeded' indicates
            that the Recovery has finished successfully. 'SucceededWithWarning' indicates
            that the Recovery finished successfully, but there were some warning messages.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          nullable: true
          type: string
          x-order: 4
        progressTaskId:
          description: Progress monitor task id for Recovery.
          nullable: true
          type: string
          x-order: 5
        snapshotEnvironment:
          description: Specifies the type of snapshot environment for which the Recovery
            was performed.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kGCP
          - kKVM
          - kAcropolis
          - kAWS
          - kPhysical
          - kGPFS
          - kElastifile
          - kNetapp
          - kGenericNas
          - kIsilon
          - kFlashBlade
          - kPure
          - kSQL
          - kExchange
          - kAD
          - kOracle
          - kView
          - kRemoteAdapter
          - kO365
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          type: string
          x-order: 6
        recoveryAction:
          description: Specifies the type of recover action.
          enum:
          - RecoverVMs
          - RecoverFiles
          - InstantVolumeMount
          - RecoverVmDisks
          - RecoverVApps
          - RecoverVAppTemplates
          - UptierSnapshot
          - RecoverRDS
          - RecoverAurora
          - RecoverApps
          - RecoverNasVolume
          - RecoverPhysicalVolumes
          - RecoverSystem
          - CloneAppView
          - RecoverSanVolumes
          - RecoverMailbox
          - RecoverOneDrive
          - RecoverSharePoint
          - RecoverPublicFolders
          - RecoverMsGroup
          - RecoverMsTeam
          - RecoverNamespaces
          - RecoverObjects
          - DownloadFilesAndFolders
          type: string
          x-order: 7
        permissions:
          description: Specifies the list of tenants that have permissions for this
            recovery.
          items:
            $ref: '#/components/schemas/Tenant'
          nullable: true
          type: array
          x-order: 8
        creationInfo:
          $ref: '#/components/schemas/CreationInfo'
        canTearDown:
          description: Specifies whether it's possible to tear down the objects created
            by the recovery.
          nullable: true
          type: boolean
          x-order: 10
        tearDownStatus:
          description: Specifies the status of the tear down operation. This is only
            set when the canTearDown is set to true. 'DestroyScheduled' indicates
            that the tear down is ready to schedule. 'Destroying' indicates that the
            tear down is still running. 'Destroyed' indicates that the tear down succeeded.
            'DestroyError' indicates that the tear down failed.
          enum:
          - DestroyScheduled
          - Destroying
          - Destroyed
          - DestroyError
          nullable: true
          type: string
          x-order: 11
        tearDownMessage:
          description: Specifies the error message about the tear down operation if
            it fails.
          nullable: true
          type: string
          x-order: 12
        messages:
          description: Specifies messages about the recovery.
          items:
            type: string
          nullable: true
          type: array
          x-order: 13
        isParentRecovery:
          description: Specifies whether the current recovery operation has created
            child recoveries. This is currently used in SQL recovery where multiple
            child recoveries can be tracked under a common/parent recovery.
          nullable: true
          type: boolean
          x-order: 14
        parentRecoveryId:
          description: If current recovery is child recovery triggered by another
            parent recovery operation, then this field willt specify the id of the
            parent recovery.
          nullable: true
          pattern: ^\d+:\d+:\d+$
          type: string
          x-order: 15
      title: Common Recovery Response Params.
      type: object
      x-cohesity-discriminator-details:
        propertyName: snapshotEnvironment
    CommonRemoteStorageInfo:
      description: Specifies the details of common remote storage info.
      properties:
        id:
          description: Specifies unique id of the registered remote storage.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 0
        product:
          description: Specifies the product type of the remote storage.
          enum:
          - FlashBlade
          nullable: true
          type: string
          x-order: 1
      required:
      - product
      title: Common Remote Storage Info
      type: object
      x-cohesity-discriminator-details:
        propertyName: product
    CommonS3CompExternalTargetParams:
      description: Specifies the common parameters which are specific to S3 Compatible
        related External Targets.
      properties:
        bucketName:
          description: Specifies the bucket name of the external target.
          nullable: true
          type: string
          x-order: 0
        accessKeyId:
          description: Specifies the access key id of the external target.
          nullable: true
          type: string
          x-order: 1
        secretAccessKey:
          description: Specifies the secret access key of the external target.
          nullable: true
          type: string
          x-order: 2
        endPoint:
          description: Specifies the endpoint of the external target.
          nullable: true
          type: string
          x-order: 3
        secureConnection:
          description: Specifies the secure connection(https) is enabled or not.
          nullable: true
          type: boolean
          x-order: 4
        signatureVersion:
          description: Specifies the aws signature version of the external target.
          format: int32
          nullable: true
          type: integer
          x-order: 5
      required:
      - accessKeyId
      - bucketName
      - endPoint
      - secretAccessKey
      title: S3 Compatible External Target Request Common Params.
      type: object
    CommonSearchIndexedObjectsRequestParams:
      description: Specifies the common params to search for indexed objects.
      properties:
        protectionGroupIds:
          description: Specifies a list of Protection Group ids to filter the indexed
            objects. If specified, the objects indexed by specified Protection Group
            ids will be returned.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
        storageDomainIds:
          description: Specifies the Storage Domain ids to filter indexed objects
            for which Protection Groups are writing data to Cohesity Views on the
            specified Storage Domains.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 1
        tenantId:
          description: TenantId contains id of the tenant for which objects are to
            be returned.
          nullable: true
          type: string
          x-order: 2
        includeTenants:
          default: false
          description: If true, the response will include objects which belongs to
            all tenants which the current user has permission to see. Default value
            is false.
          nullable: true
          type: boolean
          x-order: 3
        tags:
          description: '"This field is deprecated. Please use mightHaveTagIds."'
          items:
            type: string
          nullable: true
          type: array
          uniqueItems: true
          x-order: 4
        snapshotTags:
          description: '"This field is deprecated. Please use mightHaveSnapshotTagIds."'
          items:
            type: string
          type: array
          x-order: 5
        mustHaveTagIds:
          description: Specifies tags which must be all present in the document.
          items:
            pattern: ^\d+:\d+:[A-Z0-9-]+$
            type: string
          nullable: true
          type: array
          uniqueItems: true
          x-order: 6
        mightHaveTagIds:
          description: |-
            Specifies list of tags, one or more of which might be present in the
            document. These are OR'ed together and the resulting criteria AND'ed
            with the rest of the query.
          items:
            pattern: ^\d+:\d+:[A-Z0-9-]+$
            type: string
          nullable: true
          type: array
          uniqueItems: true
          x-order: 7
        mustHaveSnapshotTagIds:
          description: Specifies snapshot tags which must be all present in the document.
          items:
            pattern: ^\d+:\d+:[A-Z0-9-]+$
            type: string
          nullable: true
          type: array
          uniqueItems: true
          x-order: 8
        mightHaveSnapshotTagIds:
          description: |-
            Specifies list of snapshot tags, one or more of which might be
            present in the document. These are OR'ed together and the resulting
            criteria AND'ed with the rest of the query.
          items:
            pattern: ^\d+:\d+:[A-Z0-9-]+$
            type: string
          nullable: true
          type: array
          uniqueItems: true
          x-order: 9
        paginationCookie:
          description: Specifies the pagination cookie with which subsequent parts
            of the response can be fetched.
          nullable: true
          type: string
          x-order: 10
        count:
          description: Specifies the number of indexed objects to be fetched for the
            specified pagination cookie.
          format: int32
          nullable: true
          type: integer
          x-order: 11
        objectType:
          description: Specifies the object type to be searched for.
          enum:
          - Emails
          - Files
          - CassandraObjects
          - CouchbaseObjects
          - HbaseObjects
          - HiveObjects
          - MongoObjects
          - HDFSObjects
          - ExchangeObjects
          - PublicFolders
          - TeamsObjects
          - SharepointObjects
          type: string
          x-order: 12
      required:
      - objectType
      title: Common Search Indexed Objects Params
      type: object
      x-cohesity-discriminator-details:
        propertyName: objectType
    CommonSearchIndexedObjectsResponseParams:
      description: Specifies the common search indexed objects response params.
      properties:
        objectType:
          description: Specifies the object type.
          enum:
          - Emails
          - Files
          - CassandraObjects
          - CouchbaseObjects
          - HbaseObjects
          - HiveObjects
          - MongoObjects
          - HDFSObjects
          - ExchangeObjects
          - PublicFolders
          - TeamsObjects
          - SharepointObjects
          type: string
          x-order: 0
        count:
          description: Specifies the total number of indexed objects that match the
            filter and search criteria. Use this value to determine how many additional
            requests are required to get the full result.
          format: int32
          nullable: true
          type: integer
          x-order: 1
        paginationCookie:
          description: Specifies cookie for resuming search if pagination is being
            used.
          nullable: true
          type: string
          x-order: 2
      title: Common Search Indexed Objects Response Params.
      type: object
      x-cohesity-discriminator-details:
        propertyName: objectType
    CommonSourceConnectionRequestParams:
      description: Specifies the common set of parameters to test connectivity with
        a source.
      properties:
        environment:
          description: Specifies the environment type of the Protection Source.
          enum:
          - kCassandra
          - kHive
          - kHBase
          - kHdfs
          - kSQL
          - kOracle
          nullable: true
          type: string
          x-order: 0
        connectionId:
          description: Specifies the id of the connection from where this source is
            reachable. This should only be set for a source being registered by a
            tenant user.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      required:
      - environment
      title: Test common connection request parameters.
      type: object
      x-cohesity-discriminator-details:
        propertyName: environment
    CommonSourceRegistrationParams:
      allOf:
      - $ref: '#/components/schemas/Credentials'
      - $ref: '#/components/schemas/CommonSourceRegistrationParams_allOf'
      description: Specifies common parameters to register a source.
      title: Register source common request parameters.
    CommonSourceRegistrationReponseParams:
      description: Specifies the parameters which are common between all Protection
        Source registrations.
      properties:
        id:
          description: Source Registration ID. This can be used to retrieve, edit
            or delete the source registration.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 0
        sourceId:
          description: ID of top level source object discovered after the registration.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 1
        sourceInfo:
          $ref: '#/components/schemas/Object'
        environment:
          description: Specifies the environment type of the Protection Source.
          enum:
          - kVMware
          - kHyperV
          - kAcropolis
          - kKVM
          - kAWS
          - kGCP
          - kAzure
          - kPhysical
          - kPure
          - kNimble
          - kNetapp
          - kGenericNas
          - kIsilon
          - kFlashBlade
          - kGPFS
          - kElastifile
          - kO365
          - kHyperFlex
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          - kSQL
          - kOracle
          nullable: true
          type: string
          x-order: 3
        connectionId:
          description: Specifies the id of the connection from where this source is
            reachable. This should only be set for a source being registered by a
            tenant user. This field will be depricated in future. Use connections
            field.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        connections:
          description: Specfies the list of connections for the source.
          items:
            $ref: '#/components/schemas/ConnectionConfig'
          nullable: true
          type: array
          x-order: 5
      type: object
      x-cohesity-discriminator-details:
        propertyName: environment
    CommonSourceRegistrationRequestParams:
      description: Specifies the parameters which are common between all Protection
        Source registrations.
      properties:
        environment:
          description: Specifies the environment type of the Protection Source.
          enum:
          - kVMware
          - kHyperV
          - kAcropolis
          - kKVM
          - kAWS
          - kGCP
          - kAzure
          - kPhysical
          - kPure
          - kNimble
          - kNetapp
          - kGenericNas
          - kIsilon
          - kFlashBlade
          - kGPFS
          - kElastifile
          - kO365
          - kHyperFlex
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          - kSQL
          - kOracle
          nullable: true
          type: string
          x-order: 0
        isInternalEncrypted:
          description: Specifies if credentials are encrypted by internal key.
          nullable: true
          type: boolean
          x-order: 1
        encryptionKey:
          description: Specifies the key that user has encrypted the credential with.
          nullable: true
          type: string
          x-order: 2
        connectionId:
          description: Specifies the id of the connection from where this source is
            reachable. This should only be set for a source being registered by a
            tenant user.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        connections:
          description: Specfies the list of connections for the source.
          items:
            $ref: '#/components/schemas/ConnectionConfig'
          nullable: true
          type: array
          x-order: 4
      required:
      - environment
      type: object
      x-cohesity-discriminator-details:
        propertyName: environment
    CommonSqlAppSourceConfig:
      description: Specifies a common parameters used when restroring back to original
        or new source.
      properties:
        restoreTimeUsecs:
          description: Specifies the time in the past to which the Sql database needs
            to be restored. This allows for granular recovery of Sql databases. If
            this is not set, the Sql database will be restored from the full/incremental
            snapshot.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        secondaryDataFilesDirList:
          description: Specifies the secondary data filename pattern and corresponding
            direcories of the DB. Secondary data files are optional and are user defined.
            The recommended file extention for secondary files is ".ndf". If this
            option is specified and the destination folders do not exist they will
            be automatically created.
          items:
            $ref: '#/components/schemas/FilenamePatternToDirectory'
          nullable: true
          type: array
          x-order: 1
        withNoRecovery:
          description: Specifies the flag to bring DBs online or not after successful
            recovery. If this is passed as true, then it means DBs won't be brought
            online.
          nullable: true
          type: boolean
          x-order: 2
        keepCdc:
          description: Specifies whether to keep CDC (Change Data Capture) on recovered
            databases or not. If not passed, this is assumed to be true. If withNoRecovery
            is passed as true, then this field must not be set to true. Passing this
            field as true in this scenario will be a invalid request.
          nullable: true
          type: boolean
          x-order: 3
        overwritingPolicy:
          description: Specifies a policy to be used while recovering existing databases.
          enum:
          - FailIfExists
          - Overwrite
          nullable: true
          type: string
          x-order: 4
        multiStageRestoreOptions:
          $ref: '#/components/schemas/MultiStageRestoreOptions'
        nativeRecoveryWithClause:
          description: '''with_clause'' contains ''with clause'' to be used in native
            sql restore command. This is only applicable for database restore of native
            sql backup. Here user can specify multiple restore options. Example: ''WITH
            BUFFERCOUNT = 575, MAXTRANSFERSIZE = 2097152''.'
          nullable: true
          type: string
          x-order: 6
      title: Common Sql App Source Config.
      type: object
    CommonStandbyResourceParams:
      description: Specifies the params for standby resource.
      properties:
        recoveryPointObjectiveSecs:
          description: Specifies the recovery point objective time user expects for
            this standby resource.
          format: int64
          nullable: true
          type: integer
          x-order: 0
      title: Standby resoure Params.
      type: object
    CommonTargetConfiguration:
      description: Specifies common parameters required while setting up additional
        protection target configuration.
      properties:
        schedule:
          $ref: '#/components/schemas/TargetSchedule'
        retention:
          $ref: '#/components/schemas/Retention'
        copyOnRunSuccess:
          description: Specifies if Snapshots are copied from the first completely
            successful Protection Group Run or the first partially successful Protection
            Group Run occurring at the start of the replication schedule. <br> If
            true, Snapshots are copied from the first Protection Group Run occurring
            at the start of the replication schedule that was completely successful
            i.e. Snapshots for all the Objects in the Protection Group were successfully
            captured. <br> If false, Snapshots are copied from the first Protection
            Group Run occurring at the start of the replication schedule, even if
            first Protection Group Run was not completely successful i.e. Snapshots
            were not captured for all Objects in the Protection Group.
          nullable: true
          type: boolean
          x-order: 2
        configId:
          description: Specifies the unique identifier for the target getting added.
            This field need to be passed only when policies are being updated.
          nullable: true
          type: string
          x-order: 3
      required:
      - retention
      - schedule
      title: Common Target Configuration.
      type: object
    CommonTdmCloneSnapshotParams:
      description: Specifies the common properties of a clone snapshot.
      properties:
        label:
          description: Specifies the label for the snapshot.
          nullable: true
          type: string
          x-order: 0
      type: object
    CommonTdmCloneTaskParams:
      description: Specifies the common params for a TDM clone task.
      properties:
        environment:
          description: Specifies the environment of the TDM Clone task.
          enum:
          - kSQL
          - kOracle
          nullable: true
          type: string
          x-order: 0
        protectionGroupId:
          description: Specifies the ID of an existing protection group, which should
            start protecting this clone. Specifying this implies that the clone is
            eligible for automated snapshots based on the policy configuration. If
            this is specified, policyId should also be specified and protectionGroupName
            should not be specified.
          nullable: true
          type: string
          x-order: 1
        protectionGroupName:
          description: Specifies the name of a new protection group, which should
            be created to protect this clone. Specifying this implies that the clone
            is eligible for automated snapshots based on the policy configuration.
            If this is specified, policyId should also be specified and protectionGroupId
            should not be specified.
          nullable: true
          type: string
          x-order: 2
        policyId:
          description: Specifies the ID of the policy, which should be used to protect
            this clone. This is useful for automatic snapshots. This must be specified
            if either of protectionGroupId and protectionGroupName is specified.
          nullable: true
          type: string
          x-order: 3
      required:
      - environment
      type: object
    CommonTdmCloneTaskRequestParams:
      allOf:
      - $ref: '#/components/schemas/CommonTdmCloneTaskParams'
      - $ref: '#/components/schemas/CommonTdmCloneTaskRequestParams_allOf'
      description: Specifies the common request params for a TDM clone task.
    CommonTdmCloneTaskResponseParams:
      allOf:
      - $ref: '#/components/schemas/CommonTdmCloneTaskParams'
      - $ref: '#/components/schemas/CommonTdmCloneTaskResponseParams_allOf'
      description: Specifies the common response params for a TDM clone task.
    CommonTdmObjectResponseParams:
      description: Specifies the common parameters for a TDM object response.
      properties:
        id:
          description: Specifies the unique ID of the object.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the name of the object.
          nullable: true
          type: string
          x-order: 1
        status:
          description: Specifies the current status of the object.
          enum:
          - scheduled
          - inProgress
          - succeeded
          - failed
          - canceled
          nullable: true
          type: string
          x-order: 2
        environment:
          description: Specifies the environment of the object.
          enum:
          - kSQL
          - kOracle
          nullable: true
          type: string
          x-order: 3
        createdByUser:
          allOf:
          - $ref: '#/components/schemas/User'
          description: Specifies the user, who created the object.
          type: object
          x-order: 4
        lastAction:
          allOf:
          - $ref: '#/components/schemas/TdmObjectTimelineEvent'
          description: Specifies the details of the last action performed on this
            object.
          type: object
          x-order: 5
        sizeBytes:
          description: Specifies the size (in bytes) of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        parent:
          allOf:
          - $ref: '#/components/schemas/ObjectSummary'
          description: Specifies the parent of the object.
          type: object
          x-order: 7
      required:
      - environment
      - id
      type: object
      x-cohesity-discriminator-details:
        propertyName: environment
    CommonTdmObjectTimelineEventsResponseParams:
      description: Specifies the common parameters for the TDM object timeline events
        response.
      properties:
        id:
          description: Specifies the unique ID of the event.
          nullable: true
          type: string
          x-order: 0
        createdAt:
          description: Specifies the time (in usecs from epoch) at which the event
            was created.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        createdByUser:
          allOf:
          - $ref: '#/components/schemas/User'
          description: Specifies the user, who triggered the event.
          nullable: true
          type: object
          x-order: 2
        status:
          description: Specifies the current status of the event.
          enum:
          - scheduled
          - inProgress
          - succeeded
          - failed
          - canceled
          nullable: true
          type: string
          x-order: 3
        errorMessage:
          description: Specifies the error message if the event is in failed state.
          nullable: true
          type: string
          x-order: 4
        description:
          description: Specifies the description of the event, as provided by the
            user.
          nullable: true
          type: string
          x-order: 5
        eventGroupId:
          description: Specifies the ID of the group this event belongs to. Events
            with same group ID are considered to be a single timeline for the TDM
            object. Different group IDs mean different timelines for the TDM object.
          nullable: true
          type: string
          x-order: 6
        action:
          description: Specifies the action for the event.
          enum:
          - clone
          - teardown
          - refresh
          - snapshot
          - rewind
          nullable: true
          type: string
          x-order: 7
      required:
      - action
      - id
      type: object
      x-cohesity-discriminator-details:
        propertyName: action
    CommonTdmRefreshTaskResponseParams:
      description: Specifies the common response params for a TDM refresh task.
      properties:
        environment:
          description: Specifies the environment of the TDM refresh task.
          enum:
          - kOracle
          nullable: true
          type: string
          x-order: 0
        parent:
          allOf:
          - $ref: '#/components/schemas/ObjectSummary'
          description: Specifies the details of the parent object of the clone.
          nullable: true
          type: object
          x-order: 1
        target:
          allOf:
          - $ref: '#/components/schemas/ObjectSummary'
          description: Specifies the details of the target, where the clone is created.
          nullable: true
          type: object
          x-order: 2
        snapshot:
          allOf:
          - $ref: '#/components/schemas/ObjectSnapshot'
          description: Specifies the details of the snapshot used for refresh.
          nullable: true
          type: object
          x-order: 3
        view:
          allOf:
          - $ref: '#/components/schemas/ViewParams'
          description: Specifies the details of the view, which is used for the clone.
          nullable: true
          type: object
          x-order: 4
      required:
      - environment
      type: object
      x-cohesity-discriminator-details:
        propertyName: environment
    CommonTdmTaskRequestParams:
      description: Specifies the common parameters used in TDM Task Creation.
      properties:
        name:
          description: Specifies the name of the task.
          nullable: true
          type: string
          x-order: 0
        action:
          description: Specifies the TDM Task action.
          enum:
          - clone
          - teardown
          - refresh
          - snapshot
          - rewind
          nullable: true
          type: string
          x-order: 1
      required:
      - action
      type: object
      x-cohesity-discriminator-details:
        propertyName: action
    CommonTdmTaskResponseParams:
      description: Specifies the common parameters for a TDM task response.
      properties:
        id:
          description: Specifies the unique ID of the task.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the name of the task.
          nullable: true
          type: string
          x-order: 1
        startTimeUsecs:
          description: Specifies the time (in usecs from epoch) when the task was
            started.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        endTimeUsecs:
          description: Specifies the time (in usecs from epoch) when the task was
            completed.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        status:
          description: Specifies the current status of the task.
          enum:
          - scheduled
          - inProgress
          - succeeded
          - failed
          - canceled
          nullable: true
          type: string
          x-order: 4
        action:
          description: Specifies the TDM Task action.
          enum:
          - clone
          - teardown
          - refresh
          - snapshot
          - rewind
          nullable: true
          type: string
          x-order: 5
        createdByUser:
          allOf:
          - $ref: '#/components/schemas/User'
          description: Specifies the user, who created this task.
          type: object
          x-order: 6
        progressTaskId:
          description: Specifies the ID for tracking progress of this task.
          nullable: true
          type: string
          x-order: 7
      required:
      - action
      - id
      type: object
      x-cohesity-discriminator-details:
        propertyName: action
    CommonTieringAwsExternalTargetParams:
      allOf:
      - $ref: '#/components/schemas/CommonAwsExternalTargetParams'
      - $ref: '#/components/schemas/CommonTieringAwsExternalTargetParams_allOf'
      description: Specifies the common parameters which are specific to AWS related
        External Targets of tiering purpose type.
      title: AWS External Target Request Common Params for tiering purpose type.
    CommonTieringAzureExternalTargetParams:
      allOf:
      - $ref: '#/components/schemas/CommonAzureExternalTargetParams'
      - $ref: '#/components/schemas/CommonTieringAzureExternalTargetParams_allOf'
      description: Specifies the common parameters which are specific to Azure related
        External Targets of tiering purpose type.
      title: Azure External Target Request Common Params for tiering purpose type.
    CommonTieringExternalTargetParams:
      description: Specifies the common parameters which are specific to Tiering purpose
        type External Targets.
      properties:
        storageType:
          description: Specifies the Storage type of the External Target.
          enum:
          - Azure
          - Google
          - AWS
          - Oracle
          - S3Compatible
          nullable: true
          type: string
          x-order: 0
        encryptionLevel:
          description: Specifies the type of encryption for the Setting.
          enum:
          - None
          - Weak
          - Strong
          nullable: true
          type: string
          x-order: 1
      required:
      - encryptionLevel
      - storageType
      type: object
    CommonTieringPolicy:
      description: Specifies the common tiering params between uptiering and downtiering.
      properties:
        enableAuditLogging:
          default: false
          description: Specifies whether to audit log the file tiering activity.
          nullable: true
          type: boolean
          x-order: 0
        fileSize:
          $ref: '#/components/schemas/FileSizePolicy'
        filePath:
          $ref: '#/components/schemas/FileFilteringPolicy'
      type: object
    CommonVmwareObjectParams:
      description: Specifies the common object parameters required for VMware protection.
      properties:
        excludeDisks:
          description: Specifies a list of disks to exclude from being protected.
            This is only applicable to VM objects.
          items:
            $ref: '#/components/schemas/DiskInfo'
          type: array
          x-order: 0
        truncateExchangeLogs:
          description: Specifies whether or not to truncate MS Exchange logs while
            taking an app consistent snapshot of this object. This is only applicable
            to objects which have a registered MS Exchange app.
          nullable: true
          type: boolean
          x-order: 1
      type: object
    CommonVmwareProtectionParams:
      description: Specifies the common parameters which are specific to VMware related
        protection.
      properties:
        appConsistentSnapshot:
          description: Specifies whether or not to quiesce apps and the file system
            in order to take app consistent snapshots.
          nullable: true
          type: boolean
          x-order: 0
        fallbackToCrashConsistentSnapshot:
          description: Specifies whether or not to fallback to a crash consistent
            snapshot in the event that an app consistent snapshot fails. This parameter
            defaults to true and only changes the behavior of the operation if 'appConsistentSnapshot'
            is set to 'true'.
          nullable: true
          type: boolean
          x-order: 1
        skipPhysicalRDMDisks:
          description: Specifies whether or not to skip backing up physical RDM disks.
            Physical RDM disks cannot be backed up, so if you attempt to backup a
            VM with physical RDM disks and this value is set to 'false', then those
            VM backups will fail.
          nullable: true
          type: boolean
          x-order: 2
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        prePostScript:
          $ref: '#/components/schemas/PrePostScriptParams'
        leverageSanTransport:
          description: If this field is set to true, then the backup for the objects
            will be performed using dedicated storage area network (SAN) instead of
            LAN or managment network.
          nullable: true
          type: boolean
          x-order: 5
        enableNBDSSLFallback:
          description: If this field is set to true and SAN transport backup fails,
            then backup will fallback to use NBDSSL transport. This field only applies
            if 'leverageSanTransport' is set to true.
          nullable: true
          type: boolean
          x-order: 6
      type: object
    CompressionParams:
      description: Specifies parameters for compression.
      properties:
        type:
          description: Specifies copmpression type for a Storage Domain.
          enum:
          - None
          - Low
          - High
          nullable: true
          type: string
          x-order: 0
        inlineEnabled:
          description: Specifies whether inline compression is enabled. This field
            is appliciable only if inlineDeduplicationEnabled is set to true and compression
            is enabled.
          nullable: true
          type: boolean
          x-order: 1
      title: Compression Parameters
      type: object
    CompressionType:
      description: Specifies the compression type of the external target.
      properties:
        enum:
          description: Specifies the compression type of the external target.
          enum:
          - None
          - Low
          - High
          type: string
          x-order: 0
      title: Target Compression Type
      type: object
    ConfirmTenantParamsBody:
      description: Enable Helios management for a Tenant.
      example:
        name: name
        description: description
      properties:
        name:
          description: Name of the Tenant.
          nullable: true
          type: string
          x-order: 0
        description:
          description: Description about the Tenant.
          nullable: true
          type: string
          x-order: 1
      required:
      - name
      title: ConfirmTenantParamsBody
      type: object
    ConnectionBandwidthLimits:
      description: ConnectionBandwidthLimits represents the network bandwidth limits
        while uploading/downloading data to/from the SaaS Connection.
      properties:
        download:
          description: Specifies the max rate limit at which we download the data.
          items:
            $ref: '#/components/schemas/BandwidthLimit'
          nullable: true
          type: array
          x-order: 0
        upload:
          description: Specifies the max rate limit at which we upload the data.
          items:
            $ref: '#/components/schemas/BandwidthLimit'
          nullable: true
          type: array
          x-order: 1
        tenantId:
          description: The tenant Id corresponding to this request.
          nullable: true
          type: string
          x-order: 2
        timezone:
          description: 'Specifies a time zone for the specified time period. The time
            zone is defined in the following format: ''Area/Location'', for example:
            ''America/New_York''.'
          nullable: true
          type: string
          x-order: 3
      required:
      - tenantId
      title: Connection Bandwidth Limits
      type: object
    ConnectionConfig:
      description: Specifies a connection associated with the source.
      properties:
        connectionId:
          description: Specifies the id of the connection.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        entityId:
          description: Specifies the entity id of the source. The source can a non-root
            entity.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    ConnectionSubnet:
      description: Specify the subnet used in connection.
      properties:
        ip:
          description: Specifies the IP address part of the CIDR notation.
          nullable: true
          type: string
          x-order: 0
        maskBits:
          description: Specifies the number of set bits in the subnet mask.
          format: int32
          nullable: true
          type: integer
          x-order: 1
      title: Connection Subnet.
      type: object
    ConnectivityCheckResponseBody:
      description: Specify the results after checking connectivity on endpoints.
      properties:
        Nodes:
          description: Specifies the results of the nodes in the cluster.
          items:
            $ref: '#/components/schemas/NodeEndpointState'
          nullable: true
          type: array
          x-order: 0
      title: Connectivity Check Response.
      type: object
    ConnectivityStatus:
      description: Specifies the connectivity status from rigel to endpoints.
      properties:
        type:
          description: Specifies the connectivity status from rigel to endpoints.
          enum:
          - kStateUnknown
          - kStateOk
          - kStateFail
          - kStateInProgress
          type: string
          x-order: 0
      type: object
    ConnectorConnectionInfo:
      description: Specifies the connection info of a connector.
      properties:
        isActive:
          description: Specifies whether the connector is currently connected to cohesity
            server.
          nullable: true
          type: boolean
          x-order: 0
        message:
          description: Specifies possible error message when the connector is not
            able to connect.
          nullable: true
          type: string
          x-order: 1
        lastConnectedTimestampMsecs:
          description: Specifies last timestamp for which connection status was known.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      title: Connection Info.
      type: object
    ConnectorType:
      description: connector type.
      properties:
        type:
          description: connector type.
          type: string
          x-order: 0
          x-cohesity-enum: connector_type
      title: Connector Type.
      type: object
    ConstructMetaInfoParams:
      description: Params to construct meta info
      example:
        environment: kOracle
        oracleParams: '{}'
      properties:
        environment:
          description: Specifies the environment type of the Protection group
          enum:
          - kOracle
          nullable: true
          type: string
          x-order: 0
        oracleParams:
          allOf:
          - $ref: '#/components/schemas/ConstructRestoreMetaInfoOracleParams'
          - type: object
            x-nullable: true
          description: Oracle Params to construct meta info for alternate restore
            or clone.
          type: object
          x-order: 1
      required:
      - environment
      title: ConstructMetaInfoParams
      type: object
    ConstructMetaInfoResult:
      description: Result to store meta-info from an object snapshot and additional
        information.
      example:
        environment: kOracle
        oracleParams: '{}'
      properties:
        environment:
          description: Specifies the environment type of the Protection group
          enum:
          - kOracle
          nullable: true
          type: string
          x-order: 0
        oracleParams:
          allOf:
          - $ref: '#/components/schemas/OracleRestoreMetaInfoResult'
          - type: object
            x-nullable: true
          description: Specifies 3 Maps required to fill pfile text box.
          type: object
          x-order: 1
      title: ConstructMetaInfoResult
      type: object
    ConstructRestoreMetaInfoOracleParams:
      description: Params to fetch oracle restore meta info
      properties:
        dbName:
          description: Specifies the name of the Oracle database that we restore to.
          nullable: true
          type: string
          x-order: 0
        baseDir:
          description: Specifies the base directory of Oracle at destination.
          nullable: true
          type: string
          x-order: 1
        homeDir:
          description: Specifies the home directory of Oracle at destination.
          nullable: true
          type: string
          x-order: 2
        dbFileDestination:
          description: Specifies the location to put the database files(datafiles,
            logfiles etc.)
          nullable: true
          type: string
          x-order: 3
        isClone:
          description: Specifies whether operation is clone or not
          nullable: true
          type: boolean
          x-order: 4
        isGranularRestore:
          description: Specifies whether the operation is granular restore or not.
          nullable: true
          type: boolean
          x-order: 5
      required:
      - baseDir
      - dbName
      - homeDir
      - isClone
      title: ConstructRestoreMetaInfoOracleParams
      type: object
    ContainerDatabaseInfo:
      description: Object details about Oracle container database.
      properties:
        pluggableDatabaseList:
          description: Specifies the list of Pluggable databases within a container
            database.
          items:
            $ref: '#/components/schemas/PluggableDatabaseInfo'
          nullable: true
          type: array
          x-order: 0
      type: object
    ContinuousSnapshotParams:
      description: Specifies the source snapshots to be taken even if there is a pending
        run in a protection group.
      properties:
        isEnabled:
          description: Specifies whether source snapshots should be taken even if
            there is a pending run.
          nullable: true
          type: boolean
          x-order: 0
        maxAllowedSnapshots:
          description: Specifies the maximum number of source snapshots allowed for
            a given object in a protection group. This is only applicable if isContinuousSnapshottingEnabled
            is set to true.
          format: int32
          nullable: true
          type: integer
          x-order: 1
      required:
      - isEnabled
      title: Continuous Snapshot Params
      type: object
    CouchBaseOnPremSearchParams:
      allOf:
      - $ref: '#/components/schemas/CouchbaseSearchParams'
      - $ref: '#/components/schemas/OnPremSourceIds'
      description: Parameters required to search CouchBase on a cluster.
      title: CouchBaseOnPremSearchParams
    CouchbaseIndexedObject:
      allOf:
      - $ref: '#/components/schemas/CommonIndexedObjectParams'
      - $ref: '#/components/schemas/CouchbaseIndexedObject_allOf'
      description: Specifies a Couchbase indexed object.
      title: CouchbaseIndexedObject
    CouchbaseIndexedObjects:
      description: Specifies the indexed Couchbase objects.
      items:
        $ref: '#/components/schemas/CouchbaseIndexedObject'
      type: array
    CouchbaseParams:
      description: Specifies the recovery options specific to Couchbase environment.
      properties:
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverObjects
          type: string
          x-order: 0
        recoverCouchbaseParams:
          $ref: '#/components/schemas/RecoverCouchbaseParams'
      required:
      - recoverCouchbaseParams
      - recoveryAction
      title: Recover Couchbase environment params.
      type: object
    CouchbaseSearchParams:
      description: Specifies the parameters which are specific for searching Couchbase
        objects.
      properties:
        searchString:
          description: Specifies the search string to search the Couchbase Objects
          nullable: true
          type: string
          x-order: 0
        couchbaseObjectTypes:
          description: Specifies Couchbase object types be searched. For Couchbase
            it can only be set to 'CouchbaseBuckets'.
          items:
            enum:
            - CouchbaseBuckets
            type: string
          type: array
          x-order: 1
      required:
      - couchbaseObjectTypes
      - searchString
      type: object
    CouchbaseSourceRegistrationParams:
      allOf:
      - $ref: '#/components/schemas/Credentials'
      - $ref: '#/components/schemas/CouchbaseSourceRegistrationParams_allOf'
      description: Specifies parameters to register Couchbase source.
      title: Register Couchbase source request parameters.
    CreateAccessTokenRequestParams:
      description: Specifies the Cohesity credentials required for creating an access
        token.
      example:
        password: password
        domain: domain
        username: username
      properties:
        username:
          description: Specifies the login name of the Cohesity user.
          nullable: true
          type: string
          x-order: 0
        password:
          description: Specifies the password of the Cohesity user account.
          nullable: true
          type: string
          x-order: 1
        domain:
          description: Specifies the domain the user is logging in to. For a local
            user the domain is LOCAL. For LDAP/AD user, the domain will map to a LDAP
            connection string. A user is uniquely identified by a combination of username
            and domain. LOCAL is the default domain.
          nullable: true
          type: string
          x-order: 2
      required:
      - password
      - username
      type: object
    CreateActiveDirectoryRequest:
      allOf:
      - $ref: '#/components/schemas/CommonActiveDirectoryParams'
      - $ref: '#/components/schemas/CreateActiveDirectoryRequest_allOf'
      description: Specifies the request to create an Active Directory.
    CreateAntivirusServiceGroupParams:
      description: Specifies the parameters to create an Antivirus Service group.
      properties:
        name:
          description: Specifies the Antivirus Service group name.
          nullable: true
          type: string
          x-order: 0
        antivirusServices:
          description: Specifies a list of Antivirus Services for this group.
          items:
            $ref: '#/components/schemas/AntivirusService'
          minItems: 1
          nullable: true
          type: array
          x-order: 1
        enabled:
          description: Specifies whether the Antivirus Group is enabled.
          nullable: true
          type: boolean
          x-order: 2
        description:
          description: Specifies the description for the Antivirus Service group.
          nullable: true
          type: string
          x-order: 3
      required:
      - antivirusServices
      - enabled
      - name
      type: object
    CreateCadStorageDomainParam:
      description: Sepcifies the parameters to create a CAD Storage Domain.
      properties:
        externalTargetId:
          description: Specifies the external target id mapped to the CAD Storage
            Domain.
          format: int64
          nullable: true
          type: integer
          x-order: 0
      required:
      - externalTargetId
      type: object
    CreateClientcsrResponseBody:
      description: Specifies the response to creating the CSRs.
      example:
        csrClient: csrClient
        fileCsrClient: fileCsrClient
        publicKeyClient: publicKeyClient
        fileCsrServer: fileCsrServer
        csrServer: csrServer
        publicKeyServer: publicKeyServer
      properties:
        publicKeyServer:
          description: Specifies the public key generated for this CSR for the server.
          nullable: true
          type: string
          x-order: 0
        csrServer:
          description: Specifies the CSR generated for the server.
          nullable: true
          type: string
          x-order: 1
        publicKeyClient:
          description: Specifies the public key generated for this CSR for the client.
          nullable: true
          type: string
          x-order: 2
        csrClient:
          description: Specifies the CSR generated for the client.
          nullable: true
          type: string
          x-order: 3
        fileCsrServer:
          description: Specifies the path to CSR generated for the server
          nullable: true
          type: string
          x-order: 4
        fileCsrClient:
          description: Specifies the path to CSR generated for the client
          nullable: true
          type: string
          x-order: 5
      title: Create CSR response
      type: object
    CreateClusterParams:
      description: Specifies the parameters required to create cluster.
      example:
        proxyServerConfig:
          password: password
          port: 5
          ip: ip
          name: name
          username: username
        cloudClusterParams:
          nodeIps:
          - nodeIps
          - nodeIps
        name: name
        networkConfig:
          ntpServers:
          - ntpServers
          - ntpServers
          vipHostName: vipHostName
          dhcpNetworkConfig:
            subnetIp: subnetIp
            subnetMask: subnetMask
            dnsServers:
            - dnsServers
            - dnsServers
            gateway: gateway
          domainNames:
          - domainNames
          - domainNames
          ipPreference: Ipv4
          manualNetworkConfig:
            subnetIp: subnetIp
            subnetMask: subnetMask
            dnsServers:
            - dnsServers
            - dnsServers
            gateway: gateway
          useDhcp: true
        physicalClusterParams:
          nodes:
          - nodeIp: nodeIp
            nodeId: 0
          - nodeIp: nodeIp
            nodeId: 0
        type: Physical
        enableEncryption: true
        virtualClusterParams:
          nodes:
          - nodeIp: nodeIp
            nodeId: 0
          - nodeIp: nodeIp
            nodeId: 0
        rigelClusterParams:
          nodes:
          - nodeIp: nodeIp
            nodeId: 1
          - nodeIp: nodeIp
            nodeId: 1
          claimToken: claimToken
      properties:
        name:
          description: Specifies the name of the new cluster.
          nullable: true
          type: string
          x-order: 0
        type:
          description: Specifies the type of the new cluster.
          enum:
          - Physical
          - Virtual
          - Cloud
          - Rigel
          - Unknown
          - HeliosOnPremVM
          nullable: true
          type: string
          x-order: 1
        enableEncryption:
          description: Specifies whether or not to enable encryption. If encryption
            is enabled, all data on the Cluster will be encrypted. This can only be
            enabled at Cluster creation time and cannot be disabled later.
          nullable: true
          type: boolean
          x-order: 2
        networkConfig:
          $ref: '#/components/schemas/ClusterCreateNetworkConfig'
        proxyServerConfig:
          $ref: '#/components/schemas/ClusterProxyServerConfig'
        physicalClusterParams:
          $ref: '#/components/schemas/ClusterCreatePhysicalParams'
        virtualClusterParams:
          $ref: '#/components/schemas/ClusterCreateVirtualParams'
        cloudClusterParams:
          $ref: '#/components/schemas/ClusterCreateCloudParams'
        rigelClusterParams:
          $ref: '#/components/schemas/ClusterCreateRigelParams'
      required:
      - enableEncryption
      - name
      - networkConfig
      - type
      title: Create Cluster Request Parameters.
      type: object
    CreateCsrRequest:
      allOf:
      - $ref: '#/components/schemas/CommonCsrRequestParams'
      description: Specifies the request to create a CSR.
      title: Create CSR Request.
    CreateCsrResponseBody:
      allOf:
      - $ref: '#/components/schemas/CommonCsrResponseParams'
      description: Specifies the response to create a CSR.
      title: Create CSR response
    CreateEmailOtpRequestBody:
      description: Specifies user session request parameters
      example:
        password: password
        domain: domain
        username: username
      properties:
        username:
          description: Specifies the login name of the Cohesity user
          nullable: true
          type: string
          x-order: 0
        password:
          description: Specifies the password of the Cohesity user
          nullable: true
          type: string
          x-order: 1
        domain:
          description: Specifies the domain the user is logging in to. For a local
            user the domain is LOCAL. For LDAP/AD user, the domain will map to a LDAP
            connection string. A user is uniquely identified by a combination of username
            and domain. LOCAL is the default domain.
          nullable: true
          type: string
          x-order: 2
      type: object
    CreateGroupParams:
      description: Specifies the parameters to create a Group.
      properties:
        name:
          description: Specifies the Group name.
          nullable: true
          type: string
          x-order: 0
        domain:
          description: Specifies the Group domain.
          nullable: true
          type: string
          x-order: 1
        description:
          description: Specifies the description of the Group.
          nullable: true
          type: string
          x-order: 2
        roles:
          description: Specifies the Roles of the Group.
          items:
            type: string
          nullable: true
          type: array
          x-order: 3
        users:
          description: Specifies a list of Users who are member of this Group.
          items:
            type: string
          nullable: true
          type: array
          x-order: 4
        restricted:
          description: Specifies whether the Group is restricted.
          nullable: true
          type: boolean
          x-order: 5
        tenantIds:
          description: Specifies a list of tenant ids who can access this group.
          items:
            type: string
          nullable: true
          type: array
          x-order: 6
      required:
      - domain
      - name
      type: object
    CreateKeystoneRequest:
      allOf:
      - $ref: '#/components/schemas/Keystone'
      description: Specifies the parameters to create a Keystone configuration.
    CreateLdapParams:
      description: Specifies the parameters to create an LDAP.
      properties:
        name:
          description: Specifies the LDAP name.
          nullable: true
          type: string
          x-order: 0
        preferredLdapServers:
          description: Specifies a list of preferred LDAP servers. Servers should
            either be FQDNs or IP addresses.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
          x-order: 1
        baseDistinguishedName:
          description: Specifies the base distinguished name used as the base for
            LDAP search requests.
          nullable: true
          type: string
          x-order: 2
        authType:
          description: Specifies the LDAP authentication type.
          enum:
          - Anonymous
          - Simple
          type: string
          x-order: 3
        port:
          description: Specifies the LDAP server port.
          format: int32
          nullable: true
          type: integer
          x-order: 4
        simpleAuthParams:
          allOf:
          - $ref: '#/components/schemas/SimpleAuthParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters for LDAP with 'Simple' authentication
            type.
          type: object
          x-order: 5
        activeDirectoryId:
          description: Specifies the Active Directory id which is mapped to this LDAP.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        attributeCommonName:
          description: Specifies name of the LDAP attribute used for common name of
            an object.
          nullable: true
          type: string
          x-order: 7
        attributeGid:
          description: Specifies name of the attribute used to lookup unix GID of
            an LDAP user.
          nullable: true
          type: string
          x-order: 8
        attributeUid:
          description: Specifies name of the attribute used to lookup unix UID of
            an LDAP user.
          nullable: true
          type: string
          x-order: 9
        attributeMemberOf:
          description: Specifies name of the LDAP attribute used to lookup members
            of a group.
          nullable: true
          type: string
          x-order: 10
        attributeUsername:
          description: Specifies name of the LDAP attribute used to lookup a user
            by user ID.
          nullable: true
          type: string
          x-order: 11
        objectClassGroup:
          description: Specifies name of the LDAP group object class for user accounts.
          nullable: true
          type: string
          x-order: 12
        objectClassUser:
          description: Specifies name of the LDAP user object class for user accounts.
          nullable: true
          type: string
          x-order: 13
      required:
      - authType
      - baseDistinguishedName
      - name
      - preferredLdapServers
      type: object
    CreateMcmClaimRequest:
      description: Specifies the request params to claim an entity to Helios.
      properties:
        entityType:
          description: Specfies the type of entity.
          enum:
          - Rigel
          - Cluster
          type: string
          x-order: 0
        rigelParams:
          $ref: '#/components/schemas/McmRigelClaimRequestParams'
        clusterParams:
          $ref: '#/components/schemas/McmClusterClaimRequestParams'
      required:
      - entityType
      title: Request params to claim an entity to Helios.
      type: object
    CreateMcmClaimResponseBody:
      description: Specifies the response of claiming an entity to Helios.
      properties:
        entityType:
          description: Specfies the type of entity.
          enum:
          - Rigel
          - Cluster
          nullable: true
          type: string
          x-order: 0
        rigelParams:
          $ref: '#/components/schemas/McmRigelClaimResponseParams'
        clusterParams:
          $ref: '#/components/schemas/McmClusterClaimResponseParams'
      title: Response of claiming an entity to Helios.
      type: object
    CreateMcmSignupRequest:
      allOf:
      - $ref: '#/components/schemas/CommonMcmSignupParams'
      - $ref: '#/components/schemas/CreateMcmSignupRequest_allOf'
      description: Specifies the request params to create MCM signup request.
      title: Create MCM Signup Request.
    CreateOdpRemoteClusterParams:
      allOf:
      - $ref: '#/components/schemas/CreateOdpRemoteClusterParams_allOf'
      - $ref: '#/components/schemas/UpdateOdpRemoteClusterParams'
      description: Specifies the parameters to create an ODP Remote Cluster config.
    CreateOrUpdateBifrostConnectionRequest:
      description: Specify the params to create or update a connection of Bifrost.
      properties:
        tenantId:
          description: Specifies the id of the tenant which the connection belongs
            to.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the name of the connection.
          nullable: true
          type: string
          x-order: 1
        subnet:
          $ref: '#/components/schemas/ConnectionSubnet'
        certificateVersion:
          description: Specifies the version of the connection's certificate. The
            version is used to revoke/renew connection's certificates.
          format: int64
          nullable: true
          type: integer
          x-order: 3
      required:
      - subnet
      - tenantId
      title: Create Or Update Bifrost Connection Request.
      type: object
    CreateOrUpdateBifrostConnectorRequest:
      description: Specify the params to create or update a Bifrost connector.
      properties:
        connectionId:
          description: Specifies the Id of the connection which this connector belongs
            to.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        tenantId:
          description: Specifies the id of the tenant which the connector belongs
            to.
          nullable: true
          type: string
          x-order: 1
        name:
          description: Specifies the name of the connector.
          nullable: true
          type: string
          x-order: 2
      required:
      - connectionId
      - name
      - tenantId
      title: Create Or Update Bifrost connector Request.
      type: object
    CreateOrUpdateDataTieringTaskRequest:
      allOf:
      - $ref: '#/components/schemas/CommonDataTieringTaskParams'
      - $ref: '#/components/schemas/CreateOrUpdateDataTieringTaskRequest_allOf'
      description: Specifies the request to create or update a data tiering task.
      title: Create Or Update data tiering task Request.
    CreateOrUpdateIdpRequest:
      allOf:
      - $ref: '#/components/schemas/CommonIdpParams'
      description: Specifies the request to create or update an Identity Provider
        Configuration.
      title: Create Or Update IDP Request.
    CreateOrUpdateProtectionGroupRequest:
      allOf:
      - $ref: '#/components/schemas/CommonProtectionGroupRequestParams'
      - $ref: '#/components/schemas/CreateOrUpdateProtectionGroupRequest_allOf'
      description: Specifies the request to create or update a Protection Group.
      title: Create Or Update Protection Group Request.
    CreateProtectedObjectsRequest:
      allOf:
      - $ref: '#/components/schemas/CreateProtectedObjectsRequest_allOf'
      - $ref: '#/components/schemas/CommonObjectProtectParams'
      description: Specifies the request for creating an object backup.
    CreateProtectedObjectsResponse:
      description: Specifies the protected objects response.
      example:
        protectedObjects:
        - null
        - null
      properties:
        protectedObjects:
          description: Specifies the list of protected objects.
          items:
            $ref: '#/components/schemas/ObjectProtectionSummary'
          nullable: true
          type: array
          x-order: 0
      type: object
    CreateProtectionGroupRunRequest:
      description: Specifies the request to create a protection run. On success, the
        system will accept the request and return the Protection Group id for which
        the run is supposed to start. The actual run may start at a later time if
        the system is busy. Consumers must query the Protection Group to see the run.
      example:
        runType: kRegular
        objects:
        - physicalParams:
            metadataFilePath: metadataFilePath
          appIds:
          - 6
          - 6
          id: 0
        - physicalParams:
            metadataFilePath: metadataFilePath
          appIds:
          - 6
          - 6
          id: 0
        targetsConfig:
          usePolicyDefaults: false
          replications:
          - id: 6
            retention:
              duration: 1
              unit: Days
              dataLockConfig:
                mode: Compliance
                duration: 1
                unit: Days
          - id: 6
            retention:
              duration: 1
              unit: Days
              dataLockConfig:
                mode: Compliance
                duration: 1
                unit: Days
          archivals:
          - id: 7
            archivalTargetType: Tape
            retention:
              duration: 1
              unit: Days
              dataLockConfig:
                mode: Compliance
                duration: 1
                unit: Days
          - id: 7
            archivalTargetType: Tape
            retention:
              duration: 1
              unit: Days
              dataLockConfig:
                mode: Compliance
                duration: 1
                unit: Days
      properties:
        runType:
          description: Type of protection run. 'kRegular' indicates an incremental
            (CBT) backup. Incremental backups utilizing CBT (if supported) are captured
            of the target protection objects. The first run of a kRegular schedule
            captures all the blocks. 'kFull' indicates a full (no CBT) backup. A complete
            backup (all blocks) of the target protection objects are always captured
            and Change Block Tracking (CBT) is not utilized. 'kLog' indicates a Database
            Log backup. Capture the database transaction logs to allow rolling back
            to a specific point in time. 'kSystem' indicates system volume backup.
            It produces an image for bare metal recovery.
          enum:
          - kRegular
          - kFull
          - kLog
          - kSystem
          - kHydrateCDP
          nullable: true
          type: string
          x-order: 0
        objects:
          description: Specifies the list of objects to be protected by this Protection
            Group run. These can be leaf objects or non-leaf objects in the protection
            hierarchy. This must be specified only if a subset of objects from the
            Protection Groups needs to be protected.
          items:
            $ref: '#/components/schemas/RunObject'
          type: array
          x-order: 1
        targetsConfig:
          $ref: '#/components/schemas/RunTargetsConfiguration'
      required:
      - runType
      type: object
    CreateProtectionGroupRunResponseBody:
      description: Specifies the response for create a protection run. On success,
        the system will accept the request and return the Protection Group id for
        which the run is supposed to start. The actual run may start at a later time
        if the system is busy. Consumers must query the Protection Group to see the
        run.
      example:
        protectionGroupId: protectionGroupId
      properties:
        protectionGroupId:
          description: Specifies id of the Protection Group which must be polled for
            seeing the new run.
          nullable: true
          type: string
          x-order: 0
      title: Create protection run response.
      type: object
    CreateRecoveryRequest:
      allOf:
      - $ref: '#/components/schemas/CommonRecoveryRequestParams'
      - $ref: '#/components/schemas/CreateRecoveryRequest_allOf'
      description: Specifies the request parameters to create a Recovery.
      title: Create Recovery request params.
    CreateRemoteDiskStatus:
      description: Specifies the status of creating remote disk.
      example:
        mountPath: mountPath
        tier: PCIeSSD
        message: message
        nodeId: 0
        status: Succeeded
      properties:
        mountPath:
          description: Specifies the NFS mount path of the remote disk.
          nullable: true
          type: string
          x-order: 0
        nodeId:
          description: Specifies the node id of the disk. If not specified, the disk
            will be evenly distributed across all the nodes.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        tier:
          description: Specifies the tier of the disk
          enum:
          - PCIeSSD
          - SATA-SSD
          - SATA-HDD
          - CLOUD
          nullable: true
          type: string
          x-order: 2
        status:
          description: Specifies the creating status of this disk.
          enum:
          - Succeeded
          - Failed
          nullable: true
          type: string
          x-order: 3
        message:
          description: Specifies the error message when creating remote disk fails.
          nullable: true
          type: string
          x-order: 4
      type: object
    CreateRigelConnectionRequest:
      allOf:
      - $ref: '#/components/schemas/CommonCreateOrUpdateRigelConnectionRequest'
      - $ref: '#/components/schemas/CreateRigelConnectionRequest_allOf'
      description: Specify the params to create a connection of Rigel.
      title: Create Rigel Connection Request.
    CreateRigelConnectorRequest:
      allOf:
      - $ref: '#/components/schemas/CommonCreateOrUpdateRigelConnectorRequest'
      - $ref: '#/components/schemas/CreateRigelConnectorRequest_allOf'
      description: Specify the params to create a Rigel connector.
      title: Create Rigel connector Request.
    CreateRoleParams:
      allOf:
      - $ref: '#/components/schemas/CreateRoleParams_allOf'
      - $ref: '#/components/schemas/UpdateRoleParams'
      description: Specifies the parameters to create a Role.
    CreateStorageDomainParam:
      allOf:
      - $ref: '#/components/schemas/StorageDomain'
      description: Specifies the parameter to create a Storage Domain.
    CreateTdmTaskRequest:
      allOf:
      - $ref: '#/components/schemas/CommonTdmTaskRequestParams'
      - $ref: '#/components/schemas/CreateTdmTaskRequest_allOf'
      description: Specifies the request parameters to create a TDM task.
    CreateTenantParams:
      description: Parameters to be specified for creating a tenant.
      example:
        tenantIdSuffix: tenantIdSuffix
        name: name
        description: description
      properties:
        name:
          description: Name of the Tenant.
          nullable: true
          type: string
          x-order: 0
        tenantIdSuffix:
          description: |-
            This suffix is used by cohesity to generate the actual tenant Id by
            appending the parent's tenant id to it.
          maxLength: 10
          nullable: true
          pattern: ^([a-zA-Z0-9]*)$
          type: string
          x-order: 1
        description:
          description: Description about the tenant
          nullable: true
          type: string
          x-order: 2
      required:
      - name
      - tenantIdSuffix
      title: CreateTenantParams
      type: object
    CreateTenantParamsOthers:
      allOf:
      - $ref: '#/components/schemas/CreateTenantParams'
      - $ref: '#/components/schemas/CreateTenantParamsOthers_allOf'
      - nullable: true
        type: object
        x-nullable: true
    CreateTotpKeyRequestBody:
      description: Specifies create TOTP key request parameters.
      example:
        totpKeyName: totpKeyName
      properties:
        totpKeyName:
          description: Specifies the key name.
          nullable: true
          type: string
          x-order: 0
      type: object
    CreateUpgradeTaskRequest:
      description: Specifies the params to create a schedule based agent upgrade task.
      example:
        scheduleTimeUsecs: 6
        agentIDs:
        - 0
        - 0
        retryTaskId: 5
        name: name
        description: description
        scheduleEndTimeUsecs: 1
      properties:
        name:
          description: Specifies the name of the task.
          nullable: true
          type: string
          x-order: 0
        description:
          description: Specifies the description of the task.
          nullable: true
          type: string
          x-order: 1
        agentIDs:
          description: Specifies agent IDs to be upgraded in the task.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 2
        scheduleTimeUsecs:
          description: Specifies the start time of the task specified by the user
            as a Unix epoch Timestamp (in microseconds). If no schedule is specified,
            the agents will be upgraded immediately.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        scheduleEndTimeUsecs:
          description: Specifies the time before which the upgrade task should start
            execution as a Unix epoch Timestamp (in microseconds). If this is not
            specified the task will start anytime after scheduleTimeUsecs.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        retryTaskId:
          description: Specifies the task that needs to be retried.
          format: int64
          nullable: true
          type: integer
          x-order: 5
      title: Create agent upgrade task params
      type: object
    CreateUserParams:
      description: Specifies the parameters to create a User.
      properties:
        username:
          description: Specifies the username.
          nullable: true
          type: string
          x-order: 0
        domain:
          description: Specifies the domain of the User.
          nullable: true
          type: string
          x-order: 1
        password:
          description: Specifies the password of the User.
          nullable: true
          type: string
          x-order: 2
        description:
          description: Specifies the description of the User.
          nullable: true
          type: string
          x-order: 3
        email:
          description: Specifies the email address of the User.
          nullable: true
          type: string
          x-order: 4
        roles:
          description: Specifies the Roles of the User.
          items:
            type: string
          nullable: true
          type: array
          x-order: 5
        primaryGroup:
          description: Specifies the primary group of the User. Primary group is used
            for file access.
          nullable: true
          type: string
          x-order: 6
        otherGroups:
          description: Specifies other groups of the User.
          items:
            type: string
          nullable: true
          type: array
          x-order: 7
        restricted:
          description: Specifies whether the User is restricted.
          nullable: true
          type: boolean
          x-order: 8
        effectiveTimeMsecs:
          description: Specifies the epoch time in milliseconds when the user is effective.
          format: int64
          nullable: true
          type: integer
          x-order: 9
        expiredTimeMsecs:
          description: Specifies the epoch time in milliseconds when the user is expired.
          format: int64
          nullable: true
          type: integer
          x-order: 10
        locked:
          description: Specifies whether the User is locked.
          nullable: true
          type: boolean
          x-order: 11
      required:
      - domain
      - password
      - username
      type: object
    CreateUserSessionRequestParams:
      description: Specifies user session request parameters
      example:
        privateKey: privateKey
        password: password
        domain: domain
        certificate: certificate
        otpCode: otpCode
        otpType: email
        username: username
      properties:
        username:
          description: Specifies the login name of the Cohesity user
          nullable: true
          type: string
          x-order: 0
        password:
          description: Specifies the password of the Cohesity user
          nullable: true
          type: string
          x-order: 1
        domain:
          description: Specifies the domain the user is logging in to. For a local
            user the domain is LOCAL. For LDAP/AD user, the domain will map to a LDAP
            connection string. A user is uniquely identified by a combination of username
            and domain. LOCAL is the default domain.
          nullable: true
          type: string
          x-order: 2
        certificate:
          description: Specifies the certificate for cert based authentication.
          nullable: true
          type: string
          x-order: 3
        privateKey:
          description: Specifies the private key for cert based authentication.
          nullable: true
          type: string
          x-order: 4
        otpCode:
          description: Specifies OTP code for MFA verification.
          nullable: true
          type: string
          x-order: 5
        otpType:
          description: Specifies OTP Type for MFA verification.
          enum:
          - email
          - totp
          nullable: true
          type: string
          x-order: 6
      type: object
    CreateView:
      allOf:
      - $ref: '#/components/schemas/CreateView_allOf'
      - $ref: '#/components/schemas/UpdateViewParam'
      description: Specifies the information required for creating a new View w/o
        required fields.
      title: Create View.
    CreateViewFailoverRequest:
      description: Specifies the request parameters to create a view failover task.
      example:
        unplannedFailoverParams: '{}'
        type: Planned
        plannedFailoverParams: '{}'
      properties:
        type:
          description: Specifies the failover type.<br> 'Planned' indicates this is
            a planned failover.<br> 'Unplanned' indicates this is an unplanned failover,
            which is used when source cluster is down.
          enum:
          - Planned
          - Unplanned
          nullable: true
          type: string
          x-order: 0
        plannedFailoverParams:
          allOf:
          - $ref: '#/components/schemas/PlannedFailoverParams'
          - type: object
            x-nullable: true
          description: Specifies parameters to create a planned failover.
          type: object
          x-order: 1
        unplannedFailoverParams:
          allOf:
          - $ref: '#/components/schemas/UnplannedFailoverParams'
          - type: object
            x-nullable: true
          description: Specifies parameters to create an unplanned failover.
          type: object
          x-order: 2
      required:
      - type
      type: object
    CreateViewRequest:
      allOf:
      - $ref: '#/components/schemas/CreateView'
      - type: object
      description: Specifies the information required for creating a new View.
      title: Create View Request.
    CreationInfo:
      description: Specifies the information about the creation of the protection
        group or recovery.
      properties:
        userName:
          description: Specifies the name of the user who created the protection group
            or recovery.
          nullable: true
          type: string
          x-order: 0
      title: Creation Info
      type: object
    Credentials:
      description: Specifies the object to hold username and password.
      properties:
        username:
          description: Specifies the username to access target entity.
          type: string
          x-order: 0
        password:
          description: Specifies the password to access target entity.
          type: string
          x-order: 1
      required:
      - password
      - username
      title: Credentials
      type: object
    CsrKeyType:
      description: Csr Key Type
      properties:
        csrKeyType:
          description: Specifies the csr key type.
          enum:
          - rsa
          - ecdsa
          type: string
          x-order: 0
      title: CsrKeyType
      type: object
    CsrServiceName:
      description: Csr Service Name
      properties:
        csrServiceName:
          description: Specifies the csr service name.
          enum:
          - iris
          type: string
          x-order: 0
      title: CsrServiceName
      type: object
    DMaaSInfo:
      description: Specifies the DMaaS info about the cluster.
      example:
        isDmaas: true
      properties:
        isDmaas:
          description: Specifies whether the cluster is a DMaaS cluster.
          nullable: true
          type: boolean
          x-order: 0
      required:
      - isDmaas
      type: object
    DSESolrInfo:
      description: Contains details about DSE Solr.
      properties:
        solrNodes:
          description: Solr node IP Addresses
          items:
            type: string
          type: array
          x-order: 0
        solrPort:
          description: Solr node Port.
          format: int32
          nullable: true
          type: integer
          x-order: 1
      required:
      - solrNodes
      - solrPort
      title: Authentication details for DSE solr.
      type: object
    DataLockConfig:
      description: Specifies WORM retention type for the snapshots. When a WORM retention
        type is specified, the snapshots of the Protection Groups using this policy
        will be kept for the last N days as specified in the duration of the datalock.
        During that time, the snapshots cannot be deleted.
      example:
        mode: Compliance
        duration: 1
        unit: Days
      properties:
        mode:
          description: "Specifies the type of WORM retention type. \n'Compliance'\
            \ implies WORM retention is set for compliance reason. \n'Administrative'\
            \ implies WORM retention is set for administrative purposes."
          enum:
          - Compliance
          - Administrative
          nullable: true
          type: string
          x-order: 0
        unit:
          description: 'Specificies the Retention Unit of a dataLock measured in days,
            months or years. <br> If unit is ''Months'', then number specified in
            duration is multiplied to 30. <br> Example: If duration is 4 and unit
            is ''Months'' then number of retention days will be 30 * 4 = 120 days.
            <br> If unit is ''Years'', then number specified in duration is multiplied
            to 365. <br> If duration is 2 and unit is ''Months'' then number of retention
            days will be 365 * 2 = 730 days.'
          enum:
          - Days
          - Weeks
          - Months
          - Years
          nullable: true
          type: string
          x-order: 1
        duration:
          description: Specifies the duration for a dataLock. <br> Example. If duration
            is 7 and unit is Months, the dataLock is enabled for last 7 * 30 = 210
            days of the backup.
          format: int64
          minimum: 1
          nullable: true
          type: integer
          x-order: 2
      required:
      - duration
      - mode
      - unit
      type: object
    DataLockConstraints:
      description: Specifies the dataLock constraints for local or target snapshot.
      properties:
        mode:
          description: Specifies the type of WORM retention type. <br>'Compliance'
            implies WORM retention is set for compliance reason. <br>'Administrative'
            implies WORM retention is set for administrative purposes.
          enum:
          - Compliance
          - Administrative
          nullable: true
          type: string
          x-order: 0
        expiryTimeUsecs:
          description: Specifies the expiry time of attempt in Unix epoch Timestamp
            (in microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 1
      title: DataLock Constraints
      type: object
    DataTieringAnalysisGroup:
      allOf:
      - $ref: '#/components/schemas/CommonDataTieringAnalysisGroupParams'
      - $ref: '#/components/schemas/DataTieringAnalysisGroup_allOf'
      description: Specifies the data tiering analysis group.
    DataTieringAnalysisGroupRun:
      description: Specifies the data tiering analysis group run.
      properties:
        id:
          description: Specifies the ID of the data tiering analysis group run.
          nullable: true
          type: string
          x-order: 0
        objects:
          description: |-
            Specifies the objects details analyzed during data tiering analysis
            group run.
          items:
            $ref: '#/components/schemas/DataTieringObjectInfo'
          nullable: true
          type: array
          x-order: 1
        startTimeUsecs:
          description: Specifies the start time of analysis run in Unix epoch Timestamp(in
            microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 2
        endTimeUsecs:
          description: Specifies the end time of analysis run in Unix epoch Timestamp(in
            microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 3
        analysisInfo:
          $ref: '#/components/schemas/DataTieringAnalysisInfo'
      type: object
    DataTieringAnalysisGroups:
      description: Specifies the data tiering analysis groups.
      items:
        $ref: '#/components/schemas/DataTieringAnalysisGroup'
      nullable: true
      type: array
      x-nullable: true
    DataTieringAnalysisInfo:
      description: Specifies the data tiering analysis details.
      properties:
        tagsInfo:
          description: Array of Tag objects.
          items:
            $ref: '#/components/schemas/DataTieringTagObject'
          nullable: true
          type: array
          x-order: 0
        progress:
          $ref: '#/components/schemas/ProgressSummary'
        status:
          description: |-
            Status of the analysis run.
            'Running' indicates that the run is still running.
            'Canceled' indicates that the run has been canceled.
            'Canceling' indicates that the run is in the process of being
             canceled.
            'Failed' indicates that the run has failed.
            'Missed' indicates that the run was unable to take place at the
             scheduled time because the previous run was still happening.
            'Succeeded' indicates that the run has finished successfully.
            'SucceededWithWarning' indicates that the run finished
             successfully, but there were some warning messages.
            'OnHold' indicates that the run has On hold.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          nullable: true
          type: string
          x-order: 2
        message:
          description: message from the last analysis run stating the error message
            in case of error in analysis run or warning message if the run finished
            successfully, but there were some warning messages.
          nullable: true
          type: string
          x-order: 3
      type: object
    DataTieringAnalysisRunRequest:
      description: Specifies the request to run analysis group once.
      example:
        shares:
        - shareId: 0
        - shareId: 0
      properties:
        shares:
          description: Specifies the list of shares to analyse.
          items:
            $ref: '#/components/schemas/DataTieringAnalysisShareInfo'
          nullable: true
          type: array
          x-order: 0
      type: object
    DataTieringAnalysisShareInfo:
      description: Specifies the info for a particular share.
      example:
        shareId: 0
      properties:
        shareId:
          description: Specifies the id of the share.
          format: int64
          nullable: true
          type: integer
          x-order: 0
      required:
      - shareId
      type: object
    DataTieringObjectAnalysisInfo:
      description: Specifies the data tiering object analysis details.
      properties:
        tagsInfo:
          description: Array of Tag objects.
          items:
            $ref: '#/components/schemas/DataTieringTagObject'
          nullable: true
          type: array
          x-order: 0
        status:
          description: |-
            Status of the analysis run.
            'Running' indicates that the run is still running.
            'Canceled' indicates that the run has been canceled.
            'Canceling' indicates that the run is in the process of being
             canceled.
            'Failed' indicates that the run has failed.
            'Missed' indicates that the run was unable to take place at the
             scheduled time because the previous run was still happening.
            'Succeeded' indicates that the run has finished successfully.
            'SucceededWithWarning' indicates that the run finished
             successfully, but there were some warning messages.
            'OnHold' indicates that the run has On hold.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          nullable: true
          type: string
          x-order: 1
        message:
          description: |-
            A message about the error if encountered while performing data
            tiering analysis.
          nullable: true
          type: string
          x-order: 2
        stats:
          description: Specifies the source share analysis stats.
          items:
            $ref: '#/components/schemas/DataTieringShareStats'
          nullable: true
          type: array
          x-order: 3
      type: object
    DataTieringObjectInfo:
      allOf:
      - $ref: '#/components/schemas/ProtectionObjectInput'
      - $ref: '#/components/schemas/DataTieringObjectInfo_allOf'
      description: Specifies the data tiering analysis group run object details.
    DataTieringSchedule:
      description: Specifies the data tiering schedule.
      properties:
        unit:
          description: Specifies how often to migrate data from source to target
          enum:
          - Days
          - Weeks
          - Months
          nullable: true
          type: string
          x-order: 0
        daySchedule:
          $ref: '#/components/schemas/DaySchedule'
        weekSchedule:
          $ref: '#/components/schemas/WeekSchedule'
        monthSchedule:
          $ref: '#/components/schemas/MonthSchedule'
        startTime:
          $ref: '#/components/schemas/TimeOfDay'
      type: object
    DataTieringShareInfo:
      description: Specifies the info for a particular share.
      example:
        shareId: 0
        uptierPath: uptierPath
      properties:
        shareId:
          description: Specifies the id of the share.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        uptierPath:
          description: |-
            Only applicable for uptiering tasks.
            Ignore the uptiering policy and uptier the directory pointed by the
            'uptierPath'. If path is '/', then uptier everything

            This will override the global uptier path.
          nullable: true
          type: string
          x-order: 1
      required:
      - shareId
      type: object
    DataTieringShareStats:
      description: Specifies the source shares analysis stats.
      properties:
        fileTypeTag:
          description: Specifies the file type bucket.
          nullable: true
          type: string
          x-order: 0
        fileSizeTag:
          description: Specifies the file size bucket.
          nullable: true
          type: string
          x-order: 1
        accessTimeTag:
          description: Specifies the access time bucket.
          nullable: true
          type: string
          x-order: 2
        modTimeTag:
          description: Specifies the modification time bucket.
          nullable: true
          type: string
          x-order: 3
        fileCount:
          description: Specifies the file count.
          format: uint64
          nullable: true
          type: integer
          x-order: 4
        totalSize:
          description: Specifies the total count.
          format: uint64
          nullable: true
          type: integer
          x-order: 5
        id:
          description: Specifies the unique identifer for stat.
          format: uint64
          nullable: true
          type: integer
          x-order: 6
      type: object
    DataTieringSource:
      description: Specifies the source data tiering details.
      example:
        environment: kGenericNas
        isilonParams:
          sourceId: 1
          objects:
          - name: name
            id: 0
          - name: name
            id: 0
        genericNasParams:
          sourceId: 6
          objects:
          - name: name
            id: 0
          - name: name
            id: 0
        netappParams:
          sourceId: 5
          objects:
          - name: name
            id: 0
          - name: name
            id: 0
      properties:
        environment:
          description: Specifies the environment type of the data tiering source.
          enum:
          - kGenericNas
          - kIsilon
          - kNetapp
          nullable: true
          type: string
          x-order: 0
        genericNasParams:
          $ref: '#/components/schemas/GenericNasDataTieringParams'
        isilonParams:
          $ref: '#/components/schemas/IsilonDataTieringParams'
        netappParams:
          $ref: '#/components/schemas/NetappDataTieringParams'
      type: object
    DataTieringTag:
      example:
        label: label
        value: value
      properties:
        label:
          description: Specifies label of tag.
          nullable: true
          type: string
          x-order: 0
        value:
          description: Specifies value of tag.
          nullable: true
          type: string
          x-order: 1
      title: Specifies label and value of tags.
      type: object
    DataTieringTagConfig:
      description: Array of data tiering tag objects.
      example:
        tagsInfo:
        - type: type
          tags:
          - label: label
            value: value
          - label: label
            value: value
        - type: type
          tags:
          - label: label
            value: value
          - label: label
            value: value
        id: id
      properties:
        id:
          description: Specifies the ID of the data tiering analysis group.
          nullable: true
          readOnly: true
          type: string
          x-order: 0
        tagsInfo:
          description: Array of Tag objects.
          items:
            $ref: '#/components/schemas/DataTieringTagObject'
          nullable: true
          type: array
          x-order: 1
      required:
      - tagsInfo
      type: object
    DataTieringTagObject:
      example:
        type: type
        tags:
        - label: label
          value: value
        - label: label
          value: value
      properties:
        type:
          description: Specifies type of tag.
          nullable: true
          type: string
          x-order: 0
        tags:
          description: Array of tag label and value.
          items:
            $ref: '#/components/schemas/DataTieringTag'
          nullable: true
          type: array
          x-order: 1
      title: Specifies the tag information of type and array of (label, value).
      type: object
    DataTieringTarget:
      description: Specifies the target data tiering details.
      nullable: true
      properties:
        viewName:
          description: Specifies the view name.
          nullable: true
          type: string
          x-order: 0
        mountPath:
          description: Specifies the mount path inside the view.
          nullable: true
          type: string
          x-order: 1
        storageDomainId:
          description: Specifies the Storage Domain ID where the view will be kept.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      required:
      - storageDomainId
      - viewName
      type: object
      x-nullable: true
    DataTieringTask:
      allOf:
      - $ref: '#/components/schemas/CommonDataTieringTaskResponse'
      - $ref: '#/components/schemas/CreateOrUpdateDataTieringTaskRequest_allOf'
      description: Specifies the data tiering task details.
    DataTieringTaskRun:
      description: Specifies the data tiering task run.
      properties:
        id:
          description: Specifies the id of the data tiering task run.
          nullable: true
          type: string
          x-order: 0
        startTimeUsecs:
          description: Specifies the start time of task run in Unix epoch Timestamp(in
            microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 1
        endTimeUsecs:
          description: Specifies the end time of task run in Unix epoch Timestamp(in
            microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 2
        tieringInfo:
          $ref: '#/components/schemas/TieringInfo'
      type: object
    DataTieringTaskRunRequest:
      description: Specifies the request to run tiering task once.
      example:
        shares:
        - shareId: 0
          uptierPath: uptierPath
        - shareId: 0
          uptierPath: uptierPath
        uptierPath: uptierPath
      properties:
        uptierPath:
          description: |-
            Only applicable for uptiering tasks.
            Ignore the uptiering policy and uptier the directory pointed by the
            'uptierPath'. If path is '/', then uptier everything.

            This is a global property which will be applied to all shares by default.
            This can be overriden by specifying uptierPath for each share.
          nullable: true
          type: string
          x-order: 0
        shares:
          description: Specifies the list of shares to tier.
          items:
            $ref: '#/components/schemas/DataTieringShareInfo'
          nullable: true
          type: array
          x-order: 1
      title: Run once data tiering task request.
      type: object
    DataTieringTaskStats:
      allOf:
      - $ref: '#/components/schemas/BackupDataStats'
      - $ref: '#/components/schemas/DataTieringTaskStats_allOf'
      description: Specifies the stats of data tiering task.
    DataTieringTasks:
      description: The list of data tiering tasks.
      items:
        $ref: '#/components/schemas/DataTieringTask'
      nullable: true
      type: array
      x-nullable: true
    DataUsageStats:
      description: |-
        Specifies the data usage metric of the data stored on the Cohesity
        Cluster or Storage Domains (View Boxes).
      properties:
        cloudDataWrittenBytes:
          description: |-
            Specifies the total data written on cloud tiers, as computed by the
            Cohesity Cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        cloudDataWrittenBytesTimestampUsec:
          description: Specifies Timestamp of CloudDataWrittenBytes.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        cloudTotalPhysicalUsageBytes:
          description: |-
            Specifies the total cloud capacity, as computed by the Cohesity Cluster,
            after the size of the data has been reduced by change-block tracking,
            compression and deduplication.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        cloudTotalPhysicalUsageBytesTimestampUsec:
          description: Specifies Timestamp of CloudTotalPhysicalUsageBytes.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        dataInBytes:
          description: |-
            Specifies the data read from the protected objects by the Cohesity
            Cluster before any data reduction using deduplication and compression.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        dataInBytesAfterDedup:
          description: |-
            Specifies the size of the data has been reduced by change-block
            tracking and deduplication but before compression or data is replicated to
            other nodes as per RF or Erasure Coding policy.
          format: int64
          nullable: true
          type: integer
          x-order: 5
        dataInBytesAfterDedupTimestampUsec:
          description: Specifies Timestamp of DataInBytesAfterDedup.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        dataInBytesTimestampUsec:
          description: Specifies Timestamp of DataInBytes.
          format: int64
          nullable: true
          type: integer
          x-order: 7
        dataProtectLogicalUsageBytes:
          description: Specifies the logical data used by Data Protect on Cohesity
            cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 8
        dataProtectLogicalUsageBytesTimestampUsec:
          description: Specifies Timestamp of DataProtectLogicalUsageBytes.
          format: int64
          nullable: true
          type: integer
          x-order: 9
        dataProtectPhysicalUsageBytes:
          description: Specifies the physical data used by Data Protect on Cohesity
            cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 10
        dataProtectPhysicalUsageBytesTimestampUsec:
          description: Specifies Timestamp of DataProtectPhysicalUsageBytes.
          format: int64
          nullable: true
          type: integer
          x-order: 11
        dataWrittenBytes:
          description: |-
            Specifies the data written after it has been reduced by deduplication
            and compression. This does not include resiliency impact.
          format: int64
          nullable: true
          type: integer
          x-order: 12
        dataWrittenBytesTimestampUsec:
          description: Specifies Timestamp of DataWrittenBytes.
          format: int64
          nullable: true
          type: integer
          x-order: 13
        fileServicesLogicalUsageBytes:
          description: Specifies the logical data used by File services on Cohesity
            cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 14
        fileServicesLogicalUsageBytesTimestampUsec:
          description: Specifies Timestamp of FileServicesLogicalUsageBytes.
          format: int64
          nullable: true
          type: integer
          x-order: 15
        fileServicesPhysicalUsageBytes:
          description: Specifies the physical data used by File services on Cohesity
            cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 16
        fileServicesPhysicalUsageBytesTimestampUsec:
          description: Specifies Timestamp of FileServicesPhysicalUsageBytes.
          format: int64
          nullable: true
          type: integer
          x-order: 17
        localDataWrittenBytes:
          description: |-
            Specifies the total data written on local tiers, as computed by the
            Cohesity Cluster, after the size of the data has been reduced by
            change-block tracking, deduplication and compression. This does not
            include resiliency impact.
          format: int64
          nullable: true
          type: integer
          x-order: 18
        localDataWrittenBytesTimestampUsec:
          description: Specifies Timestamp of LocalDataWrittenBytes.
          format: int64
          nullable: true
          type: integer
          x-order: 19
        localTierResiliencyImpactBytes:
          description: |-
            Specifies the size of the data has been replicated to other nodes as per
            RF or Erasure Coding policy.
          format: int64
          nullable: true
          type: integer
          x-order: 20
        localTierResiliencyImpactBytesTimestampUsec:
          description: Specifies Timestamp of LocalTierResiliencyImpactBytes.
          format: int64
          nullable: true
          type: integer
          x-order: 21
        localTotalPhysicalUsageBytes:
          description: |-
            Specifies the total local capacity, as computed by the Cohesity Cluster,
            after the size of the data has been reduced by change-block tracking,
            compression and deduplication.
          format: int64
          nullable: true
          type: integer
          x-order: 22
        localTotalPhysicalUsageBytesTimestampUsec:
          description: Specifies Timestamp of LocalTotalPhysicalUsageBytes.
          format: int64
          nullable: true
          type: integer
          x-order: 23
        outdatedLogicalUsageBytes:
          description: |-
            Specifies the logical usage as computed by the Cohesity Cluster. This
            field is computed on a same frequency as 'StorageConsumedBytes',
            and it may not be the latest value. It is used to compute reduction ratio.
          format: int64
          nullable: true
          type: integer
          x-order: 24
        outdatedLogicalUsageBytesTimestampUsec:
          description: Specifies Timestamp of OutdatedLogicalUsageBytes.
          format: int64
          nullable: true
          type: integer
          x-order: 25
        storageConsumedBytes:
          description: |-
            Specifies the total capacity, as computed by the Cohesity Cluster,
            after the size of the data has been reduced by change-block tracking,
            compression and deduplication. This includes resiliency impact.
          format: int64
          nullable: true
          type: integer
          x-order: 26
        storageConsumedBytesTimestampUsec:
          description: Specifies Timestamp of StorageConsumedBytes.
          format: int64
          nullable: true
          type: integer
          x-order: 27
        totalLogicalUsageBytes:
          description: |-
            Provides the combined data residing on protected objects.
            The size of data before reduction by deduplication and compression.
          format: int64
          nullable: true
          type: integer
          x-order: 28
        totalLogicalUsageBytesTimestampUsec:
          description: Specifies Timestamp of TotalLogicalUsageBytes.
          format: int64
          nullable: true
          type: integer
          x-order: 29
        uniquePhysicalDataBytes:
          description: Specifies the unique physical data usage in bytes.
          format: int64
          nullable: true
          type: integer
          x-order: 30
      title: Data Usage Statistics.
      type: object
    DatabaseEntityInfo:
      description: Object details about Oracle database entity info.
      properties:
        containerDatabaseInfo:
          $ref: '#/components/schemas/ContainerDatabaseInfo'
        dataGuardInfo:
          $ref: '#/components/schemas/OracleDataGuardInfo'
      type: object
    DatastoreParams:
      description: Specifies the datastore params.
      properties:
        id:
          description: Specifies the Id of the datastore.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        maxConcurrentStreams:
          description: Specifies the max concurrent stream per datastore.
          format: int32
          nullable: true
          type: integer
          x-order: 1
      title: Datastore params.
      type: object
    DaySchedule:
      allOf:
      - $ref: '#/components/schemas/FrequencySchedule'
      description: Specifies settings that define a schedule for a Protection Group
        runs to start after certain number of days.
      title: Days Schedule
    DbRecoveryOverWritingPolicy:
      description: DB Recovery Overwriting Policy.
      properties:
        dbRecoveryOverWritingPolicy:
          description: 'Specifies the overwriting policies in case of SQL App Recoveries. '
          enum:
          - FailIfExists
          - Overwrite
          type: string
          x-order: 0
      title: DB Recovery Overwriting Policy.
      type: object
    DeduplicationParams:
      description: Specifies parameters for deduplication.
      properties:
        enabled:
          description: Specifies whether deduplication is enabled on this Storage
            Domain. If enabled, cohesity cluster will eliminate duplicate blocks and
            thus reducing the amount of storage space.
          nullable: true
          type: boolean
          x-order: 0
        inlineEnabled:
          description: Specifies if inline deduplication is enabled. This field is
            appliciable only if deduplicationEnabled is set to true.
          nullable: true
          type: boolean
          x-order: 1
      title: Deduplication Parameters
      type: object
    DeleteActiveDirectoryRequest:
      description: Specifies the request to delete an Active Directory.
      properties:
        activeDirectoryAdminParams:
          allOf:
          - $ref: '#/components/schemas/ActiveDirectoryAdminParams'
          - type: object
            x-nullable: true
          description: Specifies the params of a user with administrative privilege
            of this Active Directory. This field is mandatory if machine accounts
            are updated.
          nullable: true
          type: object
          x-order: 0
      required:
      - activeDirectoryAdminParams
      type: object
    DeleteRigelConnectorRequest:
      description: Specify the params to delete a Rigel connector.
      properties:
        tenantId:
          description: Specifies the id of the tenant which the connector belongs
            to.
          nullable: true
          type: string
          x-order: 0
      required:
      - tenantId
      title: Delete Rigel Connector Request.
      type: object
    DeviceTreeLeafNode:
      description: Specifies the parameters of a leaf node in device tree.
      properties:
        diskName:
          description: Specifies the disk name.
          nullable: true
          type: string
          x-order: 0
        partitionNumber:
          description: Specifies the paritition number.
          format: int32
          nullable: true
          type: integer
          x-order: 1
        offsetBytes:
          description: Specifies the offset in bytes where data for the LVM volume
            (for which this device tree is being build) starts relative to the start
            of the partition.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        lengthBytes:
          description: Specifies The length of data in bytes for the LVM volume (for
            which this device tree is being built). It does not include size of the
            LVM meta data.
          format: int64
          nullable: true
          type: integer
          x-order: 3
      type: object
    DeviceTreeNode:
      description: Specifies the tree structure of a logical volume. The leaves are
        slices of partitions and the other nodes are assemled by combining nodes in
        some mode.
      properties:
        isLeaf:
          description: Specifies if the node is a leaf node.
          nullable: true
          type: boolean
          x-order: 0
        leafNodeParams:
          allOf:
          - $ref: '#/components/schemas/DeviceTreeLeafNode'
          - type: object
            x-nullable: true
          description: Specifies the parameters for a leaf node.
          type: object
          x-order: 1
        nonLeafNodeParams:
          allOf:
          - $ref: '#/components/schemas/DeviceTreeNonLeafNode'
          - type: object
            x-nullable: true
          description: Specifies the parameters for a non leaf node.
          type: object
          x-order: 2
      type: object
    DeviceTreeNonLeafNode:
      description: Specifies the parameters of a non leaf node in device tree.
      properties:
        type:
          description: Specifies the children nodes combine type.
          enum:
          - Linear
          - Stripe
          - Mirror
          - Raid5
          - Raid6
          - Zero
          - Thin
          - ThinPool
          - Snapshot
          - Cache
          - CachePool
          nullable: true
          type: string
          x-order: 0
        deviceLength:
          description: Specifies the length of device.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        deviceId:
          description: Specifies the id of device.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        childrenNodes:
          description: Specifies a list of children nodes.
          items:
            $ref: '#/components/schemas/DeviceTreeNode'
          nullable: true
          type: array
          x-order: 3
      type: object
    Disk:
      description: Specifies the details of a disk that belongs to a node.
      example:
        capacityInBytes: 6
        serialNumber: serialNumber
        model: model
        location: location
        id: 0
        type: SystemDisk
        nodeId: 1
        status: Online
      properties:
        id:
          description: Specifies id to uniquely identify a disk.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        serialNumber:
          description: Specifies serial number of disk.
          nullable: true
          type: string
          x-order: 1
        capacityInBytes:
          description: Specifies capacity of disk in bytes.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        model:
          description: Specifies product model of disk.
          nullable: true
          type: string
          x-order: 3
        nodeId:
          description: Specifies node id of the node that this disk belong to.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        status:
          description: Specifies status of the disk.
          enum:
          - Online
          - Offline
          - Removing
          - OkToRemove
          - Blacklist
          - New
          - Empty
          - Unknown
          - Activating
          type: string
          x-order: 5
        type:
          description: Specifies type of the disk.
          enum:
          - SystemDisk
          - BootDisk
          - DataDisk
          - NvmeSsdDisk
          - SataSsdDisk
          - HddDisk
          - Unknown
          type: string
          x-order: 6
        location:
          description: Specifies location of the disk in node.
          nullable: true
          type: string
          x-order: 7
      title: Disk details
      type: object
    DiskIdentify:
      description: Specifies the parameters needed to identify disk.
      example:
        serialNumber: serialNumber
        identify: true
        nodeId: 0
      properties:
        nodeId:
          description: Specifies the node id of node that disk belongs to.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        serialNumber:
          description: Specifies serial number of disk.
          nullable: true
          type: string
          x-order: 1
        identify:
          description: Turn on/off led light if it is set to true/false
          nullable: true
          type: boolean
          x-order: 2
      required:
      - identify
      - nodeId
      - serialNumber
      title: Disk identify params.
      type: object
    DiskInfo:
      description: Specifies information about a disk.
      properties:
        controllerType:
          description: Specifies the disk controller type.
          enum:
          - kScsi
          - kIde
          - kSata
          nullable: true
          type: string
          x-order: 0
        unitNumber:
          description: Specifies the disk file name. This is the VMDK name and not
            the flat file name.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        busNumber:
          description: Specifies the Id of the controller bus that controls the disk.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      required:
      - busNumber
      - unitNumber
      title: Disk Information
      type: object
    DiskRemovalParams:
      description: Specifies parameters to initiate/cancel disk removal.
      example:
        cancel: true
      properties:
        cancel:
          description: If true, cancels disk removal which is already in progress.
          nullable: true
          type: boolean
          x-order: 0
      required:
      - cancel
      title: Disk Removal Parameters.
      type: object
    DiskStatus:
      description: Disk Status
      properties:
        diskStatus:
          description: Disk Status
          enum:
          - Active
          - Offline
          - Deleting
          - Deleted
          - DataVipNotReachable
          - FileSystemNotAccessible
          - FileSystemDeleted
          - Mounting
          - Migrating
          - Unknown
          type: string
          x-order: 0
      title: Disk Status
      type: object
    DiskTiers:
      description: Disk Tiers
      properties:
        diskTiers:
          description: Disk Tiers
          enum:
          - PCIeSSD
          - SATA-SSD
          - SATA-HDD
          - CLOUD
          type: string
          x-order: 0
      title: Disk Tiers
      type: object
    DiskType:
      description: Type of disk.
      properties:
        status:
          description: Specifies type of the disk.
          enum:
          - SystemDisk
          - BootDisk
          - DataDisk
          - NvmeSsdDisk
          - SataSsdDisk
          - HddDisk
          - Unknown
          type: string
          x-order: 0
      title: Disk type.
      type: object
    DisksList:
      description: Specifies the list of disks that belong to node.
      example:
        disksList:
        - capacityInBytes: 6
          serialNumber: serialNumber
          model: model
          location: location
          id: 0
          type: SystemDisk
          nodeId: 1
          status: Online
        - capacityInBytes: 6
          serialNumber: serialNumber
          model: model
          location: location
          id: 0
          type: SystemDisk
          nodeId: 1
          status: Online
      properties:
        disksList:
          description: Specifies the list of disks.
          items:
            $ref: '#/components/schemas/Disk'
          nullable: true
          type: array
          x-order: 0
      title: List of Disks
      type: object
    DmaasSignupParams:
      description: Specifies the Data Management as a Service specific params.
      properties:
        planId:
          description: Specifies the plan id.
          type: string
          x-order: 0
      required:
      - planId
      title: Data Management as a Service parameters.
      type: object
    DmaasTenantAction:
      description: Describes DMaaS tenant actions.
      properties:
        enum:
          description: Specifies the DMaaS Tenant Actions
          enum:
          - StartMigration
          - StopMigration
          type: string
          x-order: 0
      title: DMaaS Tenant Action
      type: object
    DnsServersInfo:
      description: List of DNS servers in cluster.
      example:
        dnsServers:
        - dnsServers
        - dnsServers
      properties:
        dnsServers:
          description: List of DNS servers in cluster.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
      title: DnsServersInfo
      type: object
    DocumentLibraryItem:
      allOf:
      - $ref: '#/components/schemas/CommonIndexedObjectParams'
      - $ref: '#/components/schemas/DocumentLibraryItem_allOf'
      description: Specifies a Document Library indexed item.
      title: DocumentLibraryItem
    DocumentsFilterType:
      description: Enumeration of all the document filter option.
      properties:
        DocumentsFilterType:
          description: Enumeration of all the document filter option.
          enum:
          - NONE
          - ID
          - CONTENT
          type: string
          x-order: 0
      title: Enumeration of all the document filter option.
      type: object
    DomainController:
      description: Specifies a domain controller.
      example:
        name: name
        status: Reachable
      properties:
        name:
          description: Specifies the domain controller name.
          nullable: true
          type: string
          x-order: 0
        status:
          description: Specifies the connection status.
          enum:
          - Reachable
          - Unreachable
          - Incompatible
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - name
      type: object
    DomainControllerStatus:
      description: Connection status of domain controller.
      properties:
        domainControllerStatus:
          description: Specifies the connection status of a domain controller.
          enum:
          - Reachable
          - Unreachable
          - Incompatible
          type: string
          x-order: 0
      title: Domain Controller Status
      type: object
    DomainControllers:
      description: Specifies the domain controllers of a domain.
      example:
        domainName: domainName
        controllers:
        - name: name
          status: Reachable
        - name: name
          status: Reachable
      properties:
        domainName:
          description: Specifies the domain name.
          nullable: true
          type: string
          x-order: 0
        controllers:
          description: Specifies a list of domain controllers of the domain.
          items:
            $ref: '#/components/schemas/DomainController'
          nullable: true
          type: array
          x-order: 1
      type: object
    DomainControllersResponse:
      description: Specifies the response of get domain controllers request.
      example:
        domainControllers:
        - domainName: domainName
          controllers:
          - name: name
            status: Reachable
          - name: name
            status: Reachable
        - domainName: domainName
          controllers:
          - name: name
            status: Reachable
          - name: name
            status: Reachable
      properties:
        domainControllers:
          description: A list of domain names with a list of it's domain controllers.
          items:
            $ref: '#/components/schemas/DomainControllers'
          nullable: true
          type: array
          x-order: 0
      type: object
    DomainScopeParams:
      description: Specifies the parameters for domain type scope
      properties:
        domainName:
          description: Specifies the domain name.
          nullable: true
          type: string
          x-order: 0
      required:
      - domainName
      type: object
    DownTieringFileSelectionType:
      description: Data down-tiering file selection type.
      properties:
        type:
          description: Specifies the data down-tiering file selection type.
          enum:
          - OlderThan
          - LastAccessed
          - LastModified
          type: string
          x-order: 0
      title: Data down-tiering file selection type.
      type: object
    DownloadFilesAndFoldersRequestParams:
      description: Specifies the parameters to create a download files and folders
        Recovery.
      example:
        parentRecoveryId: parentRecoveryId
        name: name
        filesAndFolders:
        - absolutePath: absolutePath
          isDirectory: true
        - absolutePath: absolutePath
          isDirectory: true
        object:
          snapshotCreationTimeUsecs: 6
          archivalTargetInfo: '{}'
          storageDomainId: 1
          snapshotId: snapshotId
          pointInTimeUsecs: 0
          protectionGroupName: protectionGroupName
          recoverFromStandby: true
          startTimeUsecs: 5
          snapshotTargetType: Local
          endTimeUsecs: 5
          protectionGroupId: protectionGroupId
          messages:
          - messages
          - messages
          progressTaskId: progressTaskId
          objectInfo: '{}'
          status: Accepted
      properties:
        name:
          description: Specifies the name of the recovery task. This field must be
            set and must be a unique name.
          nullable: true
          type: string
          x-order: 0
        object:
          $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
        parentRecoveryId:
          description: If current recovery is child task triggered through another
            parent recovery operation, then this field will specify the id of the
            parent recovery.
          nullable: true
          pattern: ^\d+:\d+:\d+$
          type: string
          x-order: 2
        filesAndFolders:
          description: Specifies the list of files and folders to download.
          items:
            $ref: '#/components/schemas/FilesAndFoldersObject'
          minItems: 1
          nullable: true
          type: array
          x-order: 3
      required:
      - filesAndFolders
      - name
      - object
      title: Download Files And Folders Recovery Params.
      type: object
    DownloadFilesAndFoldersResponseParams:
      description: Specifies the parameters to create a download files and folders
        Recovery.
      properties:
        id:
          description: Specifies the id of the Recovery.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the name of the recovery task. This field must be
            set and must be a unique name.
          nullable: true
          type: string
          x-order: 1
        object:
          $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
        filesAndFolders:
          description: Specifies the list of files and folders to download.
          items:
            $ref: '#/components/schemas/FilesAndFoldersObject'
          minItems: 1
          nullable: true
          type: array
          x-order: 3
      title: Download Files And Folders Recovery Params.
      type: object
    DowntieredDataLocation:
      description: |-
        Specifies a map between source Id and the corresponding viewName and mount
        path, where the source was downtiered.
      nullable: true
      properties:
        id:
          description: Specifies the ID of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        viewName:
          description: Specifies the view name.
          nullable: true
          type: string
          x-order: 1
        mountPath:
          description: Specifies the mount path inside the view.
          nullable: true
          type: string
          x-order: 2
      required:
      - id
      - viewName
      type: object
      x-nullable: true
    DowntieringFileAgePolicy:
      description: |-
        Specifies the file's selection rule by file age for down tiering data
        tiering task eg.
        1. select files older than 10 days.
        2. select files last accessed 2 weeks ago.
        3. select files last modified 1 month ago.
      properties:
        condition:
          description: Specifies the condition for the file age.
          enum:
          - OlderThan
          - LastAccessed
          - LastModified
          nullable: true
          type: string
          x-order: 0
        ageMsecs:
          description: Specifies the number of msecs used for file selection.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    DowntieringPolicy:
      allOf:
      - $ref: '#/components/schemas/DowntieringPolicy_allOf'
      - $ref: '#/components/schemas/CommonTieringPolicy'
      description: Specifies the data downtiering policy.
    DowntieringTarget:
      description: |-
        Specifies the target data tiering details for downtier job.
        This is in beta phase. Please use target inside
        CommonDataTieringTaskParams, present directly under data tiering request
        body. If target is present inside CommonDataTieringTaskParams, this
        target will be ignored.
      nullable: true
      properties:
        viewNamePrefix:
          description: Specifies the view name prefix.
          nullable: true
          type: string
          x-order: 0
        mountPathPrefix:
          description: Specifies the mount path prefix inside the view.
          nullable: true
          type: string
          x-order: 1
        storageDomainId:
          description: Specifies the Storage Domain ID where the view will be kept.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        downtieredDataLocations:
          description: |-
            Specifies a list of mapping between sources and its corresponding
            viewNames and mountPaths, where the sources were downtiered.
          items:
            $ref: '#/components/schemas/DowntieredDataLocation'
          nullable: true
          readOnly: true
          type: array
          x-order: 3
      required:
      - storageDomainId
      - viewNamePrefix
      type: object
      x-nullable: true
    ESConfigForIndexing:
      description: Elasticsearch config for indexing in DMaaS.
      properties:
        esDomain:
          description: Fully qualified ES domain name.
          nullable: true
          type: string
          x-order: 0
        esIamRoleArn:
          description: IAM role ARN which has access to ES instance.
          nullable: true
          type: string
          x-order: 1
      required:
      - esDomain
      - esIamRoleArn
      title: ESConfigForIndexing
      type: object
    EbsVolumeExclusionParams:
      description: Specifies the parameters to exclude EBS volumes attached to EC2
        instances at global and object level. A volume satisfying any of these criteria
        will be excluded.
      nullable: true
      properties:
        volumeIds:
          description: Array of volume IDs that are to be excluded. This is only for
            object level exclusion.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
        maxVolumeSizeBytes:
          description: Any volume larger than this size will be excluded.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        volumeTypes:
          description: Array of volume types to exclude. Eg - gp2, gp3.
          items:
            type: string
          nullable: true
          type: array
          x-order: 2
        deviceNames:
          description: Array of device names to exclude. Eg - /dev/sda.
          items:
            type: string
          nullable: true
          type: array
          x-order: 3
      title: EBS Volume Exclusion Params.
      type: object
      x-nullable: true
    ElastifileObjectProtectionParams:
      description: Specifies the parameters which are specific to Elastifile object
        protection.
      properties:
        protocol:
          description: Specifies the protocol of the NAS device being backed up.
          enum:
          - kNoProtocol
          - kNfs3
          - kNfs4_1
          - kCifs1
          - kCifs2
          - kCifs3
          nullable: true
          type: string
          x-order: 0
      type: object
    ElastifileObjectProtectionRequestParams:
      allOf:
      - $ref: '#/components/schemas/ElastifileObjectProtectionRequestParams_allOf'
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      - $ref: '#/components/schemas/ElastifileObjectProtectionParams'
      description: Specifies the parameters which are specific to Elastifile object
        protection.
    ElastifileObjectProtectionResponseParams:
      allOf:
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      - $ref: '#/components/schemas/ElastifileObjectProtectionParams'
      description: Specifies the parameters which are specific to Elastifile object
        protection.
    ElastifileObjectProtectionUpdateRequestParams:
      allOf:
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      - $ref: '#/components/schemas/ElastifileObjectProtectionParams'
      description: Specifies the update parameters which are specific to Elastifile
        object protection.
    ElastifileProtectionGroupObjectParams:
      description: Specifies an object protected by an Elastifile Protection Group.
      properties:
        id:
          description: Specifies the ID of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      type: object
    ElastifileProtectionGroupParams:
      description: Specifies the parameters which are specific to Elastifile related
        Protection Groups.
      nullable: true
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/ElastifileProtectionGroupObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        directCloudArchive:
          description: Specifies whether or not to store the snapshots in this run
            directly in an Archive Target instead of on the Cluster. If this is set
            to true, the associated policy must have exactly one Archive Target associated
            with it and the policy must be set up to archive after every run. Also,
            a Storage Domain cannot be specified. Default behavior is 'false'.
          nullable: true
          type: boolean
          x-order: 1
        nativeFormat:
          description: Specifies whether or not to enable native format for direct
            archive job. This field is set to true if native format should be used
            for archiving.
          nullable: true
          type: boolean
          x-order: 2
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        protocol:
          description: Specifies the protocol of the NAS device being backed up.
          enum:
          - kNoProtocol
          - kNfs3
          - kNfs4_1
          - kCifs1
          - kCifs2
          - kCifs3
          nullable: true
          type: string
          x-order: 4
        continueOnError:
          description: Specifies whether or not the Protection Group should continue
            regardless of whether or not an error was encountered.
          nullable: true
          type: boolean
          x-order: 5
        encryptionEnabled:
          description: Specifies whether the protection group should use encryption
            while backup or not.
          nullable: true
          type: boolean
          x-order: 6
        fileLockConfig:
          $ref: '#/components/schemas/FileLevelDataLockConfig'
        fileFilters:
          $ref: '#/components/schemas/FileFilteringPolicy'
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 9
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 10
        prePostScript:
          $ref: '#/components/schemas/HostBasedBackupScriptParams'
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        throttlingConfig:
          $ref: '#/components/schemas/NasThrottlingConfig'
      required:
      - objects
      type: object
      x-nullable: true
    ElastifileRegistrationParams:
      description: Specifies parameters to register an Elastifile Source.
      properties:
        endpoint:
          description: Specifies the Hostname or IP Address Endpoint for the Elastifile
            Source.
          nullable: true
          type: string
          x-order: 0
        credentials:
          $ref: '#/components/schemas/Credentials'
        throttlingConfig:
          $ref: '#/components/schemas/NasThrottlingConfig'
      required:
      - credentials
      - endpoint
      title: Elastifile Protection Source.
      type: object
    Email:
      allOf:
      - $ref: '#/components/schemas/Email_allOf'
      - $ref: '#/components/schemas/TagObject'
      description: Specifies an email or an email folder.
      title: Email
    EmailHeliosSearchParams:
      allOf:
      - $ref: '#/components/schemas/SearchEmailRequestParamsBase'
      - $ref: '#/components/schemas/EmailHeliosSearchParams_allOf'
      description: |-
        Specifies the parameters which are specific for
        searching emails and email folders.
    Emails:
      description: Specifies the indexed emails and email folders.
      items:
        $ref: '#/components/schemas/Email'
      type: array
    EncryptionSettings:
      description: Specifis the encryption setting of the External Target
      properties:
        encryptionLevel:
          description: Specifies the type of encryption for the Setting.
          enum:
          - None
          - Weak
          - Strong
          nullable: true
          type: string
          x-order: 0
        kmsServerId:
          description: Specifies the Key Management Service Server ID for the Encryption
            Setting.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        enableAdditionalSecurity:
          description: Enable Additional security by managing key manually
          nullable: true
          type: boolean
          x-order: 2
      required:
      - encryptionLevel
      type: object
    EndpointCheckResult:
      description: Specify the connectivity check results on each endpoint.
      properties:
        checkName:
          description: Specifies the name of the check.
          nullable: true
          type: string
          x-order: 0
        status:
          description: Specifies the status of the check.
          enum:
          - kStateUnknown
          - kStateOk
          - kStateFail
          - kStateInProgress
          nullable: true
          type: string
          x-order: 1
        errorMsg:
          description: Specifies the error message to help troubleshoot.
          nullable: true
          type: string
          x-order: 2
      title: Endpoint Check Result.
      type: object
    EndpointConnectionState:
      description: Specify the connection state to each endpoint.
      properties:
        name:
          description: Specifies the name of the endpoint
          nullable: true
          type: string
          x-order: 0
        port:
          description: Specifies the port of the endpoint
          nullable: true
          type: string
          x-order: 1
        results:
          description: Specifies the results of the endpoints.
          items:
            $ref: '#/components/schemas/EndpointCheckResult'
          nullable: true
          type: array
          x-order: 2
      title: Endpoint Connection State.
      type: object
    EndpointOnlyRegistrationParams:
      description: Specifies an endpoint to register a source.
      properties:
        endpoint:
          description: Specifies the endpoint IPaddress, URL or hostname of the host.
          type: string
          x-order: 0
        description:
          description: Specifies the description of the source being registered.
          nullable: true
          type: string
          x-order: 1
      required:
      - endpoint
      title: Register source endpoint-only request parameters.
      type: object
    EnvSpecificObjectProtectionRequestParams:
      allOf:
      - $ref: '#/components/schemas/CommonEnvSpecificObjectProtectionParams'
      - $ref: '#/components/schemas/EnvSpecificObjectProtectionRequestParams_allOf'
      description: Specifies the parameters which are specific to adapter identified
        by enviournment.
    EnvSpecificObjectProtectionResponseParams:
      description: Specifies the parameters which are specific to adapter identified
        by enviournment.
      properties:
        environment:
          description: Specifies the environment for current object.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kGCP
          - kKVM
          - kAcropolis
          - kAWS
          - kPhysical
          - kGPFS
          - kElastifile
          - kNetapp
          - kGenericNas
          - kIsilon
          - kFlashBlade
          - kPure
          - kSQL
          - kExchange
          - kAD
          - kOracle
          - kView
          - kRemoteAdapter
          - kO365
          - kO365PublicFolders
          - kO365Teams
          - kO365Group
          - kO365Exchange
          - kO365OneDrive
          - kO365Sharepoint
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          nullable: true
          type: string
          x-order: 0
        vmwareParams:
          $ref: '#/components/schemas/VmwareObjectProtectionResponseParams'
        genericNasParams:
          $ref: '#/components/schemas/GenericNasObjectProtectionResponseParams'
        gpfsParams:
          $ref: '#/components/schemas/GpfsObjectProtectionResponseParams'
        elastifileParams:
          $ref: '#/components/schemas/ElastifileObjectProtectionResponseParams'
        netappParams:
          $ref: '#/components/schemas/NetappObjectProtectionResponseParams'
        isilonParams:
          $ref: '#/components/schemas/IsilonObjectProtectionResponseParams'
        flashbladeParams:
          $ref: '#/components/schemas/FlashbladeObjectProtectionResponseParams'
        mssqlParams:
          $ref: '#/components/schemas/MssqlObjectProtectionResponseParams'
        oracleParams:
          $ref: '#/components/schemas/OracleObjectProtectionResponseParams'
        office365Params:
          $ref: '#/components/schemas/Office365ObjectProtectionResponseParams'
        awsParams:
          $ref: '#/components/schemas/AwsObjectProtectionResponseParams'
        hypervParams:
          $ref: '#/components/schemas/HyperVObjectProtectionResponseParams'
        physicalParams:
          $ref: '#/components/schemas/PhysicalObjectProtectionResponseParams'
      type: object
    EnvSpecificObjectProtectionUpdateRequestParams:
      description: Specifies the update parameters which are specific to adapter identified
        by enviournment.
      properties:
        environment:
          description: Specifies the environment for current object.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kGCP
          - kKVM
          - kAcropolis
          - kAWS
          - kPhysical
          - kGPFS
          - kElastifile
          - kNetapp
          - kGenericNas
          - kIsilon
          - kFlashBlade
          - kPure
          - kSQL
          - kExchange
          - kAD
          - kOracle
          - kView
          - kRemoteAdapter
          - kO365
          - kO365PublicFolders
          - kO365Teams
          - kO365Group
          - kO365Exchange
          - kO365OneDrive
          - kO365Sharepoint
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          nullable: true
          type: string
          x-order: 0
        vmwareParams:
          $ref: '#/components/schemas/VmwareObjectProtectionUpdateRequestParams'
        genericNasParams:
          $ref: '#/components/schemas/GenericNasObjectProtectionUpdateRequestParams'
        gpfsParams:
          $ref: '#/components/schemas/GpfsObjectProtectionUpdateRequestParams'
        elastifileParams:
          $ref: '#/components/schemas/ElastifileObjectProtectionUpdateRequestParams'
        netappParams:
          $ref: '#/components/schemas/NetappObjectProtectionUpdateRequestParams'
        isilonParams:
          $ref: '#/components/schemas/IsilonObjectProtectionUpdateRequestParams'
        flashbladeParams:
          $ref: '#/components/schemas/FlashbladeObjectProtectionUpdateRequestParams'
        mssqlParams:
          $ref: '#/components/schemas/MssqlObjectProtectionUpdateRequestParams'
        oracleParams:
          $ref: '#/components/schemas/OracleObjectProtectionUpdateRequestParams'
        office365Params:
          $ref: '#/components/schemas/Office365ObjectProtectionUpdateRequestParams'
        awsParams:
          $ref: '#/components/schemas/AwsObjectProtectionUpdateRequestParams'
        hypervParams:
          $ref: '#/components/schemas/HyperVObjectProtectionUpdateRequestParams'
        physicalParams:
          $ref: '#/components/schemas/PhysicalObjectProtectionUpdateRequestParams'
      type: object
    Environment:
      description: Environment type.
      properties:
        environment:
          description: Specifies Environment type.
          enum:
          - kVMware
          - kHyperV
          - kSQL
          - kView
          - kRemoteAdapter
          - kPhysical
          - kPure
          - kAzure
          - kNetapp
          - kGenericNas
          - kAcropolis
          - kIsilon
          - kKVM
          - kAWS
          - kExchange
          - kOracle
          - kGCP
          - kFlashBlade
          - kO365
          - kHyperFlex
          - kAD
          - kGPFS
          - kKubernetes
          - kNimble
          - kElastifile
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          - kO365Sharepoint
          - kO365PublicFolders
          - kO365Teams
          - kO365Group
          - kO365Exchange
          - kO365OneDrive
          type: string
          x-order: 0
      title: Environment type.
      type: object
    ErasureCodingParams:
      description: Specifies parameters for erasure coding.
      properties:
        enabled:
          description: Specifies whether to enable erasure coding on a Storage Domain.
          nullable: true
          type: boolean
          x-order: 0
        algorithm:
          description: Specifies the algorithm used for erasure coding.
          enum:
          - REED_SOLOMON
          - LRC
          nullable: true
          type: string
          x-order: 1
        numDataStripes:
          description: Specifies the number of data stripes.
          format: int32
          nullable: true
          type: integer
          x-order: 2
        numCodedStripes:
          description: Specifies the number of coded stripes.
          format: int32
          nullable: true
          type: integer
          x-order: 3
        inlineEnabled:
          description: Specifies whether inline erasure coding is enabled. This field
            is appliciable only if enabled is set to true.
          nullable: true
          type: boolean
          x-order: 4
        delaySecs:
          description: Specifies the time in seconds when erasure coding starts.
          format: int32
          nullable: true
          type: integer
          x-order: 5
        useContainer:
          description: Whether to encode chunk files as part of a container. This
            field is appliciable only if enabled is set to true.
          nullable: true
          type: boolean
          x-order: 6
      required:
      - enabled
      - numCodedStripes
      - numDataStripes
      title: Erasure Coding Parameters
      type: object
    Error:
      description: Specifies the error object with error code and a message.
      example:
        errorCode: errorCode
        message: message
      properties:
        errorCode:
          description: Specifies the error code.
          nullable: true
          type: string
          x-order: 0
        message:
          description: Specifies the error message.
          nullable: true
          type: string
          x-order: 1
      title: Error.
      type: object
    EsxiRegistrationParams:
      allOf:
      - $ref: '#/components/schemas/CommonSourceRegistrationParams'
      - $ref: '#/components/schemas/EsxiRegistrationParams_allOf'
      description: Specifies parameters to register VMware ESXi host.
      title: Register VMware ESXi host request parameters.
    ExchangeAppParams:
      description: Specifies the Exchange special parameters for the Protection Group.
      properties:
        appId:
          description: Specifies the application id of the Exchange database which
            has to be protected.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        appName:
          description: Specifies the application name of the Exchange database which
            has to be protected.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      title: Exchange App Parameters.
      type: object
    ExchangeDatabaseRecoveryTargetConfig:
      description: Specifies the target object parameters to recover Exchange database.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the physical source to which the exchange
            database will be recovered.
          nullable: true
          type: object
          x-order: 0
      required:
      - source
      title: Exchange database Recovery Target Config.
      type: object
    ExchangeIndexedObject:
      allOf:
      - $ref: '#/components/schemas/CommonIndexedObjectParams'
      - $ref: '#/components/schemas/ExchangeIndexedObject_allOf'
      description: Specifies the Exchange Indexed object.
      title: ExchangeIndexedObject
    ExchangeIndexedObjects:
      description: Specifies the indexed HDFS objects.
      items:
        $ref: '#/components/schemas/ExchangeIndexedObject'
      type: array
    ExchangeProtectionGroupObjectParams:
      description: Specifies the object identifier to for the exchange protection
        group.
      properties:
        id:
          description: Specifies the id of the registered Exchange DAG(Database Availability
            Group) source or Exchange physical source.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the registered Exchange DAG(Database
            Availability Group) source or Exchange physical source.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        appParams:
          description: Specifies the specific parameters required for Exchange app
            configuration.
          items:
            $ref: '#/components/schemas/ExchangeAppParams'
          nullable: true
          type: array
          x-order: 2
      required:
      - id
      title: Exchange Protection Group Object Params.
      type: object
    ExchangeProtectionGroupParams:
      description: Specifies the parameters which are specific to Exchange related
        Protection Groups.
      properties:
        objects:
          description: Specifies the list of object ids to be protected.
          items:
            $ref: '#/components/schemas/ExchangeProtectionGroupObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        excludeDatabaseIds:
          description: Specifies the list of IDs of the databases to not be protected
            by this Protection Group. This can be used to ignore specific databases
            under Exchange Server/DAG which has been included for protection.
          items:
            format: int64
            nullable: true
            type: integer
          type: array
          x-order: 1
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        backupsCopyOnly:
          description: Specifies whether the backups should be copy-only.
          nullable: true
          type: boolean
          x-order: 3
      required:
      - objects
      title: Exchange Protection Group Parameters.
      type: object
    ExchangeRecoverDatabaseParams:
      description: Specifies the parameters to recover an Exchange database. database.
      properties:
        databaseSource:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the source id of Exchange database which has to be
            recovered.
          nullable: true
          type: object
          x-order: 0
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or an existing Source Target.
          type: boolean
          x-order: 1
        recoveryTargetConfig:
          allOf:
          - $ref: '#/components/schemas/ExchangeDatabaseRecoveryTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the recovery target configuration if recovery has
            to be done to a different location which is different from original source.
          nullable: true
          type: object
          x-order: 2
        restoreType:
          description: Specifies the type of exchange restore.
          enum:
          - RestoreView
          nullable: true
          type: string
          x-order: 3
        viewOptions:
          $ref: '#/components/schemas/ViewOptions'
      required:
      - databaseSource
      - recoverToNewSource
      - restoreType
      title: Exchange database Recovery params.
      type: object
    ExchangeTargetParamsForRecoverExchangeApp:
      description: Specifies the parameters to recover Exchange applications to an
        Exchange target.
      properties:
        object:
          $ref: '#/components/schemas/RecoverExchangeAppSnapshotParams'
      required:
      - object
      title: Recover Exchange App params.
      type: object
    ExistingGroupParam:
      description: Specifies the parameters for using existing protection group.
      properties:
        id:
          description: Specifies the protection group id.
          nullable: true
          type: string
          x-order: 0
      required:
      - id
      type: object
    ExtendedRetentionPolicy:
      description: Specifies additional retention policies to apply to backup snapshots.
      properties:
        schedule:
          $ref: '#/components/schemas/ExtendedRetentionSchedule'
        retention:
          $ref: '#/components/schemas/Retention'
        runType:
          description: |-
            The backup run type to which this extended retention applies to. If this is not set, the extended retention will be applicable to all non-log backup types. Currently, the only value that can be set here is Full.
            'Regular' indicates a incremental (CBT) backup. Incremental backups utilizing CBT (if supported) are captured of the target protection objects. The first run of a Regular schedule captures all the blocks.
            'Full' indicates a full (no CBT) backup. A complete backup (all blocks) of the target protection objects are always captured and Change Block Tracking (CBT) is not utilized.
            'Log' indicates a Database Log backup. Capture the database transaction logs to allow rolling back to a specific point in time.
            'System' indicates a system backup. System backups are used to do bare metal recovery of the system to a specific point in time.
          enum:
          - Regular
          - Full
          - Log
          - System
          nullable: true
          type: string
          x-order: 2
        configId:
          description: Specifies the unique identifier for the target getting added.
            This field need to be passed olny when policies are updated.
          nullable: true
          type: string
          x-order: 3
      required:
      - retention
      - schedule
      title: Extended Retention Policy.
      type: object
    ExtendedRetentionSchedule:
      description: Specifies a schedule frequency and schedule unit for Extended Retentions.
      properties:
        unit:
          description: Specifies the unit interval for retention of Snapshots. <br>'Runs'
            means that the Snapshot copy retained after the number of Protection Group
            Runs equals the number specified in the frequency. <br>'Hours' means that
            the Snapshot copy retained hourly at the frequency set in the frequency,
            for example if scheduleFrequency is 2, the copy occurs every 2 hours.
            <br>'Days' means that the Snapshot copy gets retained daily at the frequency
            set in the frequency. <br>'Weeks' means that the Snapshot copy is retained
            weekly at the frequency set in the frequency. <br>'Months' means that
            the Snapshot copy is retained monthly at the frequency set in the Frequency.
            <br>'Years' means that the Snapshot copy is retained yearly at the frequency
            set in the Frequency.
          enum:
          - Runs
          - Hours
          - Days
          - Weeks
          - Months
          - Years
          nullable: true
          type: string
          x-order: 0
        frequency:
          description: |-
            Specifies a factor to multiply the unit by, to determine the retention schedule.
            For example if set to 2 and the unit is hourly, then Snapshots from the first eligible Job Run for every 2 hour period is retained.
          format: int32
          minimum: 1
          nullable: true
          type: integer
          x-order: 1
      required:
      - unit
      title: Extended Retention Schedule
      type: object
    ExternalTarget:
      allOf:
      - $ref: '#/components/schemas/CommonExternalTargetParams'
      - $ref: '#/components/schemas/ExternalTarget_allOf'
      description: External Target.
    ExternalTargets:
      description: List of External Target.
      example:
        externalTargets:
        - null
        - null
      properties:
        externalTargets:
          description: Specifies the list of External Targets which were returned
            by the request.
          items:
            $ref: '#/components/schemas/ExternalTarget'
          nullable: true
          type: array
          x-order: 0
      type: object
    ExternallyTriggeredClientType:
      description: Client type of an externally triggered backup.
      properties:
        type:
          description: Specifies the client type of an externally triggered backup.
          enum:
          - Generic
          - SBT
          type: string
          x-order: 0
      title: Externally Triggered Backup Client Type
      type: object
    ExternallyTriggeredJobParams:
      description: Specifies the externally triggered job paramters.
      properties:
        clientType:
          description: Specifies the client type of the externally triggered backup
            job.
          enum:
          - Generic
          - SBT
          nullable: true
          type: string
          x-order: 0
        sbtParams:
          allOf:
          - $ref: '#/components/schemas/ExternallyTriggeredSbtParams'
          - type: object
            x-nullable: true
          description: Specifies the SBT parameters for the externally triggered backup
            job.
          type: object
          x-order: 1
        tags:
          description: Specifies all the tags of the externally triggered job.
          items:
            type: string
          type: array
          x-omitempty: true
          x-order: 2
      type: object
    ExternallyTriggeredSbtParams:
      description: Specifies SBT paramters for the externally triggered job.
      properties:
        catalogView:
          description: Specifies the catalog view for the SBT backup.
          nullable: true
          type: string
          x-order: 0
      type: object
    FCICluster:
      description: Specifies the details of a Failover Cluster Instance.
      properties:
        id:
          description: Specifies the unique identifier of the FCI.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the name of the FCI.
          nullable: true
          type: string
          x-order: 1
        error:
          $ref: '#/components/schemas/Error'
        resourceInfo:
          $ref: '#/components/schemas/AppResource'
        servers:
          description: 'Specifies the list of SQL servers which belongs to the given
            FCI. '
          items:
            $ref: '#/components/schemas/SQLServer'
          nullable: true
          type: array
          x-order: 4
        isSelectedByDefault:
          description: Indicates to the UI whether this FCI cluster should be selected
            by default
          nullable: true
          type: boolean
          x-order: 5
      type: object
    FailedProtectionGroupDetails:
      description: Specifies a list of ids of Protection Group that failed to update
        along with error details
      example:
        protectionGroupId: protectionGroupId
        errorMessage: errorMessage
      properties:
        protectionGroupId:
          description: Specifies the id of the failed protection group.
          nullable: true
          type: string
          x-order: 0
        errorMessage:
          description: Specifies the error mesage for failed protection group.
          nullable: true
          type: string
          x-order: 1
      type: object
    FailedRunDetails:
      description: Specifies a list of ids of Protection Group Runs that failed to
        update along with error details
      example:
        errorMessage: errorMessage
        runId: runId
      properties:
        runId:
          description: Specifies the id of the failed run.
          nullable: true
          type: string
          x-order: 0
        errorMessage:
          description: Specifies the error mesage for failed run.
          nullable: true
          type: string
          x-order: 1
      type: object
    Failover:
      description: Specifies the details of a failover.
      example:
        endTimeUsecs: 6
        replications:
        - endTimeUsecs: 5
          physicalBytesTransferred: 9
          logicalBytesTransferred: 7
          percentageCompleted: 5
          logicalSizeBytes: 2
          targetClusterIncarnationId: 2
          errorMessage: errorMessage
          id: id
          startTimeUsecs: 1
          targetClusterId: 3
          status: Running
          targetClusterName: targetClusterName
        - endTimeUsecs: 5
          physicalBytesTransferred: 9
          logicalBytesTransferred: 7
          percentageCompleted: 5
          logicalSizeBytes: 2
          targetClusterIncarnationId: 2
          errorMessage: errorMessage
          id: id
          startTimeUsecs: 1
          targetClusterId: 3
          status: Running
          targetClusterName: targetClusterName
        errorMessage: errorMessage
        id: id
        startTimeUsecs: 0
        type: Planned
        status: Running
      properties:
        id:
          description: Specifies the failover id.
          nullable: true
          type: string
          x-order: 0
        type:
          description: Specifies the failover type.
          enum:
          - Planned
          - Unplanned
          nullable: true
          type: string
          x-order: 1
        status:
          description: Specifies the failover status.
          enum:
          - Running
          - Succeeded
          - Failed
          nullable: true
          type: string
          x-order: 2
        errorMessage:
          description: Specifies the error details if failover status is 'Failed'.
          nullable: true
          type: string
          x-order: 3
        startTimeUsecs:
          description: Specifies the failover start time in micro seconds.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        endTimeUsecs:
          description: Specifies the failover complete time in micro seconds.
          format: int64
          nullable: true
          type: integer
          x-order: 5
        replications:
          description: Specifies a list of replications in this failover.
          items:
            $ref: '#/components/schemas/FailoverReplication'
          nullable: true
          type: array
          x-order: 6
      type: object
    FailoverCreateRunResponse:
      description: Specifies the response upon creating a special run during failover
        workflow.
      example:
        failoverId: failoverId
      properties:
        failoverId:
          description: Specifies the unique failover Id which will be generated by
            orchestrator. This Id will be used to uniquely identify current failover
            operation.
          nullable: true
          type: string
          x-order: 0
      type: object
    FailoverObject:
      description: Specifies the details about the objects being failed over.
      example:
        objectId: 0
      properties:
        objectId:
          description: Specifies the object Id involved in failover operation.
          format: int64
          nullable: true
          type: integer
          x-order: 0
      required:
      - objectId
      title: Failover Objects
      type: object
    FailoverReplicaCluster:
      description: Specifies the details about replication cluster involved in the
        failover operation.
      example:
        protectionGroupId: protectionGroupId
        objects:
        - objectId: 0
        - objectId: 0
      properties:
        objects:
          description: Specifies the details about the objects being failed over.
            In case if view based orchastrator is calling this then they should pass
            a object id for replicated view entity which belongs to the live tracking
            view on replication cluster.
          items:
            $ref: '#/components/schemas/FailoverObject'
          nullable: true
          type: array
          x-order: 0
        protectionGroupId:
          description: Specifies the protection group id from the replication cluster
            from where the objects being failed over. If this is not specified then
            it will be infer from the list of objects being failed over. The protection
            group id must be specified in this format <cluster_id>:<cluster_incarnation_id:jobid>
          nullable: true
          type: string
          x-order: 1
      required:
      - objects
      title: Failover source cluster.
      type: object
    FailoverReplication:
      description: Specifies the details of a failover replication.
      example:
        endTimeUsecs: 5
        physicalBytesTransferred: 9
        logicalBytesTransferred: 7
        percentageCompleted: 5
        logicalSizeBytes: 2
        targetClusterIncarnationId: 2
        errorMessage: errorMessage
        id: id
        startTimeUsecs: 1
        targetClusterId: 3
        status: Running
        targetClusterName: targetClusterName
      properties:
        id:
          description: Specifies the replication id.
          nullable: true
          type: string
          x-order: 0
        status:
          description: Specifies the replication status.
          enum:
          - Running
          - Succeeded
          - Failed
          nullable: true
          type: string
          x-order: 1
        errorMessage:
          description: Specifies the error details if replication status is 'Failed'.
          nullable: true
          type: string
          x-order: 2
        startTimeUsecs:
          description: Specifies the replication start time in micro seconds.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        endTimeUsecs:
          description: Specifies the replication complete time in micro seconds.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        percentageCompleted:
          description: Specifies the percentage completed in the replication.
          format: int32
          nullable: true
          type: integer
          x-order: 5
        logicalSizeBytes:
          description: Specifies the total amount of logical data to be transferred
            for this replication.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        logicalBytesTransferred:
          description: Specifies the number of logical bytes transferred for this
            replication so far. This value can never exceed the total logical size
            of the replicated view.
          format: int64
          nullable: true
          type: integer
          x-order: 7
        physicalBytesTransferred:
          description: Specifies the number of bytes sent over the wire for this replication
            so far.
          format: int64
          nullable: true
          type: integer
          x-order: 8
        targetClusterId:
          description: Specifies the failover target cluster id.
          format: int64
          nullable: true
          type: integer
          x-order: 9
        targetClusterIncarnationId:
          description: Specifies the failover target cluster incarnation id.
          format: int64
          nullable: true
          type: integer
          x-order: 10
        targetClusterName:
          description: Specifies the failover target cluster name.
          nullable: true
          type: string
          x-order: 11
      type: object
    FailoverRunConfiguration:
      description: Specifies the configuration required for execting special run as
        a part of failover workflow. This special run is triggered during palnned
        failover to sync the source cluster to replication cluster with minimum possible
        delta. Please note that if this object is passed then this special run will
        ignore the other archivals and retention settings.
      example:
        protectionGroupId: protectionGroupId
        viewId: 6
        runType: kAll
        cancelNonFailoverRuns: true
        objects:
        - objectId: 0
        - objectId: 0
        pauseNextRuns: true
        replicationClusterId: 0
      properties:
        replicationClusterId:
          description: Specifies the replication cluster Id where planned run will
            replicate objects.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        objects:
          description: Specifies the list of all local entity ids of all the objects
            being failed from the source cluster.
          items:
            $ref: '#/components/schemas/FailoverObject'
          nullable: true
          type: array
          x-order: 1
        protectionGroupId:
          description: Specifies the active protection group id on the source cluster
            from where the objects are being failed over.
          nullable: true
          type: string
          x-order: 2
        runType:
          description: Specifies the type of the backup run to be triggered by this
            request. If this is not set defaults to incremental backup.
          enum:
          - kAll
          - kLog
          - kSystem
          - kIncremental
          - kFull
          type: string
          x-order: 3
        viewId:
          description: If failover is initiated by view based orchastrator, then this
            field specifies the local view id of source cluster which is being failed
            over.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        cancelNonFailoverRuns:
          description: If set to true, other ongoing runs backing up the same set
            of entities being failed over will be initiated for cancellation. Non
            conflicting run operations such as replications to other clusters, archivals
            will not be cancelled. If set to false, then new run will wait for all
            the pending operations to finish normally before scheduling a new backup/replication.
          nullable: true
          type: boolean
          x-order: 5
        pauseNextRuns:
          description: If this is set to true then unless failover operation is completed,
            all the next runs will be pasued.
          nullable: true
          type: boolean
          x-order: 6
      required:
      - objects
      - protectionGroupId
      - replicationClusterId
      type: object
    FailoverRunsResponse:
      description: Specifies the response upon creating a special run during failover
        workflow.
      example:
        failoverPlannedRuns:
        - protectionGroupId: protectionGroupId
          waitingOnOtherRunCancellations: true
          failoverId: failoverId
          runId: runId
        - protectionGroupId: protectionGroupId
          waitingOnOtherRunCancellations: true
          failoverId: failoverId
          runId: runId
      properties:
        failoverPlannedRuns:
          description: Specifies the list of planned runs created during various planeed
            failover workflows. Each planned run is uniqely identified by falioverId
            and runId.
          items:
            $ref: '#/components/schemas/PlannedRunPollStatus'
          nullable: true
          type: array
          x-order: 0
      type: object
    FailoverSourceCluster:
      description: Specifies the details about source cluster involved in the failover
        operation.
      example:
        protectionGroupId: protectionGroupId
        viewId: 5
        id: 1
        incarnationId: 5
      properties:
        id:
          description: Specifies the source cluster Id involved in failover operation.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        incarnationId:
          description: Specifies the source cluster incarnation Id involved in failover
            operation.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 1
        protectionGroupId:
          description: Specifies the protection group Id involved in failover operation.
          nullable: true
          readOnly: true
          type: string
          x-order: 2
        viewId:
          description: If failover is initiated by view based orchastrator, then this
            field specifies the local view id of source cluster which is being failed
            over.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 3
      required:
      - id
      title: Failover source cluster.
      type: object
    FallbackUserIdMappingParams:
      description: Specifies a fallback param for Unix and Windows users mapping.
      properties:
        type:
          description: Specifies the type of the mapping.
          enum:
          - Rid
          - Fixed
          type: string
          x-order: 0
        fixedTypeParams:
          allOf:
          - $ref: '#/components/schemas/AdFixedTypeParams'
          - type: object
            x-nullable: true
          description: Specifies the params for Fixed mapping type mapping.
          nullable: true
          type: object
          x-order: 1
      required:
      - type
      type: object
    FeatureFlag:
      description: Describes the feature flag struct.
      properties:
        name:
          description: Name of the feature flag.
          nullable: true
          type: string
          x-order: 0
        isUiFeature:
          description: Bool to denote if it's a UI feature.
          nullable: true
          type: boolean
          x-order: 1
        isApproved:
          description: Bool to approval status of feature flag.
          nullable: true
          type: boolean
          x-order: 2
        reason:
          description: Reason for the feature flag override status.
          nullable: true
          type: string
          x-order: 3
        timestamp:
          description: Timestamp in secs when the override is done.
          format: int64
          nullable: true
          type: integer
          x-order: 4
      title: Feature Flag struct.
      type: object
    FeatureFlagList:
      description: Specifies list of feature flags.
      items:
        $ref: '#/components/schemas/FeatureFlag'
      title: List of feature flags
      type: array
    File:
      allOf:
      - $ref: '#/components/schemas/File_allOf'
      - $ref: '#/components/schemas/TagObject'
      description: Specifies a File.
      title: File
    FileCount:
      description: Specifies the number of files with provided size range.
      example:
        lowerSizeBytes: 2
        upperSizeBytes: 7
        count: 9
      properties:
        lowerSizeBytes:
          description: Specifies the lower bound of file size in bytes. This value
            is inclusive.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        upperSizeBytes:
          description: Specifies the upper bound of file size in bytes. This value
            is exclusive.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        count:
          description: Specifies the number of files with size in this range.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      type: object
    FileExtensionFilter:
      properties:
        fileExtensionsList:
          description: The list of file extensions to apply
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
        isEnabled:
          description: If set, it enables the file extension filter
          nullable: true
          type: boolean
          x-order: 1
        mode:
          description: |-
            The mode applied to the list of file extensions
            'Whitelist' indicates a whitelist extension filter.
            'Blacklist' indicates a blacklist extension filter.
          enum:
          - Whitelist
          - Blacklist
          nullable: true
          type: string
          x-order: 2
      type: object
    FileFilteringPolicy:
      description: |-
        Specifies a set of filters for a file based Protection Group.
        These values are strings which can represent a prefix or suffix.
        Example: '/tmp' or '*.mp4'. For file based Protection Groups, all files
        under prefixes specified by the 'includeFilters' list will be protected
        unless they are explicitly excluded by the 'excludeFilters' list.
      properties:
        includeList:
          description: Specifies the list of included files for this Protection Group.
          items:
            type: string
          type: array
          x-order: 0
        excludeList:
          description: |-
            Specifies the list of excluded files for this protection
            Protection Group. Exclude filters have a higher priority than include
            filters.
          items:
            type: string
          type: array
          x-order: 1
      type: object
    FileFolderInfo:
      description: Specifies information of the contents (files and folders).
      example:
        environment: kVMware
        hdfsParams:
        - path: path
          name: name
          lastModifiedTimeUsecs: 0
          type: File
          sizeBytes: 6
        - path: path
          name: name
          lastModifiedTimeUsecs: 0
          type: File
          sizeBytes: 6
        paginationInfo:
          cookie: cookie
      properties:
        environment:
          description: Specifies the environment of the object.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kKVM
          - kAWS
          - kAcropolis
          - kGCP
          - kPhysical
          - kPhysicalFiles
          - kIsilon
          - kNetapp
          - kGenericNas
          - kFlashBlade
          - kElastifile
          - kGPFS
          - kPure
          - kNimble
          - kSQL
          - kOracle
          - kExchange
          - kAD
          - kView
          - kO365
          - kHyperFlex
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          nullable: true
          type: string
          x-go-name: Environment
          x-order: 0
        hdfsParams:
          description: Specifies the parameters for Hdfs.
          items:
            $ref: '#/components/schemas/HdfsFileFolderParams'
          type: array
          x-order: 1
        paginationInfo:
          $ref: '#/components/schemas/PaginationInfo'
      title: Contents information
      type: object
    FileLevelDataLockConfig:
      description: |-
        Specifies a config to lock files in a view - to protect from malicious or
        an accidental attempt to delete or modify the files in this view.
      properties:
        autoLockAfterDurationIdleMsecs:
          description: |-
            Specifies the duration to lock a file that has not been accessed or
            modified (ie. has been idle) for a certain duration of time in
            milliseconds. Do not set if it is required to disable auto lock.
          format: uint64
          nullable: true
          type: integer
          x-order: 0
        defaultRetentionDurationMsecs:
          description: |-
            Specifies a global default retention duration for files in this view, if
            file lock is enabled for this view. Also, it is a required field if file
            lock is enabled. Set to -1 if the required default retention period is
            forever.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        expiryTimestampMsecs:
          description: Specifies a definite timestamp in milliseconds for retaining
            the file.
          format: uint64
          nullable: true
          type: integer
          x-order: 2
        lockingProtocol:
          description: |-
            Specifies the supported mechanisms to explicity lock a file from NFS/SMB
            interface. Supported locking protocols: SetReadOnly, SetAtime.
            'SetReadOnly' is compatible with Isilon/Netapp behaviour. This locks the
            file and the retention duration is determined in this order:
            1) atime, if set by user/application and within min and max retention
            duration.
            2) Min retention duration, if set.
            3) Otherwise, file is switched to expired data automatically.
            'SetAtime' is compatible with Data Domain behaviour.
          enum:
          - SetReadOnly
          - SetAtime
          nullable: true
          type: string
          x-order: 3
        maxRetentionDurationMsecs:
          description: |-
            Specifies a maximum duration in milliseconds for which any file in this
            view can be retained for. Set to -1 if the required retention duration is
            forever. If set, it should be greater than or equal to the default
            retention period as well as the min retention period.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        minRetentionDurationMsecs:
          description: |-
            Specifies a minimum retention duration in milliseconds after a file gets
            locked. The file cannot be modified or deleted during this timeframe. Set
            to -1 if the required retention duration is forever. This should be set
            less than or equal to the default retention duration.
          format: int64
          nullable: true
          type: integer
          x-order: 5
        mode:
          description: |-
            Specifies the mode of file level datalock.
            Enterprise mode can be upgraded to Compliance mode, but Compliance mode
            cannot be downgraded to Enterprise mode.
            Compliance: This mode would disallow all user to delete/modify file or
            view under any condition when it 's in locked status except for deleting
            view when the view is empty.
            Enterprise: This mode would follow the rules as compliance mode for
            normal users. But it would allow the storage admin
            (1) to delete view or file anytime no matter
            it is in locked status or expired.
            (2) to rename the view
            (3) to bring back the retention period when it's in locked mode
            A lock mode of a file in a view can be in one of the following:
            'Compliance': Default mode of datalock, in this mode, Data Security Admin
            cannot modify/delete this view when datalock is in effect. Data Security
            Admin can delete this view when datalock is expired.
            'kEnterprise' : In this mode, Data Security Admin can change view name or
            delete view when datalock is in effect. Datalock in this mode can be
            upgraded to 'Compliance' mode.
          enum:
          - Compliance
          - Enterprise
          nullable: true
          type: string
          x-order: 6
      title: File Level Data Lock Configurations.
      type: object
    FileOperation:
      example:
        filePath: filePath
        operation: kAdded
      properties:
        filePath:
          type: string
          x-order: 0
        operation:
          enum:
          - kAdded
          - kDeleted
          type: string
          x-order: 1
      required:
      - filePath
      - operation
      type: object
    FileSizePolicy:
      description: |-
        Specifies the file's selection rule by file size eg.
        1. select files greather than 10 Bytes.
        2. select files less than 20 TiB.
        3. select files greather than 5 MiB.
        type: object
      properties:
        condition:
          description: Specifies condition for the file selection.
          enum:
          - GreaterThan
          - SmallerThan
          nullable: true
          type: string
          x-order: 0
        nBytes:
          description: Specifies the number of bytes.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    FileSizeRuleCondition:
      description: Data tiering task file size rule condition type.
      properties:
        type:
          description: Specifies the data tiering task file size rule condition type.
          enum:
          - GreaterThan
          - SmallerThan
          type: string
          x-order: 0
      title: Data tiering task file size rule condition type.
      type: object
    FileType:
      description: Describes file types.
      properties:
        enum:
          description: Specifies the file type
          enum:
          - File
          - Directory
          - Symlink
          type: string
          x-order: 0
      title: File Type.
      type: object
    FilenamePatternToDirectory:
      description: Specifies a filename pattern and the directory path where to keep
        files matching that pattern.
      properties:
        directory:
          description: Specifies the directory where to keep the files matching the
            pattern.
          nullable: true
          type: string
          x-order: 0
        filenamePattern:
          description: |-
            Specifies a pattern to be matched with filenames. This can be a
            regex expression.
          nullable: true
          type: string
          x-order: 1
      title: Filename Pattern to Directory.
      type: object
    FilerAuditLogConfigs:
      description: Specifies the filer audit log configs.
      example:
        smbMountPaths:
        - smbMountPaths
        - smbMountPaths
        subnetWhitelist:
        - netmaskBits: 5
          smbAccess: kDisabled
          component: component
          s3Access: kDisabled
          ip: ip
          nfsAccess: kDisabled
          nfsSquash: kNone
          description: description
          id: 1
          gateway: gateway
          netmaskIp4: netmaskIp4
        - netmaskBits: 5
          smbAccess: kDisabled
          component: component
          s3Access: kDisabled
          ip: ip
          nfsAccess: kDisabled
          nfsSquash: kNone
          description: description
          id: 1
          gateway: gateway
          netmaskIp4: netmaskIp4
        nfsMountPaths:
        - nfsMountPaths
        - nfsMountPaths
        overrideGlobalSubnetWhitelist: true
        nfsMountPath: nfsMountPath
        sharePermissions:
        - mode: FolderSubFoldersAndFiles
          specialAccessMask: 6
          access: ReadOnly
          specialType: 0
          type: Allow
          sid: sid
        - mode: FolderSubFoldersAndFiles
          specialAccessMask: 6
          access: ReadOnly
          specialType: 0
          type: Allow
          sid: sid
      properties:
        sharePermissions:
          description: Specifies a list of share level permissions.
          items:
            $ref: '#/components/schemas/SmbPermission'
          nullable: true
          type: array
          x-order: 0
        subnetWhitelist:
          description: Specifies a list of Subnets with IP addresses that have permissions
            to access a Cohesity View containing filer audit logs.
          items:
            $ref: '#/components/schemas/Subnet'
          nullable: true
          type: array
          x-order: 1
        overrideGlobalSubnetWhitelist:
          description: Specifies whether view level client subnet whitelist overrides
            cluster and global setting.
          nullable: true
          type: boolean
          x-order: 2
        smbMountPaths:
          description: Specifies a list of SMB mount paths of a Cohesity View containing
            filer audit logs.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
          x-order: 3
        nfsMountPath:
          description: This field is currently deprecated. Please use NFS MountPaths
            which would be an array of strings.
          nullable: true
          readOnly: true
          type: string
          x-order: 4
        nfsMountPaths:
          description: Specifies a list of NFS mount paths of a Cohesity View containing
            filer audit logs.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
          x-order: 5
      type: object
    Files:
      description: Specifies the indexed files.
      items:
        $ref: '#/components/schemas/File'
      type: array
    FilesAndFoldersObject:
      description: Specifies a file or folder to download.
      example:
        absolutePath: absolutePath
        isDirectory: true
      properties:
        absolutePath:
          description: Specifies the absolute path of the file or folder.
          nullable: true
          type: string
          x-order: 0
        isDirectory:
          description: Specifies whether the file or folder object is a directory.
          nullable: true
          type: boolean
          x-order: 1
      required:
      - absolutePath
      type: object
    Filter:
      description: Specifies the filter details.
      example:
        filterString: filterString
        isRegularExpression: false
      properties:
        filterString:
          description: Specifies the filter string using wildcard supported strings
            or regular expressions.
          nullable: true
          type: string
          x-order: 0
        isRegularExpression:
          default: false
          description: Specifies whether the provided filter string is a regular expression
            or not. This needs to be explicitly set to true if user is trying to filter
            by regular expressions. Not providing this value in case of regular expression
            can result in unintended results. The default value is assumed to be false.
          nullable: true
          type: boolean
          x-order: 1
      type: object
    FilterDocumentsParams:
      description: Specifies the parameters to filter documents to be restored.
      properties:
        documentFilterType:
          description: Specifies the filter type for Documents to be restored.
          enum:
          - NONE
          - ID
          - CONTENT
          nullable: true
          type: string
          x-order: 0
        idRegex:
          description: A regular expression to match Documents ID's to be restored.
          nullable: true
          type: string
          x-order: 1
        filterExpression:
          description: A filter expression to match Documents content to be restored.
          nullable: true
          type: string
          x-order: 2
      required:
      - documentFilterType
      title: Recover Couchbase Object Params.
      type: object
    FilterIpConfig:
      description: Specifies the list of IP addresses that are allowed or denied during
        recovery. Allowed IPs and Denied IPs cannot be used together.
      properties:
        deniedIpAddresses:
          description: Specifies the IP addresses that should not be used during recovery
            recovery. Cannot be set if allowedIpAddresses is set.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
        allowedIpAddresses:
          description: Specifies the IP addresses that should be used exclusively
            during recovery. Cannot be set if deniedIpAddresses is set.
          items:
            type: string
          nullable: true
          type: array
          x-order: 1
      title: Filter IP Configuration
      type: object
    FilterObjectsRequest:
      description: Specifies the filter details.
      example:
        applicationEnvironment: kSQL
        includeTenants: false
        filters:
        - filterString: filterString
          isRegularExpression: false
        - filterString: filterString
          isRegularExpression: false
        filterType: exclude
        tenantIds:
        - tenantIds
        - tenantIds
        objectIds:
        - 0
        - 0
      properties:
        filterType:
          description: Specifies the type of filtering user wants to perform. Currently,
            we only support exclude type of filter.
          enum:
          - exclude
          nullable: true
          type: string
          x-order: 0
        filters:
          description: Specifies the list of filters that need to be applied on given
            list of discovered objects.
          items:
            $ref: '#/components/schemas/Filter'
          minItems: 1
          nullable: true
          type: array
          x-order: 1
        objectIds:
          description: Specifies a list of non leaf object ids to filter the leaf
            level objects. Non leaf object such host (physical or vm) or database
            instance can be specified.
          items:
            format: int64
            type: integer
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-order: 2
        applicationEnvironment:
          description: Specifies the type of application enviornment needed for filtering
            to be applied on. This is needed because in case of applications like
            SQL, Oracle, a single source can contain multiple application enviornments.
          enum:
          - kSQL
          nullable: true
          type: string
          x-order: 3
        tenantIds:
          description: TenantIds contains list of the tenant for which objects are
            to be returned.
          items:
            type: string
          nullable: true
          type: array
          x-order: 4
        includeTenants:
          default: false
          description: If true, the response will include objects which belongs to
            all tenants which the current user has permission to see. Default value
            is false.
          nullable: true
          type: boolean
          x-order: 5
      required:
      - filterType
      - filters
      - objectIds
      type: object
    FilteredObject:
      description: Specifies the filter details.
      example:
        sourceId: 6
        id: 0
      properties:
        id:
          description: Specifies object id.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        sourceId:
          description: Specifies the source id to which this object belongs to.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    FilteredObjectsResponseBody:
      description: Specifies the filter details.
      example:
        filteredObjects:
        - sourceId: 6
          id: 0
        - sourceId: 6
          id: 0
      properties:
        filteredObjects:
          description: Specifies the list of filtered Objects.
          items:
            $ref: '#/components/schemas/FilteredObject'
          nullable: true
          type: array
          x-order: 0
      type: object
    FixedIssue:
      description: Specifies the description of a fixed issue.
      example:
        id: 5
        releaseNote: releaseNote
      properties:
        id:
          description: Specifies a unique number of the bug.
          format: int64
          type: integer
          x-order: 0
        releaseNote:
          description: Specifies the description of fix made for the issue.
          type: string
          x-order: 1
      title: Fixed Issue.
      type: object
    FlashBladeRegistrationInfo:
      description: Specifies the information specific to flashblade registration.
      properties:
        ip:
          description: Specifies management ip of pure flashblade server.
          nullable: true
          type: string
          x-order: 0
        apiToken:
          description: Specifies the api token of the pure flashblade.
          nullable: true
          type: string
          x-order: 1
      required:
      - apiToken
      type: object
    FlashbladeObjectParams:
      description: Specifies the common parameters for Flashblade objects.
      properties:
        supportedNasMountProtocols:
          description: Specifies a list of NAS mount protocols supported by this object.
          items:
            enum:
            - kNfs
            - kCifs2
            - kHttp
            type: string
          nullable: true
          type: array
          x-order: 0
      type: object
    FlashbladeObjectProtectionParams:
      description: Specifies the parameters which are specific to Flashblade object
        protection.
      properties:
        protocol:
          description: Specifies the protocol of the NAS device being backed up.
          enum:
          - kNoProtocol
          - kNfs3
          - kNfs4_1
          - kCifs1
          - kCifs2
          - kCifs3
          nullable: true
          type: string
          x-order: 0
      type: object
    FlashbladeObjectProtectionRequestParams:
      allOf:
      - $ref: '#/components/schemas/ElastifileObjectProtectionRequestParams_allOf'
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      - $ref: '#/components/schemas/FlashbladeObjectProtectionParams'
      description: Specifies the parameters which are specific to Flashblade object
        protection.
    FlashbladeObjectProtectionResponseParams:
      allOf:
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      - $ref: '#/components/schemas/FlashbladeObjectProtectionParams'
      description: Specifies the parameters which are specific to Flashblade object
        protection.
    FlashbladeObjectProtectionUpdateRequestParams:
      allOf:
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      - $ref: '#/components/schemas/FlashbladeObjectProtectionParams'
      description: Specifies the update parameters which are specific to Flashblade
        object protection.
    FlashbladeParams:
      description: Specifies the information related to Registered Pure Flashblade.
      properties:
        registrationParams:
          $ref: '#/components/schemas/FlashBladeRegistrationInfo'
        uuid:
          description: Specifies uuid of the pure flashblade server.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        assignedDataVips:
          description: Specifies list of data vips that are assigned to cohesity cluster
            to create nfs share mountpoints.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
          x-order: 2
        assignedCapacityBytes:
          description: Specifies the capacity in bytes assigned on pure flashblade
            for remote storage usage on cohesity cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        isDedicatedStorage:
          description: If true, cohesity cluster uses all available capacity on pure
            flashblade for remote storage.
          nullable: true
          type: boolean
          x-order: 4
        availableDataVips:
          description: Available data vips configured on pure flashblade.
          items:
            nullable: true
            type: string
          readOnly: true
          type: array
          x-order: 5
        availableCapacity:
          description: Available capacity on pure flashblade.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 6
        createdFileSystemCount:
          description: Number of new file systems created on pure flashblade when
            assignedCapacityBytes is updated.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 7
        updatedFileSystemCount:
          description: Number of file systems that are updated on pure flashblade
            when assignedCapacityBytes is updated.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 8
        softwareOsVersion:
          description: Software OS and version running on pure flashblade
          nullable: true
          readOnly: true
          type: string
          x-order: 9
        name:
          description: Name of the pure flashblade specified on pure storage.
          nullable: true
          readOnly: true
          type: string
          x-order: 10
        totalCapacity:
          description: Total capacity of pure flashblade.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 11
      type: object
    FlashbladeProtectionGroupObjectParams:
      description: Specifies an object protected by a Flashblade Protection Group.
      properties:
        id:
          description: Specifies the ID of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      type: object
    FlashbladeProtectionGroupParams:
      description: Specifies the parameters which are specific to Flashblade related
        Protection Groups.
      nullable: true
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/FlashbladeProtectionGroupObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        directCloudArchive:
          description: Specifies whether or not to store the snapshots in this run
            directly in an Archive Target instead of on the Cluster. If this is set
            to true, the associated policy must have exactly one Archive Target associated
            with it and the policy must be set up to archive after every run. Also,
            a Storage Domain cannot be specified. Default behavior is 'false'.
          nullable: true
          type: boolean
          x-order: 1
        nativeFormat:
          description: Specifies whether or not to enable native format for direct
            archive job. This field is set to true if native format should be used
            for archiving.
          nullable: true
          type: boolean
          x-order: 2
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        protocol:
          description: Specifies the preferred protocol to use if this device supports
            multiple protocols.
          enum:
          - kNoProtocol
          - kNfs3
          - kNfs4_1
          - kCifs1
          - kCifs2
          - kCifs3
          nullable: true
          type: string
          x-order: 4
        continueOnError:
          description: Specifies whether or not the Protection Group should continue
            regardless of whether or not an error was encountered.
          nullable: true
          type: boolean
          x-order: 5
        encryptionEnabled:
          description: Specifies whether the protection group should use encryption
            while backup or not.
          nullable: true
          type: boolean
          x-order: 6
        fileLockConfig:
          $ref: '#/components/schemas/FileLevelDataLockConfig'
        fileFilters:
          $ref: '#/components/schemas/FileFilteringPolicy'
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 9
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 10
        prePostScript:
          $ref: '#/components/schemas/HostBasedBackupScriptParams'
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        throttlingConfig:
          $ref: '#/components/schemas/NasThrottlingConfig'
      required:
      - objects
      type: object
      x-nullable: true
    FlashbladeProtocol:
      description: Flashblade Protocol type.
      properties:
        flashbladeProtocol:
          description: Specifies Flashblade Protocol type.
          enum:
          - kNfs
          - kCifs2
          - kHttp
          type: string
          x-order: 0
      title: Flashblade Protocol type.
      type: object
    FlashbladeRegistrationParams:
      description: Specifies parameters to register an Flashblade Source.
      properties:
        endpoint:
          description: Specifies the Hostname or IP Address Endpoint for the Flashblade
            Source.
          nullable: true
          type: string
          x-order: 0
        apiToken:
          description: Specifies the API Token of the Flashblade Source
          nullable: true
          type: string
          x-order: 1
        backUpSMBVolumes:
          description: Specifies whether or not to back up SMB Volumes.
          nullable: true
          type: boolean
          x-order: 2
        smbCredentials:
          $ref: '#/components/schemas/SmbMountCredentials'
        throttlingConfig:
          $ref: '#/components/schemas/NasThrottlingConfig'
      required:
      - endpoint
      title: Flashblade Protection Source.
      type: object
    FleetConfig:
      description: Specifies various resources while deploying fleet params.
      properties:
        fleetSubnetType:
          description: Specifies the subnet type of the fleet.
          enum:
          - kCluster
          - kSourceVM
          - kCustom
          nullable: true
          type: string
          x-order: 0
        fleetNetworkParams:
          allOf:
          - $ref: '#/components/schemas/FleetNetworkParams'
          - type: object
            x-nullable: true
          description: Specifies the network security groups within above VPC.
          nullable: true
          type: object
          x-order: 1
        fleetTags:
          description: Specifies the network security groups within above VPC.
          items:
            $ref: '#/components/schemas/FleetTags'
          nullable: true
          type: array
          x-order: 2
      title: Recover as fleet config.
      type: object
    FleetNetworkParams:
      description: Specifies various network params for the fleet.
      properties:
        vpc:
          description: Specifies vpc for the fleet.
          nullable: true
          type: string
          x-order: 0
        subnet:
          description: Specifies subnet for the fleet.
          nullable: true
          type: string
          x-order: 1
      required:
      - subnet
      - vpc
      title: Fleet Network Params.
      type: object
    FleetSubnetType:
      description: Fleet Subnet Type
      properties:
        fleetSubnetType:
          description: Specifies the fleet type of the subnet.
          enum:
          - kCluster
          - kSourceVM
          - kCustom
          type: string
          x-order: 0
      title: Fleet Subnet Type
      type: object
    FleetTags:
      description: Specifies the fleet tag parameters.
      properties:
        key:
          description: Specifies key for the fleet tag.
          nullable: true
          type: string
          x-order: 0
        value:
          description: Specifies value for the fleet tag.
          nullable: true
          type: string
          x-order: 1
      required:
      - key
      - value
      title: Fleet tags.
      type: object
    FolderItem:
      description: Specifies an email folder to recover.
      properties:
        key:
          description: Specifies the email folder key.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        recoverEntireFolder:
          description: Specifies whether to recover the whole email folder.
          nullable: true
          type: boolean
          x-order: 1
        itemIds:
          description: Specifies a list of item ids to recover. This field is applicable
            only if 'recoverEntireFolder' is false.
          items:
            type: string
          nullable: true
          type: array
          x-order: 2
      required:
      - key
      type: object
    FreeDisk:
      description: Specifies the details of a free disk.
      example:
        path: path
        serialNumber: serialNumber
        sizeInBytes: 6
        location: location
      properties:
        location:
          description: Specifies the location of disk.
          nullable: true
          type: string
          x-order: 0
        serialNumber:
          description: Specifies serial number of disk.
          nullable: true
          type: string
          x-order: 1
        path:
          description: Specifies path of disk.
          nullable: true
          type: string
          x-order: 2
        sizeInBytes:
          description: Size of disk.
          format: int64
          nullable: true
          type: integer
          x-order: 3
      required:
      - serialNumber
      title: FreeDisk
      type: object
    FrequencySchedule:
      description: Specifies settings that define a daily schedule for a Protection
        Policy.
      properties:
        frequency:
          description: 'Specifies a factor to multiply the unit by, to determine the
            backup schedule. <br> Example: If ''frequency'' set to 2 and the unit
            is ''Hours'', then Snapshots are backed up every 2 hours. <br> This field
            is only applicable if unit is ''Minutes'', ''Hours'' or ''Days''.'
          format: int64
          minimum: 1
          nullable: true
          type: integer
          x-order: 0
      required:
      - frequency
      title: Daily Schedule
      type: object
    FullBackupPolicy:
      description: Specifies full backup settings for a Protection Group.
      properties:
        schedule:
          $ref: '#/components/schemas/FullSchedule'
      required:
      - schedule
      title: Full Backup Schedule and Retention.
      type: object
    FullSchedule:
      description: Specifies settings that defines how frequent full backup will be
        performed for a Protection Group.
      properties:
        unit:
          description: 'Specifies how often to start new runs of a Protection Group.
            <br>''Days'' specifies that Protection Group run starts periodically on
            every day. For full backup schedule, currently we only support frequecny
            of 1 which indicates that full backup will be performed daily. <br>''Weeks''
            specifies that new Protection Group runs start weekly on certain days
            specified using ''dayOfWeek'' field. <br>''Months'' specifies that new
            Protection Group runs start monthly on certain day of specific week. This
            schedule needs ''weekOfMonth'' and ''dayOfWeek'' fields to be set. <br>''ProtectOnce''
            specifies that groups using this policy option will run only once and
            after that group will permanently be disabled. <br> Example: To run the
            Protection Group on Second Sunday of Every Month, following schedule need
            to be set: <br> unit: ''Month'' <br> dayOfWeek: ''Sunday'' <br> weekOfMonth:
            ''Second'''
          enum:
          - Days
          - Weeks
          - Months
          - ProtectOnce
          nullable: true
          type: string
          x-order: 0
        daySchedule:
          $ref: '#/components/schemas/DaySchedule'
        weekSchedule:
          $ref: '#/components/schemas/WeekSchedule'
        monthSchedule:
          $ref: '#/components/schemas/MonthSchedule'
      required:
      - unit
      title: Full Schedule
      type: object
    FullScheduleUnit:
      description: Full Schedule Units
      properties:
        fullScheduleUnit:
          description: Specifies the full schedule unit (including ProtectOnce policy).
          enum:
          - Days
          - Weeks
          - Months
          - ProtectOnce
          type: string
          x-order: 0
      title: FullScheduleUnit
      type: object
    GCPArchivalStorageClass:
      description: Specifies the storage class of GCP External Target of archival
        purpose type.
      properties:
        enum:
          description: Specifies the storage class of GCP External Target of archival
            purpose type.
          enum:
          - GCPStandard
          - GCPColdline
          - GCPNearline
          type: string
          x-order: 0
      title: GCP Archival Storage Class
      type: object
    GCPTieringStorageClass:
      description: Specifies the storage class of GCP External Target of tiering purpose
        type.
      properties:
        enum:
          description: Specifies the storage class of GCP External Target of tiering
            purpose type.
          enum:
          - GCPStandard
          type: string
          x-order: 0
      title: GCP Tiering Storage Class
      type: object
    GcpNativeProtectionGroupObjectParams:
      description: Specifies the object parameters to create GCP Native Protection
        Group.
      properties:
        id:
          description: Specifies the id of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the virtual machine.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      title: GCP Native Protection Group Object Params.
      type: object
    GcpNativeProtectionGroupParams:
      description: Specifies the parameters which are specific to GCP related Protection
        Groups using GCP native snapshot APIs. Atlease one of tags or objects must
        be specified.
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/GcpNativeProtectionGroupObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        excludeObjectIds:
          description: Specifies the objects to be excluded in the Protection Group.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          uniqueItems: true
          x-order: 1
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 3
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 4
      title: GCP Native Protection Group Request Params.
      type: object
    GcpProtectionGroupParams:
      description: Specifies the parameters which are specific to GCP related Protection
        Groups.
      properties:
        protectionType:
          description: Specifies the GCP Protection Group type.
          enum:
          - kNative
          type: string
          x-order: 0
        nativeProtectionTypeParams:
          $ref: '#/components/schemas/GcpNativeProtectionGroupParams'
      required:
      - protectionType
      title: GCP Protection Group Request Params.
      type: object
    GcpProtectionGroupType:
      description: GCP Protection Group type.
      properties:
        environment:
          description: Specifies GCP Protection Group type.
          enum:
          - kNative
          type: string
          x-order: 0
      title: GCP Protection Group type.
      type: object
    GcpTargetParamsForRecoverFileAndFolder:
      description: Specifies the parameters for a GCP recovery target.
      properties:
        targetVm:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the target VM to recover files and folders to.
          nullable: true
          type: object
          x-order: 0
        recoverToOriginalPaths:
          description: Specifies whether to recover files to original places.
          nullable: true
          type: boolean
          x-order: 1
        targetVmCredentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          - type: object
            x-nullable: true
          description: Specifies credentials to access the target VM.
          nullable: true
          type: object
          x-order: 2
        alternateBaseDirectory:
          description: Specifies a base directory under which all files and folders
            will be recovered. This is required if recoverToOriginalPaths is set to
            false.
          nullable: true
          type: string
          x-order: 3
        overwriteOriginals:
          description: Specifies whether to override the existing files. Default is
            true.
          nullable: true
          type: boolean
          x-order: 4
        preserveAttributes:
          description: Specifies whether to preserve original attributes. Default
            is true.
          nullable: true
          type: boolean
          x-order: 5
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of files or folders failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 6
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered files
            and folders. If this is not specified, then the VLAN settings will be
            automatically selected from one of the below options: a. If VLANs are
            configured on Cohesity, then the VLAN host/VIP will be automatically based
            on the client''s (e.g. ESXI host) IP address. b. If VLANs are not configured
            on Cohesity, then the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 7
      required:
      - recoverToOriginalPaths
      - targetVm
      - targetVmCredentials
      title: GCP Target Params for Recover File And Folder
      type: object
    GcpTargetParamsForRecoverVm:
      description: Specifies the parameters for a GCP recovery target.
      properties:
        renameRecoveredVmsParams:
          allOf:
          - $ref: '#/components/schemas/RecoveredOrClonedVmsRenameConfig'
          - type: object
            x-nullable: true
          description: Specifies params to rename the VMs that are recovered. If not
            specified, the original names of the VMs are preserved.
          nullable: true
          type: object
          x-order: 0
        recoveryTargetConfig:
          allOf:
          - $ref: '#/components/schemas/GcpVmRecoveryTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the recovery target configuration if recovery has
            to be done to a different location which is different from original source
            or to original Source with different configuration. If not specified,
            then the recovery of the vms will be performed to original location with
            all configuration parameters retained.
          nullable: true
          type: object
          x-order: 1
        powerOnVms:
          description: Specifies whether to power on vms after recovery. If not specified,
            or false, recovered vms will be in powered off state.
          nullable: true
          type: boolean
          x-order: 2
        continueOnError:
          description: Specifies whether to continue recovering other vms if one of
            vms failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 3
      title: GCP Recovery Target Params
      type: object
    GcpVmRecoveryTargetConfig:
      description: Specifies the target object parameters to recover GCP vms.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or an existing Source Target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverGcpVmNewSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the VMs will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
      required:
      - recoverToNewSource
      title: GCP VMs Recovery Target Config.
      type: object
    GcpVpcSubnetConfig:
      description: Specifies the group of a GCP VPC and the subnet in it.
      properties:
        subnetId:
          description: Specifies the id of the subnet.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        subnetName:
          description: Specifies the name of the subnet.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        vpcName:
          description: Specifies the name of the vpc network.
          nullable: true
          readOnly: true
          type: string
          x-order: 2
      required:
      - subnetId
      title: GCP VPC Subnet Config
      type: object
    GenericNasDataTieringParams:
      description: Specifies the parameters which are specific to NAS related Protection
        Groups.
      example:
        sourceId: 6
        objects:
        - name: name
          id: 0
        - name: name
          id: 0
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/ProtectionObjectInput'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        sourceId:
          description: Specifies the id of the root of data tiering source.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      required:
      - objects
      type: object
    GenericNasObjectProtectionRequestParams:
      allOf:
      - $ref: '#/components/schemas/ElastifileObjectProtectionRequestParams_allOf'
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      description: Specifies the parameters which are specific to Generic NAS object
        protection.
    GenericNasObjectProtectionResponseParams:
      allOf:
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      description: Specifies the parameters which are specific to Generic NAS object
        protection.
    GenericNasObjectProtectionUpdateRequestParams:
      allOf:
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      description: Specifies the update parameters which are specific to Generic NAS
        object protection.
    GenericNasProtectionGroupExtraParams:
      description: Specifies the extra parameters which are specific to NAS related
        Protection Groups.
      properties:
        directCloudArchive:
          description: Specifies whether or not to store the snapshots in this run
            directly in an Archive Target instead of on the Cluster. If this is set
            to true, the associated policy must have exactly one Archive Target associated
            with it and the policy must be set up to archive after every run. Also,
            a Storage Domain cannot be specified. Default behavior is 'false'.
          nullable: true
          type: boolean
          x-order: 0
        nativeFormat:
          description: Specifies whether or not to enable native format for direct
            archive job. This field is set to true if native format should be used
            for archiving.
          nullable: true
          type: boolean
          x-order: 1
      type: object
    GenericNasProtectionGroupParams:
      allOf:
      - $ref: '#/components/schemas/GenericNasProtectionGroupParams_allOf'
      - $ref: '#/components/schemas/CommonGenericNasProtectionParams'
      - $ref: '#/components/schemas/GenericNasProtectionGroupExtraParams'
      description: Specifies the parameters which are specific to NAS related Protection
        Groups.
    GenericNasRegistrationParams:
      description: Specifies parameters to register GenericNas MountPoint.
      properties:
        mountPoint:
          description: Specifies the MountPoint for Generic NAS Source.
          nullable: true
          type: string
          x-order: 0
        mode:
          description: |-
            Specifies the mode of the source.
            'kNfs3' indicates NFS mode.
            'kCifs1' indicates SMB mode.
          enum:
          - kNfs3
          - kCifs1
          nullable: true
          type: string
          x-order: 1
        description:
          description: Specifies the Description for Generic NAS Source.
          nullable: true
          type: string
          x-order: 2
        skipValidation:
          description: Specifies if validation has to be skipped while registering
            the mount point.
          nullable: true
          type: boolean
          x-order: 3
        smbMountCredentials:
          $ref: '#/components/schemas/SmbMountCredentials'
        throttlingConfig:
          $ref: '#/components/schemas/NasThrottlingConfig'
      required:
      - mode
      - mountPoint
      title: Generic NAS Protection Source.
      type: object
    GetConnectionBandwidthResponseBody:
      allOf:
      - $ref: '#/components/schemas/GetConnectionBandwidthResponseBody_allOf'
      - $ref: '#/components/schemas/ConnectionBandwidthLimits'
      description: The response body for put and get connection bandwidth.
      title: Get Connection Bandwidth Response Body
    GetCsrListResponseBody:
      description: Specifies the list of CSRs.
      items:
        $ref: '#/components/schemas/CommonCsrResponseParams'
      nullable: true
      title: Get CSR List response
      type: array
      x-nullable: true
    GetIndexedObjectSnapshotsResponseBody:
      description: Specifies the snapshots of an indexed object.
      example:
        snapshots:
        - protectionGroupId: protectionGroupId
          storageDomainId: 6
          protectionGroupName: protectionGroupName
          runType: kRegular
          indexedObjectName: indexedObjectName
          inodeId: 5
          objectSnapshotid: objectSnapshotid
          snapshotTimestampUsecs: 0
          lastModifiedTimeUsecs: 2
          externalTargetInfo: '{}'
          attempts: 1
          sizeBytes: 5
        - protectionGroupId: protectionGroupId
          storageDomainId: 6
          protectionGroupName: protectionGroupName
          runType: kRegular
          indexedObjectName: indexedObjectName
          inodeId: 5
          objectSnapshotid: objectSnapshotid
          snapshotTimestampUsecs: 0
          lastModifiedTimeUsecs: 2
          externalTargetInfo: '{}'
          attempts: 1
          sizeBytes: 5
      properties:
        snapshots:
          description: Specifies a list of snapshots containing the indexed object.
          items:
            $ref: '#/components/schemas/IndexedObjectSnapshot'
          nullable: true
          type: array
          x-order: 0
      type: object
    GetMcmObjectsActivityReqParams:
      description: Specifies the params to filter object activity.
      example:
        objectIdentifiers:
        - regionId: regionId
          clusterId: 0
          clusterIncarnationId: 6
          objectId: 1
        - regionId: regionId
          clusterId: 0
          clusterIncarnationId: 6
          objectId: 1
        toTimeUsecs: 5
        backupRunParams: '{}'
        fromTimeUsecs: 5
        environments:
        - kVMware
        - kVMware
        archivalRunParams:
          runTypes:
          - kRegular
          - kRegular
          protectionEnvironmentTypes:
          - kVMware
          - kVMware
        restoreParams: '{}'
        status: Accepted
        activityTypes:
        - BackupRun
        - BackupRun
      properties:
        objectIdentifiers:
          description: Specifies the list of object identifiers to filter the activity.
          items:
            $ref: '#/components/schemas/McmObjectIdentifier'
          nullable: true
          type: array
          x-order: 0
        environments:
          description: Specifies the list of environments.
          items:
            enum:
            - kVMware
            - kHyperV
            - kAzure
            - kKVM
            - kAWS
            - kAcropolis
            - kGCP
            - kPhysical
            - kPhysicalFiles
            - kIsilon
            - kNetapp
            - kGenericNas
            - kFlashBlade
            - kElastifile
            - kGPFS
            - kPure
            - kNimble
            - kSQL
            - kOracle
            - kExchange
            - kAD
            - kView
            - kO365
            - kHyperFlex
            - kKubernetes
            - kCassandra
            - kMongoDB
            - kCouchbase
            - kHdfs
            - kHive
            - kHBase
            - kUDA
            type: string
          nullable: true
          type: array
          x-order: 1
        status:
          description: Specifies the status of the activity event.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          nullable: true
          type: string
          x-order: 2
        fromTimeUsecs:
          description: Specifies the time in Unix timestamp epoch in microsecond which
            filters all the activity started after this value.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        toTimeUsecs:
          description: Specifies the time in Unix timestamp epoch in microsecond which
            filters all the activity started before this value.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        activityTypes:
          description: Specifies the activity types.
          items:
            enum:
            - BackupRun
            - Restore
            - ArchivalRun
            type: string
          nullable: true
          type: array
          x-order: 5
        backupRunParams:
          allOf:
          - $ref: '#/components/schemas/BackupRunFilterParams'
          - type: object
            x-nullable: true
          description: Specifies the additional filters in case activity type is set
            to 'BackupRun'.
          nullable: true
          type: object
          x-order: 6
        archivalRunParams:
          $ref: '#/components/schemas/ArchivalRunFilterParams'
        restoreParams:
          allOf:
          - $ref: '#/components/schemas/RestoreFilterParams'
          - type: object
            x-nullable: true
          description: Specifies the additional filters in case activity type is set
            to 'Restore'.
          nullable: true
          type: object
          x-order: 8
      title: Request parameters to filter Object activity
      type: object
    GetObjectRunsResponseBody:
      description: Specifies the response body of the get object run request.
      example:
        paginationInfo:
          cookie: cookie
        protectionRuns:
        - null
        - null
      properties:
        protectionRuns:
          description: Specifies the protection runs of the given object.
          items:
            $ref: '#/components/schemas/ObjectProtectionRunSummary'
          type: array
          x-order: 0
        paginationInfo:
          $ref: '#/components/schemas/PaginationInfo'
      title: Get Object Run Response Body.
      type: object
    GetObjectSnapshotsResponseBody:
      description: Specifies the list of object snapshots.
      example:
        snapshots:
        - sourceId: 7
          storageDomainId: 5
          protectionGroupName: protectionGroupName
          runType: kRegular
          externalTargetInfo: '{}'
          clusterId: 9
          clusterIncarnationId: 3
          protectionGroupId: protectionGroupId
          runInstanceId: 0
          netappParams: '{}'
          genericNasParams: '{}'
          indexingStatus: InProgress
          id: id
          hasDataLock: true
          objectId: 2
          flashbladeParams: '{}'
          protectionGroupRunId: protectionGroupRunId
          onLegalHold: true
          isilonParams: '{}'
          hypervParams: '{}'
          azureParams: '{}'
          gpfsParams: '{}'
          expiryTimeUsecs: 5
          snapshotTargetType: Local
          environment: kVMware
          physicalParams: '{}'
          runStartTimeUsecs: 6
          regionId: regionId
          awsParams: '{}'
          elastifileParams: '{}'
          snapshotTimestampUsecs: 1
          objectName: objectName
          sourceGroupId: sourceGroupId
        - sourceId: 7
          storageDomainId: 5
          protectionGroupName: protectionGroupName
          runType: kRegular
          externalTargetInfo: '{}'
          clusterId: 9
          clusterIncarnationId: 3
          protectionGroupId: protectionGroupId
          runInstanceId: 0
          netappParams: '{}'
          genericNasParams: '{}'
          indexingStatus: InProgress
          id: id
          hasDataLock: true
          objectId: 2
          flashbladeParams: '{}'
          protectionGroupRunId: protectionGroupRunId
          onLegalHold: true
          isilonParams: '{}'
          hypervParams: '{}'
          azureParams: '{}'
          gpfsParams: '{}'
          expiryTimeUsecs: 5
          snapshotTargetType: Local
          environment: kVMware
          physicalParams: '{}'
          runStartTimeUsecs: 6
          regionId: regionId
          awsParams: '{}'
          elastifileParams: '{}'
          snapshotTimestampUsecs: 1
          objectName: objectName
          sourceGroupId: sourceGroupId
      properties:
        snapshots:
          description: Specifies the list of snapshots.
          items:
            $ref: '#/components/schemas/ObjectSnapshot'
          nullable: true
          type: array
          x-order: 0
      title: Object Snapshots.
      type: object
    GetPITRangesProtectedObjectResponseBody:
      allOf:
      - $ref: '#/components/schemas/CommonPITRangesProtectedObjectResponse'
      - $ref: '#/components/schemas/GetPITRangesProtectedObjectResponseBody_allOf'
      description: Specifies the points in time available for restore as a set of
        one or more time ranges. If the number of available ranges exceeds 1000, then
        the latest 1000 will be returned.
      title: Points in time for restore
    GetProtectedObjectResponse:
      description: Specifies the protected objects response.
      example: {}
      properties:
        object:
          $ref: '#/components/schemas/ProtectedObjectInfo'
      type: object
    GetProtectedObjectsResponse:
      description: Specifies the protected objects response.
      example:
        objects:
        - null
        - null
        paginationInfo:
          cookie: cookie
      properties:
        objects:
          description: Specifies the protected object backup configuration and lastRun
            details if it has happned.
          items:
            $ref: '#/components/schemas/ProtectedObjectInfo'
          nullable: true
          type: array
          x-order: 0
        paginationInfo:
          $ref: '#/components/schemas/PaginationInfo'
      type: object
    GetProtectionRunProgressBody:
      description: Specifies the progress of a protection run.
      example:
        archivalRun:
        - null
        - null
        replicationRun:
        - null
        - null
      properties:
        localRun:
          $ref: '#/components/schemas/BackupRunProgressInfo'
        archivalRun:
          description: Progress for the archival run.
          items:
            $ref: '#/components/schemas/ArchivalTargetProgressInfo'
          nullable: true
          type: array
          x-order: 1
        replicationRun:
          description: Progress for the replication run.
          items:
            $ref: '#/components/schemas/ReplicationTargetProgressInfo'
          nullable: true
          type: array
          x-order: 2
      type: object
    GetProtectionRunsStatusResponseBody:
      description: Specifies a list of protection runs stats taken at different time.
      example:
        protectionRunsStatsList:
        - stats:
          - protectionRunsCount: 6
            protectionRunStatus: Running
          - protectionRunsCount: 6
            protectionRunStatus: Running
          timestamp: 0
        - stats:
          - protectionRunsCount: 6
            protectionRunStatus: Running
          - protectionRunsCount: 6
            protectionRunStatus: Running
          timestamp: 0
      properties:
        protectionRunsStatsList:
          description: Specifies a list of protection runs stats taken at different
            time.
          items:
            $ref: '#/components/schemas/ProtectionRunsStatsList'
          nullable: true
          type: array
          x-order: 0
      type: object
    GetTagsResult:
      description: List tags result
      items:
        $ref: '#/components/schemas/Tag'
      title: List tags result.
      type: array
    GetViewFailoverResponseBody:
      description: Specifies planned failovers and unplanned failovers of a view.
      example:
        failovers:
        - endTimeUsecs: 6
          replications:
          - endTimeUsecs: 5
            physicalBytesTransferred: 9
            logicalBytesTransferred: 7
            percentageCompleted: 5
            logicalSizeBytes: 2
            targetClusterIncarnationId: 2
            errorMessage: errorMessage
            id: id
            startTimeUsecs: 1
            targetClusterId: 3
            status: Running
            targetClusterName: targetClusterName
          - endTimeUsecs: 5
            physicalBytesTransferred: 9
            logicalBytesTransferred: 7
            percentageCompleted: 5
            logicalSizeBytes: 2
            targetClusterIncarnationId: 2
            errorMessage: errorMessage
            id: id
            startTimeUsecs: 1
            targetClusterId: 3
            status: Running
            targetClusterName: targetClusterName
          errorMessage: errorMessage
          id: id
          startTimeUsecs: 0
          type: Planned
          status: Running
        - endTimeUsecs: 6
          replications:
          - endTimeUsecs: 5
            physicalBytesTransferred: 9
            logicalBytesTransferred: 7
            percentageCompleted: 5
            logicalSizeBytes: 2
            targetClusterIncarnationId: 2
            errorMessage: errorMessage
            id: id
            startTimeUsecs: 1
            targetClusterId: 3
            status: Running
            targetClusterName: targetClusterName
          - endTimeUsecs: 5
            physicalBytesTransferred: 9
            logicalBytesTransferred: 7
            percentageCompleted: 5
            logicalSizeBytes: 2
            targetClusterIncarnationId: 2
            errorMessage: errorMessage
            id: id
            startTimeUsecs: 1
            targetClusterId: 3
            status: Running
            targetClusterName: targetClusterName
          errorMessage: errorMessage
          id: id
          startTimeUsecs: 0
          type: Planned
          status: Running
      properties:
        failovers:
          description: Specifies a list of failovers.
          items:
            $ref: '#/components/schemas/Failover'
          nullable: true
          type: array
          x-order: 0
      type: object
    GetViewTemplatesResult:
      description: |-
        Specifies the list of view template returned that matched the specified filter
        criteria.
      example:
        Templates:
        - isDefault: true
          compress: true
          defaultTemplateName: Unknown
          name: name
          id: 0
          viewParams: '{}'
          dedup: true
        - isDefault: true
          compress: true
          defaultTemplateName: Unknown
          name: name
          id: 0
          viewParams: '{}'
          dedup: true
      properties:
        Templates:
          description: |-
            Array of view template.
            Specifies the list of view templates returned in this response.
          items:
            $ref: '#/components/schemas/Template'
          nullable: true
          type: array
          x-order: 0
      title: Get view templates Result.
      type: object
    GetViewsResult:
      description: |-
        Specifies the list of Views returned that matched the specified filter
        criteria.
      example:
        lastResult: true
        count: 0
        views:
        - null
        - null
      properties:
        views:
          description: |-
            Array of Views.
            Specifies the list of Views returned in this response.
            The list is sorted by decreasing View ids.
          items:
            $ref: '#/components/schemas/View'
          nullable: true
          type: array
          x-order: 0
        lastResult:
          description: |-
            If false, more Views are available to return. If the number of
            Views to return exceeds the number of Views specified in maxCount
            (default of 1000) of the original GET /public/views request,
            the first set of Views are returned and this field returns false.
            To get the next set of Views, in the next GET /public/views request
            send the last id from the previous viewList.
          nullable: true
          type: boolean
          x-order: 1
        count:
          description: |-
            Number of views returned. This will only be returned if ViewCountOnly is
            set in arguments.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      title: Get Views Result.
      type: object
    GlobalBandwidthSettings:
      description: Specifies the bandwidth setting of the External Target.
      example: {}
      properties:
        archivalParams:
          $ref: '#/components/schemas/ArchivalBandwidthSettings'
        tieringParams:
          $ref: '#/components/schemas/TieringBandwidthSettings'
      title: Global Target Bandwidth Settings
      type: object
    GlobalClusterIdentifier:
      description: Specifies the MCM cluster identifier.
      properties:
        clusterIdentifier:
          description: List of Clusters Identifiers to filter from. The format is
            clusterId:clusterIncarnationId.
          format: int64
          nullable: true
          pattern: ^([0-9]+:[0-9]+)$
          type: string
          x-order: 0
        regionId:
          description: Specifies the region id of the cluster. Only valid for DMaaS
            clusters.
          nullable: true
          type: string
          x-order: 1
      title: MCM OnPrem Cluster Identifier.
      type: object
    GoogleTier:
      allOf:
      - $ref: '#/components/schemas/CommonCloudTierSettings'
      - $ref: '#/components/schemas/GoogleTier_allOf'
      description: Specifies the settings for a Google tier.
    GoogleTieringLevels:
      description: Google Tiering Levels
      properties:
        type:
          description: Google Tiering Levels
          enum:
          - kGoogleStandard
          - kGoogleRegional
          - kGoogleMultiRegional
          - kGoogleNearline
          - kGoogleColdline
          type: string
          x-order: 0
      title: Google Tiering Levels.
      type: object
    GoogleTiers:
      description: Specifies Google tiers.
      properties:
        tiers:
          description: Specifies the tiers that are used to move the archived backup
            from current tier to next tier. The order of the tiers determines which
            tier will be used next for moving the archived backup. The first tier
            input should always be default tier where backup will be acrhived. Each
            tier specifies how much time after the backup will be moved to next tier
            from the current tier.
          items:
            $ref: '#/components/schemas/GoogleTier'
          nullable: true
          type: array
          x-order: 0
      required:
      - tiers
      type: object
    GpfsObjectProtectionParams:
      description: Specifies the parameters which are specific to Gpfs object protection.
      properties:
        protocol:
          description: Specifies the protocol of the NAS device being backed up.
          enum:
          - kNoProtocol
          - kNfs3
          - kNfs4_1
          - kCifs1
          - kCifs2
          - kCifs3
          nullable: true
          type: string
          x-order: 0
      type: object
    GpfsObjectProtectionRequestParams:
      allOf:
      - $ref: '#/components/schemas/ElastifileObjectProtectionRequestParams_allOf'
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      - $ref: '#/components/schemas/GpfsObjectProtectionParams'
      description: Specifies the parameters which are specific to Gpfs object protection.
    GpfsObjectProtectionResponseParams:
      allOf:
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      - $ref: '#/components/schemas/GpfsObjectProtectionParams'
      description: Specifies the parameters which are specific to Gpfs object protection.
    GpfsObjectProtectionUpdateRequestParams:
      allOf:
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      - $ref: '#/components/schemas/GpfsObjectProtectionParams'
      description: Specifies the update parameters which are specific to Gpfs object
        protection.
    GpfsProtectionGroupObjectParams:
      description: Specifies an object protected by a GPFS Protection Group.
      properties:
        id:
          description: Specifies the ID of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      type: object
    GpfsProtectionGroupParams:
      description: Specifies the parameters which are specific to GPFS related Protection
        Groups.
      nullable: true
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/GpfsProtectionGroupObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        directCloudArchive:
          description: Specifies whether or not to store the snapshots in this run
            directly in an Archive Target instead of on the Cluster. If this is set
            to true, the associated policy must have exactly one Archive Target associated
            with it and the policy must be set up to archive after every run. Also,
            a Storage Domain cannot be specified. Default behavior is 'false'.
          nullable: true
          type: boolean
          x-order: 1
        nativeFormat:
          description: Specifies whether or not to enable native format for direct
            archive job. This field is set to true if native format should be used
            for archiving.
          nullable: true
          type: boolean
          x-order: 2
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        protocol:
          description: Specifies the preferred protocol to use if this device supports
            multiple protocols.
          enum:
          - kNoProtocol
          - kNfs3
          - kNfs4_1
          - kCifs1
          - kCifs2
          - kCifs3
          nullable: true
          type: string
          x-order: 4
        continueOnError:
          description: Specifies whether or not the Protection Group should continue
            regardless of whether or not an error was encountered during protection
            group run.
          nullable: true
          type: boolean
          x-order: 5
        encryptionEnabled:
          description: Specifies whether the protection group should use encryption
            while backup or not.
          nullable: true
          type: boolean
          x-order: 6
        fileLockConfig:
          $ref: '#/components/schemas/FileLevelDataLockConfig'
        fileFilters:
          $ref: '#/components/schemas/FileFilteringPolicy'
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 9
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 10
        prePostScript:
          $ref: '#/components/schemas/HostBasedBackupScriptParams'
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        throttlingConfig:
          $ref: '#/components/schemas/NasThrottlingConfig'
      required:
      - objects
      type: object
      x-nullable: true
    GpfsRegistrationParams:
      description: Specifies parameters to register an GPFS Source.
      properties:
        endpoint:
          description: Specifies the Hostname or IP Address Endpoint for the GPFS
            Source.
          nullable: true
          type: string
          x-order: 0
        credentials:
          $ref: '#/components/schemas/Credentials'
        throttlingConfig:
          $ref: '#/components/schemas/NasThrottlingConfig'
      required:
      - credentials
      - endpoint
      title: GPFS Protection Source.
      type: object
    Group:
      description: Specifies a user group object.
      properties:
        name:
          description: Specifies the name of the user group.
          nullable: true
          type: string
          x-order: 0
        sid:
          description: Specifies the sid of the user group.
          nullable: true
          type: string
          x-order: 1
        domain:
          description: Specifies the domain of the user group.
          nullable: true
          type: string
          x-order: 2
      title: User Group
      type: object
    GroupParams:
      allOf:
      - $ref: '#/components/schemas/CreateGroupParams'
      - $ref: '#/components/schemas/GroupParams_allOf'
      description: Specifies a Group.
    Groups:
      description: Specifies a list of Groups.
      example:
        groups:
        - null
        - null
      properties:
        groups:
          description: Specifies the list of Groups.
          items:
            $ref: '#/components/schemas/GroupParams'
          nullable: true
          type: array
          x-order: 0
      type: object
    HBaseAdditionalParams:
      description: Additional params for HBase protection source.
      example:
        zookeeperQuorum:
        - zookeeperQuorum
        - zookeeperQuorum
        dataRootDirectory: dataRootDirectory
        authType: KERBEROS
      properties:
        zookeeperQuorum:
          description: The 'Zookeeper Quorum' for this HBase.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
          x-order: 0
        dataRootDirectory:
          description: The 'Data root directory' for this HBase.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        authType:
          description: Authentication type.
          enum:
          - KERBEROS
          - NONE
          nullable: true
          readOnly: true
          type: string
          x-order: 2
      title: HBAse Additional Params.
      type: object
    HDFSIndexedObject:
      allOf:
      - $ref: '#/components/schemas/CommonIndexedObjectParams'
      - $ref: '#/components/schemas/HDFSIndexedObject_allOf'
      description: Specifies an HDFS indexed object.
      title: HDFSIndexedObject
    HDFSIndexedObjects:
      description: Specifies the indexed HDFS objects.
      items:
        $ref: '#/components/schemas/HDFSIndexedObject'
      type: array
    HDFSOnPremSearchParams:
      allOf:
      - $ref: '#/components/schemas/HdfsSearchParams'
      - $ref: '#/components/schemas/OnPremSourceIds'
      description: Parameters required to search HDFS on a cluster.
      title: HDFSOnPremSearchParams
    HadoopAuthType:
      description: Enumeration of all the Hadoop Authentication types.
      properties:
        HadoopAuthType:
          description: Enumeration of all the Hadoop Authentication types.
          enum:
          - KERBEROS
          - NONE
          type: string
          x-order: 0
      title: Enumeration of all the Hadoop Authentication types.
      type: object
    HadoopConnectionParams:
      description: Specifies the parameters to connect to a seed node and fetch information
        from its config file.
      properties:
        host:
          description: IP or hostname of any host from which the  configuration file
            can be read.
          type: string
          x-order: 0
        configurationDirectory:
          description: The directory containing the application specific config file.
            .
          type: string
          x-order: 1
        sshPasswordCredentials:
          $ref: '#/components/schemas/HadoopConnectionParams_sshPasswordCredentials'
        sshPrivateKeyCredentials:
          $ref: '#/components/schemas/HadoopConnectionParams_sshPrivateKeyCredentials'
      required:
      - configurationDirectory
      - host
      title: Parameters to connect and query hdfs config file.
      type: object
    HbaseIndexedObject:
      allOf:
      - $ref: '#/components/schemas/CommonIndexedObjectParams'
      - $ref: '#/components/schemas/HbaseIndexedObject_allOf'
      description: Specifies an Hbase indexed object.
      title: HbaseIndexedObject
    HbaseIndexedObjects:
      description: Specifies the indexed Hbase objects.
      items:
        $ref: '#/components/schemas/HbaseIndexedObject'
      type: array
    HbaseOnPremSearchParams:
      allOf:
      - $ref: '#/components/schemas/HbaseSearchParams'
      - $ref: '#/components/schemas/OnPremSourceIds'
      description: Parameters required to search Hbase on a cluster.
      title: HbaseOnPremSearchParams
    HbaseParams:
      description: Specifies the recovery options specific to Hbase environment.
      properties:
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverObjects
          type: string
          x-order: 0
        recoverHbaseParams:
          $ref: '#/components/schemas/RecoverHbaseParams'
      required:
      - recoverHbaseParams
      - recoveryAction
      title: Recover Hbase environment params.
      type: object
    HbaseSearchParams:
      description: Specifies the parameters which are specific for searching Hbase
        objects.
      properties:
        searchString:
          description: Specifies the search string to search the Hbase Objects
          nullable: true
          type: string
          x-order: 0
        hbaseObjectTypes:
          description: Specifies one or more Hbase object types be searched.
          items:
            enum:
            - HbaseNamespaces
            - HbaseTables
            type: string
          type: array
          x-order: 1
      required:
      - hbaseObjectTypes
      - searchString
      type: object
    HbaseSourceRegistrationParams:
      allOf:
      - $ref: '#/components/schemas/HBaseAdditionalParams'
      - $ref: '#/components/schemas/HbaseSourceRegistrationParams_allOf'
      description: Specifies parameters to register an HBase source.
      title: Register HBase source request parameters.
    HbaseSourceRegistrationUpdateParams:
      description: Specifies parameters to update registeration of an HBase source.
      properties:
        host:
          description: IP or hostname of any host from which the HBase configuration
            file hbase-site.xml can be read.
          nullable: true
          type: string
          x-order: 0
        configurationDirectory:
          description: The directory containing the hbase-site.xml.
          nullable: true
          type: string
          x-order: 1
        sshPasswordCredentials:
          $ref: '#/components/schemas/HbaseSourceRegistrationParams_allOf_sshPasswordCredentials'
        sshPrivateKeyCredentials:
          $ref: '#/components/schemas/HbaseSourceRegistrationParams_allOf_sshPrivateKeyCredentials'
        kerberosPrincipal:
          description: The kerberos principal to be used to connect to this Hbase
            source.
          nullable: true
          type: string
          x-order: 4
      title: Update HBase source registration parameters.
      type: object
    HdfsAdditionalParams:
      description: Additional params for Hdfs protection source.
      example:
        webhdfsPort: 9
        namenodeAddress: namenodeAddress
        authType: KERBEROS
      properties:
        namenodeAddress:
          description: The HDFS Namenode IP or hostname.
          readOnly: true
          type: string
          x-order: 0
        webhdfsPort:
          description: The HDFS WebHDFS port.
          format: int32
          readOnly: true
          type: integer
          x-order: 1
        authType:
          description: Authentication type.
          enum:
          - KERBEROS
          - NONE
          nullable: true
          readOnly: true
          type: string
          x-order: 2
      title: Hdfs Additional Params.
      type: object
    HdfsBrowseRequestParams:
      properties:
        parentPath:
          description: Specifies the path whose contents are to be returned. The last
            token in the path can be a regex. In this case the regex is applied on
            the contents of the path upto the second-last token and the matching contents
            are returned.
          nullable: true
          type: string
          x-order: 0
      type: object
    HdfsFileFolderParams:
      description: Object details for Hdfs.
      example:
        path: path
        name: name
        lastModifiedTimeUsecs: 0
        type: File
        sizeBytes: 6
      properties:
        name:
          description: Specifies the name.
          nullable: true
          type: string
          x-order: 0
        path:
          description: Specifies the path.
          nullable: true
          type: string
          x-order: 1
        type:
          description: Specifies the type of the contents.
          enum:
          - File
          - Directory
          - Symlink
          type: string
          x-order: 2
        lastModifiedTimeUsecs:
          description: Specifies the last time file was modified in unix timestamp.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        sizeBytes:
          description: Specifies the file size in bytes.
          format: int64
          nullable: true
          type: integer
          x-order: 4
      type: object
    HdfsParams:
      description: Specifies the recovery options specific to HDFS environment.
      properties:
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverObjects
          type: string
          x-order: 0
        recoverHdfsParams:
          $ref: '#/components/schemas/RecoverHdfsParams'
      required:
      - recoverHdfsParams
      - recoveryAction
      title: Recover HDFS environment params.
      type: object
    HdfsProtectionGroupParams:
      description: Specifies the parameters for HDFS Protection Group.
      properties:
        includePaths:
          description: Specifies the paths to be included in the Protection Group.
          items:
            type: string
          minItems: 1
          type: array
          x-order: 0
        excludePaths:
          description: Specifies the paths to be excluded in the Protection Group.
            excludePaths will ovrride includePaths.
          items:
            type: string
          type: array
          x-order: 1
        concurrency:
          description: Specifies the maximum number of concurrent IO Streams that
            will be created to exchange data with the cluster.
          format: int32
          nullable: true
          type: integer
          x-order: 2
        bandwidthMBPS:
          description: Specifies the maximum network bandwidth that each concurrent
            IO Stream can use for exchanging data with the cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        hdfsSourceId:
          description: The object ID of the HDFS source for this protection group.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        sourceId:
          description: Object ID of the Source on which this protection was run .
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 5
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        sourceName:
          description: Specifies the name of the Source on which this protection was
            run.
          nullable: true
          readOnly: true
          type: string
          x-order: 7
      required:
      - hdfsSourceId
      type: object
    HdfsSearchParams:
      description: Specifies the parameters for searching HDFS Folders and Files.
      properties:
        searchString:
          description: Specifies the search string to search the HDFS Folders and
            Files.
          nullable: true
          type: string
          x-order: 0
        hdfsTypes:
          description: Specifies types as Folders or Files or both to be searched.
          items:
            enum:
            - HDFSFolders
            - HDFSFiles
            type: string
          type: array
          x-order: 1
      required:
      - hdfsTypes
      - searchString
      type: object
    HdfsSourceRegistrationParams:
      allOf:
      - $ref: '#/components/schemas/HdfsAdditionalParams'
      - $ref: '#/components/schemas/HdfsSourceRegistrationParams_allOf'
      description: Specifies parameters to register an HDFS source.
      title: Register HDFS source request parameters.
    HdfsSourceRegistrationUpdateParams:
      description: Specifies parameters to update the registeration of an HDFS source.
      properties:
        host:
          description: IP or hostname of any host from which the HDFS configuration
            files core-site.xml and hdfs-site.xml can be read.
          nullable: true
          type: string
          x-order: 0
        configurationDirectory:
          description: The directory containing the core-site.xml and hdfs-site.xml
            configuration files.
          nullable: true
          type: string
          x-order: 1
        sshPasswordCredentials:
          $ref: '#/components/schemas/HbaseSourceRegistrationParams_allOf_sshPasswordCredentials'
        sshPrivateKeyCredentials:
          $ref: '#/components/schemas/HbaseSourceRegistrationParams_allOf_sshPrivateKeyCredentials'
        kerberosPrincipal:
          description: The kerberos principal to be used to connect to this HDFS source.
          nullable: true
          type: string
          x-order: 4
      title: Update HDFS source request parameters.
      type: object
    HeliosAccount:
      description: Specifies a Helios Account.
      properties:
        companyName:
          description: Specifies the name of the company to which this account belongs.
          nullable: true
          type: string
          x-order: 0
        salesforceAccountId:
          description: Specifies the Salesforce account ID of this account.
          nullable: true
          type: string
          x-order: 1
      type: object
    HeliosAccounts:
      description: Specifies a list of Accounts.
      properties:
        accounts:
          description: Specifies a list of Helios Accounts.
          items:
            $ref: '#/components/schemas/HeliosAccount'
          nullable: true
          type: array
          x-order: 0
      type: object
    HeliosArchivalConfig:
      allOf:
      - $ref: '#/components/schemas/HeliosCommonTargetConfiguration'
      description: Specifies settings for copying Snapshots External Targets (such
        as AWS or Tape). This also specifies the retention policy that should be applied
        to Snapshots after they have been copied to the specified target.
      title: Archival Target Configuration
    HeliosAwsRequest:
      description: Specifies a AWS registration request.
      properties:
        token:
          description: Specifies the registration token sent from Subscription manager.
          type: string
          x-order: 0
      type: object
    HeliosAwsResponse:
      description: Specifies a AWS registration response.
      properties:
        productCode:
          description: Specifies the product code returned from Marketplace.
          type: string
          x-order: 0
        customerId:
          description: Specifies the product code returned from Marketplace.
          type: string
          x-order: 1
      type: object
    HeliosBackupPolicy:
      description: Specifies the backup schedule and retentions of a Protection Policy.
      properties:
        regular:
          $ref: '#/components/schemas/HeliosRegularBackupPolicy'
        log:
          $ref: '#/components/schemas/HeliosLogBackupPolicy'
        bmr:
          $ref: '#/components/schemas/HeliosBmrBackupPolicy'
        cdp:
          $ref: '#/components/schemas/HeliosCdpBackupPolicy'
      title: Backup Schedule and Retention.
      type: object
    HeliosBaseTenantAssignmentsResult:
      description: Result of attempted tenant assignments
      example:
        policies:
        - policies
        - policies
        clusterIdentifier: clusterIdentifier
      nullable: true
      properties:
        clusterIdentifier:
          description: |-
            Specifies the the cluster on which properties are to be assigned.
            The format is clusterId:clusterIncarnationId.
          nullable: true
          type: string
          x-order: 0
        policies:
          description: A list of Ids of properties assigned to the tenant.
          items:
            type: string
          title: TenantAssignmentTypeStringId
          type: array
      type: object
      x-nullable: true
    HeliosBlackoutWindow:
      description: List of Blackout Windows. If specified, this field defines blackout
        periods when backups are not triggered..
      properties:
        day:
          description: Specifies a day in the week when no new Protection Group Runs
            should be started such as 'Sunday'. Specifies a day in a week such as
            'Sunday', 'Monday', etc.
          enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          nullable: true
          type: string
          x-order: 0
        startTime:
          $ref: '#/components/schemas/TimeOfDay'
        endTime:
          $ref: '#/components/schemas/TimeOfDay'
        configId:
          description: Specifies the unique identifier for the blackout getting added.
            This field should only be set if policy is getting updated.
          nullable: true
          type: string
          x-order: 3
      required:
      - day
      - endTime
      - startTime
      title: Blackout Window
      type: object
    HeliosBmrBackupPolicy:
      description: Specifies the BMR schedule in case of physical source protection.
      properties:
        schedule:
          $ref: '#/components/schemas/HeliosBmrSchedule'
        retention:
          $ref: '#/components/schemas/HeliosRetention'
      title: BMR Backup (Physical) Schedule and Retention.
      type: object
    HeliosBmrSchedule:
      description: Specifies settings that defines how frequent bmr backup will be
        performed for a Protection Group.
      properties:
        unit:
          description: Specifies how often to start new runs of a Protection Group.
            <br>'Weeks' specifies that new Protection Group runs start weekly on certain
            days specified using 'dayOfWeek' field. <br>'Months' specifies that new
            Protection Group runs start monthly on certain day of specific week.
          enum:
          - Weeks
          - Months
          nullable: true
          type: string
          x-order: 0
        weekSchedule:
          $ref: '#/components/schemas/HeliosWeekSchedule'
        monthSchedule:
          $ref: '#/components/schemas/HeliosMonthSchedule'
      title: Bmr Schedule
      type: object
    HeliosCassandraObjects:
      description: Specifies the indexed Cassandra objects.
      items:
        allOf:
        - $ref: '#/definitions/GlobalClusterIdentifier'
        - $ref: '#/definitions/CassandraIndexedObject'
        type: object
      type: array
    HeliosCdpBackupPolicy:
      description: Specifies CDP (Continious Data Protection) backup settings for
        a Protection Group.
      properties:
        retention:
          $ref: '#/components/schemas/HeliosCdpRetention'
      title: Continious Data Protection (CDP) Policy.
      type: object
    HeliosCdpRetention:
      description: Specifies the retention of a CDP backup.
      properties:
        unit:
          description: Specificies the Retention Unit of a CDP backup measured in
            minutes or hours.
          enum:
          - Minutes
          - Hours
          nullable: true
          type: string
          x-order: 0
        duration:
          description: Specifies the duration for a cdp backup retention.
          format: int32
          minimum: 1
          nullable: true
          type: integer
          x-order: 1
        dataLockConfig:
          $ref: '#/components/schemas/DataLockConfig'
      type: object
    HeliosClaimRequest:
      description: Specifies the request to register to Helios.
      example:
        registrationToken: registrationToken
      properties:
        registrationToken:
          description: Specifies the Helios registration token.
          nullable: true
          type: string
          x-order: 0
      required:
      - registrationToken
      title: Register to Helios.
      type: object
    HeliosCloudSpinConfig:
      allOf:
      - $ref: '#/components/schemas/HeliosCommonTargetConfiguration'
      description: Specifies settings for copying Snapshots to Cloud. This also specifies
        the retention policy that should be applied to Snapshots after they have been
        copied to Cloud.
      title: CloudSpin Target Configuration.
    HeliosClusterTenant:
      allOf:
      - $ref: '#/components/schemas/McmClusterIdentifier'
      - $ref: '#/components/schemas/TenantInfo'
      - nullable: true
        type: object
        x-nullable: true
      description: Description of a Tenant and cluster related properties.
      title: HeliosClusterTenant
    HeliosCommonSearchIndexedObjectsRequestParams:
      description: Specifies the common params to search for global indexed objects.
      properties:
        clusterIdentifiers:
          description: List of Clusters Identifiers to filter from. The format is
            clusterId:clusterIncarnationId.
          items:
            pattern: ^([0-9]+:[0-9]+)$
            type: string
          nullable: true
          type: array
          uniqueItems: true
          x-order: 0
        regionIds:
          description: List of Regions to filter from.
          items:
            type: string
          nullable: true
          type: array
          uniqueItems: true
          x-order: 1
        count:
          description: Specifies the number of indexed objects to be fetched.
          format: int32
          nullable: true
          type: integer
          x-order: 2
        objectType:
          description: Specifies the object type to be searched for.
          enum:
          - Emails
          - Files
          - CassandraObjects
          - CouchbaseObjects
          - HbaseObjects
          - HiveObjects
          - MongoObjects
          - HDFSObjects
          - ExchangeObjects
          - PublicFolders
          - TeamsObjects
          - SharepointObjects
          nullable: true
          type: string
          x-order: 3
        sourceUUIDs:
          description: Specifies a list of source UUIDs. Only matches found in these
            sources will be returned.
          items:
            type: string
          title: Helios Source UUIDs
          type: array
          uniqueItems: true
          x-omitempty: true
      required:
      - objectType
      title: Helios Common Search Indexed Objects Params
      type: object
      x-cohesity-discriminator-details:
        propertyName: objectType
    HeliosCommonSearchIndexedObjectsResponseParams:
      description: Specifies the common search indexed objects response params.
      properties:
        objectType:
          description: Specifies the object type.
          enum:
          - Emails
          - Files
          - CassandraObjects
          - CouchbaseObjects
          - HbaseObjects
          - HiveObjects
          - MongoObjects
          - HDFSObjects
          - ExchangeObjects
          - PublicFolders
          - TeamsObjects
          - SharepointObjects
          nullable: true
          type: string
          x-order: 0
        count:
          description: Specifies the total number of indexed objects that match the
            filter and search criteria. Use this value to determine how many additional
            requests are required to get the full result.
          format: int32
          nullable: true
          type: integer
          x-order: 1
        clusterErrors:
          description: A List of errors that occured on a subset of clusters.
          items:
            $ref: '#/components/schemas/HeliosSearchIndexedObjectsClusterError'
          type: array
          x-order: 2
      title: Helios Common Search Indexed Objects Response Params.
      type: object
      x-cohesity-discriminator-details:
        propertyName: objectType
    HeliosCommonTargetConfiguration:
      description: Specifies common parameters required while setting up additional
        protection target configuration.
      properties:
        schedule:
          $ref: '#/components/schemas/HeliosTargetSchedule'
        retention:
          $ref: '#/components/schemas/HeliosRetention'
        copyOnRunSuccess:
          description: Specifies if Snapshots are copied from the first completely
            successful Protection Group Run or the first partially successful Protection
            Group Run occurring at the start of the replication schedule. <br> If
            true, Snapshots are copied from the first Protection Group Run occurring
            at the start of the replication schedule that was completely successful
            i.e. Snapshots for all the Objects in the Protection Group were successfully
            captured. <br> If false, Snapshots are copied from the first Protection
            Group Run occurring at the start of the replication schedule, even if
            first Protection Group Run was not completely successful i.e. Snapshots
            were not captured for all Objects in the Protection Group.
          nullable: true
          type: boolean
          x-order: 2
        configId:
          description: Specifies the unique identifier for the target getting added.
            This field need to be passed only when helios policies are updated.
          nullable: true
          type: string
          x-order: 3
      title: Common Target Configuration.
      type: object
    HeliosCouchbaseObjects:
      description: Specifies the indexed Couchbase objects.
      items:
        allOf:
        - $ref: '#/definitions/GlobalClusterIdentifier'
        - $ref: '#/definitions/CouchbaseIndexedObject'
        type: object
      type: array
    HeliosDaySchedule:
      allOf:
      - $ref: '#/components/schemas/HeliosFrequencySchedule'
      description: Specifies settings that define a schedule for a Protection Group
        runs to start after certain number of days.
      title: Days Schedule
    HeliosEmails:
      description: Specifies the indexed emails and email folders.
      items:
        allOf:
        - $ref: '#/definitions/GlobalClusterIdentifier'
        - $ref: '#/definitions/Email'
        type: object
      type: array
    HeliosExchangeObjects:
      description: Specifies the indexed HDFS objects.
      items:
        allOf:
        - $ref: '#/definitions/GlobalClusterIdentifier'
        - $ref: '#/definitions/ExchangeIndexedObject'
        type: object
      type: array
    HeliosExtendedRetentionPolicy:
      description: Specifies additional retention policies to apply to backup snapshots.
      properties:
        schedule:
          $ref: '#/components/schemas/HeliosExtendedRetentionSchedule'
        retention:
          $ref: '#/components/schemas/HeliosRetention'
        configId:
          description: Specifies the unique identifier for the extedned  retention
            getting added. This field should only be set if policy is getting updated.
          nullable: true
          type: string
          x-order: 2
        runType:
          description: |-
            The backup run type to which this extended retention applies to. If this is not set, the extended retention will be applicable to all non-log backup types. Currently, the only value that can be set here is Full.
            'Regular' indicates a incremental (CBT) backup. Incremental backups utilizing CBT (if supported) are captured of the target protection objects. The first run of a Regular schedule captures all the blocks.
            'Full' indicates a full (no CBT) backup. A complete backup (all blocks) of the target protection objects are always captured and Change Block Tracking (CBT) is not utilized.
            'Log' indicates a Database Log backup. Capture the database transaction logs to allow rolling back to a specific point in time.
            'System' indicates a system backup. System backups are used to do bare metal recovery of the system to a specific point in time.
          enum:
          - Regular
          - Full
          - Log
          - System
          nullable: true
          type: string
          x-order: 3
      title: Extended Retention Policy.
      type: object
    HeliosExtendedRetentionSchedule:
      description: Specifies a schedule frequency and schedule unit for Extended Retentions.
      properties:
        unit:
          description: Specifies the unit interval for retention of Snapshots. <br>'Runs'
            means that the Snapshot copy retained after the number of Protection Group
            Runs equals the number specified in the frequency. <br>'Hours' means that
            the Snapshot copy retained hourly at the frequency set in the frequency,
            for example if scheduleFrequency is 2, the copy occurs every 2 hours.
            <br>'Days' means that the Snapshot copy gets retained daily at the frequency
            set in the frequency. <br>'Weeks' means that the Snapshot copy is retained
            weekly at the frequency set in the frequency. <br>'Months' means that
            the Snapshot copy is retained monthly at the frequency set in the Frequency.
            <br>'Years' means that the Snapshot copy is retained yearly at the frequency
            set in the Frequency.
          enum:
          - Runs
          - Hours
          - Days
          - Weeks
          - Months
          - Years
          nullable: true
          type: string
          x-order: 0
        frequency:
          description: |-
            Specifies a factor to multiply the unit by, to determine the retention schedule.
            For example if set to 2 and the unit is hourly, then Snapshots from the first eligible Job Run for every 2 hour period is retained.
          format: int32
          minimum: 1
          nullable: true
          type: integer
          x-order: 1
      title: Extended Retention Schedule
      type: object
    HeliosFiles:
      description: Specifies the indexed files and file folders.
      items:
        allOf:
        - $ref: '#/definitions/GlobalClusterIdentifier'
        - $ref: '#/definitions/File'
        type: object
      type: array
    HeliosFrequencySchedule:
      description: Specifies settings that define a daily schedule for a Protection
        Policy.
      properties:
        frequency:
          description: 'Specifies a factor to multiply the unit by, to determine the
            backup schedule. <br> Example: If ''frequency'' set to 2 and the unit
            is ''Hours'', then Snapshots are backed up every 2 hours. If selected
            unit is ''Weeks'' or ''Months'' then frequency will only be applied if
            policy type is DMaas.'
          format: int64
          minimum: 1
          nullable: true
          type: integer
          x-order: 0
      required:
      - frequency
      type: object
    HeliosFullBackupPolicy:
      description: Specifies full backup settings for a Protection Group.
      properties:
        schedule:
          $ref: '#/components/schemas/HeliosFullSchedule'
      title: Full Backup Schedule and Retention.
      type: object
    HeliosFullSchedule:
      description: Specifies settings that defines how frequent full backup will be
        performed for a Protection Group.
      properties:
        unit:
          description: 'Specifies how often to start new runs of a Protection Group.
            <br>''Days'' specifies that Protection Group run starts periodically on
            every day. For full backup schedule, currently we only support frequecny
            of 1 which indicates that full backup will be performed daily. <br>''Weeks''
            specifies that new Protection Group runs start weekly on certain days
            specified using ''dayOfWeek'' field. <br>''Months'' specifies that new
            Protection Group runs start monthly on certain day of specific week. This
            schedule needs ''weekOfMonth'' and ''dayOfWeek'' fields to be set. <br>
            Example: To run the Protection Group on Second Sunday of Every Month,
            following schedule need to be set: <br> unit: ''Month'' <br> dayOfWeek:
            ''Sunday'' <br> weekOfMonth: ''Second'''
          enum:
          - Days
          - Weeks
          - Months
          nullable: true
          type: string
          x-order: 0
        daySchedule:
          $ref: '#/components/schemas/HeliosDaySchedule'
        weekSchedule:
          $ref: '#/components/schemas/HeliosWeekSchedule'
        monthSchedule:
          $ref: '#/components/schemas/HeliosMonthSchedule'
      title: Full Schedule
      type: object
    HeliosHbaseObjects:
      description: Specifies the indexed Hbase objects.
      items:
        allOf:
        - $ref: '#/definitions/GlobalClusterIdentifier'
        - $ref: '#/definitions/HbaseIndexedObject'
        type: object
      type: array
    HeliosHdfsObjects:
      description: Specifies the indexed HDFS objects.
      items:
        allOf:
        - $ref: '#/definitions/GlobalClusterIdentifier'
        - $ref: '#/definitions/HDFSIndexedObject'
        type: object
      type: array
    HeliosHiveObjects:
      description: Specifies the indexed Hive objects.
      items:
        allOf:
        - $ref: '#/definitions/GlobalClusterIdentifier'
        - $ref: '#/definitions/HiveIndexedObject'
        type: object
      type: array
    HeliosHourSchedule:
      allOf:
      - $ref: '#/components/schemas/HeliosFrequencySchedule'
      description: Specifies settings that define a schedule for a Protection Group
        runs to start after certain number of hours. Hourly schedule must be greater
        than 5 hours in case of DMaaS policy.
      title: Hours Schedule
    HeliosIncrementalBackupPolicy:
      description: Specifies incremental backup settings for a Protection Group.
      properties:
        schedule:
          $ref: '#/components/schemas/HeliosIncrementalSchedule'
      title: Incremental Backup Schedule and Retention.
      type: object
    HeliosIncrementalSchedule:
      description: Specifies settings that defines how frequent backup will be performed
        for a Protection Group.
      properties:
        unit:
          description: 'Specifies how often to start new runs of a Protection Group.
            <br>''Minutes'' specifies that Protection Group run starts periodically
            after certain number of minutes specified in ''frequency'' field. <br>''Hours''
            specifies that Protection Group run starts periodically after certain
            number of hours specified in ''frequency'' field. <br>''Days'' specifies
            that Protection Group run starts periodically after certain number of
            days specified in ''frequency'' field. <br>''Week'' specifies that new
            Protection Group runs start weekly on certain days specified using ''dayOfWeek''
            field. <br>''Month'' specifies that new Protection Group runs start monthly
            on certain day of specific week. This schedule needs ''weekOfMonth'' and
            ''dayOfWeek'' fields to be set. <br> Example: To run the Protection Group
            on Second Sunday of Every Month, following schedule need to be set: <br>
            unit: ''Month'' <br> dayOfWeek: ''Sunday'' <br> weekOfMonth: ''Second'''
          enum:
          - Minutes
          - Hours
          - Days
          - Weeks
          - Months
          nullable: true
          type: string
          x-order: 0
        minuteSchedule:
          $ref: '#/components/schemas/HeliosMinuteSchedule'
        hourSchedule:
          $ref: '#/components/schemas/HeliosHourSchedule'
        daySchedule:
          $ref: '#/components/schemas/HeliosDaySchedule'
        weekSchedule:
          $ref: '#/components/schemas/HeliosWeekSchedule'
        monthSchedule:
          $ref: '#/components/schemas/HeliosMonthSchedule'
      required:
      - unit
      title: Run Schedule
      type: object
    HeliosLogBackupPolicy:
      description: Specifies log backup settings for a Protection Group.
      properties:
        schedule:
          $ref: '#/components/schemas/HeliosLogSchedule'
        retention:
          $ref: '#/components/schemas/HeliosRetention'
      title: Log Backup (Databases) Schedule and Retention.
      type: object
    HeliosLogSchedule:
      description: Specifies settings that defines how frequent log backup will be
        performed for a Protection Group.
      properties:
        unit:
          description: Specifies how often to start new Protection Group Runs of a
            Protection Group. <br>'Minutes' specifies that Protection Group run starts
            periodically after certain number of minutes specified in 'frequency'
            field. <br>'Hours' specifies that Protection Group run starts periodically
            after certain number of hours specified in 'frequency' field.
          enum:
          - Minutes
          - Hours
          nullable: true
          type: string
          x-order: 0
        minuteSchedule:
          $ref: '#/components/schemas/HeliosMinuteSchedule'
        hourSchedule:
          $ref: '#/components/schemas/HeliosHourSchedule'
      title: Log Schedule
      type: object
    HeliosLoginConfiguration:
      description: Returns the Helios Configuration for Salesforce login
      properties:
        clientId:
          description: Specifies the consumer key configured in Salesforce
          nullable: false
          type: string
          x-order: 0
        portalUrl:
          description: Specifies the salesforce URL to be redirected to
          nullable: false
          type: string
          x-order: 1
        redirectUrl:
          description: Redirect URL after successful authentication
          nullable: false
          type: string
          x-order: 2
      type: object
    HeliosMfa:
      description: Specifies whether to enable/disable MFA for account.
      example:
        mfa: true
      properties:
        mfa:
          description: Specifies whether MFA needs to be enabled / disabled.
          nullable: true
          type: boolean
          x-order: 0
      type: object
    HeliosMinuteSchedule:
      allOf:
      - $ref: '#/components/schemas/HeliosFrequencySchedule'
      description: Specifies settings that define a schedule for a Protection Group
        runs to start after certain number of minutes.
      title: Minutes Schedule
    HeliosMongoObjects:
      description: Specifies the indexed Mongo objects.
      items:
        allOf:
        - $ref: '#/definitions/GlobalClusterIdentifier'
        - $ref: '#/definitions/MongoIndexedObject'
        type: object
      type: array
    HeliosMonthSchedule:
      allOf:
      - $ref: '#/components/schemas/HeliosWeekSchedule'
      - $ref: '#/components/schemas/HeliosMonthSchedule_allOf'
      description: Specifies settings that define a schedule for a Protection Group
        runs to on specific week and specific days of that week.
      title: Month Schedule
    HeliosObjectUUIDs:
      description: Specifies a list of object UUIDs. Only matches found in these objects
        will be returned.
      items:
        type: string
      title: Helios Object UUIDs
      type: array
      uniqueItems: true
      x-omitempty: true
    HeliosOnPremConfig:
      description: Params for Helios OnPrem VM Configuration.
      example:
        proxyServerConfig:
          password: password
          port: 5
          ip: ip
          name: name
          username: username
        nodes:
        - nodeIp: nodeIp
          nodeId: 0
        - nodeIp: nodeIp
          nodeId: 0
        kubernetesSubnetCidr: kubernetesSubnetCidr
        name: name
        networkConfig:
          ntpServers:
          - ntpServers
          - ntpServers
          vipHostName: vipHostName
          dhcpNetworkConfig:
            subnetIp: subnetIp
            subnetMask: subnetMask
            dnsServers:
            - dnsServers
            - dnsServers
            gateway: gateway
          domainNames:
          - domainNames
          - domainNames
          ipPreference: Ipv4
          manualNetworkConfig:
            subnetIp: subnetIp
            subnetMask: subnetMask
            dnsServers:
            - dnsServers
            - dnsServers
            gateway: gateway
          useDhcp: true
      properties:
        name:
          description: Name of the new Helios OnPrem VM.
          nullable: true
          type: string
          x-order: 0
        nodes:
          description: Specifies the Nodes present in this Cluster.
          items:
            $ref: '#/components/schemas/HeliosOnPremVMNode'
          type: array
          x-order: 1
        kubernetesSubnetCidr:
          description: Subnet to use for setting up the Kubernetes cluster's internal
            network on which Cohesity Helios will run.
          nullable: true
          type: string
          x-order: 2
        networkConfig:
          $ref: '#/components/schemas/ClusterCreateNetworkConfig'
        proxyServerConfig:
          $ref: '#/components/schemas/ClusterProxyServerConfig'
      title: Helios OnPrem VM Config Params
      type: object
    HeliosOnPremVMNode:
      description: Params for a HeliosOnPremVM Node
      example:
        nodeIp: nodeIp
        nodeId: 0
      properties:
        nodeIp:
          description: Specifies the IP address of the Node.
          nullable: true
          type: string
          x-order: 0
        nodeId:
          description: Specifies the ID of the Node.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      required:
      - nodeIp
      title: HeliosOnPremVM Node
      type: object
    HeliosPoliciesResponseWithPagination:
      description: Specifies the list of Policies.
      example:
        policies:
        - null
        - null
      properties:
        policies:
          description: Specifies a list of policies.
          items:
            $ref: '#/components/schemas/HeliosPolicyResponse'
          nullable: true
          type: array
          x-order: 0
      type: object
    HeliosPolicyRequest:
      allOf:
      - $ref: '#/components/schemas/HeliosProtectionPolicy'
      description: Specifies the request parameters to cretae a policy.
    HeliosPolicyResponse:
      allOf:
      - $ref: '#/components/schemas/HeliosProtectionPolicy'
      - $ref: '#/components/schemas/HeliosPolicyResponse_allOf'
      description: Specifies the details about the Policy.
    HeliosProtectionPolicy:
      description: Specifies common fields required to define Protection Policy on
        Helios.
      properties:
        name:
          description: Specifies the name of the Protection Policy.
          nullable: true
          type: string
          x-order: 0
        type:
          description: Specifies the type of the Protection Policy to be created on
            Helios.
          enum:
          - GlobalPolicy
          - DMaaSPolicy
          - OnPremPolicy
          nullable: true
          type: string
          x-order: 1
        clusterIdentifier:
          description: |-
            Specifies the cluster to which this policy belongs.
            This required is only for type OnPremPolicy. The format is clusterId:clusterIncarnationId.
          nullable: true
          pattern: ^([0-9]+:[0-9]+)$
          type: string
          x-order: 2
        tenantIds:
          description: Specifies the tenants which have access to this object.
          items:
            nullable: true
            type: string
          readOnly: true
          type: array
          x-order: 3
        backupPolicy:
          $ref: '#/components/schemas/HeliosBackupPolicy'
        description:
          description: Specifies the description of the Protection Policy.
          nullable: true
          type: string
          x-order: 5
        blackoutWindow:
          description: List of Blackout Windows. If specified, this field defines
            blackout periods when new Group Runs are not started. If a Group Run has
            been scheduled but not yet executed and the blackout period starts, the
            behavior depends on the policy field AbortInBlackoutPeriod.
          items:
            $ref: '#/components/schemas/HeliosBlackoutWindow'
          nullable: true
          title: Blackout Window
          type: array
          x-order: 6
        extendedRetention:
          description: Specifies additional retention policies that should be applied
            to the backup snapshots. A backup snapshot will be retained up to a time
            that is the maximum of all retention policies that are applicable to it.
          items:
            $ref: '#/components/schemas/HeliosExtendedRetentionPolicy'
          nullable: true
          title: Extended Retention
          type: array
          x-order: 7
        remoteTargetPolicy:
          $ref: '#/components/schemas/HeliosTargetsConfiguration'
        retryOptions:
          $ref: '#/components/schemas/HeliosRetryOptions'
        dataLock:
          description: This field is now deprecated. Please use the DataLockConfig
            in the backup retention.
          enum:
          - Compliance
          - Administrative
          nullable: true
          type: string
          x-order: 10
      required:
      - name
      - type
      type: object
    HeliosProtectionPolicyIdentifier:
      description: Specifies Protection Policy Identifier.
      properties:
        protectionPolicyId:
          description: Specifies Protection Policy id.
          nullable: true
          type: string
          x-order: 0
        protectionPolicyName:
          description: Specifies Protection Policy name.
          nullable: true
          type: string
          x-order: 1
      title: Protection Policy Identifier.
      type: object
    HeliosPublicFolderItems:
      description: Specifies the indexed Public folder items.
      items:
        allOf:
        - $ref: '#/definitions/GlobalClusterIdentifier'
        - $ref: '#/definitions/PublicFolderItem'
        type: object
      type: array
    HeliosRegConfig:
      description: Specifies the Helios Registration Config.
      example:
        entityType: Rigel
        rigelRegConfig:
          dataPlaneConnectionInfo:
            lastConnectedTimestampMsecs: 0
            isActive: true
            message: message
          regInfo:
            message: message
            status: NotDone
          controlPlaneConnectionInfo:
            lastConnectedTimestampMsecs: 0
            isActive: true
            message: message
      properties:
        entityType:
          description: Specifies the type of entity that is registered on Helios.
          enum:
          - Rigel
          - Cluster
          nullable: true
          type: string
          x-order: 0
        rigelRegConfig:
          $ref: '#/components/schemas/RigelRegConfig'
      title: Helios Registration Config.
      type: object
    HeliosRegStatus:
      description: helios reg status.
      properties:
        type:
          description: Helios reg Status.
          enum:
          - NotDone
          - InProgress
          - Success
          - Failed
          type: string
          x-order: 0
      title: Helios reg Status.
      type: object
    HeliosRegularBackupPolicy:
      description: Specifies the Incremental and Full policy settings and also the
        common Retention policy settings."
      properties:
        incremental:
          $ref: '#/components/schemas/HeliosIncrementalBackupPolicy'
        full:
          $ref: '#/components/schemas/HeliosFullBackupPolicy'
        retention:
          $ref: '#/components/schemas/HeliosRetention'
      title: Incremental, Full and Retention Policy.
      type: object
    HeliosReplicationConfig:
      allOf:
      - $ref: '#/components/schemas/HeliosCommonTargetConfiguration'
      - $ref: '#/components/schemas/HeliosReplicationConfig_allOf'
      description: Specifies settings for copying Snapshots to Remote Clusters. This
        also specifies the retention policy that should be applied to Snapshots after
        they have been copied to the specified target.
      title: Replication Target Configuration
    HeliosRetention:
      description: Specifies the retention of a backup.
      properties:
        unit:
          description: 'Specificies the Retention Unit of a backup measured in days,
            months or years. <br> If unit is ''Months'', then number specified in
            duration is multiplied to 30. <br> Example: If duration is 4 and unit
            is ''Months'' then number of retention days will be 30 * 4 = 120 days.
            <br> If unit is ''Years'', then number specified in duration is multiplied
            to 365. <br> If duration is 2 and unit is ''Months'' then number of retention
            days will be 365 * 2 = 730 days.'
          enum:
          - Days
          - Weeks
          - Months
          - Years
          nullable: true
          type: string
          x-order: 0
        duration:
          description: Specifies the duration for a backup retention. <br> Example.
            If duration is 7 and unit is Months, the retention of a backup is 7 *
            30 = 210 days.
          format: int64
          minimum: 1
          nullable: true
          type: integer
          x-order: 1
        tiers:
          description: Specifies the list of tiers where backup will be moved. This
            will be populated only if poilcy type is DMaaS.
          items:
            $ref: '#/components/schemas/HeliosTier'
          readOnly: true
          type: array
          x-order: 2
        dataLockConfig:
          $ref: '#/components/schemas/DataLockConfig'
      type: object
    HeliosRetryOptions:
      description: Retry Options of a Protection Policy when a Protection Group run
        fails.
      properties:
        retries:
          description: |-
            Specifies the number of times to retry capturing Snapshots before
            the Protection Group Run fails.
          format: int32
          minimum: 0
          nullable: true
          type: integer
          x-order: 0
        retryIntervalMins:
          description: Specifies the number of minutes before retrying a failed Protection
            Group.
          format: int32
          minimum: 1
          nullable: true
          type: integer
          x-order: 1
      type: object
    HeliosSearchIndexedObjectsClusterError:
      description: The error from an individual cluster while calling MCM Search Indexed
        Objects.
      properties:
        clusterIdentifier:
          description: clusterIdentifier for the error.
          nullable: true
          type: string
          x-order: 0
        errorMessage:
          description: The error message.
          nullable: true
          type: string
          x-order: 1
      title: Helios SearchIndexedObjects Websocket ClusterErrors.
      type: object
    HeliosSearchIndexedObjectsRequest:
      allOf:
      - $ref: '#/components/schemas/HeliosCommonSearchIndexedObjectsRequestParams'
      - $ref: '#/components/schemas/HeliosSearchIndexedObjectsRequest_allOf'
      description: |-
        Specifies the request parameters to search for global indexed
        objects.
      title: Helios Search indexed objects request params.
    HeliosSearchIndexedObjectsResponseBody:
      allOf:
      - $ref: '#/components/schemas/HeliosCommonSearchIndexedObjectsResponseParams'
      - $ref: '#/components/schemas/HeliosSearchIndexedObjectsResponseBody_allOf'
      description: Specifies the search indexed objects response body.
      title: Helios Search Indexed objects response body.
    HeliosSourceObjectsStats:
      description: Number of assigned objects to a tenant for given source name.
      example:
        numAssignedObjects: 0
        sourceName: sourceName
      properties:
        sourceName:
          description: Name of the source
          nullable: true
          type: string
          x-order: 0
        numAssignedObjects:
          description: Number of objects assigned.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    HeliosSourceUUIDs:
      description: Specifies a list of source UUIDs. Only matches found in these sources
        will be returned.
      items:
        type: string
      title: Helios Source UUIDs
      type: array
      uniqueItems: true
      x-omitempty: true
    HeliosStorageDomainUUIDs:
      description: Specifies a list of storage domain UUIDs on Helios. Only matches
        found in these storage domains will be returned.
      items:
        type: string
      title: Storage Domain UUIDs
      type: array
      uniqueItems: true
      x-omitempty: true
    HeliosTargetSchedule:
      description: Specifies a schedule frequency and schedule unit for copying Snapshots
        to backup targets.
      properties:
        unit:
          description: Specifies the frequency that Snapshots should be copied to
            the specified target. Used in combination with multiplier. <br>'Runs'
            means that the Snapshot copy occurs after the number of Protection Group
            Runs equals the number specified in the frequency. <br>'Hours' means that
            the Snapshot copy occurs hourly at the frequency set in the frequency,
            for example if scheduleFrequency is 2, the copy occurs every 2 hours.
            <br>'Days' means that the Snapshot copy occurs daily at the frequency
            set in the frequency. <br>'Weeks' means that the Snapshot copy occurs
            weekly at the frequency set in the frequency. <br>'Months' means that
            the Snapshot copy occurs monthly at the frequency set in the Frequency.
            <br>'Years' means that the Snapshot copy occurs yearly at the frequency
            set in the scheduleFrequency.
          enum:
          - Runs
          - Hours
          - Days
          - Weeks
          - Months
          - Years
          nullable: true
          type: string
          x-order: 0
        frequency:
          description: |-
            Specifies a factor to multiply the unit by, to determine the copy schedule.
            For example if set to 2 and the unit is hourly, then Snapshots from the first eligible Job Run for every 2 hour period is copied.
          format: int32
          minimum: 1
          nullable: true
          type: integer
          x-order: 1
      title: Schedule
      type: object
    HeliosTargetsConfiguration:
      description: Specifies the replication, archival and cloud spin targets of Protection
        Policy.
      properties:
        replicationTargets:
          items:
            $ref: '#/components/schemas/HeliosReplicationConfig'
          type: array
          x-order: 0
        archivalTargets:
          items:
            $ref: '#/components/schemas/HeliosArchivalConfig'
          type: array
          x-order: 1
        cloudSpinTargets:
          items:
            $ref: '#/components/schemas/HeliosCloudSpinConfig'
          type: array
          x-order: 2
      type: object
    HeliosTenant:
      description: Description of a Tenant and it's properties on various clusters.
      example:
        lastUpdatedAtTimeMsecs: 6
        systems:
        - null
        - null
        createdAtTimeMsecs: 0
        name: name
        managedOnHelios: true
        description: description
        id: id
        deletedAtTimeMsecs: 1
        status: Active
      properties:
        id:
          description: The tenant id.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Name of the Tenant
          nullable: true
          type: string
          x-order: 1
        description:
          description: Description about the tenant.
          nullable: true
          type: string
          x-order: 2
        managedOnHelios:
          description: Wether managed on helios or not.
          nullable: true
          type: boolean
          x-order: 3
        status:
          description: Current Status of the Tenant.
          enum:
          - Active
          - Inactive
          - MarkedForDeletion
          - Deleted
          nullable: true
          type: string
          x-order: 4
        systems:
          description: Details of tenant on each system that it is living.
          items:
            $ref: '#/components/schemas/HeliosClusterTenant'
          type: array
          x-order: 5
        createdAtTimeMsecs:
          description: Epoch time when tenant was created.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 6
        lastUpdatedAtTimeMsecs:
          description: Epoch time when tenant was last updated.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 7
        deletedAtTimeMsecs:
          description: Epoch time when tenant was last updated.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 8
      title: HeliosTenant
      type: object
    HeliosTenantAssignmentsParams:
      description: Parameters to be specified for assigning properties like policies
        to a tenant.
      example:
        clusterIdentifier: clusterIdentifier
        policyIds:
        - policyIds
        - policyIds
      properties:
        clusterIdentifier:
          description: |-
            Specifies the the cluster on which properties are to be assigned.
            The format is clusterId:clusterIncarnationId.
          nullable: true
          pattern: ^([0-9]+:[0-9]+)$
          type: string
          x-order: 0
        policyIds:
          description: List of policies on the cluster, to be assigned to the Tenant.
          items:
            type: string
          nullable: true
          type: array
          x-order: 1
      title: TenantAssignmentsParams
      type: object
    HeliosTenantAssignmentsResult:
      description: All properties like entities, sources, policies etc assigned to
        the tenant.
      example:
        assignments:
          policies:
          - policies
          - policies
          clusterIdentifier: clusterIdentifier
        tenantId: tenantId
      properties:
        tenantId:
          description: The tenant id.
          nullable: true
          type: string
          x-order: 0
        assignments:
          $ref: '#/components/schemas/HeliosBaseTenantAssignmentsResult'
      title: TenantAssignmentsResult.
      type: object
    HeliosTenantClusterResources:
      description: |-
        A list of Sources and Storage Domains assigned to the Tenant,
        grouped by Cluster.
      example:
        sourceNames:
        - sourceNames
        - sourceNames
        clusterIdentifier: clusterIdentifier
        storageDomainNames:
        - storageDomainNames
        - storageDomainNames
        sourceStats:
        - numAssignedObjects: 0
          sourceName: sourceName
        - numAssignedObjects: 0
          sourceName: sourceName
      properties:
        clusterIdentifier:
          description: |-
            Specifies the list of cluster identifiers. The format is
            clusterId:clusterIncarnationId.
          nullable: true
          type: string
          x-order: 0
        storageDomainNames:
          description: List of assigned Storage Domains.
          items:
            type: string
          nullable: true
          type: array
          x-order: 1
        sourceNames:
          description: List of completely assigned Sources.
          items:
            type: string
          nullable: true
          type: array
          x-order: 2
        sourceStats:
          description: Number of assigned objects grouped by source names.
          items:
            $ref: '#/components/schemas/HeliosSourceObjectsStats'
          nullable: true
          type: array
          x-order: 3
      type: object
    HeliosTenantResources:
      description: A list of storage domains and sources assigned to a Tenant.
      example:
        tenantId: tenantId
        resources:
        - sourceNames:
          - sourceNames
          - sourceNames
          clusterIdentifier: clusterIdentifier
          storageDomainNames:
          - storageDomainNames
          - storageDomainNames
          sourceStats:
          - numAssignedObjects: 0
            sourceName: sourceName
          - numAssignedObjects: 0
            sourceName: sourceName
        - sourceNames:
          - sourceNames
          - sourceNames
          clusterIdentifier: clusterIdentifier
          storageDomainNames:
          - storageDomainNames
          - storageDomainNames
          sourceStats:
          - numAssignedObjects: 0
            sourceName: sourceName
          - numAssignedObjects: 0
            sourceName: sourceName
      properties:
        tenantId:
          description: Specifies the new tenant id associated with the api key.
          nullable: true
          type: string
          x-order: 0
        resources:
          description: THe list of assigned resources grouped by cluster Id.
          items:
            $ref: '#/components/schemas/HeliosTenantClusterResources'
          nullable: true
          type: array
          x-order: 1
      type: object
    HeliosTenantsStats:
      description: A list of storage domains and sources assigned to all Tenants.
      items:
        $ref: '#/components/schemas/HeliosTenantResources'
      type: array
    HeliosTier:
      description: Specifies the Helios Tier details.
      properties:
        type:
          description: Specifies the tier type.
          enum:
          - S3
          - Glacier
          nullable: true
          type: string
          x-order: 0
        isDefaultTier:
          description: Specifies whether the current tier will be the default tier
            for primary retention.
          nullable: true
          type: boolean
          x-order: 1
        unit:
          description: Specificies the time unit after which backup will be moved
            to next tier.
          enum:
          - Days
          - Weeks
          - Months
          - Years
          nullable: true
          type: string
          x-order: 2
        moveAfter:
          description: Specifies the duration after which the backup will be moved
            to next tier.
          format: int64
          nullable: true
          type: integer
          x-order: 3
      type: object
    HeliosWeekSchedule:
      description: Specifies settings that define a schedule for a Protection Group
        runs to start on certain days of week.
      properties:
        dayOfWeek:
          description: 'Specifies a list of days of the week when to start Protection
            Group Runs. <br> Example: To run a Protection Group on every Monday and
            Tuesday, set the schedule with following values: <br>  unit: ''Weeks''
            <br>  dayOfWeek: [''Monday'',''Tuesday'']'
          items:
            enum:
            - Sunday
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            type: string
          nullable: true
          type: array
          x-order: 0
      title: Week Schedule
      type: object
    HiveAdditionalParams:
      description: Additional params for Hive protection source.
      example:
        metastorePort: 7
        authType: KERBEROS
        metastoreAddress: metastoreAddress
      properties:
        metastoreAddress:
          description: The MetastoreAddress for this Hive.
          readOnly: true
          type: string
          x-order: 0
        metastorePort:
          description: The MetastorePort for this Hive.
          format: int32
          readOnly: true
          type: integer
          x-order: 1
        authType:
          description: Authentication type.
          enum:
          - KERBEROS
          - NONE
          nullable: true
          readOnly: true
          type: string
          x-order: 2
      title: Hive Additional Params.
      type: object
    HiveIndexedObject:
      allOf:
      - $ref: '#/components/schemas/CommonIndexedObjectParams'
      - $ref: '#/components/schemas/HiveIndexedObject_allOf'
      description: Specifies a Hive indexed object.
      title: HiveIndexedObject
    HiveIndexedObjects:
      description: Specifies the indexed Hive objects.
      items:
        $ref: '#/components/schemas/HiveIndexedObject'
      type: array
    HiveOnPremSearchParams:
      allOf:
      - $ref: '#/components/schemas/HiveSearchParams'
      - $ref: '#/components/schemas/OnPremSourceIds'
      description: Parameters required to search Hive on a cluster.
      title: HiveOnPremSearchParams
    HiveParams:
      description: Specifies the recovery options specific to Hive environment.
      properties:
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverObjects
          type: string
          x-order: 0
        recoverHiveParams:
          $ref: '#/components/schemas/RecoverHiveParams'
      required:
      - recoverHiveParams
      - recoveryAction
      title: Recover Hive environment params.
      type: object
    HiveSearchParams:
      description: Specifies the parameters which are specific for searching Hive
        objects.
      properties:
        searchString:
          description: Specifies the search string to search the Hive Objects
          nullable: true
          type: string
          x-order: 0
        hiveObjectTypes:
          description: Specifies one or more Hive object types be searched.
          items:
            enum:
            - HiveDatabases
            - HiveTables
            - HivePartitions
            type: string
          type: array
          x-order: 1
      required:
      - hiveObjectTypes
      - searchString
      type: object
    HiveSourceRegistrationParams:
      allOf:
      - $ref: '#/components/schemas/HiveAdditionalParams'
      - $ref: '#/components/schemas/HiveSourceRegistrationParams_allOf'
      description: Specifies parameters to register Hive source.
      title: Register Hive source request parameters.
    HiveSourceRegistrationUpdateParams:
      description: Specifies parameters to update registration of Hive source.
      properties:
        host:
          description: IP or hostname of any host from which the Hive configuration
            file hive-site.xml can be read.
          nullable: true
          type: string
          x-order: 0
        configurationDirectory:
          description: The directory containing the hive-site.xml.
          nullable: true
          type: string
          x-order: 1
        sshPasswordCredentials:
          $ref: '#/components/schemas/HbaseSourceRegistrationParams_allOf_sshPasswordCredentials'
        sshPrivateKeyCredentials:
          $ref: '#/components/schemas/HbaseSourceRegistrationParams_allOf_sshPrivateKeyCredentials'
        kerberosPrincipal:
          description: The kerberos principal to be used to connect to this Hive source.
          nullable: true
          type: string
          x-order: 4
      title: Update Registeration of Hive source .
      type: object
    HostBasedBackupScriptParams:
      description: Specifies params of a pre/post scripts to be executed before and
        after a backup run.
      properties:
        host:
          $ref: '#/components/schemas/ScriptHost'
        preScript:
          $ref: '#/components/schemas/CommonPreBackupScriptParams'
        postScript:
          $ref: '#/components/schemas/CommonPostBackupScriptParams'
      required:
      - host
      title: Host Based Backup Script Params
      type: object
    HostInformation:
      description: Specifies the host information for a objects. This is mainly populated
        in case of App objects where app object is hosted by another object such as
        VM or physical server.
      properties:
        id:
          description: Specifies the id of the host object.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the name of the host object.
          nullable: true
          type: string
          x-order: 1
        environment:
          description: Specifies the environment of the object.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kKVM
          - kAWS
          - kAcropolis
          - kGCP
          - kPhysical
          - kPhysicalFiles
          - kIsilon
          - kNetapp
          - kGenericNas
          - kFlashBlade
          - kElastifile
          - kGPFS
          - kPure
          - kNimble
          - kSQL
          - kOracle
          - kExchange
          - kAD
          - kView
          - kO365
          - kHyperFlex
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          nullable: true
          type: string
          x-order: 2
      type: object
    HostSettingCheck:
      description: Specifies the host checking details.
      properties:
        type:
          description: Specifies the type of host checking that was performed.
          enum:
          - IsAgentPortAccessible
          - IsAgentRunning
          - IsSQLWriterRunning
          - AreSQLInstancesRunning
          - CheckServiceLoginsConfig
          - CheckSQLFCIVIP
          - CheckSQLDiskSpace
          nullable: true
          type: string
          x-order: 0
        result:
          description: Specifies the result of host checking performed by agent.
          enum:
          - Pass
          - Fail
          - Warning
          nullable: true
          type: string
          x-order: 1
      type: object
    HourSchedule:
      allOf:
      - $ref: '#/components/schemas/FrequencySchedule'
      description: Specifies settings that define a schedule for a Protection Group
        runs to start after certain number of hours.
      title: Hours Schedule
    HyperVMountVolumesNewTargetConfig:
      description: Specifies the configuration for mounting volumes to a new target.
      properties:
        mountTarget:
          $ref: '#/components/schemas/RecoverTarget'
        bringDisksOnline:
          description: Specifies whether the volumes need to be online within the
            target environment after attaching the disks. For linux VMs, this should
            always be set to false because bring disks online is only supported for
            Windows VM. If this is set to true, HyperV Integration Services must be
            installed on the VM.
          nullable: true
          type: boolean
          x-order: 1
        targetVmCredentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          - type: object
            x-nullable: true
          description: Specifies credentials to access the target VM.
          nullable: true
          type: object
          x-order: 2
      required:
      - bringDisksOnline
      - mountTarget
      title: HyperV Mount Volumes New Target Config.
      type: object
    HyperVMountVolumesOriginalTargetConfig:
      description: Specifies the configuration for mounting volumes to the original
        target.
      properties:
        bringDisksOnline:
          description: Specifies whether the volumes need to be online within the
            target environment after attaching the disks. For linux VMs, this should
            always be set to false because bring disks online is only supported for
            Windows VM. For Windows, this is optional. If this is set to true, HyperV
            Integration Services must be installed on the VM.
          nullable: true
          type: boolean
          x-order: 0
        targetVmCredentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          - type: object
            x-nullable: true
          description: Specifies credentials to access the target VM.
          nullable: true
          type: object
          x-order: 1
      required:
      - bringDisksOnline
      title: HyperV Mount Volumes Original Target Config.
      type: object
    HyperVObjectProtectionRequest:
      allOf:
      - $ref: '#/components/schemas/HyperVObjectProtectionRequest_allOf'
      - $ref: '#/components/schemas/CommonHyperVObjectParams'
      description: Specifies the HyperV object level settings for object protection.
    HyperVObjectProtectionRequestParams:
      allOf:
      - $ref: '#/components/schemas/HyperVObjectProtectionRequestParams_allOf'
      - $ref: '#/components/schemas/CommonHyperVProtectionParams'
      description: Specifies the parameters which are specific to HyperV object protection.
    HyperVObjectProtectionResponse:
      allOf:
      - $ref: '#/components/schemas/CommonHyperVObjectParams'
      - $ref: '#/components/schemas/HyperVObjectProtectionResponse_allOf'
      description: Specifies the input for a protection object in the HyperV environment.
    HyperVObjectProtectionResponseParams:
      allOf:
      - $ref: '#/components/schemas/HyperVObjectProtectionResponse'
      - $ref: '#/components/schemas/CommonHyperVProtectionParams'
      description: Specifies the parameters which are specific to HyperV object protection.
    HyperVObjectProtectionUpdateRequestParams:
      allOf:
      - $ref: '#/components/schemas/CommonHyperVProtectionParams'
      - $ref: '#/components/schemas/CommonHyperVObjectParams'
      - $ref: '#/components/schemas/HyperVObjectProtectionResponse_allOf'
      description: Specifies the parameters which are specific to HyperV object protection.
    HyperVProtectionGroupObjectParams:
      description: Specifies the object parameters to create HyperV Protection Group.
      properties:
        id:
          description: Specifies the id of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the virtual machine.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      title: HyperV Protection Group Object Params.
      type: object
    HyperVProtectionGroupParams:
      allOf:
      - $ref: '#/components/schemas/HyperVProtectionGroupParams_allOf'
      - $ref: '#/components/schemas/CommonHyperVProtectionParams'
      description: Specifies the parameters which are specific to HyperV related Protection
        Groups.
      title: HyperV Protection Group Request Params.
    HyperVProtectionGroupType:
      description: HyperV Protection Group type.
      properties:
        environment:
          description: Specifies HyperV Protection Group type.
          enum:
          - kAuto
          - kRCT
          - kVSS
          type: string
          x-order: 0
      title: HyperV Protection Group type.
      type: object
    HyperVRecoverFilesNewTargetConfig:
      description: Specifies the configuration for recovering files and folders to
        a new target.
      properties:
        targetVm:
          allOf:
          - $ref: '#/components/schemas/RecoverTarget'
          - type: object
            x-nullable: true
          description: Specifies the target VM to recover files and folders to.
          nullable: true
          type: object
          x-order: 0
        targetVmCredentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          - type: object
            x-nullable: true
          description: Specifies the credentials for the target VM.
          nullable: true
          type: object
          x-order: 1
        absolutePath:
          description: Specifies the path location to recover files to.
          nullable: true
          type: string
          x-order: 2
      required:
      - absolutePath
      - targetVm
      - targetVmCredentials
      title: HyperV Recover Files New Target Config.
      type: object
    HyperVRecoverFilesOriginalTargetConfig:
      description: Specifies the configuration for recovering files and folders to
        the original target.
      properties:
        targetVmCredentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          - type: object
            x-nullable: true
          description: Specifies the credentials for the target VM.
          nullable: true
          type: object
          x-order: 0
        recoverToOriginalPath:
          description: Specifies whether to recover files and folders to the original
            path location. If false, alternatePath must be specified.
          nullable: true
          type: boolean
          x-order: 1
        alternatePath:
          description: Specifies the alternate path location to recover files to.
          nullable: true
          type: string
          x-order: 2
      required:
      - recoverToOriginalPath
      - targetVmCredentials
      title: HyperV Recover Files Original Target Config.
      type: object
    HyperVSourceRegistrationParams:
      description: Specifies the paramaters to register a HyperV source.
      properties:
        type:
          description: Specifies the HyperV Source type.
          enum:
          - kSCVMMServer
          - kStandaloneHost
          - kStandaloneCluster
          nullable: true
          type: string
          x-order: 0
        scvmmParams:
          $ref: '#/components/schemas/ScvmmRegistrationParams'
        standaloneHostParams:
          $ref: '#/components/schemas/StandaloneHostRegistrationParams'
        standaloneClusterParams:
          $ref: '#/components/schemas/StandaloneClusterRegistrationParams'
      required:
      - type
      type: object
    HyperVTargetParamsForMountVolume:
      description: Specifies the parameters for a HyperV recovery target.
      properties:
        mountToOriginalTarget:
          description: Specifies whether to mount to the original target. If true,
            originalTargetConfig must be specified. If false, newTargetConfig must
            be specified.
          nullable: true
          type: boolean
          x-order: 0
        originalTargetConfig:
          allOf:
          - $ref: '#/components/schemas/HyperVMountVolumesOriginalTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the configuration for mounting to the original target.
          nullable: true
          type: object
          x-order: 1
        newTargetConfig:
          allOf:
          - $ref: '#/components/schemas/HyperVMountVolumesNewTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the configuration for mounting to a new target.
          nullable: true
          type: object
          x-order: 2
        readOnlyMount:
          description: Specifies whether to perform a read-only mount. Default is
            false.
          nullable: true
          type: boolean
          x-order: 3
        volumeNames:
          description: Specifies the names of volumes that need to be mounted. If
            this is not specified then all volumes that are part of the source VM
            will be mounted on the target VM.
          items:
            type: string
          nullable: true
          type: array
          x-order: 4
        mountedVolumeMapping:
          description: Specifies the mapping of original volumes and mounted volumes
          items:
            $ref: '#/components/schemas/MountedVolumeMapping'
          nullable: true
          readOnly: true
          type: array
          x-order: 5
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered. If this
            is not specified, then the VLAN settings will be automatically selected
            from one of the below options: a. If VLANs are configured on Cohesity,
            then the VLAN host/VIP will be automatically based on the client''s (e.g.
            ESXI host) IP address. b. If VLANs are not configured on Cohesity, then
            the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 6
      required:
      - mountToOriginalTarget
      title: HyperV Target Params.
      type: object
    HyperVTargetParamsForRecoverFileAndFolder:
      description: Specifies the parameters for a HyperV recovery target.
      properties:
        recoverToOriginalTarget:
          description: Specifies whether to recover to the original target. If true,
            originalTargetConfig must be specified. If false, newTargetConfig must
            be specified.
          nullable: true
          type: boolean
          x-order: 0
        originalTargetConfig:
          allOf:
          - $ref: '#/components/schemas/HyperVRecoverFilesOriginalTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the configuration for recovering to the original
            target.
          nullable: true
          type: object
          x-order: 1
        newTargetConfig:
          allOf:
          - $ref: '#/components/schemas/HyperVRecoverFilesNewTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the configuration for recovering to a new target.
          nullable: true
          type: object
          x-order: 2
        overwriteExisting:
          description: Specifies whether to override the existing files. Default is
            true.
          nullable: true
          type: boolean
          x-order: 3
        preserveAttributes:
          description: Specifies whether to preserve original attributes. Default
            is true.
          nullable: true
          type: boolean
          x-order: 4
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of files or folders failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 5
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered files
            and folders. If this is not specified, then the VLAN settings will be
            automatically selected from one of the below options: a. If VLANs are
            configured on Cohesity, then the VLAN host/VIP will be automatically based
            on the client''s (e.g. ESXI host) IP address. b. If VLANs are not configured
            on Cohesity, then the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 6
      required:
      - recoverToOriginalTarget
      title: HyperV Target Params for Recover File And Folder
      type: object
    HyperVTargetParamsForRecoverVm:
      description: Specifies the parameters for a HyperV recovery target.
      properties:
        renameRecoveredVmsParams:
          allOf:
          - $ref: '#/components/schemas/RecoveredOrClonedVmsRenameConfig'
          - type: object
            x-nullable: true
          description: Specifies params to rename the VMs that are recovered. If not
            specified, the original names of the VMs are preserved.
          nullable: true
          type: object
          x-order: 0
        recoveryTargetConfig:
          allOf:
          - $ref: '#/components/schemas/HyperVVmRecoveryTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the recovery target configuration if recovery has
            to be done to a different location which is different from original source
            or to original Source with different configuration. If not specified,
            then the recovery of the vms will be performed to original location with
            all configuration parameters retained.
          nullable: true
          type: object
          x-order: 1
        powerOnVms:
          description: Specifies whether to power on vms after recovery. If not specified,
            or false, recovered vms will be in powered off state.
          nullable: true
          type: boolean
          x-order: 2
        continueOnError:
          description: Specifies whether to continue recovering other vms if one of
            vms failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 3
        instantRecovery:
          description: Specifies whether to perform an instant recovery. By instant
            recovery, the recovered VM is available before files are completely copied
            to the recovered VM. Default is true.
          nullable: true
          type: boolean
          x-order: 4
        useSmbService:
          description: Specifies if the HyperV recovery is using the SMB service to
            perform the restore. On-prem, this is the case by default. However, as
            of today, DMaaS does not support SMB, and HyperV VM VM restores will employ
            an alternative restore method in this case.
          nullable: true
          type: boolean
          x-order: 5
        preserveUuids:
          description: Specifies whether to preserve uuids of recovered VMs. Default
            is false.
          nullable: true
          type: boolean
          x-order: 6
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered. If this
            is not specified, then the VLAN settings will be automatically selected
            from one of the below options: a. If VLANs are configured on Cohesity,
            then the VLAN host/VIP will be automatically based on the client''s (e.g.
            ESXI host) IP address. b. If VLANs are not configured on Cohesity, then
            the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 7
      title: HyperV Target Params.
      type: object
    HyperVVmRecoveryTargetConfig:
      description: Specifies the target object parameters to recover HyperV vms.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or an existing Source Target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverHyperVVmNewSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the VMs will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverHyperVVmOriginalSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if VM's are being recovered
            to Original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: HyperV VMs Recovery Target Config.
      type: object
    HypervSnapshotParams:
      description: Specifies parameters of HyperV type snapshots.
      properties:
        protectionType:
          description: Specifies the protection type of HyperV snapshots.
          enum:
          - kAuto
          - kRCT
          - kVSS
          nullable: true
          type: string
          x-order: 0
      type: object
    ICAPUriStatus:
      description: Specifies the ICAP Uri connection status.
      properties:
        type:
          description: Specifies the ICAP Uri connection status.
          enum:
          - Succeeded
          - Failed
          type: string
          x-order: 0
      type: object
    IamRoleAwsCredentials:
      description: Specifies the credentials to register a commercial AWS
      properties:
        iamRoleArn:
          description: Specifies the IAM role which will be used to access the security
            credentials required for API calls. This should have all the permissions
            required for the tenant's use case. In case of DMaaS this will be the
            Tenant's IAM role ARN. This is assumed only after the cp_iam_role_arn(control
            plane role) is assumed
          nullable: true
          type: string
          x-order: 0
        cpIamRoleArn:
          description: This is only applicable in case of DMaaS. Control plane IAM
            role ARN, this is first assumed by the dataplane(cluster). Then we assume
            the iam_role_arn which is tenant's IAM role with all required permissions.
          nullable: true
          type: string
          x-order: 1
      required:
      - iamRoleArn
      title: AWS IAM Role credentials request parameters.
      type: object
    IamUserAwsCredentials:
      description: Specifies the credentials to register a commercial AWS
      properties:
        accessKey:
          description: Specifies Access key of the AWS account.
          nullable: true
          type: string
          x-order: 0
        secretAccessKey:
          description: Specifies Secret Access key of the AWS account.
          nullable: true
          type: string
          x-order: 1
        arn:
          description: Specifies Amazon Resource Name (owner ID) of the IAM user,
            acts as an unique identifier of as AWS entity.
          nullable: true
          type: string
          x-order: 2
      required:
      - accessKey
      - arn
      - secretAccessKey
      title: AWS IAM User credentials request parameters.
      type: object
    IcapUriConnectionStatus:
      description: Specifies the ICAP Uri connection status.
      example:
        connectionStatus: Succeeded
        icapUri: icapUri
      properties:
        icapUri:
          description: Specifies the ICAP Uri.
          nullable: true
          type: string
          x-order: 0
        connectionStatus:
          description: Specifies the connection status.
          enum:
          - Succeeded
          - Failed
          nullable: true
          type: string
          x-order: 1
      type: object
    IcapUriConnectionStatusList:
      description: Specifies a list of ICAP Uri connection status.
      example:
        icapUriConnectionStatusList:
        - connectionStatus: Succeeded
          icapUri: icapUri
        - connectionStatus: Succeeded
          icapUri: icapUri
      properties:
        icapUriConnectionStatusList:
          description: Specifies the list of ICAP Uri connection status.
          items:
            $ref: '#/components/schemas/IcapUriConnectionStatus'
          nullable: true
          type: array
          x-order: 0
      type: object
    IdMappingParams:
      description: Specifies the params of the user id mapping info of an Active Directory.
      properties:
        sidMappedToUnixRootUser:
          description: Specifies the sid of an Active Directory domain user mapping
            to unix root user.
          nullable: true
          type: string
          x-order: 0
        userIdMappingParams:
          allOf:
          - $ref: '#/components/schemas/UserIdMappingParams'
          - type: object
            x-nullable: true
          description: Specifies the information about how the Unix and Windows users
            are mapped for this domain.
          nullable: true
          type: object
          x-order: 1
      required:
      - sidMappedToUnixRootUser
      - userIdMappingParams
      type: object
    Idp:
      allOf:
      - $ref: '#/components/schemas/CommonIdpParams'
      - $ref: '#/components/schemas/Idp_allOf'
      description: Specifies the Identity Provider Configuration.
      title: IDP Configuration.
    IdpPrincipal:
      description: Specifies the parameters of an IDP Principal.
      example:
        createdTimeUsecs: 6
        expiredTimeUsecs: 5
        idpId: 0
        roles:
        - roles
        - roles
        effectiveTimeUsecs: 5
        profiles:
        - tenantType: Dmaas
          tenantName: tenantName
          tenantId: tenantId
          clusters:
          - regionId: regionId
            clusterId: 2
            clusterIncarnationId: 7
          - regionId: regionId
            clusterId: 2
            clusterIncarnationId: 7
        - tenantType: Dmaas
          tenantName: tenantName
          tenantId: tenantId
          clusters:
          - regionId: regionId
            clusterId: 2
            clusterIncarnationId: 7
          - regionId: regionId
            clusterId: 2
            clusterIncarnationId: 7
        isActive: true
        lastUpdatedTimeUsecs: 1
        sid: sid
        tenantAccesses:
        - tenantStatus: Active
          tenantType: Dmaas
          lastUpdatedTimeMsecs: 3
          tenantName: tenantName
          roles:
          - roles
          - roles
          tenantId: tenantId
          expiredTimeMsecs: 4
          isAccessActive: true
          createdTimeMsecs: 9
          clusters:
          - regionId: regionId
            clusterId: 2
            clusterIncarnationId: 7
          - regionId: regionId
            clusterId: 2
            clusterIncarnationId: 7
          effectiveTimeMsecs: 2
        - tenantStatus: Active
          tenantType: Dmaas
          lastUpdatedTimeMsecs: 3
          tenantName: tenantName
          roles:
          - roles
          - roles
          tenantId: tenantId
          expiredTimeMsecs: 4
          isAccessActive: true
          createdTimeMsecs: 9
          clusters:
          - regionId: regionId
            clusterId: 2
            clusterIncarnationId: 7
          - regionId: regionId
            clusterId: 2
            clusterIncarnationId: 7
          effectiveTimeMsecs: 2
        name: name
        principalType: User
        clusters:
        - clusters
        - clusters
      properties:
        name:
          description: Specifies the name of the Principal.
          nullable: true
          type: string
          x-order: 0
        idpId:
          description: Specifies the IDP of the IDP with which this principal is associated.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        principalType:
          description: Specifies the type of this principal. It can be a 'User' or
            a 'Group'.
          enum:
          - User
          - Group
          nullable: true
          type: string
          x-order: 2
        roles:
          description: Specifies a list of roles associated with this Principal.
          items:
            type: string
          type: array
          x-order: 3
        clusters:
          description: Specifies a list of clusters associated with this Principal.
            They should be in a string with the format '{cluster ID}:{cluster incarnation
            ID}'.
          items:
            type: string
          type: array
          x-order: 4
        isActive:
          description: Specifies whether or not this principal is currently active.
          nullable: true
          type: boolean
          x-order: 5
        createdTimeUsecs:
          description: Specifies the timestamp in microseconds since the epoch when
            this Principal was created.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 6
        lastUpdatedTimeUsecs:
          description: Specifies the timestamp in microseconds since the epoch when
            this Principal was updated.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 7
        effectiveTimeUsecs:
          description: Specifies the starting timestamp in microseconds since the
            epoch when this principal will be able to log in.
          format: int64
          nullable: true
          type: integer
          x-order: 8
        expiredTimeUsecs:
          description: Specifies the timestamp in microseconds since the epoch when
            this principal will no longer be able to log in.
          format: int64
          nullable: true
          type: integer
          x-order: 9
        sid:
          description: Specifies the unique SID of the principal.
          nullable: true
          readOnly: true
          type: string
          x-order: 10
        profiles:
          description: Specifies the list of tenant profiles associated to this principal
            if any.
          items:
            $ref: '#/components/schemas/McmTenantProfile'
          type: array
          x-omitempty: true
          x-order: 11
        tenantAccesses:
          description: Specifies the list of tenant access associated to this principal.
          items:
            $ref: '#/components/schemas/TenantAccess'
          type: array
          x-omitempty: true
          x-order: 12
      required:
      - idpId
      - name
      - principalType
      title: IDP Principal.
      type: object
    IdpPrincipals:
      description: Specifies a list of IDP Principals.
      example:
        principals:
        - createdTimeUsecs: 6
          expiredTimeUsecs: 5
          idpId: 0
          roles:
          - roles
          - roles
          effectiveTimeUsecs: 5
          profiles:
          - tenantType: Dmaas
            tenantName: tenantName
            tenantId: tenantId
            clusters:
            - regionId: regionId
              clusterId: 2
              clusterIncarnationId: 7
            - regionId: regionId
              clusterId: 2
              clusterIncarnationId: 7
          - tenantType: Dmaas
            tenantName: tenantName
            tenantId: tenantId
            clusters:
            - regionId: regionId
              clusterId: 2
              clusterIncarnationId: 7
            - regionId: regionId
              clusterId: 2
              clusterIncarnationId: 7
          isActive: true
          lastUpdatedTimeUsecs: 1
          sid: sid
          tenantAccesses:
          - tenantStatus: Active
            tenantType: Dmaas
            lastUpdatedTimeMsecs: 3
            tenantName: tenantName
            roles:
            - roles
            - roles
            tenantId: tenantId
            expiredTimeMsecs: 4
            isAccessActive: true
            createdTimeMsecs: 9
            clusters:
            - regionId: regionId
              clusterId: 2
              clusterIncarnationId: 7
            - regionId: regionId
              clusterId: 2
              clusterIncarnationId: 7
            effectiveTimeMsecs: 2
          - tenantStatus: Active
            tenantType: Dmaas
            lastUpdatedTimeMsecs: 3
            tenantName: tenantName
            roles:
            - roles
            - roles
            tenantId: tenantId
            expiredTimeMsecs: 4
            isAccessActive: true
            createdTimeMsecs: 9
            clusters:
            - regionId: regionId
              clusterId: 2
              clusterIncarnationId: 7
            - regionId: regionId
              clusterId: 2
              clusterIncarnationId: 7
            effectiveTimeMsecs: 2
          name: name
          principalType: User
          clusters:
          - clusters
          - clusters
        - createdTimeUsecs: 6
          expiredTimeUsecs: 5
          idpId: 0
          roles:
          - roles
          - roles
          effectiveTimeUsecs: 5
          profiles:
          - tenantType: Dmaas
            tenantName: tenantName
            tenantId: tenantId
            clusters:
            - regionId: regionId
              clusterId: 2
              clusterIncarnationId: 7
            - regionId: regionId
              clusterId: 2
              clusterIncarnationId: 7
          - tenantType: Dmaas
            tenantName: tenantName
            tenantId: tenantId
            clusters:
            - regionId: regionId
              clusterId: 2
              clusterIncarnationId: 7
            - regionId: regionId
              clusterId: 2
              clusterIncarnationId: 7
          isActive: true
          lastUpdatedTimeUsecs: 1
          sid: sid
          tenantAccesses:
          - tenantStatus: Active
            tenantType: Dmaas
            lastUpdatedTimeMsecs: 3
            tenantName: tenantName
            roles:
            - roles
            - roles
            tenantId: tenantId
            expiredTimeMsecs: 4
            isAccessActive: true
            createdTimeMsecs: 9
            clusters:
            - regionId: regionId
              clusterId: 2
              clusterIncarnationId: 7
            - regionId: regionId
              clusterId: 2
              clusterIncarnationId: 7
            effectiveTimeMsecs: 2
          - tenantStatus: Active
            tenantType: Dmaas
            lastUpdatedTimeMsecs: 3
            tenantName: tenantName
            roles:
            - roles
            - roles
            tenantId: tenantId
            expiredTimeMsecs: 4
            isAccessActive: true
            createdTimeMsecs: 9
            clusters:
            - regionId: regionId
              clusterId: 2
              clusterIncarnationId: 7
            - regionId: regionId
              clusterId: 2
              clusterIncarnationId: 7
            effectiveTimeMsecs: 2
          name: name
          principalType: User
          clusters:
          - clusters
          - clusters
      properties:
        principals:
          description: Specifies a list of IDP Principals.
          items:
            $ref: '#/components/schemas/IdpPrincipal'
          type: array
          x-order: 0
      title: IDP Principals
      type: object
    Idps:
      description: Identity Providers.
      example:
        idps:
        - null
        - null
      properties:
        idps:
          description: Specifies the list of Idps.
          items:
            $ref: '#/components/schemas/Idp'
          nullable: true
          type: array
          x-order: 0
      type: object
    ImportCertificateByClientcsrRequest:
      description: Specifies the request to import a certificate.
      example:
        certificateServer: certificateServer
        certificateClient: certificateClient
      properties:
        certificateServer:
          description: Specifies the server certificate to be imported.
          nullable: true
          type: string
          x-order: 0
        certificateClient:
          description: Specifies the client certificate to be imported.
          nullable: true
          type: string
          x-order: 1
      required:
      - certificateClient
      - certificateServer
      type: object
    ImportCertificateByClientcsrResponseBody:
      description: Specifies the response to import a certificate.
      example:
        privateKey: privateKey
        certificateServer: certificateServer
        fileServerCert: fileServerCert
      properties:
        certificateServer:
          description: Specifies the server certificate.
          nullable: true
          type: string
          x-order: 0
        privateKey:
          description: Specifies the private key of agent.
          nullable: true
          type: string
          x-order: 1
        fileServerCert:
          description: Specifies the path to the file to be uploaded to server. This
            file has the server cert, id and encrypted private key
          nullable: true
          type: string
          x-order: 2
      title: Import Certificate Response
      type: object
    IncrementalBackupPolicy:
      description: Specifies incremental backup settings for a Protection Group.
      properties:
        schedule:
          $ref: '#/components/schemas/IncrementalSchedule'
      required:
      - schedule
      title: Incremental Backup Schedule and Retention.
      type: object
    IncrementalSchedule:
      description: Specifies settings that defines how frequent backup will be performed
        for a Protection Group.
      properties:
        unit:
          description: 'Specifies how often to start new runs of a Protection Group.
            <br>''Minutes'' specifies that Protection Group run starts periodically
            after certain number of minutes specified in ''frequency'' field. <br>''Hours''
            specifies that Protection Group run starts periodically after certain
            number of hours specified in ''frequency'' field. <br>''Days'' specifies
            that Protection Group run starts periodically after certain number of
            days specified in ''frequency'' field. <br>''Week'' specifies that new
            Protection Group runs start weekly on certain days specified using ''dayOfWeek''
            field. <br>''Month'' specifies that new Protection Group runs start monthly
            on certain day of specific week. This schedule needs ''weekOfMonth'' and
            ''dayOfWeek'' fields to be set. <br> Example: To run the Protection Group
            on Second Sunday of Every Month, following schedule need to be set: <br>
            unit: ''Month'' <br> dayOfWeek: ''Sunday'' <br> weekOfMonth: ''Second'''
          enum:
          - Minutes
          - Hours
          - Days
          - Weeks
          - Months
          nullable: true
          type: string
          x-order: 0
        minuteSchedule:
          $ref: '#/components/schemas/MinuteSchedule'
        hourSchedule:
          $ref: '#/components/schemas/HourSchedule'
        daySchedule:
          $ref: '#/components/schemas/DaySchedule'
        weekSchedule:
          $ref: '#/components/schemas/WeekSchedule'
        monthSchedule:
          $ref: '#/components/schemas/MonthSchedule'
      required:
      - unit
      title: Run Schedule
      type: object
    IndexedCassandraType:
      description: Cassandra object Types for search.
      properties:
        type:
          description: Specifies the Cassandra object Types for search.
          enum:
          - CassandraKeyspaces
          - CassandraTables
          type: string
          x-order: 0
      title: Cassandra object Types for search.
      type: object
    IndexedCouchbaseType:
      description: Couchbase object Types for search.
      properties:
        type:
          description: Specifies the Couchbase object Types for search.
          enum:
          - CouchbaseBuckets
          type: string
          x-order: 0
      title: Couchbase object Types for search.
      type: object
    IndexedHDFSType:
      description: HDFS object Types for search.
      properties:
        type:
          description: Specifies the HDFS object Types for search.
          enum:
          - HDFSFolders
          - HDFSFiles
          type: string
          x-order: 0
      title: HDFS object Types for search.
      type: object
    IndexedHbaseType:
      description: Hbase object Types for search.
      properties:
        type:
          description: Specifies the Hbase object Types for search.
          enum:
          - HbaseNamespaces
          - HbaseTables
          type: string
          x-order: 0
      title: Hbase object Types for search.
      type: object
    IndexedHiveType:
      description: Hive object Types for search.
      properties:
        type:
          description: Specifies the Hive object Types for search.
          enum:
          - HiveDatabases
          - HiveTables
          - HivePartitions
          type: string
          x-order: 0
      title: Hive object Types for search.
      type: object
    IndexedMongoType:
      description: MongoDB object Types for search.
      properties:
        type:
          description: Specifies the MongoDB object Types for search.
          enum:
          - MongoDatabases
          - MongoCollections
          type: string
          x-order: 0
      title: MongoDB object Types for search.
      type: object
    IndexedObjectSnapshot:
      description: Specifies a snapshot containing the indexed object.
      example:
        protectionGroupId: protectionGroupId
        storageDomainId: 6
        protectionGroupName: protectionGroupName
        runType: kRegular
        indexedObjectName: indexedObjectName
        inodeId: 5
        objectSnapshotid: objectSnapshotid
        snapshotTimestampUsecs: 0
        lastModifiedTimeUsecs: 2
        externalTargetInfo: '{}'
        attempts: 1
        sizeBytes: 5
      properties:
        indexedObjectName:
          description: Specifies the indexed object name.
          nullable: true
          type: string
          x-order: 0
        objectSnapshotid:
          description: Specifies snapshot id of the object containing this indexed
            object.
          nullable: true
          type: string
          x-order: 1
        snapshotTimestampUsecs:
          description: Specifies a unix timestamp when the object snapshot was taken
            in micro seconds.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        runType:
          description: Specifies the type of protection run created this snapshot.
          enum:
          - kRegular
          - kFull
          - kLog
          - kSystem
          - kHydrateCDP
          nullable: true
          type: string
          x-order: 3
        protectionGroupId:
          description: Specifies the protection group id which contains this snapshot.
          nullable: true
          type: string
          x-order: 4
        protectionGroupName:
          description: Specifies the protection group name which contains this snapshot.
          nullable: true
          type: string
          x-order: 5
        storageDomainId:
          description: Specifies the storage domain id containing this snapshot.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        attempts:
          description: Specifies the number of runs have been executed before the
            run completed successfully.
          format: int64
          nullable: true
          type: integer
          x-order: 7
        sizeBytes:
          description: Specifies the indexed object size in bytes.
          format: int64
          nullable: true
          type: integer
          x-order: 8
        inodeId:
          description: Specifies the source inode number of the file being recovered.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 9
        lastModifiedTimeUsecs:
          description: Specifies the last time file was modified in unix timestamp.
          format: int64
          nullable: true
          type: integer
          x-order: 10
        externalTargetInfo:
          allOf:
          - $ref: '#/components/schemas/ArchivalTargetSummaryInfo'
          - type: object
            x-nullable: true
          description: Specifies the external target information if this is an archival
            snapshot.
          nullable: true
          type: object
          x-order: 11
      type: object
    IndexedObjectType:
      description: Indexed object Type.
      properties:
        type:
          description: Specifies the indexed object type.
          enum:
          - Emails
          - Files
          - CassandraObjects
          - CouchbaseObjects
          - HbaseObjects
          - HiveObjects
          - MongoObjects
          - HDFSObjects
          - ExchangeObjects
          - PublicFolders
          - TeamsObjects
          - SharepointObjects
          type: string
          x-order: 0
      title: Indexed object type.
      type: object
    IndexedTeamItemType:
      description: Microsoft365 Teams item types for search.
      properties:
        type:
          description: Specifies the Teams item types for search.
          enum:
          - Channel
          - Chat
          - Conversation
          - File
          - Folder
          type: string
          x-order: 0
      title: Microsoft365 Teams item types for search.
      type: object
    IndexingCloudConfig:
      description: Config required for indexing in DMaaS.
      properties:
        tenantId:
          description: Tenant ID to which this config belongs.
          nullable: true
          type: string
          x-order: 0
        region:
          description: Name of the cloud region.
          nullable: true
          type: string
          x-order: 1
        esConfig:
          $ref: '#/components/schemas/ESConfigForIndexing'
        s3Config:
          $ref: '#/components/schemas/S3ConfigForIndexing'
      required:
      - esConfig
      - region
      - s3Config
      - tenantId
      title: IndexingCloudConfig
      type: object
    IndexingPolicy:
      description: Specifies settings for indexing files found in an Object (such
        as a VM) so these files can be searched and recovered. This also specifies
        inclusion and exclusion rules that determine the directories to index.
      properties:
        enableIndexing:
          description: Specifies if the files found in an Object (such as a VM) should
            be indexed. If true (the default), files are indexed.
          type: boolean
          x-order: 0
        includePaths:
          description: 'Array of Indexed Directories. Specifies a list of directories
            to index. Regular expression can also be specified to provide the directory
            paths. Example: /Users/<wildcard>/AppData'
          items:
            type: string
          nullable: true
          type: array
          x-order: 1
        excludePaths:
          description: 'Array of Excluded Directories. Specifies a list of directories
            to exclude from indexing.Regular expression can also be specified to provide
            the directory paths. Example: /Users/<wildcard>/AppData'
          items:
            type: string
          nullable: true
          type: array
          x-order: 2
      required:
      - enableIndexing
      title: Indexing Policy.
      type: object
    InfectedFile:
      description: Specifes an infected file.
      example:
        threatDescriptions:
        - threatDescriptions
        - threatDescriptions
        scannedTimeUsecs: 5
        path: path
        viewId: 1
        detectedTimeUsecs: 5
        antivirusServiceIcapUri: antivirusServiceIcapUri
        lastModifiedTimeUsecs: 2
        entityId: 0
        state: Quarantined
        rootInodeId: 6
        antivirusServiceGroupName: antivirusServiceGroupName
      properties:
        path:
          description: Specifies the infected file path.
          nullable: true
          type: string
          x-order: 0
        entityId:
          description: Specifies the entity id of the infected file.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        rootInodeId:
          description: Specifies the root inode id of the file system which the infected
            file belongs to.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        viewId:
          description: Specifies the view id which the infected file belongs to.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        state:
          description: Sepcifies the state of the infected file.
          enum:
          - Quarantined
          - Unquarantined
          nullable: true
          type: string
          x-order: 4
        threatDescriptions:
          description: Specifies a list of virus threat descriptions found in the
            file.
          items:
            type: string
          nullable: true
          type: array
          x-order: 5
        scannedTimeUsecs:
          description: Specifies the timestamp in microseconds when inode was scanned
            for viruses.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        detectedTimeUsecs:
          description: Specifies the timestamp in microseconds when the threats were
            detected.
          format: int64
          nullable: true
          type: integer
          x-order: 7
        lastModifiedTimeUsecs:
          description: Specifies the timestamp in microseconds when this file was
            last modified.
          format: int64
          nullable: true
          type: integer
          x-order: 8
        antivirusServiceIcapUri:
          description: Specifies the ICAP Uri of the Antivirus Service which detected
            the threats.
          nullable: true
          type: string
          x-order: 9
        antivirusServiceGroupName:
          description: Specifies the Antivirus Service group which detected the threats.
          nullable: true
          type: string
          x-order: 10
      type: object
    InfectedFileState:
      description: Specifies the state of infected file.
      properties:
        type:
          description: Specifies the state of infected file.
          enum:
          - Quarantined
          - Unquarantined
          type: string
          x-order: 0
      type: object
    InfectedFiles:
      description: Specifies a list of infected files.
      example:
        infectedFiles:
        - threatDescriptions:
          - threatDescriptions
          - threatDescriptions
          scannedTimeUsecs: 5
          path: path
          viewId: 1
          detectedTimeUsecs: 5
          antivirusServiceIcapUri: antivirusServiceIcapUri
          lastModifiedTimeUsecs: 2
          entityId: 0
          state: Quarantined
          rootInodeId: 6
          antivirusServiceGroupName: antivirusServiceGroupName
        - threatDescriptions:
          - threatDescriptions
          - threatDescriptions
          scannedTimeUsecs: 5
          path: path
          viewId: 1
          detectedTimeUsecs: 5
          antivirusServiceIcapUri: antivirusServiceIcapUri
          lastModifiedTimeUsecs: 2
          entityId: 0
          state: Quarantined
          rootInodeId: 6
          antivirusServiceGroupName: antivirusServiceGroupName
        cookie: cookie
      properties:
        infectedFiles:
          description: Specifies the list of infected files.
          items:
            $ref: '#/components/schemas/InfectedFile'
          nullable: true
          type: array
          x-order: 0
        cookie:
          description: Sepcifies the pagination cookie.
          nullable: true
          type: string
          x-order: 1
      type: object
    InitFailoverRequest:
      description: Specifies the failover request parameters to initiate a failover.
      example:
        sourceCluster:
          protectionGroupId: protectionGroupId
          viewId: 5
          id: 1
          incarnationId: 5
        replicationCluster:
          protectionGroupId: protectionGroupId
          objects:
          - objectId: 0
          - objectId: 0
      properties:
        sourceCluster:
          $ref: '#/components/schemas/FailoverSourceCluster'
        replicationCluster:
          $ref: '#/components/schemas/FailoverReplicaCluster'
      title: Init Failover Request.
      type: object
    InitFailoverResponse:
      description: Specifies the response after succesfully initiating the failover
        request.
      example:
        sourceClusterInfo:
          protectionGroupId: protectionGroupId
          viewId: 5
          id: 1
          incarnationId: 5
        replicaToSourceObjects:
        - replicaObjectId: 0
          sourceObjectId: 6
        - replicaObjectId: 0
          sourceObjectId: 6
      properties:
        replicaToSourceObjects:
          description: Specifies the list of corrosponding source objects mapped with
            replica objects provided at the time of initiating failover request.
          items:
            $ref: '#/components/schemas/SourceReplicaObject'
          nullable: true
          type: array
          x-order: 0
        sourceClusterInfo:
          $ref: '#/components/schemas/FailoverSourceCluster'
      type: object
    InterfaceRoleType:
      description: Role of a network interface.
      properties:
        interfaceRoleType:
          description: Specifies the network interface role.
          enum:
          - Primary
          - Secondary
          - Undefined
          type: string
          x-order: 0
      title: Interface Role Type
      type: object
    IpPreference:
      description: Preferred IP address mode of the cluster
      properties:
        ipPreference:
          description: Specifies the ip preference of cluster.
          enum:
          - Ipv4
          - Ipv6
          type: string
          x-order: 0
      title: IP Address Preference
      type: object
    IsilonDataTieringParams:
      description: Specifies the parameters which are specific to Isilon related Protection
        Groups.
      example:
        sourceId: 1
        objects:
        - name: name
          id: 0
        - name: name
          id: 0
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/ProtectionObjectInput'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        sourceId:
          description: Specifies the id of the root of data tiering source.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      required:
      - objects
      type: object
    IsilonObjectParams:
      description: Specifies the common parameters for Isilon objects.
      properties:
        supportedNasMountProtocols:
          description: Specifies a list of NAS mount protocols supported by this object.
          items:
            enum:
            - kNfs
            - kSmb
            type: string
          nullable: true
          type: array
          x-order: 0
      type: object
    IsilonObjectProtectionParams:
      description: Specifies the parameters which are specific to Isilon object protection.
      properties:
        protocol:
          description: Specifies the protocol of the NAS device being backed up.
          enum:
          - kNoProtocol
          - kNfs3
          - kNfs4_1
          - kCifs1
          - kCifs2
          - kCifs3
          nullable: true
          type: string
          x-order: 0
        continuousSnapshots:
          $ref: '#/components/schemas/ContinuousSnapshotParams'
        useChangelist:
          description: Specify whether to use the Isilon Changelist API to directly
            discover changed files/directories for faster incremental backup. Cohesity
            will keep an extra snapshot which will be deleted by the next successful
            backup.
          nullable: true
          type: boolean
          x-order: 2
      type: object
    IsilonObjectProtectionRequestParams:
      allOf:
      - $ref: '#/components/schemas/ElastifileObjectProtectionRequestParams_allOf'
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      - $ref: '#/components/schemas/IsilonObjectProtectionParams'
      description: Specifies the parameters which are specific to Isilon object protection.
    IsilonObjectProtectionResponseParams:
      allOf:
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      - $ref: '#/components/schemas/IsilonObjectProtectionParams'
      description: Specifies the parameters which are specific to Isilon object protection.
    IsilonObjectProtectionUpdateRequestParams:
      allOf:
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      - $ref: '#/components/schemas/IsilonObjectProtectionParams'
      description: Specifies the update parameters which are specific to Isilon object
        protection.
    IsilonProtectionGroupObjectParams:
      description: Specifies an object protected by a Isilon Protection Group.
      properties:
        id:
          description: Specifies the ID of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      type: object
    IsilonProtectionGroupParams:
      description: Specifies the parameters which are specific to Isilon related Protection
        Groups.
      nullable: true
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/IsilonProtectionGroupObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        directCloudArchive:
          description: Specifies whether or not to store the snapshots in this run
            directly in an Archive Target instead of on the Cluster. If this is set
            to true, the associated policy must have exactly one Archive Target associated
            with it and the policy must be set up to archive after every run. Also,
            a Storage Domain cannot be specified. Default behavior is 'false'.
          nullable: true
          type: boolean
          x-order: 1
        nativeFormat:
          description: Specifies whether or not to enable native format for direct
            archive job. This field is set to true if native format should be used
            for archiving.
          nullable: true
          type: boolean
          x-order: 2
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        protocol:
          description: Specifies the preferred protocol to use if this device supports
            multiple protocols.
          enum:
          - kNoProtocol
          - kNfs3
          - kNfs4_1
          - kCifs1
          - kCifs2
          - kCifs3
          nullable: true
          type: string
          x-order: 4
        continueOnError:
          description: Specifies whether or not the Protection Group should continue
            regardless of whether or not an error was encountered during protection
            group run.
          nullable: true
          type: boolean
          x-order: 5
        encryptionEnabled:
          description: Specifies whether the protection group should use encryption
            while backup or not.
          nullable: true
          type: boolean
          x-order: 6
        fileLockConfig:
          $ref: '#/components/schemas/FileLevelDataLockConfig'
        fileFilters:
          $ref: '#/components/schemas/FileFilteringPolicy'
        useChangelist:
          description: Specify whether to use the Isilon Changelist API to directly
            discover changed files/directories for faster incremental backup. Cohesity
            will keep an extra snapshot which will be deleted by the next successful
            backup.
          nullable: true
          type: boolean
          x-order: 9
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 10
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 11
        prePostScript:
          $ref: '#/components/schemas/HostBasedBackupScriptParams'
        continuousSnapshots:
          $ref: '#/components/schemas/ContinuousSnapshotParams'
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        throttlingConfig:
          $ref: '#/components/schemas/NasThrottlingConfig'
      required:
      - objects
      type: object
      x-nullable: true
    IsilonProtocol:
      description: Isilon Protocol type.
      properties:
        isilonProtocol:
          description: Specifies Isilon Protocol type.
          enum:
          - kNfs
          - kSmb
          type: string
          x-order: 0
      title: Isilon Protocol type.
      type: object
    IsilonRegistrationParams:
      description: Specifies parameters to register an Isilon Source.
      properties:
        endpoint:
          description: Specifies the IP Address Endpoint for the Isilon Source.
          nullable: true
          type: string
          x-order: 0
        credentials:
          $ref: '#/components/schemas/Credentials'
        backUpSMBVolumes:
          description: Specifies whether or not to back up SMB Volumes.
          nullable: true
          type: boolean
          x-order: 2
        smbCredentials:
          $ref: '#/components/schemas/SmbMountCredentials'
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        throttlingConfig:
          $ref: '#/components/schemas/NasThrottlingConfig'
      required:
      - credentials
      - endpoint
      title: Isilon Protection Source.
      type: object
    KerberosProvider:
      description: Specifies the the Kerberos Provider details.
      example:
        overwritehostAlias: true
        realmName: realmName
        kdcServers:
        - kdcServers
        - kdcServers
        adminServer: adminServer
        ldapProviderId: 0
        id: id
        hostAlias:
        - hostAlias
        - hostAlias
      properties:
        id:
          description: Specifies the id.
          nullable: true
          pattern: ^\d+:\d+:\d+$
          readOnly: true
          type: string
          x-order: 0
        realmName:
          description: Specifies the realm name.
          nullable: true
          type: string
          x-order: 1
        kdcServers:
          description: Specifies a list of Key distribution Centre(KDC) Severs.
          items:
            type: string
          type: array
          x-omitempty: true
          x-order: 2
        adminServer:
          description: |-
            Specifies the admin server used for registration from
            the list of KDC servers.
          nullable: true
          type: string
          x-order: 3
        ldapProviderId:
          description: Specifies the LDAP provider id to be mapped
          format: int64
          nullable: true
          type: integer
          x-order: 4
        overwritehostAlias:
          description: |-
            Specifies if specified host alias should
            overwrite existing host alias.
          nullable: true
          type: boolean
          x-order: 5
        hostAlias:
          description: Specifies the DNS routable host alias names.
          items:
            pattern: ^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,13}[a-zA-Z0-9])$
            type: string
          type: array
          x-omitempty: true
          x-order: 6
      required:
      - adminServer
      - hostAlias
      - kdcServers
      - realmName
      type: object
    KerberosProviders:
      description: Response of Kerberos Providers.
      example:
        kerberosProviders:
        - overwritehostAlias: true
          realmName: realmName
          kdcServers:
          - kdcServers
          - kdcServers
          adminServer: adminServer
          ldapProviderId: 0
          id: id
          hostAlias:
          - hostAlias
          - hostAlias
        - overwritehostAlias: true
          realmName: realmName
          kdcServers:
          - kdcServers
          - kdcServers
          adminServer: adminServer
          ldapProviderId: 0
          id: id
          hostAlias:
          - hostAlias
          - hostAlias
      properties:
        kerberosProviders:
          description: A list of registered Kerberos Providers.
          items:
            $ref: '#/components/schemas/KerberosProvider'
          type: array
          x-omitempty: true
          x-order: 0
      type: object
    KeyValuePair:
      description: Specifies a map structure to store Key and Values.
      properties:
        key:
          description: key
          nullable: true
          type: string
          x-order: 0
        value:
          description: value
          nullable: true
          type: string
          x-order: 1
      required:
      - key
      - value
      title: KeyValuePair
      type: object
    Keystone:
      allOf:
      - $ref: '#/components/schemas/KeystoneCredentials'
      - $ref: '#/components/schemas/Keystone_allOf'
      description: Specifies a Keystone.
    KeystoneAdminParams:
      description: Specifies administrator credentials of a Keystone.
      properties:
        domain:
          description: Specifies the administrator domain name.
          nullable: true
          type: string
          x-order: 0
        username:
          description: Specifies the username of Keystone administrator.
          nullable: true
          type: string
          x-order: 1
        password:
          description: Specifies the password of Keystone administrator.
          nullable: true
          type: string
          x-order: 2
      required:
      - domain
      - username
      type: object
    KeystoneCredentials:
      description: Specifies user credentials of a Keystone server.
      example:
        scope: '{}'
        adminCreds: '{}'
      properties:
        adminCreds:
          allOf:
          - $ref: '#/components/schemas/KeystoneAdminParams'
          - type: object
            x-nullable: true
          description: Specifies parameters related to Keystone administrator.
          type: object
          x-order: 0
        scope:
          allOf:
          - $ref: '#/components/schemas/KeystoneScopeParams'
          - type: object
            x-nullable: true
          description: Specifies parameters related to Keystone scope.
          type: object
          x-order: 1
      required:
      - adminCreds
      - scope
      type: object
    KeystoneScopeParams:
      description: Specifies scope paramteres of a Keystone.
      properties:
        type:
          description: Specifies the scope type.
          enum:
          - Project
          - Domain
          nullable: true
          type: string
          x-order: 0
        projectScopeParams:
          allOf:
          - $ref: '#/components/schemas/ProjectScopeParams'
          - type: object
            x-nullable: true
          description: Specifies the parameter for project type scope.
          type: object
          x-order: 1
        domainScopeParams:
          allOf:
          - $ref: '#/components/schemas/DomainScopeParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters for domain type scope.
          type: object
          x-order: 2
      required:
      - type
      type: object
    KeystoneScopeType:
      description: Scope type of a Keystone configuration.
      properties:
        keystoneScopeType:
          description: Specifies the scope type of a Keystone configuration.
          enum:
          - Project
          - Domain
          type: string
          x-order: 0
      title: Keystone Scope Type
      type: object
    Keystones:
      description: Specifies a list of Keystones.
      example:
        keystones:
        - null
        - null
      properties:
        keystones:
          description: Specifies a list of Keystones.
          items:
            $ref: '#/components/schemas/Keystone'
          type: array
          x-order: 0
      type: object
    KubernetesFilterParams:
      description: 'Specifies the parameters to in/exclude objects (e.g.: volumes).
        An object satisfying any of these criteria will be included by this filter.'
      nullable: true
      properties:
        objects:
          description: Array of objects that are to be included.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          uniqueItems: true
          x-order: 0
        labelIds:
          description: 'Array of Arrays of Label Ids that Specify Objects (e.g.: Persistent
            Volumes and Persistent Volume Claims) to Include or Exclude. Optionally
            specify a list of items to include in filter by listing Source Ids of
            Labels in this two dimensional array. Using this two dimensional array
            of Labels, the Cluster generates a list of items to include in the filter,
            which are derived from intersections of the inner arrays and union of
            the outer array, as shown by the following example. For example a Namespace
            is selected to be protected but you want to exclude all the ''Employees:Former''
            items in the ''Location:East'' and ''Location:West'' but keep all the
            items for ''Employees:Former'' in the South which are also stored in this
            Namespace, by specifying the following source id array: [ [1000, 2221],
            [1000, 3031] ], where 1000 is the ''Employee:Former'' Label id, 2221 is
            the ''Location:East'' Label id and 3031 is the ''West'' Label id. The
            first inner array [1000, 2221] produces a list of items that are both
            labeled with ''Employees:Former'' and ''Location:East'' (an intersection).
            The second inner array [1000, 3031] produces a list of items that are
            both labeled with ''Employees:Former'' and ''Location:West'' (an intersection).
            The outer array combines the items from the two inner arrays. The list
            of resulting items, when combined with isExclude=true, are then excluded
            from being protected this Job.'
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
          x-order: 1
      title: Kubernetes Filter Params.
      type: object
      x-nullable: true
    KubernetesNamespaceRecoveryNewSourceConfig:
      description: Specifies the new source configuration if a Kubernetes Namespace
        is being restored to a different source than the one from which it was protected.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the parent source to recover the Namespaces.
          nullable: true
          type: object
          x-order: 0
      required:
      - source
      title: Kubernetes Namespace Recovery New Source Config
      type: object
    KubernetesNamespaceRecoveryTargetConfig:
      description: Specifies the recovery target configuration of the Namespace recovery.
      properties:
        recoverToNewSource:
          description: Specifies whether or not to recover the Namespaces to a different
            source than they were backed up from.
          nullable: true
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/KubernetesNamespaceRecoveryNewSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the new source configuration if a Kubernetes Namespace
            is being restored to a different source than the one from which it was
            protected.
          nullable: true
          type: object
          x-order: 1
      required:
      - recoverToNewSource
      title: Kubernetes Namespace Recovery Target Config
      type: object
    KubernetesProtectionGroupObjectParams:
      description: Specifies the object parameters to create Kubernetes Protection
        Group.
      properties:
        id:
          description: Specifies the id of the object.
          format: int64
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      title: Kubernetes ProtectionGroup Object Params
      type: object
    KubernetesProtectionGroupParams:
      description: Specifies the parameters which are related to Kubernetes Protection
        Groups.
      properties:
        objects:
          description: Specifies the objects included in the Protection Group.
          items:
            $ref: '#/components/schemas/KubernetesProtectionGroupObjectParams'
          type: array
          uniqueItems: true
          x-order: 0
        excludeObjectIds:
          description: Specifies the objects to be excluded in the Protection Group.
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
          x-order: 1
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 2
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 3
        labelIds:
          description: Array of array of label IDs that specify labels to protect.
            Optionally specify a list of labels to protect by listing protection source
            ids of labels in this two dimensional array. Using this two dimensional
            array of label IDs, the cluster generates a list of namespaces to protect,
            which are derived from intersections of the inner arrays and union of
            the outer array.
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
          x-order: 4
        excludeLabelIds:
          description: Array of arrays of label IDs that specify labels to exclude.
            Optionally specify a list of labels to exclude from protecting by listing
            protection source ids of labels in this two dimensional array. Using this
            two dimensional array of label IDs, the Cluster generates a list of namespaces
            to exclude from protecting, which are derived from intersections of the
            inner arrays and union of the outer array.
          items:
            items:
              format: int64
              type: integer
            type: array
          type: array
          x-order: 5
        includeParams:
          $ref: '#/components/schemas/KubernetesFilterParams'
        excludeParams:
          $ref: '#/components/schemas/KubernetesFilterParams'
      type: object
    KubernetesTargetParamsForRecoverKubernetesNamespace:
      description: Specifies the parameters for recovering a Kubernetes namespace
        to a Kubernetes source.
      properties:
        objects:
          description: Specifies the objects to be recovered.
          items:
            $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          minItems: 1
          nullable: true
          type: array
          x-order: 0
        recoverProtectionGroupRunsParams:
          description: Specifies the Protection Group Runs params to recover. All
            the VM's that are successfully backed up by specified Runs will be recovered.
            This can be specified along with individual snapshots of VMs. User has
            to make sure that specified Object snapshots and Protection Group Runs
            should not have any intersection. For example, user cannot specify multiple
            Runs which has same Object or an Object snapshot and a Run which has same
            Object's snapshot.
          items:
            $ref: '#/components/schemas/RecoverProtectionGroupRunParams'
          nullable: true
          type: array
          x-order: 1
        renameRecoveredNamespacesParams:
          allOf:
          - $ref: '#/components/schemas/RecoveredOrClonedVmsRenameConfig'
          - type: object
            x-nullable: true
          description: Specifies params to rename the Namespaces that are recovered.
            If not specified, the original names of the Namespaces are preserved.
            If a name collision occurs then the Namespace being recovered will overwrite
            the Namespace already present on the source.
          nullable: true
          type: object
          x-order: 2
        recoveryTargetConfig:
          allOf:
          - $ref: '#/components/schemas/KubernetesNamespaceRecoveryTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the recovery target configuration of the Namespace
            recovery.
          nullable: true
          type: object
          x-order: 3
      required:
      - recoveryTargetConfig
      title: Kubernetes Target Params For Recover Namespace
      type: object
    KvmProtectionGroupObjectParams:
      description: Specifies an object protected by a KVM Protection Group.
      properties:
        id:
          description: Specifies the ID of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the virtual machine.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      type: object
    KvmProtectionGroupParams:
      description: Specifies the parameters which are specific to Kvm related Protection
        Groups.
      nullable: true
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/KvmProtectionGroupObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        excludeObjectIds:
          description: Specifies the object ids to be excluded in the Protection Group.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          uniqueItems: true
          x-order: 1
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 2
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 3
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        appConsistentSnapshot:
          description: Specifies whether or not to quiesce apps and the file system
            in order to take app consistent snapshots. If not specified or false then
            snapshots will not be app consistent.
          nullable: true
          type: boolean
          x-order: 5
      required:
      - objects
      type: object
      x-nullable: true
    KvmTargetParamsForRecoverVm:
      description: Specifies the parameters for a KVM recovery target.
      properties:
        renameRecoveredVmsParams:
          allOf:
          - $ref: '#/components/schemas/RecoveredOrClonedVmsRenameConfig'
          - type: object
            x-nullable: true
          description: Specifies params to rename the VMs that are recovered. If not
            specified, the original names of the VMs are preserved.
          type: object
          x-order: 0
        recoveryTargetConfig:
          allOf:
          - $ref: '#/components/schemas/KvmVmRecoveryTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the recovery target configuration if recovery has
            to be done to a different location which is different from original source
            or to original Snource with different configuration. If not specified,
            then the recovery of the vms will be performed to original location with
            all configuration parameters retained.
          type: object
          x-order: 1
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered. If this
            is not specified, then the VLAN settings will be automatically selected
            from one of the below options: a. If VLANs are configured on Cohesity,
            then the VLAN host/VIP will be automatically based on the client''s (e.g.
            ESXI host) IP address. b. If VLANs are not configured on Cohesity, then
            the partition hostname or VIPs will be used for Recovery.'
          type: object
          x-order: 2
        powerOnVms:
          description: Specifies whether to power on vms after recovery. If not specified,
            or false, recovered vms will be in powered off state.
          nullable: true
          type: boolean
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other vms if one of
            vms failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
      title: KVM Target Params.
      type: object
    KvmVmRecoveryTargetConfig:
      description: Specifies the target object parameters to recover KVM vms.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or an existing Source Target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverKvmVmNewSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the VMs will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverKvmVmOriginalSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if VM's are being recovered
            to Original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: KVM VMs Recovery Target Config.
      type: object
    Language:
      description: Language
      properties:
        language:
          description: Specifies the language.
          enum:
          - en-us
          - ja-jp
          - zh-cn
          type: string
          x-order: 0
      title: Language
      type: object
    Ldap:
      allOf:
      - $ref: '#/components/schemas/CreateLdapParams'
      - $ref: '#/components/schemas/Ldap_allOf'
      description: Specifies an LDAP.
    LdapConnectionStatus:
      description: Specifies the LDAP connection status.
      properties:
        type:
          description: Specifies the LDAP connection status.
          enum:
          - NoError
          - Error
          type: string
          x-order: 0
      type: object
    LdapStatus:
      description: Specifies the LDAP connection status.
      example:
        connectionStatus: NoError
      properties:
        connectionStatus:
          description: Specifies the connection status.
          enum:
          - NoError
          - Error
          nullable: true
          type: string
          x-order: 0
      type: object
    Ldaps:
      description: Specifies a list of LDAPs.
      example:
        ldaps:
        - null
        - null
      properties:
        ldaps:
          description: Specifies the list of LDAPs.
          items:
            $ref: '#/components/schemas/Ldap'
          nullable: true
          type: array
          x-order: 0
      type: object
    ListTenantData:
      description: List of tenants and the clusters to which they belong.
      example:
        tenants:
        - lastUpdatedAtTimeMsecs: 6
          systems:
          - null
          - null
          createdAtTimeMsecs: 0
          name: name
          managedOnHelios: true
          description: description
          id: id
          deletedAtTimeMsecs: 1
          status: Active
        - lastUpdatedAtTimeMsecs: 6
          systems:
          - null
          - null
          createdAtTimeMsecs: 0
          name: name
          managedOnHelios: true
          description: description
          id: id
          deletedAtTimeMsecs: 1
          status: Active
      properties:
        tenants:
          description: List of tenants and the clusters to which they belong.
          items:
            $ref: '#/components/schemas/HeliosTenant'
          type: array
          x-order: 0
      title: ListTenantData
      type: object
    ListTrustedCasResult:
      description: Specifies the basic info about CA Root Certificate.
      example:
        certificates:
        - issuedTo: issuedTo
          issuedTimeUsecs: 0
          registrationTimeUsecs: 1
          lastValidatedTimeUsecs: 5
          issuedBy: issuedBy
          name: name
          description: description
          id: id
          expirationTimeUsecs: 6
          status: Valid
        - issuedTo: issuedTo
          issuedTimeUsecs: 0
          registrationTimeUsecs: 1
          lastValidatedTimeUsecs: 5
          issuedBy: issuedBy
          name: name
          description: description
          id: id
          expirationTimeUsecs: 6
          status: Valid
      properties:
        certificates:
          description: |-
            Array of trusted certificates.
            Specifies the list of certificates returned in this response.
            List is not sorted.
          items:
            $ref: '#/components/schemas/TrustedCa'
          nullable: true
          type: array
          x-order: 0
      type: object
    LocalDiskStatus:
      description: Status of local disk.
      properties:
        status:
          description: Specifies status of the local disk.
          enum:
          - Online
          - Offline
          - Removing
          - OkToRemove
          - Blacklist
          - New
          - Empty
          - Unknown
          - Activating
          type: string
          x-order: 0
      title: Disk status.
      type: object
    LocalGlobalObjectIdList:
      description: List of local and global IDs of objects.
      example:
        objectIdentifiers:
        - globalId: globalId
          localId: 0
        - globalId: globalId
          localId: 0
      properties:
        objectIdentifiers:
          description: Entity look up info summary.
          items:
            $ref: '#/components/schemas/LocalGlobalObjectIds'
          type: array
          x-order: 0
      type: object
    LocalGlobalObjectIds:
      description: Local and global object IDs.
      example:
        globalId: globalId
        localId: 0
      properties:
        localId:
          description: Specifies the local ID of the object.
          format: int64
          type: integer
          x-order: 0
        globalId:
          description: Specifies the global ID of the object.
          type: string
          x-order: 1
      type: object
    Locale:
      description: Locale type.
      properties:
        locale:
          description: Specifies Locale type.
          type: string
          x-order: 0
          x-cohesity-enum: locale_type
      title: Locale type.
      type: object
    LogBackupPolicy:
      description: Specifies log backup settings for a Protection Group.
      properties:
        schedule:
          $ref: '#/components/schemas/LogSchedule'
        retention:
          $ref: '#/components/schemas/Retention'
      required:
      - retention
      - schedule
      title: Log Backup (Databases) Schedule and Retention.
      type: object
    LogSchedule:
      description: Specifies settings that defines how frequent log backup will be
        performed for a Protection Group.
      properties:
        unit:
          description: Specifies how often to start new Protection Group Runs of a
            Protection Group. <br>'Minutes' specifies that Protection Group run starts
            periodically after certain number of minutes specified in 'frequency'
            field. <br>'Hours' specifies that Protection Group run starts periodically
            after certain number of hours specified in 'frequency' field.
          enum:
          - Minutes
          - Hours
          nullable: true
          type: string
          x-order: 0
        minuteSchedule:
          $ref: '#/components/schemas/MinuteSchedule'
        hourSchedule:
          $ref: '#/components/schemas/HourSchedule'
      required:
      - unit
      title: Log Schedule
      type: object
    LogicalVolumeInfo:
      description: Specifies the logical volume info for LVM or LDM volume.
      properties:
        volumeGroupUuid:
          description: Specifies the volume group uuid.
          nullable: true
          type: string
          x-order: 0
        volumeGroupName:
          description: Specifies the volume group name.
          nullable: true
          type: string
          x-order: 1
        logicalVolumeUuid:
          description: Specifies the logical volume uuid.
          nullable: true
          type: string
          x-order: 2
        logicalVolumeName:
          description: Specifies the logical volume name.
          nullable: true
          type: string
          x-order: 3
        deviceTree:
          allOf:
          - $ref: '#/components/schemas/DeviceTreeNode'
          - type: object
            x-nullable: true
          description: Specifies the tree structure of the logical volume.
          type: object
          x-order: 4
      type: object
    MOref:
      description: Specifies the MoRef for a VMware object.
      properties:
        item:
          description: Unique identifier for the object type.
          nullable: true
          type: string
          x-order: 0
        type:
          description: Specifies the type of VMware object
          nullable: true
          type: string
          x-order: 1
      type: object
    MSSQLFileProtectionGroupHostParams:
      description: Specifies the host specific parameters for a host container in
        this protection group. Objects specified here should only be MSSQL root containers
        and will not be protected unless they are also specified in the 'objects'
        list. This list is just for specifying source level settings.
      properties:
        hostId:
          description: Specifies the id of the host container on which databases are
            hosted.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        hostName:
          description: Specifies the name of the host container on which databases
            are hosted.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        disableSourceSideDeduplication:
          description: Specifies whether or not to disable source side deduplication
            on this source. The default behavior is false unless the user has set
            'performSourceSideDeduplication' to true.
          nullable: true
          type: boolean
          x-order: 2
      required:
      - hostId
      title: MSSQL File Protection Group Container Params
      type: object
    MSSQLFileProtectionGroupObjectParams:
      description: Specifies the object params to create File based MSSQL Protection
        Group.
      properties:
        id:
          description: Specifies the ID of the object being protected. If this is
            a non leaf level object, then the object will be auto-protected unless
            leaf objects are specified for exclusion.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object being protected.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        sourceType:
          description: Specifies the type of source being protected.
          nullable: true
          readOnly: true
          type: string
          x-order: 2
          x-cohesity-enum: host_object_environment_type
      required:
      - id
      title: MSSQL File Protection Group Object params.
      type: object
    MSSQLFileProtectionGroupParams:
      allOf:
      - $ref: '#/components/schemas/MSSQLFileProtectionGroupParams_allOf'
      - $ref: '#/components/schemas/CommonMSSQLProtectionGroupParams'
      description: Specifies the params to create a File based MSSQL Protection Group.
      title: File based MSSQL Protection Group Request Params.
    MSSQLNativeProtectionGroupObjectParams:
      description: Specifies the object params to create File based MSSQL Protection
        Group.
      properties:
        id:
          description: Specifies the ID of the object being protected. If this is
            a non leaf level object, then the object will be auto-protected unless
            leaf objects are specified for exclusion.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object being protected.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        sourceType:
          description: Specifies the type of source being protected.
          nullable: true
          readOnly: true
          type: string
          x-order: 2
          x-cohesity-enum: host_object_environment_type
      required:
      - id
      title: MSSQL File Protection Group Object params.
      type: object
    MSSQLNativeProtectionGroupParams:
      allOf:
      - $ref: '#/components/schemas/MSSQLNativeProtectionGroupParams_allOf'
      - $ref: '#/components/schemas/CommonMSSQLProtectionGroupParams'
      description: Specifies the params to create a Native based MSSQL Protection
        Group.
      title: Native based MSSQL Protection Group Request Params.
    MSSQLProtectionGroupParams:
      description: Specifies the parameters specific to MSSQL Protection Group.
      properties:
        protectionType:
          description: Specifies the MSSQL Protection Group type.
          enum:
          - kFile
          - kVolume
          - kNative
          type: string
          x-order: 0
        fileProtectionTypeParams:
          $ref: '#/components/schemas/MSSQLFileProtectionGroupParams'
        volumeProtectionTypeParams:
          $ref: '#/components/schemas/MSSQLVolumeProtectionGroupParams'
        nativeProtectionTypeParams:
          $ref: '#/components/schemas/MSSQLNativeProtectionGroupParams'
      required:
      - protectionType
      title: MSSQL Protection Group Params.
      type: object
    MSSQLVolumeProtectionGroupHostParams:
      description: Specifies the host specific parameters for a host container in
        this protection group. Objects specified here should only be MSSQL root containers
        and will not be protected unless they are also specified in the 'objects'
        list. This list is just for specifying source level settings.
      properties:
        hostId:
          description: Specifies the id of the host container on which databases are
            hosted.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        hostName:
          description: Specifies the name of the host container on which databases
            are hosted.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        volumeGuids:
          description: Specifies the list of volume GUIDs to be protected. If not
            specified, all the volumes of the host will be protected. Note that volumes
            of host on which databases are hosted are protected even if its not mentioned
            in this list.
          items:
            type: string
          nullable: true
          type: array
          x-order: 2
        enableSystemBackup:
          description: Specifies whether to enable system/bmr backup using 3rd party
            tools installed on agent host.
          nullable: true
          type: boolean
          x-order: 3
      required:
      - hostId
      title: MSSQL Volume Protection Group Container Params
      type: object
    MSSQLVolumeProtectionGroupObjectParams:
      description: Specifies the object params to create File based MSSQL Protection
        Group.
      properties:
        id:
          description: Specifies the ID of the object being protected. If this is
            a non leaf level object, then the object will be auto-protected unless
            leaf objects are specified for exclusion.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object being protected.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        sourceType:
          description: Specifies the type of source being protected.
          nullable: true
          readOnly: true
          type: string
          x-order: 2
          x-cohesity-enum: host_object_environment_type
      required:
      - id
      title: MSSQL File Protection Group Object params.
      type: object
    MSSQLVolumeProtectionGroupParams:
      allOf:
      - $ref: '#/components/schemas/MSSQLVolumeProtectionGroupParams_allOf'
      - $ref: '#/components/schemas/CommonMSSQLProtectionGroupParams'
      description: Specifies the params to create a Volume based MSSQL Protection
        Group.
      title: Volume based MSSQL Protection Group Request Params.
    MachineAccount:
      description: Specifies a machine account.
      properties:
        name:
          description: Specifies the machine account name.
          nullable: true
          pattern: ^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,13}[a-zA-Z0-9])$
          type: string
          x-order: 0
        dnsHostName:
          description: Specifies the DNS host name of the machine account.
          nullable: true
          type: string
          x-order: 1
        encryption:
          description: Specifies a list of encryption types apply to the machine account.
          items:
            enum:
            - DES-CBC-CRC
            - DES-CBC-MD5
            - RC4-HMAC
            - AES128-CTS-HMAC-SHA1-96
            - AES256-CTS-HMAC-SHA1-96
            type: string
          nullable: true
          type: array
          uniqueItems: true
          x-order: 2
      required:
      - name
      type: object
    MachineAccountEncryptionType:
      description: Machine account encryption type.
      properties:
        type:
          description: Specifies the encryption type of a machine account.
          enum:
          - DES-CBC-CRC
          - DES-CBC-MD5
          - RC4-HMAC
          - AES128-CTS-HMAC-SHA1-96
          - AES256-CTS-HMAC-SHA1-96
          type: string
          x-order: 0
      title: Machine Account Encryption Type
      type: object
    MailboxItemType:
      description: Mailbox items types for search.
      properties:
        type:
          description: Specifies the Mailbox item type for search.
          enum:
          - Email
          - Folder
          type: string
          x-order: 0
      title: Mailbox items types for search.
      type: object
    MailboxParam:
      description: Specifies parameters to recover a Mailbox.
      properties:
        recoverEntireMailbox:
          description: Specifies whether to recover the whole Mailbox.
          nullable: true
          type: boolean
          x-order: 0
        recoverFolders:
          description: Specifies a list of email folders to recover.
          items:
            $ref: '#/components/schemas/FolderItem'
          nullable: true
          type: array
          x-order: 1
      type: object
    McmAgentImage:
      description: Specifies the agent image information on Helios.
      example:
        downloadURL: downloadURL
        PlatformSubTypes:
        - downloadURL: downloadURL
          packageType: Script
        - downloadURL: downloadURL
          packageType: Script
        platform: Windows
      properties:
        platform:
          description: Specifies the type of the agent platform.
          enum:
          - Windows
          - Linux
          - Solaris
          nullable: true
          type: string
          x-order: 0
        PlatformSubTypes:
          description: Specifies the agent information of platform subtypes.
          items:
            $ref: '#/components/schemas/PlatformSubTypeAgentImageInfo'
          type: array
          x-omitempty: true
          x-order: 1
        downloadURL:
          description: Specifies the URL for agent downlaod.
          nullable: true
          type: string
          x-order: 2
      type: object
    McmAgentImagesResponse:
      description: Specifies the agent image information on Helios.
      example:
        agents:
        - downloadURL: downloadURL
          PlatformSubTypes:
          - downloadURL: downloadURL
            packageType: Script
          - downloadURL: downloadURL
            packageType: Script
          platform: Windows
        - downloadURL: downloadURL
          PlatformSubTypes:
          - downloadURL: downloadURL
            packageType: Script
          - downloadURL: downloadURL
            packageType: Script
          platform: Windows
      properties:
        agents:
          description: Specifies a list of agents from Helios.
          items:
            $ref: '#/components/schemas/McmAgentImage'
          nullable: true
          type: array
          x-order: 0
      type: object
    McmAgentInfo:
      description: Specifies the information for agents related to the source.
      example:
        agentID: 4
        agentDisplayName: agentDisplayName
      properties:
        agentID:
          description: Specifies the ids of the agents related to the source.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        agentDisplayName:
          description: Specifies the hostname/ip address of the source.
          nullable: true
          type: string
          x-order: 1
      type: object
    McmClaimEntityType:
      description: Entity type.
      properties:
        type:
          description: Entity type.
          enum:
          - Rigel
          - Cluster
          type: string
          x-order: 0
      title: Entity type.
      type: object
    McmClusterClaimRequestParams:
      description: Specifies the request params to claim clusters to Helios.
      properties:
        clusterId:
          description: Specifies the cluster id.
          format: int64
          type: integer
          x-order: 0
        clusterIncarnationId:
          description: Specifies the cluster incarnation id.
          format: int64
          type: integer
          x-order: 1
        clusterName:
          description: Specifies the cluster name.
          type: string
          x-order: 2
        claimToken:
          description: Claim token used for authentication.
          type: string
          x-order: 3
      required:
      - claimToken
      - clusterId
      - clusterIncarnationId
      - clusterName
      title: Request params to claim cluster to Helios.
      type: object
    McmClusterClaimResponseParams:
      description: Specifies the response of claiming a cluster to Helios.
      properties:
        clusterId:
          description: Specifies the cluster id.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        clusterIncarnationId:
          description: Specifies the cluster incarnation id.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        clusterName:
          description: Specifies the cluster name.
          nullable: true
          type: string
          x-order: 2
        sfAccountId:
          description: Specifies the Salesforce account id used to claim the cluster.
          nullable: true
          type: string
          x-order: 3
        clusterCertificate:
          description: Specifies the Cluster certificate.
          nullable: true
          type: string
          x-order: 4
        clusterPrivateKey:
          description: Specifies the Cluster private key.
          nullable: true
          type: string
          x-order: 5
        passphrase:
          description: Specifies the passphrase (if used) to encrypt the cluster private
            key.
          nullable: true
          type: string
          x-order: 6
        clusterCaChain:
          description: Specifies the CA chain that is used to sign the Cluster certificate.
          nullable: true
          type: string
          x-order: 7
        heliosCertificate:
          description: Specifies the Helios certificate that can be used to authenticate
            api calls made from Helios to cluster.
          nullable: true
          type: string
          x-order: 8
      title: Response of claiming a cluster to Helios.
      type: object
    McmClusterIdentifier:
      description: Specifies the MCM cluster identifier.
      example:
        regionId: regionId
        clusterId: 2
        clusterIncarnationId: 7
      properties:
        clusterId:
          description: Specifies the cluster id of the cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        clusterIncarnationId:
          description: Specifies the incarnation id of the cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        regionId:
          description: Specifies the region id of the cluster. Only valid for DMaaS
            clusters.
          nullable: true
          type: string
          x-order: 2
      title: MCM Cluster Identifier.
      type: object
    McmCommonSourceRegistrationReponseParams:
      description: Specifies the parameters which are common between all Protection
        Source registrations.
      properties:
        clusterId:
          description: Specifies the cluster id.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 0
        clusterIncarnationId:
          description: Specifies the cluster incarnation id.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 1
        regionId:
          description: Specifies the region id.
          nullable: true
          readOnly: true
          type: string
          x-order: 2
        id:
          description: Source Registration ID. This can be used to retrieve, edit
            or delete the source registration.
          nullable: true
          readOnly: true
          type: string
          x-order: 3
        connectionId:
          description: Specifies the id of the connection from where this source is
            reachable.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        sourceId:
          description: ID of top level source object discovered after the registration.
          nullable: true
          readOnly: true
          type: string
          x-order: 5
        environment:
          description: Specifies the environment type of the Protection Source.
          enum:
          - kVMware
          - kHyperV
          - kAcropolis
          - kKVM
          - kAWS
          - kGCP
          - kAzure
          - kPhysical
          - kPure
          - kNimble
          - kNetapp
          - kGenericNas
          - kIsilon
          - kFlashBlade
          - kGPFS
          - kElastifile
          - kO365
          - kHyperFlex
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          - kSQL
          - kOracle
          nullable: true
          type: string
          x-order: 6
      type: object
    McmGetPolicyLastRunStatsResponseBody:
      description: Specifies the last Protection Run stats across all Protection Policies.
      example:
        statsByPolicy:
        - policyId: policyId
          regionId: regionId
          policyName: policyName
          lastRunStats:
            numObjectsMissedSla: 5
            numObjectsMetSla: 1
          clusterId: 0
          clusterIncarnationId: 6
        - policyId: policyId
          regionId: regionId
          policyName: policyName
          lastRunStats:
            numObjectsMissedSla: 5
            numObjectsMetSla: 1
          clusterId: 0
          clusterIncarnationId: 6
      properties:
        statsByPolicy:
          description: Specifies the last Protection Run stats by policy.
          items:
            $ref: '#/components/schemas/McmPolicyLastProtectionRunStats'
          type: array
          x-order: 0
      title: Protection Policies last Protection Run stats.
      type: object
    McmGetProtectionLastRunStatsResponseBody:
      description: Specifies the last Protection Run stats across objects.
      example:
        envStats:
        - environment: kVMware
          aggregatedStats:
          - count: 0
            status: Accepted
          - count: 0
            status: Accepted
        - environment: kVMware
          aggregatedStats:
          - count: 0
            status: Accepted
          - count: 0
            status: Accepted
        aggregatedStats:
        - count: 0
          status: Accepted
        - count: 0
          status: Accepted
      properties:
        aggregatedStats:
          description: Specifies the aggregated status across all adapters for respective
            last run.
          items:
            $ref: '#/components/schemas/McmLastRunStatusStats'
          type: array
          x-order: 0
        envStats:
          description: Specifies the enviournment specific last run status stats.
          items:
            $ref: '#/components/schemas/McmLastRunEnvSpecificStatusStats'
          type: array
          x-order: 1
      type: object
    McmLastRunEnvSpecificStatusStats:
      description: Specifies the enviournment specific last run status stats.
      example:
        environment: kVMware
        aggregatedStats:
        - count: 0
          status: Accepted
        - count: 0
          status: Accepted
      properties:
        environment:
          description: Specifies the environment type of object.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kGCP
          - kKVM
          - kAcropolis
          - kAWS
          - kPhysical
          - kGPFS
          - kElastifile
          - kNetapp
          - kGenericNas
          - kIsilon
          - kFlashBlade
          - kPure
          - kSQL
          - kExchange
          - kAD
          - kOracle
          - kView
          - kRemoteAdapter
          - kO365
          - kO365PublicFolders
          - kO365Teams
          - kO365Group
          - kO365Exchange
          - kO365OneDrive
          - kO365Sharepoint
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          nullable: true
          type: string
          x-order: 0
        aggregatedStats:
          description: Specifies the aggregated status across all adapters for respective
            last run.
          items:
            $ref: '#/components/schemas/McmLastRunStatusStats'
          type: array
          x-order: 1
      type: object
    McmLastRunStatusStats:
      description: Specifies the last run's status and count of objects having that
        status.
      example:
        count: 0
        status: Accepted
      properties:
        status:
          description: Specifies the status of last run.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          nullable: true
          type: string
          x-order: 0
        count:
          description: Specifies the number of objects having this status.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      title: MCM Last Run Status Count.
      type: object
    McmObjectActivity:
      description: Specifies the Object activity.
      example:
        backupRunParams:
          endTimeUsecs: 5
          protectionGroupId: protectionGroupId
          snapshotId: snapshotId
          protectionGroupName: protectionGroupName
          policyId: policyId
          policyName: policyName
          progressTaskId: progressTaskId
          runId: runId
          startTimeUsecs: 5
          protectionEnvironmentType: kVMware
          status: Accepted
        regionId: regionId
        timestampUsecs: 1
        recoveryParams:
          endTimeUsecs: 7
          name: name
          progressTaskId: progressTaskId
          id: id
          startTimeUsecs: 2
          recoveryType: RecoverVMs
          status: Accepted
        archivalRunParams:
          snapshotId: snapshotId
          protectionGroupName: protectionGroupName
          policyName: policyName
          archivalTargetName: archivalTargetName
          runType: kRegular
          startTimeUsecs: 9
          archivalTargetId: 2
          protectionEnvironmentType: kVMware
          endTimeUsecs: 3
          protectionGroupId: protectionGroupId
          policyId: policyId
          progressTaskId: progressTaskId
          runId: runId
          status: Accepted
        id: id
        clusterId: 0
        clusterIncarnationId: 6
        type: BackupRun
      properties:
        id:
          description: Specifies the unique id of the activity event.
          nullable: true
          type: string
          x-order: 0
        object:
          $ref: '#/components/schemas/ObjectSummary'
        sourceInfo:
          $ref: '#/components/schemas/ObjectSummary'
        clusterId:
          description: Specifies the cluster id.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 3
        clusterIncarnationId:
          description: Specifies the cluster incarnation id.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 4
        regionId:
          description: Specifies the region id. Applicable only in case of DMaaS.
          nullable: true
          readOnly: true
          type: string
          x-order: 5
        timestampUsecs:
          description: Specifies the timestamp in Unix timestamp epoch in microseconds
            at which this activity occured.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        type:
          description: Specifies the type of activity event.
          enum:
          - BackupRun
          - Restore
          - ArchivalRun
          nullable: true
          type: string
          x-order: 7
        backupRunParams:
          $ref: '#/components/schemas/McmObjectBackupRunActivityParams'
        recoveryParams:
          $ref: '#/components/schemas/McmObjectRecoverActivityParams'
        archivalRunParams:
          $ref: '#/components/schemas/McmObjectArchivalRunActivityParams'
      title: Object activity
      type: object
    McmObjectActivityType:
      description: Object activity type.
      properties:
        type:
          description: Specifies type of the object activity.
          enum:
          - BackupRun
          - Restore
          - ArchivalRun
          type: string
          x-order: 0
      title: Object activity type.
      type: object
    McmObjectArchivalRunActivityParams:
      description: Specifies the Object activity of an archival run.
      example:
        snapshotId: snapshotId
        protectionGroupName: protectionGroupName
        policyName: policyName
        archivalTargetName: archivalTargetName
        runType: kRegular
        startTimeUsecs: 9
        archivalTargetId: 2
        protectionEnvironmentType: kVMware
        endTimeUsecs: 3
        protectionGroupId: protectionGroupId
        policyId: policyId
        progressTaskId: progressTaskId
        runId: runId
        status: Accepted
      properties:
        runId:
          description: Specifies the ID of the Protection Run.
          nullable: true
          type: string
          x-order: 0
        runType:
          description: Specifies the type of the Protection Run.
          enum:
          - kRegular
          - kFull
          - kLog
          - kSystem
          - kHydrateCDP
          nullable: true
          type: string
          x-order: 1
        protectionGroupId:
          description: Specifies the Protection Group Id.
          nullable: true
          type: string
          x-order: 2
        protectionGroupName:
          description: Specifies the Protection Group name.
          nullable: true
          type: string
          x-order: 3
        snapshotId:
          description: Specifies the id of the object snapshot that is created as
            a part of this Run. This field is only populated for runs which are successful.
          nullable: true
          type: string
          x-order: 4
        policyId:
          description: Specifies the Protection Policy Id.
          nullable: true
          type: string
          x-order: 5
        policyName:
          description: Specifies the Protection Policy Name.
          nullable: true
          type: string
          x-order: 6
        startTimeUsecs:
          description: Specifies the start time of Run in Unix epoch Timestamp(in
            microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 7
        endTimeUsecs:
          description: Specifies the end time of Run in Unix epoch Timestamp(in microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 8
        status:
          description: Status of the Run. 'Running' indicates that the run is still
            running. 'Canceled' indicates that the run has been canceled. 'Canceling'
            indicates that the run is in the process of being canceled. 'Failed' indicates
            that the run has failed. 'Missed' indicates that the run was unable to
            take place at the scheduled time because the previous run was still happening.
            'Succeeded' indicates that the run has finished successfully. 'SucceededWithWarning'
            indicates that the run finished successfully, but there were some warning
            messages.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          nullable: true
          type: string
          x-order: 9
        progressTaskId:
          description: Progress monitor task id for the Run.
          nullable: true
          type: string
          x-order: 10
        archivalTargetId:
          description: Specifies the id of archival target.
          format: int64
          nullable: true
          type: integer
          x-order: 11
        archivalTargetName:
          description: Specifies the name of archival target.
          nullable: true
          type: string
          x-order: 12
        protectionEnvironmentType:
          description: Specifies the type of protection environment.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kGCP
          - kKVM
          - kAcropolis
          - kAWS
          - kPhysical
          - kGPFS
          - kElastifile
          - kNetapp
          - kGenericNas
          - kIsilon
          - kFlashBlade
          - kPure
          - kSQL
          - kExchange
          - kAD
          - kOracle
          - kView
          - kRemoteAdapter
          - kO365
          - kO365PublicFolders
          - kO365Teams
          - kO365Group
          - kO365Exchange
          - kO365OneDrive
          - kO365Sharepoint
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          nullable: true
          type: string
          x-order: 13
      title: Object Archival Run activity
      type: object
    McmObjectBackupRunActivityParams:
      description: Specifies the Object activity of a backup Run.
      example:
        endTimeUsecs: 5
        protectionGroupId: protectionGroupId
        snapshotId: snapshotId
        protectionGroupName: protectionGroupName
        policyId: policyId
        policyName: policyName
        progressTaskId: progressTaskId
        runId: runId
        startTimeUsecs: 5
        protectionEnvironmentType: kVMware
        status: Accepted
      properties:
        runId:
          description: Specifies the ID of the Protection Run.
          nullable: true
          type: string
          x-order: 0
        protectionGroupId:
          description: Specifies the Protection Group Id.
          nullable: true
          type: string
          x-order: 1
        protectionGroupName:
          description: Specifies the Protection Group name.
          nullable: true
          type: string
          x-order: 2
        policyId:
          description: Specifies the Protection Policy Id.
          nullable: true
          type: string
          x-order: 3
        policyName:
          description: Specifies the Protection Policy Name.
          nullable: true
          type: string
          x-order: 4
        snapshotId:
          description: Specifies the id of the object snapshot that is created as
            a part of this Run. This field is only populated for runs which are successful.
          nullable: true
          type: string
          x-order: 5
        startTimeUsecs:
          description: Specifies the start time of Run in Unix epoch Timestamp(in
            microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 6
        endTimeUsecs:
          description: Specifies the end time of Run in Unix epoch Timestamp(in microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 7
        status:
          description: Status of the Run. 'Running' indicates that the run is still
            running. 'Canceled' indicates that the run has been canceled. 'Canceling'
            indicates that the run is in the process of being canceled. 'Failed' indicates
            that the run has failed. 'Missed' indicates that the run was unable to
            take place at the scheduled time because the previous run was still happening.
            'Succeeded' indicates that the run has finished successfully. 'SucceededWithWarning'
            indicates that the run finished successfully, but there were some warning
            messages.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          nullable: true
          type: string
          x-order: 8
        progressTaskId:
          description: Progress monitor task id for the Run.
          nullable: true
          type: string
          x-order: 9
        protectionEnvironmentType:
          description: Specifies the type of protection environment.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kGCP
          - kKVM
          - kAcropolis
          - kAWS
          - kPhysical
          - kGPFS
          - kElastifile
          - kNetapp
          - kGenericNas
          - kIsilon
          - kFlashBlade
          - kPure
          - kSQL
          - kExchange
          - kAD
          - kOracle
          - kView
          - kRemoteAdapter
          - kO365
          - kO365PublicFolders
          - kO365Teams
          - kO365Group
          - kO365Exchange
          - kO365OneDrive
          - kO365Sharepoint
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          nullable: true
          type: string
          x-order: 10
      title: Object Backup Run activity
      type: object
    McmObjectIdentifier:
      description: Specifies the object identifier.
      example:
        regionId: regionId
        clusterId: 0
        clusterIncarnationId: 6
        objectId: 1
      properties:
        clusterId:
          description: Specifies the cluster id.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        clusterIncarnationId:
          description: Specifies the cluster incarnation id.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        regionId:
          description: Specifies the region id. Applicable only in case of DMaaS.
          nullable: true
          type: string
          x-order: 2
        objectId:
          description: Specifies the object id.
          format: int64
          nullable: true
          type: integer
          x-order: 3
      required:
      - objectId
      title: MCM object identifier
      type: object
    McmObjectRecoverActivityParams:
      description: Specifies the Object activity of a recovery.
      example:
        endTimeUsecs: 7
        name: name
        progressTaskId: progressTaskId
        id: id
        startTimeUsecs: 2
        recoveryType: RecoverVMs
        status: Accepted
      properties:
        id:
          description: Specifies the id of the Recovery.
          nullable: true
          pattern: ^\d+:\d+:\d+$
          type: string
          x-order: 0
        name:
          description: Specifies the name of the Recovery.
          nullable: true
          type: string
          x-order: 1
        startTimeUsecs:
          description: Specifies the start time of the Recovery in Unix timestamp
            epoch in microseconds.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        endTimeUsecs:
          description: Specifies the end time of the Recovery in Unix timestamp epoch
            in microseconds. This field will be populated only after Recovery is finished.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        status:
          description: Status of the Recovery. 'Running' indicates that the Recovery
            is still running. 'Canceled' indicates that the Recovery has been cancelled.
            'Canceling' indicates that the Recovery is in the process of being cancelled.
            'Failed' indicates that the Recovery has failed. 'Succeeded' indicates
            that the Recovery has finished successfully. 'SucceededWithWarning' indicates
            that the Recovery finished successfully, but there were some warning messages.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          nullable: true
          type: string
          x-order: 4
        progressTaskId:
          description: Progress monitor task id for Recovery.
          nullable: true
          type: string
          x-order: 5
        recoveryType:
          description: Specifies the recovery type.
          enum:
          - RecoverVMs
          - RecoverFiles
          - InstantVolumeMount
          - RecoverVmDisks
          - RecoverVApps
          - RecoverVAppTemplates
          - UptierSnapshot
          - RecoverRDS
          - RecoverAurora
          - RecoverApps
          - RecoverNasVolume
          - RecoverPhysicalVolumes
          - RecoverSystem
          - CloneAppView
          - RecoverSanVolumes
          - RecoverMailbox
          - RecoverOneDrive
          - RecoverSharePoint
          - RecoverPublicFolders
          - RecoverMsGroup
          - RecoverMsTeam
          - RecoverNamespaces
          - RecoverObjects
          - DownloadFilesAndFolders
          nullable: true
          type: string
          x-order: 6
      title: Object Recovery activity
      type: object
    McmObjectsActivity:
      description: Specifies the Objects activity.
      example:
        activity:
        - backupRunParams:
            endTimeUsecs: 5
            protectionGroupId: protectionGroupId
            snapshotId: snapshotId
            protectionGroupName: protectionGroupName
            policyId: policyId
            policyName: policyName
            progressTaskId: progressTaskId
            runId: runId
            startTimeUsecs: 5
            protectionEnvironmentType: kVMware
            status: Accepted
          regionId: regionId
          timestampUsecs: 1
          recoveryParams:
            endTimeUsecs: 7
            name: name
            progressTaskId: progressTaskId
            id: id
            startTimeUsecs: 2
            recoveryType: RecoverVMs
            status: Accepted
          archivalRunParams:
            snapshotId: snapshotId
            protectionGroupName: protectionGroupName
            policyName: policyName
            archivalTargetName: archivalTargetName
            runType: kRegular
            startTimeUsecs: 9
            archivalTargetId: 2
            protectionEnvironmentType: kVMware
            endTimeUsecs: 3
            protectionGroupId: protectionGroupId
            policyId: policyId
            progressTaskId: progressTaskId
            runId: runId
            status: Accepted
          id: id
          clusterId: 0
          clusterIncarnationId: 6
          type: BackupRun
        - backupRunParams:
            endTimeUsecs: 5
            protectionGroupId: protectionGroupId
            snapshotId: snapshotId
            protectionGroupName: protectionGroupName
            policyId: policyId
            policyName: policyName
            progressTaskId: progressTaskId
            runId: runId
            startTimeUsecs: 5
            protectionEnvironmentType: kVMware
            status: Accepted
          regionId: regionId
          timestampUsecs: 1
          recoveryParams:
            endTimeUsecs: 7
            name: name
            progressTaskId: progressTaskId
            id: id
            startTimeUsecs: 2
            recoveryType: RecoverVMs
            status: Accepted
          archivalRunParams:
            snapshotId: snapshotId
            protectionGroupName: protectionGroupName
            policyName: policyName
            archivalTargetName: archivalTargetName
            runType: kRegular
            startTimeUsecs: 9
            archivalTargetId: 2
            protectionEnvironmentType: kVMware
            endTimeUsecs: 3
            protectionGroupId: protectionGroupId
            policyId: policyId
            progressTaskId: progressTaskId
            runId: runId
            status: Accepted
          id: id
          clusterId: 0
          clusterIncarnationId: 6
          type: BackupRun
      properties:
        activity:
          description: Specifies the activity list per object.
          items:
            $ref: '#/components/schemas/McmObjectActivity'
          nullable: true
          type: array
          x-order: 0
      title: Objects activity
      type: object
    McmPhysicalSourceInfo:
      description: Specifies the information for a physical source.
      example:
        upgradeStatus: Idle
        upgradability: Upgradable
        agentsInfo:
        - agentID: 4
          agentDisplayName: agentDisplayName
        - agentID: 4
          agentDisplayName: agentDisplayName
        hostType: kLinux
        upgradeError: upgradeError
      properties:
        upgradability:
          description: Specifies the upgradability of the agent software.
          enum:
          - Upgradable
          - Current
          - Unknown
          - NonUpgradableInvalidVersion
          - NonUpgradableAgentIsNewer
          - NonUpgradableAgentIsOld
          nullable: true
          type: string
          x-order: 0
        upgradeStatus:
          description: Specifies the current upgrade status of the agent.
          enum:
          - Idle
          - Accepted
          - Started
          - Finished
          - Scheduled
          nullable: true
          type: string
          x-order: 1
        upgradeError:
          description: Specifies the upgrade error if any for the agent.
          nullable: true
          type: string
          x-order: 2
        hostType:
          description: Specifies the operating system of the physical host.
          enum:
          - kLinux
          - kWindows
          - kAix
          - kSolaris
          - kSapHana
          - kOther
          nullable: true
          type: string
          x-order: 3
        agentsInfo:
          description: Specifies the information for agents related to source.
          items:
            $ref: '#/components/schemas/McmAgentInfo'
          type: array
          x-order: 4
      type: object
    McmPolicyLastProtectionRunStats:
      description: Specifies the last Protection Run stats.
      example:
        policyId: policyId
        regionId: regionId
        policyName: policyName
        lastRunStats:
          numObjectsMissedSla: 5
          numObjectsMetSla: 1
        clusterId: 0
        clusterIncarnationId: 6
      properties:
        clusterId:
          description: Specifies the cluster Id.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        clusterIncarnationId:
          description: Specifies the cluster Incarnation Id.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        regionId:
          description: Specifies the region Id.
          nullable: true
          type: string
          x-order: 2
        policyId:
          description: Specifies the policy Id.
          nullable: true
          type: string
          x-order: 3
        policyName:
          description: Specifies the policy name.
          nullable: true
          type: string
          x-order: 4
        lastRunStats:
          $ref: '#/components/schemas/McmPolicyLastProtectionRunStatsByPolicy'
      title: Last Protection Run stats.
      type: object
    McmPolicyLastProtectionRunStatsByPolicy:
      description: Specifies the last Protection Run stats for a policy
      example:
        numObjectsMissedSla: 5
        numObjectsMetSla: 1
      properties:
        numObjectsMetSla:
          description: Specifies the number of objects Met SLA.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        numObjectsMissedSla:
          description: Specifies the number of objects missed SLA.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      title: Last Protection Run Stats for Policy.
      type: object
    McmRigelClaimRequestParams:
      description: Specifies the request params to claim Rigel to Helios.
      properties:
        rigelGuid:
          description: Unique id for rigel instance.
          format: int64
          type: integer
          x-order: 0
        claimToken:
          description: Claim token used for authentication.
          type: string
          x-order: 1
        rigelType:
          description: Specifies the Rigel type that is being claimed.
          enum:
          - OnPrem
          - Cloud
          nullable: true
          type: string
          x-order: 2
        clusterId:
          description: Specifies the cluster id.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        clusterIncarnationId:
          description: Specifies the cluster incarnation id.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        rigelName:
          description: Specifies the Rigel name.
          nullable: true
          type: string
          x-order: 5
        rigelIp:
          description: Specifies the Rigel IP.
          nullable: true
          type: string
          x-order: 6
        softwareVersion:
          description: Specifies the Rigel Software version.
          nullable: true
          type: string
          x-order: 7
      required:
      - claimToken
      - rigelGuid
      title: Request params to claim Rigel to Helios.
      type: object
    McmRigelClaimResponseParams:
      description: Specifies the response of claiming a Rigel to Helios.
      properties:
        rigelGuid:
          description: Unique id for rigel instance.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        connectionId:
          description: Connection id for rigel instance.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        tenantId:
          description: Tenant id associated with the claimed rigel.
          nullable: true
          type: string
          x-order: 2
        rigelType:
          description: Specifies the Rigel type that is being claimed.
          enum:
          - OnPrem
          - Cloud
          nullable: true
          type: string
          x-order: 3
        rigelCertificate:
          description: Specifies the Rigel certificate.
          nullable: true
          type: string
          x-order: 4
        rigelPrivateKey:
          description: Specifies the Rigel private key.
          nullable: true
          type: string
          x-order: 5
        rigelCaChain:
          description: Specifies the CA chain that is used to sign the Rigel certificate.
          nullable: true
          type: string
          x-order: 6
        tenantCaChain:
          description: Specifies the Tenant CA chain.
          items:
            nullable: true
            type: string
          nullable: true
          type: array
          x-order: 7
        heliosCertificate:
          description: Specifies the Helios certificate that can be used to authenticate
            api calls made from Helios to Rigel.
          nullable: true
          type: string
          x-order: 8
        dataplaneEndpoint:
          description: Endpoint for associated data plane.
          nullable: true
          type: string
          x-order: 9
        rigelUseCase:
          description: Specifies the Rigel use case.
          enum:
          - Baas
          - DRaasFailover
          nullable: true
          type: string
          x-order: 10
        regionId:
          description: Specifies the region id of the Rigel cluster.
          nullable: true
          type: string
          x-order: 11
      title: Response of claiming a Rigel to Helios.
      type: object
    McmSignup:
      allOf:
      - $ref: '#/components/schemas/McmSignup_allOf'
      - $ref: '#/components/schemas/CommonMcmSignupParams'
      description: Specifies a MCM signup request.
      title: MCM signup request.
    McmSignupRequestStatus:
      description: MCM signup request status type.
      properties:
        type:
          description: MCM signup request status type.
          enum:
          - Open
          - InProgress
          - Denied
          - Finished
          type: string
          x-order: 0
      title: MCM signup request status type.
      type: object
    McmSignupUserContactInfo:
      description: Specifies the contact information of User signing up for MCM.
      properties:
        firstName:
          description: Specifies the first name of the user.
          type: string
          x-order: 0
        lastName:
          description: Specifies the last name of the user.
          type: string
          x-order: 1
        email:
          description: Specifies the user's email address.
          type: string
          x-order: 2
        phoneNumber:
          description: Specifies the user's phone number.
          nullable: true
          type: string
          x-order: 3
        companyName:
          description: Specifies the name of the Company to which the user belongs.
          type: string
          x-order: 4
        companySize:
          description: Specifies the size of the company. For example, 1-500.
          nullable: true
          type: string
          x-order: 5
        industryType:
          description: Specifies the industry type of the company. For example IT.
          nullable: true
          type: string
          x-order: 6
      required:
      - companyName
      - email
      - firstName
      - lastName
      title: MCM Signup user contact information.
      type: object
    McmSignups:
      description: List all MCM signup requests.
      properties:
        signups:
          description: Specfies the list of MCM signup requests.
          items:
            $ref: '#/components/schemas/McmSignup'
          nullable: true
          type: array
          x-order: 0
      title: List all MCM signup requests.
      type: object
    McmSource:
      description: Specifies a Protection Source on Helios MCM.
      example:
        environment: kVMware
        sourceInfoList:
        - sourceId: 1
          physicalSourceInfo:
            upgradeStatus: Idle
            upgradability: Upgradable
            agentsInfo:
            - agentID: 4
              agentDisplayName: agentDisplayName
            - agentID: 4
              agentDisplayName: agentDisplayName
            hostType: kLinux
            upgradeError: upgradeError
          regionId: regionId
          protectionStats:
          - protectedCount: 7
            environment: kVMware
            unprotectedCount: 9
            unprotectedSizeBytes: 2
            protectedSizeBytes: 3
          - protectedCount: 7
            environment: kVMware
            unprotectedCount: 9
            unprotectedSizeBytes: 2
            protectedSizeBytes: 3
          registrationId: registrationId
          clusterId: 0
          registrationDetails:
            registrationError: registrationError
            lastRefreshTimeUsecs: 2
            refreshError: refreshError
            registrationTimeUsecs: 5
            connectionId: 5
          clusterIncarnationId: 6
          applications:
          - kSQL
          - kSQL
        - sourceId: 1
          physicalSourceInfo:
            upgradeStatus: Idle
            upgradability: Upgradable
            agentsInfo:
            - agentID: 4
              agentDisplayName: agentDisplayName
            - agentID: 4
              agentDisplayName: agentDisplayName
            hostType: kLinux
            upgradeError: upgradeError
          regionId: regionId
          protectionStats:
          - protectedCount: 7
            environment: kVMware
            unprotectedCount: 9
            unprotectedSizeBytes: 2
            protectedSizeBytes: 3
          - protectedCount: 7
            environment: kVMware
            unprotectedCount: 9
            unprotectedSizeBytes: 2
            protectedSizeBytes: 3
          registrationId: registrationId
          clusterId: 0
          registrationDetails:
            registrationError: registrationError
            lastRefreshTimeUsecs: 2
            refreshError: refreshError
            registrationTimeUsecs: 5
            connectionId: 5
          clusterIncarnationId: 6
          applications:
          - kSQL
          - kSQL
        name: name
        id: id
        type: kCluster
      properties:
        id:
          description: Specifies the unique identifier of the Source.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the name of the Protection Source.
          nullable: true
          type: string
          x-order: 1
        environment:
          description: Specifies the environment of the Protection Source.
          enum:
          - kVMware
          - kHyperV
          - kAcropolis
          - kKVM
          - kAWS
          - kGCP
          - kAzure
          - kPhysical
          - kPure
          - kNimble
          - kNetapp
          - kGenericNas
          - kIsilon
          - kFlashBlade
          - kGPFS
          - kElastifile
          - kO365
          - kHyperFlex
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          - kSQL
          - kOracle
          nullable: true
          type: string
          x-order: 2
        type:
          description: Specifies the object type of the Protection Source.
          enum:
          - kCluster
          - kVserver
          - kVolume
          - kVCenter
          - kStandaloneHost
          - kvCloudDirector
          - kFolder
          - kDatacenter
          - kComputeResource
          - kClusterComputeResource
          - kResourcePool
          - kDatastore
          - kHostSystem
          - kVirtualMachine
          - kVirtualApp
          - kStoragePod
          - kNetwork
          - kDistributedVirtualPortgroup
          - kTagCategory
          - kTag
          - kOpaqueNetwork
          - kOrganization
          - kVirtualDatacenter
          - kCatalog
          - kOrgMetadata
          - kStoragePolicy
          - kVirtualAppTemplate
          - kDomain
          - kOutlook
          - kMailbox
          - kUsers
          - kGroups
          - kSites
          - kUser
          - kGroup
          - kSite
          - kApplication
          - kGraphUser
          - kPublicFolders
          - kPublicFolder
          - kTeams
          - kTeam
          - kKeyspace
          - kTable
          - kDatabase
          - kCollection
          - kBucket
          - kNamespace
          - kSCVMMServer
          - kStandaloneCluster
          - kHostGroup
          - kHypervHost
          - kHostCluster
          - kCustomProperty
          - kSubscription
          - kResourceGroup
          - kStorageAccount
          - kStorageKey
          - kStorageContainer
          - kStorageBlob
          - kNetworkSecurityGroup
          - kVirtualNetwork
          - kSubnet
          - kComputeOptions
          - kSnapshotManagerPermit
          - kAvailabilitySet
          - kOVirtManager
          - kHost
          - kStorageDomain
          - kVNicProfile
          - kIAMUser
          - kRegion
          - kAvailabilityZone
          - kEC2Instance
          - kVPC
          - kInstanceType
          - kKeyPair
          - kRDSOptionGroup
          - kRDSParameterGroup
          - kRDSInstance
          - kRDSSubnet
          - kRDSTag
          - kAuroraTag
          - kAuroraCluster
          - kAccount
          - kSubTaskPermit
          - kProject
          - kLabel
          - kMetadata
          - kVPCConnector
          - kPrismCentral
          - kOtherHypervisorCluster
          - kDfsGroup
          - kDfsTopDir
          - kZone
          - kMountPoint
          - kStorageArray
          - kFileSystem
          - kContainer
          - kFilesystem
          - kFileset
          - kViewBox
          - kView
          - kWindowsCluster
          - kOracleRACCluster
          - kOracleAPCluster
          - kService
          - kPVC
          - kPersistentVolumeClaim
          - kPersistentVolume
          - kRootContainer
          - kDAGRootContainer
          - kExchangeNode
          - kExchangeDAGDatabaseCopy
          - kExchangeStandaloneDatabase
          - kExchangeDAG
          - kExchangeDAGDatabase
          - kDomainController
          - kInstance
          - kAAG
          - kAAGRootContainer
          - kRACRootContainer
          - kTableSpace
          - kPDB
          - kObject
          nullable: true
          type: string
          x-order: 3
        sourceInfoList:
          description: Specifies the Source information list across all platforms.
          items:
            $ref: '#/components/schemas/McmSourceInfo'
          nullable: true
          type: array
          x-order: 4
      title: MCM Protection Source.
      type: object
    McmSourceInfo:
      description: Specifies the Protection Source information.
      example:
        sourceId: 1
        physicalSourceInfo:
          upgradeStatus: Idle
          upgradability: Upgradable
          agentsInfo:
          - agentID: 4
            agentDisplayName: agentDisplayName
          - agentID: 4
            agentDisplayName: agentDisplayName
          hostType: kLinux
          upgradeError: upgradeError
        regionId: regionId
        protectionStats:
        - protectedCount: 7
          environment: kVMware
          unprotectedCount: 9
          unprotectedSizeBytes: 2
          protectedSizeBytes: 3
        - protectedCount: 7
          environment: kVMware
          unprotectedCount: 9
          unprotectedSizeBytes: 2
          protectedSizeBytes: 3
        registrationId: registrationId
        clusterId: 0
        registrationDetails:
          registrationError: registrationError
          lastRefreshTimeUsecs: 2
          refreshError: refreshError
          registrationTimeUsecs: 5
          connectionId: 5
        clusterIncarnationId: 6
        applications:
        - kSQL
        - kSQL
      properties:
        clusterId:
          description: Specifies the cluster id.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        clusterIncarnationId:
          description: Specifies the cluster incarnation id.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        regionId:
          description: Specifies the region id.
          nullable: true
          type: string
          x-order: 2
        sourceId:
          description: Specifies the id of the Protection Source.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        registrationId:
          description: Specifies the registration id of the Protection Source.
          nullable: true
          type: string
          x-order: 4
        registrationDetails:
          $ref: '#/components/schemas/McmSourceRegistrationInfo'
        applications:
          description: Specifies the list of applications registered with current
            Source.
          items:
            enum:
            - kSQL
            - kOracle
            type: string
          nullable: true
          type: array
          x-order: 6
        protectionStats:
          description: Specifies the protection statistics of the Source.
          items:
            $ref: '#/components/schemas/ObjectProtectionStatsSummary'
          nullable: true
          type: array
          x-order: 7
        physicalSourceInfo:
          $ref: '#/components/schemas/McmPhysicalSourceInfo'
      title: Protection Source Infomation.
      type: object
    McmSourceRegistration:
      allOf:
      - $ref: '#/components/schemas/McmCommonSourceRegistrationReponseParams'
      - $ref: '#/components/schemas/McmSourceRegistration_allOf'
      description: Specifies a Protection Source registration.
      title: Protection Source registration.
    McmSourceRegistrationInfo:
      description: Specifies the registration details and errors occured during registration
        of a protection source.
      example:
        registrationError: registrationError
        lastRefreshTimeUsecs: 2
        refreshError: refreshError
        registrationTimeUsecs: 5
        connectionId: 5
      properties:
        connectionId:
          description: Specifies the id of the connection from where this source is
            reachable.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        registrationTimeUsecs:
          description: Specifies the registration time of the Source in Unix time
            epoch in microseconds.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        registrationError:
          description: Specifies the error detail occured during the protection source
            registration.
          nullable: true
          type: string
          x-order: 2
        lastRefreshTimeUsecs:
          description: Specifies the registration time of the Source in Unix time
            epoch in microseconds.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        refreshError:
          description: Specifies the error detail occured during the refersh of a
            protection source.
          nullable: true
          type: string
          x-order: 4
      type: object
    McmSourceRegistrationRequestParams:
      allOf:
      - $ref: '#/components/schemas/SourceRegistrationRequestParams'
      description: Specifies the request parameters to register a Protection Source.
      title: Request parameters to register a Protection Source.
    McmSourceRegistrationUpdateRequestParams:
      allOf:
      - $ref: '#/components/schemas/McmSourceRegistrationRequestParams'
      description: Specifies the request parameters to update a Protection Source.
      title: Request parameters to update a Protection Source.
    McmSources:
      description: Specifies the list of Protection Sources on Helios MCM.
      example:
        sources:
        - environment: kVMware
          sourceInfoList:
          - sourceId: 1
            physicalSourceInfo:
              upgradeStatus: Idle
              upgradability: Upgradable
              agentsInfo:
              - agentID: 4
                agentDisplayName: agentDisplayName
              - agentID: 4
                agentDisplayName: agentDisplayName
              hostType: kLinux
              upgradeError: upgradeError
            regionId: regionId
            protectionStats:
            - protectedCount: 7
              environment: kVMware
              unprotectedCount: 9
              unprotectedSizeBytes: 2
              protectedSizeBytes: 3
            - protectedCount: 7
              environment: kVMware
              unprotectedCount: 9
              unprotectedSizeBytes: 2
              protectedSizeBytes: 3
            registrationId: registrationId
            clusterId: 0
            registrationDetails:
              registrationError: registrationError
              lastRefreshTimeUsecs: 2
              refreshError: refreshError
              registrationTimeUsecs: 5
              connectionId: 5
            clusterIncarnationId: 6
            applications:
            - kSQL
            - kSQL
          - sourceId: 1
            physicalSourceInfo:
              upgradeStatus: Idle
              upgradability: Upgradable
              agentsInfo:
              - agentID: 4
                agentDisplayName: agentDisplayName
              - agentID: 4
                agentDisplayName: agentDisplayName
              hostType: kLinux
              upgradeError: upgradeError
            regionId: regionId
            protectionStats:
            - protectedCount: 7
              environment: kVMware
              unprotectedCount: 9
              unprotectedSizeBytes: 2
              protectedSizeBytes: 3
            - protectedCount: 7
              environment: kVMware
              unprotectedCount: 9
              unprotectedSizeBytes: 2
              protectedSizeBytes: 3
            registrationId: registrationId
            clusterId: 0
            registrationDetails:
              registrationError: registrationError
              lastRefreshTimeUsecs: 2
              refreshError: refreshError
              registrationTimeUsecs: 5
              connectionId: 5
            clusterIncarnationId: 6
            applications:
            - kSQL
            - kSQL
          name: name
          id: id
          type: kCluster
        - environment: kVMware
          sourceInfoList:
          - sourceId: 1
            physicalSourceInfo:
              upgradeStatus: Idle
              upgradability: Upgradable
              agentsInfo:
              - agentID: 4
                agentDisplayName: agentDisplayName
              - agentID: 4
                agentDisplayName: agentDisplayName
              hostType: kLinux
              upgradeError: upgradeError
            regionId: regionId
            protectionStats:
            - protectedCount: 7
              environment: kVMware
              unprotectedCount: 9
              unprotectedSizeBytes: 2
              protectedSizeBytes: 3
            - protectedCount: 7
              environment: kVMware
              unprotectedCount: 9
              unprotectedSizeBytes: 2
              protectedSizeBytes: 3
            registrationId: registrationId
            clusterId: 0
            registrationDetails:
              registrationError: registrationError
              lastRefreshTimeUsecs: 2
              refreshError: refreshError
              registrationTimeUsecs: 5
              connectionId: 5
            clusterIncarnationId: 6
            applications:
            - kSQL
            - kSQL
          - sourceId: 1
            physicalSourceInfo:
              upgradeStatus: Idle
              upgradability: Upgradable
              agentsInfo:
              - agentID: 4
                agentDisplayName: agentDisplayName
              - agentID: 4
                agentDisplayName: agentDisplayName
              hostType: kLinux
              upgradeError: upgradeError
            regionId: regionId
            protectionStats:
            - protectedCount: 7
              environment: kVMware
              unprotectedCount: 9
              unprotectedSizeBytes: 2
              protectedSizeBytes: 3
            - protectedCount: 7
              environment: kVMware
              unprotectedCount: 9
              unprotectedSizeBytes: 2
              protectedSizeBytes: 3
            registrationId: registrationId
            clusterId: 0
            registrationDetails:
              registrationError: registrationError
              lastRefreshTimeUsecs: 2
              refreshError: refreshError
              registrationTimeUsecs: 5
              connectionId: 5
            clusterIncarnationId: 6
            applications:
            - kSQL
            - kSQL
          name: name
          id: id
          type: kCluster
      properties:
        sources:
          description: Specifies the list of Protection Sources.
          items:
            $ref: '#/components/schemas/McmSource'
          nullable: true
          type: array
          x-order: 0
      title: MCM Protection Sources.
      type: object
    McmTenantAction:
      description: Specifies a tenant action.
      properties:
        tenantId:
          description: Specifies the dmaas tenant ID of the user on which the action
            is being performed.
          nullable: true
          type: string
          x-order: 0
        action:
          description: Specifies the action which will be performed on the DMaaS tenant.
          enum:
          - StartMigration
          - StopMigration
          nullable: true
          type: string
          x-order: 1
      required:
      - action
      - tenantId
      type: object
    McmTenantObjectIdentifier:
      description: Specifies an object protection for a given tenant.
      example:
        objectHash: objectHash
        objectId: 0
      properties:
        objectId:
          description: Specifies the id assigned to the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        objectHash:
          description: Specifies the object hash of the object.
          nullable: true
          type: string
          x-order: 1
      type: object
    McmTenantObjectIds:
      description: Specifies the object IDs for a given tenant.
      example:
        objectIds:
        - objectHash: objectHash
          objectId: 0
        - objectHash: objectHash
          objectId: 0
      properties:
        objectIds:
          items:
            $ref: '#/components/schemas/McmTenantObjectIdentifier'
          type: array
          x-order: 0
      type: object
    McmTenantObjectIdsParams:
      description: Specifies the parameters for fetching protected objects for a given
        tenant.
      example:
        objectHashes:
        - objectHashes
        - objectHashes
        tenantId: tenantId
      properties:
        tenantId:
          description: Specifies the ID of the tenant.
          nullable: true
          type: string
          x-order: 0
        objectHashes:
          description: Specifies a list of object hashes of objects to fetch.
          items:
            type: string
          type: array
          x-order: 1
      required:
      - objectHashes
      - tenantId
      type: object
    McmTenantObjectProtection:
      description: Specifies an object protection for a given tenant.
      properties:
        objectProtectionId:
          description: Specifies the id assigned to the entry.
          nullable: true
          type: string
          x-order: 0
        tenantIds:
          description: Specifies the tenants which have access to this object.
          items:
            nullable: true
            type: string
          type: array
          x-order: 1
        accountId:
          description: Specifies the account ID to which this source belongs.
          nullable: true
          type: string
          x-order: 2
        dmaasTenantId:
          description: Specifies the DMaaS tenant ID to which this source belongs.
          nullable: true
          type: string
          x-order: 3
        clusterId:
          description: Specifies the ID of the cluster to which the source is registered.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        objectHash:
          description: Specifies the object hash of the source.
          nullable: true
          type: string
          x-order: 5
        userDetails:
          $ref: '#/components/schemas/User'
        createdAtMsecs:
          description: Specifies the timestamp at which this entry was created in
            msecs.
          format: int64
          nullable: true
          type: integer
          x-order: 7
        updatedAtMsecs:
          description: Specifies the timestamp at which this entry was updated in
            msecs.
          format: int64
          nullable: true
          type: integer
          x-order: 8
        objectProtection:
          $ref: '#/components/schemas/ProtectedObjectInfo'
      type: object
    McmTenantObjectProtections:
      description: Specifies the object protections for a given tenant.
      properties:
        objectProtections:
          items:
            $ref: '#/components/schemas/McmTenantObjectProtection'
          type: array
          x-order: 0
        lastIndex:
          description: Specifies the last index returned if there are more results
            to be returned.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    McmTenantProfile:
      description: Specifies tenant profile.
      example:
        tenantType: Dmaas
        tenantName: tenantName
        tenantId: tenantId
        clusters:
        - regionId: regionId
          clusterId: 2
          clusterIncarnationId: 7
        - regionId: regionId
          clusterId: 2
          clusterIncarnationId: 7
      properties:
        tenantId:
          description: Specifies the tenant id.
          nullable: true
          type: string
          x-order: 0
        tenantName:
          description: Specifies the tenant id.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        tenantType:
          description: Specifies the type of tenant.
          enum:
          - Dmaas
          - Mcm
          nullable: true
          type: string
          x-order: 2
        clusters:
          description: Specifies the list of clusters owned by this account id.
          items:
            $ref: '#/components/schemas/McmClusterIdentifier'
          type: array
          x-order: 3
      required:
      - tenantId
      - tenantType
      type: object
    McmTenantProfiles:
      description: Specifies tenant profiles for a logged in user.
      properties:
        sfAccountId:
          description: Specifies the Salesforce account ID of this account.
          nullable: true
          type: string
          x-order: 0
        userSid:
          description: Specifies the sid of the logged in user.
          nullable: true
          type: string
          x-order: 1
        clusters:
          description: Specifies the list of clusters owned by this account id.
          items:
            $ref: '#/components/schemas/McmClusterIdentifier'
          nullable: true
          type: array
          x-order: 2
        tenantProfiles:
          description: Specifies the list of tenant profiles associated to this account
            if any.
          items:
            $ref: '#/components/schemas/McmTenantProfile'
          nullable: true
          type: array
          x-order: 3
      type: object
    McmTenantProtectedObjectsParams:
      description: Specifies the parameters for fetching protected objects for a given
        tenant.
      properties:
        tenantId:
          description: Specifies the ID of the tenant.
          nullable: true
          type: string
          x-order: 0
        startIndex:
          description: Specifies the index of the first object to be returned.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        numResults:
          description: Specifies the max number of objects to be returned. Default
            value is 100.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      required:
      - tenantId
      type: object
    McmTenantSourceRegistration:
      description: Specifies a source registration for a given tenant.
      properties:
        sourceRegistrationId:
          description: Specifies the id assigned to the entry.
          nullable: true
          type: string
          x-order: 0
        sourceId:
          description: Specifies the ID of the source on the cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        environment:
          description: Specifies the environment of the source.
          nullable: true
          type: string
          x-order: 2
          x-cohesity-enum: environment_enum_type
        objectType:
          description: Specifies the type of the object.
          enum:
          - kCluster
          - kVserver
          - kVolume
          - kVCenter
          - kStandaloneHost
          - kvCloudDirector
          - kFolder
          - kDatacenter
          - kComputeResource
          - kClusterComputeResource
          - kResourcePool
          - kDatastore
          - kHostSystem
          - kVirtualMachine
          - kVirtualApp
          - kStoragePod
          - kNetwork
          - kDistributedVirtualPortgroup
          - kTagCategory
          - kTag
          - kOpaqueNetwork
          - kOrganization
          - kVirtualDatacenter
          - kCatalog
          - kOrgMetadata
          - kStoragePolicy
          - kVirtualAppTemplate
          - kDomain
          - kOutlook
          - kMailbox
          - kUsers
          - kGroups
          - kSites
          - kUser
          - kGroup
          - kSite
          - kApplication
          - kGraphUser
          - kPublicFolders
          - kPublicFolder
          - kTeams
          - kTeam
          - kKeyspace
          - kTable
          - kDatabase
          - kCollection
          - kBucket
          - kNamespace
          - kSCVMMServer
          - kStandaloneCluster
          - kHostGroup
          - kHypervHost
          - kHostCluster
          - kCustomProperty
          - kSubscription
          - kResourceGroup
          - kStorageAccount
          - kStorageKey
          - kStorageContainer
          - kStorageBlob
          - kNetworkSecurityGroup
          - kVirtualNetwork
          - kSubnet
          - kComputeOptions
          - kSnapshotManagerPermit
          - kAvailabilitySet
          - kOVirtManager
          - kHost
          - kStorageDomain
          - kVNicProfile
          - kIAMUser
          - kRegion
          - kAvailabilityZone
          - kEC2Instance
          - kVPC
          - kInstanceType
          - kKeyPair
          - kRDSOptionGroup
          - kRDSParameterGroup
          - kRDSInstance
          - kRDSSubnet
          - kRDSTag
          - kAuroraTag
          - kAuroraCluster
          - kAccount
          - kSubTaskPermit
          - kProject
          - kLabel
          - kMetadata
          - kVPCConnector
          - kPrismCentral
          - kOtherHypervisorCluster
          - kDfsGroup
          - kDfsTopDir
          - kZone
          - kMountPoint
          - kStorageArray
          - kFileSystem
          - kContainer
          - kFilesystem
          - kFileset
          - kViewBox
          - kView
          - kWindowsCluster
          - kOracleRACCluster
          - kOracleAPCluster
          - kService
          - kPVC
          - kPersistentVolumeClaim
          - kPersistentVolume
          - kRootContainer
          - kDAGRootContainer
          - kExchangeNode
          - kExchangeDAGDatabaseCopy
          - kExchangeStandaloneDatabase
          - kExchangeDAG
          - kExchangeDAGDatabase
          - kDomainController
          - kInstance
          - kAAG
          - kAAGRootContainer
          - kRACRootContainer
          - kTableSpace
          - kPDB
          - kObject
          nullable: true
          type: string
          x-order: 3
        isRootSource:
          description: Specifies whether or not this object is a root level source
            (registered directly rather than the child of a registered source).
          nullable: true
          type: boolean
          x-order: 4
        tenantIds:
          description: Specifies the tenants which have access to this object.
          items:
            nullable: true
            type: string
          type: array
          x-order: 5
        accountId:
          description: Specifies the account ID to which this source belongs.
          nullable: true
          type: string
          x-order: 6
        dmaasTenantId:
          description: Specifies the DMaaS tenant ID to which this source belongs.
          nullable: true
          type: string
          x-order: 7
        clusterId:
          description: Specifies the ID of the cluster to which the source is registered.
          format: int64
          nullable: true
          type: integer
          x-order: 8
        objectHash:
          description: Specifies the object hash of the source.
          nullable: true
          type: string
          x-order: 9
        userDetails:
          $ref: '#/components/schemas/User'
        createdAtMsecs:
          description: Specifies the timestamp at which this entry was created in
            msecs.
          format: int64
          nullable: true
          type: integer
          x-order: 11
        updatedAtMsecs:
          description: Specifies the timestamp at which this entry was updated in
            msecs.
          format: int64
          nullable: true
          type: integer
          x-order: 12
        sourceRegistration:
          $ref: '#/components/schemas/SourceRegistration'
        enableAppParams:
          description: Specifies the list of enable application params which have
            been performed on this source.
          items:
            $ref: '#/components/schemas/ObjectActionRequest'
          type: array
          x-order: 14
        credentials:
          $ref: '#/components/schemas/SourceRegistrationCredentials'
      type: object
    McmTenantSourceRegistrations:
      description: Specifies the source registrations for a given tenant.
      properties:
        sourceRegistrations:
          items:
            $ref: '#/components/schemas/McmTenantSourceRegistration'
          type: array
          x-order: 0
      type: object
    McmTenantSourceRegistrationsParams:
      description: Specifies the parameters for fetching source registrations for
        a given tenant.
      properties:
        tenantId:
          description: Specifies the ID of the tenant.
          nullable: true
          type: string
          x-order: 0
      required:
      - tenantId
      type: object
    McmTenantType:
      description: Describes the status of a Tenant on a Cluster or Helios.
      properties:
        enum:
          description: Specifies the Tenant status
          enum:
          - Dmaas
          - Mcm
          type: string
          x-order: 0
      title: Tenant Status
      type: object
    MfaConfigInfo:
      description: Holds the MFA configuration to be returned or stored.
      example:
        authenticationTypes:
        - email
        - email
        retainUserMfaSettings: true
        enabled: false
      properties:
        enabled:
          default: false
          description: Specifies whether MFA is enabled on a cluster level.
          type: boolean
          x-order: 0
        authenticationTypes:
          description: Specifies the list of mechanism to receive the OTP code.
          items:
            enum:
            - email
            - totp
            type: string
          nullable: true
          type: array
          x-order: 1
        retainUserMfaSettings:
          default: true
          description: Specifies whether user MFA setting needs to be retained.
          type: boolean
          x-order: 2
      type: object
    MigrateCloneParams:
      description: Specifies the DB migration parameters.
      properties:
        delaySecs:
          description: Specifies when the migration of the oracle instance should
            be started after successful recovery.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        targetPathVec:
          description: Specifies the target paths to be used for DB migration.
          items:
            type: string
          nullable: true
          type: array
          x-order: 1
      title: Oracle DB migration parameters.
      type: object
    MinuteSchedule:
      allOf:
      - $ref: '#/components/schemas/FrequencySchedule'
      description: Specifies settings that define a schedule for a Protection Group
        runs to start after certain number of minutes.
      title: Minutes Schedule
    MissingEntityParams:
      description: Specifies the information about missing entities.
      properties:
        id:
          description: Specifies the ID of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      type: object
    ModifyCiphersRequestBody:
      description: Specifies ciphers to enable/disable on the cluster.
      example:
        enable: true
        ciphers:
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      properties:
        enable:
          description: If true, the ciphers passed in will be enabled on the cluster
            and all other ciphers will be disabled. If false, the ciphers specified
            will be disabled and all other ciphers on the cluster will be enabled.
          type: boolean
          x-order: 0
        ciphers:
          description: Specifies a list of ciphers to enable/disable on the cluster.
          items:
            enum:
            - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
            - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
            - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
            - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
            - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
            - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
            - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
            - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
            - TLS_RSA_WITH_AES_256_GCM_SHA384
            - TLS_RSA_WITH_AES_128_GCM_SHA256
            - TLS_RSA_WITH_AES_256_CBC_SHA
            - TLS_RSA_WITH_AES_128_CBC_SHA
            type: string
          type: array
          x-order: 1
      required:
      - ciphers
      - enable
      title: Request to enable/disable a list of ciphers.
      type: object
    MongoDBAuthType:
      description: Enumeration of all the MongoDB Authentication types.
      properties:
        MongoDBAuthType:
          description: Enumeration of all the MongoDB Authentication.
          enum:
          - SCRAM
          - LDAP
          - NONE
          - KERBEROS
          type: string
          x-order: 0
      title: Enumeration of all the MongoDB Authentication types.
      type: object
    MongoDBCdpJobInfo:
      description: Specifies the CDP related information for a given MongoDB protection
        group. This will only be populated when the protection group is configured
        with a CDP policy.
      properties:
        latestRecoveryPointInTimeUsecs:
          description: Specifies the latest available recovery point timestamp (in
            microseconds from epoch)
          format: int64
          nullable: true
          type: integer
          x-order: 0
      type: object
    MongoDBProtectionGroupParams:
      allOf:
      - $ref: '#/components/schemas/NoSqlProtectionGroupParams'
      - $ref: '#/components/schemas/MongoDBProtectionGroupParams_allOf'
      description: Specifies the parameters for MongoDB Protection Group.
    MongoDBSourceRegistrationParams:
      description: Specifies parameters to register MongoDB source.
      properties:
        hosts:
          description: Specify the MongoS hosts for a sharded cluster and the MongoD
            hosts for a non-sharded cluster. You can specify a sub-set of the hosts.
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        authType:
          description: MongoDB authentication type.
          enum:
          - SCRAM
          - LDAP
          - NONE
          - KERBEROS
          nullable: true
          type: string
          x-order: 1
        username:
          description: Specifies the username of the MongoDB cluster. Should be set
            if 'authType' is 'LDAP' or 'SCRAM'.
          nullable: true
          type: string
          x-order: 2
        principal:
          description: Specifies the principal name of the MongoDB cluster. Should
            be set if 'authType' is 'KERBEROS'.
          nullable: true
          type: string
          x-order: 3
        password:
          description: Specifies the password for the MongoDB cluster. Should be set
            if 'authType' is 'LDAP' or 'SCRAM'.
          nullable: true
          type: string
          x-order: 4
        authenticatingDatabase:
          description: Authenticating Database for this cluster. Should be set if
            'authType' is 'LDAP' or 'SCRAM'.
          nullable: true
          type: string
          x-order: 5
        isSslRequired:
          description: Set to true if connection to MongoDB has to be over SSL.
          type: boolean
          x-order: 6
        useSecondaryForBackup:
          description: Set this to true if you want the system to peform backups from
            secondary nodes.
          type: boolean
          x-order: 7
        secondaryNodeTag:
          description: MongoDB Secondary node tag. Required only if 'useSecondaryForBackup'
            is true.The system will use this to identify the secondary nodes for reading
            backup data.
          type: string
          x-order: 8
      required:
      - authType
      - hosts
      - isSslRequired
      - useSecondaryForBackup
      title: Register MongoDB source request parameters.
      type: object
    MongoDbOnPremSearchParams:
      allOf:
      - $ref: '#/components/schemas/MongodbSearchParams'
      - $ref: '#/components/schemas/OnPremSourceIds'
      description: Parameters required to search Mongo DB on a cluster.
      title: MongoDbOnPremSearchParams
    MongoIndexedObject:
      allOf:
      - $ref: '#/components/schemas/CommonIndexedObjectParams'
      - $ref: '#/components/schemas/MongoIndexedObject_allOf'
      description: Specifies a Mongo indexed object.
      title: MongoIndexedObject
    MongoIndexedObjects:
      description: Specifies the indexed Mongo objects.
      items:
        $ref: '#/components/schemas/MongoIndexedObject'
      type: array
    MongodbParams:
      description: Specifies the recovery options specific to MongoDB environment.
      properties:
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverObjects
          type: string
          x-order: 0
        recoverMongodbParams:
          $ref: '#/components/schemas/RecoverMongodbParams'
      required:
      - recoverMongodbParams
      - recoveryAction
      title: Recover MongoDB environment params.
      type: object
    MongodbSearchParams:
      description: Specifies the parameters which are specific for searching MongoDB
        objects.
      properties:
        searchString:
          description: Specifies the search string to search the MongoDB Objects
          nullable: true
          type: string
          x-order: 0
        mongoDBObjectTypes:
          description: Specifies one or more MongoDB object types be searched.
          items:
            enum:
            - MongoDatabases
            - MongoCollections
            type: string
          type: array
          x-order: 1
      required:
      - mongoDBObjectTypes
      - searchString
      type: object
    MonthSchedule:
      allOf:
      - $ref: '#/components/schemas/WeekSchedule'
      - $ref: '#/components/schemas/MonthSchedule_allOf'
      description: Specifies settings that define a schedule for a Protection Group
        runs to on specific week and specific days of that week.
      title: Month Schedule
    MountHyperVVolumeParams:
      description: Specifies the parameters to mount volumes.
      properties:
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kHyperV
          type: string
          x-order: 0
        hypervTargetParams:
          allOf:
          - $ref: '#/components/schemas/HyperVTargetParamsForMountVolume'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to a HyperV target.
          nullable: true
          type: object
          x-order: 1
      required:
      - targetEnvironment
      title: Mount Volumes Params.
      type: object
    MountPhysicalVolumeParams:
      description: Specifies the parameters to Mount Physical Volumes.
      properties:
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kPhysical
          type: string
          x-order: 0
        physicalTargetParams:
          allOf:
          - $ref: '#/components/schemas/PhysicalTargetParamsForMountVolume'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to a physical target.
          nullable: true
          type: object
          x-order: 1
      required:
      - targetEnvironment
      title: Mount Physical Volumes params.
      type: object
    MountVmwareVolumeParams:
      description: Specifies the parameters to mount VMware Volumes.
      properties:
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kVMware
          type: string
          x-order: 0
        vmwareTargetParams:
          allOf:
          - $ref: '#/components/schemas/VmwareTargetParamsForMountVolume'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to a VMware target..
          nullable: true
          type: object
          x-order: 1
      required:
      - targetEnvironment
      title: Mount VMware Volumes params.
      type: object
    MountedVolumeMapping:
      description: Specifies the mapping of original volume and mounted volume after
        Instant Volume Mount.
      properties:
        originalVolume:
          description: Specifies the name of the original volume.
          nullable: true
          type: string
          x-order: 0
        mountedVolume:
          description: Specifies the name of the point where the volume is mounted.
          nullable: true
          type: string
          x-order: 1
        fileSystemType:
          description: Specifies the type of the file system of the volume.
          nullable: true
          type: string
          x-order: 2
      type: object
    MsGroupParam:
      description: Specifies parameters to recover MS group.
      properties:
        recoverObject:
          allOf:
          - $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          - type: object
            x-nullable: true
          description: Specifies the MS group recover Object info.
          type: object
          x-order: 0
        recoverEntireGroup:
          description: Specifies if the entire Group (mailbox + site) is to be restored.
          nullable: true
          type: boolean
          x-order: 1
        mailboxRestoreType:
          description: Specifies whether mailbox restore is full or granular.
          enum:
          - kFull
          - kPartial
          nullable: true
          type: string
          x-order: 2
        siteRestoreType:
          description: Specifies whether site restore is full or granular.
          enum:
          - kFull
          - kPartial
          nullable: true
          type: string
          x-order: 3
      required:
      - recoverObject
      type: object
    MsSQLCommonConnectionParams:
      description: Specifies the common parameters to connect to a SQL node/cluster
      properties:
        hostIdentifier:
          description: Specifies the unique identifier to locate the SQL node or cluster.
            The host identifier can be IP address or FQDN.
          type: string
          x-order: 0
      required:
      - hostIdentifier
      type: object
    MsTeamParam:
      description: Specifies the parameters to recover a Microsoft 365 Team.
      properties:
        recoverEntireMsTeam:
          description: Specifies whether to recover the whole Microsoft 365 Team.
          nullable: true
          type: boolean
          x-order: 0
      required:
      - recoverEntireMsTeam
      type: object
    MssqlConnectionParams:
      allOf:
      - $ref: '#/components/schemas/MsSQLCommonConnectionParams'
      description: Specifies the parameters to connect to a SQL node/cluster using
        given IP or hostname FQDN.
    MssqlConnectionResponseParams:
      allOf:
      - $ref: '#/components/schemas/MsSQLCommonConnectionParams'
      - $ref: '#/components/schemas/MssqlConnectionResponseParams_allOf'
      description: Specifies the response parameters after connecting to a SQL node/cluster
        using given IP or hostname FQDN.
    MssqlFileObjectProtection:
      description: Specifies the object params to create File based MSSQL Object Protection
      properties:
        id:
          description: Specifies the ID of the object being protected. If this is
            a non leaf level object, then the object will be auto-protected unless
            leaf objects are specified for exclusion.
          format: int64
          nullable: true
          type: integer
          x-order: 0
      required:
      - id
      type: object
    MssqlFileObjectProtectionParams:
      allOf:
      - $ref: '#/components/schemas/MssqlFileObjectProtectionParams_allOf'
      - $ref: '#/components/schemas/CommonMSSQLProtectionGroupParams'
      description: Specifies the params to create a File based MSSQL Object Protection.
    MssqlNativeObjectProtection:
      description: Specifies the object params to create Native based MSSQL Object
        Protection.
      properties:
        id:
          description: Specifies the ID of the object being protected. If this is
            a non leaf level object, then the object will be auto-protected unless
            leaf objects are specified for exclusion.
          format: int64
          nullable: true
          type: integer
          x-order: 0
      required:
      - id
      type: object
    MssqlNativeObjectProtectionParams:
      allOf:
      - $ref: '#/components/schemas/MssqlNativeObjectProtectionParams_allOf'
      - $ref: '#/components/schemas/CommonMSSQLProtectionGroupParams'
      description: Specifies the params to create a Native based MSSQL Object Protection.
    MssqlObjectEntityParams:
      description: Object details for Mssql.
      properties:
        hostInfo:
          $ref: '#/components/schemas/HostInformation'
        aagInfo:
          $ref: '#/components/schemas/AAGInfo'
      type: object
    MssqlObjectProtectionParams:
      description: Specifies the parameters specific to MSSQL Object Protection.
      properties:
        objectProtectionType:
          description: Specifies the MSSQL Object Protection type.
          enum:
          - kFile
          - kVolume
          - kNative
          type: string
          x-order: 0
        fileObjectProtectionTypeParams:
          $ref: '#/components/schemas/MssqlFileObjectProtectionParams'
        nativeObjectProtectionTypeParams:
          $ref: '#/components/schemas/MssqlNativeObjectProtectionParams'
      required:
      - objectProtectionType
      type: object
    MssqlObjectProtectionRequestParams:
      allOf:
      - $ref: '#/components/schemas/MssqlObjectProtectionParams'
      description: Specifies the request parameters specific to MSSQL object protection.
    MssqlObjectProtectionResponseParams:
      allOf:
      - $ref: '#/components/schemas/CommonMssqlObjectProtectionParams'
      description: Specifies the response parameters specific to MSSQL object protection.
    MssqlObjectProtectionUpdateRequestParams:
      allOf:
      - $ref: '#/components/schemas/CommonMssqlObjectProtectionParams'
      description: Specifies the update parameters specific to MSSQL object protection.
    MssqlProtectionGroupType:
      description: MSSQL Protection Group type.
      properties:
        environment:
          description: Specifies MSSQL Protection Group type.
          enum:
          - kFile
          - kVolume
          - kNative
          type: string
          x-order: 0
      title: MSSQL Protection Group type.
      type: object
    MultiStageRestoreOptions:
      description: Specifies the parameters related to multi stage Sql restore.
      properties:
        enableMultiStageRestore:
          description: Set this to true if you are creating a multi-stage Sql restore
            task needed for features such as Hot-Standby.
          nullable: true
          type: boolean
          x-order: 0
        enableAutoSync:
          description: Set this to true if you want to enable auto sync for multi
            stage restore.
          nullable: true
          type: boolean
          x-order: 1
      title: Multi Stage Restore Options
      type: object
    NasFullThrottlingConfig:
      description: Specifies the throttling configuration during full backup run.
      properties:
        maxMetadataFetchPercentage:
          description: Specifies the percentage value of maximum concurrent metadata
            to be fetched during full backup of the source.
          format: int32
          nullable: true
          type: integer
          x-order: 0
        maxReadWritePercentage:
          description: Specifies the percentage value of maximum concurrent read/write
            during full backup of the source.
          format: int32
          nullable: true
          type: integer
          x-order: 1
      title: NAS Full Backup Throttling Params
      type: object
    NasIncrementalThrottlingConfig:
      properties:
        maxMetadataFetchPercentage:
          description: Specifies the percentage value of maximum concurrent metadata
            to be fetched during incremental backup of the source.
          format: int32
          nullable: true
          type: integer
          x-order: 0
        maxReadWritePercentage:
          description: Specifies the percentage value of maximum concurrent read/write
            during incremental backup of the source.
          format: int32
          nullable: true
          type: integer
          x-order: 1
      title: NAS Full Backup Throttling Params
      type: object
    NasProtocol:
      description: Nas Protocol type.
      properties:
        nasProtocol:
          description: Specifies Nas Protocol type.
          enum:
          - kNoProtocol
          - kNfs3
          - kNfs4_1
          - kCifs1
          - kCifs2
          - kCifs3
          type: string
          x-order: 0
      title: Nas Protocol type.
      type: object
    NasQosPolicy:
      description: Specifies the QoS policy, which defines the principal and priority
        of a NAS recovery.
      properties:
        id:
          description: Specifies the ID of the QoS Policy.
          format: int64
          nullable: true
          type: integer
          x-order: 0
      type: object
    NasThrottlingConfig:
      description: Specifies the source throttling parameters to be used during full
        or incremental backup of the NAS source.
      properties:
        fullBackupConfig:
          $ref: '#/components/schemas/NasFullThrottlingConfig'
        incrementalBackupConfig:
          $ref: '#/components/schemas/NasIncrementalThrottlingConfig'
      title: Nas Source and Protection Throttling Configuration
      type: object
    NetappDataTieringParams:
      description: Specifies the parameters which are specific to Netapp related Protection
        Groups.
      example:
        sourceId: 5
        objects:
        - name: name
          id: 0
        - name: name
          id: 0
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/ProtectionObjectInput'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        sourceId:
          description: Specifies the id of the root of data tiering source.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      required:
      - objects
      type: object
    NetappObjectParams:
      description: Specifies the common parameters for Netapp objects.
      properties:
        supportedNasMountProtocols:
          description: Specifies a list of NAS mount protocols supported by this object.
          items:
            enum:
            - kNfs
            - kCifs
            - kIscsi
            - kFc
            - kFcache
            - kHttp
            - kNdmp
            - kManagement
            - kNvme
            type: string
          nullable: true
          type: array
          x-order: 0
        volumeType:
          description: Specifies the Netapp volume type.
          enum:
          - ReadWrite
          - LoadSharing
          - DataProtection
          - DataCache
          - Temp
          - UnkownType
          nullable: true
          type: string
          x-order: 1
      type: object
    NetappObjectProtectionParams:
      description: Specifies the parameters which are specific to Netapp object protection.
      properties:
        protocol:
          description: Specifies the protocol of the NAS device being backed up.
          enum:
          - kNoProtocol
          - kNfs3
          - kNfs4_1
          - kCifs1
          - kCifs2
          - kCifs3
          nullable: true
          type: string
          x-order: 0
        excludeObjectIds:
          description: Specifies the objects to be excluded in the Protection.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          uniqueItems: true
          x-order: 1
        snapshotLabel:
          $ref: '#/components/schemas/SnapshotLabel'
        backupExistingSnapshot:
          description: Specifies that snapshot label is not set for Data-Protect Netapp
            Volumes backup. If field is set to true, existing oldest snapshot is used
            for backup and subsequent incremental will be selected in ascending order
            of snapshot create time on the source. If snapshot label is set, this
            field is set to false.
          nullable: true
          type: boolean
          x-order: 3
        continuousSnapshots:
          $ref: '#/components/schemas/ContinuousSnapshotParams'
      type: object
    NetappObjectProtectionRequestParams:
      allOf:
      - $ref: '#/components/schemas/ElastifileObjectProtectionRequestParams_allOf'
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      - $ref: '#/components/schemas/NetappObjectProtectionParams'
      description: Specifies the parameters which are specific to Netapp object protection.
    NetappObjectProtectionResponseParams:
      allOf:
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      - $ref: '#/components/schemas/NetappObjectProtectionParams'
      description: Specifies the parameters which are specific to Netapp object protection.
    NetappObjectProtectionUpdateRequestParams:
      allOf:
      - $ref: '#/components/schemas/CommonNasProtectionParams'
      - $ref: '#/components/schemas/NetappObjectProtectionParams'
      description: Specifies the update parameters which are specific to Netapp object
        protection.
    NetappProtectionGroupObjectParams:
      description: Specifies an object protected by a Netapp Protection Group.
      properties:
        id:
          description: Specifies the ID of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      type: object
    NetappProtectionGroupParams:
      description: Specifies the parameters which are specific to Netapp related Protection
        Groups.
      nullable: true
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/NetappProtectionGroupObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        excludeObjectIds:
          description: Specifies the objects to be excluded in the Protection Group.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          uniqueItems: true
          x-order: 1
        directCloudArchive:
          description: Specifies whether or not to store the snapshots in this run
            directly in an Archive Target instead of on the Cluster. If this is set
            to true, the associated policy must have exactly one Archive Target associated
            with it and the policy must be set up to archive after every run. Also,
            a Storage Domain cannot be specified. Default behavior is 'false'.
          nullable: true
          type: boolean
          x-order: 2
        nativeFormat:
          description: Specifies whether or not to enable native format for direct
            archive job. This field is set to true if native format should be used
            for archiving.
          nullable: true
          type: boolean
          x-order: 3
        snapshotLabel:
          $ref: '#/components/schemas/SnapshotLabel'
        snapMirrorConfig:
          $ref: '#/components/schemas/SnapMirrorConfig'
        backupExistingSnapshot:
          description: Specifies that snapshot label is not set for Data-Protect Netapp
            Volumes backup. If field is set to true, existing oldest snapshot is used
            for backup and subsequent incremental will be selected in ascending order
            of snapshot create time on the source. If snapshot label is set, this
            field is set to false.
          nullable: true
          type: boolean
          x-order: 6
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        protocol:
          description: Specifies the preferred protocol to use if this device supports
            multiple protocols.
          enum:
          - kNoProtocol
          - kNfs3
          - kNfs4_1
          - kCifs1
          - kCifs2
          - kCifs3
          nullable: true
          type: string
          x-order: 8
        nfsVersionPreference:
          description: Specifies the preference of NFS version to be backed up if
            a volume supports multiple versions of NFS.
          enum:
          - kNfs3
          - kNfs4_1
          nullable: true
          type: string
          x-order: 9
        continueOnError:
          description: Specifies whether or not the Protection Group should continue
            regardless of whether or not an error was encountered during protection
            group run.
          nullable: true
          type: boolean
          x-order: 10
        encryptionEnabled:
          description: Specifies whether the protection group should use encryption
            while backup or not.
          nullable: true
          type: boolean
          x-order: 11
        fileLockConfig:
          $ref: '#/components/schemas/FileLevelDataLockConfig'
        fileFilters:
          $ref: '#/components/schemas/FileFilteringPolicy'
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 14
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 15
        prePostScript:
          $ref: '#/components/schemas/HostBasedBackupScriptParams'
        continuousSnapshots:
          $ref: '#/components/schemas/ContinuousSnapshotParams'
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        throttlingConfig:
          $ref: '#/components/schemas/NasThrottlingConfig'
      required:
      - objects
      type: object
      x-nullable: true
    NetappProtocol:
      description: Netapp Protocol type.
      properties:
        netappProtocol:
          description: Specifies Netapp Protocol type.
          enum:
          - kNfs
          - kCifs
          - kIscsi
          - kFc
          - kFcache
          - kHttp
          - kNdmp
          - kManagement
          - kNvme
          type: string
          x-order: 0
      title: Netapp Protocol type.
      type: object
    NetappRecoverFileAndFolderInfo:
      allOf:
      - $ref: '#/components/schemas/CommonRecoverFileAndFolderInfo'
      - $ref: '#/components/schemas/NetappRecoverFileAndFolderInfo_allOf'
      description: Specifies the info about the netapp files and folders to be recovered.
    NetappRegistrationParams:
      description: Specifies parameters to register an Netapp Source.
      properties:
        sourceType:
          description: Specifies the Netapp source type. Can be either kCluster or
            kVServer (SVM).
          enum:
          - kCluster
          - kVServer
          nullable: true
          type: string
          x-order: 0
        endpoint:
          description: Specifies the Hostname or IP Address Endpoint for the Netapp
            Source.
          nullable: true
          type: string
          x-order: 1
        credentials:
          $ref: '#/components/schemas/Credentials'
        backUpSMBVolumes:
          description: Specifies whether or not to back up SMB Volumes.
          nullable: true
          type: boolean
          x-order: 3
        smbCredentials:
          $ref: '#/components/schemas/SmbMountCredentials'
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        throttlingConfig:
          $ref: '#/components/schemas/NasThrottlingConfig'
      required:
      - credentials
      - endpoint
      - sourceType
      title: Netapp Protection Source.
      type: object
    NetappSourceType:
      description: Netapp Source type.
      properties:
        netappProtocol:
          description: Specifies Netapp Source type.
          enum:
          - kCluster
          - kVServer
          type: string
          x-order: 0
      title: Netapp Source type.
      type: object
    NetworkConnectionInfo:
      description: Specify the network connection information.
      properties:
        domainName:
          description: Specifies the domain name of the network connection.
          nullable: true
          type: string
          x-order: 0
        networkGateway:
          description: Specifies the network Gateway of the network connection.
          nullable: true
          type: string
          x-order: 1
        dns:
          description: Specifies the DNS Server of the network connection.
          nullable: true
          type: string
          x-order: 2
        ntp:
          description: Specifies the NTP Server of the network connection.
          nullable: true
          type: string
          x-order: 3
      title: Network Connection.
      type: object
    NetworkInterface:
      description: Specifies the parameters of a network interface.
      example:
        bondSlaveNames:
        - bondSlaveNames
        - bondSlaveNames
        subnet: subnet
        role: Primary
        staticIP: staticIP
        isConnected: true
        type: Physical
        defaultRoute: true
        speed: 1Gbit/s
        virtualIP: virtualIP
        mtu: 6
        macAddress: macAddress
        isUp: true
        bondingMode: ActiveBackup
        name: name
        gateway: gateway
        bondSlaveSlots:
        - bondSlaveSlots
        - bondSlaveSlots
        group: group
      properties:
        name:
          description: Specifies the name of the network interface.
          nullable: true
          type: string
          x-order: 0
        type:
          description: Specifies the type of the network interface.
          enum:
          - Physical
          - Bond
          - Bridge
          - Group
          - Vlan
          - VlanPhysical
          - VlanBond
          - VlanGroup
          - VlanBridge
          - Invalid
          nullable: true
          type: string
          x-order: 1
        staticIP:
          description: Specifies the static IP of the network interface.
          nullable: true
          type: string
          x-order: 2
        virtualIP:
          description: Specifies the virtual IP of the network interface.
          nullable: true
          type: string
          x-order: 3
        gateway:
          description: Specifies the gateway of the network interface.
          nullable: true
          type: string
          x-order: 4
        mtu:
          description: Specifies the MTU of the network interface.
          format: int32
          nullable: true
          type: integer
          x-order: 5
        subnet:
          description: Specifies the subnet of the network interface.
          nullable: true
          type: string
          x-order: 6
        isUp:
          description: Specifies whether or not the interface is up.
          nullable: true
          type: boolean
          x-order: 7
        group:
          description: Specifies the group to which this interface belongs.
          nullable: true
          type: string
          x-order: 8
        role:
          description: Specifies the interface role.
          enum:
          - Primary
          - Secondary
          - Undefined
          nullable: true
          type: string
          x-order: 9
        defaultRoute:
          description: Specifies whether or not this interface is the default route.
          nullable: true
          type: boolean
          x-order: 10
        bondSlaveNames:
          description: Specifies the names of the bond slaves for this interface.
          items:
            type: string
          nullable: true
          type: array
          x-order: 11
        bondSlaveSlots:
          description: Specifies the slots of the bond slaves for this interface.
          items:
            type: string
          nullable: true
          type: array
          x-order: 12
        bondingMode:
          description: Specifies the bonding mode of this interface.
          enum:
          - ActiveBackup
          - 802_3ad
          - BalanceAlb
          - Invalid
          nullable: true
          type: string
          x-order: 13
        macAddress:
          description: Specifies the MAC address of this interface.
          nullable: true
          type: string
          x-order: 14
        isConnected:
          description: Specifies whether or not this interface is connected.
          nullable: true
          type: boolean
          x-order: 15
        speed:
          description: Specifies the speed of this interface.
          enum:
          - 1Gbit/s
          - 10Gbit/s
          - 25Gbit/s
          - 40Gbit/s
          - 100Gbit/s
          - Unknown
          nullable: true
          type: string
          x-order: 16
      title: Network Interface
      type: object
    NetworkInterfaceType:
      description: Type of a network interface.
      properties:
        networkInterfaceType:
          description: Specifies the network interface type.
          enum:
          - Physical
          - Bond
          - Bridge
          - Group
          - Vlan
          - VlanPhysical
          - VlanBond
          - VlanGroup
          - VlanBridge
          - Invalid
          type: string
          x-order: 0
      title: Network Interface Type
      type: object
    NewGroupParam:
      description: Specifies the parameters for using a new protection group.
      properties:
        name:
          description: Specifies the name of the new protection group.
          nullable: true
          type: string
          x-order: 0
        policyId:
          description: Specifies the policy id of the new protection group.
          nullable: true
          type: string
          x-order: 1
        storageDomainId:
          description: Specifies the storage domain id of the new protection group.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      required:
      - name
      - policyId
      - storageDomainId
      type: object
    NfsConfig:
      description: Specifies the NFS config settings for this View.
      properties:
        enableNfsViewDiscovery:
          description: If set, it enables discovery of view for NFS.
          nullable: true
          type: boolean
          x-order: 0
        nfsAllSquash:
          allOf:
          - $ref: '#/components/schemas/NfsSquash'
          - type: object
            x-nullable: true
          description: Specifies the NFS all squash config.
          type: object
          x-order: 1
        nfsRootPermissions:
          allOf:
          - $ref: '#/components/schemas/NfsRootPermissions'
          - type: object
            x-nullable: true
          description: Specifies the NFS root permission config of the view file system.
          type: object
          x-order: 2
        nfsRootSquash:
          allOf:
          - $ref: '#/components/schemas/NfsSquash'
          - type: object
            x-nullable: true
          description: Specifies the NFS root squash config.
          type: object
          x-order: 3
        enableNfsUnixAuthentication:
          description: If set, it enables NFS UNIX Authentication
          nullable: true
          type: boolean
          x-order: 4
        enableNfsKerberosAuthentication:
          description: If set, it enables NFS Kerberos Authentication
          nullable: true
          type: boolean
          x-order: 5
        enableNfsKerberosIntegrity:
          description: If set, it enables NFS Kerberos Integrity
          nullable: true
          type: boolean
          x-order: 6
        enableNfsKerberosPrivacy:
          description: If set, it enables NFS Kerberos Privacy
          nullable: true
          type: boolean
          x-order: 7
      type: object
    NfsProtocol:
      description: NFS Protocol type.
      properties:
        nfsProtocol:
          description: Specifies Nfs Protocol type.
          enum:
          - kNfs3
          - kNfs4_1
          type: string
          x-order: 0
      title: NFS Protocol type.
      type: object
    NfsRootPermissions:
      description: Specifies the config of NFS root permission of a view file system.
      properties:
        gid:
          description: Unix GID for the root of the file system.
          format: uint32
          nullable: true
          type: integer
          x-order: 0
        mode:
          description: Unix mode bits for the root of the file system.
          format: uint32
          nullable: true
          type: integer
          x-order: 1
        uid:
          description: Unix UID for the root of the file system.
          format: uint32
          nullable: true
          type: integer
          x-order: 2
      title: NfsRootPermissions
      type: object
    NfsSquash:
      properties:
        gid:
          description: GID mapped for all clients.
          format: uint32
          nullable: true
          type: integer
          x-order: 0
        uid:
          description: UID mapped for all clients.
          format: uint32
          nullable: true
          type: integer
          x-order: 1
      title: NfsSquash specifies the squash config for client subnet whitelist.
      type: object
    NicSpeedType:
      description: Speed of a network interface.
      properties:
        nicSpeedType:
          description: Specifies the network interface speed.
          enum:
          - 1Gbit/s
          - 10Gbit/s
          - 25Gbit/s
          - 40Gbit/s
          - 100Gbit/s
          - Unknown
          type: string
          x-order: 0
      title: NIC Speed Type
      type: object
    NimbleProtectionGroupObjectParams:
      description: Specifies the object parameters to create Nimble Protection Group.
      properties:
        id:
          description: Specifies the id of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      title: Nimble Protection Group Object Params.
      type: object
    NimbleProtectionGroupParams:
      description: Specifies the parameters which are specific to Nimble related Protection
        Groups.
      nullable: true
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/NimbleProtectionGroupObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 1
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 2
      required:
      - objects
      type: object
      x-nullable: true
    NisNetgroup:
      description: Specifies an NIS netgroup.
      example:
        domain: domain
        nfsAccess: kDisabled
        nfsSquash: kNone
        name: name
      properties:
        name:
          description: Specifies the netgroup name.
          nullable: true
          type: string
          x-order: 0
        domain:
          description: Specifies the domain name for the netgroup.
          nullable: true
          type: string
          x-order: 1
        nfsAccess:
          description: Specifies NFS protocol acess level for clients from the netgroup.
          enum:
          - kDisabled
          - kReadOnly
          - kReadWrite
          nullable: true
          type: string
          x-order: 2
        nfsSquash:
          description: |-
            Specifies which nfsSquash Mounted.
            'kNone' mounts none.
            'kRootSquash' mounts nfsRootSquash. Whether clients from this subnet can
            mount as root on NFS.
            'kAllSquash' mounts nfsAllSquash. Whether all clients from this subnet can
            map view with view_all_squash_uid/view_all_squash_gid configured in
            the view.
          enum:
          - kNone
          - kRootSquash
          - kAllSquash
          nullable: true
          type: string
          x-order: 3
      required:
      - domain
      - name
      type: object
    NisNetgroups:
      description: Response of NIS Netgroups.
      example:
        nisNetgroups:
        - domain: domain
          nfsAccess: kDisabled
          nfsSquash: kNone
          name: name
        - domain: domain
          nfsAccess: kDisabled
          nfsSquash: kNone
          name: name
      properties:
        nisNetgroups:
          description: A list of NIS Netgroups.
          items:
            $ref: '#/components/schemas/NisNetgroup'
          nullable: true
          type: array
          x-order: 0
      type: object
    NisProvider:
      description: Specifies an NIS Provider.
      example:
        masterServerHostname: masterServerHostname
        slaveServers:
        - slaveServers
        - slaveServers
        domain: domain
        tenantIds:
        - tenantIds
        - tenantIds
      properties:
        domain:
          description: Specifies the Domain Name of NIS Provider.
          nullable: true
          type: string
          x-order: 0
        masterServerHostname:
          description: Specifies the hostname of Master Server.
          nullable: true
          type: string
          x-order: 1
        slaveServers:
          description: Specifies a list of slave servers in the NIS Domain.
          items:
            type: string
          nullable: true
          type: array
          x-order: 2
        tenantIds:
          description: Specifies the list of tenant Ids for NIS Provider.
          items:
            type: string
          nullable: true
          type: array
          x-order: 3
      required:
      - domain
      - masterServerHostname
      type: object
    NisProviders:
      description: Response of NIS Providers.
      example:
        nisProviders:
        - masterServerHostname: masterServerHostname
          slaveServers:
          - slaveServers
          - slaveServers
          domain: domain
          tenantIds:
          - tenantIds
          - tenantIds
        - masterServerHostname: masterServerHostname
          slaveServers:
          - slaveServers
          - slaveServers
          domain: domain
          tenantIds:
          - tenantIds
          - tenantIds
      properties:
        nisProviders:
          description: A list of NIS Providers.
          items:
            $ref: '#/components/schemas/NisProvider'
          nullable: true
          type: array
          x-order: 0
      type: object
    NoSqlObjectProperty:
      description: Specifies an Object property as a set of key-value pair for NoSQL
        objects.
      properties:
        key:
          description: Specifies the key of the property.
          nullable: true
          type: string
          x-order: 0
        value:
          description: specifies the value of the property.
          nullable: true
          type: string
          x-order: 1
      required:
      - key
      - value
      type: object
    NoSqlProtectionGroupObjectParams:
      description: Specifies an object protected by a Protection Group.
      properties:
        id:
          description: Specifies the ID of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      type: object
    NoSqlProtectionGroupParams:
      description: Specifies the source specific parameters for this Protection Group.
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/NoSqlProtectionGroupObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        concurrency:
          description: Specifies the maximum number of concurrent IO Streams that
            will be created to exchange data with the cluster.
          format: int32
          nullable: true
          type: integer
          x-order: 1
        bandwidthMBPS:
          description: Specifies the maximum network bandwidth that each concurrent
            IO Stream can use for exchanging data with the cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        excludeObjectIds:
          description: Specifies the objects to be excluded in the Protection Group.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          uniqueItems: true
          x-order: 3
        sourceId:
          description: Object ID of the Source on which this protection was run .
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 4
        sourceName:
          description: Specifies the name of the Source on which this protection was
            run.
          nullable: true
          readOnly: true
          type: string
          x-order: 5
      type: object
    NodeEndpointState:
      description: Specify the results after checking connectivity on endpoints on
        each node.
      properties:
        id:
          description: Specifies the Id of the node.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        endpoints:
          description: Specifies the results of the endpoints.
          items:
            $ref: '#/components/schemas/EndpointConnectionState'
          nullable: true
          type: array
          x-order: 1
        gatewayReachability:
          $ref: '#/components/schemas/EndpointConnectionState'
        dnsServerReachability:
          $ref: '#/components/schemas/EndpointConnectionState'
        ntpServerReachability:
          $ref: '#/components/schemas/EndpointConnectionState'
        checkTimestampUsecs:
          description: Specifies the time in Epoch in micro seconds when the check
            is performed.
          format: int64
          nullable: true
          type: integer
          x-order: 5
      title: Node Endpoint State.
      type: object
    NodeFreeDisks:
      description: Sepcifies the free disks of a node.
      example:
        freeDisks:
        - path: path
          serialNumber: serialNumber
          sizeInBytes: 6
          location: location
        - path: path
          serialNumber: serialNumber
          sizeInBytes: 6
          location: location
        chassisSerial: chassisSerial
        errorMessage: errorMessage
        slot: 1
        nodeId: 0
      properties:
        nodeId:
          description: Specifies the id of a node.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        freeDisks:
          description: Specifies list of free disks of node.
          items:
            $ref: '#/components/schemas/FreeDisk'
          nullable: true
          type: array
          x-order: 1
        chassisSerial:
          description: Chassis serial number.
          nullable: true
          type: string
          x-order: 2
        slot:
          description: Slot number of node
          format: int64
          nullable: true
          type: integer
          x-order: 3
        errorMessage:
          description: Error message of disks assimilation request.
          nullable: true
          readOnly: true
          type: string
          x-order: 4
      required:
      - freeDisks
      - nodeId
      title: NodeFreeDisks
      type: object
    NodeGroup:
      description: Specifies common fields required to define Node Group.
      example:
        dnsServersInfo:
          dnsServers:
          - dnsServers
          - dnsServers
        node-ids:
        - 0
        - 0
        name: name
        bgpInstance:
          timers:
            keepAlive: 2
            holdTime: 7
          localAS: 5
          peers:
          - timers:
              keepAlive: 2
              holdTime: 7
            remoteAS: 5
            description: description
            addressOrTag: addressOrTag
          - timers:
              keepAlive: 2
              holdTime: 7
            remoteAS: 5
            description: description
            addressOrTag: addressOrTag
        id: 6
        type: 1
        subnetInfo:
          netmaskBits: 9
          subnetIp: subnetIp
          gateway: gateway
      properties:
        name:
          description: Specifies the name of the Node Group.
          type: string
          x-order: 0
        node-ids:
          description: List of Node Ids that are part of this node group.
          items:
            format: int64
            type: integer
          nullable: true
          title: Node Ids
          type: array
          x-order: 1
        id:
          description: Id of the node group.
          format: int32
          nullable: true
          type: integer
          x-order: 2
        type:
          description: Type of the node group.
          format: int32
          nullable: true
          type: integer
          x-order: 3
        bgpInstance:
          $ref: '#/components/schemas/BgpInstance'
        subnetInfo:
          $ref: '#/components/schemas/SubnetInfo'
        dnsServersInfo:
          $ref: '#/components/schemas/DnsServersInfo'
      required:
      - name
      title: Node Group
      type: object
    NodeGroupRequest:
      allOf:
      - $ref: '#/components/schemas/NodeGroup'
      - type: object
      description: Specifies the request to create a Node Group.
      title: Node Group Request.
    NodeGroupResponse:
      description: Specifies the details of Node Groups.
      example:
        nodeGroups:
        - dnsServersInfo:
            dnsServers:
            - dnsServers
            - dnsServers
          node-ids:
          - 0
          - 0
          name: name
          bgpInstance:
            timers:
              keepAlive: 2
              holdTime: 7
            localAS: 5
            peers:
            - timers:
                keepAlive: 2
                holdTime: 7
              remoteAS: 5
              description: description
              addressOrTag: addressOrTag
            - timers:
                keepAlive: 2
                holdTime: 7
              remoteAS: 5
              description: description
              addressOrTag: addressOrTag
          id: 6
          type: 1
          subnetInfo:
            netmaskBits: 9
            subnetIp: subnetIp
            gateway: gateway
        - dnsServersInfo:
            dnsServers:
            - dnsServers
            - dnsServers
          node-ids:
          - 0
          - 0
          name: name
          bgpInstance:
            timers:
              keepAlive: 2
              holdTime: 7
            localAS: 5
            peers:
            - timers:
                keepAlive: 2
                holdTime: 7
              remoteAS: 5
              description: description
              addressOrTag: addressOrTag
            - timers:
                keepAlive: 2
                holdTime: 7
              remoteAS: 5
              description: description
              addressOrTag: addressOrTag
          id: 6
          type: 1
          subnetInfo:
            netmaskBits: 9
            subnetIp: subnetIp
            gateway: gateway
      properties:
        nodeGroups:
          description: Specifies the details of a Node Group.
          items:
            $ref: '#/components/schemas/NodeGroup'
          nullable: true
          title: Node Groups
          type: array
          x-order: 0
      title: Node Group Response
      type: object
    NodeIdentifyParams:
      description: Specifies the parameter to identify node.
      example:
        identify: true
      properties:
        identify:
          description: Turn on/off node led light if set to true/false respectively.
          nullable: true
          type: boolean
          x-order: 0
      required:
      - identify
      title: Node Identify Request Parameters.
      type: object
    NodeInterfaces:
      description: Specifies the interfaces present on a Node.
      example:
        interfaces:
        - bondSlaveNames:
          - bondSlaveNames
          - bondSlaveNames
          subnet: subnet
          role: Primary
          staticIP: staticIP
          isConnected: true
          type: Physical
          defaultRoute: true
          speed: 1Gbit/s
          virtualIP: virtualIP
          mtu: 6
          macAddress: macAddress
          isUp: true
          bondingMode: ActiveBackup
          name: name
          gateway: gateway
          bondSlaveSlots:
          - bondSlaveSlots
          - bondSlaveSlots
          group: group
        - bondSlaveNames:
          - bondSlaveNames
          - bondSlaveNames
          subnet: subnet
          role: Primary
          staticIP: staticIP
          isConnected: true
          type: Physical
          defaultRoute: true
          speed: 1Gbit/s
          virtualIP: virtualIP
          mtu: 6
          macAddress: macAddress
          isUp: true
          bondingMode: ActiveBackup
          name: name
          gateway: gateway
          bondSlaveSlots:
          - bondSlaveSlots
          - bondSlaveSlots
          group: group
        id: 0
      properties:
        id:
          description: Specifies the id of the node.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        interfaces:
          description: Specifies the list of network interfaces present on this Node.
          items:
            $ref: '#/components/schemas/NetworkInterface'
          type: array
          x-order: 1
      title: Node Interfaces
      type: object
    NodePowerOperation:
      example:
        operation: poweroff
        nodeId: 0
      properties:
        operation:
          description: The operation clould be poweroff, reboot.
          enum:
          - poweroff
          - reboot
          nullable: true
          type: string
          x-order: 0
        nodeId:
          description: Id of the node to do the specified operation.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      required:
      - operation
      title: NodePowerOperation
      type: object
    NodeRemovalParams:
      description: Specifies parameters to initiate/cancel node removal.
      example:
        cancel: true
      properties:
        cancel:
          description: If true, cancels node removal that is already in progress.
          nullable: true
          type: boolean
          x-order: 0
      required:
      - cancel
      title: Node Removal Parameters.
      type: object
    NodeResetState:
      description: Node reset state information
      properties:
        nodeId:
          description: Node Id
          format: int64
          nullable: true
          type: integer
          x-go-name: NodeId
          x-order: 0
        nodeIp:
          description: Node Ip.
          nullable: true
          type: string
          x-go-name: NodeIp
          x-order: 1
        state:
          description: Reset state.
          nullable: true
          type: string
          x-go-name: State
          x-order: 2
      title: NodeResetState
      type: object
    NodeUnitProgress:
      description: Specifies the progress of the patch operation on a node.
      example:
        patchLevelTransition: patchLevelTransition
        inProgress: true
        percentage: 7
        timeTakenSeconds: 9
        nodeMessage: nodeMessage
        nodeIp: nodeIp
      properties:
        nodeIp:
          description: Specifies the IP address of the node.
          nullable: true
          type: string
          x-order: 0
        inProgress:
          description: Specifies whether a operation is in progress on the node.
          nullable: true
          type: boolean
          x-order: 1
        patchLevelTransition:
          description: Specifies the patch level transition of the patch operation.
            For Apply operation, patch level goes up for each operation. For Revert
            operation, patch level goes down. Patch level zero is the base level where
            no patch was applied.
          nullable: true
          type: string
          x-order: 2
        percentage:
          description: Specifies the percentage of completion of the patch operation
            on the node.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        timeTakenSeconds:
          description: Specifies the time taken so far in this patch unit operation
            on the node.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        nodeMessage:
          description: Specifies a message about the patch operation on the node.
          nullable: true
          type: string
          x-order: 5
      title: Patch Operation Node Unit Progress.
      type: object
    NotificationInfo:
      description: Specifies the details of an anomaly notification
      example:
        anomalyStrengthThreshold: 0
      properties:
        anomalyStrengthThreshold:
          description: Anomaly strength level beyond which notification has to be
            sent.
          format: int64
          nullable: true
          type: integer
          x-order: 0
      title: Anomaly alert notification information
      type: object
    NumWeekInMonth:
      description: Num Week In Month type.
      properties:
        numWeekInMonth:
          description: Specifies Num Week In Month type.
          enum:
          - First
          - Second
          - Third
          - Fourth
          - Last
          type: string
          x-order: 0
      title: Num Week In Month type.
      type: object
    O365HeliosSearchEmailsRequestParams:
      allOf:
      - $ref: '#/components/schemas/GlobalClusterIdentifier'
      - $ref: '#/components/schemas/O365HeliosSearchEmailsRequestParams_allOf'
      description: Specifies email search request params specific to O365 environment.
      title: O365 Search Emails Request Params
    O365ProtectionGroupType:
      description: O365 Protection Group type.
      properties:
        environment:
          description: Specifies O365 Protection Group type.
          enum:
          - kMailbox
          - kOneDrive
          - kSharePoint
          - kPublicFolders
          - kGroups
          - kTeams
          type: string
          x-order: 0
      title: O365 Protection Group type.
      type: object
    O365SearchEmailsRequestParams:
      description: Specifies email search request params specific to O365 environment.
      properties:
        domainIds:
          description: Specifies the domain Ids in which mailboxes are registered.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 0
        mailboxIds:
          description: Specifies the mailbox Ids which contains the emails/folders.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 1
      title: O365 Search Emails Request Params
      type: object
    O365SearchSharepointRequestParams:
      description: Specifies Sharepoint site search request params specific to O365
        environment.
      properties:
        domainIds:
          description: Specifies the domain Ids in which Sharepoint sites are registered.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 0
        siteIds:
          description: Specifies the Sharepoint site Ids across which the document
            library files/folders needs to be searched.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 1
      title: O365 Search Sharepoint Request Params
      type: object
    Object:
      allOf:
      - $ref: '#/components/schemas/CommonObjectSummary'
      - $ref: '#/components/schemas/Object_allOf'
      description: Specifies information about an object.
      title: Object information
    ObjectActionRequest:
      allOf:
      - $ref: '#/components/schemas/CommonObjectActionRequest'
      - $ref: '#/components/schemas/ObjectActionRequest_allOf'
      description: Specifies the request to peform an action on an Object.
      title: Peform an action on an Object.
    ObjectArchivalSnapshotInfo:
      allOf:
      - $ref: '#/components/schemas/ObjectArchivalSnapshotInfo_allOf'
      - $ref: '#/components/schemas/ArchivalTargetSummaryInfo'
      description: Specifies the Archival snapshot information for the object.
      title: Object Archival Snapshot Information
    ObjectBackupSnapshotStatus:
      description: Object Backup Snapshot Status type.
      properties:
        objectBackupSnapshotStatus:
          description: Specifies Object Backup Snapshot Status type.
          enum:
          - kInProgress
          - kSuccessful
          - kFailed
          - kWaitingForNextAttempt
          - kWarning
          - kCurrentAttemptPaused
          type: string
          x-order: 0
      title: Object Backup Snapshot Status type.
      type: object
    ObjectBrowseRequest:
      allOf:
      - $ref: '#/components/schemas/CommonObjectActionRequest'
      - $ref: '#/components/schemas/ObjectBrowseRequest_allOf'
      description: Specifies the request to fetch children of an object.
      title: Fetch children of an object.
    ObjectEnvironment:
      description: Specifies object environment.
      properties:
        type:
          description: Specifies type of object environment.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kKVM
          - kAWS
          - kAcropolis
          - kGCP
          - kPhysical
          - kPhysicalFiles
          - kIsilon
          - kNetapp
          - kGenericNas
          - kFlashBlade
          - kElastifile
          - kGPFS
          - kPure
          - kNimble
          - kSQL
          - kOracle
          - kExchange
          - kAD
          - kView
          - kO365
          - kHyperFlex
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          type: string
          x-order: 0
      title: Object Environment
      type: object
    ObjectIdentifier:
      description: Specifies the basic info to identify an object.
      properties:
        id:
          description: Specifies object id.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object.
          nullable: true
          type: string
          x-order: 1
        sourceId:
          description: Specifies registered source id to which object belongs.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        sourceName:
          description: Specifies registered source name to which object belongs.
          nullable: true
          type: string
          x-order: 3
        environment:
          description: Specifies the environment of the object.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kKVM
          - kAWS
          - kAcropolis
          - kGCP
          - kPhysical
          - kPhysicalFiles
          - kIsilon
          - kNetapp
          - kGenericNas
          - kFlashBlade
          - kElastifile
          - kGPFS
          - kPure
          - kNimble
          - kSQL
          - kOracle
          - kExchange
          - kAD
          - kView
          - kO365
          - kHyperFlex
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          nullable: true
          type: string
          x-order: 4
      title: Object Identifier.
      type: object
    ObjectLastRun:
      allOf:
      - $ref: '#/components/schemas/ObjectSummary'
      - $ref: '#/components/schemas/ObjectLastRun_allOf'
      description: Specifies last run info of an object.
    ObjectLinkingParams:
      allOf:
      - $ref: '#/components/schemas/CommonObjectsActionParams'
      description: Specifies the parameters required for linking objects. This is
        currently used as a part of vm migration workflow.
    ObjectLinkingRequest:
      description: Request for linking replicated objects to failover objects on replication
        cluster.
      example:
        objectMap:
        - replicaObjectId: 0
          failoverObjectId: 6
        - replicaObjectId: 0
          failoverObjectId: 6
      properties:
        objectMap:
          description: Specifies the objectMap that will be used to create linking
            between given replicated source entity and newly restored entity on erplication
            cluster.
          items:
            $ref: '#/components/schemas/ReplicaFailoverObject'
          nullable: true
          type: array
          x-order: 0
      type: object
    ObjectLocalSnapshotInfo:
      description: Specifies the Local snapshot information for the object.
      properties:
        snapshotId:
          description: Specifies the id of the local snapshot for the object.
          nullable: true
          type: string
          x-order: 0
        logicalSizeBytes:
          description: Specifies the logical size of this snapshot in bytes.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      title: Object Local Snapshot Information.
      type: object
    ObjectMailboxParam:
      description: Specifies Mailbox recovery parameters associated with a user.
      properties:
        ownerInfo:
          allOf:
          - $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          - type: object
            x-nullable: true
          description: Specifies the Mailbox owner info.
          type: object
          x-order: 0
        mailboxParams:
          allOf:
          - $ref: '#/components/schemas/MailboxParam'
          - type: object
            x-nullable: true
          description: Specifies parameters to recover a Mailbox.
          type: object
          x-order: 1
      required:
      - mailboxParams
      - ownerInfo
      type: object
    ObjectMsTeamParam:
      description: Specifies recovery parameters associated with a Microsoft 365 Team.
      properties:
        recoverObject:
          allOf:
          - $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          - type: object
            x-nullable: true
          description: Specifies the Microsoft 365 Team recover object info.
          type: object
          x-order: 0
        msTeamParam:
          allOf:
          - $ref: '#/components/schemas/MsTeamParam'
          - type: object
            x-nullable: true
          description: Specifies parameters to recover a Microsoft 365 Team.
          type: object
          x-order: 1
      required:
      - msTeamParam
      - recoverObject
      type: object
    ObjectOneDriveParam:
      description: Specifies OneDrive recovery parameters associated with a user.
      properties:
        ownerInfo:
          allOf:
          - $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          - type: object
            x-nullable: true
          description: Specifies the OneDrive owner info.
          type: object
          x-order: 0
        oneDriveParams:
          description: Specifies parameters to recover a OneDrive.
          items:
            $ref: '#/components/schemas/OneDriveParam'
          nullable: true
          type: array
          x-order: 1
      type: object
    ObjectPolicy:
      description: Specifies the protection policy for protecting an object.
      properties:
        id:
          description: Specifies the id of protection policy.
          nullable: true
          type: string
          x-order: 0
        protectionType:
          description: Specifies the protection type.
          enum:
          - kNative
          - kSnapshotManager
          - kPhysical
          - kSQL
          - kOracle
          nullable: true
          type: string
          x-order: 1
      required:
      - id
      - protectionType
      title: Protection Policy
      type: object
    ObjectProgressInfo:
      allOf:
      - $ref: '#/components/schemas/ObjectIdentifier'
      - $ref: '#/components/schemas/ProgressTaskInfo'
      - $ref: '#/components/schemas/ObjectProgressInfo_allOf'
      description: Specifies the progress of an object.
    ObjectProtectionGroupSummary:
      description: Specifies a summary of a protection group protecting this object.
      properties:
        name:
          description: Specifies the protection group name.
          nullable: true
          type: string
          x-order: 0
        id:
          description: Specifies the protection group id.
          nullable: true
          type: string
          x-order: 1
        policyName:
          description: Specifies the policy name for this group.
          nullable: true
          type: string
          x-order: 2
        policyId:
          description: Specifies the policy id for this group.
          nullable: true
          type: string
          x-order: 3
        storageDomainId:
          description: Specifies the storage domain id of this group. Format is clusterId:clusterIncarnationId:storageDomainId.
          nullable: true
          type: string
          x-order: 4
        lastBackupRunStatus:
          description: Specifies the status of last local back up run.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          nullable: true
          type: string
          x-order: 5
        lastArchivalRunStatus:
          description: Specifies the status of last archival run.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          nullable: true
          type: string
          x-order: 6
        lastReplicationRunStatus:
          description: Specifies the status of last replication run.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          nullable: true
          type: string
          x-order: 7
        lastRunSlaViolated:
          description: Specifies if the sla is violated in last run.
          nullable: true
          type: boolean
          x-order: 8
      type: object
    ObjectProtectionInfo:
      description: Specifies the object info on cluster.
      properties:
        objectId:
          description: Specifies the object id.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        sourceId:
          description: Specifies the source id.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        viewId:
          description: Specifies the view id for the object.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        regionId:
          description: Specifies the region id where this object belongs to.
          nullable: true
          type: string
          x-order: 3
        clusterId:
          description: Specifies the cluster id where this object belongs to.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        clusterIncarnationId:
          description: Specifies the cluster incarnation id where this object belongs
            to.
          format: int64
          nullable: true
          type: integer
          x-order: 5
        tenantIds:
          description: List of Tenants the object belongs to.
          items:
            type: string
          type: array
          x-order: 6
        protectionGroups:
          description: Specifies a list of protection groups protecting this object.
          items:
            $ref: '#/components/schemas/ObjectProtectionGroupSummary'
          nullable: true
          type: array
          x-order: 7
        objectBackupConfiguration:
          description: Specifies a list of object protections.
          items:
            $ref: '#/components/schemas/ProtectionSummary'
          nullable: true
          type: array
          x-order: 8
        lastRunStatus:
          description: Specifies the status of the object's last protection run.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          - Paused
          - Pausing
          - Resuming
          nullable: true
          type: string
          x-order: 9
      type: object
    ObjectProtectionRunInfo:
      description: Specifies the run info for a run protecting an object.
      properties:
        runId:
          description: Specifies the ID of the protection run.
          nullable: true
          type: string
          x-order: 0
        runType:
          description: Type of Protection run. 'kRegular' indicates an incremental
            (CBT) backup. Incremental backups utilizing CBT (if supported) are captured
            of the target protection objects. The first run of a kRegular schedule
            captures all the blocks. 'kFull' indicates a full (no CBT) backup. A complete
            backup (all blocks) of the target protection objects are always captured
            and Change Block Tracking (CBT) is not utilized. 'kLog' indicates a Database
            Log backup. Capture the database transaction logs to allow rolling back
            to a specific point in time. 'kSystem' indicates system volume backup.
            It produces an image for bare metal recovery.
          enum:
          - kRegular
          - kFull
          - kLog
          - kSystem
          - kHydrateCDP
          nullable: true
          type: string
          x-order: 1
        isSlaViolated:
          description: Indicated if SLA has been violated for this run.
          nullable: true
          type: boolean
          x-order: 2
        protectionGroupId:
          description: ProtectionGroupId to which this run belongs. This will only
            be populated if the object is protected by a protection group.
          nullable: true
          type: string
          x-order: 3
        protectionGroupName:
          description: Name of the Protection Group to which this run belongs. This
            will only be populated if the object is protected by a protection group.
          nullable: true
          type: string
          x-order: 4
        isLocalSnapshotsDeleted:
          description: Specifies if snapshots for this run has been deleted.
          nullable: true
          type: boolean
          x-order: 5
        isReplicationRun:
          description: Specifies if this protection run is a replication run.
          nullable: true
          type: boolean
          x-order: 6
        isCloudArchivalDirect:
          description: Specifies whether the run is a CAD run if cloud archive direct
            feature is enabled. If this field is true, the primary backup copy will
            only be available at the given archived location.
          nullable: true
          type: boolean
          x-order: 7
        policyId:
          description: Specifies the unique id of the Protection Policy associated
            with the Protection Run. The Policy provides retry settings Protection
            Schedules, Priority, SLA, etc.
          nullable: true
          type: string
          x-order: 8
        policyName:
          description: Specifies Specifies the name of the Protection Policy.
          nullable: true
          type: string
          x-order: 9
        storageDomainId:
          description: Specifies the Storage Domain (View Box) ID where this Protection
            Run writes data.
          format: int64
          nullable: true
          type: integer
          x-order: 10
        permissions:
          description: Specifies the list of tenants that have permissions for this
            protection group run.
          items:
            $ref: '#/components/schemas/Tenant'
          nullable: true
          type: array
          x-order: 11
        originClusterIdentifier:
          $ref: '#/components/schemas/ClusterIdentifier'
        originProtectionGroupId:
          description: ProtectionGroupId to which this run belongs on the primary
            cluster if this run is a replication run.
          nullable: true
          type: string
          x-order: 13
        localSnapshotInfo:
          $ref: '#/components/schemas/BackupRun'
        originalBackupInfo:
          $ref: '#/components/schemas/BackupRun'
        replicationInfo:
          $ref: '#/components/schemas/ReplicationRun'
        archivalInfo:
          $ref: '#/components/schemas/ArchivalRun'
        cloudSpinInfo:
          $ref: '#/components/schemas/CloudSpinRun'
        onLegalHold:
          description: Specifies if object's snapshot is on legal hold.
          nullable: true
          type: boolean
          x-order: 19
        dataLock:
          description: Specifies WORM retention type for the local backeup. When a
            WORM retention type is specified, the snapshots of the Protection Groups
            using this policy will be kept until the maximum of the snapshot retention
            time. During that time, the snapshots cannot be deleted. <br>'Compliance'
            implies WORM retention is set for compliance reason. <br>'Administrative'
            implies WORM retention is set for administrative purposes.
          enum:
          - Compliance
          - Administrative
          nullable: true
          type: string
          x-order: 20
      title: Object Protection Run Info.
      type: object
    ObjectProtectionRunSummary:
      allOf:
      - $ref: '#/components/schemas/ObjectIdentifier'
      - $ref: '#/components/schemas/ObjectProtectionRunInfo'
      description: Specifies the response body of the get object runs request.
      title: Object Protection Run Summary.
    ObjectProtectionStatsSummary:
      description: Specifies the count and size of protected and unprotected objects
        for a given environment.
      example:
        protectedCount: 7
        environment: kVMware
        unprotectedCount: 9
        unprotectedSizeBytes: 2
        protectedSizeBytes: 3
      properties:
        environment:
          description: Specifies the environment of the object.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kKVM
          - kAWS
          - kAcropolis
          - kGCP
          - kPhysical
          - kPhysicalFiles
          - kIsilon
          - kNetapp
          - kGenericNas
          - kFlashBlade
          - kElastifile
          - kGPFS
          - kPure
          - kNimble
          - kSQL
          - kOracle
          - kExchange
          - kAD
          - kView
          - kO365
          - kHyperFlex
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          nullable: true
          type: string
          x-go-name: Environment
          x-order: 0
        protectedCount:
          description: Specifies the count of the protected leaf objects.
          format: int64
          nullable: true
          type: integer
          x-go-name: ProtectedCount
          x-order: 1
        unprotectedCount:
          description: Specifies the count of the unprotected leaf objects.
          format: int64
          nullable: true
          type: integer
          x-go-name: UnprotectedCount
          x-order: 2
        protectedSizeBytes:
          description: Specifies the protected logical size in bytes.
          format: int64
          nullable: true
          type: integer
          x-go-name: ProtectedSizeBytes
          x-order: 3
        unprotectedSizeBytes:
          description: Specifies the unprotected logical size in bytes.
          format: int64
          nullable: true
          type: integer
          x-go-name: UnprotectedSizeBytes
          x-order: 4
      title: Object Protection Stats Summary
      type: object
    ObjectProtectionSummary:
      allOf:
      - $ref: '#/components/schemas/ObjectSummary'
      - $ref: '#/components/schemas/ObjectProtectionSummary_allOf'
      description: Specifies the summary of a protected object.
    ObjectRunResult:
      description: Snapshot, replication, archival results for an object.
      properties:
        object:
          $ref: '#/components/schemas/ObjectSummary'
        localSnapshotInfo:
          $ref: '#/components/schemas/BackupRun'
        originalBackupInfo:
          $ref: '#/components/schemas/BackupRun'
        replicationInfo:
          $ref: '#/components/schemas/ReplicationRun'
        archivalInfo:
          $ref: '#/components/schemas/ArchivalRun'
        cloudSpinInfo:
          $ref: '#/components/schemas/CloudSpinRun'
        onLegalHold:
          description: Specifies if object's snapshot is on legal hold.
          nullable: true
          type: boolean
          x-order: 6
      title: Snapshot, replication, archival results for an object.
      type: object
    ObjectServicesKeyMapping:
      description: Specifies object services key mapping config for view.
      properties:
        type:
          description: Specifies object services key mapping config for view.
          enum:
          - Random
          - Short
          - Long
          - Hierarchical
          - ObjectId
          type: string
          x-order: 0
      title: View object services key mapping config.
      type: object
    ObjectSiteParam:
      description: Specifies Site recovery parameters.
      properties:
        ownerInfo:
          allOf:
          - $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          - type: object
            x-nullable: true
          description: Specifies the Site owner info.
          type: object
          x-order: 0
        documentLibraryParams:
          description: Specifies the parameters to recover a document library
          items:
            $ref: '#/components/schemas/OneDriveParam'
          nullable: true
          type: array
          x-order: 1
      required:
      - ownerInfo
      type: object
    ObjectSnapshot:
      description: Specifies an Object Snapshot.
      example:
        sourceId: 7
        storageDomainId: 5
        protectionGroupName: protectionGroupName
        runType: kRegular
        externalTargetInfo: '{}'
        clusterId: 9
        clusterIncarnationId: 3
        protectionGroupId: protectionGroupId
        runInstanceId: 0
        netappParams: '{}'
        genericNasParams: '{}'
        indexingStatus: InProgress
        id: id
        hasDataLock: true
        objectId: 2
        flashbladeParams: '{}'
        protectionGroupRunId: protectionGroupRunId
        onLegalHold: true
        isilonParams: '{}'
        hypervParams: '{}'
        azureParams: '{}'
        gpfsParams: '{}'
        expiryTimeUsecs: 5
        snapshotTargetType: Local
        environment: kVMware
        physicalParams: '{}'
        runStartTimeUsecs: 6
        regionId: regionId
        awsParams: '{}'
        elastifileParams: '{}'
        snapshotTimestampUsecs: 1
        objectName: objectName
        sourceGroupId: sourceGroupId
      properties:
        id:
          description: Specifies the id of the snapshot.
          nullable: true
          type: string
          x-order: 0
        snapshotTargetType:
          description: Specifies the target type where the Object's snapshot resides.
          enum:
          - Local
          - Archival
          nullable: true
          type: string
          x-order: 1
        indexingStatus:
          description: Specifies the indexing status of objects in this snapshot.<br>
            'InProgress' indicates the indexing is in progress.<br> 'Done' indicates
            indexing is done.<br> 'NoIndex' indicates indexing is not applicable.<br>
            'Error' indicates indexing failed with error.
          enum:
          - InProgress
          - Done
          - NoIndex
          - Error
          nullable: true
          type: string
          x-order: 2
        protectionGroupId:
          description: Specifies id of the Protection Group.
          nullable: true
          pattern: ^\d+:\d+:\d+$
          type: string
          x-order: 3
        protectionGroupName:
          description: Specifies name of the Protection Group.
          nullable: true
          type: string
          x-order: 4
        protectionGroupRunId:
          description: Specifies id of the Protection Group Run.
          nullable: true
          pattern: ^\d+:\d+$
          type: string
          x-order: 5
        runInstanceId:
          description: Specifies the instance id of the protection run which create
            the snapshot.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        runStartTimeUsecs:
          description: Specifies the start time of the run in micro seconds.
          format: int64
          nullable: true
          type: integer
          x-order: 7
        sourceGroupId:
          description: Specifies the source protection group id in case of replication.
          nullable: true
          type: string
          x-order: 8
        runType:
          description: Specifies the type of protection run created this snapshot.
          enum:
          - kRegular
          - kFull
          - kLog
          - kSystem
          - kHydrateCDP
          nullable: true
          type: string
          x-order: 9
        environment:
          description: Specifies the snapshot environment.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kKVM
          - kAWS
          - kAcropolis
          - kGCP
          - kPhysical
          - kPhysicalFiles
          - kIsilon
          - kNetapp
          - kGenericNas
          - kFlashBlade
          - kElastifile
          - kGPFS
          - kPure
          - kNimble
          - kSQL
          - kOracle
          - kExchange
          - kAD
          - kView
          - kO365
          - kHyperFlex
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          nullable: true
          type: string
          x-order: 10
        snapshotTimestampUsecs:
          description: Specifies the timestamp in Unix time epoch in microseconds
            when the snapshot is taken for the specified Object.
          format: int64
          nullable: true
          type: integer
          x-order: 11
        expiryTimeUsecs:
          description: Specifies the expiry time of the snapshot in Unix timestamp
            epoch in microseconds. If the snapshot has no expiry, this property will
            not be set.
          format: int64
          nullable: true
          type: integer
          x-order: 12
        externalTargetInfo:
          allOf:
          - $ref: '#/components/schemas/ArchivalTargetSummaryInfo'
          - type: object
            x-nullable: true
          description: Specifies the external target information if this is an archival
            snapshot.
          nullable: true
          type: object
          x-order: 13
        storageDomainId:
          description: Specifies the Storage Domain id where the snapshot of object
            is present.
          format: int64
          nullable: true
          type: integer
          x-order: 14
        hasDataLock:
          description: Specifies if this snapshot has datalock.
          nullable: true
          type: boolean
          x-order: 15
        onLegalHold:
          description: Specifies if this snapshot is on legalhold.
          nullable: true
          type: boolean
          x-order: 16
        objectId:
          description: Specifies the object id which the snapshot is taken from.
          format: int64
          nullable: true
          type: integer
          x-order: 17
        objectName:
          description: Specifies the object name which the snapshot is taken from.
          nullable: true
          type: string
          x-order: 18
        sourceId:
          description: Specifies the object source id which the snapshot is taken
            from.
          format: int64
          nullable: true
          type: integer
          x-order: 19
        regionId:
          description: Specifies the region id where this snapshot belongs to.
          nullable: true
          type: string
          x-order: 20
        clusterId:
          description: Specifies the cluster id where this snapshot belongs to.
          format: int64
          nullable: true
          type: integer
          x-order: 21
        clusterIncarnationId:
          description: Specifies the cluster incarnation id where this snapshot belongs
            to.
          format: int64
          nullable: true
          type: integer
          x-order: 22
        physicalParams:
          allOf:
          - $ref: '#/components/schemas/PhysicalSnapshotParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters specific to Physical type snapshot.
          type: object
          x-order: 23
        hypervParams:
          allOf:
          - $ref: '#/components/schemas/HypervSnapshotParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters specific to HyperV type snapshot.
          type: object
          x-order: 24
        awsParams:
          allOf:
          - $ref: '#/components/schemas/AwsSnapshotParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters specific to AWS type snapshot.
          type: object
          x-order: 25
        azureParams:
          allOf:
          - $ref: '#/components/schemas/AzureSnapshotParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters specific to Azure type snapshot.
          type: object
          x-order: 26
        netappParams:
          allOf:
          - $ref: '#/components/schemas/NetappObjectParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters specific to NetApp type snapshot.
          type: object
          x-order: 27
        isilonParams:
          allOf:
          - $ref: '#/components/schemas/IsilonObjectParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters specific to Isilon type snapshot.
          type: object
          x-order: 28
        gpfsParams:
          allOf:
          - $ref: '#/components/schemas/CommonNasObjectParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters specific to GPFS type snapshot.
          type: object
          x-order: 29
        flashbladeParams:
          allOf:
          - $ref: '#/components/schemas/FlashbladeObjectParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters specific to Flashblade type snapshot.
          type: object
          x-order: 30
        genericNasParams:
          allOf:
          - $ref: '#/components/schemas/CommonNasObjectParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters specific to Generic NAS type snapshot.
          type: object
          x-order: 31
        elastifileParams:
          allOf:
          - $ref: '#/components/schemas/CommonNasObjectParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters specific to NetApp type snapshot.
          type: object
          x-order: 32
      title: Object Snapshot.
      type: object
    ObjectSnapshotVolumeInfo:
      allOf:
      - $ref: '#/components/schemas/CommonObjectSnapshotVolumeParams'
      description: Detail info of an object snapshot volume.
    ObjectSnapshotsInfo:
      description: Specifies the snapshots information for every Protection Group
        for a given object.
      properties:
        localSnapshotInfo:
          allOf:
          - $ref: '#/components/schemas/ObjectLocalSnapshotInfo'
          - type: object
            x-nullable: true
          description: Specifies the local snapshot information.
          nullable: true
          type: object
          x-order: 0
        archivalSnapshotsInfo:
          description: Specifies the archival snapshots information.
          items:
            $ref: '#/components/schemas/ObjectArchivalSnapshotInfo'
          nullable: true
          type: array
          x-order: 1
        indexingStatus:
          description: Specifies the indexing status of objects in this snapshot.<br>
            'InProgress' indicates the indexing is in progress.<br> 'Done' indicates
            indexing is done.<br> 'NoIndex' indicates indexing is not applicable.<br>
            'Error' indicates indexing failed with error.
          enum:
          - InProgress
          - Done
          - NoIndex
          - Error
          nullable: true
          type: string
          x-order: 2
        protectionGroupId:
          description: Specifies id of the Protection Group.
          nullable: true
          type: string
          x-order: 3
        protectionGroupName:
          description: Specifies name of the Protection Group.
          nullable: true
          type: string
          x-order: 4
        runInstanceId:
          description: Specifies the instance id of the protection run which create
            the snapshot.
          format: int64
          nullable: true
          type: integer
          x-order: 5
        sourceGroupId:
          description: Specifies the source protection group id in case of replication.
          nullable: true
          type: string
          x-order: 6
        storageDomainId:
          description: Specifies the Storage Domain id where the backup data of Object
            is present.
          format: int64
          nullable: true
          type: integer
          x-order: 7
        storageDomainName:
          description: Specifies the name of Storage Domain id where the backup data
            of Object is present
          nullable: true
          type: string
          x-order: 8
        protectionRunId:
          description: Specifies the id of Protection Group Run.
          nullable: true
          type: string
          x-order: 9
        runType:
          description: Specifies the type of protection run created this snapshot.
          enum:
          - kRegular
          - kFull
          - kLog
          - kSystem
          - kHydrateCDP
          nullable: true
          type: string
          x-order: 10
        protectionRunStartTimeUsecs:
          description: Specifies the start time of Protection Group Run in Unix timestamp
            epoch in microseconds.
          format: int64
          nullable: true
          type: integer
          x-order: 11
        protectionRunEndTimeUsecs:
          description: Specifies the end time of Protection Group Run in Unix timestamp
            epoch in microseconds.
          format: int64
          nullable: true
          type: integer
          x-order: 12
      title: Object Snapshots Information.
      type: object
    ObjectStats:
      description: Specifies the object stats.
      example:
        snapshotsSummary:
        - regionId: regionId
          latestRunStartTimeUsecs: 5
          snapshotCount: 1
          clusterId: 0
          externalTargetInfo: '{}'
          clusterIncarnationId: 6
          latestSnapshotTimestampUsecs: 5
          latestRunStatus: Accepted
          snapshotTargetType: Local
        - regionId: regionId
          latestRunStartTimeUsecs: 5
          snapshotCount: 1
          clusterId: 0
          externalTargetInfo: '{}'
          clusterIncarnationId: 6
          latestSnapshotTimestampUsecs: 5
          latestRunStatus: Accepted
          snapshotTargetType: Local
      properties:
        snapshotsSummary:
          description: Specifies a summary of the object snapshots.
          items:
            $ref: '#/components/schemas/SnapshotsSummary'
          nullable: true
          type: array
          x-order: 0
      title: Object Stats.
      type: object
    ObjectSummary:
      allOf:
      - $ref: '#/components/schemas/ObjectIdentifier'
      - $ref: '#/components/schemas/ObjectSummary_allOf'
      description: Specifies the Object Summary.
      title: Object Summary
    ObjectType:
      description: Specifies Object type.
      properties:
        objectType:
          description: Specifies Object type.
          enum:
          - kCluster
          - kVserver
          - kVolume
          - kVCenter
          - kStandaloneHost
          - kvCloudDirector
          - kFolder
          - kDatacenter
          - kComputeResource
          - kClusterComputeResource
          - kResourcePool
          - kDatastore
          - kHostSystem
          - kVirtualMachine
          - kVirtualApp
          - kStoragePod
          - kNetwork
          - kDistributedVirtualPortgroup
          - kTagCategory
          - kTag
          - kOpaqueNetwork
          - kOrganization
          - kVirtualDatacenter
          - kCatalog
          - kOrgMetadata
          - kStoragePolicy
          - kVirtualAppTemplate
          - kDomain
          - kOutlook
          - kMailbox
          - kUsers
          - kGroups
          - kSites
          - kUser
          - kGroup
          - kSite
          - kApplication
          - kGraphUser
          - kPublicFolders
          - kPublicFolder
          - kTeams
          - kTeam
          - kKeyspace
          - kTable
          - kDatabase
          - kCollection
          - kBucket
          - kNamespace
          - kSCVMMServer
          - kStandaloneCluster
          - kHostGroup
          - kHypervHost
          - kHostCluster
          - kCustomProperty
          - kSubscription
          - kResourceGroup
          - kStorageAccount
          - kStorageKey
          - kStorageContainer
          - kStorageBlob
          - kNetworkSecurityGroup
          - kVirtualNetwork
          - kSubnet
          - kComputeOptions
          - kSnapshotManagerPermit
          - kAvailabilitySet
          - kOVirtManager
          - kHost
          - kStorageDomain
          - kVNicProfile
          - kIAMUser
          - kRegion
          - kAvailabilityZone
          - kEC2Instance
          - kVPC
          - kInstanceType
          - kKeyPair
          - kRDSOptionGroup
          - kRDSParameterGroup
          - kRDSInstance
          - kRDSSubnet
          - kRDSTag
          - kAuroraTag
          - kAuroraCluster
          - kAccount
          - kSubTaskPermit
          - kProject
          - kLabel
          - kMetadata
          - kVPCConnector
          - kPrismCentral
          - kOtherHypervisorCluster
          - kDfsGroup
          - kDfsTopDir
          - kZone
          - kMountPoint
          - kStorageArray
          - kFileSystem
          - kContainer
          - kFilesystem
          - kFileset
          - kViewBox
          - kView
          - kWindowsCluster
          - kOracleRACCluster
          - kOracleAPCluster
          - kService
          - kPVC
          - kPersistentVolumeClaim
          - kPersistentVolume
          - kRootContainer
          - kDAGRootContainer
          - kExchangeNode
          - kExchangeDAGDatabaseCopy
          - kExchangeStandaloneDatabase
          - kExchangeDAG
          - kExchangeDAGDatabase
          - kDomainController
          - kInstance
          - kAAG
          - kAAGRootContainer
          - kRACRootContainer
          - kTableSpace
          - kPDB
          - kObject
          type: string
          x-order: 0
      title: Object type.
      type: object
    ObjectTypeVCenterParams:
      properties:
        isCloudEnv:
          description: Specifies that registered vCenter source is a VMC (VMware Cloud)
            environment or not.
          nullable: true
          type: boolean
          x-order: 0
      title: Object Type VCenter Params
      type: object
    ObjectUnLinkingParams:
      allOf:
      - $ref: '#/components/schemas/CommonObjectsActionParams'
      description: Specifies the parameters required for unlinking objects. This is
        currently used as a part of vm migration workflow.
    ObjectWithChildren:
      allOf:
      - $ref: '#/components/schemas/Object'
      - $ref: '#/components/schemas/ObjectWithChildren_allOf'
      description: Specifies information of the object and its children objects.
      title: Object information
    Objects:
      description: Specifies the list of objects.
      properties:
        objects:
          description: Specifies the list of objects.
          items:
            $ref: '#/components/schemas/Object'
          nullable: true
          type: array
          x-order: 0
      title: Objects
      type: object
    ObjectsActionRequest:
      description: Specifies the type of the action need to be performed on given
        set of objects.
      example:
        action: Link
      properties:
        action:
          description: Specifies the action type that need to be performed.
          enum:
          - Link
          - UnLink
          nullable: true
          type: string
          x-order: 0
        linkParams:
          $ref: '#/components/schemas/ObjectLinkingParams'
        unLinkParams:
          $ref: '#/components/schemas/ObjectUnLinkingParams'
      type: object
    ObjectsBulkAction:
      description: Describes the object bulk action status.
      properties:
        type:
          description: Specifies the bulk action type.
          enum:
          - Link
          - UnLink
          type: string
          x-order: 0
      type: object
    ObjectsDiscoveryParams:
      description: Specifies the parameters used for discovering the office 365 objects
        selectively during source registration or refresh.
      properties:
        discoverableObjectTypeList:
          description: Specifies the list of object types that will be discovered
            as part of source registration or refresh.
          items:
            enum:
            - kDomain
            - kOutlook
            - kMailbox
            - kUsers
            - kGroups
            - kSites
            - kUser
            - kGroup
            - kSite
            - kApplication
            - kGraphUser
            - kPublicFolders
            - kPublicFolder
            - kTeams
            - kTeam
            type: string
          nullable: true
          type: array
          x-order: 0
        usersDiscoveryParams:
          $ref: '#/components/schemas/UsersDiscoveryParams'
      title: Office365 Objects Discovery parameters.
      type: object
    ObjectsLastRun:
      description: Last protection run info of objects.
      example:
        objectLastRuns:
        - null
        - null
      properties:
        objectLastRuns:
          description: Specifies a list of last protection runs of objects.
          items:
            $ref: '#/components/schemas/ObjectLastRun'
          nullable: true
          type: array
          x-order: 0
      type: object
    ObjectsSearchResponseBody:
      description: Specifies the Objects search result.
      example:
        paginationCookie: paginationCookie
        objects:
        - null
        - null
        count: 0
      properties:
        objects:
          description: Specifies the list of Objects.
          items:
            $ref: '#/components/schemas/SearchObject'
          nullable: true
          type: array
          x-order: 0
        paginationCookie:
          description: Specifies the pagination cookie with which subsequent parts
            of the response can be fetched.
          nullable: true
          type: string
          x-order: 1
        count:
          description: Specifies the number of objects to be fetched for the specified
            pagination cookie.
          format: int32
          nullable: true
          type: integer
          x-order: 2
      title: Objects Search Result
      type: object
    OdpRemoteCluster:
      allOf:
      - $ref: '#/components/schemas/CreateOdpRemoteClusterParams'
      description: Specifies an ODP Remote Cluster config.
    OdpRemoteClusters:
      description: Specifies a list of ODP Remote Cluster configs.
      properties:
        odpRemoteClusters:
          description: Specifies the list of ODP Remote Cluster configs.
          items:
            $ref: '#/components/schemas/OdpRemoteCluster'
          type: array
          x-order: 0
      type: object
    Office365AppCredentials:
      description: Specifies credentials for office365 azure registered applications,
        used for office 365 source registration.
      properties:
        clientId:
          description: Specifies the application ID that the registration portal (apps.dev.microsoft.com)
            assigned.
          nullable: true
          type: string
          x-order: 0
        clientSecret:
          description: Specifies the application secret that was created in app registration
            portal.
          nullable: true
          type: string
          x-order: 1
      title: Office365 azure application credentials.
      type: object
    Office365ObjectProtectionCommonParams:
      description: Specifies the parameters which are specific to Microsoft 365 Object
        Protection.
      properties:
        objects:
          description: Specifies the objects to be included in the Object Protection.
          items:
            $ref: '#/components/schemas/Office365ObjectProtectionObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 2
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 3
      required:
      - objects
      type: object
    Office365ObjectProtectionObjectParams:
      description: Specifies the object parameters to create a Microsoft 365 Object
        Protection.
      properties:
        id:
          description: Specifies the ID of the object being protected. If this is
            a non leaf level object, then the object will be auto-protected unless
            leaf objects are specified for exclusion.
          format: int64
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        excludeObjectIds:
          description: Specifies the ID of the objects to be excluded in the Object
            Protection.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          uniqueItems: true
          x-order: 2
        shouldAutoProtectObject:
          description: Specifies if the object has to be autoprotected. This is applicable
            only for sharepoint sites.
          nullable: true
          type: boolean
          x-order: 3
      required:
      - id
      title: Microsoft 365 Object Protection Object Params
      type: object
    Office365ObjectProtectionParams:
      description: Specifies the parameters which are specific to Microsoft 365 Object
        Protection.
      properties:
        objectProtectionType:
          description: Specifies the Microsoft 365 Object Protection type.
          enum:
          - kMailbox
          - kOneDrive
          - kSharePoint
          - kPublicFolders
          - kGroups
          - kTeams
          type: string
          x-order: 0
        userMailboxObjectProtectionParams:
          $ref: '#/components/schemas/Office365UserMailboxObjectProtectionParams'
        userOneDriveObjectProtectionParams:
          $ref: '#/components/schemas/Office365UserOneDriveObjectProtectionParams'
        sharepointSiteObjectProtectionParams:
          $ref: '#/components/schemas/Office365SharepointSiteObjectProtectionParams'
        teamsObjectProtectionParams:
          $ref: '#/components/schemas/Office365TeamsObjectProtectionParams'
      required:
      - objectProtectionType
      type: object
    Office365ObjectProtectionRequestParams:
      allOf:
      - $ref: '#/components/schemas/Office365ObjectProtectionParams'
      description: Specifies the request parameters specific to Microsoft 365 object
        protection.
    Office365ObjectProtectionResponseParams:
      allOf:
      - $ref: '#/components/schemas/Office365ObjectProtectionParams'
      description: Specifies the response parameters specific to Microsoft 365 User
        Mailbox object protection.
    Office365ObjectProtectionUpdateRequestParams:
      allOf:
      - $ref: '#/components/schemas/Office365ObjectProtectionParams'
      description: Specifies the update parameters specific to Microsoft 365 User
        Mailbox object protection.
    Office365OneDriveProtectionGroupParams:
      description: Specifies the parameters which are specific to Office 365 OneDrive
        related Protection Groups.
      properties:
        excludeFolders:
          description: Array of Excluded OneDrive folders. Specifies filters to match
            OneDrive folders which should be excluded when backing up Office 365 source.
            Two kinds of filters are supported. a) prefix which always starts with
            '/'. b) posix which always starts with empty quotes(''). Regular expressions
            are not supported. If not specified, all the mailboxes will be protected.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
      title: Office 365 OneDrive Protection Group Parameters.
      type: object
    Office365OutlookProtectionGroupParams:
      description: Specifies the parameters which are specific to Office 365 Outlook
        related Protection Groups.
      properties:
        excludeFolders:
          description: Array of Excluded Outlook folders. Specifies filters to match
            Outlook folders which should be excluded when backing up Office 365 source.
            Two kinds of filters are supported. a) prefix which always starts with
            '/'. b) posix which always starts with empty quotes(''). Regular expressions
            are not supported. If not specified, all the mailboxes will be protected.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
      title: Office 365(O365) Outlook Protection Group Parameters.
      type: object
    Office365ProtectionGroupObjectParams:
      description: Specifies the object parameters to create a Office 365 Protection
        Group.
      properties:
        id:
          description: Specifies the id of the object.
          format: int64
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      title: Office 365 ProtectionGroup Object Params
      type: object
    Office365ProtectionGroupParams:
      description: Specifies the parameters which are specific to Office 365 related
        Protection Groups.
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/Office365ProtectionGroupObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        excludeObjectIds:
          description: Specifies the objects to be excluded in the Protection Group.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          uniqueItems: true
          x-order: 1
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        protectionTypes:
          description: Specifies the Office 365 Protection Group types.
          items:
            enum:
            - kMailbox
            - kOneDrive
            - kSharePoint
            - kPublicFolders
            - kGroups
            - kTeams
            type: string
          minItems: 1
          type: array
          x-order: 3
        outlookProtectionTypeParams:
          $ref: '#/components/schemas/Office365OutlookProtectionGroupParams'
        oneDriveProtectionTypeParams:
          $ref: '#/components/schemas/Office365OneDriveProtectionGroupParams'
        publicFoldersProtectionTypeParams:
          $ref: '#/components/schemas/Office365PublicFoldersProtectionGroupParams'
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 7
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 8
      required:
      - objects
      - protectionTypes
      title: Office 365(o365) Protection Group Parameters.
      type: object
    Office365PublicFoldersProtectionGroupParams:
      description: Specifies the parameters which are specific to Office 365 PublicFolders
        related Protection Groups.
      properties:
        excludeFolders:
          description: Array of Excluded Public folders. Specifies filters to match
            PublicFolder folders which should be excluded when backing up Office 365
            source. Two kinds of filters are supported. a) prefix which always starts
            with '/'. b) posix which always starts with empty quotes(''). Regular
            expressions are not supported. If not specified, all the PublicFolders
            will be protected.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
      title: Office 365(O365) PublicFolders Protection Group Parameters.
      type: object
    Office365SharepointSiteObjectProtectionParams:
      allOf:
      - $ref: '#/components/schemas/Office365ObjectProtectionCommonParams'
      description: Specifies the params to create a Sharepoint site Object Protection.
    Office365SourceRegistrationParams:
      allOf:
      - $ref: '#/components/schemas/CommonSourceRegistrationParams'
      - $ref: '#/components/schemas/Office365SourceRegistrationParams_allOf'
      description: Specifies the paramaters to register an office-365 source.
      title: Office 365 Source Registration parameters
    Office365TeamsObjectProtectionParams:
      allOf:
      - $ref: '#/components/schemas/Office365ObjectProtectionCommonParams'
      description: Specifies the params to create a Teams Object Protection.
    Office365UserMailboxObjectProtectionParams:
      allOf:
      - $ref: '#/components/schemas/Office365ObjectProtectionCommonParams'
      - $ref: '#/components/schemas/Office365UserMailboxObjectProtectionParams_allOf'
      description: Specifies the params to create a User Mailbox Object Protection.
    Office365UserOneDriveObjectProtectionParams:
      allOf:
      - $ref: '#/components/schemas/Office365ObjectProtectionCommonParams'
      - $ref: '#/components/schemas/Office365UserOneDriveObjectProtectionParams_allOf'
      description: Specifies the params to create a User OneDrive Object Protection.
    OnPremObjectIds:
      description: List of source ids for a cluster.
      properties:
        objectIds:
          description: Specifies a list of object ids. Only files found in these objects
            will be returned.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          uniqueItems: true
          x-order: 0
      title: List of Source IDs
      type: object
    OnPremSourceIds:
      description: List of source ids for a cluster.
      properties:
        sourceIds:
          description: Specifies a list of source ids. Only files found in these sources
            will be returned.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          uniqueItems: true
          x-order: 0
      title: List of Source IDs
      type: object
    OnPremTenantConfig:
      description: All configurations related to tenants for the cluster.
      example:
        organizationsEnabled: true
        organizationsStorageDomainSharingEnabled: true
      properties:
        organizationsEnabled:
          description: Wether organizations is enabled on the cluster.
          nullable: true
          type: boolean
          x-order: 0
        organizationsStorageDomainSharingEnabled:
          description: |-
            Wether storage domain sharing is enabled for organizations on
            the cluster.
          nullable: true
          type: boolean
          x-order: 1
      required:
      - organizationsEnabled
      - organizationsStorageDomainSharingEnabled
      title: OnPremTenantConfig
      type: object
    OneDriveItem:
      description: Specifies a OneDrive item to recover.
      properties:
        id:
          description: Specifies the item id.
          nullable: true
          type: string
          x-order: 0
        itemPath:
          description: Specifies the path to the OneDrive item.
          nullable: true
          type: string
          x-order: 1
        isFile:
          description: Specifies if the item is a file.
          nullable: true
          type: boolean
          x-order: 2
      type: object
    OneDriveParam:
      description: Specifies parameters to recover a OneDrive.
      properties:
        id:
          description: Specifies the OneDrive id.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the OneDrive name.
          nullable: true
          type: string
          x-order: 1
        recoverEntireDrive:
          description: Specifies whether to recover the whole OneDrive. This is set
            to false when excluding recovering specific drive items.
          nullable: true
          type: boolean
          x-order: 2
        recoverItems:
          description: Specifies a list of OneDrive items to recover.
          items:
            $ref: '#/components/schemas/OneDriveItem'
          nullable: true
          type: array
          x-order: 3
      type: object
    OracleArchivalStorageClass:
      description: Specifies the storage class of Oracle External Target of archival
        purpose type.
      properties:
        enum:
          description: Specifies the storage class of Oracle External Target of archival
            purpose type.
          enum:
          - OracleObjectStorage
          - OracleArchiveStorage
          type: string
          x-order: 0
      title: Oracle Archival Storage Class
      type: object
    OracleArchiveLogInfo:
      description: Specifies information related to archive log restore.
      properties:
        rangeType:
          description: Specifies the type of range.
          enum:
          - Time
          - Scn
          - Sequence
          nullable: true
          type: string
          x-order: 0
        rangeInfoVec:
          description: Specifies an array of oracle restore ranges.
          items:
            $ref: '#/components/schemas/OracleRangeMetaInfo'
          nullable: true
          type: array
          x-order: 1
        archiveLogRestoreDest:
          description: Specifies destination where archive logs are to be restored.
          nullable: true
          type: string
          x-order: 2
      title: OracleArchiveLogInfo
      type: object
    OracleArchiveLogRangeType:
      description: Describes the Range type of archive log restore
      properties:
        environment:
          description: Specifies oracle archive log range type
          enum:
          - Time
          - Scn
          - Sequence
          type: string
          x-order: 0
      title: Oracle Archive Log Range Type
      type: object
    OracleCloneObject:
      allOf:
      - $ref: '#/components/schemas/CommonOracleCloneParams'
      - $ref: '#/components/schemas/OracleCloneObject_allOf'
      description: Specifies the information about an Oracle clone object.
    OracleCloneRefreshTask:
      allOf:
      - $ref: '#/components/schemas/OracleCloneObject'
      description: Specifies the information about an Oracle refresh task.
    OracleCloneTask:
      allOf:
      - $ref: '#/components/schemas/PrePostScriptParams'
      - $ref: '#/components/schemas/CommonOracleCloneParams'
      description: Specifies the information about an Oracle clone task.
    OracleConnectionParams:
      description: Specifies the parameters to connect to a Oracle node/cluster using
        given IP or hostname FQDN.
      properties:
        hostname:
          description: Specifies the unique identifier to locate the Oracle node or
            cluster. The host identifier can be IP address or FQDN.
          nullable: true
          type: string
          x-order: 0
      required:
      - hostname
      type: object
    OracleDataGuardInfo:
      description: Dataguard info about Oracle database.
      properties:
        role:
          description: Specifies the role of the Oracle DataGuard database.
          enum:
          - kPrimary
          - kStandby
          type: string
          x-order: 0
        standbyType:
          description: Specifies the type of the standby oracle database.
          enum:
          - kPhysical
          - kLogical
          - kSnapshot
          type: string
          x-order: 1
      type: object
    OracleDatabaseHost:
      description: Specifies details about an Oracle database host.
      properties:
        hostId:
          description: Specifies the id of the database host from which backup is
            allowed.
          nullable: true
          type: string
          x-order: 0
        channelCount:
          description: Specifies the number of channels to be created for this host.
            Default value for the number of channels will be calculated as the minimum
            of number of nodes in Cohesity cluster and 2 * number of CPU on the host.
          format: int32
          type: integer
          x-go-nullable: true
          x-order: 1
        port:
          description: Specifies the port where the Database is listening.
          format: int64
          type: integer
          x-go-nullable: true
          x-order: 2
        sbtHostParams:
          $ref: '#/components/schemas/OracleSbtHostParams'
      title: Oracle Protection Group Database Host
      type: object
    OracleDbChannel:
      description: Specifies the DB channel info for all the databases of app entity.
        Length of this array will be 1 for RAC and Standalone setups.
      properties:
        archiveLogRetentionDays:
          description: Specifies the number of days archive log should be stored.
            For keeping the archived log forever, set this to -1. For deleting the
            archived log immediately, set this to 0. For deleting the archived log
            after n days, set this to n.
          format: int32
          nullable: true
          type: integer
          x-order: 0
        credentials:
          $ref: '#/components/schemas/Credentials'
        databaseUniqueName:
          description: Specifies the unique Name of the database.
          nullable: true
          type: string
          x-order: 2
        databaseUuid:
          description: Specifies the database unique id. This is an internal field
            and is filled by magneto master based on corresponding app entity id.
          nullable: true
          type: string
          x-order: 3
        defaultChannelCount:
          description: Specifies the default number of channels to use per node per
            database. This value is used on all Oracle Database Nodes unless databaseNodeList
            item's channelCount is specified for the node. Default value for the number
            of channels will be calculated as the minimum of number of nodes in Cohesity
            cluster and 2 * number of CPU on the host. If the number of channels is
            unspecified here and unspecified within databaseNodeList, the above formula
            will be used to determine the same.
          format: int32
          nullable: true
          type: integer
          x-order: 4
        databaseNodeList:
          description: Specifies the Node info from where we are allowed to take the
            backup/restore.
          items:
            $ref: '#/components/schemas/OracleDatabaseHost'
          nullable: true
          type: array
          x-go-name: DatabaseHosts
          x-order: 5
        maxHostCount:
          description: Specifies the maximum number of hosts from which backup/restore
            is allowed in parallel. This will be less than or equal to the number
            of databaseNode specified within databaseNodeList.
          format: int32
          nullable: true
          type: integer
          x-order: 6
        enableDgPrimaryBackup:
          description: Specifies whether the database having the Primary role within
            Data Guard configuration is to be backed up.
          nullable: true
          type: boolean
          x-order: 7
        rmanBackupType:
          description: Specifies the type of Oracle RMAN backup requested
          enum:
          - kImageCopy
          - kBackupSets
          - kSbt
          type: string
          x-order: 8
      title: Oracle Protection Group Database Node Channel
      type: object
    OracleObjectBasedProtectionParams:
      description: Specifies the parameters specific to Oracle Object Protection.
      properties:
        objects:
          description: Specifies the list of object ids to be protected.
          items:
            $ref: '#/components/schemas/OracleObjectProtectionInfo'
          minItems: 1
          nullable: true
          type: array
          x-order: 0
        persistMountpoints:
          description: Specifies whether the mountpoints created while backing up
            Oracle DBs should be persisted.
          nullable: true
          type: boolean
          x-order: 1
        vlanParams:
          $ref: '#/components/schemas/VlanParams'
      required:
      - objects
      type: object
    OracleObjectEntityParams:
      description: Object details for Oracle.
      properties:
        databaseEntityInfo:
          $ref: '#/components/schemas/DatabaseEntityInfo'
        hostInfo:
          $ref: '#/components/schemas/HostInformation'
      type: object
    OracleObjectProtectionInfo:
      description: Specifies the object identifier for Object based Oracle Protection
      properties:
        objectId:
          description: Specifies the id of the host on which databases are hosted
          format: int64
          nullable: true
          type: integer
          x-order: 0
        dbParams:
          description: Specifies the properties of the Oracle databases.
          items:
            $ref: '#/components/schemas/OracleProtectionGroupDbParams'
          nullable: true
          type: array
          x-order: 1
      required:
      - objectId
      title: Identifier For Oracle Object
      type: object
    OracleObjectProtectionRequestParams:
      allOf:
      - $ref: '#/components/schemas/OracleObjectBasedProtectionParams'
      description: Specifies the request parameters specific to Oracle object protection
    OracleObjectProtectionResponseParams:
      allOf:
      - $ref: '#/components/schemas/OracleObjectBasedProtectionParams'
      description: Specifies the response parameters specific to Oracle object protection
    OracleObjectProtectionUpdateRequestParams:
      allOf:
      - $ref: '#/components/schemas/OracleObjectBasedProtectionParams'
      description: Specifies the update parameters specific to Oracle object protection
    OraclePdbObjectInfo:
      description: Specifies information PDB object to restore.
      properties:
        dbId:
          description: Specifies pluggable database id.
          nullable: true
          type: string
          x-order: 0
        dbName:
          description: Specifies name of the DB.
          nullable: true
          type: string
          x-order: 1
      required:
      - dbId
      - dbName
      type: object
    OraclePdbRestoreParams:
      description: Specifies information about the list of pdbs to be restored.
      properties:
        dropDuplicatePDB:
          description: Specifies if the PDB should be ignored if a PDB already exists
            with same name.
          nullable: true
          type: boolean
          x-order: 0
        pdbObjects:
          description: Specifies list of PDB objects to restore.
          items:
            $ref: '#/components/schemas/OraclePdbObjectInfo'
          nullable: true
          type: array
          x-order: 1
        restoreToExistingCdb:
          description: Specifies if pdbs should be restored to an existing CDB.
          nullable: true
          type: boolean
          x-order: 2
      type: object
    OracleProtectionGroupDbParams:
      description: Specifies the parameters of individual databases to create Oracle
        Protection Group.
      properties:
        databaseId:
          description: Specifies the id of the Oracle database.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        databaseName:
          description: Specifies the name of the Oracle database.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        dbChannels:
          description: Specifies the Oracle database node channels info. If not specified,
            the default values assigned by the server are applied to all the databases.
          items:
            $ref: '#/components/schemas/OracleDbChannel'
          nullable: true
          type: array
          x-order: 2
      title: Oracle Protection Group Database Params.
      type: object
    OracleProtectionGroupObjectParams:
      description: Specifies the object identifier to create Oracle Protection Group.
      properties:
        sourceId:
          description: Specifies the id of the host on which databases are hosted.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        sourceName:
          description: Specifies the name of the host on which databases are hosted.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        dbParams:
          description: Specifies the properties of the Oracle databases.
          items:
            $ref: '#/components/schemas/OracleProtectionGroupDbParams'
          nullable: true
          type: array
          x-order: 2
      required:
      - sourceId
      title: Oracle Protection Group Object Identifier.
      type: object
    OracleProtectionGroupParams:
      description: Specifies the parameters to create Oracle Protection Group.
      properties:
        objects:
          description: Specifies the list of object ids to be protected.
          items:
            $ref: '#/components/schemas/OracleProtectionGroupObjectParams'
          minItems: 1
          nullable: true
          type: array
          x-order: 0
        persistMountpoints:
          description: Specifies whether the mountpoints created while backing up
            Oracle DBs should be persisted.
          nullable: true
          type: boolean
          x-order: 1
        vlanParams:
          $ref: '#/components/schemas/VlanParams'
        prePostScript:
          $ref: '#/components/schemas/PrePostScriptParams'
      required:
      - objects
      title: Oracle Protection Group Parameters.
      type: object
    OracleRangeMetaInfo:
      description: Specifies Range related information for an oracle db
      properties:
        startOfRange:
          description: Specifies starting value of the range in time (usecs), SCN
            or sequence no.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        endOfRange:
          description: Specifies ending value of the range in time (usecs), SCN or
            sequence no.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        protectionGroupId:
          description: Specifies id of the Protection Group corresponding to this
            oracle range
          nullable: true
          pattern: ^\d+:\d+:\d+$
          type: string
          x-order: 2
        resetLogId:
          description: Specifies resetlogs identifier associated with the oracle range.
            Only applicable for ranges of type SCN and sequence no.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        incarnationId:
          description: Specifies incarnation id associated with the oracle db for
            which the restore range belongs. Only applicable for ranges of type SCN
            and sequence no.
          format: int64
          nullable: true
          type: integer
          x-order: 4
      title: Oracle Range Meta Info
      type: object
    OracleRecoveryGranularityType:
      description: Describe the restore granular level.
      properties:
        environment:
          description: Specifies oracle restore granularity level
          enum:
          - kPDB
          type: string
          x-order: 0
      title: Oracle recovery granularity type.
      type: object
    OracleRestoreMetaInfoResult:
      description: Result to store oracle meta-info from snapshot id and other oracle
        params.
      properties:
        restrictedPfileParamMap:
          description: Specifies map for restricted pfile params.
          items:
            $ref: '#/components/schemas/KeyValuePair'
          nullable: true
          type: array
          x-order: 0
        inheritedPfileParamMap:
          description: Specifies map for inherited pfile params.
          items:
            $ref: '#/components/schemas/KeyValuePair'
          nullable: true
          type: array
          x-order: 1
        cohesityPfileParamMap:
          description: Specifies map for cohesity controlled pfile params.
          items:
            $ref: '#/components/schemas/KeyValuePair'
          nullable: true
          type: array
          x-order: 2
      title: OracleRestoreMetaInfoResult
      type: object
    OracleRestoreRangeInfo:
      description: Specifies Restore Ranges related to an Oracle Database
      properties:
        ScnRangeInfo:
          description: Specifies an array of SCN based oracle restore ranges.
          items:
            $ref: '#/components/schemas/OracleRangeMetaInfo'
          nullable: true
          type: array
          x-order: 0
        TimeRangeInfo:
          description: Specifies an array of time based oracle restore ranges.
          items:
            $ref: '#/components/schemas/OracleRangeMetaInfo'
          nullable: true
          type: array
          x-order: 1
        SequenceRangeInfo:
          description: Specifies an array of time based oracle restore ranges.
          items:
            $ref: '#/components/schemas/OracleRangeMetaInfo'
          nullable: true
          type: array
          x-order: 2
      title: Oracle Restore Range Info
      type: object
    OracleRmanBackup:
      description: Specifies Oracle RMAN backup requested type.
      properties:
        oracleRmanBackup:
          description: Specifies Oracle RMAN backup requested type.
          enum:
          - kImageCopy
          - kBackupSets
          - kSbt
          type: string
          x-order: 0
      title: Oracle RMAN backup requested type.
      type: object
    OracleSbtHostParams:
      description: Specifies details about capturing Oracle SBT host info.
      properties:
        sbtLibraryPath:
          description: Specifies the path of sbt library.
          nullable: true
          type: string
          x-order: 0
        viewFsPath:
          description: Specifies the Cohesity view path.
          nullable: true
          type: string
          x-order: 1
        vipList:
          description: Specifies the list of Cohesity primary VIPs.
          items:
            type: string
          nullable: true
          type: array
          x-order: 2
        vlanInfoList:
          description: Specifies the Vlan information for Cohesity cluster.
          items:
            $ref: '#/components/schemas/OracleVlanInfo'
          nullable: true
          type: array
          x-order: 3
      title: Oracle Protection Group SBT Host
      type: object
    OracleTargetParamsForRecoverOracleApp:
      allOf:
      - $ref: '#/components/schemas/CommonRecoverOracleAppTargetParams'
      description: 'Specifies the params for recovering to a oracle host. Provided
        oracle backup should be recovered to same type of target host. For Example:
        If you have oracle backup taken from a physical host then that should be recovered
        to physical host only.'
      title: Oracle Target Params For Recover Oracle App.
    OracleTier:
      allOf:
      - $ref: '#/components/schemas/CommonCloudTierSettings'
      - $ref: '#/components/schemas/OracleTier_allOf'
      description: Specifies the settings for a Oracle tier.
    OracleTieringLevels:
      description: Oracle Tiering Levels
      properties:
        type:
          description: Oracle Tiering Levels
          enum:
          - kOracleTierStandard
          - kOracleTierArchive
          type: string
          x-order: 0
      title: Oracle Tiering Levels.
      type: object
    OracleTieringStorageClass:
      description: Specifies the storage class of Oracle External Target of tiering
        purpose type.
      properties:
        enum:
          description: Specifies the storage class of Oracle External Target of tiering
            purpose type.
          enum:
          - OracleObjectStorage
          type: string
          x-order: 0
      title: Oracle Tiering Storage Class
      type: object
    OracleTiers:
      description: Specifies Oracle tiers.
      properties:
        tiers:
          description: Specifies the tiers that are used to move the archived backup
            from current tier to next tier. The order of the tiers determines which
            tier will be used next for moving the archived backup. The first tier
            input should always be default tier where backup will be acrhived. Each
            tier specifies how much time after the backup will be moved to next tier
            from the current tier.
          items:
            $ref: '#/components/schemas/OracleTier'
          nullable: true
          type: array
          x-order: 0
      required:
      - tiers
      type: object
    OracleVlanInfo:
      description: Specifies details about capturing Cohesity cluster VLAN info for
        Oracle workflow.
      properties:
        ipList:
          description: Specifies the list of Ips in this VLAN.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
        gateway:
          description: Specifies the gateway of this VLAN.
          nullable: true
          type: string
          x-order: 1
        id:
          description: Specifies the Id of this VLAN.
          format: int32
          type: integer
          x-go-nullable: true
          x-order: 2
        subnetIp:
          description: Specifies the subnet Ip for this VLAN.
          nullable: true
          type: string
          x-order: 3
      title: Oracle Protection Group vlan info
      type: object
    OrgVDCNetwork:
      description: Specifies a VDC Organization Network.
      example:
        name: name
        vCenterUuid: vCenterUuid
        vcdUuid: vcdUuid
      properties:
        vcdUuid:
          description: Specifies the UUID of network associated with the Virtual Cloud
            director.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the name of the catalog.
          nullable: true
          type: string
          x-order: 1
        vCenterUuid:
          description: Specifies the UUID of network associated with the Vcenter.
          nullable: true
          readOnly: true
          type: string
          x-order: 2
      required:
      - name
      - vcdUuid
      type: object
    OriginalElastifileFilesTargetParams:
      description: Specifies the params of the original Elastifile recovery target.
      properties:
        recoverToOriginalPath:
          description: Specifies whether to recover files and folders to the original
            path location. If false, alternatePath must be specified.
          nullable: true
          type: boolean
          x-order: 0
        alternatePath:
          description: Specifies the alternate path location to recover files to.
          nullable: true
          type: string
          x-order: 1
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 2
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of the files fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 5
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - recoverToOriginalPath
      title: Recover To Original Elastifile Files Target Params.
      type: object
    OriginalElastifileTargetParams:
      description: Specifies the params of the original Elastifile recovery target.
      properties:
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 0
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 1
        continueOnError:
          description: Specifies whether to continue recovering other volumes if one
            of the volumes fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 2
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 3
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      title: Recover To Original Elastifile Volume Target Params.
      type: object
    OriginalFlashbladeFilesTargetParams:
      description: Specifies the params of the original Flashblade recovery target.
      properties:
        recoverToOriginalPath:
          description: Specifies whether to recover files and folders to the original
            path location. If false, alternatePath must be specified.
          nullable: true
          type: boolean
          x-order: 0
        alternatePath:
          description: Specifies the alternate path location to recover files to.
          nullable: true
          type: string
          x-order: 1
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 2
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of the files fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 5
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - recoverToOriginalPath
      title: Recover To Original Flashblade Files Target Params.
      type: object
    OriginalFlashbladeTargetParams:
      description: Specifies the params of the original Flashblade recovery target.
      properties:
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 0
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 1
        continueOnError:
          description: Specifies whether to continue recovering other volumes if one
            of the volumes fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 2
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 3
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      title: Recover To Original Flashblade Volume Target Params.
      type: object
    OriginalGenericNasFilesTargetParams:
      description: Specifies the params of the original Generic Nas recovery target.
      properties:
        recoverToOriginalPath:
          description: Specifies whether to recover files and folders to the original
            path location. If false, alternatePath must be specified.
          nullable: true
          type: boolean
          x-order: 0
        alternatePath:
          description: Specifies the alternate path location to recover files to.
          nullable: true
          type: string
          x-order: 1
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 2
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of the files fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 5
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - recoverToOriginalPath
      title: Recover To Original Generic Nas Files Target Params.
      type: object
    OriginalGenericNasTargetParams:
      description: Specifies the params of the original Generic NAS recovery target.
      properties:
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 0
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 1
        continueOnError:
          description: Specifies whether to continue recovering other volumes if one
            of the volumes fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 2
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 3
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      title: Recover To Original Generic NAS Volume Target Params.
      type: object
    OriginalGpfsFilesTargetParams:
      description: Specifies the params of the original GPFS recovery target.
      properties:
        recoverToOriginalPath:
          description: Specifies whether to recover files and folders to the original
            path location. If false, alternatePath must be specified.
          nullable: true
          type: boolean
          x-order: 0
        alternatePath:
          description: Specifies the alternate path location to recover files to.
          nullable: true
          type: string
          x-order: 1
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 2
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of the files fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 5
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - recoverToOriginalPath
      title: Recover To Original GPFS Files Target Params.
      type: object
    OriginalGpfsTargetParams:
      description: Specifies the params of the original GPFS recovery target.
      properties:
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 0
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 1
        continueOnError:
          description: Specifies whether to continue recovering other volumes if one
            of the volumes fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 2
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 3
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      title: Recover To Original GPFS NAS Volume Target Params.
      type: object
    OriginalIsilonFilesTargetParams:
      description: Specifies the params of the original Isilon recovery target.
      properties:
        recoverToOriginalPath:
          description: Specifies whether to recover files and folders to the original
            path location. If false, alternatePath must be specified.
          nullable: true
          type: boolean
          x-order: 0
        alternatePath:
          description: Specifies the alternate path location to recover files to.
          nullable: true
          type: string
          x-order: 1
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 2
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of the files fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 5
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - recoverToOriginalPath
      title: Recover To Original Isilon Files Target Params.
      type: object
    OriginalIsilonTargetParams:
      description: Specifies the params of the original Isilon recovery target.
      properties:
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 0
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 1
        continueOnError:
          description: Specifies whether to continue recovering other volumes if one
            of the volumes fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 2
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 3
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      title: Recover To Original Isilon Volume Target Params.
      type: object
    OriginalNetappFilesTargetParams:
      description: Specifies the params of the original Netapp recovery target.
      properties:
        recoverToOriginalPath:
          description: Specifies whether to recover files and folders to the original
            path location. If false, alternatePath must be specified.
          nullable: true
          type: boolean
          x-order: 0
        alternatePath:
          description: Specifies the alternate path location to recover files to.
          nullable: true
          type: string
          x-order: 1
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 2
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of the files fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 5
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - recoverToOriginalPath
      title: Recover To Original Netapp Files Target Params.
      type: object
    OriginalNetappTargetParams:
      description: Specifies the params of the original Netapp recovery target.
      properties:
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 0
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 1
        continueOnError:
          description: Specifies whether to continue recovering other volumes if one
            of the volumes fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 2
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 3
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      title: Recover To Original Netapp Volume Target Params.
      type: object
    PaginationInfo:
      description: Specifies information needed to support pagination.
      example:
        cookie: cookie
      properties:
        cookie:
          description: Specifies a cookie which can be passed in by the user in order
            to retrieve the next page of results.
          nullable: true
          type: string
          x-order: 0
      type: object
    PatchDetail:
      description: Detail of a patch. It gives the service and version information
        of the the patch.
      example:
        import_version: import_version
        component: component
        service: service
        version: version
        status: status
      properties:
        service:
          description: Specifies the name of the service.
          nullable: true
          type: string
          x-order: 0
        component:
          description: Specifies the user friendly name of the service.
          nullable: true
          type: string
          x-order: 1
        version:
          description: Specifies the existing version of the service. This is the
            available service patch version if exists. If there is no patch available,
            then it is the applied patch version if applied. If both don't exist,
            it is the base version of the service.
          nullable: true
          type: string
          x-order: 2
        import_version:
          description: Specifies the version of the imported service patch.
          nullable: true
          type: string
          x-order: 3
        status:
          description: Specifies the status of the patch whether it is accepted or
            rejected. A patch is rejected if it is older than the version available
            or applied on the cluster.
          nullable: true
          type: string
          x-order: 4
      type: object
    PatchOperation:
      description: Specifies a patch operation.
      example:
        component: component
        versionReplaced: versionReplaced
        service: service
        domain: domain
        version: version
        operation: operation
        user: user
        operationTimeMsecs: 0
      properties:
        service:
          description: Specifies the name of the service.
          type: string
          x-order: 0
        component:
          description: Specifies the description of the service.
          type: string
          x-order: 1
        version:
          description: Specifies the version of the patch.
          type: string
          x-order: 2
        versionReplaced:
          description: Specifies the version it replaced.
          type: string
          x-order: 3
        operation:
          description: Specifies what patch management operation was performed
          type: string
          x-order: 4
        operationTimeMsecs:
          description: Specifies the time when the patch operation was done in Unix
            epoch in milliseconds.
          format: int64
          type: integer
          x-order: 5
        user:
          description: Specifies the user who performed the operation.
          type: string
          x-order: 6
        domain:
          description: Specifies the domain of the user.
          type: string
          x-order: 7
      title: Patch Operation.
      type: object
    PatchOperationStatus:
      description: Specifies the status of the current or the last patch operation.
      example:
        inProgress: true
        percentage: 0
        timeTakenSeconds: 1
        operationMessage: operationMessage
        timeRemainingSeconds: 6
        operation: operation
        servicesProgress:
        - nodesProgress:
          - patchLevelTransition: patchLevelTransition
            inProgress: true
            percentage: 7
            timeTakenSeconds: 9
            nodeMessage: nodeMessage
            nodeIp: nodeIp
          - patchLevelTransition: patchLevelTransition
            inProgress: true
            percentage: 7
            timeTakenSeconds: 9
            nodeMessage: nodeMessage
            nodeIp: nodeIp
          inProgress: true
          service: service
          percentage: 5
          timeTakenSeconds: 2
          timeRemainingSeconds: 5
          serviceMessage: serviceMessage
        - nodesProgress:
          - patchLevelTransition: patchLevelTransition
            inProgress: true
            percentage: 7
            timeTakenSeconds: 9
            nodeMessage: nodeMessage
            nodeIp: nodeIp
          - patchLevelTransition: patchLevelTransition
            inProgress: true
            percentage: 7
            timeTakenSeconds: 9
            nodeMessage: nodeMessage
            nodeIp: nodeIp
          inProgress: true
          service: service
          percentage: 5
          timeTakenSeconds: 2
          timeRemainingSeconds: 5
          serviceMessage: serviceMessage
      properties:
        inProgress:
          description: Specifies whether a operation is in progress now.
          nullable: true
          type: boolean
          x-order: 0
        operation:
          description: Specifies the patch operation. It is either apply or revert
            patch operation.
          nullable: true
          type: string
          x-order: 1
        percentage:
          description: Specifies the percentage of completion of the current patch
            operation in progress or the last patch operation completed.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        timeRemainingSeconds:
          description: Specifies the time remaining to complete the patch operation.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        timeTakenSeconds:
          description: Specifies the time taken so far to complete the patch operation.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        servicesProgress:
          description: Specifies the details of patch operation services at each patch
            level.
          items:
            $ref: '#/components/schemas/ServiceUnitProgress'
          nullable: true
          type: array
          x-order: 5
        operationMessage:
          description: Specifies a message about the patch operation.
          nullable: true
          type: string
          x-order: 6
      title: Patch Operation Status.
      type: object
    PatchesDetails:
      description: Details of patches in a patch or a hotfix.
      items:
        $ref: '#/components/schemas/PatchDetail'
      type: array
    PatchesHistory:
      description: Specifies the history of patch operations.
      items:
        $ref: '#/components/schemas/PatchOperation'
      type: array
    PauseActionObjectLevelParams:
      allOf:
      - $ref: '#/components/schemas/ProtectionObjectInput'
      description: Specifies the request parameters for Pause action on a Protected
        object.
    PauseActionObjectLevelResponse:
      description: Specifies the infomration about status of pause action.
      properties:
        error:
          $ref: '#/components/schemas/Error'
      type: object
    PauseProtectionRunActionParams:
      description: Specifies the request to pause a protection run.
      example:
        runId: runId
      properties:
        runId:
          description: Specifies a unique run id of the Protection Group run.
          nullable: true
          pattern: ^\d+:\d+$
          type: string
          x-order: 0
      required:
      - runId
      title: Pause protection run request.
      type: object
    PauseProtectionRunActionResponseParams:
      description: Specifies the response of a pause action on protection runs.
      example:
        runId: runId
        error: error
      properties:
        runId:
          description: Specifies a unique run id of the Protection Group run.
          nullable: true
          pattern: ^\d+:\d+$
          type: string
          x-order: 0
        error:
          description: Specifies an error occured when perfroming pause of a protection
            run.
          nullable: true
          type: string
          x-order: 1
      type: object
    PauseStatusRunLevel:
      description: Specifies the various statuses assciated with pause and resume
        operation on protection run.
      properties:
        pauseStatusRunLevel:
          description: Specifies the pause status at run level.
          enum:
          - Paused
          - Pausing
          - Resuming
          type: string
          x-order: 0
      title: PauseStatusRunLevel
      type: object
    PerformActionOnClonesRequest:
      description: Specifies the request parameters to perform an action on multiple
        clones.
      properties:
        action:
          description: Specifies the action to be performed.
          enum:
          - Cleanup
          nullable: true
          type: string
          x-order: 0
        cleanupParams:
          $ref: '#/components/schemas/CloneActionCleanupParams'
      required:
      - action
      title: Perform action on clones request.
      type: object
    PerformActionOnProtectionGroupRunRequest:
      description: Specifies the request to perform actions on protection runs.
      example:
        resumeParams:
        - runId: runId
        - runId: runId
        cancelParams:
        - archivalTaskId:
          - archivalTaskId
          - archivalTaskId
          replicationTaskId:
          - replicationTaskId
          - replicationTaskId
          cloudSpinTaskId:
          - cloudSpinTaskId
          - cloudSpinTaskId
          localTaskId: localTaskId
          runId: runId
          objectIds:
          - 0
          - 0
        - archivalTaskId:
          - archivalTaskId
          - archivalTaskId
          replicationTaskId:
          - replicationTaskId
          - replicationTaskId
          cloudSpinTaskId:
          - cloudSpinTaskId
          - cloudSpinTaskId
          localTaskId: localTaskId
          runId: runId
          objectIds:
          - 0
          - 0
        action: Pause
        pauseParams:
        - runId: runId
        - runId: runId
      properties:
        action:
          description: Specifies the type of the action which will be performed on
            protection runs.
          enum:
          - Pause
          - Resume
          - Cancel
          nullable: true
          type: string
          x-order: 0
        pauseParams:
          description: Specifies the pause action params for a protection run.
          items:
            $ref: '#/components/schemas/PauseProtectionRunActionParams'
          type: array
          x-order: 1
        resumeParams:
          description: Specifies the resume action params for a protection run.
          items:
            $ref: '#/components/schemas/ResumeProtectionRunActionParams'
          type: array
          x-order: 2
        cancelParams:
          description: Specifies the cancel action params for a protection run.
          items:
            $ref: '#/components/schemas/CancelProtectionGroupRunRequest'
          type: array
          x-order: 3
      required:
      - action
      type: object
    PerformRunActionResponse:
      description: Specifies the response of the performed run action.
      example:
        resumeParams:
        - runId: runId
          error: error
        - runId: runId
          error: error
        cancelParams:
        - runId: runId
        - runId: runId
        action: Pause
        pauseParams:
        - runId: runId
          error: error
        - runId: runId
          error: error
      properties:
        action:
          description: Specifies the type of the action is performed on protection
            runs.
          enum:
          - Pause
          - Resume
          - Cancel
          nullable: true
          type: string
          x-order: 0
        pauseParams:
          description: Specifies the pause action response params.
          items:
            $ref: '#/components/schemas/PauseProtectionRunActionResponseParams'
          type: array
          x-order: 1
        resumeParams:
          description: Specifies the resume action response params.
          items:
            $ref: '#/components/schemas/ResumeProtectionRunActionResponseParams'
          type: array
          x-order: 2
        cancelParams:
          description: Specifies the cancel action response params.
          items:
            $ref: '#/components/schemas/CancelProtectionGroupRunResponseParams'
          type: array
          x-order: 3
      type: object
    PermissionInfo:
      description: Specifies the list of users, groups and users that have permissions
        for a given object.
      properties:
        objectId:
          description: Specifies the id of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        users:
          description: Specifies the list of users which has the permissions to the
            object.
          items:
            $ref: '#/components/schemas/User'
          nullable: true
          type: array
          x-order: 1
        groups:
          description: Specifies the list of user groups which has permissions to
            the object.
          items:
            $ref: '#/components/schemas/Group'
          nullable: true
          type: array
          x-order: 2
        tenant:
          $ref: '#/components/schemas/Tenant'
      title: Permissions Information
      type: object
    PhysicalFileBackupPathParams:
      properties:
        includedPath:
          description: Specifies a path to be included on the source. All paths under
            this path will be included unless they are specifically mentioned in excluded
            paths.
          type: string
          x-order: 0
        excludedPaths:
          description: Specifies a set of paths nested under the include path which
            should be excluded from the Protection Group.
          items:
            type: string
          nullable: true
          type: array
          x-order: 1
        skipNestedVolumes:
          description: Specifies whether to skip any nested volumes (both local and
            network) that are mounted under include path. Applicable only for windows
            sources.
          nullable: true
          type: boolean
          x-order: 2
      required:
      - includedPath
      type: object
    PhysicalFileProtectionGroupObjectParams:
      properties:
        id:
          description: Specifies the ID of the object protected.
          format: int64
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object protected.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        filePaths:
          description: Specifies a list of file paths to be protected by this Protection
            Group.
          items:
            $ref: '#/components/schemas/PhysicalFileBackupPathParams'
          type: array
          x-order: 2
        usesPathLevelSkipNestedVolumeSetting:
          description: Specifies whether path level or object level skip nested volume
            setting will be used.
          nullable: true
          type: boolean
          x-order: 3
        nestedVolumeTypesToSkip:
          description: Specifies mount types of nested volumes to be skipped.
          items:
            type: string
          type: array
          x-order: 4
        followNasSymlinkTarget:
          description: Specifies whether to follow NAS target pointed by symlink for
            windows sources.
          nullable: true
          type: boolean
          x-order: 5
        metadataFilePath:
          description: Specifies the path of metadatafile on source. This file contains
            absolute paths of files that needs to be backed up on the same source.
          nullable: true
          type: string
          x-order: 6
      required:
      - id
      type: object
    PhysicalFileProtectionGroupParams:
      description: Specifies the parameters which are specific to Physical related
        Protection Groups.
      nullable: true
      properties:
        objects:
          description: Specifies the list of objects protected by this Protection
            Group.
          items:
            $ref: '#/components/schemas/PhysicalFileProtectionGroupObjectParams'
          minItems: 1
          type: array
          x-order: 0
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        performSourceSideDeduplication:
          description: Specifies whether or not to perform source side deduplication
            on this Protection Group.
          nullable: true
          type: boolean
          x-order: 2
        quiesce:
          description: Specifies Whether to take app-consistent snapshots by quiescing
            apps and the filesystem before taking a backup.
          nullable: true
          type: boolean
          x-order: 3
        continueOnQuiesceFailure:
          description: Specifies whether to continue backing up on quiesce failure.
          nullable: true
          type: boolean
          x-order: 4
        prePostScript:
          $ref: '#/components/schemas/PrePostScriptParams'
        dedupExclusionSourceIds:
          description: Specifies ids of sources for which deduplication has to be
            disabled.
          items:
            format: int64
            type: integer
          type: array
          x-order: 6
        globalExcludePaths:
          description: Specifies global exclude filters which are applied to all sources
            in a job.
          items:
            type: string
          type: array
          x-order: 7
      required:
      - objects
      type: object
      x-nullable: true
    PhysicalMountVolumesNewTargetConfig:
      description: Specifies the configuration for mounting volumes to a new target.
      properties:
        mountTarget:
          $ref: '#/components/schemas/RecoverTarget'
        serverCredentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          - type: object
            x-nullable: true
          description: Specifies credentials to access the target server. This is
            required if the server is of Linux OS.
          nullable: true
          type: object
          x-order: 1
      required:
      - mountTarget
      title: HyperV Mount Volumes New Target Config.
      type: object
    PhysicalMountVolumesOriginalTargetConfig:
      description: Specifies the configuration for mounting volumes to the original
        target.
      properties:
        serverCredentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          - type: object
            x-nullable: true
          description: Specifies credentials to access the target server. This is
            required if the server is of Linux OS.
          nullable: true
          type: object
          x-order: 0
      title: Physical Mount Volumes Original Target Config.
      type: object
    PhysicalObjectEntityParams:
      description: Specifies the common parameters for physical objects.
      properties:
        enableSystemBackup:
          description: Specifies if system backup was enabled for the source in a
            particular run.
          nullable: true
          type: boolean
          x-order: 0
      type: object
    PhysicalObjectProtectionParams:
      description: Specifies the parameters specific to Physical Object Protection.
      properties:
        objectProtectionType:
          description: Specifies the Physical Object Protection type.
          enum:
          - kFile
          - kVolume
          nullable: true
          type: string
          x-order: 0
        fileObjectProtectionTypeParams:
          $ref: '#/components/schemas/PhysicalFileProtectionGroupParams'
        volumeObjectProtectionTypeParams:
          $ref: '#/components/schemas/PhysicalVolumeProtectionGroupParams'
      required:
      - objectProtectionType
      type: object
    PhysicalObjectProtectionRequestParams:
      allOf:
      - $ref: '#/components/schemas/PhysicalObjectProtectionParams'
      description: Specifies the request parameters specific to Physical object protection.
    PhysicalObjectProtectionResponseParams:
      allOf:
      - $ref: '#/components/schemas/PhysicalObjectProtectionParams'
      description: Specifies the response parameters specific to Physical object protection.
    PhysicalObjectProtectionUpdateRequestParams:
      allOf:
      - $ref: '#/components/schemas/PhysicalObjectProtectionParams'
      description: Specifies the update parameters specific to Physical object protection.
    PhysicalProtectionGroupParams:
      description: Specifies the parameters specific to Physical Protection Group.
      properties:
        protectionType:
          description: Specifies the Physical Protection Group type.
          enum:
          - kFile
          - kVolume
          type: string
          x-order: 0
        volumeProtectionTypeParams:
          $ref: '#/components/schemas/PhysicalVolumeProtectionGroupParams'
        fileProtectionTypeParams:
          $ref: '#/components/schemas/PhysicalFileProtectionGroupParams'
      required:
      - protectionType
      title: Physical Protection Group Params.
      type: object
    PhysicalSnapshotParams:
      description: Specifies parameters of Physical type snapshots.
      properties:
        protectionType:
          description: Specifies the protection type of Physical snapshots.
          enum:
          - kFile
          - kVolume
          nullable: true
          type: string
          x-order: 0
        enableSystemBackup:
          description: Specifies if system backup was enabled for the source in that
            particular run.
          nullable: true
          type: boolean
          x-order: 1
      type: object
    PhysicalSourceRegistrationParams:
      description: Specifies parameters to register physical server.
      properties:
        endpoint:
          description: Specifies the endpoint IPaddress, URL or hostname of the physical
            host.
          type: string
          x-go-name: Endpoint
          x-order: 0
        forceRegister:
          description: The agent running on a physical host will fail the registration
            if it is already registered as part of another cluster. By setting this
            option to true, agent can be forced to register with the current cluster.
          nullable: true
          type: boolean
          x-go-name: ForceRegister
          x-order: 1
        hostType:
          description: Specifies the type of host.
          enum:
          - kLinux
          - kWindows
          - kAix
          - kSolaris
          - kSapHana
          - kOther
          nullable: true
          type: string
          x-order: 2
        physicalType:
          description: Specifies the type of physical server.
          enum:
          - kGroup
          - kHost
          - kWindowsCluster
          - kOracleRACCluster
          - kOracleAPCluster
          nullable: true
          type: string
          x-order: 3
        applications:
          description: Specifies the list of applications to be registered with Physical
            Source.
          items:
            enum:
            - kSQL
            - kOracle
            type: string
          nullable: true
          type: array
          x-order: 4
      required:
      - endpoint
      title: Register physical sever request parameters.
      type: object
    PhysicalTargetParamsForMountVolume:
      description: Specifies the parameters for a physical recovery target.
      properties:
        mountToOriginalTarget:
          description: Specifies whether to mount to the original target. If true,
            originalTargetConfig must be specified. If false, newTargetConfig must
            be specified.
          nullable: true
          type: boolean
          x-order: 0
        originalTargetConfig:
          allOf:
          - $ref: '#/components/schemas/PhysicalMountVolumesOriginalTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the configuration for mounting to the original target.
          nullable: true
          type: object
          x-order: 1
        newTargetConfig:
          allOf:
          - $ref: '#/components/schemas/PhysicalMountVolumesNewTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the configuration for mounting to a new target.
          nullable: true
          type: object
          x-order: 2
        readOnlyMount:
          description: Specifies whether to perform a read-only mount. Default is
            false.
          nullable: true
          type: boolean
          x-order: 3
        volumeNames:
          description: Specifies the names of volumes that need to be mounted. If
            this is not specified then all volumes that are part of the source VM
            will be mounted on the target VM.
          items:
            type: string
          nullable: true
          type: array
          x-order: 4
        mountedVolumeMapping:
          description: Specifies the mapping of original volumes and mounted volumes
          items:
            $ref: '#/components/schemas/MountedVolumeMapping'
          nullable: true
          readOnly: true
          type: array
          x-order: 5
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered. If this
            is not specified, then the VLAN settings will be automatically selected
            from one of the below options: a. If VLANs are configured on Cohesity,
            then the VLAN host/VIP will be automatically based on the client''s (e.g.
            ESXI host) IP address. b. If VLANs are not configured on Cohesity, then
            the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 6
      required:
      - mountToOriginalTarget
      title: Physical Recovery Target Params
      type: object
    PhysicalTargetParamsForRecoverFileAndFolder:
      description: Specifies the parameters for a Physical recovery target.
      properties:
        recoverTarget:
          allOf:
          - $ref: '#/components/schemas/RecoverTarget'
          - type: object
            x-nullable: true
          description: Specifies the target entity where the volumes are being mounted.
          type: object
          x-order: 0
        restoreToOriginalPaths:
          description: If this is true, then files will be restored to original paths.
          nullable: true
          type: boolean
          x-order: 1
        overwriteExisting:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 2
        alternateRestoreDirectory:
          description: Specifies the directory path where restore should happen if
            restore_to_original_paths is set to false.
          nullable: true
          type: string
          x-order: 3
        preserveAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 4
        preserveTimestamps:
          description: Whether to preserve the original time stamps.
          nullable: true
          type: boolean
          x-order: 5
        preserveAcls:
          description: Whether to preserve the ACLs of the original file.
          nullable: true
          type: boolean
          x-order: 6
        continueOnError:
          description: Specifies whether to continue recovering other volumes if one
            of the volumes fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 7
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered. If this
            is not specified, then the VLAN settings will be automatically selected
            from one of the below options: a. If VLANs are configured on Cohesity,
            then the VLAN host/VIP will be automatically based on the client''s (e.g.
            ESXI host) IP address. b. If VLANs are not configured on Cohesity, then
            the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 8
      required:
      - recoverTarget
      title: Physical Target Params for Recover File And Folder
      type: object
    PhysicalTargetParamsForRecoverVolume:
      description: Specifies the parameters for a physical recovery target.
      properties:
        mountTarget:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the target entity where the volumes are being mounted.
          nullable: true
          type: object
          x-order: 0
        volumeMapping:
          description: Specifies the mapping from source volumes to destination volumes.
          items:
            $ref: '#/components/schemas/RecoverVolumeMapping'
          nullable: true
          type: array
          x-order: 1
        forceUnmountVolume:
          description: Specifies whether volume would be dismounted first during LockVolume
            failure. If not specified, default is false.
          nullable: true
          type: boolean
          x-order: 2
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered. If this
            is not specified, then the VLAN settings will be automatically selected
            from one of the below options: a. If VLANs are configured on Cohesity,
            then the VLAN host/VIP will be automatically based on the client''s (e.g.
            ESXI host) IP address. b. If VLANs are not configured on Cohesity, then
            the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 3
      required:
      - mountTarget
      - volumeMapping
      title: Physical Recovery Target Params
      type: object
    PhysicalVolumeProtectionGroupObjectParams:
      description: Specifies object parameters for creating physical volume Protection
        Groups.
      properties:
        id:
          description: Specifies the ID of the object protected.
          format: int64
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object protected.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        volumeGuids:
          description: Specifies the list of GUIDs of volumes protected. If empty,
            then all volumes will be protected by default.
          items:
            type: string
          type: array
          x-order: 2
        enableSystemBackup:
          description: Specifies whether or not to take a system backup. Applicable
            only for windows sources.
          nullable: true
          type: boolean
          x-order: 3
      required:
      - id
      type: object
    PhysicalVolumeProtectionGroupParams:
      description: Specifies the parameters which are specific to Volume based physical
        Protection Groups.
      nullable: true
      properties:
        objects:
          items:
            $ref: '#/components/schemas/PhysicalVolumeProtectionGroupObjectParams'
          minItems: 1
          type: array
          x-order: 0
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        performSourceSideDeduplication:
          description: Specifies whether or not to perform source side deduplication
            on this Protection Group.
          nullable: true
          type: boolean
          x-order: 2
        quiesce:
          description: Specifies Whether to take app-consistent snapshots by quiescing
            apps and the filesystem before taking a backup
          nullable: true
          type: boolean
          x-order: 3
        continueOnQuiesceFailure:
          description: Specifies whether to continue backing up on quiesce failure
          nullable: true
          type: boolean
          x-order: 4
        incrementalBackupAfterRestart:
          description: Specifies whether or not to perform an incremental backup after
            the server restarts. This is applicable to windows environments.
          nullable: true
          type: boolean
          x-order: 5
        prePostScript:
          $ref: '#/components/schemas/PrePostScriptParams'
        dedupExclusionSourceIds:
          description: Specifies ids of sources for which deduplication has to be
            disabled.
          items:
            format: int64
            type: integer
          type: array
          x-order: 7
        excludedVssWriters:
          description: Specifies writer names which should be excluded from physical
            volume based backups.
          items:
            type: string
          nullable: true
          type: array
          x-order: 8
      required:
      - objects
      type: object
      x-nullable: true
    PlannedFailoverParams:
      description: Specifies parameters of a planned failover.
      properties:
        type:
          description: Spcifies the planned failover type.<br> 'Prepare' indicates
            this is a preparation for failover.<br> 'Finalize' indicates this is finalization
            of failover. After this is done, the view can be used as source view.
          enum:
          - Prepare
          - Finalize
          nullable: true
          type: string
          x-order: 0
        preparePlannedFailverParams:
          allOf:
          - $ref: '#/components/schemas/PreparePlannedFailverParams'
          - type: object
            x-nullable: true
          description: Specifies parameters of preparation of a planned failover.
          type: object
          x-order: 1
      required:
      - type
      type: object
    PlannedRunPollStatus:
      description: Specifies whether run has been scheduled or not and also returns
        the unique run id along with failoverId upon scheduling the run.
      example:
        protectionGroupId: protectionGroupId
        waitingOnOtherRunCancellations: true
        failoverId: failoverId
        runId: runId
      properties:
        failoverId:
          description: Specifies the unique failover Id which will be generated by
            orchestrator. This Id will be used to uniquely identify current failover
            operation.
          nullable: true
          type: string
          x-order: 0
        waitingOnOtherRunCancellations:
          description: If cancelNonFailoverRuns was passed as true during creation
            of run for current failover then this will return the status of other
            run cacellations. If other runs are still pending for cancellations then
            this will be returned as true otherwise it will be return as false.
          nullable: true
          type: boolean
          x-order: 1
        runId:
          description: If run has been scheduled then this field will be populated
            with unique run id.
          nullable: true
          type: string
          x-order: 2
        protectionGroupId:
          description: Specifies the protection group id to which this run belongs.
          nullable: true
          type: string
          x-order: 3
      type: object
    PlatformSubTypeAgentImageInfo:
      description: Specifies the agent information of platform sub type.
      example:
        downloadURL: downloadURL
        packageType: Script
      properties:
        packageType:
          description: Specifies the package type of the agent.
          enum:
          - Script
          - RPM
          - SuseRPM
          - DEB
          nullable: true
          type: string
          x-order: 0
        downloadURL:
          description: Specifies the URL for agent downlaod.
          nullable: true
          type: string
          x-order: 1
      type: object
    PluggableDatabaseInfo:
      description: Specifies the information about Pluggable databases.
      properties:
        databaseId:
          description: Specifies the database Id of the Pluggable DB.
          nullable: true
          type: string
          x-order: 0
        databaseName:
          description: Specifies the name of the Pluggable DB.
          nullable: true
          type: string
          x-order: 1
      type: object
    PolicyConfig:
      description: Specifies the policy configuration for protecting an object.
      properties:
        policies:
          description: Specifies the list of protection policies for protecting an
            object with multiple policies.
          items:
            $ref: '#/components/schemas/ObjectPolicy'
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-order: 0
      title: Policy Config
      type: object
    PolicyScheduledBackup:
      description: Policy Scheduled Backup type.
      properties:
        PolicyScheduledBackup:
          description: Specifies Scheduled Backup type.
          enum:
          - Regular
          - Full
          - Log
          - System
          type: string
          x-order: 0
      title: Policy Scheduled Backup type.
      type: object
    PolicyTemplateResponse:
      allOf:
      - $ref: '#/components/schemas/ProtectionPolicy'
      - $ref: '#/components/schemas/PolicyTemplateResponse_allOf'
      description: Specifies the details about the Protection Policy.
      title: Protection Policy
    PolicyTemplatesResponseWithPagination:
      description: Specifies the details about the Protection Policy Templates.
      example:
        policies:
        - null
        - null
      properties:
        policies:
          description: Specifies a list of protection policies.
          items:
            $ref: '#/components/schemas/PolicyTemplateResponse'
          nullable: true
          type: array
          x-order: 0
      title: Protection Policy Template Response.
      type: object
    PrePostScriptParams:
      description: Specifies the params for pre and post scripts.
      properties:
        preScript:
          $ref: '#/components/schemas/CommonPreBackupScriptParams'
        postScript:
          $ref: '#/components/schemas/CommonPostBackupScriptParams'
      title: Pre and Post Script Params.
      type: object
    PreparePlannedFailverParams:
      description: Specifies parameters of preparation of a planned failover.
      properties:
        reverseReplication:
          description: Specifies whether a reverse replication needs to be set for
            the view on target cluster after failover.
          nullable: true
          type: boolean
          x-order: 0
      type: object
    PrimaryArchivalTarget:
      description: Specifies the primary archival settings. Mainly used for cloud
        direct archive (CAD) policy where primary backup is stored on archival target.
      properties:
        targetId:
          description: Specifies the Archival target id to take primary backup.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        targetName:
          description: Specifies the Archival target name where Snapshots are copied.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        tierSettings:
          $ref: '#/components/schemas/TierLevelSettings'
      required:
      - targetId
      type: object
    PrimaryBackupTarget:
      description: Specifies the primary backup target settings for regular backups.
        If the backup target field is not specified then backup will be taken locally
        on the Cohesity cluster.
      properties:
        targetType:
          default: Local
          description: Specifies the primary backup location where backups will be
            stored. If not specified, then default is assumed as local backup on Cohesity
            cluster.
          enum:
          - Local
          - Archival
          nullable: true
          type: string
          x-order: 0
        archivalTargetSettings:
          $ref: '#/components/schemas/PrimaryArchivalTarget'
      type: object
    PrimaryBackupTargetLocation:
      description: Primary Backup Target Location.
      properties:
        type:
          description: Primary Backup Target Location.
          enum:
          - Local
          - Archival
          type: string
          x-order: 0
      title: Primary Backup Target Location.
      type: object
    PrincipalObjectType:
      description: Specifies the type of this principal. It can be a 'User' or a 'Group'.
      properties:
        enum:
          description: Specifies the Principal Object Type
          enum:
          - User
          - Group
          type: string
          x-order: 0
      title: Principal Object Type
      type: object
    PrivateKeyCredentials:
      description: Specifies the credentials for certificate based authentication.
      properties:
        userId:
          description: Specifies the userId to access target entity.
          type: string
          x-order: 0
        privateKey:
          description: Specifies the private key to access target entity.
          type: string
          x-order: 1
        passphrase:
          description: Specifies the passphrase to access target entity.
          type: string
          x-order: 2
      required:
      - privateKey
      - userId
      title: Private key credentials
      type: object
    Privilege:
      description: Specifies a Privileges.
      example:
        isSpecial: true
        isAvailableOnHelios: true
        isViewOnly: true
        name: name
        isCustomRoleDefault: true
        description: description
        id: 0
        label: label
        category: category
      properties:
        id:
          description: Specifies the Privilege id.
          format: int32
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the Privilege name.
          nullable: true
          type: string
          x-order: 1
        label:
          description: Specifies the Privilege label.
          nullable: true
          type: string
          x-order: 2
        category:
          description: Specifies the Privilege category.
          nullable: true
          type: string
          x-order: 3
        description:
          description: Specifies the description message for the Privilege.
          nullable: true
          type: string
          x-order: 4
        isAvailableOnHelios:
          description: Specifies whether the Privilege is available for Helios operations.
          nullable: true
          type: boolean
          x-order: 5
        isCustomRoleDefault:
          description: Specifies whether the Privilege is auto assigned to custom
            Roles.
          nullable: true
          type: boolean
          x-order: 6
        isSpecial:
          description: Specifies whether the Privilege is a special privilege. Special
            Privileges are not assigned to builtin 'Admin' Role.
          nullable: true
          type: boolean
          x-order: 7
        isViewOnly:
          description: Specifies whether the Privilege is a read-only privilege. Read-only
            Previlege only grants read access to a Role.
          nullable: true
          type: boolean
          x-order: 8
      type: object
    Privileges:
      description: Specifies a list of Privileges.
      example:
        privileges:
        - isSpecial: true
          isAvailableOnHelios: true
          isViewOnly: true
          name: name
          isCustomRoleDefault: true
          description: description
          id: 0
          label: label
          category: category
        - isSpecial: true
          isAvailableOnHelios: true
          isViewOnly: true
          name: name
          isCustomRoleDefault: true
          description: description
          id: 0
          label: label
          category: category
      properties:
        privileges:
          description: Specifies the list of Privileges.
          items:
            $ref: '#/components/schemas/Privilege'
          nullable: true
          type: array
          x-order: 0
      type: object
    ProgreeTaskStatus:
      description: Progress Task Status
      properties:
        progressaskStatus:
          description: Specifies the progress task status.
          enum:
          - Active
          - Finished
          - FinishedWithError
          - Canceled
          - FinishedGarbageCollected
          type: string
          x-order: 0
      title: ProgressTaskStatus
      type: object
    ProgressStats:
      description: Specifies the stats within progress.
      properties:
        fileWalkDone:
          description: Specifies whether the file system walk is done. Only applicable
            to file based backups.
          nullable: true
          type: boolean
          x-order: 0
        totalFileCount:
          description: Specifies the total number of file and directory entities visited
            in this backup. Only applicable to file based backups.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        backupFileCount:
          description: Specifies the total number of file and directory entities that
            are backed up in this run. Only applicable to file based backups.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      type: object
    ProgressSummary:
      description: Specifies the progress summary.
      properties:
        success:
          description: Specifies the successful count.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        failed:
          description: Specifies the failed count.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        total:
          description: Specifies the total count.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      type: object
    ProgressTask:
      allOf:
      - $ref: '#/components/schemas/ProgressTask_allOf'
      - $ref: '#/components/schemas/ProgressTaskInfo'
      description: This specifies the details about the Progress Task.
      title: Progress Task
    ProgressTaskEvent:
      description: Specifies the details about the various events which are created
        during the execution of Progress Task.
      properties:
        message:
          description: Specifies the log message describing the current event.
          nullable: true
          type: string
          x-order: 0
        occuredAtUsecs:
          description: Specifies the time of the event occurance in Unix epoch Timestamp(in
            microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    ProgressTaskInfo:
      description: Specifies the details about a Progress Task.
      properties:
        status:
          description: Specifies the current status of the progress task.
          enum:
          - Active
          - Finished
          - FinishedWithError
          - Canceled
          - FinishedGarbageCollected
          nullable: true
          type: string
          x-order: 0
        percentageCompleted:
          description: Specifies the current completed percentage of the progress
            task.
          format: float
          nullable: true
          type: number
          x-order: 1
        startTimeUsecs:
          description: Specifies the start time of the progress task in Unix epoch
            Timestamp(in microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 2
        endTimeUsecs:
          description: Specifies the end time of the progress task in Unix epoch Timestamp(in
            microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 3
        expectedRemainingTimeUsecs:
          description: Specifies the expected remaining time of the progress task
            in Unix epoch Timestamp(in microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 4
        events:
          description: Specifies the event log created for progress Task.
          items:
            $ref: '#/components/schemas/ProgressTaskEvent'
          type: array
          x-order: 5
        stats:
          $ref: '#/components/schemas/ProgressStats'
      title: Progress Task
      type: object
    ProgressTasks:
      description: List of Progress Tasks.
      properties:
        progressTasks:
          description: Specifies the list of Progress Task.
          items:
            $ref: '#/components/schemas/ProgressTask'
          nullable: true
          type: array
          x-order: 0
      title: Progress Tasks
      type: object
    ProjectScopeParams:
      description: Specifies the parameters for project type scope.
      properties:
        projectName:
          description: Specifies the project name.
          nullable: true
          type: string
          x-order: 0
        domainName:
          description: Specifies the domain name of the project.
          nullable: true
          type: string
          x-order: 1
      required:
      - domainName
      - projectName
      type: object
    ProtectdObjectsActionRequest:
      description: Specifies the request for performing various actions on protected
        objects.
      example:
        runNowParams:
          objects:
          - null
          - null
        snapshotBackendTypes:
        - kAWSNative
        - kAWSNative
        resumeParams:
          objects:
          - null
          - null
        unProtectParams:
          objects:
          - null
          - null
        objectActionKey: kVMware
        action: Pause
        pauseParams:
          objects:
          - null
          - null
      properties:
        action:
          description: Specifies the action type to be performed on object getting
            protected. Based on selected action, provide the action params.
          enum:
          - Pause
          - Resume
          - UnProtect
          - ProtectNow
          type: string
          x-order: 0
        objectActionKey:
          description: Specifies the object action key for any action on the given
            object.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kGCP
          - kKVM
          - kAcropolis
          - kAWS
          - kPhysical
          - kGPFS
          - kElastifile
          - kNetapp
          - kGenericNas
          - kIsilon
          - kFlashBlade
          - kPure
          - kSQL
          - kExchange
          - kAD
          - kOracle
          - kView
          - kRemoteAdapter
          - kO365
          - kO365PublicFolders
          - kO365Teams
          - kO365Group
          - kO365Exchange
          - kO365OneDrive
          - kO365Sharepoint
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          nullable: true
          type: string
          x-order: 1
        pauseParams:
          $ref: '#/components/schemas/ProtectedObjectPauseActionParams'
        resumeParams:
          $ref: '#/components/schemas/ProtectedObjectResumeActionParams'
        runNowParams:
          $ref: '#/components/schemas/ProtectedObjectRunNowActionParams'
        unProtectParams:
          $ref: '#/components/schemas/ProtectedObjectUnProtectActionParams'
        snapshotBackendTypes:
          description: Specifies the protections type on which action to be performed.
            This is used when an object is protected by multiple protection types.
            If not specified action will be performed on all protection types.
          items:
            enum:
            - kAWSNative
            - kAWSSnapshotManager
            - kPhysical
            - kSQL
            - kOracle
            type: string
          nullable: true
          type: array
          uniqueItems: true
          x-order: 6
      required:
      - action
      type: object
    ProtectedObject:
      allOf:
      - $ref: '#/components/schemas/Object'
      - $ref: '#/components/schemas/ProtectedObject_allOf'
      description: Specifies the Protected Object with last Run's snapshot information
        per Protection Group.
      title: Protected Object
    ProtectedObjectActionResponse:
      description: Specifies the response upon performing an action on protected objects.
      example:
        objects:
        - null
        - null
        action: Pause
      properties:
        action:
          description: Specifies the action type to be performed on object getting
            protected. Based on selected action, provide the action params.
          enum:
          - Pause
          - Resume
          - UnProtect
          - ProtectNow
          type: string
          x-order: 0
        objects:
          description: Specifies the list of objects on which the provided action
            was performed.
          items:
            $ref: '#/components/schemas/ActionObjectLevelResponse'
          type: array
          x-order: 1
      type: object
    ProtectedObjectBackupConfig:
      allOf:
      - $ref: '#/components/schemas/CommonObjectProtectParams'
      - $ref: '#/components/schemas/EnvSpecificObjectProtectionResponseParams'
      - $ref: '#/components/schemas/ProtectedObjectBackupConfig_allOf'
      description: Specifies the backup configuration for protected object.
    ProtectedObjectGroupBackupConfig:
      description: Specifies the parameters of a protection group which is protecting
        an object.
      properties:
        protectionGroupId:
          description: Specifies the protection group id, if given object is also
            protected by a protection group.
          nullable: true
          type: string
          x-order: 0
        protectionGroupName:
          description: Specifies the protection group name, if given object is also
            protected by a protection group.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      type: object
    ProtectedObjectInfo:
      allOf:
      - $ref: '#/components/schemas/ObjectSummary'
      - $ref: '#/components/schemas/ProtectedObjectInfo_allOf'
      description: Specifies the details of a protected object.
    ProtectedObjectPauseActionParams:
      description: Specifies the request parameters for Pause action on Protected
        objects.
      example:
        objects:
        - null
        - null
      properties:
        objects:
          description: Specifies the list of objects to perform an action. If provided
            object id is not explicitly protected by object protection, then given
            action will not be performed on that.
          items:
            $ref: '#/components/schemas/PauseActionObjectLevelParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
      type: object
    ProtectedObjectResumeActionParams:
      description: Specifies the request parameters for Resume action on Protected
        objects.
      example:
        objects:
        - null
        - null
      properties:
        objects:
          description: Specifies the list of objects to perform an action. If provided
            object id is not explicitly protected by object protection, then given
            action will not be performed on that.
          items:
            $ref: '#/components/schemas/ResumeActionObjectLevelParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
      type: object
    ProtectedObjectRunNowActionParams:
      description: Specifies the request parameters for RunNow action on Protected
        objects.
      example:
        objects:
        - null
        - null
      properties:
        objects:
          description: Specifies the list of objects to perform an action. If provided
            object id is not explicitly protected by object protection, then given
            action will not be performed on that.
          items:
            $ref: '#/components/schemas/RunNowActionObjectLevelParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
      type: object
    ProtectedObjectUnProtectActionParams:
      description: Specifies the request parameters for Unprotect action on Protected
        objects.
      example:
        objects:
        - null
        - null
      properties:
        objects:
          description: Specifies the list of objects to perform an action. If provided
            object id is not explicitly protected by object protection, then given
            action will not be performed on that.
          items:
            $ref: '#/components/schemas/UnprotectActionObjectLevelParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
      type: object
    ProtectedObjectsSearchMetadata:
      description: Specifies the metadata information about the Protection Groups,
        Protection Policy etc., for search result
      properties:
        uniqueProtectionGroupIdentifiers:
          description: Specifies the list of unique Protection Group identifiers for
            all the Objects returned in the response.
          items:
            $ref: '#/components/schemas/ProtectionGroupIdentifier'
          nullable: true
          type: array
          x-order: 0
      title: Protected Objects Search Metadata
      type: object
    ProtectedObjectsSearchResponseBody:
      description: Specifies the Protected Objects search result.
      example:
        metadata: '{}'
        objects:
        - null
        - null
        numResults: 0
      properties:
        objects:
          description: Specifies the list of Protected Objects.
          items:
            $ref: '#/components/schemas/ProtectedObject'
          nullable: true
          type: array
          x-order: 0
        metadata:
          allOf:
          - $ref: '#/components/schemas/ProtectedObjectsSearchMetadata'
          - type: object
            x-nullable: true
          description: Specifies the metadata information about the Protection Groups,
            Protection Policy etc., for search result.
          type: object
          x-order: 1
        numResults:
          description: Specifies the total number of search results which matches
            the search criteria.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      title: Protected Objects Search Result
      type: object
    ProtectionGroup:
      allOf:
      - $ref: '#/components/schemas/CommonProtectionGroupResponseParams'
      - $ref: '#/components/schemas/ProtectionGroup_allOf'
      description: Protection Group  response.
    ProtectionGroupAlertingPolicy:
      description: Specifies a policy for alerting users of the status of a Protection
        Group.
      properties:
        backupRunStatus:
          description: Specifies the run status for which the user would like to receive
            alerts.
          items:
            enum:
            - kSuccess
            - kFailure
            - kSlaViolation
            type: string
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        alertTargets:
          description: Specifies a list of targets to receive the alerts.
          items:
            $ref: '#/components/schemas/AlertTarget'
          type: array
          x-order: 1
      required:
      - backupRunStatus
      type: object
    ProtectionGroupIdentifier:
      description: Specifies Protection Group Identifier.
      properties:
        protectionGroupId:
          description: Specifies Protection Group id.
          nullable: true
          type: string
          x-order: 0
        protectionGroupName:
          description: Specifies Protection Group name.
          nullable: true
          type: string
          x-order: 1
      title: Protection Group Identifier.
      type: object
    ProtectionGroupInfo:
      description: Specifies basic information about a Protection Group.
      properties:
        groupId:
          description: |-
            This field is deprecated. 'protectionGroupId' should be used instead.
            Specifies the id of the Protection Group.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        protectionGroupId:
          description: Specifies the protection group id.
          nullable: true
          type: string
          x-order: 1
        groupName:
          description: Specifies the name of the Protection Group.
          nullable: true
          type: string
          x-order: 2
        type:
          description: |-
            Specifies the type of the Protection Group such as View or Puppeteer.
            'Puppeteer' refers to a Remote Adapter Group.
            Supported environment types such as 'View', 'SQL', 'VMware', etc.
            NOTE: 'Puppeteer' refers to Cohesity's Remote Adapter.
            'VMware' indicates the VMware Protection Source environment.
            'HyperV' indicates the HyperV Protection Source environment.
            'SQL' indicates the SQL Protection Source environment.
            'View' indicates the View Protection Source environment.
            'Puppeteer' indicates the Cohesity's Remote Adapter.
            'Physical' indicates the physical Protection Source environment.
            'Pure' indicates the Pure Storage Protection Source environment.
            'Nimble' indicates the Nimble Storage Protection Source environment.
            'Azure' indicates the Microsoft's Azure Protection Source environment.
            'Netapp' indicates the Netapp Protection Source environment.
            'Agent' indicates the Agent Protection Source environment.
            'GenericNas' indicates the Generic Network Attached Storage Protection
            Source environment.
            'Acropolis' indicates the Acropolis Protection Source environment.
            'PhsicalFiles' indicates the Physical Files Protection Source environment.
            'Isilon' indicates the Dell EMC's Isilon Protection Source environment.
            'GPFS' indicates IBM's GPFS Protection Source environment.
            'KVM' indicates the KVM Protection Source environment.
            'AWS' indicates the AWS Protection Source environment.
            'Exchange' indicates the Exchange Protection Source environment.
            'HyperVVSS' indicates the HyperV VSS Protection Source
            environment.
            'Oracle' indicates the Oracle Protection Source environment.
            'GCP' indicates the Google Cloud Platform Protection Source environment.
            'FlashBlade' indicates the Flash Blade Protection Source environment.
            'AWSNative' indicates the AWS Native Protection Source environment.
            'O365' indicates the Office 365 Protection Source environment.
            'O365Outlook' indicates Office 365 outlook Protection Source environment.
            'HyperFlex' indicates the Hyper Flex Protection Source environment.
            'GCPNative' indicates the GCP Native Protection Source environment.
            'AzureNative' indicates the Azure Native Protection Source environment.
            'Kubernetes' indicates a Kubernetes Protection Source environment.
            'Elastifile' indicates Elastifile Protection Source environment.
            'AD' indicates Active Directory Protection Source environment.
          enum:
          - kVMware
          - kHyperV
          - kSQL
          - kView
          - kRemoteAdapter
          - kPhysical
          - kPure
          - kAzure
          - kNetapp
          - kGenericNas
          - kAcropolis
          - kIsilon
          - kKVM
          - kAWS
          - kExchange
          - kOracle
          - kGCP
          - kFlashBlade
          - kO365
          - kHyperFlex
          - kAD
          - kGPFS
          - kKubernetes
          - kNimble
          - kElastifile
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          - kO365Sharepoint
          - kO365PublicFolders
          - kO365Teams
          - kO365Group
          - kO365Exchange
          - kO365OneDrive
          nullable: true
          type: string
          x-order: 3
        lastRun:
          $ref: '#/components/schemas/ProtectionGroupRun'
      title: Protection Group Info
      type: object
    ProtectionGroupPriority:
      description: Protection Group Priority type.
      properties:
        protectionGroupPriority:
          description: Specifies Protection Group priority.
          enum:
          - kLow
          - kMedium
          - kHigh
          type: string
          x-order: 0
      title: Protection Group Priority type.
      type: object
    ProtectionGroupRun:
      allOf:
      - $ref: '#/components/schemas/CommonProtectionGroupRunResponseParameters'
      description: Protection run.
    ProtectionGroupRunActions:
      description: Specifies the various actions that can be performed on a protection
        run.
      properties:
        action:
          description: Specifies the action to be performed on a run.
          enum:
          - Pause
          - Resume
          - Cancel
          type: string
          x-order: 0
      title: Protection Group Run Actions
      type: object
    ProtectionGroupRuns:
      description: Protection runs.
      example:
        totalRuns: 0
        runs:
        - null
        - null
      properties:
        runs:
          description: Specifies the list of Protection Group runs.
          items:
            $ref: '#/components/schemas/ProtectionGroupRun'
          nullable: true
          type: array
          x-order: 0
        totalRuns:
          description: Specifies the count of total runs exist for the given set of
            filters. The number of runs in single API call are limited and this count
            can be used to estimate query filter values to get next set of remaining
            runs. Please note that this field will only be populated if startTimeUsecs
            or endTimeUsecs or both are specified in query parameters.
          format: int32
          nullable: true
          type: integer
          x-order: 1
      type: object
    ProtectionGroupStateChangeActions:
      description: Protection Group State Change Actions type.
      properties:
        protectionGroupStateChangeActions:
          description: Specifies Protection Group State Change Actions type.
          enum:
          - kPause
          - kResume
          type: string
          x-order: 0
      title: Protection Group State Change Actions type.
      type: object
    ProtectionGroups:
      description: Protection Group  response.
      example:
        protectionGroups:
        - null
        - null
      properties:
        protectionGroups:
          description: Specifies the list of Protection Groups which were returned
            by the request.
          items:
            $ref: '#/components/schemas/ProtectionGroup'
          nullable: true
          type: array
          x-order: 0
      type: object
    ProtectionObjectInput:
      description: Specifies an object protected by a Protection Group.
      example:
        name: name
        id: 0
      properties:
        id:
          description: Specifies the ID of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      type: object
    ProtectionPolicy:
      description: Specifies common fields required to define Protection Policy.
      properties:
        name:
          description: Specifies the name of the Protection Policy.
          nullable: true
          type: string
          x-order: 0
        backupPolicy:
          $ref: '#/components/schemas/BackupPolicy'
        description:
          description: Specifies the description of the Protection Policy.
          nullable: true
          type: string
          x-order: 2
        blackoutWindow:
          description: List of Blackout Windows. If specified, this field defines
            blackout periods when new Group Runs are not started. If a Group Run has
            been scheduled but not yet executed and the blackout period starts, the
            behavior depends on the policy field AbortInBlackoutPeriod.
          items:
            $ref: '#/components/schemas/BlackoutWindow'
          nullable: true
          title: Blackout Window
          type: array
          x-order: 3
        extendedRetention:
          description: Specifies additional retention policies that should be applied
            to the backup snapshots. A backup snapshot will be retained up to a time
            that is the maximum of all retention policies that are applicable to it.
          items:
            $ref: '#/components/schemas/ExtendedRetentionPolicy'
          nullable: true
          title: Extended Retention
          type: array
          x-order: 4
        remoteTargetPolicy:
          $ref: '#/components/schemas/TargetsConfiguration'
        retryOptions:
          $ref: '#/components/schemas/RetryOptions'
        dataLock:
          description: This field is now deprecated. Please use the DataLockConfig
            in the backup retention.
          enum:
          - Compliance
          - Administrative
          nullable: true
          type: string
          x-order: 7
      required:
      - backupPolicy
      - name
      title: Protection Policy
      type: object
    ProtectionPolicyIdentifier:
      description: Specifies Protection Policy Identifier.
      properties:
        protectionPolicyId:
          description: Specifies Protection Policy id.
          nullable: true
          type: string
          x-order: 0
        protectionPolicyName:
          description: Specifies Protection Policy name.
          nullable: true
          type: string
          x-order: 1
      title: Protection Policy Identifier.
      type: object
    ProtectionPolicyRequest:
      allOf:
      - $ref: '#/components/schemas/ProtectionPolicy'
      - $ref: '#/components/schemas/ProtectionPolicyRequest_allOf'
      description: Specifies the request to create a Protection Policy.
      title: Protection Policy Request.
    ProtectionPolicyResponse:
      allOf:
      - $ref: '#/components/schemas/ProtectionPolicy'
      - $ref: '#/components/schemas/ProtectionPolicyResponse_allOf'
      description: Specifies the details about the Protection Policy.
      title: Protection Policy
    ProtectionPolicyResponseWithPagination:
      description: Specifies the details about the Protection Policy.
      example:
        policies:
        - null
        - null
      properties:
        policies:
          description: Specifies a list of protection policies.
          items:
            $ref: '#/components/schemas/ProtectionPolicyResponse'
          nullable: true
          type: array
          x-order: 0
      title: Protection Policy Response.
      type: object
    ProtectionPolicyType:
      description: Protection Policy Type.
      properties:
        type:
          description: Specifies the protection policy type.
          enum:
          - Regular
          - Internal
          type: string
          x-order: 0
      title: Protection Policy Type.
      type: object
    ProtectionRunSummary:
      description: Specifies the summary of a protection run.
      example:
        bytesWritten: 2
        protectionGroupName: protectionGroupName
        isFullRun: true
        startTimeUsecs: 0
        endTimeUsecs: 6
        successObjectsCount: 5
        protectionGroupId: protectionGroupId
        environment: kVMware
        logicalSizeBytes: 5
        isSlaViolated: true
        id: id
        totalObjectsCount: 1
        status: Accepted
      properties:
        id:
          description: Specifies the ID of the Protection Group run.
          nullable: true
          type: string
          x-order: 0
        protectionGroupId:
          description: ProtectionGroupId to which this run belongs.
          nullable: true
          type: string
          x-order: 1
        protectionGroupName:
          description: Name of the Protection Group to which this run belongs.
          nullable: true
          type: string
          x-order: 2
        environment:
          description: Specifies the environment type of the Protection Group.
          enum:
          - kVMware
          - kHyperV
          - kAzure
          - kGCP
          - kKVM
          - kAcropolis
          - kAWS
          - kPhysical
          - kGPFS
          - kElastifile
          - kNetapp
          - kGenericNas
          - kIsilon
          - kFlashBlade
          - kPure
          - kSQL
          - kExchange
          - kAD
          - kOracle
          - kView
          - kRemoteAdapter
          - kO365
          - kO365PublicFolders
          - kO365Teams
          - kO365Group
          - kO365Exchange
          - kO365OneDrive
          - kO365Sharepoint
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          - kUDA
          nullable: true
          type: string
          x-order: 3
        isSlaViolated:
          description: Indicated if SLA has been violated for this run.
          nullable: true
          type: boolean
          x-order: 4
        startTimeUsecs:
          description: Specifies the start time of backup run in Unix epoch Timestamp(in
            microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 5
        endTimeUsecs:
          description: Specifies the end time of backup run in Unix epoch Timestamp(in
            microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 6
        status:
          description: Status of the backup run. 'Running' indicates that the run
            is still running. 'Canceled' indicates that the run has been canceled.
            'Canceling' indicates that the run is in the process of being canceled.
            'Paused' indicates that the ongoing run has been paused. 'Failed' indicates
            that the run has failed. 'Missed' indicates that the run was unable to
            take place at the scheduled time because the previous run was still happening.
            'Succeeded' indicates that the run has finished successfully. 'SucceededWithWarning'
            indicates that the run finished successfully, but there were some warning
            messages.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          - Paused
          - Pausing
          - Resuming
          nullable: true
          type: string
          x-order: 7
        isFullRun:
          description: Specifies if the protection run is a full run.
          nullable: true
          type: boolean
          x-order: 8
        totalObjectsCount:
          description: Specifies the total number of objects protected in this run.
          format: int64
          nullable: true
          type: integer
          x-order: 9
        successObjectsCount:
          description: Specifies the number of objects which are successfully protected
            in this run.
          format: int64
          nullable: true
          type: integer
          x-order: 10
        logicalSizeBytes:
          description: Specifies total logical size of object(s) in bytes.
          format: int64
          nullable: true
          type: integer
          x-order: 11
        bytesWritten:
          description: Specifies total size of data in bytes written after taking
            backup.
          format: int64
          nullable: true
          type: integer
          x-order: 12
      type: object
    ProtectionRunsStats:
      description: Specifies the statistics of protection runs.
      example:
        protectionRunsCount: 6
        protectionRunStatus: Running
      properties:
        protectionRunStatus:
          description: Specifies the status of protection runs.
          enum:
          - Running
          - Canceled
          - Failed
          - Succeeded
          - SucceededWithWarning
          nullable: true
          type: string
          x-order: 0
        protectionRunsCount:
          description: Specifies the number of protection runs.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    ProtectionRunsStatsList:
      description: Specifies the statistics of protection runs at the specific time.
      example:
        stats:
        - protectionRunsCount: 6
          protectionRunStatus: Running
        - protectionRunsCount: 6
          protectionRunStatus: Running
        timestamp: 0
      properties:
        timestamp:
          description: Specifies a Unix epoch Timestamp (in microseconds) of this
            statistics.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        stats:
          description: Specifies the protection runs stats.
          items:
            $ref: '#/components/schemas/ProtectionRunsStats'
          nullable: true
          type: array
          x-order: 1
      type: object
    ProtectionRunsSummary:
      description: Specifies a list of summaries of protection runs.
      example:
        protectionRunsSummary:
        - bytesWritten: 2
          protectionGroupName: protectionGroupName
          isFullRun: true
          startTimeUsecs: 0
          endTimeUsecs: 6
          successObjectsCount: 5
          protectionGroupId: protectionGroupId
          environment: kVMware
          logicalSizeBytes: 5
          isSlaViolated: true
          id: id
          totalObjectsCount: 1
          status: Accepted
        - bytesWritten: 2
          protectionGroupName: protectionGroupName
          isFullRun: true
          startTimeUsecs: 0
          endTimeUsecs: 6
          successObjectsCount: 5
          protectionGroupId: protectionGroupId
          environment: kVMware
          logicalSizeBytes: 5
          isSlaViolated: true
          id: id
          totalObjectsCount: 1
          status: Accepted
      properties:
        protectionRunsSummary:
          description: Specifies a list of summaries of protection runs.
          items:
            $ref: '#/components/schemas/ProtectionRunSummary'
          nullable: true
          type: array
          x-order: 0
      type: object
    ProtectionSummary:
      description: Specifies a summary of an object protection.
      properties:
        policyName:
          description: Specifies the policy name for this group.
          nullable: true
          type: string
          x-order: 0
        policyId:
          description: Specifies the policy id for this protection.
          nullable: true
          type: string
          x-order: 1
        storageDomainId:
          description: Specifies the storage domain id of this protection. Format
            is clusterId:clusterIncarnationId:storageDomainId.
          nullable: true
          type: string
          x-order: 2
        lastBackupRunStatus:
          description: Specifies the status of last local back up run.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          - Paused
          - Pausing
          - Resuming
          nullable: true
          type: string
          x-order: 3
        lastArchivalRunStatus:
          description: Specifies the status of last archival run.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          - Paused
          - Pausing
          - Resuming
          nullable: true
          type: string
          x-order: 4
        lastReplicationRunStatus:
          description: Specifies the status of last replication run.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          - Paused
          - Pausing
          - Resuming
          nullable: true
          type: string
          x-order: 5
        lastRunSlaViolated:
          description: Specifies if the sla is violated in last run.
          nullable: true
          type: boolean
          x-order: 6
      type: object
    ProtectionType:
      description: Protection type.
      properties:
        environment:
          description: Specifies Protection type.
          enum:
          - kAgent
          - kNative
          - kSnapshotManager
          - kRDSSnapshotManager
          - kAuroraSnapshotManager
          - kFile
          - kVolume
          type: string
          x-order: 0
      title: Protection type.
      type: object
    ProtocolAccessLevel:
      description: Protocol access level
      properties:
        protocolAccessLevel:
          description: Specifies the level of access for any protocol.
          enum:
          - kDisabled
          - kReadOnly
          - kReadWrite
          type: string
          x-order: 0
      title: Protocol access level
      type: object
    PublicErrorType:
      description: Public Error Type
      properties:
        type:
          description: Specifies the public error type.
          enum:
          - InternalError
          - AlreadyExistsError
          type: string
          x-order: 0
      title: PublicErrorType
      type: object
    PublicFolder:
      description: Specifies an PublicFolder item to recover.
      properties:
        folderId:
          description: Specifies the Unique ID of the folder.
          nullable: true
          type: string
          x-order: 0
        recoverEntireFolder:
          description: Specifies whether to recover the whole PublicFolder.
          nullable: true
          type: boolean
          x-order: 1
        itemIds:
          description: Specifies a list of item ids to recover. This field is applicable
            only if 'recoverEntireFolder' is false.
          items:
            type: string
          nullable: true
          type: array
          x-order: 2
      required:
      - folderId
      type: object
    PublicFolderItem:
      allOf:
      - $ref: '#/components/schemas/CommonIndexedObjectParams'
      - $ref: '#/components/schemas/PublicFolderItem_allOf'
      description: Specifies an Public folder indexed item.
      title: PublicFolderItem
    PublicFolderItemType:
      description: Public Folder item types for search.
      properties:
        type:
          description: Specifies the Public Folder item types for search.
          enum:
          - Calendar
          - Contact
          - Post
          - Folder
          - Task
          - Journal
          - Note
          type: string
          x-order: 0
      title: Public Folder item types for search.
      type: object
    PublicFolderItems:
      description: Specifies the indexed Public folder items.
      items:
        $ref: '#/components/schemas/PublicFolderItem'
      type: array
    PublicTaskStatus:
      description: Public Task Status
      properties:
        publicTaskStatus:
          description: Specifies the public task status.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          type: string
          x-order: 0
      title: PublicTaskStatus
      type: object
    PureProtectionGroupObjectParams:
      description: Specifies the object parameters to create Pure Protection Group.
      properties:
        id:
          description: Specifies the id of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      title: Pure Protection Group Object Params.
      type: object
    PureProtectionGroupParams:
      description: Specifies the parameters which are specific to Pure related Protection
        Groups.
      nullable: true
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/PureProtectionGroupObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        maxSnapshotsOnPrimary:
          description: Specifies the number of snapshots to retain on the primary
            environment. If not specified, then snapshots will not be deleted from
            the primary environment.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 2
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 3
        prePostScript:
          $ref: '#/components/schemas/HostBasedBackupScriptParams'
      required:
      - objects
      type: object
      x-nullable: true
    QoS:
      description: Specifies the Quality of Service (QoS) Policy for the View.
      properties:
        principalId:
          description: Specifies the name of the QoS Policy used for the View.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        principalName:
          description: |-
            Specifies the name of the QoS Policy used for the View such as
            'TestAndDev High', 'Backup Target SSD', 'Backup Target High'
            'TestAndDev Low' and 'Backup Target Low'. For a complete list
            and descriptions, see the 'Create or Edit Views' topic in the
            documentation. If not specified, the default is 'Backup Target Low'.
          nullable: true
          type: string
          x-order: 1
      title: QoS.
      type: object
    QosPolicy:
      description: QOS Policy type.
      properties:
        qosPolicy:
          description: Specifies QOS Policy type.
          enum:
          - kBackupHDD
          - kBackupSSD
          - kTestAndDevHigh
          - kBackupAll
          type: string
          x-order: 0
      title: QOS Policy type.
      type: object
    QuotaPolicy:
      description: |-
        Specifies a quota limit that can be optionally applied to Views and
        Storage Domains.
        At the View level, this quota defines a logical limit for usage on the View.
        At the Storage Domain level, this quota defines a physical limit or
        a default logical View limit.
        If a physical quota is specified for Storage Domain, this quota defines a physical
        limit for the usage on the Storage Domain.
        If a default logical View quota is specified for Storage Domain, this limit
        is inherited by all the Views in that Storage Domain.
        However, this inherited quota can be overwritten at the View level.
        A new write is not allowed if the resource will exceed the specified quota.
        However, it takes time for the Cohesity Cluster to calculate
        the usage across Nodes, so the limit may be exceeded by a small amount.
        In addition, if the limit is increased or data is removed,
        there may be a delay before the Cohesity Cluster allows more data
        to be written to the resource, as the Cluster calculates the usage
        across Nodes.
      properties:
        alertLimitBytes:
          description: |-
            Specifies if an alert should be triggered when the usage of this
            resource exceeds this quota limit.
            This limit is optional and is specified in bytes.
            If no value is specified, there is no limit.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        alertThresholdPercentage:
          description: |-
            Supported only for user quota policy.
            Specifies when the usage goes above an alert threshold percentage
            which is:
            HardLimitBytes * AlertThresholdPercentage, eg: 80% of HardLimitBytes
            Can only be set if HardLimitBytes is set.
            Cannot be set if AlertLimitBytes is already set.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        hardLimitBytes:
          description: |-
            Specifies an optional quota limit on the usage allowed for this
            resource. This limit is specified in bytes. If no value is specified,
            there is no limit.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      title: Quota Policy
      type: object
    Rack:
      description: Specifies information about rack.
      example:
        name: name
        location: location
        id: 0
        chassisIds:
        - 6
        - 6
      properties:
        id:
          description: Specifies unique id of the rack.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies name of the rack
          nullable: true
          type: string
          x-order: 1
        location:
          description: Specifies location of the rack.
          nullable: true
          type: string
          x-order: 2
        chassisIds:
          description: List of chassis ids that are part of the rack.
          items:
            format: int64
            type: integer
          type: array
          x-order: 3
      title: Rack specific response.
      type: object
    Racks:
      description: Specifies info about list of racks.
      example:
        racks:
        - name: name
          location: location
          id: 0
          chassisIds:
          - 6
          - 6
        - name: name
          location: location
          id: 0
          chassisIds:
          - 6
          - 6
      properties:
        racks:
          description: Specifies list of racks
          items:
            $ref: '#/components/schemas/Rack'
          nullable: true
          type: array
          x-order: 0
      title: List of Racks
      type: object
    RdsConfig:
      description: Specifies the parameters to recover AWS RDS.
      properties:
        dbPort:
          description: Specifies the port to use for the DB in the restored RDS instance.
          format: int32
          nullable: true
          type: integer
          x-order: 0
        dbInstanceId:
          description: Specifies the DB instance identifier to use for the restored
            DB.
          nullable: true
          type: string
          x-order: 1
        isMultiAzDeployment:
          description: Specifies whether this is a multi-az deployment or not.
          nullable: true
          type: boolean
          x-order: 2
        enablePublicAccessibility:
          description: Specifies whether this DB will be publicly accessible or not.
          nullable: true
          type: boolean
          x-order: 3
        enableIamDbAuthentication:
          description: Specifies whether to enable IAM authentication for the DB.
          nullable: true
          type: boolean
          x-order: 4
        enableCopyTagsToSnapshots:
          description: Specifies whether to enable copying of tags to snapshots of
            the DB.
          nullable: true
          type: boolean
          x-order: 5
        enableAutoMinorVersionUpgrade:
          description: Specifies whether to enable auto minor version upgrade in the
            restored DB.
          nullable: true
          type: boolean
          x-order: 6
        dbOptionGroup:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies entity representing the RDS option group to use while
            restoring the DB.
          nullable: true
          type: object
          x-order: 7
        dbParameterGroup:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the entity representing the RDS parameter group to
            use while restoring the DB.
          nullable: true
          type: object
          x-order: 8
      required:
      - dbInstanceId
      - dbPort
      - enableAutoMinorVersionUpgrade
      - enableCopyTagsToSnapshots
      - enableIamDbAuthentication
      - isMultiAzDeployment
      title: Recover AWS RDS params.
      type: object
    ReassociateKeyRequest:
      description: The request for reassociate key.
      properties:
        apiKey:
          description: Specifies the api key.
          nullable: true
          type: string
          x-order: 0
      required:
      - apiKey
      type: object
    ReassociateKeyResponseBody:
      description: The response body of reassociate key.
      properties:
        tenantId:
          description: Specifies the new tenant id associated with the api key.
          nullable: true
          type: string
          x-order: 0
      type: object
    RecoverAcropolisFileAndFolderParams:
      description: Specifies the parameters to recover Acropolis files and folders.
      properties:
        filesAndFolders:
          description: Specifies the info about the files and folders to be recovered.
          items:
            $ref: '#/components/schemas/CommonRecoverFileAndFolderInfo'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kAcropolis
          type: string
          x-order: 1
        acropolisTargetParams:
          allOf:
          - $ref: '#/components/schemas/AcropolisTargetParamsForRecoverFileAndFolder'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to an Acropolis target.
          nullable: true
          type: object
          x-order: 2
      required:
      - filesAndFolders
      - targetEnvironment
      title: Recover Acropolis Files and Folders Params.
      type: object
    RecoverAcropolisParams:
      description: Specifies Acropolis related recovery options.
      properties:
        objects:
          description: Specifies the list of recover Object parameters. This property
            is mandatory for all recovery action types except recover vms. While recovering
            VMs, a user can specify snapshots of VM's or a Protection Group Run details
            to recover all the VM's that are backed up by that Run. For recovering
            files, specifies the object contains the file to recover.
          items:
            $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recovery action to be performed.
          enum:
          - RecoverVMs
          - RecoverFiles
          type: string
          x-order: 1
        recoverVmParams:
          allOf:
          - $ref: '#/components/schemas/RecoverAcropolisVmParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Acropolis VMs.
          nullable: true
          type: object
          x-order: 2
        recoverFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/RecoverAcropolisFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Acropolis files and folders.
          nullable: true
          type: object
          x-order: 3
        downloadFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/CommonDownloadFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to download files and folders.
          nullable: true
          type: object
          x-order: 4
      required:
      - recoveryAction
      title: Recover VM params.
      type: object
    RecoverAcropolisVmNewSourceConfig:
      description: Specifies the new destination Source configuration where the VMs
        will be recovered.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the parent source to recover the VMs.
          nullable: true
          type: object
          x-order: 0
        storageContainer:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: A storage container where the VM's files should be restored
            to.
          nullable: true
          type: object
          x-order: 1
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverAcropolisVmNewSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          nullable: true
          type: object
          x-order: 2
      required:
      - source
      title: Recover Acropolis VMs New Source Config.
      type: object
    RecoverAcropolisVmNewSourceNetworkConfig:
      description: Specifies the network config parameters to applied for Acropolis
        VMs.
      properties:
        detachNetwork:
          description: If this is set to true, then the network will be detached from
            the recovered VMs. All the other networking parameters set will be ignored
            if set to true. Default value is false.
          nullable: true
          type: boolean
          x-order: 0
        networkPortGroup:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the network port group (i.e, either a standard switch
            port group or a distributed port group) that will attached to the recovered
            Object. This parameter is mandatory if detach network is specified as
            false.
          nullable: true
          type: object
          x-order: 1
      title: Recover Acropolis VMs network configuration.
      type: object
    RecoverAcropolisVmOriginalSourceConfig:
      description: Specifies the Source configuration if VM's are being recovered
        to Original Source.
      properties:
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverAcropolisVmOriginalSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          nullable: true
          type: object
          x-order: 0
      title: Recover Acropolis VMs Original Source Config.
      type: object
    RecoverAcropolisVmOriginalSourceNetworkConfig:
      description: Specifies the network config parameters to be applied for Acropolis
        VMs if recovering to original Source.
      properties:
        detachNetwork:
          description: If this is set to true, then the network will be detached from
            the recovered VMs. All the other networking parameters set will be ignored
            if set to true. Default value is false.
          nullable: true
          type: boolean
          x-order: 0
      title: Recover Acropolis VMs Original Source Network configuration.
      type: object
    RecoverAcropolisVmParams:
      description: Specifies the recovery options specific to Acropolis environment.
      properties:
        recoverProtectionGroupRunsParams:
          description: Specifies the Protection Group Runs params to recover. All
            the VM's that are successfully backed up by specified Runs will be recovered.
            This can be specified along with individual snapshots of VMs. User has
            to make sure that specified Object snapshots and Protection Group Runs
            should not have any intersection. For example, user cannot specify multiple
            Runs which has same Object or an Object snapshot and a Run which has same
            Object's snapshot.
          items:
            $ref: '#/components/schemas/RecoverProtectionGroupRunParams'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kAcropolis
          type: string
          x-order: 1
        acropolisTargetParams:
          allOf:
          - $ref: '#/components/schemas/AcropolisTargetParamsForRecoverVm'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to a Acropolis target.
          nullable: true
          type: object
          x-order: 2
      required:
      - targetEnvironment
      title: Recover Acropolis params.
      type: object
    RecoverAcropolisVmTargetConfig:
      description: Specifies the target configuration source parameters.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or an existing Source Target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverAcropolisVmNewSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the VMs will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverAcropolisVmOriginalSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if VM's are being recovered
            to Original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Vm Target Configuration for Acropolis Recovery
      type: object
    RecoverAwsAuroraNewSourceConfig:
      description: Specifies the new destination Source configuration where the Aurora
        instances will be recovered.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the parent source to recover the Aurora.
          nullable: true
          type: object
          x-order: 0
        region:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the AWS region in which to deploy the Aurora instance.
          nullable: true
          type: object
          x-order: 1
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverAwsAuroraNewSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          nullable: true
          type: object
          x-order: 2
      required:
      - networkConfig
      - region
      - source
      title: Recover AWS Aurora New Source Config.
      type: object
    RecoverAwsAuroraNewSourceNetworkConfig:
      description: Specifies the network config parameters to be applied for AWS Aurora
        if recovering to new Source.
      properties:
        vpc:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the Virtual Private Cloud to choose for the instance
            type.
          nullable: true
          type: object
          x-order: 0
        subnet:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the subnet within above VPC.
          nullable: true
          type: object
          x-order: 1
        availabilityZone:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the entity representing the availability zone to
            use while restoring the DB.
          nullable: true
          type: object
          x-order: 2
        securityGroups:
          description: Specifies the network security groups within above VPC.
          items:
            $ref: '#/components/schemas/RecoveryObjectIdentifier'
          nullable: true
          type: array
          x-order: 3
      required:
      - subnet
      - vpc
      title: Recover AWS Aurora New Source Network configuration.
      type: object
    RecoverAwsAuroraParams:
      description: Specifies the parameters to recover AWS Aurora.
      properties:
        recoverProtectionGroupRunsParams:
          description: Specifies the Protection Group Runs params to recover. All
            the Aurora instances that are successfully backed up by specified Runs
            will be recovered. This can be specified along with individual snapshots
            of Aurora instances. User has to make sure specified Object snapshots
            and Protection Group Runs should not have any intersection. For example,
            user cannot specify multiple Runs which has same Object or an Object snapshot
            and a Run which has same Object's snapshot.
          items:
            $ref: '#/components/schemas/RecoverProtectionGroupRunParams'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kAWS
          type: string
          x-order: 1
        awsTargetParams:
          allOf:
          - $ref: '#/components/schemas/AwsTargetParamsForRecoverAurora'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to an AWS target.
          nullable: true
          type: object
          x-order: 2
      required:
      - targetEnvironment
      title: Recover AWS Aurora params.
      type: object
    RecoverAwsFileAndFolderParams:
      description: Specifies the parameters to recover files and folders.
      properties:
        filesAndFolders:
          description: Specifies the info about the files and folders to be recovered.
          items:
            $ref: '#/components/schemas/CommonRecoverFileAndFolderInfo'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kAWS
          type: string
          x-order: 1
        awsTargetParams:
          allOf:
          - $ref: '#/components/schemas/AwsTargetParamsForRecoverFileAndFolder'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover to an AWS target.
          nullable: true
          type: object
          x-order: 2
      required:
      - filesAndFolders
      - targetEnvironment
      title: Recover AWS File And Folder Params
      type: object
    RecoverAwsParams:
      description: Specifies the recovery options specific to AWS environment.
      properties:
        objects:
          description: Specifies the list of recover Object parameters. This property
            is mandatory for all recovery action types except recover vms. While recovering
            VMs, a user can specify snapshots of VM's or a Protection Group Run details
            to recover all the VM's that are backed up by that Run. For recovering
            files, specifies the object contains the file to recover.
          items:
            $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverVMs
          - RecoverRDS
          - RecoverAurora
          - RecoverFiles
          type: string
          x-order: 1
        recoverVmParams:
          allOf:
          - $ref: '#/components/schemas/RecoverAwsVmParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover AWS VM.
          nullable: true
          type: object
          x-order: 2
        recoverFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/RecoverAwsFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover files and folders.
          nullable: true
          type: object
          x-order: 3
        recoverRdsParams:
          allOf:
          - $ref: '#/components/schemas/RecoverAwsRdsParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover AWS RDS.
          nullable: true
          type: object
          x-order: 4
        recoverAuroraParams:
          allOf:
          - $ref: '#/components/schemas/RecoverAwsAuroraParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover AWS Aurora.
          nullable: true
          type: object
          x-order: 5
        downloadFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/CommonDownloadFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to download files and folders.
          nullable: true
          type: object
          x-order: 6
      required:
      - recoveryAction
      title: Recover AWS environment params.
      type: object
    RecoverAwsRdsNewSourceConfig:
      description: Specifies the new destination Source configuration where the RDS
        instances will be recovered.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the parent source to recover the RDS.
          nullable: true
          type: object
          x-order: 0
        region:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the AWS region in which to deploy the RDS instance.
          nullable: true
          type: object
          x-order: 1
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverAwsRdsNewSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          nullable: true
          type: object
          x-order: 2
      required:
      - networkConfig
      - region
      - source
      title: Recover AWS RDS New Source Config.
      type: object
    RecoverAwsRdsNewSourceNetworkConfig:
      description: Specifies the network config parameters to be applied for AWS RDS
        if recovering to new Source.
      properties:
        vpc:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the Virtual Private Cloud to choose for the instance
            type.
          nullable: true
          type: object
          x-order: 0
        subnet:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the subnet within above VPC.
          nullable: true
          type: object
          x-order: 1
        availabilityZone:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the entity representing the availability zone to
            use while restoring the DB.
          nullable: true
          type: object
          x-order: 2
        securityGroups:
          description: Specifies the network security groups within above VPC.
          items:
            $ref: '#/components/schemas/RecoveryObjectIdentifier'
          nullable: true
          type: array
          x-order: 3
      required:
      - subnet
      - vpc
      title: Recover AWS RDS New Source Network configuration.
      type: object
    RecoverAwsRdsParams:
      description: Specifies the parameters to recover AWS RDS.
      properties:
        recoverProtectionGroupRunsParams:
          description: Specifies the Protection Group Runs params to recover. All
            the RDS instances that are successfully backed up by specified Runs will
            be recovered. This can be specified along with individual snapshots of
            RDS instances. User has to make sure that specified Object snapshots and
            Protection Group Runs should not have any intersection. For example, user
            cannot specify multiple Runs which has same Object or an Object snapshot
            and a Run which has same Object's snapshot.
          items:
            $ref: '#/components/schemas/RecoverProtectionGroupRunParams'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kAWS
          type: string
          x-order: 1
        awsTargetParams:
          allOf:
          - $ref: '#/components/schemas/AwsTargetParamsForRecoverRds'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to an AWS target.
          nullable: true
          type: object
          x-order: 2
      required:
      - targetEnvironment
      title: Recover AWS RDS params.
      type: object
    RecoverAwsVmNewSourceConfig:
      description: Specifies the new destination Source configuration where the VMs
        will be recovered.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the parent source to recover the VMs.
          nullable: true
          type: object
          x-order: 0
        region:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the AWS region in which to deploy the VM.
          nullable: true
          type: object
          x-order: 1
        keyPair:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the pair of public and private key used to login
            into the VM
          nullable: true
          type: object
          x-order: 2
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverAwsVmNewSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          nullable: true
          type: object
          x-order: 3
      required:
      - networkConfig
      - region
      - source
      title: Recover AWS VMs New Source Config.
      type: object
    RecoverAwsVmNewSourceNetworkConfig:
      description: Specifies the network config parameters to be applied for AWS VMs
        if recovering to new Source.
      properties:
        vpc:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the Virtual Private Cloud to choose for the instance
            type.
          nullable: true
          type: object
          x-order: 0
        subnet:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the subnet within above VPC.
          nullable: true
          type: object
          x-order: 1
        securityGroups:
          description: Specifies the network security groups within above VPC.
          items:
            $ref: '#/components/schemas/RecoveryObjectIdentifier'
          nullable: true
          type: array
          x-order: 2
      required:
      - securityGroups
      - subnet
      - vpc
      title: Recover AWS VMs New Source Network configuration.
      type: object
    RecoverAwsVmParams:
      description: Specifies the parameters to recover AWS VM.
      properties:
        recoverProtectionGroupRunsParams:
          description: Specifies the Protection Group Runs params to recover. All
            the VM's that are successfully backed up by specified Runs will be recovered.
            This can be specified along with individual snapshots of VMs. User has
            to make sure that specified Object snapshots and Protection Group Runs
            should not have any intersection. For example, user cannot specify multiple
            Runs which has same Object or an Object snapshot and a Run which has same
            Object's snapshot.
          items:
            $ref: '#/components/schemas/RecoverProtectionGroupRunParams'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kAWS
          type: string
          x-order: 1
        awsTargetParams:
          allOf:
          - $ref: '#/components/schemas/AwsTargetParamsForRecoverVm'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to an AWS target.
          nullable: true
          type: object
          x-order: 2
      required:
      - targetEnvironment
      title: Recover AWS VM params.
      type: object
    RecoverAzureFileAndFolderParams:
      description: Specifies the parameters to recover Azure files and folders.
      properties:
        filesAndFolders:
          description: Specifies the info about the files and folders to be recovered.
          items:
            $ref: '#/components/schemas/CommonRecoverFileAndFolderInfo'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kAzure
          type: string
          x-order: 1
        azureTargetParams:
          allOf:
          - $ref: '#/components/schemas/AzureTargetParamsForRecoverFileAndFolder'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to an Azure target.
          nullable: true
          type: object
          x-order: 2
      required:
      - filesAndFolders
      - targetEnvironment
      title: Recover Azure Files and Folders Params.
      type: object
    RecoverAzureParams:
      description: Specifies the recovery options specific to Azure environment.
      properties:
        objects:
          description: Specifies the list of recover Object parameters. This property
            is mandatory for all recovery action types except recover vms. While recovering
            VMs, a user can specify snapshots of VM's or a Protection Group Run details
            to recover all the VM's that are backed up by that Run. For recovering
            files, specifies the object contains the file to recover.
          items:
            $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverVMs
          - RecoverFiles
          type: string
          x-order: 1
        recoverVmParams:
          allOf:
          - $ref: '#/components/schemas/RecoverAzureVmParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Azure VM.
          nullable: true
          type: object
          x-order: 2
        recoverFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/RecoverAzureFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Azure files and folders.
          nullable: true
          type: object
          x-order: 3
        downloadFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/CommonDownloadFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to download files and folders.
          nullable: true
          type: object
          x-order: 4
      required:
      - recoveryAction
      title: Recover Azure environment params.
      type: object
    RecoverAzureVmNewSourceConfig:
      description: Specifies the new destination Source configuration where the VMs
        will be recovered.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the parent source to recover the VMs.
          nullable: true
          type: object
          x-order: 0
        resourceGroup:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the Azure resource group.
          nullable: true
          type: object
          x-order: 1
        storageAccount:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the storage account that will contain the storage
            container
          nullable: true
          type: object
          x-order: 2
        storageContainer:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the storage container within the above storage account.
          nullable: true
          type: object
          x-order: 3
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverAzureVmNewSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          nullable: true
          type: object
          x-order: 4
        storageResourceGroup:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies id of the resource group for the selected storage
            account.
          nullable: true
          type: object
          x-order: 5
        computeOption:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the type of VM (e.g. small, medium, large) when cloning/restoring
            the VM in Azure.
          nullable: true
          type: object
          x-order: 6
        availabilitySet:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the availability set.
          nullable: true
          type: object
          x-order: 7
      required:
      - computeOption
      - networkConfig
      - resourceGroup
      - source
      - storageAccount
      - storageContainer
      - storageResourceGroup
      title: Recover Azure VMs New Source Config.
      type: object
    RecoverAzureVmNewSourceNetworkConfig:
      description: Specifies the network config parameters to be applied for Azure
        VMs if recovering to new Source.
      properties:
        virtualNetwork:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the Virtual Network.
          nullable: true
          type: object
          x-order: 0
        subnet:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the subnet within the above virtual network.
          nullable: true
          type: object
          x-order: 1
        networkResourceGroup:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies id of the resource group for the selected virtual
            network.
          nullable: true
          type: object
          x-order: 2
      required:
      - subnet
      - virtualNetwork
      title: Recover Azure VMs New Source Network configuration.
      type: object
    RecoverAzureVmParams:
      description: Specifies the parameters to recover Azure VM.
      properties:
        recoverProtectionGroupRunsParams:
          description: Specifies the Protection Group Runs params to recover. All
            the VM's that are successfully backed up by specified Runs will be recovered.
            This can be specified along with individual snapshots of VMs. User has
            to make sure that specified Object snapshots and Protection Group Runs
            should not have any intersection. For example, user cannot specify multiple
            Runs which has same Object or an Object snapshot and a Run which has same
            Object's snapshot.
          items:
            $ref: '#/components/schemas/RecoverProtectionGroupRunParams'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kAzure
          type: string
          x-order: 1
        azureTargetParams:
          allOf:
          - $ref: '#/components/schemas/AzureTargetParamsForRecoverVm'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to an Azure target.
          nullable: true
          type: object
          x-order: 2
      required:
      - targetEnvironment
      title: Recover Azure VM params.
      type: object
    RecoverCassandraNoSqlObjectParams:
      description: Specifies the fully qualified object name and other attributes
        of each object to be recovered.
      properties:
        objectName:
          description: Specifies the fully qualified name of the object to be restored.
          nullable: true
          type: string
          x-order: 0
        renameTo:
          description: Specifies the new name to which the object should be renamed
            to after the recovery.
          nullable: true
          type: string
          x-order: 1
        objectProperties:
          description: Specifies the properties to be applied to the object at the
            time of recovery.
          items:
            $ref: '#/components/schemas/NoSqlObjectProperty'
          nullable: true
          type: array
          x-order: 2
      required:
      - objectName
      title: Recover Cassandra Object Params.
      type: object
    RecoverCassandraParams:
      allOf:
      - $ref: '#/components/schemas/CommonNoSqlRecoveryOptions'
      - $ref: '#/components/schemas/RecoverCassandraParams_allOf'
      description: Specifies the parameters to recover Cassandra objects.
      title: Recover Cassandra params.
    RecoverCassandraSnapshotParams:
      allOf:
      - $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
      - $ref: '#/components/schemas/RecoverCassandraSnapshotParams_allOf'
      description: Specifies the snapshot parameters for a protected Cassandra object.
      title: Recover Cassandra Snapshot Params.
    RecoverCouchbaseNoSqlObjectParams:
      description: Specifies the fully qualified object name and other attributes
        of each object to be recovered.
      properties:
        objectName:
          description: Specifies the fully qualified name of the object to be restored.
          nullable: true
          type: string
          x-order: 0
        renameTo:
          description: Specifies the new name to which the object should be renamed,
            at the time of recovery.
          nullable: true
          type: string
          x-order: 1
      required:
      - objectName
      title: Recover Couchbase Object Params.
      type: object
    RecoverCouchbaseParams:
      allOf:
      - $ref: '#/components/schemas/CommonNoSqlRecoveryOptions'
      - $ref: '#/components/schemas/RecoverCouchbaseParams_allOf'
      description: Specifies the parameters to recover Couchbase objects.
      title: Recover Couchbase params.
    RecoverCouchbaseSnapshotParams:
      allOf:
      - $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
      - $ref: '#/components/schemas/RecoverCouchbaseSnapshotParams_allOf'
      description: Specifies the snapshot parameters for a protected Couchbase object.
      title: Recover Couchbase Snapshot Params.
    RecoverElastifileFilesParams:
      description: Specifies the parameters to recover Elastifile files.
      properties:
        filesAndFolders:
          description: Specifies the info about the files and folders to be recovered.
          items:
            $ref: '#/components/schemas/CommonRecoverFileAndFolderInfo'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kElastifile
          - kFlashBlade
          - kGenericNas
          - kGPFS
          - kIsilon
          - kNetapp
          type: string
          x-order: 1
        elastifileTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverElastifileToElastifileFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Elastifile recovery target.
          nullable: true
          type: object
          x-order: 2
        flashbladeTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToFlashbladeFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Flashblade recovery target.
          nullable: true
          type: object
          x-order: 3
        genericNasTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGenericNasFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a generic NAS recovery target.
          nullable: true
          type: object
          x-order: 4
        gpfsTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGpfsFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a GPFS recovery target.
          nullable: true
          type: object
          x-order: 5
        isilonTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToIsilonFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Isilon recovery target.
          nullable: true
          type: object
          x-order: 6
        netappTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToNetappFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Netapp recovery target.
          nullable: true
          type: object
          x-order: 7
      required:
      - filesAndFolders
      - targetEnvironment
      title: Recover Elastifile files Params.
      type: object
    RecoverElastifileNasVolumeParams:
      description: Specifies the parameters to recover Elastifile NAS volumes.
      properties:
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kElastifile
          - kFlashBlade
          - kGenericNas
          - kGPFS
          - kIsilon
          - kNetapp
          - kView
          type: string
          x-order: 0
        elastifileTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverElastifileToElastifileVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Elastifile recovery target.
          nullable: true
          type: object
          x-order: 1
        flashbladeTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToFlashbladeVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Flashblade recovery target.
          nullable: true
          type: object
          x-order: 2
        genericNasTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGenericNasVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Generic NAS recovery target.
          nullable: true
          type: object
          x-order: 3
        gpfsTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGpfsVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a GPFS recovery target.
          nullable: true
          type: object
          x-order: 4
        isilonTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToIsilonVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Isilon recovery target.
          nullable: true
          type: object
          x-order: 5
        netappTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToNetappVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Netapp recovery target.
          nullable: true
          type: object
          x-order: 6
        viewTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverNasVolumeToViewParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Cohesity view recovery target.
          nullable: true
          type: object
          x-order: 7
      required:
      - targetEnvironment
      title: Recover Elastifile NAS Volume Params.
      type: object
    RecoverElastifileParams:
      description: Specifies the recovery options specific to Elastifile environment.
      properties:
        objects:
          description: Specifies the list of recover Object parameters.
          items:
            $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverNasVolume
          - RecoverFiles
          type: string
          x-order: 1
        recoverNasVolumeParams:
          allOf:
          - $ref: '#/components/schemas/RecoverElastifileNasVolumeParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Nas Volumes.
          nullable: true
          type: object
          x-order: 2
        recoverFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/RecoverElastifileFilesParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover files.
          nullable: true
          type: object
          x-order: 3
        downloadFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/CommonDownloadFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to download files and folders.
          nullable: true
          type: object
          x-order: 4
      required:
      - objects
      - recoveryAction
      title: Recover Elastifile Params.
      type: object
    RecoverElastifileToElastifileFilesTargetParams:
      description: Specifies the params of the Elastifile recovery target.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or the original Elastifile target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToElastifileFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the files will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/OriginalElastifileFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if files are being recovered
            to original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Recover Elastifile To Elastifile Files Target Params.
      type: object
    RecoverElastifileToElastifileVolumeTargetParams:
      description: Specifies the params of the Elastifile recovery target.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or the original Elastifile target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToElastifileVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the volumes will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/OriginalElastifileTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if volumes are being recovered
            to original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Recover Elastifile To Elastifile Volume Target Params.
      type: object
    RecoverExchangeAppParams:
      description: Specifies the parameters to recover Sql databases.
      properties:
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kExchange
          type: string
          x-order: 0
        exchangeTargetParams:
          allOf:
          - $ref: '#/components/schemas/ExchangeTargetParamsForRecoverExchangeApp'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to an Exchange host.
          nullable: true
          type: object
          x-order: 1
      required:
      - targetEnvironment
      title: Recover Exchange App params.
      type: object
    RecoverExchangeAppSnapshotParams:
      allOf:
      - $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
      - $ref: '#/components/schemas/RecoverExchangeAppSnapshotParams_allOf'
      description: Specifies the snapshot parameters to recover Exchange databases.
      title: Recover Exchange App Snapshot Params.
    RecoverExchangeParams:
      description: Specifies the recovery options specific to Exchange environment.
      properties:
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverApps
          type: string
          x-order: 0
        recoverAppParams:
          allOf:
          - $ref: '#/components/schemas/RecoverExchangeAppParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Exchange databases.
          nullable: true
          type: object
          x-order: 1
      required:
      - recoveryAction
      title: Recover Exchange environment params.
      type: object
    RecoverFileAndFolderMethod:
      description: Recover File and Folder Method
      properties:
        recoverFileAndFolderMethod:
          description: Recover File and Folder Method.
          enum:
          - AutoDeploy
          - UseExistingAgent
          - UseHypervisorApis
          type: string
          x-order: 0
      title: Recover File and Folder Method
      type: object
    RecoverFlashbladeFilesParams:
      description: Specifies the parameters to recover Flashblade files.
      properties:
        filesAndFolders:
          description: Specifies the info about the files and folders to be recovered.
          items:
            $ref: '#/components/schemas/CommonRecoverFileAndFolderInfo'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kElastifile
          - kFlashBlade
          - kGenericNas
          - kGPFS
          - kIsilon
          - kNetapp
          type: string
          x-order: 1
        flashbladeTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverFlashbladeToFlashbladeFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Flashblade recovery target.
          nullable: true
          type: object
          x-order: 2
        elastifileTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToElastifileFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Elastifile recovery target.
          nullable: true
          type: object
          x-order: 3
        genericNasTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGenericNasFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a generic NAS recovery target.
          nullable: true
          type: object
          x-order: 4
        gpfsTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGpfsFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a GPFS recovery target.
          nullable: true
          type: object
          x-order: 5
        isilonTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToIsilonFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Isilon recovery target.
          nullable: true
          type: object
          x-order: 6
        netappTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToNetappFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Netapp recovery target.
          nullable: true
          type: object
          x-order: 7
      required:
      - filesAndFolders
      - targetEnvironment
      title: Recover Flashblade files Params.
      type: object
    RecoverFlashbladeNasVolumeParams:
      description: Specifies the parameters to recover Flashblade NAS volumes.
      properties:
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kElastifile
          - kFlashBlade
          - kGenericNas
          - kGPFS
          - kIsilon
          - kNetapp
          - kView
          type: string
          x-order: 0
        flashbladeTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverFlashbladeToFlashbladeVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Flashblade recovery target.
          nullable: true
          type: object
          x-order: 1
        elastifileTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToElastifileVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Elastifile recovery target.
          nullable: true
          type: object
          x-order: 2
        genericNasTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGenericNasVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Generic NAS recovery target.
          nullable: true
          type: object
          x-order: 3
        gpfsTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGpfsVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a GPFS recovery target.
          nullable: true
          type: object
          x-order: 4
        isilonTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToIsilonVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Isilon recovery target.
          nullable: true
          type: object
          x-order: 5
        netappTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToNetappVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Netapp recovery target.
          nullable: true
          type: object
          x-order: 6
        viewTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverNasVolumeToViewParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Cohesity view recovery target.
          nullable: true
          type: object
          x-order: 7
      required:
      - targetEnvironment
      title: Recover Flashblade NAS Volume Params.
      type: object
    RecoverFlashbladeParams:
      description: Specifies the recovery options specific to Flashblade environment.
      properties:
        objects:
          description: Specifies the list of recover Object parameters.
          items:
            $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverNasVolume
          - RecoverFiles
          type: string
          x-order: 1
        recoverNasVolumeParams:
          allOf:
          - $ref: '#/components/schemas/RecoverFlashbladeNasVolumeParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Nas Volumes.
          nullable: true
          type: object
          x-order: 2
        recoverFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/RecoverFlashbladeFilesParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover files.
          nullable: true
          type: object
          x-order: 3
        downloadFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/CommonDownloadFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to download files and folders.
          nullable: true
          type: object
          x-order: 4
      required:
      - objects
      - recoveryAction
      title: Recover Flashblade Params.
      type: object
    RecoverFlashbladeToFlashbladeFilesTargetParams:
      description: Specifies the params of the Flashblade recovery target.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or the original Flashblade target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToFlashbladeFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the files will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/OriginalFlashbladeFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if files are being recovered
            to original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Recover Flashblade To Flashblade Files Target Params.
      type: object
    RecoverFlashbladeToFlashbladeVolumeTargetParams:
      description: Specifies the params of the Flashblade recovery target.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or the original Flashblade target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToFlashbladeVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the volumes will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/OriginalFlashbladeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if volumes are being recovered
            to original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Recover Flashblade To Flashblade Volume Target Params.
      type: object
    RecoverGcpFileAndFolderParams:
      description: Specifies the parameters to recover files and folders.
      properties:
        filesAndFolders:
          description: Specifies the info about the files and folders to be recovered.
          items:
            $ref: '#/components/schemas/CommonRecoverFileAndFolderInfo'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kGCP
          type: string
          x-order: 1
        gcpTargetParams:
          allOf:
          - $ref: '#/components/schemas/GcpTargetParamsForRecoverFileAndFolder'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover to a GCP target.
          nullable: true
          type: object
          x-order: 2
      required:
      - filesAndFolders
      - targetEnvironment
      title: Recover GCP File And Folder Params
      type: object
    RecoverGcpParams:
      description: Specifies the recovery options specific to GCP environment.
      properties:
        objects:
          description: Specifies the list of recover Object parameters. This property
            is mandatory for all recovery action types except recover vms. While recovering
            VMs, a user can specify snapshots of VM's or a Protection Group Run details
            to recover all the VM's that are backed up by that Run.
          items:
            $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverVMs
          type: string
          x-order: 1
        recoverVmParams:
          allOf:
          - $ref: '#/components/schemas/RecoverGcpVmParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover GCP VM.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoveryAction
      title: Recover GCP environment params.
      type: object
    RecoverGcpVmNewSourceConfig:
      description: Specifies the new destination Source configuration where the VMs
        will be recovered.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the parent source to recover the VMs.
          nullable: true
          type: object
          x-order: 0
        project:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the GCP project in which to deploy the VM.
          nullable: true
          type: object
          x-order: 1
        region:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the GCP region in which to deploy the VM.
          nullable: true
          type: object
          x-order: 2
        availabilityZone:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the GCP zone in which to deploy the VM.
          nullable: true
          type: object
          x-order: 3
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverGcpVmNewSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          nullable: true
          type: object
          x-order: 4
      required:
      - availabilityZone
      - networkConfig
      - project
      - region
      - source
      title: Recover GCP VMs New Source Config.
      type: object
    RecoverGcpVmNewSourceNetworkConfig:
      description: Specifies the network config parameters to be applied for GCP VMs
        if recovering to new Source.
      properties:
        subnet:
          allOf:
          - $ref: '#/components/schemas/GcpVpcSubnetConfig'
          - type: object
            x-nullable: true
          description: Specifies the subnet.
          nullable: true
          type: object
          x-order: 0
      required:
      - subnet
      title: Recover GCP VMs New Source Network configuration.
      type: object
    RecoverGcpVmParams:
      description: Specifies the parameters to recover GCP VM.
      properties:
        recoverProtectionGroupRunsParams:
          description: Specifies the Protection Group Runs params to recover. All
            the VM's that are successfully backed up by specified Runs will be recovered.
            This can be specified along with individual snapshots of VMs. User has
            to make sure that specified Object snapshots and Protection Group Runs
            should not have any intersection. For example, user cannot specify multiple
            Runs which has same Object or an Object snapshot and a Run which has same
            Object's snapshot.
          items:
            $ref: '#/components/schemas/RecoverProtectionGroupRunParams'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kGCP
          type: string
          x-order: 1
        gcpTargetParams:
          allOf:
          - $ref: '#/components/schemas/GcpTargetParamsForRecoverVm'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to a GCP target.
          nullable: true
          type: object
          x-order: 2
      required:
      - targetEnvironment
      title: Recover GCP VM params.
      type: object
    RecoverGenericNasFilesParams:
      description: Specifies the parameters to recover Generic Nas files.
      properties:
        filesAndFolders:
          description: Specifies the info about the files and folders to be recovered.
          items:
            $ref: '#/components/schemas/CommonRecoverFileAndFolderInfo'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kElastifile
          - kFlashBlade
          - kGenericNas
          - kGPFS
          - kIsilon
          - kNetapp
          type: string
          x-order: 1
        genericNasTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverGenericNasToGenericNasFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Generic Nas recovery target.
          nullable: true
          type: object
          x-order: 2
        elastifileTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToElastifileFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Elastifile recovery target.
          nullable: true
          type: object
          x-order: 3
        flashbladeTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToFlashbladeFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Flashblade recovery target.
          nullable: true
          type: object
          x-order: 4
        gpfsTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGpfsFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a GPFS recovery target.
          nullable: true
          type: object
          x-order: 5
        isilonTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToIsilonFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Isilon recovery target.
          nullable: true
          type: object
          x-order: 6
        netappTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToNetappFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Netapp recovery target.
          nullable: true
          type: object
          x-order: 7
      required:
      - filesAndFolders
      - targetEnvironment
      title: Recover Generic Nas files Params.
      type: object
    RecoverGenericNasNasVolumeParams:
      description: Specifies the parameters to recover Generic NAS volumes.
      properties:
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kElastifile
          - kFlashBlade
          - kGenericNas
          - kGPFS
          - kIsilon
          - kNetapp
          - kView
          type: string
          x-order: 0
        genericNasTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverGenericNasToGenericNasVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Generic NAS recovery target.
          nullable: true
          type: object
          x-order: 1
        elastifileTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToElastifileVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Elastifile recovery target.
          nullable: true
          type: object
          x-order: 2
        flashbladeTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToFlashbladeVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Flashblade recovery target.
          nullable: true
          type: object
          x-order: 3
        gpfsTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGpfsVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a GPFS recovery target.
          nullable: true
          type: object
          x-order: 4
        isilonTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToIsilonVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Isilon recovery target.
          nullable: true
          type: object
          x-order: 5
        netappTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToNetappVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Netapp recovery target.
          nullable: true
          type: object
          x-order: 6
        viewTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverNasVolumeToViewParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Cohesity view recovery target.
          nullable: true
          type: object
          x-order: 7
      required:
      - targetEnvironment
      title: Recover Generic NAS Volume Params.
      type: object
    RecoverGenericNasParams:
      description: Specifies the recovery options specific to Generic NAS environment.
      properties:
        objects:
          description: Specifies the list of recover Object parameters.
          items:
            $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverNasVolume
          - RecoverFiles
          type: string
          x-order: 1
        recoverNasVolumeParams:
          allOf:
          - $ref: '#/components/schemas/RecoverGenericNasNasVolumeParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Nas Volumes.
          nullable: true
          type: object
          x-order: 2
        recoverFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/RecoverGenericNasFilesParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover files.
          nullable: true
          type: object
          x-order: 3
        downloadFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/CommonDownloadFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to download files and folders.
          nullable: true
          type: object
          x-order: 4
      required:
      - objects
      - recoveryAction
      title: Recover Generic NAS Params.
      type: object
    RecoverGenericNasToGenericNasFilesTargetParams:
      description: Specifies the params of the Generic Nas recovery target.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or the original Generic Nas target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGenericNasFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the files will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/OriginalGenericNasFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if files are being recovered
            to original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Recover Generic Nas To Generic Nas Files Target Params.
      type: object
    RecoverGenericNasToGenericNasVolumeTargetParams:
      description: Specifies the params of the Generic NAS recovery target.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or the original Generic NAS target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGenericNasVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the volumes will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/OriginalGenericNasTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if volumes are being recovered
            to original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Recover Generic NAS To Generic NAS Volume Target Params.
      type: object
    RecoverGpfsFilesParams:
      description: Specifies the parameters to recover Gpfs files.
      properties:
        filesAndFolders:
          description: Specifies the info about the files and folders to be recovered.
          items:
            $ref: '#/components/schemas/CommonRecoverFileAndFolderInfo'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kElastifile
          - kFlashBlade
          - kGenericNas
          - kGPFS
          - kIsilon
          - kNetapp
          type: string
          x-order: 1
        gpfsTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverGpfsToGpfsFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a GPFS recovery target.
          nullable: true
          type: object
          x-order: 2
        elastifileTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToElastifileFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Elastifile recovery target.
          nullable: true
          type: object
          x-order: 3
        flashbladeTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToFlashbladeFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Flashblade recovery target.
          nullable: true
          type: object
          x-order: 4
        genericNasTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGenericNasFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a generic NAS recovery target.
          nullable: true
          type: object
          x-order: 5
        isilonTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToIsilonFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Isilon recovery target.
          nullable: true
          type: object
          x-order: 6
        netappTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToNetappFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Netapp recovery target.
          nullable: true
          type: object
          x-order: 7
      required:
      - filesAndFolders
      - targetEnvironment
      title: Recover Gpfs files Params.
      type: object
    RecoverGpfsNasVolumeParams:
      description: Specifies the parameters to recover GPFS NAS volumes.
      properties:
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kElastifile
          - kFlashBlade
          - kGenericNas
          - kGPFS
          - kIsilon
          - kNetapp
          - kView
          type: string
          x-order: 0
        gpfsTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverGpfsToGpfsVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a GPFS recovery target.
          nullable: true
          type: object
          x-order: 1
        elastifileTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToElastifileVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Elastifile recovery target.
          nullable: true
          type: object
          x-order: 2
        flashbladeTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToFlashbladeVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Flashblade recovery target.
          nullable: true
          type: object
          x-order: 3
        genericNasTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGenericNasVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a generic NAS recovery target.
          nullable: true
          type: object
          x-order: 4
        isilonTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToIsilonVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Isilon recovery target.
          nullable: true
          type: object
          x-order: 5
        netappTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToNetappVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Netapp recovery target.
          nullable: true
          type: object
          x-order: 6
        viewTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverNasVolumeToViewParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Cohesity view recovery target.
          nullable: true
          type: object
          x-order: 7
      required:
      - targetEnvironment
      title: Recover GPFS NAS Volume Params.
      type: object
    RecoverGpfsParams:
      description: Specifies the recovery options specific to GPFS environment.
      properties:
        objects:
          description: Specifies the list of recover Object parameters.
          items:
            $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverNasVolume
          - RecoverFiles
          type: string
          x-order: 1
        recoverNasVolumeParams:
          allOf:
          - $ref: '#/components/schemas/RecoverGpfsNasVolumeParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Nas Volumes.
          nullable: true
          type: object
          x-order: 2
        recoverFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/RecoverGpfsFilesParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover files.
          nullable: true
          type: object
          x-order: 3
        downloadFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/CommonDownloadFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to download files and folders.
          nullable: true
          type: object
          x-order: 4
      required:
      - objects
      - recoveryAction
      title: Recover GPFS Params.
      type: object
    RecoverGpfsToGpfsFilesTargetParams:
      description: Specifies the params of the GPFS recovery target.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or the original GPFS target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGpfsFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the files will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/OriginalGpfsFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if files are being recovered
            to original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Recover GPFS To GPFS Files Target Params.
      type: object
    RecoverGpfsToGpfsVolumeTargetParams:
      description: Specifies the params of the GPFS recovery target.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or the original GPFS target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGpfsVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the volumes will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/OriginalGpfsTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if volumes are being recovered
            to original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Recover GPFS To GPFS NAS Volume Target Params.
      type: object
    RecoverHbaseNoSqlObjectParams:
      description: Specifies the fully qualified object name and other attributes
        of each object to be recovered.
      properties:
        objectName:
          description: Specifies the fully qualified name of the object to be restored.
          nullable: true
          type: string
          x-order: 0
        renameTo:
          description: Specifies the new name to which the object should be renamed.
            at the time of recovery.
          nullable: true
          type: string
          x-order: 1
      required:
      - objectName
      title: Recover Hbase Object Params.
      type: object
    RecoverHbaseParams:
      allOf:
      - $ref: '#/components/schemas/CommonNoSqlRecoveryOptions'
      - $ref: '#/components/schemas/RecoverHbaseParams_allOf'
      description: Specifies the parameters to recover Hbase objects.
      title: Recover Hbase params.
    RecoverHbaseSnapshotParams:
      allOf:
      - $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
      - $ref: '#/components/schemas/RecoverHbaseSnapshotParams_allOf'
      description: Specifies the snapshot parameters for a protected Hbase object.
      title: Recover Hbase Snapshot Params.
    RecoverHdfsNoSqlObjectParams:
      description: Specifies the fully qualified object name and other attributes
        of each object to be recovered.
      properties:
        objectName:
          description: Specifies the fully qualified name of the object to be restored.
          nullable: true
          type: string
          x-order: 0
      required:
      - objectName
      title: Recover Hdfs Object Params.
      type: object
    RecoverHdfsParams:
      allOf:
      - $ref: '#/components/schemas/CommonNoSqlRecoveryOptions'
      - $ref: '#/components/schemas/RecoverHdfsParams_allOf'
      description: Specifies the parameters to recover HDFS objects.
      title: Recover HDFS params.
    RecoverHdfsSnapshotParams:
      allOf:
      - $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
      - $ref: '#/components/schemas/RecoverHdfsSnapshotParams_allOf'
      description: Specifies the snapshot parameters for a protected Hdfs object.
      title: Recover Hdfs Snapshot Params.
    RecoverHiveNoSqlObjectParams:
      description: Specifies the fully qualified object name and other attributes
        of each object to be recovered.
      properties:
        objectName:
          description: Specifies the fully qualified name of the object to be restored.
          nullable: true
          type: string
          x-order: 0
      required:
      - objectName
      title: Recover Hive Object Params.
      type: object
    RecoverHiveParams:
      allOf:
      - $ref: '#/components/schemas/CommonNoSqlRecoveryOptions'
      - $ref: '#/components/schemas/RecoverHiveParams_allOf'
      description: Specifies the type of recover action to be performed.
      title: Recover Hive params.
    RecoverHiveSnapshotParams:
      allOf:
      - $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
      - $ref: '#/components/schemas/RecoverHiveSnapshotParams_allOf'
      description: Specifies the snapshot parameters for a protected Hive object.
      title: Recover Hive Snapshot Params.
    RecoverHyperVFileAndFolderParams:
      description: Specifies the parameters to recover files and folders.
      properties:
        filesAndFolders:
          description: Specifies the info about the files and folders to be recovered.
          items:
            $ref: '#/components/schemas/CommonRecoverFileAndFolderInfo'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kHyperV
          type: string
          x-order: 1
        hypervTargetParams:
          allOf:
          - $ref: '#/components/schemas/HyperVTargetParamsForRecoverFileAndFolder'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover to a HyperV target.
          nullable: true
          type: object
          x-order: 2
      required:
      - filesAndFolders
      - targetEnvironment
      title: Recover HyperV File And Folder Params
      type: object
    RecoverHyperVParams:
      description: Specifies the recovery options specific to HyperV environment.
      properties:
        objects:
          description: Specifies the list of recover Object parameters. This property
            is mandatory for all recovery action types except recover vms. While recovering
            VMs, a user can specify snapshots of VM's or a Protection Group Run details
            to recover all the VM's that are backed up by that Run. For recovering
            files, specifies the object contains the file to recover.
          items:
            $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recovery action to be performed.
          enum:
          - RecoverVMs
          - InstantVolumeMount
          - RecoverFiles
          type: string
          x-order: 1
        recoverVmParams:
          allOf:
          - $ref: '#/components/schemas/RecoverHyperVVmParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover HyperV VM.
          nullable: true
          type: object
          x-order: 2
        mountVolumeParams:
          allOf:
          - $ref: '#/components/schemas/MountHyperVVolumeParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to mount HyperV Volumes.
          nullable: true
          type: object
          x-order: 3
        recoverFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/RecoverHyperVFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover files and folders.
          nullable: true
          type: object
          x-order: 4
        downloadFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/CommonDownloadFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to download files and folders.
          nullable: true
          type: object
          x-order: 5
      required:
      - recoveryAction
      title: Recover HyperV environment params.
      type: object
    RecoverHyperVVmNewSourceConfig:
      description: Specifies the new destination Source configuration where the VMs
        will be recovered.
      properties:
        sourceType:
          description: Specifies the type of HyperV source to which the VMs are being
            restored.
          enum:
          - kSCVMMServer
          - kStandaloneHost
          - kStandaloneCluster
          nullable: true
          type: string
          x-order: 0
        scvmmServerParams:
          $ref: '#/components/schemas/RecoverHyperVVmSCVMMSourceConfig'
        standaloneHostParams:
          $ref: '#/components/schemas/RecoverHyperVVmStandaloneHostSourceConfig'
        standaloneClusterParams:
          $ref: '#/components/schemas/RecoverHyperVVmStandaloneClusterSourceConfig'
      required:
      - sourceType
      title: Recover HyperV VMs New Source Config.
      type: object
    RecoverHyperVVmNewSourceNetworkConfig:
      description: Specifies the network config parameters to be applied for HyperV
        VMs if recovering to new Source.
      properties:
        detachNetwork:
          description: If this is set to true, then the network will be detached from
            the recovered VMs. All the other networking parameters set will be ignored
            if set to true. Default value is false.
          nullable: true
          type: boolean
          x-order: 0
        virtualSwitch:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the virtual switch that will attached to all the
            network interfaces of the VMs being recovered. This parameter is mandatory
            if detach network is specified as false.
          nullable: true
          type: object
          x-order: 1
      title: Recover HyperV VMs New Source Network configuration.
      type: object
    RecoverHyperVVmOriginalSourceConfig:
      description: Specifies the Source configuration if VM's are being recovered
        to Original Source.
      properties:
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverHyperVVmOriginalSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          nullable: true
          type: object
          x-order: 0
      title: Recover HyperV VMs Original Source Config.
      type: object
    RecoverHyperVVmOriginalSourceNetworkConfig:
      description: Specifies the network config parameters to be applied for HyperV
        VMs if recovering to original Source.
      properties:
        detachNetwork:
          description: If this is set to true, then the network will be detached from
            the recovered VMs. Default value is false.
          nullable: true
          type: boolean
          x-order: 0
      title: Recover HyperV VMs Original Source Network configuration.
      type: object
    RecoverHyperVVmParams:
      description: Specifies the parameters to recover VMs.
      properties:
        recoverProtectionGroupRunsParams:
          description: Specifies the Protection Group Runs params to recover. All
            the VM's that are successfully backed up by specified Runs will be recovered.
            This can be specified along with individual snapshots of VMs. User has
            to make sure that specified Object snapshots and Protection Group Runs
            should not have any intersection. For example, user cannot specify multiple
            Runs which has same Object or an Object snapshot and a Run which has same
            Object's snapshot.
          items:
            $ref: '#/components/schemas/RecoverProtectionGroupRunParams'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kHyperV
          type: string
          x-order: 1
        hypervTargetParams:
          allOf:
          - $ref: '#/components/schemas/HyperVTargetParamsForRecoverVm'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to a HyperV target.
          nullable: true
          type: object
          x-order: 2
      required:
      - targetEnvironment
      title: Recover VMs params.
      type: object
    RecoverHyperVVmSCVMMSourceConfig:
      description: Specifies the new destination Source configuration where the VMs
        will be recovered.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the parent source to recover the VMs.
          nullable: true
          type: object
          x-order: 0
        host:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the HyperV host where the recovered VMs will be attached.
            For standalone host targets, the host must be the same as the source.
          nullable: true
          type: object
          x-order: 1
        volume:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the datastore object where the VMs' files should
            be recovered to.
          nullable: true
          type: object
          x-order: 2
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverHyperVVmNewSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          nullable: true
          type: object
          x-order: 3
      required:
      - host
      - source
      - volume
      title: Recover HyperV VMs New SCVMM Source Config.
      type: object
    RecoverHyperVVmStandaloneClusterSourceConfig:
      description: Specifies the new destination Source configuration where the VMs
        will be recovered.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the parent source to recover the VMs.
          nullable: true
          type: object
          x-order: 0
        host:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the HyperV host where the recovered VMs will be attached.
            For standalone host targets, the host must be the same as the source.
          nullable: true
          type: object
          x-order: 1
        volume:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the datastore object where the VMs' files should
            be recovered to.
          nullable: true
          type: object
          x-order: 2
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverHyperVVmNewSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          nullable: true
          type: object
          x-order: 3
      required:
      - host
      - source
      - volume
      title: Recover HyperV VMs New Standalone Cluster Source Config.
      type: object
    RecoverHyperVVmStandaloneHostSourceConfig:
      description: Specifies the new destination Source configuration where the VMs
        will be recovered.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the parent source to recover the VMs.
          nullable: true
          type: object
          x-order: 0
        volume:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the datastore object where the VMs' files should
            be recovered to.
          nullable: true
          type: object
          x-order: 1
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverHyperVVmNewSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          nullable: true
          type: object
          x-order: 2
      required:
      - source
      - volume
      title: Recover HyperV VMs New Standalone Host Source Config.
      type: object
    RecoverIsilonFilesParams:
      description: Specifies the parameters to recover Isilon files.
      properties:
        filesAndFolders:
          description: Specifies the info about the files and folders to be recovered.
          items:
            $ref: '#/components/schemas/CommonRecoverFileAndFolderInfo'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kElastifile
          - kFlashBlade
          - kGenericNas
          - kGPFS
          - kIsilon
          - kNetapp
          type: string
          x-order: 1
        isilonTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverIsilonToIsilonFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Isilon recovery target.
          nullable: true
          type: object
          x-order: 2
        elastifileTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToElastifileFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Elastifile recovery target.
          nullable: true
          type: object
          x-order: 3
        flashbladeTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToFlashbladeFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Flashblade recovery target.
          nullable: true
          type: object
          x-order: 4
        genericNasTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGenericNasFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a generic NAS recovery target.
          nullable: true
          type: object
          x-order: 5
        gpfsTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGpfsFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a GPFS recovery target.
          nullable: true
          type: object
          x-order: 6
        netappTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToNetappFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Netapp recovery target.
          nullable: true
          type: object
          x-order: 7
      required:
      - filesAndFolders
      - targetEnvironment
      title: Recover Isilon files Params.
      type: object
    RecoverIsilonNasVolumeParams:
      description: Specifies the parameters to recover Isilon NAS volumes.
      properties:
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kElastifile
          - kFlashBlade
          - kGenericNas
          - kGPFS
          - kIsilon
          - kNetapp
          - kView
          type: string
          x-order: 0
        isilonTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverIsilonToIsilonVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Isilon recovery target.
          nullable: true
          type: object
          x-order: 1
        elastifileTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToElastifileVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Elastifile recovery target.
          nullable: true
          type: object
          x-order: 2
        flashbladeTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToFlashbladeVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Flashblade recovery target.
          nullable: true
          type: object
          x-order: 3
        genericNasTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGenericNasVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a generic NAS recovery target.
          nullable: true
          type: object
          x-order: 4
        gpfsTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGpfsVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a GPFS recovery target.
          nullable: true
          type: object
          x-order: 5
        netappTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToNetappVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Netapp recovery target.
          nullable: true
          type: object
          x-order: 6
        viewTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverNasVolumeToViewParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Cohesity view recovery target.
          nullable: true
          type: object
          x-order: 7
      required:
      - targetEnvironment
      title: Recover Isilon NAS Volume Params.
      type: object
    RecoverIsilonParams:
      description: Specifies the recovery options specific to Isilon environment.
      properties:
        objects:
          description: Specifies the list of recover Object parameters.
          items:
            $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverNasVolume
          - RecoverFiles
          type: string
          x-order: 1
        recoverNasVolumeParams:
          allOf:
          - $ref: '#/components/schemas/RecoverIsilonNasVolumeParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover NAS Volumes.
          nullable: true
          type: object
          x-order: 2
        recoverFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/RecoverIsilonFilesParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover files.
          nullable: true
          type: object
          x-order: 3
        downloadFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/CommonDownloadFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to download files and folders.
          nullable: true
          type: object
          x-order: 4
      required:
      - objects
      - recoveryAction
      title: Recover Isilon Params.
      type: object
    RecoverIsilonToIsilonFilesTargetParams:
      description: Specifies the params of the Isilon recovery target.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or the original Isilon target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToIsilonFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the files will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/OriginalIsilonFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if files are being recovered
            to original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Recover Isilon To Isilon Files Target Params.
      type: object
    RecoverIsilonToIsilonVolumeTargetParams:
      description: Specifies the params of the Isilon recovery target.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or the original Isilon target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToIsilonVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the volumes will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/OriginalIsilonTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if volumes are being recovered
            to original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Recover Isilon To Isilon Volume Target Params.
      type: object
    RecoverKubernetesNamespaceParams:
      description: Specifies the parameters to recover Kubernetes Namespaces.
      properties:
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kKubernetes
          type: string
          x-order: 0
        kubernetesTargetParams:
          allOf:
          - $ref: '#/components/schemas/KubernetesTargetParamsForRecoverKubernetesNamespace'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to a Kubernetes host.
          nullable: true
          type: object
          x-order: 1
      required:
      - targetEnvironment
      title: Recover Kubernetes Namespace params.
      type: object
    RecoverKubernetesParams:
      description: Specifies the recovery options specific to Kubernetes environment.
      properties:
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverNamespaces
          type: string
          x-order: 0
        recoverNamespaceParams:
          allOf:
          - $ref: '#/components/schemas/RecoverKubernetesNamespaceParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Kubernetes Namespaces.
          nullable: true
          type: object
          x-order: 1
      required:
      - recoveryAction
      title: Recover Kubernetes environment params.
      type: object
    RecoverKvmParams:
      description: Specifies the recovery options specific to KVM environment.
      properties:
        objects:
          description: Specifies the list of recover Object parameters. This property
            is mandatory for all recovery action types except recover vms. While recovering
            VMs, a user can specify snapshots of VM's or a Protection Group Run details
            to recover all the VM's that are backed up by that Run.
          items:
            $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recovery action to be performed.
          enum:
          - RecoverVMs
          type: string
          x-order: 1
        recoverVmParams:
          allOf:
          - $ref: '#/components/schemas/RecoverKvmVmParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover KVM VM.
          type: object
          x-order: 2
        downloadFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/CommonDownloadFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to download files and folders.
          nullable: true
          type: object
          x-order: 3
      required:
      - recoveryAction
      title: Recover KVM environment params.
      type: object
    RecoverKvmVmNewNetworkConfig:
      description: Specifies the network config parameters to be applied for KVM VMs
        if recovering to a new source with a new network.
      properties:
        networkPortGroup:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the network port group (i.e, either a standard switch
            port group or a distributed port group) that will attached to the recovered
            Object. This parameter is mandatory if detach network is specified as
            false.
          type: object
          x-order: 0
        vnicProfile:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies VNic profile that will be attached to the restored
            object.
          type: object
          x-order: 1
      title: Recover KVM VMs New Network configuration.
      type: object
    RecoverKvmVmNewSourceConfig:
      description: Specifies the new destination Source configuration where the VMs
        will be recovered.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the parent source to recover the VMs.
          type: object
          x-order: 0
        cluster:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the resource (KVMH host) to which the restored VM
            will be attached
          type: object
          x-order: 1
        dataCenter:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the datacenter where the VM's files should be restored
            to.
          type: object
          x-order: 2
        storageDomain:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the Storage Domain where the VM's disk should be
            restored to.
          type: object
          x-order: 3
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverKvmVmNewSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          type: object
          x-order: 4
      required:
      - cluster
      - dataCenter
      - source
      - storageDomain
      title: Recover KVM VMs New Source Config.
      type: object
    RecoverKvmVmNewSourceNetworkConfig:
      description: Specifies the network config parameters to be applied for KVM VMs
        if recovering to new Source.
      properties:
        detachNetwork:
          description: If this is set to true, then the network will be detached from
            the recovered VMs. All the other networking parameters set will be ignored
            if set to true. Default value is false.
          nullable: true
          type: boolean
          x-order: 0
        newNetworkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverKvmVmNewNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the new network configuration of the Kvm recovery.
          type: object
          x-order: 1
      title: Recover KVM VMs New Source Network configuration.
      type: object
    RecoverKvmVmOriginalSourceConfig:
      description: Specifies the Source configuration if VM's are being recovered
        to Original Source.
      properties:
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverKvmVmOriginalSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          nullable: true
          type: object
          x-order: 0
      title: Recover KVM VMs Original Source Config.
      type: object
    RecoverKvmVmOriginalSourceNetworkConfig:
      description: Specifies the network config parameters to be applied for KVM VMs
        if recovering to original Source.
      properties:
        detachNetwork:
          description: If this is set to true, then the network will be detached from
            the recovered VMs. All the other networking parameters set will be ignored
            if set to true. Default value is false.
          nullable: true
          type: boolean
          x-order: 0
      title: Recover KVM VMs Original Source Network configuration.
      type: object
    RecoverKvmVmParams:
      description: Specifies the parameters to recover VMs.
      properties:
        recoverProtectionGroupRunsParams:
          description: Specifies the Protection Group Runs params to recover. All
            the VM's that are successfully backed up by specified Runs will be recovered.
            This can be specified along with individual snapshots of VMs. User has
            to make sure that specified Object snapshots and Protection Group Runs
            should not have any intersection. For example, user cannot specify multiple
            Runs which has same Object or an Object snapshot and a Run which has same
            Object's snapshot.
          items:
            $ref: '#/components/schemas/RecoverProtectionGroupRunParams'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kKVM
          type: string
          x-order: 1
        kvmTargetParams:
          allOf:
          - $ref: '#/components/schemas/KvmTargetParamsForRecoverVm'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to a KVM target.
          nullable: true
          type: object
          x-order: 2
      required:
      - targetEnvironment
      title: Recover VMs params.
      type: object
    RecoverMailboxParams:
      description: Specifies the parameters to recover an Office 365 Mailbox.
      properties:
        objects:
          description: Specifies a list of Mailbox params associated with the objects
            to recover.
          items:
            $ref: '#/components/schemas/ObjectMailboxParam'
          nullable: true
          type: array
          x-order: 0
        targetMailbox:
          allOf:
          - $ref: '#/components/schemas/TargetMailboxParam'
          - type: object
            x-nullable: true
          description: Specifies the target Mailbox to recover to. If not specified,
            the objects will be recovered to original location.
          type: object
          x-order: 1
        continueOnError:
          description: Specifies whether to continue recovering other Mailboxes if
            one of Mailbox failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 2
      required:
      - objects
      type: object
    RecoverMongodbNoSqlObjectParams:
      description: Specifies the fully qualified object name and other attributes
        of each object to be recovered.
      properties:
        objectName:
          description: Specifies the fully qualified name of the object to be restored.
          nullable: true
          type: string
          x-order: 0
        renameTo:
          description: Specifies the new name to which the object should be renamed.
            at the time of recovery.
          nullable: true
          type: string
          x-order: 1
        objectProperties:
          description: Specifies the properties to be applied to the object at the
            time of recovery.
          items:
            $ref: '#/components/schemas/NoSqlObjectProperty'
          nullable: true
          type: array
          x-order: 2
      required:
      - objectName
      title: Recover MongoDB Object Params.
      type: object
    RecoverMongodbParams:
      allOf:
      - $ref: '#/components/schemas/CommonNoSqlRecoveryOptions'
      - $ref: '#/components/schemas/RecoverMongodbParams_allOf'
      description: Specifies the parameters to recover MongoDB objects.
      title: Recover MongoDB params.
    RecoverMongodbSnapshotParams:
      allOf:
      - $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
      - $ref: '#/components/schemas/RecoverMongodbSnapshotParams_allOf'
      description: Specifies the snapshot parameters for a protected Mongodb object.
      title: Recover MongoDB Snapshot Params.
    RecoverMsGroupParams:
      description: Specifies the parameters to recover Microsoft 365 Group.
      properties:
        msGroups:
          description: Specifies a list of groups getting restored.
          items:
            $ref: '#/components/schemas/MsGroupParam'
          nullable: true
          type: array
          x-order: 0
        restoreToOriginal:
          description: Specifies whether or not all groups are restored to original
            location.
          nullable: true
          type: boolean
          x-order: 1
        targetGroup:
          description: Specifies target group nickname in case restoreToOriginal is
            false. This needs to be specifid when restoreToOriginal is false.
          nullable: true
          type: string
          x-order: 2
        targetGroupName:
          description: Specifies target group name in case restore_to_original is
            false. This needs to be specifid when restoreToOriginal is false. However,
            this will be ignored if restoring to alternate existing group (i.e. to
            a group the nickname of which is same as the one supplied by the end user).
          nullable: true
          type: string
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other MS groups if
            one of MS groups failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
      required:
      - msGroups
      type: object
    RecoverMsTeamParams:
      description: Specifies the parameters to recover Microsoft 365 Teams.
      properties:
        objects:
          description: Specifies a list of Microsoft 365 Teams params associated with
            objects to recover.
          items:
            $ref: '#/components/schemas/ObjectMsTeamParam'
          nullable: true
          type: array
          x-order: 0
        targetMsTeam:
          allOf:
          - $ref: '#/components/schemas/TargetMsTeamParam'
          - type: object
            x-nullable: true
          description: This field is deprecated. Use targetTeamNickName and targetTeamFullName
            instead.
          type: object
          x-order: 1
        targetTeamNickName:
          description: Specifies target team nickname in case restoreToOriginal is
            false.
          nullable: true
          type: string
          x-order: 2
        targetTeamFullName:
          description: Specifies target team name in case restoreToOriginal is false.
            This will be ignored if restoring to alternate existing team (i.e. to
            a team the nickname of which is same as the one supplied by the end user).
          nullable: true
          type: string
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other teams, if some
            of the teams fail to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
      required:
      - objects
      type: object
    RecoverNasVolumeToViewParams:
      description: Specifies the recovery target configuration if NAS volumes are
        being recovered as a Cohesity view.
      properties:
        viewName:
          description: Specifies the name of the view.
          nullable: true
          type: string
          x-order: 0
        qosPolicy:
          $ref: '#/components/schemas/NasQosPolicy'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      title: Recover NAS Volume as View Params.
      type: object
    RecoverNetappFilesParams:
      description: Specifies the parameters to recover Netapp files.
      properties:
        filesAndFolders:
          description: Specifies the list of info about the netapp files and folders
            to be recovered.
          items:
            $ref: '#/components/schemas/NetappRecoverFileAndFolderInfo'
          nullable: true
          type: array
          x-order: 0
        isFromSourceInitiatedProtection:
          description: Specifies if the snapshot trying to recover is from a source
            initiated protection.
          nullable: true
          type: boolean
          x-order: 1
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kElastifile
          - kFlashBlade
          - kGenericNas
          - kGPFS
          - kIsilon
          - kNetapp
          type: string
          x-order: 2
        netappTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverNetappToNetappFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Netapp recovery target.
          nullable: true
          type: object
          x-order: 3
        elastifileTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToElastifileFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Elastifile recovery target.
          nullable: true
          type: object
          x-order: 4
        flashbladeTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToFlashbladeFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Flashblade recovery target.
          nullable: true
          type: object
          x-order: 5
        genericNasTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGenericNasFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a generic NAS recovery target.
          nullable: true
          type: object
          x-order: 6
        gpfsTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGpfsFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a GPFS recovery target.
          nullable: true
          type: object
          x-order: 7
        isilonTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToIsilonFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Isilon recovery target.
          nullable: true
          type: object
          x-order: 8
      required:
      - filesAndFolders
      - targetEnvironment
      title: Recover Netapp files Params.
      type: object
    RecoverNetappNasVolumeParams:
      description: Specifies the parameters to recover Netapp NAS volumes.
      properties:
        isFromSourceInitiatedProtection:
          description: Specifies if the snapshot trying to recover is from a source
            initiated protection.
          nullable: true
          type: boolean
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kElastifile
          - kFlashBlade
          - kGenericNas
          - kGPFS
          - kIsilon
          - kNetapp
          - kView
          type: string
          x-order: 1
        netappTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverNetappToNetappVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Netapp recovery target.
          nullable: true
          type: object
          x-order: 2
        elastifileTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToElastifileVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Elastifile recovery target.
          nullable: true
          type: object
          x-order: 3
        flashbladeTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToFlashbladeVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Flashblade recovery target.
          nullable: true
          type: object
          x-order: 4
        genericNasTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGenericNasVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a generic NAS recovery target.
          nullable: true
          type: object
          x-order: 5
        gpfsTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToGpfsVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a GPFS recovery target.
          nullable: true
          type: object
          x-order: 6
        isilonTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToIsilonVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the params for an Isilon recovery target.
          nullable: true
          type: object
          x-order: 7
        viewTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverNasVolumeToViewParams'
          - type: object
            x-nullable: true
          description: Specifies the params for a Cohesity view recovery target.
          nullable: true
          type: object
          x-order: 8
      required:
      - targetEnvironment
      title: Recover Netapp NAS Volume Params.
      type: object
    RecoverNetappParams:
      description: Specifies the recovery options specific to Netapp environment.
      properties:
        objects:
          description: Specifies the list of recover Object parameters.
          items:
            $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverNasVolume
          - RecoverFiles
          type: string
          x-order: 1
        recoverNasVolumeParams:
          allOf:
          - $ref: '#/components/schemas/RecoverNetappNasVolumeParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Nas Volumes.
          nullable: true
          type: object
          x-order: 2
        recoverFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/RecoverNetappFilesParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover files.
          nullable: true
          type: object
          x-order: 3
        downloadFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/CommonDownloadFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to download files and folders.
          nullable: true
          type: object
          x-order: 4
      required:
      - objects
      - recoveryAction
      title: Recover Netapp Params.
      type: object
    RecoverNetappToNetappFilesTargetParams:
      description: Specifies the params of the Netapp recovery target.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or the original Netapp target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToNetappFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the files will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/OriginalNetappFilesTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if files are being recovered
            to original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Recover Netapp To Netapp Files Target Params.
      type: object
    RecoverNetappToNetappVolumeTargetParams:
      description: Specifies the params of the Netapp recovery target.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or the original Netapp target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverOtherNasToNetappVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the volumes will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/OriginalNetappTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if volumes are being recovered
            to original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Recover Netapp To Netapp Volume Target Params.
      type: object
    RecoverO365Params:
      description: Specifies the recovery options specific to Office 365 environment.
      properties:
        objects:
          description: Specifies the list of recover Object parameters.
          items:
            $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recovery action to be performed.
          enum:
          - RecoverMailbox
          - RecoverOneDrive
          - RecoverSharePoint
          - RecoverPublicFolders
          - RecoverMsGroup
          - RecoverMsTeam
          type: string
          x-order: 1
        recoverOneDriveParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOneDriveParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Office 365 One Drive.
          type: object
          x-order: 2
        recoverMailboxParams:
          allOf:
          - $ref: '#/components/schemas/RecoverMailboxParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Office 365 Mailbox.
          type: object
          x-order: 3
        recoverPublicFoldersParams:
          allOf:
          - $ref: '#/components/schemas/RecoverPublicFoldersParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Office 365 Public Folders.
          type: object
          x-order: 4
        recoverMsGroupParams:
          allOf:
          - $ref: '#/components/schemas/RecoverMsGroupParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Microsoft 365 Group.
          type: object
          x-order: 5
        recoverMsTeamParams:
          allOf:
          - $ref: '#/components/schemas/RecoverMsTeamParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Microsoft 365 Teams.
          type: object
          x-order: 6
        recoverSiteParams:
          allOf:
          - $ref: '#/components/schemas/RecoverSiteParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Microsoft Office 365 Sharepoint
            Site.
          type: object
          x-order: 7
      required:
      - recoveryAction
      title: Recover Office 365 environment params.
      type: object
    RecoverOneDriveParams:
      description: Specifies the parameters to recover an Office 365 OneDrive.
      properties:
        objects:
          description: Specifies a list of OneDrive params associated with the objects
            to recover.
          items:
            $ref: '#/components/schemas/ObjectOneDriveParam'
          nullable: true
          type: array
          x-order: 0
        targetDrive:
          allOf:
          - $ref: '#/components/schemas/TargetOneDriveParam'
          - type: object
            x-nullable: true
          description: Specifies the target OneDrive to recover to. If not specified,
            the objects will be recovered to original location.
          type: object
          x-order: 1
        continueOnError:
          description: Specifies whether to continue recovering other OneDrive items
            if one of items failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 2
      required:
      - objects
      type: object
    RecoverOracleAppNewSourceConfig:
      description: Specifies the new destination Source configuration where the databases
        will be recovered.
      properties:
        host:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the source id of target host where databases will
            be recovered. This source id can be a physical host or virtual machine.
          nullable: true
          type: object
          x-order: 0
        recoveryTarget:
          description: Specifies if recovery target is a database or a view.
          enum:
          - RecoverDatabase
          - RecoverView
          nullable: true
          type: string
          x-order: 1
        recoverDatabaseParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOracleNewTargetDatabaseConfig'
          - type: object
            x-nullable: true
          description: Specifies recovery parameters when recovering to a database
          nullable: true
          type: object
          x-order: 2
        recoverViewParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOracleNewTargetViewConfig'
          - type: object
            x-nullable: true
          description: Specifies recovery parameters when recovering to a view.
          nullable: true
          type: object
          x-order: 3
      required:
      - host
      title: Recover Oracle App New Source Config.
      type: object
    RecoverOracleAppOriginalSourceConfig:
      allOf:
      - $ref: '#/components/schemas/CommonOracleAppSourceConfig'
      description: Specifies the additional Source configuration parameters when databases
        will be recovered to original location.
      properties:
        rollForwardLogPathVec:
          description: List of archive logs to apply on Database after overwrite restore.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
        attemptCompleteRecovery:
          description: Whether or not this is a complete recovery attempt.
          nullable: true
          type: boolean
          x-order: 1
      title: Recover Oracle App Original Source Config.
    RecoverOracleAppParams:
      description: Specifies the parameters to recover Oracle databases.
      properties:
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kOracle
          type: string
          x-order: 0
        oracleTargetParams:
          allOf:
          - $ref: '#/components/schemas/OracleTargetParamsForRecoverOracleApp'
          - type: object
            x-nullable: true
          description: 'Specifies the params for recovering to a oracle host. Provided
            oracle backup should be recovered to same type of target host. For Example:
            If you have oracle backup taken from a physical host then that should
            be recovered to physical host only.'
          nullable: true
          type: object
          x-order: 1
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered. If this
            is not specified, then the VLAN settings will be automatically selected
            from one of the below options: a. If VLANs are configured on Cohesity,
            then the VLAN host/VIP will be automatically based on the client''s (e.g.
            ESXI host) IP address. b. If VLANs are not configured on Cohesity, then
            the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 2
      required:
      - targetEnvironment
      title: Recover Oracle DB params.
      type: object
    RecoverOracleDbSnapshotParams:
      allOf:
      - $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
      - $ref: '#/components/schemas/RecoverOracleDbSnapshotParams_allOf'
      description: Specifies the snapshot parameters to recover Oracle databases.
      title: Recover Oracle database Snapshot Params.
    RecoverOracleGranularRestoreInfo:
      description: Specifies information about list of objects (PDBs) to restore.
      properties:
        granularityType:
          description: Specifies type of granular restore.
          enum:
          - kPDB
          nullable: true
          type: string
          x-order: 0
        pdbRestoreParams:
          allOf:
          - $ref: '#/components/schemas/OraclePdbRestoreParams'
          - type: object
            x-nullable: true
          description: Specifies information about the list of pdbs to be restored.
          type: object
          x-order: 1
      title: Recover Oracle Granular Restore Information
      type: object
    RecoverOracleNewTargetDatabaseConfig:
      allOf:
      - $ref: '#/components/schemas/CommonOracleAppSourceConfig'
      description: Specifies recovery parameters when recovering to a database.
      properties:
        databaseName:
          description: Specifies a new name for the restored database. If this field
            is not specified, then the original database will be overwritten after
            recovery.
          nullable: true
          type: string
          x-order: 0
        oracleBaseFolder:
          description: Specifies the oracle base folder at selected host.
          nullable: true
          type: string
          x-order: 1
        oracleHomeFolder:
          description: Specifies the oracle home folder at selected host.
          nullable: true
          type: string
          x-order: 2
        dbFilesDestination:
          description: Specifies the location to restore database files.
          nullable: true
          type: string
          x-order: 3
        dbConfigFilePath:
          description: Specifies the config file path on selected host which configures
            the restored database.
          nullable: true
          type: string
          x-order: 4
        enableArchiveLogMode:
          description: Specifies archive log mode for oracle restore.
          nullable: true
          type: boolean
          x-order: 5
        pfileParameterMap:
          description: Specifies a key value pair for pfile parameters.
          items:
            $ref: '#/components/schemas/KeyValuePair'
          nullable: true
          type: array
          x-order: 6
        bctFilePath:
          description: Specifies BCT file path.
          nullable: true
          type: string
          x-order: 7
        numTempfiles:
          description: Specifies no. of tempfiles to be used for the recovered database.
          format: int32
          nullable: true
          type: integer
          x-order: 8
        redoLogConfig:
          allOf:
          - $ref: '#/definitions/RedoLogGroupConfig'
          - type: object
            x-nullable: true
          description: Specifies redo log config.
          type: object
          x-order: 9
        isMultiStageRestore:
          description: Specifies whether this task is a multistage restore task. If
            set, we migrate the DB after clone completes.
          nullable: true
          type: boolean
          x-order: 10
        oracleUpdateRestoreOptions:
          allOf:
          - $ref: '#/definitions/MigrateCloneParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters that are needed for updating oracle
            restore options.
          nullable: true
          type: object
          x-order: 11
        skipCloneNid:
          description: Whether or not to skip the nid step in Oracle Clone workflow.
            Applicable to both smart and old clone workflow.
          nullable: true
          type: boolean
          x-order: 12
        noFilenameCheck:
          description: Specifies whether to validate filenames or not in Oracle alternate
            restore workflow.
          nullable: true
          type: boolean
          x-order: 13
        newNameClause:
          description: Specifies newname clause for db files which allows user to
            have full control on how their database files can be renamed during the
            oracle alternate restore workflow.
          nullable: true
          type: string
          x-order: 14
      title: Recover Oracle App New Database Target Config.
    RecoverOracleNewTargetViewConfig:
      allOf:
      - $ref: '#/components/schemas/CommonOracleAppSourceConfig'
      description: Specifies recovery parameters when recovering to a view.
      properties:
        viewMountPath:
          description: Specifies the directory where cohesity view for app recovery
            will be mounted.
          nullable: true
          type: string
          x-order: 0
      title: Recover Oracle App New View Target Config.
    RecoverOracleParams:
      description: Specifies the recovery options specific to oracle environment.
      properties:
        objects:
          description: Specifies the list of parameters for list of objects to be
            recovered.
          items:
            $ref: '#/components/schemas/RecoverOracleDbSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverApps
          - CloneAppView
          type: string
          x-order: 1
        recoverAppParams:
          allOf:
          - $ref: '#/components/schemas/RecoverOracleAppParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Oracle databases.
          nullable: true
          type: object
          x-order: 2
      required:
      - objects
      - recoveryAction
      title: Recover Oracle environment params.
      type: object
    RecoverOtherNasToElastifileFilesTargetParams:
      description: Specifies the params of the Elastifile recovery target.
      properties:
        volume:
          allOf:
          - $ref: '#/components/schemas/RecoverTarget'
          - type: object
            x-nullable: true
          description: Specifies the id and name of the parent NAS to recover to.
            This volume will be the target of the recovery.
          type: object
          x-order: 0
        parentSource:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          - readOnly: true
            type: object
          description: Specifies the id of the parent source of the recovery target.
          type: object
          x-order: 1
        alternatePath:
          description: Specifies the path location to recover files to.
          nullable: true
          type: string
          x-order: 2
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 4
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of the files fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 5
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 6
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - alternatePath
      - volume
      title: Recover To Elastifile Files Target Params.
      type: object
    RecoverOtherNasToElastifileVolumeTargetParams:
      description: Specifies the params of the Elastifile recovery target.
      properties:
        volume:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id and name of the parent volume to recover to.
            This volume will be the target of the recovery.
          type: object
          x-order: 0
        parentSource:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          - readOnly: true
            type: object
          description: Specifies the id of the parent source of the recovery target.
          type: object
          x-order: 1
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 2
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other volumes if one
            of the volumes fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 5
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - volume
      title: Recover To Elastifile Volume Target Params.
      type: object
    RecoverOtherNasToFlashbladeFilesTargetParams:
      description: Specifies the params of the Flashblade recovery target.
      properties:
        volume:
          allOf:
          - $ref: '#/components/schemas/RecoverTarget'
          - type: object
            x-nullable: true
          description: Specifies the id and name of the parent NAS to recover to.
            This volume will be the target of the recovery.
          type: object
          x-order: 0
        parentSource:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          - readOnly: true
            type: object
          description: Specifies the id of the parent source of the recovery target.
          type: object
          x-order: 1
        alternatePath:
          description: Specifies the path location to recover files to.
          nullable: true
          type: string
          x-order: 2
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 4
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of the files fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 5
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 6
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - alternatePath
      - volume
      title: Recover To Flashblade Files Target Params.
      type: object
    RecoverOtherNasToFlashbladeVolumeTargetParams:
      description: Specifies the params of the Flashblade recovery target.
      properties:
        volume:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id and name of the parent volume to recover to.
            This volume will be the target of the recovery.
          type: object
          x-order: 0
        parentSource:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          - readOnly: true
            type: object
          description: Specifies the id of the parent source of the recovery target.
          type: object
          x-order: 1
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 2
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other volumes if one
            of the volumes fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 5
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - volume
      title: Recover To Flashblade Volume Target Params.
      type: object
    RecoverOtherNasToGenericNasFilesTargetParams:
      description: Specifies the params of the Generic Nas recovery target.
      properties:
        volume:
          allOf:
          - $ref: '#/components/schemas/RecoverTarget'
          - type: object
            x-nullable: true
          description: Specifies the id and name of the parent NAS to recover to.
            This volume will be the target of the recovery.
          type: object
          x-order: 0
        parentSource:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          - readOnly: true
            type: object
          description: Specifies the id of the parent source of the recovery target.
          type: object
          x-order: 1
        alternatePath:
          description: Specifies the path location to recover files to.
          nullable: true
          type: string
          x-order: 2
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 4
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of the files fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 5
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 6
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - alternatePath
      - volume
      title: Recover To Generic Nas Files Target Params.
      type: object
    RecoverOtherNasToGenericNasVolumeTargetParams:
      description: Specifies the params of the Generic NAS recovery target.
      properties:
        volume:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id and name of the parent volume to recover to.
            This volume will be the target of the recovery.
          type: object
          x-order: 0
        parentSource:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          - readOnly: true
            type: object
          description: Specifies the id of the parent source of the recovery target.
          type: object
          x-order: 1
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 2
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other volumes if one
            of the volumes fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 5
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - volume
      title: Recover To Generic NAS Volume Target Params.
      type: object
    RecoverOtherNasToGpfsFilesTargetParams:
      description: Specifies the params of the GPFS recovery target.
      properties:
        volume:
          allOf:
          - $ref: '#/components/schemas/RecoverTarget'
          - type: object
            x-nullable: true
          description: Specifies the id and name of the parent NAS to recover to.
            This volume will be the target of the recovery.
          type: object
          x-order: 0
        parentSource:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          - readOnly: true
            type: object
          description: Specifies the id of the parent source of the recovery target.
          type: object
          x-order: 1
        alternatePath:
          description: Specifies the path location to recover files to.
          nullable: true
          type: string
          x-order: 2
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 4
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of the files fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 5
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 6
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - alternatePath
      - volume
      title: Recover To GPFS Files Target Params.
      type: object
    RecoverOtherNasToGpfsVolumeTargetParams:
      description: Specifies the params of the GPFS recovery target.
      properties:
        volume:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id and name of the parent volume to recover to.
            This volume will be the target of the recovery.
          type: object
          x-order: 0
        parentSource:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          - readOnly: true
            type: object
          description: Specifies the id of the parent source of the recovery target.
          type: object
          x-order: 1
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 2
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other volumes if one
            of the volumes fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 5
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - volume
      title: Recover To GPFS Nas Volume Target Params.
      type: object
    RecoverOtherNasToIsilonFilesTargetParams:
      description: Specifies the params of the Isilon recovery target.
      properties:
        volume:
          allOf:
          - $ref: '#/components/schemas/RecoverTarget'
          - type: object
            x-nullable: true
          description: Specifies the id and name of the parent NAS to recover to.
            This volume will be the target of the recovery.
          type: object
          x-order: 0
        parentSource:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          - readOnly: true
            type: object
          description: Specifies the id of the parent source of the recovery target.
          type: object
          x-order: 1
        alternatePath:
          description: Specifies the path location to recover files to.
          nullable: true
          type: string
          x-order: 2
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 4
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of the files fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 5
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 6
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - alternatePath
      - volume
      title: Recover To Isilon Files Target Params.
      type: object
    RecoverOtherNasToIsilonVolumeTargetParams:
      description: Specifies the params of the Isilon recovery target.
      properties:
        volume:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id and name of the volume to recover to. This
            volume will be the target of the recovery.
          type: object
          x-order: 0
        parentSource:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          - readOnly: true
            type: object
          description: Specifies the id of the parent source of the recovery target.
          type: object
          x-order: 1
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 2
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other volumes if one
            of the volumes fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 5
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - volume
      title: Recover To Isilon Volume Target Params.
      type: object
    RecoverOtherNasToNetappFilesTargetParams:
      description: Specifies the params of the Netapp recovery target.
      properties:
        volume:
          allOf:
          - $ref: '#/components/schemas/RecoverTarget'
          - type: object
            x-nullable: true
          description: Specifies the id and name of the parent NAS to recover to.
            This volume will be the target of the recovery.
          type: object
          x-order: 0
        parentSource:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          - readOnly: true
            type: object
          description: Specifies the id of the parent source of the recovery target.
          type: object
          x-order: 1
        alternatePath:
          description: Specifies the path location to recover files to.
          nullable: true
          type: string
          x-order: 2
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 4
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of the files fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 5
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 6
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - alternatePath
      - volume
      title: Recover To Netapp Files Target Params.
      type: object
    RecoverOtherNasToNetappVolumeTargetParams:
      description: Specifies the params of the Netapp recovery target.
      properties:
        volume:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id and name of the volume to recover to. This
            volume will be the target of the recovery.
          type: object
          x-order: 0
        parentSource:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          - readOnly: true
            type: object
          description: Specifies the id of the parent source of the recovery target.
          type: object
          x-order: 1
        overwriteExistingFile:
          description: Specifies whether to overwrite existing file/folder during
            recovery.
          nullable: true
          type: boolean
          x-order: 2
        preserveFileAttributes:
          description: Specifies whether to preserve file/folder attributes during
            recovery.
          nullable: true
          type: boolean
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other volumes if one
            of the volumes fails to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
        encryptionEnabled:
          description: Specifies whether encryption should be enabled during recovery.
          nullable: true
          type: boolean
          x-order: 5
        filterIpConfig:
          $ref: '#/components/schemas/FilterIpConfig'
        vlanConfig:
          $ref: '#/components/schemas/RecoveryVlanConfig'
      required:
      - volume
      title: Recover To Netapp Volume Target Params.
      type: object
    RecoverPhysicalFileAndFolderParams:
      description: Specifies the parameters to recover files and folders.
      properties:
        filesAndFolders:
          description: Specifies the information about the files and folders to be
            recovered.
          items:
            $ref: '#/components/schemas/CommonRecoverFileAndFolderInfo'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kPhysical
          type: string
          x-order: 1
        physicalTargetParams:
          allOf:
          - $ref: '#/components/schemas/PhysicalTargetParamsForRecoverFileAndFolder'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover to a Physical target.
          nullable: true
          type: object
          x-order: 2
      required:
      - filesAndFolders
      - targetEnvironment
      title: Recover Physical File And Folder Params
      type: object
    RecoverPhysicalParams:
      description: Specifies the recovery options specific to Physical environment.
      properties:
        objects:
          description: Specifies the list of Recover Object parameters. For recovering
            files, specifies the object contains the file to recover.
          items:
            $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverPhysicalVolumes
          - InstantVolumeMount
          - RecoverFiles
          - RecoverSystem
          type: string
          x-order: 1
        recoverVolumeParams:
          allOf:
          - $ref: '#/components/schemas/RecoverPhysicalVolumeParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover Physical Volumes.
          nullable: true
          type: object
          x-order: 2
        mountVolumeParams:
          allOf:
          - $ref: '#/components/schemas/MountPhysicalVolumeParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to mount Physical Volumes.
          nullable: true
          type: object
          x-order: 3
        recoverFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/RecoverPhysicalFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to perform a file and folder recovery.
          nullable: true
          type: object
          x-order: 4
        downloadFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/CommonDownloadFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to download files and folders.
          nullable: true
          type: object
          x-order: 5
      required:
      - objects
      - recoveryAction
      title: Recover Physical environment params.
      type: object
    RecoverPhysicalVolumeParams:
      description: Specifies the parameters to recover Physical Volumes.
      properties:
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kPhysical
          type: string
          x-order: 0
        physicalTargetParams:
          allOf:
          - $ref: '#/components/schemas/PhysicalTargetParamsForRecoverVolume'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to a physical target.
          nullable: true
          type: object
          x-order: 1
      required:
      - targetEnvironment
      title: Recover Physical Volumes params.
      type: object
    RecoverProtectionGroupRunParams:
      description: Specifies the Protection Group Run params to recover. All the VM's
        that are successfully backed up by specified Runs will be recovered.
      properties:
        protectionGroupRunId:
          description: Specifies the Protection Group Run id from which to recover
            VMs. All the VM's that are successfully protected by this Run will be
            recovered.
          nullable: true
          pattern: ^\d+:\d+$
          type: string
          x-order: 0
        protectionGroupInstanceId:
          description: Specifies the Protection Group Instance id.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        archivalTargetId:
          description: Specifies the archival target id. If specified and Protection
            Group run has an archival snapshot then VMs are recovered from the specified
            archival snapshot. If not specified (default), VMs are recovered from
            local snapshot.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        protectionGroupId:
          description: Specifies the local Protection Group id. In case of recovering
            a replication Run, this field should be provided with local Protection
            Group id.
          nullable: true
          type: string
          x-order: 3
      required:
      - protectionGroupInstanceId
      - protectionGroupRunId
      title: Recover Protection Group Run Params.
      type: object
    RecoverPublicFoldersParams:
      description: Specifies the parameters to recover Office 365 Public Folders.
      properties:
        rootPublicFolders:
          description: Specifies a list of RootPublicFolder params associated with
            the objects to recover.
          items:
            $ref: '#/components/schemas/RootPublicFolderParam'
          minItems: 1
          nullable: true
          type: array
          x-order: 0
        targetRootPublicFolder:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the target RootPublicFolder to recover to. If not
            specified, the objects will be recovered to original location.
          nullable: true
          type: object
          x-order: 1
        targetFolderPath:
          description: Specifies the path to the target folder.
          nullable: true
          type: string
          x-order: 2
        continueOnError:
          description: Specifies whether to continue recovering other Public Folders
            if one of Public Folder failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 3
      required:
      - rootPublicFolders
      type: object
    RecoverPureParams:
      description: Specifies the recovery options specific to Pure environment.
      properties:
        objects:
          description: Specifies the list of recover object parameters.
          items:
            $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recovery action to be performed. The
            corresponding recovery action params must be filled out.
          enum:
          - RecoverSanVolumes
          type: string
          x-order: 1
        recoverSanVolumeParams:
          allOf:
          - $ref: '#/components/schemas/RecoverPureSanVolumeParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover SAN Volume.
          nullable: true
          type: object
          x-order: 2
      required:
      - objects
      - recoveryAction
      title: Recover Pure Params.
      type: object
    RecoverPureSanVolumeNewSourceConfig:
      description: Specifies the new destination Source configuration where the Pure
        volume will be recovered.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the new target parent source to recover
            the Pure SAN Volume to. This field must be specified if recoverToNewSource
            is true.
          nullable: true
          type: object
          x-order: 0
        renameRecoveredVolumeParams:
          allOf:
          - $ref: '#/components/schemas/RecoveredOrClonedVmsRenameConfig'
          - type: object
            x-nullable: true
          description: Specifies params to rename the recovered SAN volumes. If not
            specified, the original names of the volumes are preserved.
          nullable: true
          type: object
          x-order: 1
      required:
      - source
      title: Recover Pure Volume New Source Config.
      type: object
    RecoverPureSanVolumeOriginalSourceConfig:
      description: Specifies the network config parameters to be applied for Pure
        volumes if recovering to original Source.
      properties:
        renameRecoveredVolumeParams:
          allOf:
          - $ref: '#/components/schemas/RecoveredOrClonedVmsRenameConfig'
          - type: object
            x-nullable: true
          description: Specifies params to rename the recovered SAN volumes. If not
            specified, the original names of the volumes are preserved.
          nullable: true
          type: object
          x-order: 0
      title: Recover Pure volume Original Source Network configuration.
      type: object
    RecoverPureSanVolumeParams:
      description: Specifies the parameters to recover Pure SAN Volume.
      properties:
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            target params must be filled out.
          enum:
          - kPure
          type: string
          x-order: 0
        pureTargetParams:
          allOf:
          - $ref: '#/components/schemas/RecoverPureVolumeTargetParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters of the Pure SAN volume to recover
            to.
          nullable: true
          type: object
          x-order: 1
      required:
      - targetEnvironment
      title: Recover Pure SAN Volume Params.
      type: object
    RecoverPureVolumeTargetParams:
      description: Specifies the target object parameters to recover the Pure San
        Volume.
      properties:
        recoverToNewSource:
          description: Specifies whether to recover to a new source.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverPureSanVolumeNewSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the Pure volume will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverPureSanVolumeOriginalSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if Pure volume is being
            recovered to Original Source. If not specified, all the configuration
            parameters will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Pure SAN Volume Recovery Target Params.
      type: object
    RecoverSiteParams:
      description: Specifies the parameters to recover Microsoft Office 365 Sharepoint
        site.
      properties:
        objects:
          description: Specifies a list of site params associated with the objects
            to recover.
          items:
            $ref: '#/components/schemas/ObjectSiteParam'
          nullable: true
          type: array
          x-order: 0
        targetSite:
          allOf:
          - $ref: '#/components/schemas/TargetSiteParam'
          - type: object
            x-nullable: true
          description: Specifies the target Site to recover to. If not specified,
            the objects will be recovered to original location.
          type: object
          x-order: 1
        targetDomainObjectId:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the object id of the target domain in case of full
            recovery of a site to a target domain.
          nullable: true
          type: object
          x-order: 2
        continueOnError:
          description: Specifies whether to continue recovering the doc libs of a
            site, if one or more of doc libs failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 3
      required:
      - objects
      type: object
    RecoverSqlAppNewSourceConfig:
      allOf:
      - $ref: '#/components/schemas/CommonSqlAppSourceConfig'
      description: Specifies the new destination Source configuration where the databases
        will be recovered.
      properties:
        host:
          allOf:
          - $ref: '#/definitions/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the source id of target host where databases will
            be recovered. This source id can be a physical host or virtual machine.
          nullable: true
          type: object
          x-order: 0
        instanceName:
          description: Specifies an instance name of the Sql Server that should be
            used for restoring databases to.
          nullable: true
          type: string
          x-order: 1
        dataFileDirectoryLocation:
          description: Specifies the directory where to put the database data files.
            Missing directory will be automatically created.
          nullable: true
          type: string
          x-order: 2
        logFileDirectoryLocation:
          description: Specifies the directory where to put the database log files.
            Missing directory will be automatically created.
          nullable: true
          type: string
          x-order: 3
        databaseName:
          description: Specifies a new name for the restored database. If this field
            is not specified, then the original database will be overwritten after
            recovery.
          nullable: true
          type: string
          x-order: 4
      title: Recover Sql App New Source Config.
    RecoverSqlAppOriginalSourceConfig:
      allOf:
      - $ref: '#/components/schemas/CommonSqlAppSourceConfig'
      description: Specifies the additional Source configuration parameters when databases
        will be recovered to original location.
      properties:
        dataFileDirectoryLocation:
          description: Specifies the directory where to put the database data files.
            Missing directory will be automatically created. If you are overwriting
            the existing database then this field will be ignored.
          nullable: true
          type: string
          x-order: 0
        logFileDirectoryLocation:
          description: Specifies the directory where to put the database log files.
            Missing directory will be automatically created. If you are overwriting
            the existing database then this field will be ignored.
          nullable: true
          type: string
          x-order: 1
        captureTailLogs:
          description: Set this to true if tail logs are to be captured before the
            recovery operation. This is only applicable if database is not being renamed.
          nullable: true
          type: boolean
          x-order: 2
        newDatabaseName:
          description: Specifies a new name for the restored database. If this field
            is not specified, then the original database will be overwritten after
            recovery.
          nullable: true
          type: string
          x-order: 3
      title: Recover Sql App New Source Config.
    RecoverSqlAppParams:
      allOf:
      - $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
      - $ref: '#/components/schemas/MssqlObjectEntityParams'
      - $ref: '#/components/schemas/RecoverSqlAppParams_allOf'
      description: Specifies the parameters to recover Sql databases.
      title: Recover Sql DB params.
    RecoverSqlParams:
      description: Specifies the recovery options specific to Sql environment.
      properties:
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverApps
          type: string
          x-order: 0
        recoverAppParams:
          description: Specifies the parameters to recover Sql databases.
          items:
            $ref: '#/components/schemas/RecoverSqlAppParams'
          minItems: 1
          nullable: true
          type: array
          x-order: 1
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered. If this
            is not specified, then the VLAN settings will be automatically selected
            from one of the below options: a. If VLANs are configured on Cohesity,
            then the VLAN host/VIP will be automatically based on the client''s (e.g.
            ESXI host) IP address. b. If VLANs are not configured on Cohesity, then
            the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 2
      required:
      - recoveryAction
      title: Recover Sql environment params.
      type: object
    RecoverTarget:
      allOf:
      - $ref: '#/components/schemas/RecoveryObjectIdentifier'
      - $ref: '#/components/schemas/RecoverTarget_allOf'
      - nullable: true
        type: object
        x-nullable: true
      description: Specifies the target entity to recover to.
      title: Recover Target.
    RecoverUdaObjectParams:
      description: Specifies details of objects to be recovered.
      properties:
        objectName:
          description: Specifies the fully qualified name of the object to be restored.
          nullable: true
          type: string
          x-order: 0
        overwrite:
          description: Set to true to overwrite an existing object at the destination.
            If set to false, and the same object exists at the destination, then recovery
            will fail for that object.
          nullable: true
          type: boolean
          x-order: 1
        renameTo:
          description: Specifies the new name to which the object should be renamed
            to after the recovery.
          nullable: true
          type: string
          x-order: 2
      type: object
    RecoverUdaParams:
      description: Specifies the parameters to recover Universal Data Adapter objects.
      properties:
        recoverTo:
          description: Specifies the 'Source Registration ID' of the source where
            the objects are to be recovered. If this is not specified, the recovery
            job will recover to the original location.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        concurrency:
          default: 1
          description: Specifies the maximum number of concurrent IO Streams that
            will be created to exchange data with the cluster. If not specified, the
            default value is taken as 1.
          format: int32
          nullable: true
          type: integer
          x-order: 1
        mounts:
          default: 1
          description: Specifies the maximum number of view mounts per host. If not
            specified, the default value is taken as 1.
          format: int32
          nullable: true
          type: integer
          x-order: 2
        recoveryArgs:
          description: Specifies the arguments for recovery of Universal Data Adapter
            objects.
          nullable: true
          type: string
          x-order: 3
        snapshots:
          description: Specifies the local snapshot ids and other details of the objects
            to be recovered.
          items:
            $ref: '#/components/schemas/RecoverUdaSnapshotParams'
          nullable: true
          type: array
          x-order: 4
        warnings:
          description: This field will hold the warnings in cases where the job status
            is SucceededWithWarnings.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
          x-order: 5
      required:
      - snapshots
      title: Recover Universal Data Adapter params.
      type: object
    RecoverUdaSnapshotParams:
      allOf:
      - $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
      - $ref: '#/components/schemas/RecoverUdaSnapshotParams_allOf'
      description: Specifies the snapshot parameters for a protected Universal Data
        Adapter object.
      title: Recover Universal Data Adapter Snapshot Params.
    RecoverVMwareFileAndFolderParams:
      description: Specifies the parameters to recover files and folders.
      properties:
        filesAndFolders:
          description: Specifies the info about the files and folders to be recovered.
          items:
            $ref: '#/components/schemas/CommonRecoverFileAndFolderInfo'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kVMware
          type: string
          x-order: 1
        vmwareTargetParams:
          allOf:
          - $ref: '#/components/schemas/VmwareTargetParamsForRecoverFileAndFolder'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover to a VMware target.
          nullable: true
          type: object
          x-order: 2
        parentRecoveryId:
          description: If current recovery is child task triggered through another
            parent recovery operation, then this field will specify the id of the
            parent recovery.
          nullable: true
          pattern: ^\d+:\d+:\d+$
          type: string
          x-order: 3
      required:
      - filesAndFolders
      - targetEnvironment
      title: Recover VMware File And Folder Params
      type: object
    RecoverViewParams:
      description: Specifies the recovery options specific to View environment.
      properties:
        objects:
          description: Specifies the list of recover Object parameters.
          items:
            $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recovery action to be performed.
          enum:
          - DownloadFilesAndFolders
          type: string
          x-order: 1
        downloadFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/CommonDownloadFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to download files and folders.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoveryAction
      title: Recover View environment params.
      type: object
    RecoverVmwareChildSnapshotParams:
      allOf:
      - $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
      - $ref: '#/components/schemas/RecoverVmwareChildSnapshotParams_allOf'
      description: Specifies the snapshot parameters for VMware recovery.
      title: Recover VMware Snapshot Params.
    RecoverVmwareDiskParams:
      description: Specifies the parameters to recover VMware VM.
      properties:
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kVMware
          type: string
          x-order: 0
        vmwareTargetParams:
          allOf:
          - $ref: '#/components/schemas/VmwareTargetParamsForRecoverDisk'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to a VMware target.
          nullable: true
          type: object
          x-order: 1
      required:
      - targetEnvironment
      title: Recover VMware VM params.
      type: object
    RecoverVmwareParams:
      description: Specifies the recovery options specific to VMware environment.
      properties:
        objects:
          description: Specifies the list of recover Object parameters. This property
            is mandatory for all recovery action types except recover vms. While recovering
            VMs, a user can specify snapshots of VM's or a Protection Group Run details
            to recover all the VM's that are backed up by that Run. For recovering
            files, specifies the object contains the file to recover.
          items:
            $ref: '#/components/schemas/RecoverVmwareSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        recoveryAction:
          description: Specifies the type of recovery action to be performed.
          enum:
          - RecoverVMs
          - RecoverFiles
          - InstantVolumeMount
          - RecoverVmDisks
          - RecoverVApps
          - RecoverVAppTemplates
          - UptierSnapshot
          type: string
          x-order: 1
        recoverVmParams:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVmParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover VMware VM.
          nullable: true
          type: object
          x-order: 2
        recoverVmDiskParams:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareDiskParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover VMware Disks.
          nullable: true
          type: object
          x-order: 3
        mountVolumeParams:
          allOf:
          - $ref: '#/components/schemas/MountVmwareVolumeParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to mount VMware Volumes.
          nullable: true
          type: object
          x-order: 4
        recoverVAppParams:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVAppParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover a VMware vApp.
          nullable: true
          type: object
          x-order: 5
        recoverVAppTemplateParams:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVAppTemplateParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover a VMware vApp template.
          nullable: true
          type: object
          x-order: 6
        recoverFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/RecoverVMwareFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to recover files and folders.
          nullable: true
          type: object
          x-order: 7
        downloadFileAndFolderParams:
          allOf:
          - $ref: '#/components/schemas/CommonDownloadFileAndFolderParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters to download files and folders.
          nullable: true
          type: object
          x-order: 8
      required:
      - recoveryAction
      title: Recover VMware environment params.
      type: object
    RecoverVmwareSnapshotParams:
      allOf:
      - $ref: '#/components/schemas/RecoverVmwareChildSnapshotParams'
      - $ref: '#/components/schemas/RecoverVmwareSnapshotParams_allOf'
      description: Specifies the snapshot parameters for VMware recovery.
      title: Recover VMware Parent Snapshot Params.
    RecoverVmwareVAppNewSourceConfig:
      description: Specifies the new destination Source configuration where the vApps
        will be recovered.
      properties:
        sourceType:
          description: Specifies the type of VMware source to which the VMs are being
            restored.
          enum:
          - kvCloudDirector
          nullable: true
          type: string
          x-order: 0
        vCloudDirectorParams:
          $ref: '#/components/schemas/RecoverVmwareVAppVCDSourceConfig'
      required:
      - sourceType
      title: Recover VMware vApps New Source Config.
      type: object
    RecoverVmwareVAppOriginalSourceConfig:
      description: Specifies the Source configuration if vApps are being recovered
        to Original Source.
      properties:
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVmOriginalSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered vApps.
          nullable: true
          type: object
          x-order: 0
      title: Recover VMware vApps Original Source Config.
      type: object
    RecoverVmwareVAppParams:
      description: Specifies the parameters to recover VMware vApp.
      properties:
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kVMware
          type: string
          x-order: 0
        vmwareTargetParams:
          allOf:
          - $ref: '#/components/schemas/VmwareTargetParamsForRecoverVApp'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to a VMware target.
          nullable: true
          type: object
          x-order: 1
      required:
      - targetEnvironment
      title: Recover VMware vApp params.
      type: object
    RecoverVmwareVAppTemplateNewSourceConfig:
      description: Specifies the new destination Source configuration where the vApps
        templates will be recovered.
      properties:
        sourceType:
          description: Specifies the type of VMware source to which the vApp templatess
            are being restored.
          enum:
          - kvCloudDirector
          nullable: true
          type: string
          x-order: 0
        vCloudDirectorParams:
          $ref: '#/components/schemas/RecoverVmwareVAppTemplateVCDSourceConfig'
      required:
      - sourceType
      title: Recover VMware vApp Templates New Source Config.
      type: object
    RecoverVmwareVAppTemplateParams:
      description: Specifies the parameters to recover VMware vApp template.
      properties:
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kVMware
          type: string
          x-order: 0
        vmwareTargetParams:
          allOf:
          - $ref: '#/components/schemas/VmwareTargetParamsForRecoverVAppTemplate'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to a VMware target.
          nullable: true
          type: object
          x-order: 1
      required:
      - targetEnvironment
      title: Recover VMware vApp template params.
      type: object
    RecoverVmwareVAppTemplateVCDSourceConfig:
      description: Specifies the new destination Source configuration where the vApp
        Templates will be recovered for vCloudDirector sources.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the parent source to recover the vApp templates.
          nullable: true
          type: object
          x-order: 0
        vdc:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the VDC object where the recovered objects will be
            attached.
          nullable: true
          type: object
          x-order: 1
        catalog:
          allOf:
          - $ref: '#/components/schemas/VdcCatalog'
          - type: object
            x-nullable: true
          description: Specifies the catalog where the vApp template should reside.
          nullable: true
          type: object
          x-order: 2
        datastores:
          description: Specifies the datastore objects where the object's files should
            be recovered to.
          items:
            $ref: '#/components/schemas/RecoveryObjectIdentifier'
          maxItems: 1
          nullable: true
          type: array
          x-order: 3
        storageProfile:
          allOf:
          - $ref: '#/components/schemas/VcdStorageProfileParams'
          - type: object
            x-nullable: true
          description: Specifies the storage profile to which the objects should be
            recovered. This should only be specified if datastores are not specified.
          type: object
          x-order: 4
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVmNewSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered vApp templates.
          nullable: true
          type: object
          x-order: 5
        orgVdcNetwork:
          $ref: '#/components/schemas/OrgVDCNetwork'
      required:
      - catalog
      - source
      - vdc
      title: Recover VMware vApp Templates vCloudDirector Source Config.
      type: object
    RecoverVmwareVAppVCDSourceConfig:
      description: Specifies the new destination Source configuration where the VMs
        will be recovered for vCloudDirector sources.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the parent source to recover the VMs.
          nullable: true
          type: object
          x-order: 0
        vdc:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the VDC object where the recovered objects will be
            attached.
          nullable: true
          type: object
          x-order: 1
        datastores:
          description: Specifies the datastore objects where the object's files should
            be recovered to.
          items:
            $ref: '#/components/schemas/RecoveryObjectIdentifier'
          maxItems: 1
          nullable: true
          type: array
          x-order: 2
        storageProfile:
          allOf:
          - $ref: '#/components/schemas/VcdStorageProfileParams'
          - type: object
            x-nullable: true
          description: Specifies the storage profile to which the objects should be
            recovered. This should only be specified if datastores are not specified.
          type: object
          x-order: 3
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVmNewSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          nullable: true
          type: object
          x-order: 4
        orgVdcNetwork:
          $ref: '#/components/schemas/OrgVDCNetwork'
      required:
      - source
      - vdc
      title: Recover VMware VMs vCloudDirector Source Config.
      type: object
    RecoverVmwareVmEsxiSourceConfig:
      description: Specifies the new destination Source configuration where the VMs
        will be recovered for ESXi sources.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the parent source to recover the VMs.
          nullable: true
          type: object
          x-order: 0
        resourcePool:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the resource pool object where the recovered objects
            will be attached.
          nullable: true
          type: object
          x-order: 1
        datastores:
          description: Specifies the datastore objects where the object's files should
            be recovered to.
          items:
            $ref: '#/components/schemas/RecoveryObjectIdentifier'
          nullable: true
          type: array
          x-order: 2
        vmFolder:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Folder where the VMs should be created.
          nullable: true
          type: object
          x-order: 3
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVmNewSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          nullable: true
          type: object
          x-order: 4
      required:
      - resourcePool
      - source
      title: Recover VMware VMs ESXi Source Config.
      type: object
    RecoverVmwareVmNewNetworkConfig:
      description: Specifies the new network config parameters to be applied to VMware
        VMs.
      properties:
        networkPortGroup:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the network port group (i.e, either a standard switch
            port group or a distributed port group) that will attached to the recovered
            Object. This parameter is mandatory if detach network is specified as
            false.
          nullable: true
          type: object
          x-order: 0
        disableNetwork:
          description: Specifies whether the attached network should be left in disabled
            state. Default is false
          nullable: true
          type: boolean
          x-order: 1
        preserveMacAddress:
          description: If this is true and we are attaching to a new network entity,
            then the VM's MAC address will be preserved on the new network. Default
            value is false.
          nullable: true
          type: boolean
          x-order: 2
      title: Recover VMware VMs New Network configuration.
      type: object
    RecoverVmwareVmNewSourceConfig:
      description: Specifies the new destination Source configuration where the VMs
        will be recovered.
      properties:
        sourceType:
          description: Specifies the type of VMware source to which the VMs are being
            restored.
          enum:
          - kVCenter
          - kStandaloneHost
          - kvCloudDirector
          nullable: true
          type: string
          x-order: 0
        standaloneHostParams:
          $ref: '#/components/schemas/RecoverVmwareVmEsxiSourceConfig'
        vCenterParams:
          $ref: '#/components/schemas/RecoverVmwareVmVCenterSourceConfig'
        vCloudDirectorParams:
          $ref: '#/components/schemas/RecoverVmwareVmVCDSourceConfig'
      required:
      - sourceType
      title: Recover VMware VMs New Source Config.
      type: object
    RecoverVmwareVmNewSourceNetworkConfig:
      description: Specifies the network config parameters to be applied to VMware
        VMs if recovering to new Source.
      properties:
        detachNetwork:
          description: If this is set to true, then the network will be detached from
            the recovered VMs. All the other networking parameters set will be ignored
            if set to true. Default value is false.
          nullable: true
          type: boolean
          x-order: 0
        newNetworkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVmNewNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies a new network configuration for the VM recovery.
          nullable: true
          type: object
          x-order: 1
      title: Recover VMware VMs New Source Network configuration.
      type: object
    RecoverVmwareVmOriginalSourceConfig:
      description: Specifies the Source configuration if VM's are being recovered
        to Original Source.
      properties:
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVmOriginalSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          nullable: true
          type: object
          x-order: 0
      title: Recover VMware VMs Original Source Config.
      type: object
    RecoverVmwareVmOriginalSourceNetworkConfig:
      description: Specifies the network config parameters to be applied for VMware
        VMs if recovering to original Source.
      properties:
        detachNetwork:
          description: If this is set to true, then the network will be detached from
            the recovered VMs. All the other networking parameters set will be ignored
            if set to true. Default value is false.
          nullable: true
          type: boolean
          x-order: 0
        disableNetwork:
          description: Specifies whether the attached network should be left in disabled
            state. Default is false.
          nullable: true
          type: boolean
          x-order: 1
      title: Recover VMware VMs Original Source Network configuration.
      type: object
    RecoverVmwareVmParams:
      description: Specifies the parameters to recover VMware VM.
      properties:
        recoverProtectionGroupRunsParams:
          description: Specifies the Protection Group Runs params to recover. All
            the VM's that are successfully backed up by specified Runs will be recovered.
            This can be specified along with individual snapshots of VMs. User has
            to make sure that specified Object snapshots and Protection Group Runs
            should not have any intersection. For example, user cannot specify multiple
            Runs which has same Object or an Object snapshot and a Run which has same
            Object's snapshot.
          items:
            $ref: '#/components/schemas/RecoverProtectionGroupRunParams'
          nullable: true
          type: array
          x-order: 0
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kVMware
          type: string
          x-order: 1
        vmwareTargetParams:
          allOf:
          - $ref: '#/components/schemas/VmwareTargetParamsForRecoverVM'
          - type: object
            x-nullable: true
          description: Specifies the params for recovering to a VMware target.
          nullable: true
          type: object
          x-order: 2
      required:
      - targetEnvironment
      title: Recover VMware VM params.
      type: object
    RecoverVmwareVmVCDSourceConfig:
      description: Specifies the new destination Source configuration where the VMs
        will be recovered for vCloudDirector sources.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the parent source to recover the VMs.
          nullable: true
          type: object
          x-order: 0
        vdc:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the VDC object where the recovered objects will be
            attached.
          nullable: true
          type: object
          x-order: 1
        vApp:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the vApp object where the recovered objects will
            be attached.
          nullable: true
          type: object
          x-order: 2
        datastores:
          description: Specifies the datastore objects where the object's files should
            be recovered to. This should only be specified if storageProfile is not
            specified.
          items:
            $ref: '#/components/schemas/RecoveryObjectIdentifier'
          nullable: true
          type: array
          x-order: 3
        storageProfile:
          allOf:
          - $ref: '#/components/schemas/VcdStorageProfileParams'
          - type: object
            x-nullable: true
          description: Specifies the storage profile to which the objects should be
            recovered. This should only be specified if datastores are not specified.
          type: object
          x-order: 4
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVmNewSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          nullable: true
          type: object
          x-order: 5
        orgVdcNetwork:
          $ref: '#/components/schemas/OrgVDCNetwork'
      required:
      - source
      - vdc
      title: Recover VMware VMs vCloudDirector Source Config.
      type: object
    RecoverVmwareVmVCenterSourceConfig:
      description: Specifies the new destination Source configuration where the VMs
        will be recovered for vCenter sources.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the id of the parent source to recover the VMs.
          nullable: true
          type: object
          x-order: 0
        resourcePool:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Specifies the resource pool object where the recovered objects
            will be attached.
          nullable: true
          type: object
          x-order: 1
        datastores:
          description: Specifies the datastore objects where the object's files should
            be recovered to.
          items:
            $ref: '#/components/schemas/RecoveryObjectIdentifier'
          nullable: true
          type: array
          x-order: 2
        vmFolder:
          allOf:
          - $ref: '#/components/schemas/RecoveryObjectIdentifier'
          - type: object
            x-nullable: true
          description: Folder where the VMs should be created.
          nullable: true
          type: object
          x-order: 3
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVmNewSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to the
            recovered VMs.
          nullable: true
          type: object
          x-order: 4
      required:
      - datastores
      - resourcePool
      - source
      title: Recover VMware VMs vCenter Source Config.
      type: object
    RecoverVolumeMapping:
      description: Specifies the mapping from a source volume to a destination volume.
      properties:
        sourceVolumeGuid:
          description: Specifies the guid of the source volume.
          nullable: true
          type: string
          x-order: 0
        destinationVolumeGuid:
          description: Specifies the guid of the destination volume.
          nullable: true
          type: string
          x-order: 1
      required:
      - destinationVolumeGuid
      - sourceVolumeGuid
      title: Recover Volume Mapping
      type: object
    RecoveredOrClonedVmsRenameConfig:
      description: Specifies the prefix and suffix to be added to VMs that are recovered
        or cloned.
      properties:
        prefix:
          description: Specifies the prefix string to be added to recovered or cloned
            object names.
          nullable: true
          type: string
          x-order: 0
        suffix:
          description: Specifies the suffix string to be added to recovered or cloned
            object names.
          nullable: true
          type: string
          x-order: 1
      title: Recover or Clone VMs Rename Config params.
      type: object
    Recoveries:
      description: Specifies list of Recoveries.
      example:
        recoveries:
        - null
        - null
      properties:
        recoveries:
          description: Specifies list of Recoveries.
          items:
            $ref: '#/components/schemas/Recovery'
          nullable: true
          type: array
          x-order: 0
      title: List of Recoveries.
      type: object
    Recovery:
      allOf:
      - $ref: '#/components/schemas/CommonRecoveryResponseParams'
      - $ref: '#/components/schemas/Recovery_allOf'
      description: Specifies a Recovery.
      title: Recovery.
    RecoveryObjectIdentifier:
      description: Specifies the object identifier to perform recovery.
      properties:
        id:
          description: Specifies the id of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      title: Recovery Object Identifier.
      type: object
    RecoveryOracleTaskInfo:
      description: Specifies the info about a recovery task.
      properties:
        progressTaskId:
          description: Specifies the progress monitor id.
          nullable: true
          readOnly: true
          type: string
          x-order: 0
        status:
          description: Specifies the status of the recovery.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        startTimeUsecs:
          description: Specifies the start time in Unix timestamp epoch in microseconds.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 2
        endTimeUsecs:
          description: Specifies the end time in Unix timestamp epoch in microseconds.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 3
      title: Recovery Task Info
      type: object
    RecoveryProcessType:
      description: Recovery Process Type
      properties:
        recoveryProcessType:
          description: Specifies the recovery process type.
          enum:
          - InstantRecovery
          - CopyRecovery
          type: string
          x-order: 0
      title: Recovery Process Type
      type: object
    RecoveryTaskInfo:
      description: Specifies the info about a recovery task.
      properties:
        progressTaskId:
          description: Specifies the progress monitor path.
          nullable: true
          readOnly: true
          type: string
          x-order: 0
        status:
          description: Specifies the status of the recovery.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        startTimeUsecs:
          description: Specifies the start time in Unix timestamp epoch in microseconds.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 2
        endTimeUsecs:
          description: Specifies the end time in Unix timestamp epoch in microseconds.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 3
      title: Recovery Task Info
      type: object
    RecoveryTimeRangeInfo:
      description: Specifies a valid time range to which this object can be recovered.
      properties:
        startTimeUsecs:
          description: Specifies the start time of this time range.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        endTimeUsecs:
          description: Specifies the end time of this time range.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        protectionGroupId:
          description: Specifies id of the Protection Group corresponding to this
            time range.
          nullable: true
          pattern: ^\d+:\d+:\d+$
          type: string
          x-order: 2
      title: Time range.
      type: object
    RecoveryType:
      description: Recovery Type
      properties:
        recoveryType:
          description: Specifies the recovery types.
          enum:
          - RecoverVMs
          - RecoverFiles
          - InstantVolumeMount
          - RecoverVmDisks
          - RecoverVApps
          - RecoverVAppTemplates
          - UptierSnapshot
          - RecoverRDS
          - RecoverAurora
          - RecoverApps
          - RecoverNasVolume
          - RecoverPhysicalVolumes
          - RecoverSystem
          - CloneAppView
          - RecoverSanVolumes
          - RecoverMailbox
          - RecoverOneDrive
          - RecoverSharePoint
          - RecoverPublicFolders
          - RecoverMsGroup
          - RecoverMsTeam
          - RecoverNamespaces
          - RecoverObjects
          - DownloadFilesAndFolders
          type: string
          x-order: 0
      title: Recovery Type
      type: object
    RecoveryVlanConfig:
      description: Specifies the VLAN configuration for Recovery.
      properties:
        id:
          description: If this is set, then the Cohesity host name or the IP address
            associated with this vlan is used for mounting Cohesity's view on the
            remote host.
          format: int32
          nullable: true
          type: integer
          x-order: 0
        disableVlan:
          description: If this is set to true, then even if VLANs are configured on
            the system, the partition VIPs will be used for the Recovery.
          nullable: true
          type: boolean
          x-order: 1
        interfaceName:
          description: Interface group to use for Recovery.
          nullable: true
          readOnly: true
          type: string
          x-order: 2
      title: Recovery VLAN config.
      type: object
    RedoLogGroupConfig:
      description: Specifies Redo log group configuration
      properties:
        numGroups:
          description: Specifies no. of redo log groups.
          format: int32
          nullable: true
          type: integer
          x-order: 0
        memberPrefix:
          description: Specifies Log member name prefix.
          nullable: true
          type: string
          x-order: 1
        sizeMBytes:
          description: Specifies Size of the member in MB.
          format: int32
          nullable: true
          type: integer
          x-order: 2
        groupMembers:
          description: Specifies list of members of this redo log group.
          items:
            type: string
          nullable: true
          type: array
          x-order: 3
      type: object
    RegisterOrUpdateKerberosProviderRequest:
      allOf:
      - $ref: '#/components/schemas/KerberosProvider'
      - $ref: '#/components/schemas/UnregisterKerberosRequest'
      description: |-
        Specifies the request to register or update a Kerberos
        Provider.
    RegisterSwiftParams:
      description: Specifies the parameters to register a Swift service on Keystone
        server.
      example:
        keystoneCredentials:
          scope: '{}'
          adminCreds: '{}'
        tenantId: tenantId
      properties:
        tenantId:
          description: Specifies the tenant Id who's Swift service will be registered.
          nullable: true
          type: string
          x-order: 0
        keystoneCredentials:
          $ref: '#/components/schemas/KeystoneCredentials'
      required:
      - tenantId
      type: object
    RegisterTrustedCas:
      description: Specifies the parameters to register a Certificate.
      example:
        onlyValidate: true
        certificates:
        - certificate: certificate
          name: name
          description: description
        - certificate: certificate
          name: name
          description: description
      properties:
        certificates:
          description: Specifies the certificates to be imported.
          items:
            $ref: '#/components/schemas/TrustedCaRequest'
          minItems: 1
          nullable: true
          type: array
          x-order: 0
        onlyValidate:
          description: Specifies if the certificates are only to be validated.
          nullable: true
          type: boolean
          x-order: 1
      required:
      - certificates
      type: object
    RegisteredRemoteStorageList:
      description: Specifies information about registered remote storage servers which
        are used by cohesity cluster.
      example:
        remoteStorages:
        - null
        - null
      properties:
        remoteStorages:
          description: Specifies the list of registered remote storage info.
          items:
            $ref: '#/components/schemas/RemoteStorageInfo'
          type: array
          x-order: 0
      title: Registered Remote Storage List
      type: object
    RegularBackupPolicy:
      description: Specifies the Incremental and Full policy settings and also the
        common Retention policy settings."
      properties:
        incremental:
          $ref: '#/components/schemas/IncrementalBackupPolicy'
        full:
          $ref: '#/components/schemas/FullBackupPolicy'
        retention:
          $ref: '#/components/schemas/Retention'
        primaryBackupTarget:
          $ref: '#/components/schemas/PrimaryBackupTarget'
      required:
      - retention
      title: Incremental, Full and Retention Policy.
      type: object
    RemoteAdapterHost:
      allOf:
      - $ref: '#/components/schemas/ScriptHost'
      - $ref: '#/components/schemas/RemoteAdapterHost_allOf'
      description: Specifies params of the remote host.
    RemoteAdapterProtectionGroupParams:
      description: Specifies the parameters which are specific to Remote Adapter related
        Protection Groups.
      nullable: true
      properties:
        hosts:
          description: Specifies a list of hosts to protected in this protection group.
          items:
            $ref: '#/components/schemas/RemoteAdapterHost'
          minItems: 1
          nullable: true
          type: array
          x-order: 0
        viewId:
          description: Specifies the id of the view where we put the script result
            data.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        remoteViewParams:
          $ref: '#/components/schemas/RemoteAdapterProtectionGroupReplicationParams'
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        appConsistentSnapshot:
          description: Specifies whether or not to quiesce apps and the file system
            in order to take app consistent snapshots.
          nullable: true
          type: boolean
          x-order: 4
      required:
      - hosts
      - viewId
      title: Remote Adapter Protection Group Parameters
      type: object
      x-nullable: true
    RemoteAdapterProtectionGroupReplicationParams:
      description: Specifies the parameters for Remote Adapter replication.
      properties:
        createView:
          description: Specifies whether or not to create a remote view on replication
            cluster.
          nullable: true
          type: boolean
          x-order: 0
        viewName:
          description: Specifies the name of the remote view. By default the name
            will be same as the protected view. If a view with the specified name
            already exists on the remote cluster, the created name will have a suffix
            '-1'.
          nullable: true
          type: string
          x-order: 1
      required:
      - createView
      title: Remote Adapter Replication Parameters
      type: object
    RemoteDisk:
      description: Specifies the configuration of a remote disk.
      example:
        mountPath: mountPath
        tier: PCIeSSD
        capacityBytesPhysical: 2
        capacityBytes: 1
        dataVip: dataVip
        usedCapacityBytes: 5
        usedCapacityBytesPhysical: 5
        nodeIp: nodeIp
        id: 0
        nodeId: 6
        fileSystemName: fileSystemName
        status: Active
      properties:
        id:
          description: Specifies the disk id.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 0
        mountPath:
          description: Specifies the NFS mount path of the remote disk.
          nullable: true
          type: string
          x-order: 1
        nodeId:
          description: Specifies the node id of the disk. If not specified, the disk
            will be evenly distributed across all the nodes.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        tier:
          description: Specifies the tier of the disk
          enum:
          - PCIeSSD
          - SATA-SSD
          - SATA-HDD
          - CLOUD
          nullable: true
          type: string
          x-order: 3
        capacityBytes:
          description: Specifies the logical capacity of the disk in bytes.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 4
        usedCapacityBytes:
          description: Specifies the logical used capacity of remote disk in bytes.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 5
        status:
          description: Specifies the status of a remote disk.
          enum:
          - Active
          - Offline
          - Deleting
          - Deleted
          - DataVipNotReachable
          - FileSystemNotAccessible
          - FileSystemDeleted
          - Mounting
          - Migrating
          - Unknown
          nullable: true
          readOnly: true
          type: string
          x-order: 6
        fileSystemName:
          description: Specifies the name of filesystem on remote storage.
          nullable: true
          type: string
          x-order: 7
        dataVip:
          description: Specifies the data vip used to mount the filesystem.
          nullable: true
          type: string
          x-order: 8
        nodeIp:
          description: Specifies ip address of the node that this remote disk is mounted
            on.
          nullable: true
          type: string
          x-order: 9
        usedCapacityBytesPhysical:
          description: Specifies the physical used capacity of remote disk in bytes.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 10
        capacityBytesPhysical:
          description: Specifies the physical capacity of the disk in bytes.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 11
      required:
      - mountPath
      - tier
      title: Remote disk
      type: object
    RemoteDisks:
      description: Specifies a list of remote disks.
      example:
        remoteDisks:
        - mountPath: mountPath
          tier: PCIeSSD
          capacityBytesPhysical: 2
          capacityBytes: 1
          dataVip: dataVip
          usedCapacityBytes: 5
          usedCapacityBytesPhysical: 5
          nodeIp: nodeIp
          id: 0
          nodeId: 6
          fileSystemName: fileSystemName
          status: Active
        - mountPath: mountPath
          tier: PCIeSSD
          capacityBytesPhysical: 2
          capacityBytes: 1
          dataVip: dataVip
          usedCapacityBytes: 5
          usedCapacityBytesPhysical: 5
          nodeIp: nodeIp
          id: 0
          nodeId: 6
          fileSystemName: fileSystemName
          status: Active
      properties:
        remoteDisks:
          description: Specifies a list of remote disks.
          items:
            $ref: '#/components/schemas/RemoteDisk'
          nullable: true
          type: array
          x-order: 0
      title: Remote disks
      type: object
    RemoteStorageInfo:
      allOf:
      - $ref: '#/components/schemas/CommonRemoteStorageInfo'
      - $ref: '#/components/schemas/RemoteStorageInfo_allOf'
      description: Specifies the remote storage Registration parameters.
      title: Remote storage Registration parameters.
    RemoteTargetConfig:
      description: Specifies the configuration for adding remote cluster as repilcation
        target
      properties:
        clusterId:
          description: Specifies the cluster id of the target replication cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        clusterName:
          description: Specifies the cluster name of the target replication cluster.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - clusterId
      title: Cluster Target Configuration
      type: object
    RemoveDisk:
      description: Specifies details of disk removal response.
      example:
        markedForRemoval: true
        id: 0
      properties:
        markedForRemoval:
          description: If true, Disk is marked for removal.
          nullable: true
          type: boolean
          x-order: 0
        id:
          description: Specifies id of the disk.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      title: Disk Removal Response.
      type: object
    RemoveNode:
      description: Specifies details of node removal response.
      example:
        markedForRemoval: true
        id: 0
      properties:
        markedForRemoval:
          description: If true, Node is marked for removal.
          nullable: true
          type: boolean
          x-order: 0
        id:
          description: Specifies id of the node.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      title: Node Removal Response.
      type: object
    ReplicaFailoverObject:
      description: Specifies the object paring of replicated object and failover object
        created after restore.
      example:
        replicaObjectId: 0
        failoverObjectId: 6
      properties:
        replicaObjectId:
          description: Specifies the object Id existing on the replciation cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        failoverObjectId:
          description: Specifies the corrosponding object id of the failover object.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    ReplicatedViewNameConfig:
      description: Specifies an object protected by a View Protection Group.
      properties:
        sourceViewId:
          description: Specifies the ID of the protected view.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        useSameViewName:
          description: Specifies if the remote view name to be kept is same as the
            source view name. If this field is true, viewName field will be ignored.
          nullable: true
          type: boolean
          x-order: 1
        viewName:
          description: Specifies the name of the remote view. This field is only used
            when useSameViewName is false. If useSameViewName is true, this field
            is not used.
          nullable: true
          type: string
          x-order: 2
      required:
      - sourceViewId
      type: object
    ReplicationBackupActivation:
      description: Specifies the request parmeters to activate the backup of failover
        entities on replication cluster.
      example:
        enableReverseReplication: true
        protectionGroupId: protectionGroupId
        objects:
        - objectId: 0
        - objectId: 0
      properties:
        objects:
          description: Specifies the list of failover object that need to be protected
            on replication cluster. If the object set that was sent earlier is provided
            again then API will return an error. If this objects list is not specified
            then internally it will be inferred if '/objectLinkage' API has been called
            previously.
          items:
            $ref: '#/components/schemas/FailoverObject'
          nullable: true
          type: array
          x-order: 0
        protectionGroupId:
          description: Specifies the protection group id that will be used for backing
            up the failover entities on replication cluster. This is a optional argument
            and only need to be passed if user wants to use the existing job for the
            backup. If specified then Orchastrator should enusre that protection group
            is compatible to handle all provided failover objects.
          nullable: true
          type: string
          x-order: 1
        enableReverseReplication:
          description: If this is specifed as true, then reverse replication of failover
            objects will be enabled from replication cluster to source cluster. If
            source cluster is not reachable, then replications will fail until source
            cluster comes up again. Here orchastrator should also ensure that storage
            domain on replication cluster is correctly mapped to the same storage
            domain on the source cluster.
          nullable: true
          type: boolean
          x-order: 2
      type: object
    ReplicationBackupActivationResult:
      description: Specifies the result returned after creating a protection group
        for backing up failover objects on replication cluster.
      example:
        protectionGroupId: protectionGroupId
        reverseReplicationResult:
          isReverseReplicationEnabled: true
          errorReason: errorReason
        objects:
        - objectId: 0
        - objectId: 0
      properties:
        protectionGroupId:
          description: Specifies the protection group id that will be returned upon
            creation of new group or existing group for backing up failover entities.
          nullable: true
          type: string
          x-order: 0
        reverseReplicationResult:
          $ref: '#/components/schemas/ReverseReplicationResult'
        objects:
          description: Specifies the list of failover object that are going to be
            protected on replication cluster.
          items:
            $ref: '#/components/schemas/FailoverObject'
          nullable: true
          type: array
          x-order: 2
      type: object
    ReplicationConfig:
      allOf:
      - $ref: '#/components/schemas/CommonTargetConfiguration'
      - $ref: '#/components/schemas/ReplicationConfig_allOf'
      description: Specifies settings for copying Snapshots to Remote Clusters. This
        also specifies the retention policy that should be applied to Snapshots after
        they have been copied to the specified target.
      title: Replication Target Configuration
    ReplicationDataStats:
      description: Specifies statistics about replication data.
      properties:
        logicalSizeBytes:
          description: Specifies the total logical size in bytes.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        logicalBytesTransferred:
          description: Specifies the total logical bytes transferred.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        physicalBytesTransferred:
          description: Specifies the total physical bytes transferred.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      title: Replication data statistics.
      type: object
    ReplicationRun:
      description: Specifies information about replication run for an object.
      properties:
        replicationTargetResults:
          description: Replication result for a target.
          items:
            $ref: '#/components/schemas/ReplicationTargetResult'
          type: array
          x-order: 0
      title: Replication run information for an object.
      type: object
    ReplicationRunSummary:
      description: Specifies summary information about replication run.
      properties:
        replicationTargetResults:
          description: Replication results for each replication target.
          items:
            $ref: '#/components/schemas/ReplicationTargetResult'
          type: array
          x-order: 0
      title: Summary information for replication run.
      type: object
    ReplicationTargetProgressInfo:
      allOf:
      - $ref: '#/components/schemas/ReplicationTargetSummaryInfo'
      - $ref: '#/components/schemas/ProgressTaskInfo'
      - $ref: '#/components/schemas/ArchivalTargetProgressInfo_allOf'
      description: Specifies the progress of a replication run target.
    ReplicationTargetResult:
      allOf:
      - $ref: '#/components/schemas/ReplicationTargetSummaryInfo'
      - $ref: '#/components/schemas/ReplicationTargetResult_allOf'
      description: Replication result for a target.
      title: Replication result for a target.
    ReplicationTargetSummaryInfo:
      allOf:
      - $ref: '#/components/schemas/ClusterIdentifier'
      - $ref: '#/components/schemas/ReplicationTargetSummaryInfo_allOf'
      description: Specifies replication target summary information.
      title: Replication target.
    ReplicationTargets:
      description: Replication Targets
      properties:
        replicationTargets:
          description: Specifies the replication target.
          enum:
          - RemoteCluster
          - AWS
          - Azure
          type: string
          x-order: 0
      title: ReplicationTargets
      type: object
    RequestInitiatorType:
      description: Specifies the type of the request's initiator.
      properties:
        requestInitiatorType:
          description: Specifies the type of the request's initiator.
          enum:
          - UIUser
          - UIAuto
          type: string
          x-order: 0
      title: RequestInitiatorType
      type: object
    ResetOrRestoreNetworking:
      description: Update cluster or node reset state information
      properties:
        operation:
          description: Cancel reset cluster or node state operation.
          enum:
          - network-reset
          - restore
          nullable: true
          type: string
          x-go-name: Operation
          x-order: 0
      title: ResetOrRestoreNetworking
      type: object
    ResetStates:
      items:
        $ref: '#/components/schemas/NodeResetState'
      type: array
    ResourceEndpoint:
      description: Specifies the details about the resource endpoint.
      properties:
        fqdn:
          description: Specifies the fqdn of this endpoint.
          nullable: true
          type: string
          x-order: 0
        ipv4addr:
          description: Specifies the ipv4 address of this endpoint.
          nullable: true
          type: string
          x-order: 1
        ipv6addr:
          description: Specifies the ipv6 address of this endpoint.
          nullable: true
          type: string
          x-order: 2
        subnetIp4addr:
          description: Specifies the subnet Ip4 address of this endpoint.
          nullable: true
          type: string
          x-order: 3
        preferredAddress:
          description: Specifies the preferred address to use for connecting.
          nullable: true
          type: string
          x-order: 4
        isPreferredEndpoint:
          description: Whether to use this endpoint to connect.
          nullable: true
          type: boolean
          x-order: 5
      type: object
    RestoreFilterParams:
      description: Specifies the additional filtering params for recoveries.
      properties:
        recoveryTypes:
          description: Specifies the recovery types to filter recoveries.
          items:
            enum:
            - RecoverVMs
            - RecoverFiles
            - InstantVolumeMount
            - RecoverVmDisks
            - RecoverVApps
            - RecoverVAppTemplates
            - UptierSnapshot
            - RecoverRDS
            - RecoverAurora
            - RecoverApps
            - RecoverNasVolume
            - RecoverPhysicalVolumes
            - RecoverSystem
            - CloneAppView
            - RecoverSanVolumes
            - RecoverMailbox
            - RecoverOneDrive
            - RecoverSharePoint
            - RecoverPublicFolders
            - RecoverMsGroup
            - RecoverMsTeam
            - RecoverNamespaces
            - RecoverObjects
            - DownloadFilesAndFolders
            type: string
          nullable: true
          type: array
          x-order: 0
      type: object
    ResumeActionObjectLevelParams:
      allOf:
      - $ref: '#/components/schemas/ProtectionObjectInput'
      description: Specifies the request parameters for Resume action on a Protected
        object.
    ResumeActionObjectLevelResponse:
      description: Specifies the infomration about status of resume action.
      properties:
        error:
          $ref: '#/components/schemas/Error'
      type: object
    ResumeProtectionRunActionParams:
      description: Specifies the request to resume a protection run.
      example:
        runId: runId
      properties:
        runId:
          description: Specifies a unique run id of the Protection Group run.
          nullable: true
          pattern: ^\d+:\d+$
          type: string
          x-order: 0
      required:
      - runId
      title: Resume protection run request.
      type: object
    ResumeProtectionRunActionResponseParams:
      description: Specifies the response of a resume action on protection runs.
      example:
        runId: runId
        error: error
      properties:
        runId:
          description: Specifies a unique run id of the Protection Group run.
          nullable: true
          pattern: ^\d+:\d+$
          type: string
          x-order: 0
        error:
          description: Specifies an error occured when perfroming resume of a protection
            run.
          nullable: true
          type: string
          x-order: 1
      type: object
    Retention:
      description: Specifies the retention of a backup.
      example:
        duration: 1
        unit: Days
        dataLockConfig:
          mode: Compliance
          duration: 1
          unit: Days
      properties:
        unit:
          description: 'Specificies the Retention Unit of a backup measured in days,
            months or years. <br> If unit is ''Months'', then number specified in
            duration is multiplied to 30. <br> Example: If duration is 4 and unit
            is ''Months'' then number of retention days will be 30 * 4 = 120 days.
            <br> If unit is ''Years'', then number specified in duration is multiplied
            to 365. <br> If duration is 2 and unit is ''Months'' then number of retention
            days will be 365 * 2 = 730 days.'
          enum:
          - Days
          - Weeks
          - Months
          - Years
          nullable: true
          type: string
          x-order: 0
        duration:
          description: Specifies the duration for a backup retention. <br> Example.
            If duration is 7 and unit is Months, the retention of a backup is 7 *
            30 = 210 days.
          format: int64
          minimum: 1
          nullable: true
          type: integer
          x-order: 1
        dataLockConfig:
          $ref: '#/components/schemas/DataLockConfig'
      required:
      - duration
      - unit
      type: object
    RetentionUnits:
      description: Retention Units.
      properties:
        retentionUnits:
          description: Specifies the retention unit.
          enum:
          - Days
          - Weeks
          - Months
          - Years
          type: string
          x-order: 0
      title: RetentionUnits
      type: object
    RetryOptions:
      description: Retry Options of a Protection Policy when a Protection Group run
        fails.
      properties:
        retries:
          description: |-
            Specifies the number of times to retry capturing Snapshots before
            the Protection Group Run fails.
          format: int32
          minimum: 0
          nullable: true
          type: integer
          x-order: 0
        retryIntervalMins:
          description: Specifies the number of minutes before retrying a failed Protection
            Group.
          format: int32
          minimum: 1
          nullable: true
          type: integer
          x-order: 1
      type: object
    ReverseReplicationResult:
      description: Specifies the request parameters to create a view failover task.
      example:
        isReverseReplicationEnabled: true
        errorReason: errorReason
      properties:
        isReverseReplicationEnabled:
          description: Specifies whether the reverse replication was enabled or not
            during group creation. It can be false, if source cluster is not reachable
            for reverse replication.
          nullable: true
          type: boolean
          x-order: 0
        errorReason:
          description: Specifies the reason of not enabling reverse replication.
          nullable: true
          type: string
          x-order: 1
      type: object
    RevertPatchesRequest:
      description: Specifies the request to revert a patch. An optional patch level
        can be specified. When a patch level is specified, system keeps reverting
        patches until the given patch level is reverted. If no patch level is specified,
        just the last applied patch is reverted.
      example:
        service: service
        patchLevel: 0
      properties:
        service:
          description: Specifies the name of the service whose patch should be reverted.
          type: string
          x-order: 0
        patchLevel:
          description: Specifies optional patch level upto which the patches should
            be reverted. If given, it should be between 1 and the current patch level
            inclusive.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      required:
      - service
      title: Revert patch.
      type: object
    RigelClaimInfo:
      description: Specifies the Rigel registration info.
      example:
        message: message
        status: NotDone
      properties:
        status:
          description: Specifies the registration status.
          enum:
          - NotDone
          - InProgress
          - Success
          - Failed
          nullable: true
          type: string
          x-order: 0
        message:
          description: Specifies possible error message during registration.
          nullable: true
          type: string
          x-order: 1
      title: Rigel Claim Info.
      type: object
    RigelClaimLog:
      description: Specifies an event during Rigel claim..
      properties:
        timeStamp:
          description: Specifies the time stamp in microseconds of the event.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        message:
          description: Specifies the message of this event.
          nullable: true
          type: string
          x-order: 1
        type:
          description: Specifies the severity of the event.
          nullable: true
          type: string
          x-order: 2
          x-cohesity-enum: rigel_claim_log_type
      title: Rigel Claim Log.
      type: object
    RigelClaimLogs:
      description: Specifies the Rigel claim logs.
      properties:
        rigelClaimLogs:
          description: Specifies Rigel claim logs.
          items:
            $ref: '#/components/schemas/RigelClaimLog'
          nullable: true
          type: array
          x-order: 0
      title: Rigel Claim Logs.
      type: object
    RigelClusterConfigParams:
      description: Params for Rigel Cluster Creation
      example:
        nodes:
        - nodeIp: nodeIp
          nodeId: 1
        - nodeIp: nodeIp
          nodeId: 1
        claimToken: claimToken
        dataplaneEndpoint: dataplaneEndpoint
      nullable: true
      properties:
        nodes:
          description: Specifies the Nodes present in this Cluster.
          items:
            $ref: '#/components/schemas/RigelClusterNode'
          nullable: true
          type: array
          x-order: 0
        dataplaneEndpoint:
          description: Specifies the endpoint of the dataplane cluster which is associated
            with this rigel.
          nullable: true
          type: string
          x-order: 1
        claimToken:
          description: Specifies the token which is used to claim this Cluster to
            Helios.
          nullable: true
          readOnly: true
          type: string
          x-order: 2
      title: Rigel Cluster Params.
      type: object
      x-nullable: true
    RigelClusterNode:
      description: Params for a Rigel Cluster Node
      example:
        nodeIp: nodeIp
        nodeId: 1
      properties:
        nodeIp:
          description: Specifies the IP address of the Node.
          nullable: true
          type: string
          x-order: 0
        nodeId:
          description: Specifies the ID of the Node.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      required:
      - nodeIp
      title: Rigel Cluster Node
      type: object
    RigelConnection:
      description: Specify a connection of Rigel.
      properties:
        id:
          description: Specifies the id of the connection.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the connection.
          nullable: true
          type: string
          x-order: 1
      title: Rigel connection.
      type: object
    RigelConnectionInfo:
      description: Specifies the Rigel connection info.
      example:
        lastConnectedTimestampMsecs: 0
        isActive: true
        message: message
      properties:
        isActive:
          description: Specifies if the connection is active.
          nullable: true
          type: boolean
          x-order: 0
        message:
          description: Specifies possible error message when rigel is not able to
            connect.
          nullable: true
          type: string
          x-order: 1
        lastConnectedTimestampMsecs:
          description: Specifies last timestamp for which connection status was known.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      title: Rigel Connection Info.
      type: object
    RigelConnections:
      description: Specify a list of connection of Rigel.
      properties:
        RigelConnections:
          description: Specifies a list of connection of Rigel.
          items:
            $ref: '#/components/schemas/RigelConnection'
          nullable: true
          type: array
          x-order: 0
      title: Rigel connections.
      type: object
    RigelConnector:
      description: Specify a Rigel connector.
      properties:
        id:
          description: Specifies the id of the connector.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the connector.
          nullable: true
          type: string
          x-order: 1
        connectionId:
          description: Specifies the Id of the connection which this connector belongs
            to.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        certificateVersion:
          description: Specifies the version of the connector's certificate. The version
            is used to revoke/renew connector's certificates.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        connectionStatus:
          $ref: '#/components/schemas/ConnectorConnectionInfo'
      title: Rigel Connector.
      type: object
    RigelConnectors:
      description: Specify a list of Rigel connectors.
      properties:
        RigelConnectors:
          description: Specifies a list of Rigel Connectors.
          items:
            $ref: '#/components/schemas/RigelConnector'
          nullable: true
          type: array
          x-order: 0
      title: Rigel Connectors.
      type: object
    RigelEntityType:
      description: Entity type.
      properties:
        type:
          description: Entity type.
          enum:
          - OnPrem
          - Cloud
          type: string
          x-order: 0
      title: Entity type.
      type: object
    RigelRegConfig:
      description: Specifies the Rigel Registration Config.
      example:
        dataPlaneConnectionInfo:
          lastConnectedTimestampMsecs: 0
          isActive: true
          message: message
        regInfo:
          message: message
          status: NotDone
        controlPlaneConnectionInfo:
          lastConnectedTimestampMsecs: 0
          isActive: true
          message: message
      properties:
        regInfo:
          $ref: '#/components/schemas/RigelClaimInfo'
        controlPlaneConnectionInfo:
          $ref: '#/components/schemas/RigelConnectionInfo'
        dataPlaneConnectionInfo:
          $ref: '#/components/schemas/RigelConnectionInfo'
      title: Rigel Registration Config.
      type: object
    RigelUseCase:
      description: Rigel Use Case.
      properties:
        type:
          description: Rigel Use Case.
          enum:
          - Baas
          - DRaasFailover
          type: string
          x-order: 0
      title: Rigel Use Case.
      type: object
    Role:
      allOf:
      - $ref: '#/components/schemas/CreateRoleParams'
      - $ref: '#/components/schemas/Role_allOf'
      description: Specifies a Role.
    Roles:
      description: Specifies a list of Roles.
      example:
        roles:
        - null
        - null
      properties:
        roles:
          description: Specifies the list of Roles.
          items:
            $ref: '#/components/schemas/Role'
          nullable: true
          type: array
          x-order: 0
      type: object
    RootPublicFolderParam:
      description: Specifies parameters to recover a RootPublicFolder.
      properties:
        recoverObject:
          allOf:
          - $ref: '#/components/schemas/CommonRecoverObjectSnapshotParams'
          - type: object
            x-nullable: true
          description: Specifies the RootPublicFolder recover Object info.
          type: object
          x-order: 0
        recoverEntireRootPublicFolder:
          description: Specifies whether to recover the whole RootPublicFolder.
          nullable: true
          type: boolean
          x-order: 1
        recoverFolders:
          description: Specifies a list of Public Folders to recover. This field is
            applicable only if 'recoverEntireRootPublicFolder' is false.
          items:
            $ref: '#/components/schemas/PublicFolder'
          nullable: true
          type: array
          x-order: 2
      required:
      - recoverObject
      type: object
    RunArchivalConfig:
      description: Specifies settings for copying Snapshots External Targets (such
        as AWS or Tape). This also specifies the retention policy that should be applied
        to Snapshots after they have been copied to the specified target.
      example:
        id: 7
        archivalTargetType: Tape
        retention:
          duration: 1
          unit: Days
          dataLockConfig:
            mode: Compliance
            duration: 1
            unit: Days
      properties:
        id:
          description: Specifies the Archival target to copy the Snapshots to.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        archivalTargetType:
          description: Specifies the snapshot's archival target type from which recovery
            has been performed.
          enum:
          - Tape
          - Cloud
          - Nas
          nullable: true
          type: string
          x-order: 1
        retention:
          $ref: '#/components/schemas/Retention'
      required:
      - archivalTargetType
      - id
      title: Archival Target Configuration
      type: object
    RunFilterValues:
      description: Run Filter Values.
      properties:
        runFilterValues:
          description: Specifies Run Filter Value.
          enum:
          - kAll
          - kLog
          - kSystem
          - kIncremental
          - kFull
          type: string
          x-order: 0
      title: Run Filter Values.
      type: object
    RunNowActionObjectLevelParams:
      allOf:
      - $ref: '#/components/schemas/ProtectionObjectInput'
      - $ref: '#/components/schemas/RunNowActionObjectLevelParams_allOf'
      description: Specifies the request parameters for RunNow action on a Protected
        object.
    RunNowActionObjectLevelResponse:
      description: Specifies the infomration about status of run now action.
      properties:
        error:
          $ref: '#/components/schemas/Error'
      type: object
    RunObject:
      description: Specifies the object details to create a protection run.
      example:
        physicalParams:
          metadataFilePath: metadataFilePath
        appIds:
        - 6
        - 6
        id: 0
      properties:
        id:
          description: Specifies the id of object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        appIds:
          description: Specifies a list of ids of applications.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 1
        physicalParams:
          $ref: '#/components/schemas/RunObjectPhysicalParams'
      required:
      - id
      type: object
    RunObjectPhysicalParams:
      description: Specifies physical parameters for this run.
      example:
        metadataFilePath: metadataFilePath
      properties:
        metadataFilePath:
          description: Specifies metadata file path during run-now requests for physical
            file based backups for some specific source. If specified, it will override
            any default metadata/directive file path set at the object level for the
            source. Also note that if the job default does not specify a metadata/directive
            file path for the source, then specifying this field for that source during
            run-now request will be rejected.
          nullable: true
          type: string
          x-order: 0
      type: object
    RunReplicationConfig:
      description: Specifies settings for copying Snapshots to Remote Clusters. This
        also specifies the retention policy that should be applied to Snapshots after
        they have been copied to the specified target.
      example:
        id: 6
        retention:
          duration: 1
          unit: Days
          dataLockConfig:
            mode: Compliance
            duration: 1
            unit: Days
      properties:
        id:
          description: Specifies id of Remote Cluster to copy the Snapshots to.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        retention:
          $ref: '#/components/schemas/Retention'
      required:
      - id
      title: Replication Target Configuration
      type: object
    RunTargetsConfiguration:
      description: Specifies the replication and archival targets.
      example:
        usePolicyDefaults: false
        replications:
        - id: 6
          retention:
            duration: 1
            unit: Days
            dataLockConfig:
              mode: Compliance
              duration: 1
              unit: Days
        - id: 6
          retention:
            duration: 1
            unit: Days
            dataLockConfig:
              mode: Compliance
              duration: 1
              unit: Days
        archivals:
        - id: 7
          archivalTargetType: Tape
          retention:
            duration: 1
            unit: Days
            dataLockConfig:
              mode: Compliance
              duration: 1
              unit: Days
        - id: 7
          archivalTargetType: Tape
          retention:
            duration: 1
            unit: Days
            dataLockConfig:
              mode: Compliance
              duration: 1
              unit: Days
      properties:
        usePolicyDefaults:
          default: false
          description: Specifies whether to use default policy settings or not. If
            specified as true then 'replications' and 'arcihvals' should not be specified.
            In case of true value, replicatioan targets congfigured in the policy
            will be added internally.
          nullable: true
          type: boolean
          x-order: 0
        replications:
          description: Specifies a list of replication targets configurations.
          items:
            $ref: '#/components/schemas/RunReplicationConfig'
          nullable: true
          type: array
          x-order: 1
        archivals:
          description: Specifies a list of archival targets configurations.
          items:
            $ref: '#/components/schemas/RunArchivalConfig'
          nullable: true
          type: array
          x-order: 2
      title: Target Configuration
      type: object
    S3AccountParams:
      description: Specifies S3 Account parameters for User.
      properties:
        s3AccountId:
          description: Specifies the S3 Account Canonical User ID.
          nullable: true
          type: string
          x-order: 0
        s3AccessKeyId:
          description: Specifies the S3 Account Access Key ID.
          nullable: true
          type: string
          x-order: 1
        s3SecretKey:
          description: Specifies the S3 Account Secret Key.
          nullable: true
          type: string
          x-order: 2
      type: object
    S3AclGranteeType:
      description: Specifies S3 Grantee Type.
      properties:
        enum:
          description: Specifies S3 Grantee Type.
          enum:
          - RegisteredUser
          type: string
          x-order: 0
      title: S3 Grantee Type
      type: object
    S3AclPermission:
      description: Specifies S3 ACL permission type.
      properties:
        enum:
          description: Specifies S3 ACL permission type.
          enum:
          - Read
          - Write
          - ReadACP
          - WriteACP
          - FullControl
          type: string
          x-order: 0
      title: S3 ACL Permission
      type: object
    S3Config:
      description: Specifies the S3 config settings for this View.
      properties:
        s3AccessPath:
          description: Specifies the path to access this View as an S3 share.
          nullable: true
          readOnly: true
          type: string
          x-order: 0
        aclConfig:
          allOf:
          - $ref: '#/components/schemas/AclConfig'
          - type: object
            x-nullable: true
          description: Specifies the ACL config of the View as an S3 bucket.
          type: object
          x-order: 1
        ownerInfo:
          allOf:
          - $ref: '#/components/schemas/S3OwnerInfo'
          - type: object
            x-nullable: true
          - readOnly: true
            type: object
          description: Specifies the owner info of the View as an S3 bucket.
          type: object
          x-order: 2
      type: object
    S3ConfigForIndexing:
      description: S3 config for indexing in DMaaS.
      properties:
        s3BucketName:
          description: Name of S3 bucket to store indexed data.
          nullable: true
          type: string
          x-order: 0
        s3Prefix:
          description: Prefix under S3 bucket where data will be stored.
          nullable: true
          type: string
          x-order: 1
        s3IamRoleArn:
          description: IAM role ARN which has access to S3 instance.
          nullable: true
          type: string
          x-order: 2
      required:
      - s3BucketName
      - s3IamRoleArn
      - s3Prefix
      title: S3ConfigForIndexing
      type: object
    S3OwnerInfo:
      description: Specifies the owner info of an S3 bucket.
      properties:
        userId:
          description: Specifies the user id of the owner.
          nullable: true
          type: string
          x-order: 0
      required:
      - userId
      type: object
    SQLServer:
      description: Specifies the details of a SQL server.
      properties:
        id:
          description: Specifies the unique identifier of the SQL server host.
          nullable: true
          type: string
          x-order: 0
        resourceInfo:
          $ref: '#/components/schemas/AppResource'
        agentInfo:
          $ref: '#/components/schemas/AgentInformation'
        error:
          $ref: '#/components/schemas/Error'
        isPrimary:
          description: Indicates whether this is a active node of a FCI cluster or
            hosts primary replica of a AAG group.
          nullable: true
          type: boolean
          x-order: 4
        instances:
          description: Specifies the list of all sql instances running inside the
            current SQL host.
          items:
            $ref: '#/components/schemas/SQLServerInstance'
          nullable: true
          type: array
          x-order: 5
        isSelectedByDefault:
          description: Indicates to the UI whether this server should be selected
            by default
          nullable: true
          type: boolean
          x-order: 6
      type: object
    SQLServerInstance:
      description: Specifies the details of a SQL server.
      properties:
        id:
          description: Specifies the unique id of the SQL server instance.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the name of the SQL server instance.
          nullable: true
          type: string
          x-order: 1
        isOnline:
          description: Specifies the wehther the SQL server instance is online or
            not.
          nullable: true
          type: string
          x-order: 2
        endpoints:
          description: Specifies the information about endpoint associated with this
            SQL server instance.
          items:
            $ref: '#/components/schemas/ResourceEndpoint'
          nullable: true
          type: array
          x-order: 3
        isPartofFCI:
          description: Specifies whether this SQL server instance is a part of Failover
            cluster or not.
          nullable: true
          type: boolean
          x-order: 4
      type: object
    ScheduleUnit:
      description: Schedule Units
      properties:
        scheduleUnit:
          description: Specifies the schedule unit.
          enum:
          - Runs
          - Hours
          - Days
          - Weeks
          - Months
          - Years
          type: string
          x-order: 0
      title: ScheduleUnit
      type: object
    ScheduledBackup:
      description: Scheduled Backup type.
      properties:
        scheduledBackup:
          description: Specifies Scheduled Backup type.
          enum:
          - kRegular
          - kFull
          - kLog
          - kSystem
          - kHydrateCDP
          type: string
          x-order: 0
      title: Scheduled Backup type.
      type: object
    Schema:
      description: Specifies the metric data point where public data metric as key
        and the schema defined metric name as value.
      example:
        metricName: metricName
        entityId: entityId
        schemaName: schemaName
      properties:
        metricName:
          description: Specifies the name of schema metric.
          nullable: true
          type: string
          x-order: 0
        schemaName:
          description: Specifies the name of the schema.
          nullable: true
          type: string
          x-order: 1
        entityId:
          description: Specifies the id of the entity.
          nullable: true
          type: string
          x-order: 2
      title: Schema
      type: object
    ScriptHost:
      description: Specifies the params for the host of a pre / post script.
      properties:
        hostname:
          description: Specifies the Hostname or IP address of the host where the
            pre and post script will be run.
          nullable: true
          type: string
          x-order: 0
        username:
          description: Specifies the username for the host.
          nullable: true
          type: string
          x-order: 1
        hostType:
          description: Specifies the Operating system type of the host.
          enum:
          - kLinux
          - kWindows
          - kAix
          - kSolaris
          - kSapHana
          - kOther
          nullable: true
          type: string
          x-order: 2
      title: Pre/Post Script Host
      type: object
    ScriptHostType:
      description: Script Host Type
      properties:
        scriptHostType:
          description: Specifies the host type of the pre/post script.
          enum:
          - kLinux
          - kWindows
          - kAix
          - kSolaris
          - kSapHana
          - kOther
          type: string
          x-order: 0
      title: ScriptHostType
      type: object
    ScvmmRegistrationParams:
      allOf:
      - $ref: '#/components/schemas/CommonSourceRegistrationParams'
      - $ref: '#/components/schemas/ScvmmRegistrationParams_allOf'
      description: Specifies parameters to register HyperV SCVMM.
      title: Register HyperV SCVMM request parameters.
    SearchDocumentLibraryRequestParams:
      description: Specifies the request parameters to search for files/folders in
        document libraries.
      properties:
        searchString:
          description: Specifies the search string to filter the files/folders. User
            can specify a wildcard character '*' as a suffix to a string where all
            item names are matched with the prefix string.
          nullable: true
          type: string
          x-order: 0
        includeFolders:
          default: true
          description: Specifies whether to include folders in the response. Default
            is true.
          nullable: true
          type: boolean
          x-order: 1
        includeFiles:
          default: true
          description: Specifies whether to include files in the response. Default
            is true.
          nullable: true
          type: boolean
          x-order: 2
        categoryTypes:
          description: Specifies a list of document library types. Only items within
            the given types will be returned.
          items:
            enum:
            - Document
            - Excel
            - Powerpoint
            - Image
            - OneNote
            type: string
          nullable: true
          type: array
          uniqueItems: true
          x-order: 3
        creationStartTimeSecs:
          description: Specifies the start time in Unix timestamp epoch in seconds
            when the file/folder is created.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        creationEndTimeSecs:
          description: Specifies the end time in Unix timestamp epoch in seconds when
            the file/folder is created.
          format: int64
          nullable: true
          type: integer
          x-order: 5
        sizeBytesLowerLimit:
          description: Specifies the minimum size of the file in bytes.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        sizeBytesUpperLimit:
          description: Specifies the maximum size of the file in bytes.
          format: int64
          nullable: true
          type: integer
          x-order: 7
        ownerNames:
          description: Specifies the list of owner names to filter on owner of the
            file/folder.
          items:
            type: string
          nullable: true
          type: array
          x-order: 8
        o365Params:
          $ref: '#/components/schemas/O365SearchSharepointRequestParams'
      title: Search Document library request params.
      type: object
    SearchEmailRequestParams:
      allOf:
      - $ref: '#/components/schemas/SearchEmailRequestParamsBase'
      - $ref: '#/components/schemas/SearchEmailRequestParams_allOf'
      description: Specifies the request parameters to search for emails and email
        folders.
      title: Search emails request params.
    SearchEmailRequestParamsBase:
      description: Specifies the request parameters to search for emails and email
        folders.
      properties:
        types:
          description: Specifies a list of mailbox item types. Only items within the
            given types will be returned.
          items:
            enum:
            - Email
            - Folder
            type: string
          nullable: true
          type: array
          uniqueItems: true
          x-order: 0
        hasAttachment:
          description: Filters the emails which have attachment.
          nullable: true
          type: boolean
          x-order: 1
        senderAddress:
          description: Filters the emails which are received from specified User's
            email address.
          nullable: true
          type: string
          x-order: 2
        recipientAddresses:
          description: Filters the emails which are sent to specified email addresses.
          items:
            type: string
          nullable: true
          type: array
          x-order: 3
        ccRecipientAddresses:
          description: Filters the emails which are sent to specified email addresses
            in CC.
          items:
            type: string
          nullable: true
          type: array
          x-order: 4
        bccRecipientAddresses:
          description: Filters the emails which are sent to specified email addresses
            in BCC.
          items:
            type: string
          nullable: true
          type: array
          x-order: 5
        receivedStartTimeSecs:
          description: Specifies the start time in Unix timestamp epoch in seconds
            where the received time of the email is more than specified value.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        receivedEndTimeSecs:
          description: Specifies the end time in Unix timestamp epoch in seconds where
            the received time of the email is less than specified value.
          format: int64
          nullable: true
          type: integer
          x-order: 7
        emailSubject:
          description: Filters the emails which have the specified text in its subject.
          nullable: true
          type: string
          x-order: 8
        folderNames:
          description: Filters the emails which are categorized to specified folders.
          items:
            type: string
          nullable: true
          type: array
          x-order: 9
        sourceEnvironment:
          description: Specifies the source environment.
          enum:
          - kO365
          nullable: true
          type: string
          x-order: 10
      title: Search emails request params.
      type: object
    SearchExchangeObjectsRequestParams:
      description: Specifies the parameters which are specific for searching Exchange
        mailboxes.
      properties:
        searchString:
          description: Specifies the search string to search the Exchange Objects
          nullable: true
          type: string
          x-order: 0
      required:
      - searchString
      type: object
    SearchFileRequestParams:
      allOf:
      - $ref: '#/components/schemas/SearchFileRequestParamsBase'
      - $ref: '#/components/schemas/OnPremSourceIds'
      - $ref: '#/components/schemas/OnPremObjectIds'
      description: Specifies the request parameters to search for files and file folders.
      title: Search files request params.
    SearchFileRequestParamsBase:
      description: Specifies the request parameters to search for files and file folders.
      properties:
        searchString:
          description: Specifies the search string to filter the files. User can specify
            a wildcard character '*' as a suffix to a string where all files name
            are matched with the prefix string.
          nullable: true
          type: string
          x-order: 0
        types:
          description: Specifies a list of file types. Only files within the given
            types will be returned.
          items:
            enum:
            - File
            - Directory
            - Symlink
            type: string
          nullable: true
          type: array
          uniqueItems: true
          x-order: 1
        sourceEnvironments:
          description: Specifies a list of the source environments. Only files from
            these types of source will be returned.
          items:
            enum:
            - kVMware
            - kHyperV
            - kSQL
            - kView
            - kRemoteAdapter
            - kPhysical
            - kPhysicalFiles
            - kPure
            - kAzure
            - kNetapp
            - kGenericNas
            - kAcropolis
            - kIsilon
            - kGPFS
            - kKVM
            - kAWS
            - kExchange
            - kOracle
            - kGCP
            - kFlashBlade
            - kO365
            - kHyperFlex
            - kKubernetes
            - kElastifile
            - kUDA
            type: string
          nullable: true
          type: array
          x-order: 2
      title: Search files request params.
      type: object
    SearchIndexedObjectsRequest:
      allOf:
      - $ref: '#/components/schemas/CommonSearchIndexedObjectsRequestParams'
      - $ref: '#/components/schemas/SearchIndexedObjectsRequest_allOf'
      description: Specifies the request parameters to search for indexed objects.
      title: Search indexed objects request params.
    SearchIndexedObjectsResponseBody:
      allOf:
      - $ref: '#/components/schemas/CommonSearchIndexedObjectsResponseParams'
      - $ref: '#/components/schemas/SearchIndexedObjectsResponseBody_allOf'
      description: Specifies the search indexed objects response body.
      title: Search Indexed objects response body.
    SearchIndexedObjectsWebSocketRequest:
      description: |-
        The request parameters required for MCM Search Indexed Objects Requests,
        in websocket mode.
      properties:
        messageId:
          description: |-
            ID of the message, used to uniqely identify a message.
            The response will contain this messageId to indicate the request
            to which the response belongs to.
            Hint: Use current timestamp in micro seconds.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        body:
          $ref: '#/components/schemas/HeliosSearchIndexedObjectsRequest'
      required:
      - body
      - messageId
      title: Helios SearchIndexedObjects Websocket Request
      type: object
    SearchIndexedObjectsWebSocketResponse:
      description: The response parameters sent by the MCM Search Sndexed Sbject Websocket.
      properties:
        messageId:
          description: |-
            ID of the message, to which the response belongs.
            This ID is returned as sent by the client.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        status:
          description: |-
            Denotes if the search operation is complete, errored or in-progress
            and if it is safe to close
            the websocket by the client in case there aren't any additional
            search requests to be sent by the client.
          enum:
          - Running
          - Complete
          - Error
          nullable: true
          type: string
          x-order: 1
        body:
          $ref: '#/components/schemas/HeliosSearchIndexedObjectsResponseBody'
        error:
          description: Error message, this will be populated if status is Error
          nullable: true
          type: string
          x-order: 3
      required:
      - body
      - messageId
      title: Helios SearchIndexedObjects Websocket Response
      type: object
    SearchMsTeamsRequestParams:
      description: Specifies the request params to search for Teams items.
      properties:
        searchString:
          description: Specifies the search string to filter the items. User can specify
            a wildcard character '*' as a suffix to a string where all item names
            are matched with the prefix string.
          nullable: true
          type: string
          x-order: 0
        types:
          description: Specifies a list of Teams item types. Only items within the
            given types will be returned.
          items:
            enum:
            - Channel
            - Chat
            - Conversation
            - File
            - Folder
            type: string
          nullable: true
          type: array
          uniqueItems: true
          x-order: 1
        channelName:
          description: Specifies the name of the channel. Only items within the specified
            channel will be returned.
          nullable: true
          type: string
          x-order: 2
      title: Search Teams request params.
      type: object
    SearchObject:
      allOf:
      - $ref: '#/components/schemas/Object'
      - $ref: '#/components/schemas/TagObject'
      - $ref: '#/components/schemas/SearchObject_allOf'
      description: Specifies an object.
    SearchPublicFolderRequestParams:
      description: Specifies the request parameters to search for Public Folder items.
      properties:
        searchString:
          description: Specifies the search string to filter the items. User can specify
            a wildcard character '*' as a suffix to a string where all item names
            are matched with the prefix string.
          nullable: true
          type: string
          x-order: 0
        types:
          description: Specifies a list of public folder item types. Only items within
            the given types will be returned.
          items:
            enum:
            - Calendar
            - Contact
            - Post
            - Folder
            - Task
            - Journal
            - Note
            type: string
          nullable: true
          type: array
          uniqueItems: true
          x-order: 1
        hasAttachment:
          description: Filters the public folder items which have attachment.
          nullable: true
          type: boolean
          x-order: 2
        senderAddress:
          description: Filters the public folder items which are received from specified
            user's email address.
          nullable: true
          pattern: ^\S+@\S+.\S+$
          type: string
          x-order: 3
        recipientAddresses:
          description: Filters the public folder items which are sent to specified
            email addresses.
          items:
            pattern: ^\S+@\S+.\S+$
            type: string
          nullable: true
          type: array
          x-order: 4
        ccRecipientAddresses:
          description: Filters the public folder items which are sent to specified
            email addresses in CC.
          items:
            pattern: ^\S+@\S+.\S+$
            type: string
          nullable: true
          type: array
          x-order: 5
        bccRecipientAddresses:
          description: Filters the public folder items which are sent to specified
            email addresses in BCC.
          items:
            pattern: ^\S+@\S+.\S+$
            type: string
          nullable: true
          type: array
          x-order: 6
        receivedStartTimeSecs:
          description: Specifies the start time in Unix timestamp epoch in seconds
            where the received time of the public folder item is more than specified
            value.
          format: int64
          nullable: true
          type: integer
          x-order: 7
        receivedEndTimeSecs:
          description: Specifies the end time in Unix timestamp epoch in seconds where
            the received time of the public folder items is less than specified value.
          format: int64
          nullable: true
          type: integer
          x-order: 8
      title: Search Public Folder request params.
      type: object
    SecurityConfig:
      description: Specifies the fields of security settings.
      properties:
        passwordStrength:
          $ref: '#/components/schemas/SecurityConfigPasswordStrength'
        passwordReuse:
          $ref: '#/components/schemas/SecurityConfigPasswordReuse'
        passwordLifetime:
          $ref: '#/components/schemas/SecurityConfigPasswordLifetime'
        accountLockout:
          $ref: '#/components/schemas/SecurityConfigAccountLockout'
        dataClassification:
          $ref: '#/components/schemas/SecurityConfigDataClassification'
        sessionConfiguration:
          $ref: '#/components/schemas/SecurityConfigSessionConfiguration'
        certificateBasedAuth:
          $ref: '#/components/schemas/SecurityConfigCertificateBasedAuth'
      type: object
    SecurityConfigAccountLockout:
      description: Specifies security config for account lockout.
      properties:
        maxFailedLoginAttempts:
          description: Specifies the maximum number of consecutive fail login attempts.
          format: int32
          minimum: 1
          nullable: true
          type: integer
          x-order: 0
        failedLoginLockTimeDurationMins:
          description: Specifies the time duration within which the consecutive failed
            login attempts causes a local user account to be locked and the lockout
            duration time due to that.
          format: int32
          minimum: 1
          nullable: true
          type: integer
          x-order: 1
        inactivityTimeDays:
          description: Specifies the lockout inactivity time range in days.
          format: int32
          minimum: 1
          nullable: true
          type: integer
          x-order: 2
      type: object
    SecurityConfigCertificateBasedAuth:
      description: Specifies security config for certificate based authentication.
      properties:
        enableMappingBasedAuthentication:
          description: |-
            If true, certfication based authentication is done via configured
            mapping. Else it will proceed based on legacy serial number match.
          nullable: true
          type: boolean
          x-order: 0
        certificateMapping:
          description: Specifies the field to be used in certificate for authentication.
          enum:
          - CommonName
          - EmailAddress
          - UserPrincipalName
          nullable: true
          type: string
          x-order: 1
        adMapping:
          description: Specifies the field to be used in AD user for authentication.
          enum:
          - SamAccountName
          - UserPrincipalName
          nullable: true
          type: string
          x-order: 2
      type: object
    SecurityConfigDataClassification:
      description: Specifies security config for data classification.
      properties:
        isDataClassified:
          description: Specifies whether to mark the web page data classified/unclassified.
          nullable: true
          type: boolean
          x-order: 0
        classifiedDataMessage:
          description: Specifies the classified data message.
          nullable: true
          type: string
          x-order: 1
        unclassifiedDataMessage:
          description: Specifies the unclassified data message.
          nullable: true
          type: string
          x-order: 2
      type: object
    SecurityConfigPasswordLifetime:
      description: Specifies security config for password lifetime.
      properties:
        minLifetimeDays:
          description: Specifies the minimum password lifetime in days.
          format: int32
          minimum: 0
          nullable: true
          type: integer
          x-order: 0
        maxLifetimeDays:
          description: Specifies the maximum password lifetime in days.
          format: int32
          minimum: 1
          nullable: true
          type: integer
          x-order: 1
      type: object
    SecurityConfigPasswordReuse:
      description: Specifies security config for password reuse.
      properties:
        numDisallowedOldPasswords:
          description: Specifies the minimum number of old passwords that are not
            allowed for changing the password.
          format: int32
          minimum: 0
          nullable: true
          type: integer
          x-order: 0
        numDifferentChars:
          description: Specifies the number of characters in the new password that
            needs to be different from the old password (only applicable when changing
            the user's own password).
          format: int32
          minimum: 0
          nullable: true
          type: integer
          x-order: 1
      type: object
    SecurityConfigPasswordStrength:
      description: Specifies security config for password strength.
      properties:
        minLength:
          description: Specifies the password minimum length.
          format: int32
          minimum: 0
          nullable: true
          type: integer
          x-order: 0
        includeUpperLetter:
          description: Specifies if the password needs to have at least one uppercase
            letter.
          nullable: true
          type: boolean
          x-order: 1
        includeLowerLetter:
          description: Specifies if the password needs to have at least one lowercase
            letter.
          nullable: true
          type: boolean
          x-order: 2
        includeNumber:
          description: Specifies if the password needs to have at least one number.
          nullable: true
          type: boolean
          x-order: 3
        includeSpecialChar:
          description: Specifies if the password needs to have at least one special
            character.
          nullable: true
          type: boolean
          x-order: 4
      type: object
    SecurityConfigResponse:
      allOf:
      - $ref: '#/components/schemas/SecurityConfig'
      description: Specifies the detail response the security config.
      title: Security Config Response
    SecurityConfigSessionConfiguration:
      description: Specifies configuration for user sessions.
      properties:
        absoluteTimeout:
          description: Specifies absolute session expiration time in seconds.
          format: int64
          minimum: 1
          nullable: true
          type: integer
          x-order: 0
        inactivityTimeout:
          description: Specifies inactivity session expiration time in seconds.
          format: int64
          minimum: 1
          nullable: true
          type: integer
          x-order: 1
        limitSessions:
          description: Specifies if limitations on number of active sessions is enabled
            or not.
          nullable: true
          type: boolean
          x-order: 2
        sessionLimitPerUser:
          description: Specifies maximum number of active sessions allowed per user.
            This applies only when limitSessions is enabled.
          format: int64
          minimum: 1
          nullable: true
          type: integer
          x-order: 3
        sessionLimitSystemWide:
          description: Specifies maximum number of active sessions allowed system
            wide. This applies only when limitSessions is enabled.
          format: int64
          minimum: 1
          nullable: true
          type: integer
          x-order: 4
      type: object
    SecurityPrincipal:
      description: Specifies a security principal.
      example:
        domainName: domainName
        objectClass: User
        fullName: fullName
        principalName: principalName
        sid: sid
      properties:
        domainName:
          description: Specifies the domain name where the security principal account
            is maintained.
          nullable: true
          type: string
          x-order: 0
        fullName:
          description: Specifies the full name (first and last name) of the security
            principal.
          nullable: true
          type: string
          x-order: 1
        principalName:
          description: Specifies the name of the security principal.
          nullable: true
          type: string
          x-order: 2
        objectClass:
          description: Specifies the object class of the security principal.
          enum:
          - User
          - Group
          - Computer
          - WellKnownPrincipal
          nullable: true
          type: string
          x-order: 3
        sid:
          description: Specifies the SID of the security principal.
          nullable: true
          type: string
          x-order: 4
      type: object
    SecurityPrincipals:
      description: Specifies a list of security principals.
      example:
        securityPrincipals:
        - domainName: domainName
          objectClass: User
          fullName: fullName
          principalName: principalName
          sid: sid
        - domainName: domainName
          objectClass: User
          fullName: fullName
          principalName: principalName
          sid: sid
      properties:
        securityPrincipals:
          description: Specifies a list of security principals.
          items:
            $ref: '#/components/schemas/SecurityPrincipal'
          nullable: true
          type: array
          x-order: 0
      type: object
    SelfServiceSnapshotConfig:
      description: Specifies the self service snapshot config of a view.
      properties:
        enabled:
          description: Specifies if self service snapshot feature is enabled. If this
            is set to true, the feature will also be enabled for NFS protocol. This
            field is deprecated.
          nullable: true
          type: boolean
          x-order: 0
        previousVersionsEnabled:
          description: Specifies if previouse versions feature is enabled with SMB
            protocol.
          nullable: true
          type: boolean
          x-order: 1
        nfsAccessEnabled:
          description: Specifies if self service snapshot feature is enabled for NFS
            protocol.
          nullable: true
          type: boolean
          x-order: 2
        smbAccessEnabled:
          description: Specifies if self service snapshot feature is enabled for SMB
            protocol.
          nullable: true
          type: boolean
          x-order: 3
        snapshotDirectoryName:
          description: Specifies the directory name for the snapshots.
          nullable: true
          type: string
          x-order: 4
        alternateSnapshotDirectoryName:
          description: Specifies the alternate directory name for the snapshots. If
            it is not set, this feature for SMB protocol will not work.
          nullable: true
          type: string
          x-order: 5
        allowAccessSids:
          description: Specifies a list of sids who has access to the snapshots.
          items:
            type: string
          type: array
          x-omitempty: true
          x-order: 6
        denyAccessSids:
          description: Specifies a list of sids who does not have access to the snapshots.
            This field overrides 'allowAccessSids'.
          items:
            type: string
          type: array
          x-omitempty: true
          x-order: 7
      type: object
    ServicePatchLevel:
      description: Patch level of a service. It is the number of patches applied for
        the service on the cluster. If a service is never patched the patch level
        is 0. If two patches were applied, patch level is 2.
      example:
        service: service
        patchVersion: patchVersion
        startVersion: startVersion
        patchLevel: 0
        startLevel: 6
      properties:
        service:
          description: Specifies the name of the service.
          nullable: true
          type: string
          x-order: 0
        patchLevel:
          description: Specifies patch level of the service after the patch operation.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        patchVersion:
          description: Specifies the version of the service patch after the patch
            operation.
          nullable: true
          type: string
          x-order: 2
        startLevel:
          description: Specifies patch level of the service before the patch operation.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        startVersion:
          description: Specifies the version of the service running on the cluster
            before the patch operation.
          nullable: true
          type: string
          x-order: 4
      type: object
    ServicePatchLevels:
      description: Patch levels of a service and its dependencies.
      items:
        $ref: '#/components/schemas/ServicePatchLevel'
      type: array
    ServiceUnitProgress:
      description: Specifies the progress of one patch operation for one service at
        one patch level.
      example:
        nodesProgress:
        - patchLevelTransition: patchLevelTransition
          inProgress: true
          percentage: 7
          timeTakenSeconds: 9
          nodeMessage: nodeMessage
          nodeIp: nodeIp
        - patchLevelTransition: patchLevelTransition
          inProgress: true
          percentage: 7
          timeTakenSeconds: 9
          nodeMessage: nodeMessage
          nodeIp: nodeIp
        inProgress: true
        service: service
        percentage: 5
        timeTakenSeconds: 2
        timeRemainingSeconds: 5
        serviceMessage: serviceMessage
      properties:
        service:
          description: Specifies the service which is patched.
          nullable: true
          type: string
          x-order: 0
        inProgress:
          description: Specifies whether a operation is in progress for the service.
          nullable: true
          type: boolean
          x-order: 1
        percentage:
          description: Specifies the percentage of completion of the patch unit operation.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        timeRemainingSeconds:
          description: Specifies the time remaining to complete the patch operation
            for the service.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        timeTakenSeconds:
          description: Specifies the time taken so far in this patch unit operation
            for the service.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        nodesProgress:
          description: Specifies the details of patch operation for each service at
            each patch level.
          items:
            $ref: '#/components/schemas/NodeUnitProgress'
          nullable: true
          type: array
          x-order: 5
        serviceMessage:
          description: Specifies a message about the patch unit operation.
          nullable: true
          type: string
          x-order: 6
      title: Patch Operation Service Unit Progress.
      type: object
    Share:
      allOf:
      - $ref: '#/components/schemas/UpdateShareParam'
      - $ref: '#/components/schemas/Share_allOf'
      description: Specifies the details of a Share.
      title: Share
    SharepointDocumentLibFileType:
      description: Sharepoint document library file types for search.
      properties:
        type:
          description: Specifies the Sharepoint document library file types for search.
          enum:
          - Document
          - Excel
          - Powerpoint
          - Image
          - OneNote
          type: string
          x-order: 0
      title: Sharepoint document library file types for search.
      type: object
    SharepointItem:
      description: Specifies the indexed Sharepoint item.
      properties:
        documentLibraryItem:
          $ref: '#/components/schemas/DocumentLibraryItem'
      title: Indexed Sharepoint item.
      type: object
    SharepointItems:
      description: Specifies the indexed Sharepoint items.
      items:
        $ref: '#/components/schemas/SharepointItem'
      type: array
    SharepointObjectEntityParams:
      description: Specifies the common parameters for Sharepoint site objects.
      properties:
        siteWebUrl:
          description: Specifies the web url for the Sharepoint site.
          nullable: true
          type: string
          x-order: 0
      type: object
    SharepointObjectParams:
      description: Specifies the common parameters for Sharepoint site objects.
      properties:
        siteWebUrl:
          description: Specifies the web url for the Sharepoint site.
          nullable: true
          type: string
          x-order: 0
      type: object
    Shares:
      description: Specifies a list of Shares.
      example:
        shares:
        - null
        - null
        cookie: cookie
      properties:
        shares:
          description: Specifies the list of shares.
          items:
            $ref: '#/components/schemas/Share'
          nullable: true
          type: array
          x-order: 0
        cookie:
          description: Specifies the pagination cookie.
          nullable: true
          type: string
          x-order: 1
      title: Shares
      type: object
    ShellKeyValuePair:
      description: Specifies key value pairs of shell variables which defines the
        restore shell environment.
      properties:
        key:
          description: Specifies the name of the shell environment variable.
          nullable: true
          type: string
          x-order: 0
        value:
          description: Specifies the value of the shell environment variable.
          nullable: true
          type: string
          x-order: 1
      type: object
    SimpleAuthParams:
      description: Specifies the parameters for LDAP with 'Simple' authentication
        type.
      properties:
        userDistinguishedName:
          description: Specifies the user distinguished name that is used for LDAP
            authentication.
          nullable: true
          type: string
          x-order: 0
        userPassword:
          description: Specifies the user password that is used for LDAP authentication.
          nullable: true
          type: string
          x-order: 1
        useSsl:
          description: Specifies whether to use SSL for LDAP connections.
          nullable: true
          type: boolean
          x-order: 2
      required:
      - userDistinguishedName
      type: object
    SlaRule:
      description: Specifies an SLA rule for a specific Protection Group run type.
      properties:
        backupRunType:
          description: Specifies the type of run this rule should apply to.
          enum:
          - kIncremental
          - kFull
          nullable: true
          type: string
          x-order: 0
        slaMinutes:
          description: Specifies the number of minutes allotted to a run of the specified
            type before SLA is considered violated.
          format: int64
          minimum: 1
          nullable: true
          type: integer
          x-order: 1
      type: object
    SmbConfig:
      description: Specifies the SMB config settings for this View.
      nullable: true
      properties:
        enableSmbViewDiscovery:
          description: If set, it enables discovery of view for SMB.
          nullable: true
          type: boolean
          x-order: 0
        enableSmbAccessBasedEnumeration:
          description: |-
            Specifies if access-based enumeration should be enabled.
            If 'true', only files and folders that the user has permissions to
            access are visible on the SMB share for that user.
          nullable: true
          type: boolean
          x-order: 1
        enableSmbEncryption:
          description: |-
            Specifies the SMB encryption for the View. If set, it enables the SMB
            encryption for the View. Encryption is supported only by SMB 3.x dialects.
            Dialects that do not support would still access data in unencrypted
            format.
          nullable: true
          type: boolean
          x-order: 2
        enforceSmbEncryption:
          description: |-
            Specifies the SMB encryption for all the sessions for the View.
            If set, encryption is enforced for all the sessions for the View. When
            enabled all future and existing unencrypted sessions are disallowed.
          nullable: true
          type: boolean
          x-order: 3
        enableFastDurableHandle:
          description: |-
            Specifies whether fast durable handle is enabled. If enabled, view open
            handle will be kept in memory, which results in a higher performance. But
            the handles cannot be recovered if node or service crashes.
          nullable: true
          type: boolean
          x-order: 4
        enableSmbOplock:
          description: Specifies whether SMB opportunistic lock is enabled.
          nullable: true
          type: boolean
          x-order: 5
        smbPermissionsInfo:
          allOf:
          - $ref: '#/components/schemas/SmbPermissionsInfo'
          - type: object
            x-nullable: true
          description: Specifies the SMB permissions for the View.
          type: object
          x-order: 6
        sharePermissions:
          allOf:
          - $ref: '#/components/schemas/ViewSharePermissions'
          - type: object
            x-nullable: true
          description: Specifies share level permissions of the view.
          type: object
          x-order: 7
      type: object
      x-nullable: true
    SmbCredentials:
      description: Specifies the SMB credentials of a NAS source.
      properties:
        username:
          description: Specifies the username used to register a source.
          nullable: true
          type: string
          x-order: 0
        password:
          description: Specifies the password used to register a source.
          nullable: true
          type: string
          x-order: 1
      type: object
    SmbMountCredentials:
      allOf:
      - $ref: '#/components/schemas/Credentials'
      - type: object
      description: Specifies the credentials to mount a view.
      title: SMB Mount Credentials.
    SmbPermission:
      description: Specifies information about a single SMB permission.
      example:
        mode: FolderSubFoldersAndFiles
        specialAccessMask: 6
        access: ReadOnly
        specialType: 0
        type: Allow
        sid: sid
      properties:
        type:
          description: |-
            Specifies the type of permission.
            'Allow' indicates access is allowed.
            'Deny' indicates access is denied.
            'SpecialType' indicates a type defined in the Access Control Entry (ACE)
            does not map to 'Allow' or 'Deny'.
          enum:
          - Allow
          - Deny
          - SpecialType
          nullable: true
          type: string
          x-order: 0
        mode:
          description: |-
            Specifies how the permission should be applied to folders and/or files.
            'FolderSubFoldersAndFiles' indicates that permissions are applied to a Folder
            and it's sub folders and files.
            'FolderAndSubFolders' indicates that permissions are applied to a Folder and it's sub folders.
            'FolderAndSubFiles' indicates that permissions are applied to a Folder and it's sub files.
            'FolderOnly' indicates that permsission are applied to folder only.
            'SubFoldersAndFilesOnly' indicates that permissions are applied to sub folders and files only.
            'SubFoldersOnly' indicates that permissiona are applied to sub folders only.
            'FilesOnly' indicates that permissions are applied to files only.
          enum:
          - FolderSubFoldersAndFiles
          - FolderAndSubFolders
          - FolderAndFiles
          - FolderOnly
          - SubFoldersAndFilesOnly
          - SubFoldersOnly
          - FilesOnly
          nullable: true
          type: string
          x-order: 1
        access:
          description: |-
            Specifies the read/write access to the SMB share.
            'ReadyOnly' indicates read only access to the SMB share.
            'ReadWrite' indicates read and write access to the SMB share.
            'FullControl' indicates full administrative control of the SMB share.
            'SpecialAccess' indicates custom permissions to the SMB share using
             access masks structures.
            'SuperUser' indicates root permissions ignoring all SMB ACLs.
          enum:
          - ReadOnly
          - ReadWrite
          - Modify
          - FullControl
          - SpecialAccess
          nullable: true
          type: string
          x-order: 2
        sid:
          description: Specifies the security identifier (SID) of the principal.
          nullable: true
          type: string
          x-order: 3
        specialType:
          description: |-
            Specifies a custom type.
            When the type from the Access Control Entry (ACE) cannot be mapped
            to one of the enums in 'type', this field is populated with the custom
            type derived from the ACE and 'type' is set to kSpecialType.
            This is a placeholder for storing an unmapped type and should
            not be set when creating and editing a View.
          format: int32
          nullable: true
          type: integer
          x-order: 4
        specialAccessMask:
          description: |-
            Specifies custom access permissions.
            When the access mask from the Access Control Entry (ACE) cannot be mapped
            to one of the enums in 'access', this field is populated
            with the custom mask derived from the ACE and 'access' is set
            to kSpecialAccess.
            This is a placeholder for storing an unmapped access permission and should
            not be set when creating and editing a View.
          format: uint32
          nullable: true
          type: integer
          x-order: 5
      title: SMB Permission.
      type: object
    SmbPermissionsInfo:
      description: Specifies information about SMB permissions.
      properties:
        ownerSid:
          description: |-
            Specifies the security identifier (SID) of the owner of the SMB
            share.
          nullable: true
          type: string
          x-order: 0
        permissions:
          description: |-
            Array of SMB Permissions.
            Specifies a list of SMB permissions.
          items:
            $ref: '#/components/schemas/SmbPermission'
          nullable: true
          type: array
          x-order: 1
      title: SMB Permissions Information.
      type: object
    SnapMirrorConfig:
      description: Specifies the snapshot backup configuration if S3 views are used
        for backing up NetApp Data-Protect volumes.
      properties:
        viewId:
          description: Specifies the Id of the S3 view where data need to be written.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        incrementalPrefix:
          description: Specifies the incremental snapshot prefix value.
          nullable: true
          type: string
          x-order: 1
      type: object
    SnapshotActions:
      description: Snapshot Actions
      properties:
        snapshotActions:
          description: Snapshot Actions
          enum:
          - RecoverVMs
          - RecoverFiles
          - InstantVolumeMount
          - RecoverVmDisks
          - MountVolumes
          - RecoverVApps
          - RecoverRDS
          - RecoverAurora
          - RecoverApps
          - RecoverNasVolume
          - RecoverPhysicalVolumes
          - RecoverSystem
          - RecoverSanVolumes
          - RecoverNamespaces
          - RecoverObjects
          - DownloadFilesAndFolders
          - RecoverPublicFolders
          - RecoverVAppTemplates
          - RecoverMailbox
          - RecoverOneDrive
          - RecoverMsTeam
          - RecoverMsGroup
          - RecoverSharePoint
          type: string
          x-order: 0
      title: Snapshot Actions
      type: object
    SnapshotDiffParams:
      example:
        jobId: 5
        pageNumber: 3
        partitionId: 1
        baseSnapshotTimeUsecs: 2
        snapshotTimeUsecs: 9
        entityType: kVMware
        baseSnapshotJobInstanceId: 5
        snapshotJobInstanceId: 7
        pageSize: 2
        clusterId: 0
        incarnationId: 6
      properties:
        clusterId:
          format: int64
          type: integer
          x-order: 0
        incarnationId:
          format: int64
          type: integer
          x-order: 1
        partitionId:
          format: int64
          type: integer
          x-order: 2
        jobId:
          format: int64
          type: integer
          x-order: 3
        entityType:
          enum:
          - kVMware
          - kPhysical
          - kView
          - kHyperV
          - kNetapp
          - kPure
          - kIsilon
          type: string
          x-order: 4
        baseSnapshotJobInstanceId:
          format: int64
          type: integer
          x-order: 5
        baseSnapshotTimeUsecs:
          format: int64
          type: integer
          x-order: 6
        snapshotJobInstanceId:
          format: int64
          type: integer
          x-order: 7
        snapshotTimeUsecs:
          format: int64
          type: integer
          x-order: 8
        pageNumber:
          format: int64
          type: integer
          x-order: 9
        pageSize:
          format: int64
          type: integer
          x-order: 10
      required:
      - baseSnapshotJobInstanceId
      - baseSnapshotTimeUsecs
      - clusterId
      - entityType
      - jobId
      - pageNumber
      - pageSize
      - partitionId
      - snapshotJobInstanceId
      - snapshotTimeUsecs
      type: object
    SnapshotDiffResult:
      example:
        fileOperations:
        - filePath: filePath
          operation: kAdded
        - filePath: filePath
          operation: kAdded
        status: kRunning
      properties:
        status:
          enum:
          - kRunning
          - kCompleted
          - kError
          type: string
          x-order: 0
        fileOperations:
          items:
            $ref: '#/components/schemas/FileOperation'
          type: array
          x-order: 1
      required:
      - status
      type: object
    SnapshotInfo:
      description: Snapshot info for an object.
      properties:
        snapshotId:
          description: Snapshot id for a successful snapshot. This field will not
            be set if the Protection Group Run has no successful attempt.
          nullable: true
          type: string
          x-order: 0
        status:
          description: Status of snapshot.
          enum:
          - kInProgress
          - kSuccessful
          - kFailed
          - kWaitingForNextAttempt
          - kWarning
          - kCurrentAttemptPaused
          nullable: true
          type: string
          x-order: 1
        startTimeUsecs:
          description: Specifies the start time of attempt in Unix epoch Timestamp(in
            microseconds) for an object.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        endTimeUsecs:
          description: Specifies the end time of attempt in Unix epoch Timestamp(in
            microseconds) for an object.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        admittedTimeUsecs:
          description: Specifies the time at which the backup task was admitted to
            run in Unix epoch Timestamp(in microseconds) for an object.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        permitGrantTimeUsecs:
          description: Specifies the time when gatekeeper permit is granted to the
            backup task. If the backup task is rescheduled due to errors, the field
            is updated to the time when permit is granted again.
          format: int64
          nullable: true
          type: integer
          x-order: 5
        queueDurationUsecs:
          description: Specifies the duration between the startTime and when gatekeeper
            permit is granted to the backup task. If the backup task is rescheduled
            due to errors, the field is updated considering the time when permit is
            granted again. Queue duration = PermitGrantTimeUsecs - StartTimeUsecs
          format: int64
          nullable: true
          type: integer
          x-order: 6
        snapshotCreationTimeUsecs:
          description: Specifies the time at which the source snapshot was taken in
            Unix epoch Timestamp(in microseconds) for an object.
          format: int64
          nullable: true
          type: integer
          x-order: 7
        stats:
          $ref: '#/components/schemas/BackupDataStats'
        progressTaskId:
          description: Progress monitor task for an object.
          nullable: true
          type: string
          x-order: 9
        warnings:
          description: Specifies a list of warning messages.
          items:
            type: string
          nullable: true
          type: array
          x-order: 10
        isManuallyDeleted:
          description: Specifies whether the snapshot is deleted manually.
          nullable: true
          type: boolean
          x-order: 11
        expiryTimeUsecs:
          description: Specifies the expiry time of attempt in Unix epoch Timestamp
            (in microseconds) for an object.
          format: int64
          nullable: true
          type: integer
          x-order: 12
        totalFileCount:
          description: The total number of file and directory entities visited in
            this backup. Only applicable to file based backups.
          format: int64
          nullable: true
          type: integer
          x-order: 13
        backupFileCount:
          description: The total number of file and directory entities that are backed
            up in this run. Only applicable to file based backups.
          format: int64
          nullable: true
          type: integer
          x-order: 14
        dataLockConstraints:
          $ref: '#/components/schemas/DataLockConstraints'
      title: Snapshot information for an object.
      type: object
    SnapshotLabel:
      description: Specifies the snapshot label for incremental and full backup of
        Secondary Netapp volumes (Data-Protect Volumes).
      properties:
        incrementalLabel:
          description: Specifies the incremental snapshot label value
          nullable: true
          type: string
          x-order: 0
        fullLabel:
          description: Specifies the full snapshot label value
          nullable: true
          type: string
          x-order: 1
      title: Snapshot Label
      type: object
    SnapshotRecoveryTargetType:
      description: Snapshot Recovery Target Type
      properties:
        snapshotRecoveryTargetType:
          description: Specifies the snapshot recovery target type.
          type: string
          x-order: 0
          x-cohesity-enum: snapshot_recovery_target_type
      title: Snapshot Recovery Target Type
      type: object
    SnapshotTagInfo:
      allOf:
      - $ref: '#/components/schemas/TagInfo'
      - $ref: '#/components/schemas/SnapshotTagInfo_allOf'
      description: Specifies the snapshot tag info for an object.
    SnapshotTargetType:
      description: Snapshot Target Type
      properties:
        snapshotTargetType:
          description: Specifies the snapshot target type.
          enum:
          - Local
          - Archival
          type: string
          x-order: 0
      title: Snapshot Target Type
      type: object
    SnapshotsSummary:
      description: Specifies a summary of the object snapshots.
      example:
        regionId: regionId
        latestRunStartTimeUsecs: 5
        snapshotCount: 1
        clusterId: 0
        externalTargetInfo: '{}'
        clusterIncarnationId: 6
        latestSnapshotTimestampUsecs: 5
        latestRunStatus: Accepted
        snapshotTargetType: Local
      properties:
        clusterId:
          description: Specifies the cluster id where the snapshots is stored.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        clusterIncarnationId:
          description: Specifies the cluster incarnation id where the snapshots is
            stored.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        regionId:
          description: Specifies the cluster indentifier where the snapshots is stored.
          nullable: true
          type: string
          x-order: 2
        snapshotTargetType:
          description: Specifies the target type where the Object's snapshot resides.
          enum:
          - Local
          - Archival
          nullable: true
          type: string
          x-order: 3
        externalTargetInfo:
          allOf:
          - $ref: '#/components/schemas/ArchivalTargetSummaryInfo'
          - type: object
            x-nullable: true
          description: Specifies the external target information if this is an archival
            snapshot.
          nullable: true
          type: object
          x-order: 4
        snapshotCount:
          description: Specifies the number of snapshots of this type and target.
          format: int64
          nullable: true
          type: integer
          x-order: 5
        latestSnapshotTimestampUsecs:
          description: Specifies the timestamp in Unix time epoch in microseconds
            when the latest snapshot is taken.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        latestRunStartTimeUsecs:
          description: Specifies the timestamp in Unix time epoch in microseconds
            when the latest run started.
          format: int64
          nullable: true
          type: integer
          x-order: 7
        latestRunStatus:
          description: Specifies the status of latest run.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          nullable: true
          type: string
          x-order: 8
      type: object
    Source:
      allOf:
      - $ref: '#/components/schemas/Object'
      - $ref: '#/components/schemas/Source_allOf'
      description: Specifies the Protection Source.
      title: Protection Source.
    SourceAttributeFilter:
      description: Specifies a pair of source filter attribute and its possible values.
      example:
        filterAttribute: filterAttribute
        attributeValues:
        - attributeValues
        - attributeValues
      properties:
        filterAttribute:
          description: Specifies the filter attribute for the source.
          nullable: true
          type: string
          x-order: 0
        attributeValues:
          description: Specifies the list of attribute values for above filter.
          items:
            type: string
          nullable: true
          type: array
          x-order: 1
      type: object
    SourceAttributeFiltersResponseParams:
      description: Protection Source attribute filters
      example:
        sourceAttributeFilters:
        - filterAttribute: filterAttribute
          attributeValues:
          - attributeValues
          - attributeValues
        - filterAttribute: filterAttribute
          attributeValues:
          - attributeValues
          - attributeValues
      properties:
        sourceAttributeFilters:
          description: Specifies the list of protection source filters.
          items:
            $ref: '#/components/schemas/SourceAttributeFilter'
          type: array
          x-order: 0
      type: object
    SourceBackupDeactivation:
      description: Specifies the request parmeters to deactivate the backup of failover
        entities on source cluster.
      example:
        protectionGroupId: protectionGroupId
        viewId: viewId
        keepFailoverObjects: true
        objects:
        - objectId: 0
        - objectId: 0
        replicationClusterId: 0
      properties:
        replicationClusterId:
          description: Specifies the replication cluster Id involved in failover operation.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        viewId:
          description: If failover is initiated by view based orchastrator, then this
            field specifies the local view id of source cluster which is being failed
            over. Backup will be deactivated for view object.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        objects:
          description: Specifies the list of all local entity ids of all the objects
            being failed from the source cluster. Backup will be deactiaved for all
            given objects.
          items:
            $ref: '#/components/schemas/FailoverObject'
          nullable: true
          type: array
          x-order: 2
        protectionGroupId:
          description: Specifies the protection group id of the source cluster from
            where the objects being failed over. If this is not specified then it
            will be infer from the list of objects being failed over.
          nullable: true
          type: string
          x-order: 3
        keepFailoverObjects:
          description: If this is set to true then objects will not be removed from
            protection group. If this is set to false, then all objects which are
            being failed over will be removed from the protection group. If protection
            group left with zero entities then it will be paused automatically.
          nullable: true
          type: boolean
          x-order: 4
      type: object
    SourceConnectionRequestParams:
      allOf:
      - $ref: '#/components/schemas/CommonSourceConnectionRequestParams'
      - $ref: '#/components/schemas/SourceConnectionRequestParams_allOf'
      description: Specifies the parameters to test connectivity with a source.
      title: Test connection request parameters.
    SourceConnectionResponseParams:
      description: Specifies the response from a test connection request.
      example:
        environment: kCassandra
        vmwareConnectionResponseParams:
          vcdParams:
            vcenterInfoList:
            - endpoint: endpoint
              name: name
            - endpoint: endpoint
              name: name
        hiveConnectionResponseParams:
          metastorePort: 7
          authType: KERBEROS
          metastoreAddress: metastoreAddress
        connectionId: 0
        hbaseConnectionResponseParams:
          zookeeperQuorum:
          - zookeeperQuorum
          - zookeeperQuorum
          dataRootDirectory: dataRootDirectory
          authType: KERBEROS
        hdfsConnectionResponseParams:
          webhdfsPort: 9
          namenodeAddress: namenodeAddress
          authType: KERBEROS
        cassandraConnectionResponseParams:
          dseVersion: dseVersion
          cassandraSecurityInfo:
            cassandraAuthorizer: cassandraAuthorizer
            dseAuthorization: true
            cassandraAuthRequired: true
            serverInternodeEncryptionType: serverInternodeEncryptionType
            serverEncryptionReqClientAuth: true
            cassandraAuthType: PASSWORD
            clientEncryption: true
          dataCenterNames:
          - dataCenterNames
          - dataCenterNames
          cassandraPartitioner: cassandraPartitioner
          seeds:
          - seeds
          - seeds
          cassandraVersion: cassandraVersion
          isJmxAuthEnable: true
          cassandraPortInfo:
            nativeTransportPort: 6
            sslStoragePort: 5
            jmxPort: 2
            storagePort: 5
            rpcPort: 1
          kerberosSaslProtocol: kerberosSaslProtocol
          endpointSnitch: endpointSnitch
      properties:
        environment:
          description: Specifies the environment type of the Protection Source.
          enum:
          - kCassandra
          - kHive
          - kHBase
          - kHdfs
          - kSQL
          - kOracle
          nullable: true
          type: string
          x-order: 0
        connectionId:
          description: Specifies the id of the connection from where this source is
            reachable. This should only be set for a source being registered by a
            tenant user.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        cassandraConnectionResponseParams:
          $ref: '#/components/schemas/CassandraSourceConfigParams'
        hiveConnectionResponseParams:
          $ref: '#/components/schemas/HiveAdditionalParams'
        hbaseConnectionResponseParams:
          $ref: '#/components/schemas/HBaseAdditionalParams'
        hdfsConnectionResponseParams:
          $ref: '#/components/schemas/HdfsAdditionalParams'
        mssqlConnectionResponseParams:
          $ref: '#/components/schemas/MssqlConnectionResponseParams'
        vmwareConnectionResponseParams:
          $ref: '#/components/schemas/VmwareAdditionalParams'
      required:
      - environment
      title: Test Connection response parameters.
      type: object
    SourceHierarchyObjectSummaries:
      description: Specifies a list of Source Hierarchy Object Summaries.
      example:
        objects:
        - null
        - null
      properties:
        objects:
          description: Specifies a list of Source Hierarchy Object summaries.
          items:
            $ref: '#/components/schemas/SourceHierarchyObjectSummary'
          nullable: true
          type: array
          x-order: 0
      title: ObjectSummaries
      type: object
    SourceHierarchyObjectSummary:
      allOf:
      - $ref: '#/components/schemas/ObjectSummary'
      - $ref: '#/components/schemas/SourceHierarchyObjectSummary_allOf'
      description: Specifies the list of Object Summaries for Objects under a given
        Source.
      title: SourceHierarchyObjectSummaries
    SourceRegistration:
      allOf:
      - $ref: '#/components/schemas/CommonSourceRegistrationReponseParams'
      - $ref: '#/components/schemas/SourceRegistration_allOf'
      description: Specifies the Source Registration.
      title: Source Registration.
    SourceRegistrationCredentials:
      description: Specifies the credentials of a source registration.
      properties:
        username:
          description: Specifies the username used to register a source.
          nullable: true
          type: string
          x-order: 0
        password:
          description: Specifies the password used to register a source.
          nullable: true
          type: string
          x-order: 1
        smbCredentials:
          $ref: '#/components/schemas/SmbCredentials'
        vcenters:
          description: Specifies the list of child vcenter credentials. This will
            only be populated in the case of VCD.
          items:
            $ref: '#/components/schemas/VcenterCredentialInfo'
          type: array
          x-order: 3
        office365AppCredentialsList:
          description: Specifies a list of office365 azure application credentials
            needed to authenticate & authorize users.
          items:
            $ref: '#/components/schemas/Office365AppCredentials'
          type: array
          x-order: 4
      type: object
    SourceRegistrationRequestParams:
      allOf:
      - $ref: '#/components/schemas/CommonSourceRegistrationRequestParams'
      - $ref: '#/components/schemas/SourceRegistration_allOf'
      description: Specifies the Source Registration parameters.
      title: Source Registration parameters.
    SourceRegistrationUpdateRequestParams:
      allOf:
      - $ref: '#/components/schemas/CommonSourceRegistrationRequestParams'
      - $ref: '#/components/schemas/SourceRegistration_allOf'
      description: Specifies the Source registration Update request parameters.
      title: Source Registration update parameters.
    SourceRegistrations:
      description: Protection Source Registrations.
      example:
        registrations:
        - null
        - null
      properties:
        registrations:
          description: Specifies the list of Protection Source Registrations.
          items:
            $ref: '#/components/schemas/SourceRegistration'
          nullable: true
          type: array
          x-order: 0
      type: object
    SourceReplicaObject:
      description: Specifies the response after succesfully initiating the failover
        request.
      example:
        replicaObjectId: 0
        sourceObjectId: 6
      properties:
        replicaObjectId:
          description: Specifies the object Id existing on the replciation cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        sourceObjectId:
          description: Specifies the corrosponding object id existing on the source
            cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    Sources:
      description: Protection Sources.
      example:
        sources:
        - null
        - null
      properties:
        sources:
          description: Specifies the list of Protection Sources.
          items:
            $ref: '#/components/schemas/Source'
          nullable: true
          type: array
          x-order: 0
      type: object
    SqlTargetParamsForRecoverSqlApp:
      allOf:
      - $ref: '#/components/schemas/CommonRecoverSqlAppTargetParams'
      description: 'Specifies the params for recovering to a sql host. Specifiy seperate
        settings for each db object that need to be recovered. Provided sql backup
        should be recovered to same type of target host. For Example: If you have
        sql backup taken from a physical host then that should be recovered to physical
        host only.'
      title: Sql Target Params For Recover Sql App.
    SslCertificateParams:
      description: Specifies the parameters of an SSL Certificate.
      example:
        sslCertificate: sslCertificate
      properties:
        sslCertificate:
          description: Specifies an SSL Certificate.
          nullable: true
          type: string
          x-order: 0
      title: SSL Certificate Params
      type: object
    StandaloneClusterRegistrationParams:
      allOf:
      - $ref: '#/components/schemas/EndpointOnlyRegistrationParams'
      - type: object
      description: Specifies parameters to register HyperV failover cluster.
      title: Register HyperV failover cluster request parameters.
    StandaloneHostRegistrationParams:
      allOf:
      - $ref: '#/components/schemas/EndpointOnlyRegistrationParams'
      - type: object
      description: Specifies parameters to register standalone HyperV host.
      title: Register standalone HyperV host request parameters.
    StandardParams:
      description: Specifies the parameters to register a commercial AWS
      properties:
        authMethodType:
          description: Specifies the Authentication method(IamArn/IamRole) used by
            api
          enum:
          - kUseIAMUser
          - kUseIAMRole
          nullable: true
          type: string
          x-order: 0
        iamUserAwsCredentials:
          $ref: '#/components/schemas/IamUserAwsCredentials'
        iamRoleAwsCredentials:
          $ref: '#/components/schemas/IamRoleAwsCredentials'
      required:
      - authMethodType
      title: Register AWS Commercial request parameters.
      type: object
    StandbyObject:
      description: Specifies the standby related information for a given VM object.
        This field will only be populated when standby is configured on the protection
        group.
      properties:
        entityId:
          description: Specifies the entity id of the corresponding backup object
            for which this standby is configured.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        protectionGroupId:
          description: Specifies the protection group id to which this standby object
            belongs.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      type: object
    StorageDomain:
      description: Specifies a Storage Domain.
      example:
        defaultUserQuota: '{}'
        cloudDownWaterFallParams: '{}'
        treatFileSyncAsDataSync: true
        kmsServerId: 5
        clusterPartitionId: 6
        physicalQuota: '{}'
        directArchiveEnabled: true
        kerberosRealmName: kerberosRealmName
        stats: '{}'
        blobBrickSizeBytes: 5
        ldapProviderId: 1
        id: 0
        clusterPartitionName: clusterPartitionName
        subnetWhitelist:
        - netmaskBits: 5
          smbAccess: kDisabled
          component: component
          s3Access: kDisabled
          ip: ip
          nfsAccess: kDisabled
          nfsSquash: kNone
          description: description
          id: 1
          gateway: gateway
          netmaskIp4: netmaskIp4
        - netmaskBits: 5
          smbAccess: kDisabled
          component: component
          s3Access: kDisabled
          ip: ip
          nfsAccess: kDisabled
          nfsSquash: kNone
          description: description
          id: 1
          gateway: gateway
          netmaskIp4: netmaskIp4
        adDomainName: adDomainName
        vaultId: 2
        storagePolicy: '{}'
        cloudDomainId: 3
        nisDomainNames:
        - nisDomainNames
        - nisDomainNames
        recommended: true
        fileCountBySize:
        - lowerSizeBytes: 2
          upperSizeBytes: 7
          count: 9
        - lowerSizeBytes: 2
          upperSizeBytes: 7
          count: 9
        dekRotationEnabled: true
        schemas:
        - metricName: metricName
          entityId: entityId
          schemaName: schemaName
        - metricName: metricName
          entityId: entityId
          schemaName: schemaName
        name: name
        s3BucketsEnabled: true
        tenantIds:
        - tenantIds
        - tenantIds
        defaultViewQuota: '{}'
      properties:
        id:
          description: Specifies the Storage Domain id.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 0
        name:
          description: Specifies the Storage Domain name.
          nullable: true
          type: string
          x-order: 1
        clusterPartitionId:
          description: Specifies the cluster partition id of the Storage Domain.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        clusterPartitionName:
          description: Specifies the cluster partition name of the Storage Domain.
          nullable: true
          readOnly: true
          type: string
          x-order: 3
        subnetWhitelist:
          description: Specifies a list of Subnets with IP addresses that have permissions
            to access the Storage Domain.
          items:
            $ref: '#/components/schemas/Subnet'
          nullable: true
          type: array
          x-order: 4
        storagePolicy:
          allOf:
          - $ref: '#/components/schemas/StoragePolicy'
          - type: object
            x-nullable: true
          description: Specifies the storage policy for this Storage Domain.
          type: object
          x-order: 5
        physicalQuota:
          allOf:
          - $ref: '#/components/schemas/QuotaPolicy'
          - type: object
            x-nullable: true
          description: Specifies a quota limit for physical usage of this Storage
            Domain. This quota defines a limit of data that can be physically (after
            data size is reduced by block tracking, compression and deduplication)
            stored on this storage domain. A new write will not be allowed when the
            storage domain usage will exceeds the specified quota. Due to the latency
            of calculating usage across all nodes, the actual storage domain usage
            may exceed the quota limit by a little bit.
          type: object
          x-order: 6
        cloudDownWaterFallParams:
          allOf:
          - $ref: '#/components/schemas/CloudDownWaterFallParams'
          - type: object
            x-nullable: true
          description: Specifies the cloud down water fall parameters for this Storage
            Domain.
          type: object
          x-order: 7
        defaultViewQuota:
          allOf:
          - $ref: '#/components/schemas/QuotaPolicy'
          - type: object
            x-nullable: true
          description: Specifies a default logical quota limit for all views in this
            Storage Domain. This quota can be overwritten by a view level quota.
          type: object
          x-order: 8
        defaultUserQuota:
          allOf:
          - $ref: '#/components/schemas/QuotaPolicy'
          - type: object
            x-nullable: true
          description: Specifies a default user quota limit for users within views
            in this Storage Domain.
          type: object
          x-order: 9
        s3BucketsEnabled:
          description: Specifies whether to enable creation of S3 bucket on this Storage
            Domain.
          nullable: true
          type: boolean
          x-order: 10
        adDomainName:
          description: Specifies the Active Directory domain name that this Storage
            Domain is mapped to.
          nullable: true
          type: string
          x-order: 11
        nisDomainNames:
          description: Specifies the NIS domain names that this Storage Domain is
            mapped to.
          items:
            type: string
          nullable: true
          type: array
          x-order: 12
        kerberosRealmName:
          description: Specifies the Kerberos realm name that this Storage Domain
            is mapped to.
          nullable: true
          type: string
          x-order: 13
        ldapProviderId:
          description: Specifies the LDAP provider id that this Storage Domain is
            mapped to.
          format: int64
          nullable: true
          type: integer
          x-order: 14
        tenantIds:
          description: Specifies a list of tenant ids that that Storage Domain belongs.
            There can only be one tenant id in this field unless Storage Domain sharing
            between tenants is allowed on this cluster.
          items:
            type: string
          nullable: true
          type: array
          x-order: 15
        directArchiveEnabled:
          description: Specifies whether to enable driect archive on this Storage
            Domain. If enabled, this Storage Domain can be used as a staging area
            while copying a large dataset that can't fit on the cluster to an external
            target.
          nullable: true
          type: boolean
          x-order: 16
        blobBrickSizeBytes:
          description: Specifies the brick size used for blobs in this Storage Domain.
          format: int32
          nullable: true
          type: integer
          x-order: 17
        kmsServerId:
          description: Specifies the associated KMS server id.
          format: int64
          nullable: true
          type: integer
          x-order: 18
        dekRotationEnabled:
          description: Specifies whether DEK(Data Encryption Key) rotation is enabled
            for this Storage Domain. This is applicable only when the Storage Domain
            uses AWS or similar KMS in which the KEK (Key Encryption Key) is not created
            and maintained by Cohesity. For Internal KMS and keys stored in Safenet
            servers, DEK rotation will not be performed.
          nullable: true
          type: boolean
          x-order: 19
        treatFileSyncAsDataSync:
          description: If 'true', when the Cohesity Cluster is writing to a file,
            the file modification time is not persisted synchronously during the file
            write, so the modification time may not be accurate. (Typically the file
            modification time is off by 30 seconds but it can be longer.)
          nullable: true
          type: boolean
          x-order: 20
        recommended:
          description: Specifies whether Storage Domain is recommended for the specified
            View template.
          nullable: true
          readOnly: true
          type: boolean
          x-order: 21
        stats:
          allOf:
          - $ref: '#/components/schemas/DataUsageStats'
          - type: object
            x-nullable: true
          description: Specifies the Storage Domain stats.
          type: object
          x-order: 22
        schemas:
          description: Specifies the Storage Domain schemas.
          items:
            $ref: '#/components/schemas/Schema'
          nullable: true
          readOnly: true
          type: array
          x-order: 23
        fileCountBySize:
          description: Specifies the file count by size for the View.
          items:
            $ref: '#/components/schemas/FileCount'
          nullable: true
          readOnly: true
          type: array
          x-order: 24
        cloudDomainId:
          description: Specifies the cloud domain Id.
          format: int64
          nullable: true
          type: integer
          x-order: 25
        vaultId:
          description: Specifies the vault Id associated with cloud domain ID.
          format: int64
          nullable: true
          type: integer
          x-order: 26
      required:
      - clusterPartitionId
      - name
      type: object
    StorageDomainPair:
      description: Specifies a Storage Domain pair.
      properties:
        localStorageDomainId:
          description: Specifies the local Storage Domain id.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        remoteStorageDomainId:
          description: Specifies the remote Storage Domain id.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        localStorageDomainName:
          description: Specifies the local Storage Domain name.
          nullable: true
          type: string
          x-order: 2
        remoteStorageDomainName:
          description: Specifies the remote Storage Domain name.
          nullable: true
          type: string
          x-order: 3
      required:
      - localStorageDomainId
      - remoteStorageDomainId
      type: object
    StorageDomains:
      description: Specifies a list of Storage Domains.
      example:
        storageDomains:
        - defaultUserQuota: '{}'
          cloudDownWaterFallParams: '{}'
          treatFileSyncAsDataSync: true
          kmsServerId: 5
          clusterPartitionId: 6
          physicalQuota: '{}'
          directArchiveEnabled: true
          kerberosRealmName: kerberosRealmName
          stats: '{}'
          blobBrickSizeBytes: 5
          ldapProviderId: 1
          id: 0
          clusterPartitionName: clusterPartitionName
          subnetWhitelist:
          - netmaskBits: 5
            smbAccess: kDisabled
            component: component
            s3Access: kDisabled
            ip: ip
            nfsAccess: kDisabled
            nfsSquash: kNone
            description: description
            id: 1
            gateway: gateway
            netmaskIp4: netmaskIp4
          - netmaskBits: 5
            smbAccess: kDisabled
            component: component
            s3Access: kDisabled
            ip: ip
            nfsAccess: kDisabled
            nfsSquash: kNone
            description: description
            id: 1
            gateway: gateway
            netmaskIp4: netmaskIp4
          adDomainName: adDomainName
          vaultId: 2
          storagePolicy: '{}'
          cloudDomainId: 3
          nisDomainNames:
          - nisDomainNames
          - nisDomainNames
          recommended: true
          fileCountBySize:
          - lowerSizeBytes: 2
            upperSizeBytes: 7
            count: 9
          - lowerSizeBytes: 2
            upperSizeBytes: 7
            count: 9
          dekRotationEnabled: true
          schemas:
          - metricName: metricName
            entityId: entityId
            schemaName: schemaName
          - metricName: metricName
            entityId: entityId
            schemaName: schemaName
          name: name
          s3BucketsEnabled: true
          tenantIds:
          - tenantIds
          - tenantIds
          defaultViewQuota: '{}'
        - defaultUserQuota: '{}'
          cloudDownWaterFallParams: '{}'
          treatFileSyncAsDataSync: true
          kmsServerId: 5
          clusterPartitionId: 6
          physicalQuota: '{}'
          directArchiveEnabled: true
          kerberosRealmName: kerberosRealmName
          stats: '{}'
          blobBrickSizeBytes: 5
          ldapProviderId: 1
          id: 0
          clusterPartitionName: clusterPartitionName
          subnetWhitelist:
          - netmaskBits: 5
            smbAccess: kDisabled
            component: component
            s3Access: kDisabled
            ip: ip
            nfsAccess: kDisabled
            nfsSquash: kNone
            description: description
            id: 1
            gateway: gateway
            netmaskIp4: netmaskIp4
          - netmaskBits: 5
            smbAccess: kDisabled
            component: component
            s3Access: kDisabled
            ip: ip
            nfsAccess: kDisabled
            nfsSquash: kNone
            description: description
            id: 1
            gateway: gateway
            netmaskIp4: netmaskIp4
          adDomainName: adDomainName
          vaultId: 2
          storagePolicy: '{}'
          cloudDomainId: 3
          nisDomainNames:
          - nisDomainNames
          - nisDomainNames
          recommended: true
          fileCountBySize:
          - lowerSizeBytes: 2
            upperSizeBytes: 7
            count: 9
          - lowerSizeBytes: 2
            upperSizeBytes: 7
            count: 9
          dekRotationEnabled: true
          schemas:
          - metricName: metricName
            entityId: entityId
            schemaName: schemaName
          - metricName: metricName
            entityId: entityId
            schemaName: schemaName
          name: name
          s3BucketsEnabled: true
          tenantIds:
          - tenantIds
          - tenantIds
          defaultViewQuota: '{}'
      properties:
        storageDomains:
          description: Specifies the list of storage domains.
          items:
            $ref: '#/components/schemas/StorageDomain'
          nullable: true
          type: array
          x-order: 0
      type: object
    StoragePolicy:
      description: Specifies the storage policy of a Storage Domain.
      properties:
        deduplicationParams:
          allOf:
          - $ref: '#/components/schemas/DeduplicationParams'
          - type: object
            x-nullable: true
          description: Specifies deduplication settings for a Storage Domain.
          type: object
          x-order: 0
        compressionParams:
          allOf:
          - $ref: '#/components/schemas/CompressionParams'
          - type: object
            x-nullable: true
          description: Specifies compression settings for a Storage Domain.
          type: object
          x-order: 1
        deduplicationCompressionDelaySecs:
          description: Specifies the time in seconds when deduplication and compression
            of the Storage Domain starts.
          format: int32
          nullable: true
          type: integer
          x-order: 2
        erasureCodingParams:
          allOf:
          - $ref: '#/components/schemas/ErasureCodingParams'
          - type: object
            x-nullable: true
          description: Specifies the erasure coding parameters for a Storage Domain.
          type: object
          x-order: 3
        encryptionType:
          description: Specifies the encryption type for a Storage Domain.
          enum:
          - None
          - Strong
          - Weak
          nullable: true
          type: string
          x-order: 4
        cloudSpillVaultId:
          description: Specifies the vault id assigned for cloud spill for a Storage
            Domain.
          format: int64
          nullable: true
          type: integer
          x-order: 5
        numDiskFailuresTolerated:
          description: Specifies the number of disk failures to tolerate for a Storage
            Domain. By default, this field is 1 for cluster with three or more nodes.
            If erasure coding is enabled, this field will be the same as numCodedStripes.
          format: int32
          nullable: true
          type: integer
          x-order: 6
        numNodeFailuresTolerated:
          description: Specifies the number of node failures to tolerate for a Storage
            Domain. By default this field is replication factor minus 1 for replication
            chunk files and is the same as numCodedStripes for erasure coding chunk
            files.
          format: int32
          nullable: true
          type: integer
          x-order: 7
        appMarkerDetectionEnabled:
          description: Specifies whether app marker detection is enabled. When enabled,
            app markers will be removed from data and put in separate chunks.
          nullable: true
          type: boolean
          x-order: 8
      title: Storage Policy
      type: object
    StoragePolicyOverride:
      description: |-
        Specifies if inline deduplication and compression settings inherited from
        Storage Domain (View Box) should be disabled for this View.
      nullable: true
      properties:
        disableInlineDedupAndCompression:
          description: |-
            If false, the inline deduplication and compression settings inherited
            from the Storage Domain (View Box) apply to this View.
            If true, both inline deduplication and compression are disabled for this
            View. This can only be set to true if inline deduplication is set for
            the Storage Domain (View Box).
          nullable: true
          type: boolean
          x-order: 0
        disableDedup:
          description: |-
            If it is set to true, we would disable dedup for writes made in this
            view irrespective of the view box's storage policy.
          nullable: true
          type: boolean
          x-order: 1
      title: Storage Policy Override.
      type: object
      x-nullable: true
    Subnet:
      description: |-
        Defines a Subnet (Subnetwork).
        The netmask can be specified by setting netmaskBits or netmaskIp4.
        The netmask can only be set using netmaskIp4 if the IP address
        is an IPv4 address.
      example:
        netmaskBits: 5
        smbAccess: kDisabled
        component: component
        s3Access: kDisabled
        ip: ip
        nfsAccess: kDisabled
        nfsSquash: kNone
        description: description
        id: 1
        gateway: gateway
        netmaskIp4: netmaskIp4
      properties:
        component:
          description: Component that has reserved the subnet.
          nullable: true
          type: string
          x-order: 0
        description:
          description: Description of the subnet.
          nullable: true
          type: string
          x-order: 1
        gateway:
          description: Gateway for the subnet.
          nullable: true
          type: string
          x-order: 2
        id:
          description: ID of the subnet.
          format: int32
          nullable: true
          type: integer
          x-order: 3
        ip:
          description: Specifies either an IPv6 address or an IPv4 address.
          nullable: true
          type: string
          x-order: 4
        netmaskBits:
          description: Specifies the netmask using bits.
          format: int32
          nullable: true
          type: integer
          x-order: 5
        netmaskIp4:
          description: |-
            Specifies the netmask using an IP4 address.
            The netmask can only be set using netmaskIp4 if the IP address
            is an IPv4 address.
          nullable: true
          type: string
          x-order: 6
        nfsAccess:
          description: |-
            Specifies whether clients from this subnet can mount using NFS protocol.
            Protocol access level.
            'kDisabled' indicates Protocol access level 'Disabled'
            'kReadOnly' indicates Protocol access level 'ReadOnly'
            'kReadWrite' indicates Protocol access level 'ReadWrite'
          enum:
          - kDisabled
          - kReadOnly
          - kReadWrite
          nullable: true
          type: string
          x-order: 7
        nfsSquash:
          description: |-
            Specifies which nfsSquash Mounted.
            'kNone' mounts none.
            'kRootSquash' mounts nfsRootSquash. Whether clients from this subnet can
            mount as root on NFS.
            'kAllSquash' mounts nfsAllSquash. Whether all clients from this subnet can
            map view with view_all_squash_uid/view_all_squash_gid configured in
            the view.
          enum:
          - kNone
          - kRootSquash
          - kAllSquash
          nullable: true
          type: string
          x-order: 8
        smbAccess:
          description: |-
            Specifies whether clients from this subnet can mount using SMB protocol.
            Protocol access level.
            'kDisabled' indicates Protocol access level 'Disabled'
            'kReadOnly' indicates Protocol access level 'ReadOnly'
            'kReadWrite' indicates Protocol access level 'ReadWrite'
          enum:
          - kDisabled
          - kReadOnly
          - kReadWrite
          nullable: true
          type: string
          x-order: 9
        s3Access:
          description: |-
            Specifies whether clients from this subnet can access using S3 protocol.
            Protocol access level.
            'kDisabled' indicates Protocol access level 'Disabled'
            'kReadOnly' indicates Protocol access level 'ReadOnly'
            'kReadWrite' indicates Protocol access level 'ReadWrite'
          enum:
          - kDisabled
          - kReadOnly
          - kReadWrite
          nullable: true
          type: string
          x-order: 10
      title: Subnet
      type: object
    SubnetInfo:
      description: Subnet information.
      example:
        netmaskBits: 9
        subnetIp: subnetIp
        gateway: gateway
      properties:
        subnetIp:
          description: Subnet IP.
          nullable: true
          type: string
          x-order: 0
        netmaskBits:
          description: Subnet netmask bits.
          format: int32
          nullable: true
          type: integer
          x-order: 1
        gateway:
          description: Gateway.
          nullable: true
          type: string
          x-order: 2
      title: SubnetInfo
      type: object
    SupportChannelConfig:
      description: Specifies the support channel configuration.
      example:
        endTimeUsecs: 0
        isEnabled: true
      properties:
        isEnabled:
          description: Specifies id the support channel is enabled.
          nullable: true
          type: boolean
          x-order: 0
        endTimeUsecs:
          description: Specifies the support channel expiry time.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      required:
      - endTimeUsecs
      - isEnabled
      title: Support channel configuration.
      type: object
    SupportMfaConfigInfo:
      description: Holds the MFA configuration to be returned or stored.
      example:
        mfaType: email
        enabled: false
        email: email
      properties:
        enabled:
          default: false
          description: Specifies whether MFA is enabled for support user.
          type: boolean
          x-order: 0
        mfaType:
          description: Specifies the mechanism to receive the OTP code.
          enum:
          - email
          - totp
          nullable: true
          type: string
          x-go-name: Environment
          x-order: 1
        email:
          description: Specifies email address of the support user. Used when MFA
            mode is email.
          nullable: true
          type: string
          x-order: 2
      type: object
    SupportTotpKeyInfo:
      description: Specifies the TOTP key info
      properties:
        totpSecretKey:
          description: Specifies the TOTP secret key.
          type: string
          x-order: 0
        totpUri:
          description: Specifies the TOTP key URI for generating MFA QR code.
          type: string
          x-order: 1
        accountName:
          description: Specifies the TOTP account name to be configured for support
            user.
          type: string
          x-order: 2
      type: object
    SupportedHadoopDistributions:
      description: Enumeration of all the supported Hadoop distributions.
      properties:
        SupportedHadoopDistributions:
          description: Enumeration of all the supported Hadoop distributions.
          enum:
          - CDH
          - HDP
          type: string
          x-order: 0
      title: Enumeration of all the supported Hadoop distributions.
      type: object
    SwiftConfig:
      description: Specifies the Swift config settings for this View.
      properties:
        swiftProjectDomain:
          description: Specifies the Keystone project domain.
          nullable: true
          type: string
          x-order: 0
        swiftProjectName:
          description: Specifies the Keystone project name.
          nullable: true
          type: string
          x-order: 1
        swiftUserDomain:
          description: Specifies the Keystone user domain.
          nullable: true
          type: string
          x-order: 2
        swiftUsername:
          description: Specifies the Keystone username.
          nullable: true
          type: string
          x-order: 3
      type: object
    SwiftParams:
      description: Specifies the parameters to update a Swift configuration.
      example:
        tenantId: tenantId
        operatorRoles:
        - operatorRoles
        - operatorRoles
        keystoneId: 0
      properties:
        tenantId:
          description: Specifies the tenant Id who will use this Swift configuration.
          nullable: true
          type: string
          x-order: 0
        keystoneId:
          description: Specifies the associated Keystone configuration Id.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        operatorRoles:
          description: Specifies a list of roles that can operate on Cohesity Swift
            service.
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 2
      required:
      - tenantId
      type: object
    SyslogAuditTag:
      description: Cohesity audit tag name.
      example:
        alertAudit: alertAudit
        filerAudit: filerAudit
        clusterAudit: clusterAudit
        dataProtectionEventsAudit: dataProtectionEventsAudit
      properties:
        clusterAudit:
          description: Cluster audit tagging name.
          nullable: true
          type: string
          x-order: 0
        filerAudit:
          description: Filer audit tagging name.
          nullable: true
          type: string
          x-order: 1
        dataProtectionEventsAudit:
          description: Data protection events audit tagging name.
          nullable: true
          type: string
          x-order: 2
        alertAudit:
          description: Alert audit tagging name.
          nullable: true
          type: string
          x-order: 3
      title: SyslogAuditTag
      type: object
    SyslogServer:
      description: Specifies information about syslog server.
      example:
        isTlsEnabled: true
        protocol: protocol
        port: 6
        facilityList:
        - facilityList
        - facilityList
        ip: ip
        msgPatternList:
        - msgPatternList
        - msgPatternList
        name: name
        id: 0
        programNameList:
        - programNameList
        - programNameList
        rawMsgPatternList:
        - rawMsgPatternList
        - rawMsgPatternList
        caCertificate: caCertificate
        enabled: true
      properties:
        id:
          description: The id of the syslog server.
          format: int32
          nullable: true
          type: integer
          x-order: 0
        ip:
          description: Specifies the IP address or hostname of the syslog server.
          nullable: true
          type: string
          x-order: 1
        port:
          description: Specifies the port where the syslog server listens.
          format: int32
          nullable: true
          type: integer
          x-order: 2
        protocol:
          description: Specifies the protocol used to send the logs.
          nullable: true
          type: string
          x-order: 3
        name:
          description: Specifies a unique name for the syslog server on the Cluster.
          nullable: true
          type: string
          x-order: 4
        enabled:
          description: Specifies whether to enable the syslog server on the Cluster.
          nullable: true
          type: boolean
          x-order: 5
        facilityList:
          description: Send enabled syslog facilities related logs to logging server.
          items:
            type: string
          type: array
          x-order: 6
        programNameList:
          description: Send programes related logs to logging server.
          items:
            type: string
          type: array
          x-order: 7
        msgPatternList:
          description: Send logs including the msg patterns to logging server.
          items:
            type: string
          type: array
          x-order: 8
        rawMsgPatternList:
          description: Send logs including the msg patterns to logging server.
          items:
            type: string
          type: array
          x-order: 9
        isTlsEnabled:
          description: Specify whether to enable tls support.
          nullable: true
          type: boolean
          x-order: 10
        caCertificate:
          description: Syslog server CA certificate.
          nullable: true
          type: string
          x-order: 11
      title: Syslog Server.
      type: object
    SyslogServerStatus:
      description: Remote system logging server.
      example:
        isReachable: true
        id: 0
        message: message
      properties:
        id:
          description: The id of the syslog server.
          format: int32
          nullable: true
          type: integer
          x-order: 0
        isReachable:
          description: Specify if the syslog server is reachable or not.
          nullable: true
          type: boolean
          x-order: 1
        message:
          description: Description for current status.
          nullable: true
          type: string
          x-order: 2
      title: SyslogServerStatus
      type: object
    SyslogServers:
      description: Specifies the list of syslog servers.
      example:
        syslogServers:
        - isTlsEnabled: true
          protocol: protocol
          port: 6
          facilityList:
          - facilityList
          - facilityList
          ip: ip
          msgPatternList:
          - msgPatternList
          - msgPatternList
          name: name
          id: 0
          programNameList:
          - programNameList
          - programNameList
          rawMsgPatternList:
          - rawMsgPatternList
          - rawMsgPatternList
          caCertificate: caCertificate
          enabled: true
        - isTlsEnabled: true
          protocol: protocol
          port: 6
          facilityList:
          - facilityList
          - facilityList
          ip: ip
          msgPatternList:
          - msgPatternList
          - msgPatternList
          name: name
          id: 0
          programNameList:
          - programNameList
          - programNameList
          rawMsgPatternList:
          - rawMsgPatternList
          - rawMsgPatternList
          caCertificate: caCertificate
          enabled: true
      properties:
        syslogServers:
          description: Specifies the list of syslog servers.
          items:
            $ref: '#/components/schemas/SyslogServer'
          nullable: true
          type: array
          x-order: 0
      title: List of syslog servers
      type: object
    Tag:
      description: Tag details
      example:
        createdTimeUsecs: 0
        uiColor: uiColor
        uiPathElements:
        - uiPathElements
        - uiPathElements
        name: name
        namespace: namespace
        tenantId: tenantId
        description: description
        id: id
        lastUpdatedTimeUsecs: 6
        markedForDeletion: true
      properties:
        id:
          description: Specifies unique id of the Tag.
          nullable: true
          pattern: ^\d+:\d+:[A-Z0-9-]+$
          readOnly: true
          type: string
          x-order: 0
        name:
          description: Name of the Tag. Name has to be unique under Namespace.
          nullable: true
          type: string
          x-order: 1
        namespace:
          description: |-
            Namespace of the Tag. This is used to filter tags based on
            application or usecase. For example all tags related to vcenter can
            be put under one namespace or different departments could have their
            own namespaces e.g. finance/tag1 or operations/tag2 etc.
          nullable: true
          type: string
          x-order: 2
        tenantId:
          description: Tenant Id to whom the Tag belongs.
          nullable: true
          readOnly: true
          type: string
          x-order: 3
        description:
          description: Description of the Tag.
          nullable: true
          type: string
          x-order: 4
        createdTimeUsecs:
          description: |-
            Specifies the timestamp in microseconds since the epoch
            when this Tag was created.
          format: uint64
          nullable: true
          readOnly: true
          type: integer
          x-order: 5
        lastUpdatedTimeUsecs:
          description: |-
            Specifies the timestamp in microseconds since the epoch
            when this Tag was last updated.
          format: uint64
          nullable: true
          readOnly: true
          type: integer
          x-order: 6
        markedForDeletion:
          description: If true, Tag is marked for deletion.
          nullable: true
          readOnly: true
          type: boolean
          x-order: 7
        uiColor:
          description: Color of the tag in UI.
          nullable: true
          type: string
          x-order: 8
        uiPathElements:
          description: Path of the tag for UI nesting purposes.
          items:
            type: string
          nullable: true
          type: array
          x-omitempty: true
          x-order: 9
      required:
      - name
      - namespace
      title: Tag.
      type: object
    TagInfo:
      description: Specifies the tag info for an object.
      properties:
        tagId:
          description: Specifies Id of tag applied to the object.
          nullable: true
          type: string
          x-order: 0
      required:
      - tagId
      type: object
    TagObject:
      description: Specifies all the tag related info for an object.
      properties:
        tags:
          description: Specifies tag applied to the object.
          items:
            $ref: '#/components/schemas/TagInfo'
          nullable: true
          type: array
          x-order: 0
        snapshotTags:
          description: Specifies snapshot tags applied to the object.
          items:
            $ref: '#/components/schemas/SnapshotTagInfo'
          nullable: true
          type: array
          x-order: 1
      type: object
    TargetBandwidthThrottlings:
      description: Specifies the bandwidth throttling setting of the External Target.
      properties:
        download:
          $ref: '#/components/schemas/BandwidthThrottling'
        upload:
          $ref: '#/components/schemas/BandwidthThrottling'
      title: Target Bandwidth Throttlings
      type: object
    TargetEncryptionLevel:
      description: Specifies the encryption level of the external target.
      properties:
        enum:
          description: Specifies the encryption level of the external target.
          enum:
          - None
          - Weak
          - Strong
          type: string
          x-order: 0
      title: Target Encryption Level
      type: object
    TargetMailboxParam:
      allOf:
      - $ref: '#/components/schemas/RecoveryObjectIdentifier'
      - $ref: '#/components/schemas/TargetMailboxParam_allOf'
      description: Specifies the target Mailbox to recover to.
    TargetMsTeamParam:
      allOf:
      - $ref: '#/components/schemas/RecoveryObjectIdentifier'
      - type: object
      description: Specifies the target Microsoft 365 Team to recover to.
    TargetOneDriveParam:
      allOf:
      - $ref: '#/components/schemas/RecoveryObjectIdentifier'
      - $ref: '#/components/schemas/TargetMailboxParam_allOf'
      description: Specifies the target OneDrive to recover to.
    TargetPurposeType:
      description: Specifies the purpose type of External Target.
      properties:
        enum:
          description: Specifies the purpose type of External Target.
          enum:
          - Archival
          - Tiering
          type: string
          x-order: 0
      title: Target Purpose Type
      type: object
    TargetRegistrationStatus:
      description: Specifies the registration status of the external target.
      properties:
        enum:
          description: Specifies the registration status of the external target.
          enum:
          - Registered
          - Unregistering
          - Unregistered
          type: string
          x-order: 0
      title: Target Registration Status
      type: object
    TargetSchedule:
      description: Specifies a schedule frequency and schedule unit for copying Snapshots
        to backup targets.
      properties:
        unit:
          description: Specifies the frequency that Snapshots should be copied to
            the specified target. Used in combination with multiplier. <br>'Runs'
            means that the Snapshot copy occurs after the number of Protection Group
            Runs equals the number specified in the frequency. <br>'Hours' means that
            the Snapshot copy occurs hourly at the frequency set in the frequency,
            for example if scheduleFrequency is 2, the copy occurs every 2 hours.
            <br>'Days' means that the Snapshot copy occurs daily at the frequency
            set in the frequency. <br>'Weeks' means that the Snapshot copy occurs
            weekly at the frequency set in the frequency. <br>'Months' means that
            the Snapshot copy occurs monthly at the frequency set in the Frequency.
            <br>'Years' means that the Snapshot copy occurs yearly at the frequency
            set in the scheduleFrequency.
          enum:
          - Runs
          - Hours
          - Days
          - Weeks
          - Months
          - Years
          nullable: true
          type: string
          x-order: 0
        frequency:
          description: |-
            Specifies a factor to multiply the unit by, to determine the copy schedule.
            For example if set to 2 and the unit is hourly, then Snapshots from the first eligible Job Run for every 2 hour period is copied.
          format: int32
          minimum: 1
          nullable: true
          type: integer
          x-order: 1
      required:
      - unit
      title: Schedule
      type: object
    TargetShareType:
      description: Specifies the share type of the external target.
      properties:
        enum:
          description: Specifies the share type of the external target.
          enum:
          - CIFS
          - NFS
          type: string
          x-order: 0
      title: Target Share Type
      type: object
    TargetSiteParam:
      allOf:
      - $ref: '#/components/schemas/RecoveryObjectIdentifier'
      - $ref: '#/components/schemas/TargetSiteParam_allOf'
      description: Specifies the target Site to recover to.
    TargetsConfiguration:
      description: Specifies the replication, archival and cloud spin targets of Protection
        Policy.
      properties:
        replicationTargets:
          items:
            $ref: '#/components/schemas/ReplicationConfig'
          type: array
          x-order: 0
        archivalTargets:
          items:
            $ref: '#/components/schemas/ArchivalConfig'
          type: array
          x-order: 1
        cloudSpinTargets:
          items:
            $ref: '#/components/schemas/CloudSpinConfig'
          type: array
          x-order: 2
      type: object
    TdmAction:
      description: Supported actions in TDM.
      properties:
        type:
          description: Specifies the TDM action type.
          enum:
          - clone
          - teardown
          - refresh
          - snapshot
          - rewind
          type: string
          x-order: 0
      title: TdmAction
      type: object
    TdmCloneTaskRequestParams:
      allOf:
      - $ref: '#/components/schemas/CommonTdmCloneTaskRequestParams'
      - $ref: '#/components/schemas/TdmCloneTaskRequestParams_allOf'
      description: Specifies the request parameters to create a clone task.
    TdmCloneTaskResponseParams:
      allOf:
      - $ref: '#/components/schemas/CommonTdmCloneTaskResponseParams'
      - $ref: '#/components/schemas/TdmCloneTaskRequestParams_allOf'
      description: Specifies the response parameters for a clone task.
    TdmEnvironment:
      description: Supported environments in TDM.
      properties:
        type:
          description: Specifies the TDM environment type.
          enum:
          - kSQL
          - kOracle
          type: string
          x-order: 0
      title: TdmEnvironment
      type: object
    TdmObject:
      allOf:
      - $ref: '#/components/schemas/CommonTdmObjectResponseParams'
      - $ref: '#/components/schemas/TdmObject_allOf'
      description: Specifies a TDM object.
    TdmObjectTimelineEvent:
      allOf:
      - $ref: '#/components/schemas/CommonTdmObjectTimelineEventsResponseParams'
      - $ref: '#/components/schemas/TdmObjectTimelineEvent_allOf'
      description: Specifies a TDM object timeline event.
    TdmObjectTimelineEvents:
      description: Specifies a collection of TDM object's timeline events.
      example:
        events:
        - null
        - null
      properties:
        events:
          description: Specifies the collection of the timeline events, filtered by
            the specified criteria.
          items:
            $ref: '#/components/schemas/TdmObjectTimelineEvent'
          nullable: true
          type: array
          x-order: 0
      type: object
    TdmObjects:
      description: Specifies a collection of TDM objects.
      example:
        objects:
        - null
        - null
        paginationInfo:
          cookie: cookie
      properties:
        objects:
          description: Specifies the collection of TDM objects, filtered by the specified
            criteria.
          items:
            $ref: '#/components/schemas/TdmObject'
          type: array
          x-order: 0
        paginationInfo:
          $ref: '#/components/schemas/PaginationInfo'
      type: object
    TdmRefreshTaskRequestParams:
      description: Specifies the parameters to refresh a clone with new data.
      properties:
        cloneId:
          description: Specifies the ID of the clone, which needs to be refreshed.
          nullable: true
          type: string
          x-order: 0
        snapshotId:
          description: Specifies the snapshot ID, using which the clone is to be refreshed.
          nullable: true
          type: string
          x-order: 1
        description:
          description: Specifies the description of the clone refresh task.
          nullable: true
          type: string
          x-order: 2
      required:
      - cloneId
      - snapshotId
      type: object
    TdmRefreshTaskResponseParams:
      allOf:
      - $ref: '#/components/schemas/CommonTdmRefreshTaskResponseParams'
      - $ref: '#/components/schemas/TdmRefreshTaskResponseParams_allOf'
      description: Specifies the response parameters for a refresh task.
    TdmSnapshot:
      allOf:
      - $ref: '#/components/schemas/CommonTdmCloneSnapshotParams'
      - $ref: '#/components/schemas/TdmSnapshot_allOf'
      description: Specifies the response params for a TDM snapshot.
    TdmSnapshotTaskParams:
      allOf:
      - $ref: '#/components/schemas/TdmSnapshotTaskParams_allOf'
      - $ref: '#/components/schemas/CommonTdmCloneSnapshotParams'
      description: Specifies the parameters to create a snapshot of an existing clone.
    TdmStatus:
      description: Possible status of a TDM resource (task/object).
      properties:
        type:
          description: Specifies the status of the resource.
          enum:
          - scheduled
          - inProgress
          - succeeded
          - failed
          - canceled
          type: string
          x-order: 0
      title: TdmStatus
      type: object
    TdmTask:
      allOf:
      - $ref: '#/components/schemas/CommonTdmTaskResponseParams'
      - $ref: '#/components/schemas/TdmTask_allOf'
      description: Specifies a TDM task.
    TdmTasks:
      description: Specifies a collection of TDM tasks.
      example:
        paginationInfo:
          cookie: cookie
        tasks:
        - null
        - null
      properties:
        tasks:
          description: Specifies the collection of TDM tasks, filtered by the specified
            criteria.
          items:
            $ref: '#/components/schemas/TdmTask'
          nullable: true
          type: array
          x-order: 0
        paginationInfo:
          $ref: '#/components/schemas/PaginationInfo'
      type: object
    TdmTeardownTaskRequestParams:
      description: Specifies the parameters to teardown a clone.
      properties:
        cloneId:
          description: Specifies the ID of the clone to teardown.
          nullable: true
          type: string
          x-order: 0
      required:
      - cloneId
      type: object
    TearDownStatus:
      description: Tear Down Status
      properties:
        tearDownStatus:
          description: Specifies the tear down status.
          enum:
          - DestroyScheduled
          - Destroying
          - Destroyed
          - DestroyError
          type: string
          x-order: 0
      title: TearDownStatus
      type: object
    Template:
      description: Description of the view template.
      example:
        isDefault: true
        compress: true
        defaultTemplateName: Unknown
        name: name
        id: 0
        viewParams: '{}'
        dedup: true
      properties:
        id:
          description: Specifies an id of the view template.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the view template.
          nullable: true
          type: string
          x-order: 1
        dedup:
          description: Specifies whether to enable dedup in storage domain.
          nullable: true
          type: boolean
          x-order: 2
        compress:
          description: Specifies whether to enable compression in storage domain.
          nullable: true
          type: boolean
          x-order: 3
        isDefault:
          description: Specifies if the tempate is custom or static.
          nullable: true
          readOnly: true
          type: boolean
          x-order: 4
        defaultTemplateName:
          description: Used for uniquely indentifying a default template.
          enum:
          - Unknown
          - BackupGeneral
          - BackupCommvault
          - BackupVeeam
          - FileServiceVideos
          - FileServiceMultimedia
          - FileServiceArchive
          - ObjectServiceContainer
          nullable: true
          readOnly: true
          type: string
          x-order: 5
        viewParams:
          allOf:
          - $ref: '#/components/schemas/CreateView'
          - type: object
            x-nullable: true
          description: |-
            Specifies the parameters which is used to create the view.
            No field is required.
          type: object
          x-order: 6
      title: Template.
      type: object
    Tenant:
      description: Specifies a tenant object.
      properties:
        id:
          description: Specifies the id of the tenant.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the name of the tenant.
          nullable: true
          type: string
          x-order: 1
      title: Tenant
      type: object
    TenantAccess:
      description: Specifies the Tenant Access.
      example:
        tenantStatus: Active
        tenantType: Dmaas
        lastUpdatedTimeMsecs: 3
        tenantName: tenantName
        roles:
        - roles
        - roles
        tenantId: tenantId
        expiredTimeMsecs: 4
        isAccessActive: true
        createdTimeMsecs: 9
        clusters:
        - regionId: regionId
          clusterId: 2
          clusterIncarnationId: 7
        - regionId: regionId
          clusterId: 2
          clusterIncarnationId: 7
        effectiveTimeMsecs: 2
      properties:
        tenantId:
          description: Specifies the Tenant Id of the tenant access.
          nullable: true
          type: string
          x-order: 0
        roles:
          description: Specifies a list of roles associated with this access.
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 1
        clusters:
          description: Specifies the list of clusters accessible by this access.
          items:
            $ref: '#/components/schemas/McmClusterIdentifier'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 2
        createdTimeMsecs:
          description: |-
            Specifies the timestamp in milliseconds since the epoch when this
            access was created.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 3
        lastUpdatedTimeMsecs:
          description: |-
            Specifies the timestamp in milliseconds since the epoch when this
            access was updated.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 4
        isAccessActive:
          description: Specifies whether or not this access is currently active.
          nullable: true
          readOnly: true
          type: boolean
          x-order: 5
        effectiveTimeMsecs:
          description: |-
            Specifies the starting timestamp in milliseconds since
            the epoch when this access will be able allowed.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 6
        expiredTimeMsecs:
          description: |-
            Specifies the timestamp in milliseconds since the epoch
            when this access will no longer be allowed.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 7
        tenantName:
          description: Name of the Tenant.
          nullable: true
          readOnly: true
          type: string
          x-order: 8
        tenantStatus:
          description: Specifies the Tenant status.
          enum:
          - Active
          - Inactive
          - MarkedForDeletion
          - Deleted
          nullable: true
          readOnly: true
          type: string
          x-order: 9
        tenantType:
          description: Specifies the type of the tenant.
          enum:
          - Dmaas
          - Mcm
          nullable: true
          readOnly: true
          type: string
          x-order: 10
      required:
      - clusters
      - roles
      - tenantId
      title: Tenant Access.
      type: object
    TenantAccessResult:
      description: Specifies a List of Tenant Access.
      example:
        tenantAccesses:
        - tenantStatus: Active
          tenantType: Dmaas
          lastUpdatedTimeMsecs: 3
          tenantName: tenantName
          roles:
          - roles
          - roles
          tenantId: tenantId
          expiredTimeMsecs: 4
          isAccessActive: true
          createdTimeMsecs: 9
          clusters:
          - regionId: regionId
            clusterId: 2
            clusterIncarnationId: 7
          - regionId: regionId
            clusterId: 2
            clusterIncarnationId: 7
          effectiveTimeMsecs: 2
        - tenantStatus: Active
          tenantType: Dmaas
          lastUpdatedTimeMsecs: 3
          tenantName: tenantName
          roles:
          - roles
          - roles
          tenantId: tenantId
          expiredTimeMsecs: 4
          isAccessActive: true
          createdTimeMsecs: 9
          clusters:
          - regionId: regionId
            clusterId: 2
            clusterIncarnationId: 7
          - regionId: regionId
            clusterId: 2
            clusterIncarnationId: 7
          effectiveTimeMsecs: 2
      properties:
        tenantAccesses:
          description: List of available Tenant Access.
          items:
            $ref: '#/components/schemas/TenantAccess'
          type: array
          x-order: 0
      title: Tenant Access.
      type: object
    TenantActionBody:
      description: Specifies an action on the Tenant.
      example:
        action: Activate
      properties:
        action:
          description: Specifies the action which will be performed on the Tenant.
          enum:
          - Activate
          - Deactivate
          nullable: true
          type: string
          x-order: 0
      required:
      - action
      type: object
    TenantActions:
      description: Specifies the actions that can be performed on a Tenant.
      properties:
        enum:
          description: Specifies the actions that can be performed on a Tenant.
          enum:
          - Activate
          - Deactivate
          type: string
          x-order: 0
      title: Tenants Actions
      type: object
    TenantAssignmentTypeIntegerId:
      description: A list of Ids of properties assigned to the tenant.
      items:
        format: int64
        type: integer
      title: TenantAssignmentTypeIntegerId
      type: array
    TenantAssignmentTypeStringId:
      description: A list of Ids of properties assigned to the tenant.
      items:
        type: string
      title: TenantAssignmentTypeStringId
      type: array
    TenantAssignments:
      description: All properties like entities, sources, policies etc assigned to
        the tenant.
      example:
        assignments:
          vlans:
          - vlans
          - vlans
          storageDomains:
          - 0
          - 0
          objects:
          - 6
          - 6
          policies:
          - policies
          - policies
          views:
          - 1
          - 1
        tenantId: tenantId
      properties:
        tenantId:
          description: The tenant id.
          nullable: true
          type: string
          x-order: 0
        assignments:
          $ref: '#/components/schemas/TenantAssignmentsResult'
      title: TenantAssignments
      type: object
    TenantAssignmentsParams:
      description: |-
        Parameters to be specified for assigning properties like storage domain,
        entities, policies to the tenant.
      example:
        viewIds:
        - 1
        - 1
        storageDomainIds:
        - 0
        - 0
        policyIds:
        - policyIds
        - policyIds
        vlanIfaceNames:
        - vlanIfaceNames
        - vlanIfaceNames
        objectIds:
        - 6
        - 6
      properties:
        storageDomainIds:
          description: List of storage domains on the cluster, to be associated to
            the Tenant.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 0
        objectIds:
          description: List of objects on the cluster, to be associated to the Tenant.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 1
        vlanIfaceNames:
          description: List of vlans on the cluster, to be associated to the Tenant.
          items:
            type: string
          nullable: true
          type: array
          x-order: 2
        viewIds:
          description: List of views on the cluster, to be associated to the Tenant.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 3
        policyIds:
          description: List of policies on the cluster, to be associated to the Tenant.
          items:
            type: string
          nullable: true
          type: array
          x-order: 4
      title: TenantAssignmentsParams
      type: object
    TenantAssignmentsResult:
      description: Result of attempted tenant assignments
      example:
        vlans:
        - vlans
        - vlans
        storageDomains:
        - 0
        - 0
        objects:
        - 6
        - 6
        policies:
        - policies
        - policies
        views:
        - 1
        - 1
      nullable: true
      properties:
        storageDomains:
          description: A list of Ids of properties assigned to the tenant.
          items:
            format: int64
            type: integer
          title: TenantAssignmentTypeIntegerId
          type: array
        objects:
          description: A list of Ids of properties assigned to the tenant.
          items:
            format: int64
            type: integer
          title: TenantAssignmentTypeIntegerId
          type: array
        vlans:
          description: A list of Ids of properties assigned to the tenant.
          items:
            type: string
          title: TenantAssignmentTypeStringId
          type: array
        views:
          description: A list of Ids of properties assigned to the tenant.
          items:
            format: int64
            type: integer
          title: TenantAssignmentTypeIntegerId
          type: array
        policies:
          description: A list of Ids of properties assigned to the tenant.
          items:
            type: string
          title: TenantAssignmentTypeStringId
          type: array
      type: object
      x-nullable: true
    TenantConfig:
      description: All configurations related to tenants for an account
      example:
        organizationsEnabled: true
      properties:
        organizationsEnabled:
          description: Specifies whether organizations is enabled for the account.
          nullable: true
          type: boolean
          x-order: 0
      required:
      - organizationsEnabled
      title: TenantConfig
      type: object
    TenantDmaasCert:
      description: Specifies the parameters to of a tenant certificate.
      properties:
        tenantId:
          description: The id of the tenant.
          nullable: true
          type: string
          x-order: 0
        certificate:
          description: Specifies the tenant certificate.
          nullable: true
          type: string
          x-order: 1
        privateKey:
          description: Specifies the tenant private key.
          nullable: true
          type: string
          x-order: 2
        connectorCaChain:
          description: Specifies the CA chain that is used to sign the connector certificate.
          nullable: true
          type: string
          x-order: 3
        passphrase:
          description: Specifies the passphrase used to encode the private key.
          nullable: true
          type: string
          x-order: 4
      title: Tenant Dmaas Certificate.
      type: object
    TenantDmaasCerts:
      description: Specifies a list of tenant certificates.
      properties:
        certificates:
          description: Specifies a list of tenant certificates.
          items:
            $ref: '#/components/schemas/TenantDmaasCert'
          nullable: true
          type: array
          x-order: 0
      title: Tenant Dmaas Certificates.
      type: object
    TenantInfo:
      description: Description of a Tenant and it's properties.
      example:
        lastUpdatedAtTimeMsecs: 6
        createdAtTimeMsecs: 0
        name: name
        description: description
        id: id
        deletedAtTimeMsecs: 1
        status: Active
        network:
          clusterIps:
          - clusterIps
          - clusterIps
          clusterHostname: clusterHostname
          connectorEnabled: true
      properties:
        id:
          description: The tenant id.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Name of the Tenant.
          nullable: true
          type: string
          x-order: 1
        description:
          description: Description about the tenant.
          nullable: true
          type: string
          x-order: 2
        status:
          description: Current Status of the Tenant.
          enum:
          - Active
          - Inactive
          - MarkedForDeletion
          - Deleted
          nullable: true
          type: string
          x-order: 3
        network:
          $ref: '#/components/schemas/TenantNetwork'
        createdAtTimeMsecs:
          description: Epoch time when tenant was created.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 5
        lastUpdatedAtTimeMsecs:
          description: Epoch time when tenant was last updated.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 6
        deletedAtTimeMsecs:
          description: Epoch time when tenant was last updated.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 7
      title: Tenant
      type: object
    TenantNetwork:
      description: Networking information about a Tenant on a Cluster.
      example:
        clusterIps:
        - clusterIps
        - clusterIps
        clusterHostname: clusterHostname
        connectorEnabled: true
      properties:
        connectorEnabled:
          description: Whether connector (hybrid extender) is enabled.
          nullable: true
          type: boolean
          x-order: 0
        clusterHostname:
          description: |-
            The hostname for Cohesity cluster as seen by tenants and as is routable
            from the tenant's network. Tenant's VLAN's hostname, if available can be
            used instead but it is mandatory to provide this value if there's no VLAN
            hostname to use. Also, when set, this field would take precedence over
            VLAN hostname.
          nullable: true
          type: string
          x-order: 1
        clusterIps:
          description: |-
            Set of IPs as seen from the tenant's network for the Cohesity cluster.
            Only one from 'clusterHostname' and 'clusterIps' is needed.
          items:
            nullable: true
            type: string
          nullable: true
          type: array
          x-order: 2
      required:
      - connectorEnabled
      title: TenantNetwork
      type: object
    TenantStatus:
      description: Describes the status of a Tenant on a Cluster or Helios.
      properties:
        enum:
          description: Specifies the Tenant status
          enum:
          - Active
          - Inactive
          - MarkedForDeletion
          - Deleted
          type: string
          x-order: 0
      title: Tenant Status
      type: object
    TenantsInfo:
      description: A List of tenants.
      example:
        tenants:
        - lastUpdatedAtTimeMsecs: 6
          createdAtTimeMsecs: 0
          name: name
          description: description
          id: id
          deletedAtTimeMsecs: 1
          status: Active
          network:
            clusterIps:
            - clusterIps
            - clusterIps
            clusterHostname: clusterHostname
            connectorEnabled: true
        - lastUpdatedAtTimeMsecs: 6
          createdAtTimeMsecs: 0
          name: name
          description: description
          id: id
          deletedAtTimeMsecs: 1
          status: Active
          network:
            clusterIps:
            - clusterIps
            - clusterIps
            clusterHostname: clusterHostname
            connectorEnabled: true
      properties:
        tenants:
          description: List of Tenants.
          items:
            $ref: '#/components/schemas/TenantInfo'
          type: array
          x-order: 0
      title: Tenants
      type: object
    ThrottlingParams:
      description: Specifies throttling params.
      properties:
        newTaskLatencyThresholdMsecs:
          description: If the latency of a datastore is above this value, then a new
            backup task that uses the datastore won't be started.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        activeTaskLatencyThresholdMsecs:
          description: If the latency of a datastore is above this value, then an
            existing backup task that uses the datastore will start getting throttled.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        maxConcurrentStreams:
          description: If this value is > 0 and the number of streams concurrently
            active on a datastore is equal to it, then any further requests to access
            the datastore would be denied until the number of active streams reduces.
            This applies for all the datastores in the specified host.
          format: int32
          nullable: true
          type: integer
          x-order: 2
        dataStoreParams:
          description: Specifies datastore specific parameters.
          items:
            $ref: '#/components/schemas/DatastoreParams'
          nullable: true
          type: array
          x-order: 3
      title: Throttling Params.
      type: object
    TierLevelSettings:
      description: 'Specifies the settings tier levels configured with each archival
        target. The tier settings need to be applied in specific order and default
        tier should always be passed as first entry in tiers array. The following
        example illustrates how to configure tiering input for AWS tiering. Same type
        of input structure applied to other cloud platforms also. <br>If user wants
        to achieve following tiering for backup, <br>User Desired Tiering- <br><t>1.Archive
        Full back up for 12 Months <br><t>2.Tier Levels <br><t><t>[1,12] [ <br><t><t><t>s3
        (1 to 2 months), (default tier) <br><t><t><t>s3 Intelligent tiering (3 to
        6 months), <br><t><t><t>s3 One Zone (7 to 9 months) <br><t><t><t>Glacier (10
        to 12 months)] <br><t>API Input <br><t><t>1.tiers-[ <br><t><t><t>{''tierType'':
        ''S3'',''moveAfterUnit'':''months'', <br><t><t><t>''moveAfter'':2 - move from
        s3 to s3Inte after 2 months}, <br><t><t><t>{''tierType'': ''S3Inte'',''moveAfterUnit'':''months'',
        <br><t><t><t>''moveAfter'':4 - move from S3Inte to Glacier after 4 months},
        <br><t><t><t>{''tierType'': ''Glacier'', ''moveAfterUnit'':''months'', <br><t><t><t>''moveAfter'':
        3 - move from Glacier to S3 One Zone after 3 months }, <br><t><t><t>{''tierType'':
        ''S3 One Zone'', ''moveAfterUnit'': nil, <br><t><t><t>''moveAfter'': nil -
        For the last record, ''moveAfter'' and ''moveAfterUnit'' <br><t><t><t>will
        be ignored since there are no further tier for data movement } <br><t><t><t>}]'
      properties:
        cloudPlatform:
          description: Specifies the cloud platform to enable tiering.
          enum:
          - AWS
          - Azure
          - Oracle
          - Google
          nullable: true
          type: string
          x-order: 0
        awsTiering:
          $ref: '#/components/schemas/AWSTiers'
        azureTiering:
          $ref: '#/components/schemas/AzureTiers'
        googleTiering:
          $ref: '#/components/schemas/GoogleTiers'
        oracleTiering:
          $ref: '#/components/schemas/OracleTiers'
      required:
      - cloudPlatform
      type: object
    TieringAwsExternalTargetParams:
      allOf:
      - $ref: '#/components/schemas/CommonTieringAwsExternalTargetParams'
      - $ref: '#/components/schemas/TieringAwsExternalTargetParams_allOf'
      description: Specifies the common parameters which are specific to AWS related
        External Targets.
      title: AWS External Target Request Params for tiering purpose type.
    TieringAzureExternalTargetParams:
      allOf:
      - $ref: '#/components/schemas/CommonTieringAzureExternalTargetParams'
      - $ref: '#/components/schemas/TieringAzureExternalTargetParams_allOf'
      description: Specifies the common parameters which are specific to Azure related
        External Targets.
      title: Azure External Target Request Params for tiering purpose type.
    TieringBandwidthSettings:
      allOf:
      - $ref: '#/components/schemas/CommonBandwidthSettings'
      description: Specifies the global bandwidth setting of the Tiering External
        Target.
      title: Tiering Bandwidth Settings
    TieringCloudPlatforms:
      description: Tiering Cloud Platforms.
      properties:
        type:
          description: Tiering Cloud Platforms.
          enum:
          - AWS
          - Azure
          - Oracle
          - Google
          type: string
          x-order: 0
      title: Tiering Cloud Platforms.
      type: object
    TieringExternalTargetParams:
      allOf:
      - $ref: '#/components/schemas/CommonTieringExternalTargetParams'
      - $ref: '#/components/schemas/TieringExternalTargetParams_allOf'
      description: Specifies the parameters which are specific to Tiering purpose
        type External Targets.
    TieringGcpExternalTargetParams:
      allOf:
      - $ref: '#/components/schemas/CommonGcpExternalTargetParams'
      - $ref: '#/components/schemas/TieringGcpExternalTargetParams_allOf'
      description: Specifies the parameters which are specific to GCP related External
        Targets of tiering purpose type.
      title: GCP Tiering External Target Request Common Params for tiering purpose
        type.
    TieringInfo:
      description: Specifies the data tiering task details.
      properties:
        progress:
          $ref: '#/components/schemas/ProgressSummary'
        status:
          description: |-
            Status of the analysis run.
            'Running' indicates that the run is still running.
            'Canceled' indicates that the run has been canceled.
            'Canceling' indicates that the run is in the process of being
             canceled.
            'Failed' indicates that the run has failed.
            'Missed' indicates that the run was unable to take place at the
             scheduled time because the previous run was still happening.
            'Succeeded' indicates that the run has finished successfully.
            'SucceededWithWarning' indicates that the run finished
             successfully, but there were some warning messages.
            'OnHold' indicates that the run has On hold.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          nullable: true
          type: string
          x-order: 1
        stats:
          $ref: '#/components/schemas/DataTieringTaskStats'
      type: object
    TieringLevels:
      description: Tiering Levels
      properties:
        type:
          description: Tiering Levels
          enum:
          - kAmazonS3Standard
          - kAmazonS3StandardIA
          - kAmazonS3OneZoneIA
          - kAmazonS3IntelligentTiering
          - kAmazonS3Glacier
          - kAmazonS3GlacierDeepArchive
          - kAzureTierHot
          - kAzureTierCool
          - kAzureTierArchive
          - kGoogleStandard
          - kGoogleRegional
          - kGoogleMultiRegional
          - kGoogleNearline
          - kGoogleColdline
          - kOracleTierStandard
          - kOracleTierArchive
          type: string
          x-order: 0
      title: Tiering Levels.
      type: object
    TieringOracleExternalTargetParams:
      allOf:
      - $ref: '#/components/schemas/CommonOracleExternalTargetParams'
      - $ref: '#/components/schemas/TieringOracleExternalTargetParams_allOf'
      description: Specifies the common parameters which are specific to Oracle related
        External Targets.
      title: Oracle External Target Request Params for tiering purpose type.
    TieringS3CompExternalTargetParams:
      allOf:
      - $ref: '#/components/schemas/CommonS3CompExternalTargetParams'
      description: Specifies the parameters which are specific to S3 Compatible related
        External Targets of tiering purpose type.
      title: S3 Compatible Tiering External Target Request Common Params for tiering
        purpose type.
    TieringTargetStorageType:
      description: Specifies the storage type of External Target of tiering purpose
        type.
      properties:
        enum:
          description: Specifies the storage type of External Target of tiering purpose
            type.
          enum:
          - Azure
          - Google
          - AWS
          - Oracle
          - S3Compatible
          type: string
          x-order: 0
      title: Tiering Target Storage Type
      type: object
    TieringType:
      description: Data tiering task type.
      properties:
        type:
          description: Specifies the data tiering task type.
          enum:
          - Downtier
          - Uptier
          type: string
          x-order: 0
      title: Data tiering task type.
      type: object
    TimeOfAWeek:
      description: Specifies a time period by specifying a single daily time period
        and one or more days of the week, for example 9 AM - 5 PM on Monday, Wednesday
        or Friday. If different time periods are required on different days, then
        multiple instances of this Weekly Time Period must be specified.
      properties:
        days:
          description: Array of Week Days. Specifies a list of days of a week (such
            as 'Sunday') when the time period should be applied. If not set, the time
            range applies to all days of the week. Specifies a day in a week such
            as 'Sunday', 'Monday', etc.
          items:
            enum:
            - Sunday
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            type: string
          nullable: true
          type: array
          x-order: 0
        startTime:
          $ref: '#/components/schemas/TimeOfDay'
        endTime:
          $ref: '#/components/schemas/TimeOfDay'
        isAllDay:
          description: All Day. Specifies that bandwidth limit is applied for entire
            day.
          nullable: true
          type: boolean
          x-order: 3
      type: object
    TimeOfDay:
      description: Specifies the time of day. Used for scheduling purposes.
      properties:
        hour:
          description: Specifies the hour of the day (0-23).
          format: int32
          maximum: 23
          minimum: 0
          nullable: true
          type: integer
          x-order: 0
        minute:
          description: Specifies the minute of the hour (0-59).
          format: int32
          maximum: 59
          minimum: 0
          nullable: true
          type: integer
          x-order: 1
        timeZone:
          default: America/Los_Angeles
          description: Specifies the time zone of the user. If not specified, default
            value is assumed as America/Los_Angeles.
          nullable: true
          type: string
          x-order: 2
      required:
      - hour
      - minute
      type: object
    TimeUnits:
      description: Time Units type.
      properties:
        timeUnits:
          description: Specifies Time Units type.
          enum:
          - Minutes
          - Hours
          - Days
          - Weeks
          - Months
          type: string
          x-order: 0
      title: Time Units type.
      type: object
    TotpKeyInfo:
      description: Specifies the TOTP key info
      example:
        totpKeyId: totpKeyId
        totpUri: totpUri
        totpKeyName: totpKeyName
        totpSecretKey: totpSecretKey
      properties:
        totpKeyName:
          description: Specifies the TOTP key name.
          type: string
          x-order: 0
        totpKeyId:
          description: Specifies the TOTP key ID.
          type: string
          x-order: 1
        totpSecretKey:
          description: Specifies the TOTP secret key.
          type: string
          x-order: 2
        totpUri:
          description: Specifies the TOTP key URI for generating MFA QR code.
          type: string
          x-order: 3
      type: object
    TrustedCa:
      description: Specifies the basic info about CA Root Certificate.
      example:
        issuedTo: issuedTo
        issuedTimeUsecs: 0
        registrationTimeUsecs: 1
        lastValidatedTimeUsecs: 5
        issuedBy: issuedBy
        name: name
        description: description
        id: id
        expirationTimeUsecs: 6
        status: Valid
      properties:
        id:
          description: Unique id for the certificate.
          nullable: true
          readOnly: true
          type: string
          x-order: 0
        name:
          description: Unique name for the certificate.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        issuedBy:
          description: Specifies the issuer.
          nullable: true
          readOnly: true
          type: string
          x-order: 2
        issuedTo:
          description: Specifies whom it was issued to.
          nullable: true
          readOnly: true
          type: string
          x-order: 3
        issuedTimeUsecs:
          description: |-
            Specifies the timestamp epoch in microseconds when this certificate
            will start being valid.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 4
        expirationTimeUsecs:
          description: |-
            Specifies the timestamp epoch in microseconds when this certificate
            will no longer be valid.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 5
        description:
          description: description of the certificate.
          nullable: true
          readOnly: true
          type: string
          x-order: 6
        registrationTimeUsecs:
          description: |-
            Specifies the timestamp epoch in microseconds when this certificate
            was registered on the cluster.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 7
        lastValidatedTimeUsecs:
          description: |-
            Specifies the timestamp epoch in microseconds when this certificate
            was last validated.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 8
        status:
          description: Validation Status of the certificate.
          enum:
          - Valid
          - Expired
          - Revoked
          - Unknown
          nullable: true
          readOnly: true
          type: string
          x-order: 9
      type: object
    TrustedCaRequest:
      description: Specifies the basic info about CA Root Certificate.
      example:
        certificate: certificate
        name: name
        description: description
      properties:
        certificate:
          description: |-
            Specifies the certificate to be imported. Certificate should be in
            PEM format.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Descriptive name of the certificate.
          nullable: true
          type: string
          x-order: 1
        description:
          description: Description of the certificate.
          nullable: true
          type: string
          x-order: 2
      required:
      - certificate
      - name
      type: object
    TrustedDomain:
      description: Specifies the details of a trusted domain.
      properties:
        domainName:
          description: Specifies a domain name.
          nullable: true
          type: string
          x-order: 0
        preferredDomainControllers:
          description: Specifies a list of preferred domain controllers for this domain.
          items:
            $ref: '#/components/schemas/DomainController'
          type: array
          x-order: 1
      type: object
    TrustedDomainParams:
      description: Specifies the params related to trusted domains.
      properties:
        enabled:
          description: Specifies if trusted domain discovery is enabled.
          nullable: true
          type: boolean
          x-order: 0
        trustedDomains:
          description: Specifies a list of trusted domains.
          items:
            $ref: '#/components/schemas/TrustedDomain'
          nullable: true
          type: array
          x-order: 1
        blacklistedDomains:
          description: Specifies a list of domains to add to blacklist. These domains
            will be blacklisted in trusted domain discorvery.
          items:
            type: string
          nullable: true
          type: array
          x-order: 2
        whitelistedDomains:
          description: Specifies a list of domains to add to whitelist. Only these
            domains will be used for authentication if 'onlyUseWhitelistedDomains'
            is set.
          items:
            pattern: ^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])(\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9]))*$
            type: string
          nullable: true
          type: array
          x-order: 3
        onlyUseWhitelistedDomains:
          description: Specifies whether to use 'whitelistedDomains' only for authentication.
          nullable: true
          type: boolean
          x-order: 4
      required:
      - enabled
      type: object
    UdaParams:
      description: Specifies the recovery options specific to Universal Data Adapter
        environment.
      properties:
        recoveryAction:
          description: Specifies the type of recover action to be performed.
          enum:
          - RecoverObjects
          type: string
          x-order: 0
        recoverUdaParams:
          $ref: '#/components/schemas/RecoverUdaParams'
      required:
      - recoverUdaParams
      - recoveryAction
      title: Recover Universal Data Adapter environment params.
      type: object
    UdaProtectionGroupObjectParams:
      description: Specifies the Universal Data Adapter object details.
      properties:
        name:
          description: Specifies the fully qualified name of the object.
          type: string
          x-order: 0
      required:
      - name
      type: object
    UdaProtectionGroupParams:
      description: Specifies parameters related to the Universal Data Adapter Protection
        job.
      properties:
        sourceId:
          description: Specifies the source Id of the objects to be protected.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        objects:
          description: Specifies a list of fully qualified names of the objects to
            be protected.
          items:
            $ref: '#/components/schemas/UdaProtectionGroupObjectParams'
          type: array
          x-order: 1
        fullBackupArgs:
          description: Specifies the custom arguments to be supplied to the full backup
            script when a full backup is enabled in the policy.
          nullable: true
          type: string
          x-order: 2
        incrBackupArgs:
          description: Specifies the custom arguments to be supplied to the incremental
            backup script when an incremental backup is enabled in the policy.
          nullable: true
          type: string
          x-order: 3
        logBackupArgs:
          description: Specifies the custom arguments to be supplied to the log backup
            script when a log backup is enabled in the policy.
          nullable: true
          type: string
          x-order: 4
        concurrency:
          default: 1
          description: Specifies the maximum number of concurrent IO Streams that
            will be created to exchange data with the cluster. If not specified, the
            default value is taken as 1.
          format: int32
          nullable: true
          type: integer
          x-order: 5
        mounts:
          default: 1
          description: Specifies the maximum number of view mounts per host. If not
            specified, the default value is taken as 1.
          format: int32
          nullable: true
          type: integer
          x-order: 6
      required:
      - objects
      - sourceId
      type: object
    UdaSourceRegistrationParams:
      description: Specifies parameters to register a Universal Data Adapter source.
      properties:
        sourceType:
          description: Specifies the source type for Universal Data Adapter source.
          enum:
          - kCockroachDB
          - kDB2
          - kMySQL
          - kOther
          - kSapHana
          - kSapMaxDB
          - kSapOracle
          - kSapSybase
          - kSapSybaseIQ
          type: string
          x-order: 0
        hosts:
          description: Specifies the IPs/hostnames for the nodes forming the Universal
            Data Adapter source cluster.
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 1
        credentials:
          $ref: '#/components/schemas/UdaSourceRegistrationParams_credentials'
        scriptDir:
          description: Specifies the absolute path of scripts used to interact with
            the Universal Data Adapter source.
          type: string
          x-order: 3
        mountView:
          description: Specifies if SMB/NFS view mounting should be enabled on source.
            Default value is false.
          nullable: true
          type: boolean
          x-order: 4
        viewParams:
          $ref: '#/components/schemas/UdaSourceRegistrationParams_viewParams'
        sourceRegistrationArgs:
          description: Specifies custom arguments to be supplied to the source registration
            scripts.
          nullable: true
          type: string
          x-order: 6
      required:
      - hosts
      - scriptDir
      - sourceType
      title: Register Universal Data Adapter source registration request parameters.
      type: object
    UdaSourceType:
      description: Enumeration of all the supported source types for the Universal
        Data Adapter.
      properties:
        type:
          description: Enumeration of all the supported source types for the Universal
            Data Adapter.
          enum:
          - kCockroachDB
          - kDB2
          - kMySQL
          - kOther
          - kSapHana
          - kSapMaxDB
          - kSapOracle
          - kSapSybase
          - kSapSybaseIQ
          type: string
          x-order: 0
      title: Enumeration of all the supported source types for the Universal Data
        Adapter.
      type: object
    UnplannedFailoverParams:
      description: Specifies parameters of an unplanned failover.
      properties:
        reverseReplication:
          description: Specifies whether a reverse replication needs to be set for
            the view on target cluster after failover.
          nullable: true
          type: boolean
          x-order: 0
      type: object
    UnprotectActionObjectLevelParams:
      allOf:
      - $ref: '#/components/schemas/ProtectionObjectInput'
      - $ref: '#/components/schemas/UnprotectActionObjectLevelParams_allOf'
      description: Specifies the request parameters for Unprotect action on a Protected
        object.
    UnprotectActionObjectLevelResponse:
      description: Specifies the infomration about status of Unprotect action.
      properties:
        error:
          $ref: '#/components/schemas/Error'
      type: object
    UnregisterKerberosProvider:
      description: Response of Unregister Kerberos Provider.
      example:
        message: message
      properties:
        message:
          description: A status message returned upon unregistering.
          type: string
          x-order: 0
      type: object
    UnregisterKerberosRequest:
      description: Specifies the request to unregister a Kerberos Provider.
      example:
        adminPassword: adminPassword
      properties:
        adminPassword:
          description: Specifies the password
          nullable: true
          type: string
          x-order: 0
      required:
      - adminPassword
      type: object
    UnregisterSwiftParams:
      description: Specifies the parameters to unregister a Swift service from Keystone
        server.
      example:
        keystoneCredentials:
          scope: '{}'
          adminCreds: '{}'
        tenantId: tenantId
      properties:
        tenantId:
          description: Specifies the tenant Id who's Swift service will be unregistered.
          nullable: true
          type: string
          x-order: 0
        keystoneCredentials:
          $ref: '#/components/schemas/KeystoneCredentials'
      required:
      - tenantId
      type: object
    UpTieringFileSelectionType:
      description: Data up-tiering file selection type.
      properties:
        type:
          description: Specifies the data up-tiering file selection type.
          enum:
          - LastAccessed
          - LastModified
          type: string
          x-order: 0
      title: Data up-tiering file selection type.
      type: object
    UpdateActiveDirectoryRequest:
      allOf:
      - $ref: '#/components/schemas/CommonActiveDirectoryParams'
      - $ref: '#/components/schemas/UpdateActiveDirectoryRequest_allOf'
      description: Specifies the request to create an Active Directory.
    UpdateArchivalSnapshotConfig:
      description: Specifies the params to perform actions on archival snapshots taken
        by a Protection Group Run.
      example:
        newSnapshotConfig:
        - id: 7
          archivalTargetType: Tape
          retention:
            duration: 1
            unit: Days
            dataLockConfig:
              mode: Compliance
              duration: 1
              unit: Days
        - id: 7
          archivalTargetType: Tape
          retention:
            duration: 1
            unit: Days
            dataLockConfig:
              mode: Compliance
              duration: 1
              unit: Days
        updateExistingSnapshotConfig:
        - deleteSnapshot: true
          resync: true
          enableLegalHold: true
          daysToKeep: 3
          dataLock: Compliance
          id: 9
          archivalTargetType: Tape
        - deleteSnapshot: true
          resync: true
          enableLegalHold: true
          daysToKeep: 3
          dataLock: Compliance
          id: 9
          archivalTargetType: Tape
      properties:
        newSnapshotConfig:
          description: Specifies the new configuration about adding Archival Snapshot
            to existing Protection Group Run.
          items:
            $ref: '#/components/schemas/RunArchivalConfig'
          nullable: true
          type: array
          x-order: 0
        updateExistingSnapshotConfig:
          description: Specifies the configuration about updating an existing Archival
            Snapshot Run.
          items:
            $ref: '#/components/schemas/UpdateExistingArchivalSnapshotConfig'
          nullable: true
          type: array
          x-order: 1
      title: Archival Snapshot Config.
      type: object
    UpdateCertificateByCsrRequest:
      description: Specifies the request to update a certificate.
      example:
        csrId: csrId
        certificate: certificate
      properties:
        certificate:
          description: Specifies the certificate to be imported.
          nullable: true
          type: string
          x-order: 0
        csrId:
          description: Specifies the id of the csr corresponding to the certificate.
          nullable: true
          type: string
          x-order: 1
      required:
      - certificate
      - csrId
      type: object
    UpdateCertificateByCsrResponseBody:
      description: Specifies the response to update a certificate.
      example:
        certificate: certificate
      properties:
        certificate:
          description: Specifies the certificate.
          nullable: true
          type: string
          x-order: 0
      title: Update Certificate Response
      type: object
    UpdateClustersTenantConfigsResponse:
      description: Updated configurations related to tenants for all clusters.
      example:
        clusters:
        - '{}'
        - '{}'
      properties:
        clusters:
          description: The list of clusters updated, with errors if any.
          items:
            allOf:
            - $ref: '#/components/schemas/ClusterTenantConfig'
            - $ref: '#/components/schemas/ClusterTenantConfigUpdateWithErrorError'
            - type: object
              x-nullable: true
            type: object
          type: array
          x-order: 0
      title: UpdateClustersTenantConfigsResponse
      type: object
    UpdateDataTieringState:
      example:
        failedIds:
        - failedIds
        - failedIds
        successfulIds:
        - successfulIds
        - successfulIds
      properties:
        failedIds:
          description: |-
            Specifies a list of data tiering groups ids for which
            updation of state failed.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
        successfulIds:
          description: |-
            Specifies a list of data tiering groups ids for which updation of
            state was successful.
          items:
            type: string
          nullable: true
          type: array
          x-order: 1
      title: |-
        Specifies the summary of the state updation for the multiple data
        tiering groups.
      type: object
    UpdateDataTieringStateRequest:
      description: |-
        Specifies the parameters to perform an action on the data tiering
        groups for the specified Sources.
      example:
        action: Pause
        ids:
        - ids
        - ids
      properties:
        action:
          description: |-
            Specifies the action to be performed on all the specified data
            tiering groups.
            'Pause'  specifies to pause.
            'Resume' specifies to resume.
          enum:
          - Pause
          - Resume
          nullable: true
          type: string
          x-order: 0
        ids:
          description: |-
            Specifies a list of data tiering groups ids for
            which the state should change.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-order: 1
      required:
      - action
      - ids
      title: Update state of the data tiering groups.
      type: object
    UpdateExistingArchivalSnapshotConfig:
      description: Specifies the configuration about updating an existing Archival
        Snapshot Run.
      example:
        deleteSnapshot: true
        resync: true
        enableLegalHold: true
        daysToKeep: 3
        dataLock: Compliance
        id: 9
        archivalTargetType: Tape
      properties:
        id:
          description: Specifies the id of the archival target.
          format: int64
          type: integer
          x-order: 0
        archivalTargetType:
          description: Specifies the snapshot's archival target type from which recovery
            has been performed.
          enum:
          - Tape
          - Cloud
          - Nas
          nullable: true
          type: string
          x-order: 1
        enableLegalHold:
          description: Specifies whether to retain the snapshot for legal purpose.
            If set to true, the snapshots cannot be deleted until the retention period.
            Note that using this option may cause the Cluster to run out of space.
            If set to false explicitly, the hold is removed, and the snapshots will
            expire as specified in the policy of the Protection Group. If this field
            is not specified, there is no change to the hold of the run. This field
            can be set only by a User having Data Security Role.
          nullable: true
          type: boolean
          x-order: 2
        deleteSnapshot:
          description: Specifies whether to delete the snapshot. When this is set
            to true, all other params will be ignored.
          nullable: true
          type: boolean
          x-order: 3
        resync:
          description: Specifies whether to retry the archival operation in case if
            earlier attempt failed. If not specified or set to false, archival is
            not retried.
          nullable: true
          type: boolean
          x-order: 4
        dataLock:
          description: Specifies WORM retention type for the snapshots. When a WORM
            retention type is specified, the snapshots of the Protection Groups using
            this policy will be kept until the maximum of the snapshot retention time.
            During that time, the snapshots cannot be deleted. <br>'Compliance' implies
            WORM retention is set for compliance reason. <br>'Administrative' implies
            WORM retention is set for administrative purposes.
          enum:
          - Compliance
          - Administrative
          nullable: true
          type: string
          x-order: 5
        daysToKeep:
          description: Specifies number of days to retain the snapshots. If positive,
            then this value is added to exisiting expiry time thereby increasing  the
            retention period of the snapshot. Conversly, if this value is negative,
            then value is subtracted to existing expiry time thereby decreasing the
            retention period of the snaphot. Here, by this operation if expiry time
            goes below current time then snapshot is immediately deleted.
          format: int64
          nullable: true
          type: integer
          x-order: 6
      required:
      - archivalTargetType
      - id
      title: Update Archival Snapshot Config.
      type: object
    UpdateExistingReplicationSnapshotConfig:
      description: Specifies the configuration about updating an existing Replication
        Snapshot Run.
      example:
        deleteSnapshot: true
        resync: true
        enableLegalHold: true
        daysToKeep: 2
        dataLock: Compliance
        id: 5
      properties:
        id:
          description: Specifies the cluster id of the replication cluster.
          format: int64
          type: integer
          x-order: 0
        enableLegalHold:
          description: Specifies whether to retain the snapshot for legal purpose.
            If set to true, the snapshots cannot be deleted until the retention period.
            Note that using this option may cause the Cluster to run out of space.
            If set to false explicitly, the hold is removed, and the snapshots will
            expire as specified in the policy of the Protection Group. If this field
            is not specified, there is no change to the hold of the run. This field
            can be set only by a User having Data Security Role.
          nullable: true
          type: boolean
          x-order: 1
        deleteSnapshot:
          description: Specifies whether to delete the snapshot. When this is set
            to true, all other params will be ignored.
          nullable: true
          type: boolean
          x-order: 2
        resync:
          description: Specifies whether to retry the replication operation in case
            if earlier attempt failed. If not specified or set to false, replication
            is not retried.
          nullable: true
          type: boolean
          x-order: 3
        dataLock:
          description: Specifies WORM retention type for the snapshots. When a WORM
            retention type is specified, the snapshots of the Protection Groups using
            this policy will be kept until the maximum of the snapshot retention time.
            During that time, the snapshots cannot be deleted. <br>'Compliance' implies
            WORM retention is set for compliance reason. <br>'Administrative' implies
            WORM retention is set for administrative purposes.
          enum:
          - Compliance
          - Administrative
          nullable: true
          type: string
          x-order: 4
        daysToKeep:
          description: Specifies number of days to retain the snapshots. If positive,
            then this value is added to exisiting expiry time thereby increasing  the
            retention period of the snapshot. Conversly, if this value is negative,
            then value is subtracted to existing expiry time thereby decreasing the
            retention period of the snaphot. Here, by this operation if expiry time
            goes below current time then snapshot is immediately deleted.
          format: int64
          nullable: true
          type: integer
          x-order: 5
      required:
      - id
      title: Update Replication Snapshot Config.
      type: object
    UpdateFeatureFlagParams:
      description: Describes update feature flag request params.
      example:
        reason: reason
        isUiFeature: true
        name: name
        clear: true
        isApproved: true
        timestamp: 0
      properties:
        name:
          description: Name of the feature flag that is to be updated.
          nullable: true
          type: string
          x-order: 0
        isUiFeature:
          description: Bool to specify if it's UI feature flag.
          nullable: true
          type: boolean
          x-order: 1
        isApproved:
          description: New override status for the feature flag.
          nullable: true
          type: boolean
          x-order: 2
        reason:
          description: Reason for updating the feature flag override status.
          nullable: true
          type: string
          x-order: 3
        clear:
          description: Clear any override status for the feature flag.
          nullable: true
          type: boolean
          x-order: 4
        timestamp:
          description: Specifies the timestamp of override operation.
          format: int64
          nullable: true
          type: integer
          x-order: 5
      title: Feature Flag update request.
      type: object
    UpdateFleetEnvInfoRequest:
      description: Specifies the params to add fleet env info.
      properties:
        iamRole:
          description: Specifies the IAM role used to create instances.
          nullable: true
          type: string
          x-order: 0
        region:
          description: Specifies the Region of the CE cluster.
          nullable: true
          type: string
          x-order: 1
        vpcId:
          description: Specifies the VPC of the CE cluster.
          nullable: true
          type: string
          x-order: 2
        subnetId:
          description: Specifies the Subnet of the CE cluster.
          nullable: true
          type: string
          x-order: 3
        securityGroupId:
          description: Specifies the security group Id.
          nullable: true
          type: string
          x-order: 4
      required:
      - iamRole
      - region
      - securityGroupId
      - subnetId
      - vpcId
      title: Update Fleet Env Info Request.
      type: object
    UpdateKeystoneRequest:
      allOf:
      - $ref: '#/components/schemas/Keystone'
      description: Specifies the parameters to update a Keystone configuration.
    UpdateLocalSnapshotConfig:
      description: Specifies the params to perform actions on local snapshot taken
        by a Protection Group Run.
      example:
        deleteSnapshot: true
        enableLegalHold: true
        daysToKeep: 0
        dataLock: Compliance
      properties:
        enableLegalHold:
          description: Specifies whether to retain the snapshot for legal purpose.
            If set to true, the snapshots cannot be deleted until the retention period.
            Note that using this option may cause the Cluster to run out of space.
            If set to false explicitly, the hold is removed, and the snapshots will
            expire as specified in the policy of the Protection Group. If this field
            is not specified, there is no change to the hold of the run. This field
            can be set only by a User having Data Security Role.
          nullable: true
          type: boolean
          x-order: 0
        deleteSnapshot:
          description: Specifies whether to delete the snapshot. When this is set
            to true, all other params will be ignored.
          nullable: true
          type: boolean
          x-order: 1
        dataLock:
          description: Specifies WORM retention type for the snapshots. When a WORM
            retention type is specified, the snapshots of the Protection Groups using
            this policy will be kept until the maximum of the snapshot retention time.
            During that time, the snapshots cannot be deleted. <br>'Compliance' implies
            WORM retention is set for compliance reason. <br>'Administrative' implies
            WORM retention is set for administrative purposes.
          enum:
          - Compliance
          - Administrative
          nullable: true
          type: string
          x-order: 2
        daysToKeep:
          description: Specifies number of days to retain the snapshots. If positive,
            then this value is added to exisiting expiry time thereby increasing  the
            retention period of the snapshot. Conversly, if this value is negative,
            then value is subtracted to existing expiry time thereby decreasing the
            retention period of the snaphot. Here, by this operation if expiry time
            goes below current time then snapshot is immediately deleted.
          format: int64
          nullable: true
          type: integer
          x-order: 3
      title: Local Snapshot Config.
      type: object
    UpdateMFAResult:
      allOf:
      - $ref: '#/components/schemas/SupportTotpKeyInfo'
      - $ref: '#/components/schemas/SupportMfaConfigInfo'
    UpdateMcmSignupRequest:
      allOf:
      - $ref: '#/components/schemas/CommonMcmSignupParams'
      - $ref: '#/components/schemas/UpdateMcmSignupRequest_allOf'
      description: Specifies the request params to update MCM signup request.
      title: Update MCM Signup Request.
    UpdateObjectSnapshotRequest:
      description: Specifies the parameters to update an object snapshot.
      example:
        setLegalHold: true
        dataLockType: Compliance
        expiryTimeSecs: 0
      properties:
        setLegalHold:
          description: Whether to set the snapshot on legal hold. If set to true,
            the run cannot be deleted during the retention period.
          nullable: true
          type: boolean
          x-order: 0
        dataLockType:
          description: Specifies the snapshot data lock type.
          enum:
          - Compliance
          - Administrative
          nullable: true
          type: string
          x-order: 1
        expiryTimeSecs:
          description: Specifies the expiry time of the snapshot in Unix timestamp
            epoch in seconds.
          format: int32
          nullable: true
          type: integer
          x-order: 2
      title: Update Object Snapshot Request.
      type: object
    UpdateOdpRemoteClusterParams:
      description: Specifies the parameters to create an ODP Remote Cluster config.
      properties:
        clusterName:
          description: Specifies the ODP Remote Cluster name.
          nullable: true
          type: string
          x-order: 0
        clusterIdStale:
          description: Specifies if the cluster id is stale and needs to be refreshed.
          nullable: true
          type: boolean
          x-order: 1
        allEndpointsReachable:
          description: Specifies if all endpoints on ODP Remote Cluster are reachable.
          nullable: true
          type: boolean
          x-order: 2
        storageDomainPairs:
          description: Specifies a list of Storage Domain pairs.
          items:
            $ref: '#/components/schemas/StorageDomainPair'
          nullable: true
          type: array
          x-order: 3
        compressionEnabled:
          description: Specifies whether to compress the data transferred to ODP Remote
            Cluster.
          nullable: true
          type: boolean
          x-order: 4
        keyEncryptionKey:
          description: Specifies the key used for encrypting the data transferred
            to ODP Remote Cluster.
          nullable: true
          type: string
          x-order: 5
        usedForReplication:
          description: Specifies if the ODP Remote Cluster is used for replication.
          nullable: true
          type: boolean
          x-order: 6
        tenantId:
          description: Specifies the tenant id.
          nullable: true
          type: string
          x-order: 7
        remoteTenantId:
          description: Specifies the tenant id for ODP Remote Cluster.
          nullable: true
          type: string
          x-order: 8
        interfaceGroupName:
          description: Specifies the interface group name of the ODP Remote Cluster.
          nullable: true
          type: string
          x-order: 9
        useBifrostBrokerChannel:
          description: Specifies whether to use Bifrost Broker channel for remote
            connection.
          nullable: true
          type: boolean
          x-order: 10
      required:
      - clusterName
      type: object
    UpdateProtectedObjectsRequest:
      allOf:
      - $ref: '#/components/schemas/CommonObjectProtectParams'
      - $ref: '#/components/schemas/EnvSpecificObjectProtectionUpdateRequestParams'
      description: Specifies the request to update an object backup configuration.
    UpdateProtectionGroupRunParams:
      description: Specifies the params to update a Protection Group Run.
      example:
        localSnapshotConfig:
          deleteSnapshot: true
          enableLegalHold: true
          daysToKeep: 0
          dataLock: Compliance
        archivalSnapshotConfig:
          newSnapshotConfig:
          - id: 7
            archivalTargetType: Tape
            retention:
              duration: 1
              unit: Days
              dataLockConfig:
                mode: Compliance
                duration: 1
                unit: Days
          - id: 7
            archivalTargetType: Tape
            retention:
              duration: 1
              unit: Days
              dataLockConfig:
                mode: Compliance
                duration: 1
                unit: Days
          updateExistingSnapshotConfig:
          - deleteSnapshot: true
            resync: true
            enableLegalHold: true
            daysToKeep: 3
            dataLock: Compliance
            id: 9
            archivalTargetType: Tape
          - deleteSnapshot: true
            resync: true
            enableLegalHold: true
            daysToKeep: 3
            dataLock: Compliance
            id: 9
            archivalTargetType: Tape
        replicationSnapshotConfig:
          newSnapshotConfig:
          - id: 6
            retention:
              duration: 1
              unit: Days
              dataLockConfig:
                mode: Compliance
                duration: 1
                unit: Days
          - id: 6
            retention:
              duration: 1
              unit: Days
              dataLockConfig:
                mode: Compliance
                duration: 1
                unit: Days
          updateExistingSnapshotConfig:
          - deleteSnapshot: true
            resync: true
            enableLegalHold: true
            daysToKeep: 2
            dataLock: Compliance
            id: 5
          - deleteSnapshot: true
            resync: true
            enableLegalHold: true
            daysToKeep: 2
            dataLock: Compliance
            id: 5
        runId: runId
      properties:
        runId:
          description: Specifies a unique Protection Group Run id.
          nullable: true
          pattern: ^\d+:\d+$
          type: string
          x-order: 0
        localSnapshotConfig:
          $ref: '#/components/schemas/UpdateLocalSnapshotConfig'
        replicationSnapshotConfig:
          $ref: '#/components/schemas/UpdateReplicationSnapshotConfig'
        archivalSnapshotConfig:
          $ref: '#/components/schemas/UpdateArchivalSnapshotConfig'
      required:
      - runId
      title: Update Protection Group Run Request Params.
      type: object
    UpdateProtectionGroupRunRequestBody:
      description: Specifies the params to update a list of Protection Group Runs.
      example:
        updateProtectionGroupRunParams:
        - localSnapshotConfig:
            deleteSnapshot: true
            enableLegalHold: true
            daysToKeep: 0
            dataLock: Compliance
          archivalSnapshotConfig:
            newSnapshotConfig:
            - id: 7
              archivalTargetType: Tape
              retention:
                duration: 1
                unit: Days
                dataLockConfig:
                  mode: Compliance
                  duration: 1
                  unit: Days
            - id: 7
              archivalTargetType: Tape
              retention:
                duration: 1
                unit: Days
                dataLockConfig:
                  mode: Compliance
                  duration: 1
                  unit: Days
            updateExistingSnapshotConfig:
            - deleteSnapshot: true
              resync: true
              enableLegalHold: true
              daysToKeep: 3
              dataLock: Compliance
              id: 9
              archivalTargetType: Tape
            - deleteSnapshot: true
              resync: true
              enableLegalHold: true
              daysToKeep: 3
              dataLock: Compliance
              id: 9
              archivalTargetType: Tape
          replicationSnapshotConfig:
            newSnapshotConfig:
            - id: 6
              retention:
                duration: 1
                unit: Days
                dataLockConfig:
                  mode: Compliance
                  duration: 1
                  unit: Days
            - id: 6
              retention:
                duration: 1
                unit: Days
                dataLockConfig:
                  mode: Compliance
                  duration: 1
                  unit: Days
            updateExistingSnapshotConfig:
            - deleteSnapshot: true
              resync: true
              enableLegalHold: true
              daysToKeep: 2
              dataLock: Compliance
              id: 5
            - deleteSnapshot: true
              resync: true
              enableLegalHold: true
              daysToKeep: 2
              dataLock: Compliance
              id: 5
          runId: runId
        - localSnapshotConfig:
            deleteSnapshot: true
            enableLegalHold: true
            daysToKeep: 0
            dataLock: Compliance
          archivalSnapshotConfig:
            newSnapshotConfig:
            - id: 7
              archivalTargetType: Tape
              retention:
                duration: 1
                unit: Days
                dataLockConfig:
                  mode: Compliance
                  duration: 1
                  unit: Days
            - id: 7
              archivalTargetType: Tape
              retention:
                duration: 1
                unit: Days
                dataLockConfig:
                  mode: Compliance
                  duration: 1
                  unit: Days
            updateExistingSnapshotConfig:
            - deleteSnapshot: true
              resync: true
              enableLegalHold: true
              daysToKeep: 3
              dataLock: Compliance
              id: 9
              archivalTargetType: Tape
            - deleteSnapshot: true
              resync: true
              enableLegalHold: true
              daysToKeep: 3
              dataLock: Compliance
              id: 9
              archivalTargetType: Tape
          replicationSnapshotConfig:
            newSnapshotConfig:
            - id: 6
              retention:
                duration: 1
                unit: Days
                dataLockConfig:
                  mode: Compliance
                  duration: 1
                  unit: Days
            - id: 6
              retention:
                duration: 1
                unit: Days
                dataLockConfig:
                  mode: Compliance
                  duration: 1
                  unit: Days
            updateExistingSnapshotConfig:
            - deleteSnapshot: true
              resync: true
              enableLegalHold: true
              daysToKeep: 2
              dataLock: Compliance
              id: 5
            - deleteSnapshot: true
              resync: true
              enableLegalHold: true
              daysToKeep: 2
              dataLock: Compliance
              id: 5
          runId: runId
      properties:
        updateProtectionGroupRunParams:
          items:
            $ref: '#/components/schemas/UpdateProtectionGroupRunParams'
          minItems: 1
          nullable: true
          type: array
          x-order: 0
      required:
      - updateProtectionGroupRunParams
      title: Update Protection Group Run Request Body.
      type: object
    UpdateProtectionGroupRunResponseBody:
      description: Specifies the response of update Protection Group Runs request.
      example:
        successfulRunIds:
        - successfulRunIds
        - successfulRunIds
        failedRuns:
        - errorMessage: errorMessage
          runId: runId
        - errorMessage: errorMessage
          runId: runId
      properties:
        successfulRunIds:
          description: Specifies a list of ids of Protection Group Runs that are successfully
            updated.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
        failedRuns:
          description: Specifies a list of ids of Protection Group Runs that failed
            to update along with error details.
          items:
            $ref: '#/components/schemas/FailedRunDetails'
          nullable: true
          type: array
          x-order: 1
      title: Update Protection Group Run Response Body.
      type: object
    UpdateProtectionGroupsState:
      example:
        failedProtectionGroups:
        - protectionGroupId: protectionGroupId
          errorMessage: errorMessage
        - protectionGroupId: protectionGroupId
          errorMessage: errorMessage
        successfulProtectionGroupIds:
        - successfulProtectionGroupIds
        - successfulProtectionGroupIds
      properties:
        failedProtectionGroups:
          description: Specifies a list of Protection Group ids along with details
            for which updation of state was failed.
          items:
            $ref: '#/components/schemas/FailedProtectionGroupDetails'
          nullable: true
          type: array
          x-order: 0
        successfulProtectionGroupIds:
          description: Specifies a list of Protection Group ids for which updation
            of state was successful.
          items:
            type: string
          nullable: true
          type: array
          x-order: 1
      title: Specifies the response of updation of state of multiple Protection Groups.
      type: object
    UpdateProtectionGroupsStateRequest:
      description: Specifies the parameters to perform an action of list of Protection
        Groups.
      example:
        action: kPause
        ids:
        - ids
        - ids
      properties:
        action:
          description: Specifies the action to be performed on all the specfied Protection
            Groups. 'kActivate' specifies that Protection Group should be activated.
            'kDeactivate' sepcifies that Protection Group should be deactivated. 'kPause'
            specifies that Protection Group should be paused. 'kResume' specifies
            that Protection Group should be resumed.
          enum:
          - kPause
          - kResume
          nullable: true
          type: string
          x-order: 0
        ids:
          description: Specifies a list of Protection Group ids for which the state
            should change.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-order: 1
      required:
      - action
      - ids
      title: Update state of Protection Groups.
      type: object
    UpdateReplicationSnapshotConfig:
      description: Specifies the params to perform actions on replication snapshots
        taken by a Protection Group Run.
      example:
        newSnapshotConfig:
        - id: 6
          retention:
            duration: 1
            unit: Days
            dataLockConfig:
              mode: Compliance
              duration: 1
              unit: Days
        - id: 6
          retention:
            duration: 1
            unit: Days
            dataLockConfig:
              mode: Compliance
              duration: 1
              unit: Days
        updateExistingSnapshotConfig:
        - deleteSnapshot: true
          resync: true
          enableLegalHold: true
          daysToKeep: 2
          dataLock: Compliance
          id: 5
        - deleteSnapshot: true
          resync: true
          enableLegalHold: true
          daysToKeep: 2
          dataLock: Compliance
          id: 5
      properties:
        newSnapshotConfig:
          description: Specifies the new configuration about adding Replication Snapshot
            to existing Protection Group Run.
          items:
            $ref: '#/components/schemas/RunReplicationConfig'
          nullable: true
          type: array
          x-order: 0
        updateExistingSnapshotConfig:
          description: Specifies the configuration about updating an existing Replication
            Snapshot Run.
          items:
            $ref: '#/components/schemas/UpdateExistingReplicationSnapshotConfig'
          nullable: true
          type: array
          x-order: 1
      title: Replication Snapshot Config.
      type: object
    UpdateRigelConnectionRequest:
      allOf:
      - $ref: '#/components/schemas/CommonCreateOrUpdateRigelConnectionRequest'
      description: Specify the params to update a connection of Rigel.
      title: Update Rigel Connection Request.
    UpdateRigelConnectorRequest:
      allOf:
      - $ref: '#/components/schemas/CommonCreateOrUpdateRigelConnectorRequest'
      description: Specify the params to update a Rigel connector.
      title: Update Rigel connector Request.
    UpdateRoleParams:
      description: Specifies the parameters to update a Role.
      example:
        privileges:
        - privileges
        - privileges
        description: description
      properties:
        description:
          description: Specifies the description message for the Role.
          nullable: true
          type: string
          x-order: 0
        privileges:
          description: Specifies the list of Privileges of the Role.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
          x-order: 1
      type: object
    UpdateSecurityConfigRequest:
      allOf:
      - $ref: '#/components/schemas/SecurityConfig'
      description: Specifies the request params for updating the security config.
      title: Update Security Config Request
    UpdateShareParam:
      description: Specifies the parameter to update a Share.
      example:
        enableFilerAuditLogging: true
        clientSubnetWhitelist:
        - netmaskBits: 5
          smbAccess: kDisabled
          component: component
          s3Access: kDisabled
          ip: ip
          nfsAccess: kDisabled
          nfsSquash: kNone
          description: description
          id: 1
          gateway: gateway
          netmaskIp4: netmaskIp4
        - netmaskBits: 5
          smbAccess: kDisabled
          component: component
          s3Access: kDisabled
          ip: ip
          nfsAccess: kDisabled
          nfsSquash: kNone
          description: description
          id: 1
          gateway: gateway
          netmaskIp4: netmaskIp4
        smbConfig: '{}'
      properties:
        enableFilerAuditLogging:
          description: Specifies if Filer Audit Logging is enabled for this view.
          nullable: true
          type: boolean
          x-order: 0
        smbConfig:
          allOf:
          - $ref: '#/components/schemas/AliasSmbConfig'
          - type: object
            x-nullable: true
          description: SMB config for the alias (share).
          type: object
          x-order: 1
        clientSubnetWhitelist:
          description: List of external client subnet IPs that are allowed to access
            the share.
          items:
            $ref: '#/components/schemas/Subnet'
          nullable: true
          type: array
          x-order: 2
      title: Update Share Parameter.
      type: object
    UpdateStorageDomainParam:
      allOf:
      - $ref: '#/components/schemas/StorageDomain'
      description: Specifies the parameter to update a Storage Domain.
    UpdateTdmSnapshotRequest:
      allOf:
      - $ref: '#/components/schemas/CommonTdmCloneSnapshotParams'
      description: Specifies the request parameters to update a TDM snapshot.
    UpdateTenantBody:
      allOf:
      - $ref: '#/components/schemas/UpdateTenantParams'
      - $ref: '#/components/schemas/CreateTenantParamsOthers_allOf'
      description: Parameters to be specified for updating a tenant.
      title: UpdateTenantBody
    UpdateTenantParams:
      description: Parameters to be specified for updating a tenant.
      example:
        name: name
        description: description
      properties:
        name:
          description: Name of the Tenant.
          nullable: true
          type: string
          x-order: 0
        description:
          description: Description about the tenant
          nullable: true
          type: string
          x-order: 1
      title: UpdateTenantParams
      type: object
    UpdateViewParam:
      allOf:
      - $ref: '#/components/schemas/UpdateViewParam_allOf'
      - $ref: '#/components/schemas/NfsConfig'
      - $ref: '#/components/schemas/SmbConfig'
      - $ref: '#/components/schemas/S3Config'
      - $ref: '#/components/schemas/SwiftConfig'
      description: |-
        Specifies the settings that define a View. Common fields between create,
        edit and response struct.
    UptieringFileAgePolicy:
      description: |-
        Specifies the file's selection rule by file age for up tiering data
        tiering task eg.
        1. select files last accessed 2 weeks ago.
        2. select files last modified 1 month ago.
      properties:
        condition:
          description: Specifies the condition for the file age.
          enum:
          - LastAccessed
          - LastModified
          nullable: true
          type: string
          x-order: 0
        ageMsecs:
          description: Specifies the number of msecs used for file selection.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        numFileAccess:
          description: Specifies number of file access in last ageMsecs.
          format: uint32
          nullable: true
          type: integer
          x-order: 2
      type: object
    UptieringPolicy:
      allOf:
      - $ref: '#/components/schemas/UptieringPolicy_allOf'
      - $ref: '#/components/schemas/CommonTieringPolicy'
      description: Specifies the data uptiering policy.
    UptieringTarget:
      description: |-
        Specifies the target data tiering details for uptier job.
        This is in beta phase. Please use target inside
        CommonDataTieringTaskParams, present directly under data tiering request
        body. If target is present inside CommonDataTieringTaskParams, this
        target will be ignored.
      nullable: true
      properties:
        storageDomainId:
          description: Specifies the Storage Domain ID where the view will be kept.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        downtieredDataLocations:
          description: |-
            Specifies a list of mapping between sources and its corresponding
            viewNames and mountPaths, where the sources were downtiered.
          items:
            $ref: '#/components/schemas/DowntieredDataLocation'
          nullable: true
          type: array
          x-order: 1
      required:
      - storageDomainId
      type: object
      x-nullable: true
    User:
      description: Specifies a user object.
      properties:
        name:
          description: Specifies the name of the user.
          nullable: true
          type: string
          x-order: 0
        sid:
          description: Specifies the sid of the user.
          nullable: true
          type: string
          x-order: 1
        domain:
          description: Specifies the domain of the user.
          nullable: true
          type: string
          x-order: 2
      title: User
      type: object
    UserDbBackupPreference:
      description: Specifies User Database Backup Preference Type.
      properties:
        userDbBackupPreference:
          description: Specifies User Database Backup Preference Type.
          enum:
          - kBackupAllDatabases
          - kBackupAllExceptAAGDatabases
          - kBackupOnlyAAGDatabases
          type: string
          x-order: 0
      title: User Database Backup Preference Type.
      type: object
    UserIdMappingParams:
      description: Specifies how the Unix and Windows users are mapped in an Active
        Directory.
      properties:
        type:
          description: Specifies the type of the mapping.
          enum:
          - Rfc2307
          - Sfu30
          - Centrify
          - CustomAttributes
          - LdapProvider
          - NisProvider
          - Rid
          - Fixed
          type: string
          x-order: 0
        rfc2307TypeParams:
          allOf:
          - $ref: '#/components/schemas/AdRfc2307TypeParams'
          - type: object
            x-nullable: true
          description: Specifies the params for Rfc2307 mapping type mapping.
          nullable: true
          type: object
          x-order: 1
        sfu30TypeParams:
          allOf:
          - $ref: '#/components/schemas/AdSfu30TypeParams'
          - type: object
            x-nullable: true
          description: Specifies the params for Sfu30 mapping type mapping.
          nullable: true
          type: object
          x-order: 2
        ldapProviderTypeParams:
          allOf:
          - $ref: '#/components/schemas/AdLdapProviderTypeParams'
          - type: object
            x-nullable: true
          description: Specifies the params for LdapProvider mapping type mapping.
          nullable: true
          type: object
          x-order: 3
        nisProviderTypeParams:
          allOf:
          - $ref: '#/components/schemas/AdNisProviderTypeParams'
          - type: object
            x-nullable: true
          description: Specifies the params for NisProvider mapping type mapping.
          nullable: true
          type: object
          x-order: 4
        centrifyTypeParams:
          allOf:
          - $ref: '#/components/schemas/AdCentrifyTypeParams'
          - type: object
            x-nullable: true
          description: Specifies the params for Centrify mapping type mapping.
          nullable: true
          type: object
          x-order: 5
        fixedTypeParams:
          allOf:
          - $ref: '#/components/schemas/AdFixedTypeParams'
          - type: object
            x-nullable: true
          description: Specifies the params for Fixed mapping type mapping.
          nullable: true
          type: object
          x-order: 6
        customAttributesTypeParams:
          allOf:
          - $ref: '#/components/schemas/AdCustomAttributesTypeParams'
          - type: object
            x-nullable: true
          description: Specifies the params for CustomAttributes mapping type mapping.
          nullable: true
          type: object
          x-order: 7
      required:
      - type
      type: object
    UserLockReason:
      description: Specifies the reason for locking a user.
      properties:
        type:
          description: Specifies the reason for locking a user.
          enum:
          - NotLocked
          - FailedLoginAttempts
          - LockedByAdmin
          - Inactivity
          - OtherReasons
          type: string
          x-order: 0
      type: object
    UserParams:
      allOf:
      - $ref: '#/components/schemas/CreateUserParams'
      - $ref: '#/components/schemas/UserParams_allOf'
      description: Specifies a User.
    UserSession:
      description: User session response
      example:
        sessionId: sessionId
      properties:
        sessionId:
          description: Specifies the session id
          type: string
          x-order: 0
      type: object
    UserUiConfig:
      description: Specifies the params to update UI config.
      properties:
        preferences:
          description: Specifies the user's preferences for UI customization.
          nullable: true
          type: string
          x-order: 0
        locale:
          description: Specifies the locale.
          nullable: true
          type: string
          x-order: 1
      type: object
    Users:
      description: Specifies a list of users.
      example:
        userName: userName
      properties:
        userName:
          description: Specifies a name of user.
          nullable: true
          type: string
          x-order: 0
      type: object
    UsersDiscoveryParams:
      description: Specifies discovery params for kUser entities. It should only be
        populated when the 'DiscoveryParams.discoverableObjectTypeList' includes 'kUsers'.
      properties:
        discoverUsersWithMailbox:
          description: Specifies if office 365 users with valid mailboxes should be
            discovered or not.
          nullable: true
          type: boolean
          x-order: 0
        discoverUsersWithOnedrive:
          description: Specifies if office 365 users with valid Onedrives should be
            discovered or not.
          nullable: true
          type: boolean
          x-order: 1
      title: Source Discovery parameter for kUser object type
      type: object
    UsersList:
      description: Specifies a list of users.
      example:
        users:
        - null
        - null
      properties:
        users:
          description: Specifies the list of users.
          items:
            $ref: '#/components/schemas/UserParams'
          nullable: true
          type: array
          x-order: 0
      type: object
    VMFilter:
      allOf:
      - $ref: '#/components/schemas/Filter'
      - $ref: '#/components/schemas/VMFilter_allOf'
      description: Specifies the VM filter details.
    VMwareMountVolumesNewTargetConfig:
      description: Specifies the configuration for mounting volumes to a new target.
      properties:
        mountTarget:
          $ref: '#/components/schemas/RecoverTarget'
        bringDisksOnline:
          description: Specifies whether the volumes need to be online within the
            target environment after attaching the disks. For linux VMs, this should
            always be set to true. For Windows, this is optional. If this is set to
            true, VMware tools must be installed on the VM. If this is set to false,
            useExistingAgent and targetCredentials are not needed.
          nullable: true
          type: boolean
          x-order: 1
        useExistingAgent:
          description: Specifies whether this will use an existing agent on the target
            vm or will deploy a new agent. This is required if bringDisksOnline is
            set to true.
          nullable: true
          type: boolean
          x-order: 2
        targetVmCredentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          - type: object
            x-nullable: true
          description: Specifies credentials to access the target VM. This is required
            if bringDisksOnline is set to true and useExistingAgent set to false.
          nullable: true
          type: object
          x-order: 3
      required:
      - bringDisksOnline
      - mountTarget
      title: VMware Mount Volumes New Target Config.
      type: object
    VMwareMountVolumesOriginalTargetConfig:
      description: Specifies the configuration for mounting volumes to the original
        target.
      properties:
        bringDisksOnline:
          description: Specifies whether the volumes need to be online within the
            target environment after attaching the disks. For linux VMs, this should
            always be set to true. For Windows, this is optional. If this is set to
            true, VMware tools must be installed on the VM. If this is set to false,
            useExistingAgent and targetCredentials are not needed.
          nullable: true
          type: boolean
          x-order: 0
        useExistingAgent:
          description: Specifies whether this will use an existing agent on the target
            vm or will deploy a new agent. This is required if bringDisksOnline is
            set to true.
          nullable: true
          type: boolean
          x-order: 1
        targetVmCredentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          - type: object
            x-nullable: true
          description: Specifies credentials to access the target VM. This is required
            if bringDisksOnline is set to true and useExistingAgent set to false.
          nullable: true
          type: object
          x-order: 2
      required:
      - bringDisksOnline
      title: VMware Mount Volumes Original Target Config.
      type: object
    VcdAdditionalParams:
      description: Additional params for VCD protection source.
      example:
        vcenterInfoList:
        - endpoint: endpoint
          name: name
        - endpoint: endpoint
          name: name
      properties:
        vcenterInfoList:
          description: Specifies the list of vCenters associated with this VCD protection
            source.
          items:
            $ref: '#/components/schemas/VcdVcenterInfo'
          type: array
          x-order: 0
      title: VCD Additional Params.
      type: object
    VcdConnectionParams:
      allOf:
      - $ref: '#/components/schemas/VcdConnectionParams_allOf'
      - $ref: '#/components/schemas/Credentials'
      description: Specifies the parameters to connect to a seed node and fetch information
        from its config file.
      title: Parameters to connect and query VMware config file.
    VcdRegistrationParams:
      allOf:
      - $ref: '#/components/schemas/CommonSourceRegistrationParams'
      - $ref: '#/components/schemas/VcdRegistrationParams_allOf'
      description: Specifies parameters to register VMware vCloud director.
      title: Register VMware vCloud director request parameters.
    VcdStorageProfileParams:
      description: Specifies the parameters of a VCD storage profile.
      properties:
        vcdUuid:
          description: Specifies the UUID assigned by the VCD to the storage profile.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the name of the storage profile.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - vcdUuid
      title: VCD Storage Profile Params
      type: object
    VcdVcenterInfo:
      description: Specifies information about a vCetner.
      example:
        endpoint: endpoint
        name: name
      properties:
        name:
          description: Specifies the name of the vCenter.
          nullable: true
          type: string
          x-order: 0
        endpoint:
          description: Specifies the endpoint of the vCenter.
          nullable: true
          type: string
          x-order: 1
      title: VCD vCenter Info
      type: object
    VcenterCredentialInfo:
      allOf:
      - $ref: '#/components/schemas/CommonSourceRegistrationParams'
      - $ref: '#/components/schemas/VcenterCredentialInfo_allOf'
      description: Specifies the credential information for a specific vcenter.
      title: VMware vCenter Credential Info
    VcenterRegistrationParams:
      allOf:
      - $ref: '#/components/schemas/CommonSourceRegistrationParams'
      - $ref: '#/components/schemas/VcenterRegistrationParams_allOf'
      description: Specifies parameters to register VMware vCenter.
      title: Register VMware vCenter request parameters.
    VdcCatalog:
      description: Specifies a VDC Catalog.
      example:
        name: name
        uuid: uuid
      properties:
        uuid:
          description: Specifies the UUID of the catalog.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the name of the catalog.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - uuid
      title: VDC Catalog
      type: object
    VdcCatalogs:
      description: Specifies a list of VDC Catalogs.
      properties:
        catalogs:
          description: Specifies a list of VDC Catalogs.
          items:
            $ref: '#/components/schemas/VdcCatalog'
          type: array
          x-order: 0
      title: VDC Catalogs
      type: object
    VdcObject:
      description: Specifies the details about VMware Virtual datacenter.
      example:
        orgNetworks:
        - name: name
          vCenterUuid: vCenterUuid
          vcdUuid: vcdUuid
        - name: name
          vCenterUuid: vCenterUuid
          vcdUuid: vcdUuid
        catalogs:
        - name: name
          uuid: uuid
        - name: name
          uuid: uuid
      properties:
        catalogs:
          description: Specifies a list of VDC Catalogs.
          items:
            $ref: '#/components/schemas/VdcCatalog'
          type: array
          x-order: 0
        orgNetworks:
          description: Specifies a list of Organization VDC Networks.
          items:
            $ref: '#/components/schemas/OrgVDCNetwork'
          type: array
          x-order: 1
      type: object
    VerifyTotpRequest:
      description: Holds the Totp code to be verified.
      example:
        totpCode: totpCode
      properties:
        totpCode:
          description: Specifies the Totp code.
          nullable: true
          type: string
          x-order: 0
      type: object
    VerifyTotpResult:
      description: Result of verifying totp code for support user.
      example:
        success: true
      properties:
        success:
          description: Specifies whether or not verification of totp code is success.
          type: boolean
          x-order: 0
      type: object
    View:
      allOf:
      - $ref: '#/components/schemas/View_allOf'
      - $ref: '#/components/schemas/UpdateViewParam'
      description: |-
        Specifies settings for defining a storage location (called a View)
        with NFS and SMB mount paths in a Storage Domain (View Box) on the Cohesity
        Cluster.
      title: View.
    ViewAliasInfo:
      description: View Alias Info is returned as part of list views.
      properties:
        aliasName:
          description: Alias name.
          nullable: true
          type: string
          x-order: 0
        viewPath:
          description: View path for the alias.
          nullable: true
          type: string
          x-order: 1
        smbConfig:
          allOf:
          - $ref: '#/components/schemas/AliasSmbConfig'
          - type: object
            x-nullable: true
          description: SMB config for the alias (share).
          type: object
          x-order: 2
        clientSubnetWhitelist:
          description: List of external client subnet IPs that are allowed to access
            the share.
          items:
            $ref: '#/components/schemas/Subnet'
          nullable: true
          type: array
          x-order: 3
      title: View Alias Information.
      type: object
    ViewCategory:
      description: Specifies category for view.
      properties:
        type:
          description: Specifies category for view.
          enum:
          - BackupTarget
          - FileServices
          - ObjectServices
          type: string
          x-order: 0
      title: View Category.
      type: object
    ViewDirectoryQuota:
      description: Specifies a View directory quota.
      example:
        directoryPath: directoryPath
        directoryWalkPending: true
        usageBytes: 0
        quotaPolicy: '{}'
      properties:
        directoryPath:
          description: Specifies the directory path.
          nullable: true
          type: string
          x-order: 0
        quotaPolicy:
          allOf:
          - $ref: '#/components/schemas/ViewDirectoryQuotaPolicy'
          - type: object
            x-nullable: true
          description: Specifies the directory quota policy.
          type: object
          x-order: 1
        usageBytes:
          description: Specifies the directory usage in bytes.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 2
        directoryWalkPending:
          description: Specifies whether directory quota walk is pending.
          nullable: true
          readOnly: true
          type: boolean
          x-order: 3
      required:
      - directoryPath
      - quotaPolicy
      type: object
    ViewDirectoryQuotaPolicy:
      description: Specifies a quota for View directory.
      properties:
        alertLimitBytes:
          description: Specifies if an alert should be triggered when the usage of
            this resource exceeds this quota limit. This limit is optional and is
            specified in bytes. If no value is specified, there is no limit.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        hardLimitBytes:
          description: Specifies an optional quota limit on the usage allowed for
            this resource. This limit is specified in bytes. If no value is specified,
            there is no limit.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    ViewDirectoryQuotas:
      description: Specifies a list of View directory quotas.
      example:
        cookie: 6
        directoryQuotas:
        - directoryPath: directoryPath
          directoryWalkPending: true
          usageBytes: 0
          quotaPolicy: '{}'
        - directoryPath: directoryPath
          directoryWalkPending: true
          usageBytes: 0
          quotaPolicy: '{}'
      properties:
        directoryQuotas:
          description: Specifies the list of View directory quotas.
          items:
            $ref: '#/components/schemas/ViewDirectoryQuota'
          nullable: true
          type: array
          x-order: 0
        cookie:
          description: Specifies the pagination cookie.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    ViewFailover:
      description: Specifies the failover status of a view.
      properties:
        isFailoverReady:
          description: Specifies if the view is ready for failover.
          nullable: true
          type: boolean
          x-order: 0
        remoteViewId:
          description: Specifies the remote view id.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        remoteClusterId:
          description: Specifies the remote cluster id.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        remoteClusterIncarnationId:
          description: Specifies the remote cluster incarnation id.
          format: int64
          nullable: true
          type: integer
          x-order: 3
      type: object
    ViewOptions:
      description: Specifies the parameters related to the Exchange restore of type
        view. All the files related to one database are cloned to a view and the view
        can be used by third party tools like Kroll, etc. to restore exchange databases.
      properties:
        whitelistRestoreViewForAll:
          description: Whether to white-list the Exchange restore view for all the
            IP addresses
          nullable: true
          type: boolean
          x-order: 0
        viewName:
          description: The name of the view.
          nullable: true
          type: string
          x-order: 1
        mountPoint:
          description: The path of the SMB share.
          nullable: true
          type: string
          x-order: 2
      title: View Options
      type: object
    ViewParams:
      description: Specifies the details about a view.
      properties:
        id:
          description: Specifies the ID of the view.
          nullable: true
          type: string
          x-order: 0
        name:
          description: Specifies the name of the view.
          nullable: true
          type: string
          x-order: 1
      title: View
      type: object
    ViewPinningConfig:
      description: Specifies the pinning config of a view.
      properties:
        enabled:
          description: Specifies if view pinning is enabled. If set to true, view
            will be pinned to SSD and view data will be stored there.
          nullable: true
          type: boolean
          x-order: 0
        pinnedTimeSecs:
          description: Specifies the time to pin files after last access.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        lastUpdatedTimestampSecs:
          description: Specifies the timestamp when view pinning config is last updated.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 2
      required:
      - enabled
      type: object
    ViewProtection:
      description: |-
        Specifies information about the Protection Groups that are protecting the
        View.
      properties:
        magnetoEntityId:
          description: Specifies the id of the Protection Source that is using this
            View.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        protectionGroups:
          description: |-
            Array of Protection Group.
            Specifies the Protection Group that are protecting the View.
          items:
            $ref: '#/components/schemas/ProtectionGroupInfo'
          nullable: true
          type: array
          x-order: 1
        inactive:
          description: |-
            Specifies if this View is an inactive View that was created on this
            Remote Cluster to store the Snapshots created by replication.
            This inactive View cannot be NFS or SMB mounted.
          nullable: true
          type: boolean
          x-order: 2
      title: View Protection.
      type: object
    ViewProtectionConfig:
      description: Specifies the View protection config.
      properties:
        protectionGroupType:
          description: Specifies the View protection group type.
          enum:
          - ExistingGroup
          - NewGroup
          nullable: true
          type: string
          x-order: 0
        existingGroupParam:
          allOf:
          - $ref: '#/components/schemas/ExistingGroupParam'
          - type: object
            x-nullable: true
          description: Specifies the parameters used for existing protection group.
          type: object
          x-order: 1
        newGroupParam:
          allOf:
          - $ref: '#/components/schemas/NewGroupParam'
          - type: object
            x-nullable: true
          description: Specifies the parameters used for new protection group.
          type: object
          x-order: 2
      required:
      - protectionGroupType
      type: object
    ViewProtectionGroupObjectParams:
      description: Specifies an object protected by a View Protection Group.
      properties:
        id:
          description: Specifies the ID of the object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the object.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      required:
      - id
      type: object
    ViewProtectionGroupParams:
      description: Specifies the parameters which are specific to view related Protection
        Groups.
      nullable: true
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/ViewProtectionGroupObjectParams'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        replicationParams:
          $ref: '#/components/schemas/ViewProtectionGroupReplicationParams'
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        externallyTriggeredJobParams:
          $ref: '#/components/schemas/ExternallyTriggeredJobParams'
      required:
      - objects
      title: View Protection Group Parameters
      type: object
      x-nullable: true
    ViewProtectionGroupReplicationParams:
      description: Specifies the parameters for view replication.
      nullable: true
      properties:
        viewNameConfigList:
          description: Specifies the list of remote view names for the protected views
            in the Protection Group. By default the names will be the same as the
            name of the protected view.
          items:
            $ref: '#/components/schemas/ReplicatedViewNameConfig'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
      title: Replication Parameters
      type: object
      x-nullable: true
    ViewProtectionType:
      description: Specifies the view protection type.
      properties:
        enum:
          description: Specifies the view protection type.
          enum:
          - Local
          - Archival
          - ReplicationOut
          - ReplicationIn
          type: string
          x-order: 0
      title: View Protection Type
      type: object
    ViewProtocol:
      description: Specifies the protocol options for view.
      properties:
        type:
          description: |-
            Type of protocol.
            Specifies the supported Protocols for the View.
              'NFS' enables protocol access to NFS v3.
              'NFS4' enables protocol access to NFS v4.1.
              'SMB' enables protocol access to SMB.
              'S3' enables protocol access to S3.
              'Swift' enables protocol access to Swift.
          enum:
          - NFS
          - NFS4
          - SMB
          - S3
          - Swift
          type: string
          x-order: 0
        mode:
          description: |-
            Mode of protocol access.
              'ReadOnly'
              'ReadWrite'
          enum:
          - ReadOnly
          - ReadWrite
          type: string
          x-order: 1
      title: Protocol Option
      type: object
    ViewProtocolAccess:
      description: Specifies protocol access for view.
      properties:
        type:
          description: Specifies protocol access for view.
          enum:
          - NFS
          - NFS4
          - SMB
          - S3
          - Swift
          type: string
          x-order: 0
      title: View Protocol Access.
      type: object
    ViewProtocolAccessMode:
      description: Specifies protocol access mode for view.
      properties:
        type:
          description: Specifies protocol access mode for view.
          enum:
          - ReadOnly
          - ReadWrite
          type: string
          x-order: 0
      title: View Protocol Access Mode
      type: object
    ViewSecurityMode:
      description: Specifies Security Mode for view.
      properties:
        type:
          description: Specifies Security Mode for view.
          enum:
          - NativeMode
          - UnifiedMode
          - NtfsMode
          type: string
          x-order: 0
      title: View Security Mode.
      type: object
    ViewSharePermissions:
      description: Specifies share permissions of the view.
      properties:
        superUserSids:
          description: Specifies a list of super user sids.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
        permissions:
          description: Specifies a list of share permissions.
          items:
            $ref: '#/components/schemas/SmbPermission'
          nullable: true
          type: array
          x-order: 1
      type: object
    ViewStats:
      description: Provides statistics about the View.
      properties:
        id:
          description: Specifies the id of the View.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        dataUsageStats:
          allOf:
          - $ref: '#/components/schemas/DataUsageStats'
          - type: object
            x-nullable: true
          description: Specifies the data usage metric of the data stored in this
            View.
          type: object
          x-order: 1
      title: View Stats.
      type: object
    ViewUserQuota:
      description: Specifies a View user quota.
      example:
        unixUid: 0
        usageBytes: 6
        quotaPolicy: '{}'
        sid: sid
      properties:
        sid:
          description: Specifies the user sid.
          nullable: true
          type: string
          x-order: 0
        unixUid:
          description: Specifies the unix UID.
          format: uint32
          nullable: true
          type: integer
          x-order: 1
        quotaPolicy:
          allOf:
          - $ref: '#/components/schemas/QuotaPolicy'
          - type: object
            x-nullable: true
          description: Specifies the user quota policy.
          type: object
          x-order: 2
        usageBytes:
          description: Specifies the user usage in bytes.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 3
      type: object
    ViewUserQuotas:
      description: Specifies a list of View user quotas.
      example:
        cookie: cookie
        userQuotas:
        - unixUid: 0
          usageBytes: 6
          quotaPolicy: '{}'
          sid: sid
        - unixUid: 0
          usageBytes: 6
          quotaPolicy: '{}'
          sid: sid
      properties:
        userQuotas:
          description: Specifies the list of View user quotas.
          items:
            $ref: '#/components/schemas/ViewUserQuota'
          nullable: true
          type: array
          x-order: 0
        cookie:
          description: Specifies the pagination cookie.
          nullable: true
          type: string
          x-order: 1
      type: object
    ViewUserQuotasConfig:
      description: Specifies the View user quotas config.
      example:
        enabled: true
        defaultQuotaPolicy: '{}'
      properties:
        enabled:
          description: Specifies whether user quota is enabled for the View.
          nullable: true
          type: boolean
          x-order: 0
        defaultQuotaPolicy:
          allOf:
          - $ref: '#/components/schemas/QuotaPolicy'
          - type: object
            x-nullable: true
          description: Specifies the default user quota policy.
          type: object
          x-order: 1
      required:
      - enabled
      type: object
    ViewsSummary:
      description: Get the summary of the Views.
      example:
        replicatedOutViews: 1
        replicatedInViews: 5
        storageConsumedBytes: 7
        logicalUsageBytes: 5
        storageConsumedBytesTimestampUsec: 9
        protectedViews: 6
        logicalUsageBytesTimestampUsec: 2
        totalViews: 0
      properties:
        totalViews:
          description: Specifies the number of all the views.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        protectedViews:
          description: Specifies the number of all protected views.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        replicatedOutViews:
          description: Specifies the number of all the views that are replicated out
            to remote clusters.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        replicatedInViews:
          description: Specifies the number of all the views that are relicated from
            remote clusters.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        logicalUsageBytes:
          description: Specifies the logical usage of all the views in bytes.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        logicalUsageBytesTimestampUsec:
          description: Specifies the timestamp in micro seconds when 'logicalUsageBytes'
            was calculated.
          format: int64
          nullable: true
          type: integer
          x-order: 5
        storageConsumedBytes:
          description: Specifies the storage consumed of all the views in bytes.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        storageConsumedBytesTimestampUsec:
          description: Specifies the timestamp in micro seconds when 'storageConsumedBytes'
            was calculated.
          format: int64
          nullable: true
          type: integer
          x-order: 7
      type: object
    VlanParams:
      description: Specifies VLAN params associated with the backup/restore operation.
      properties:
        vlanId:
          description: If this is set, then the Cohesity host name or the IP address
            associated with this VLAN is used for mounting Cohesity's view on the
            remote host.
          format: int32
          nullable: true
          type: integer
          x-order: 0
        disableVlan:
          description: If this is set to true, then even if VLANs are configured on
            the system, the partition VIPs will be used for the restore.
          nullable: true
          type: boolean
          x-order: 1
        interfaceName:
          description: Interface group to use for backup/restore. If this is not specified,
            primary interface group for the cluster will be used.
          nullable: true
          type: string
          x-order: 2
      title: Vlan Params for backup/restore operation.
      type: object
    VmwareAdditionalParams:
      description: Additional params for VMware protection source.
      example:
        vcdParams:
          vcenterInfoList:
          - endpoint: endpoint
            name: name
          - endpoint: endpoint
            name: name
      properties:
        vcdParams:
          $ref: '#/components/schemas/VcdAdditionalParams'
      title: VMware Additional Params.
      type: object
    VmwareCdpObject:
      allOf:
      - $ref: '#/components/schemas/CdpObjectInfo'
      - $ref: '#/components/schemas/VmwareCdpObject_allOf'
      description: Specifies the VMware specific CDP object details.
    VmwareConnectionParams:
      description: Specifies the parameters to connect to a seed node and fetch information
        from its config file.
      properties:
        type:
          description: Specifies the VMware Source type.
          enum:
          - kVCenter
          - kStandaloneHost
          - kvCloudDirector
          nullable: true
          type: string
          x-order: 0
        vcdParams:
          $ref: '#/components/schemas/VcdConnectionParams'
      required:
      - type
      title: Parameters to connect and query VMware config file.
      type: object
    VmwareDiskControllerType:
      description: Vmware disk controller type.
      properties:
        vmwareDiskControllerType:
          description: Specifies VMware disk controller type.
          enum:
          - kScsi
          - kIde
          - kSata
          type: string
          x-order: 0
      title: VMware disk controller type.
      type: object
    VmwareObjectAction:
      description: Actions on VMware objects.
      properties:
        vmwareObjectAction:
          description: Specifies the actions on vmware objects.
          enum:
          - enableAppProtection
          - disableAppProtection
          - upgradeCdpIoFilter
          - uninstallCdpIoFilter
          type: string
          x-order: 0
      title: Actions on VMware objects.
      type: object
    VmwareObjectActionParams:
      description: Specifies the parameters to perform an action on VMware Objects.
      properties:
        action:
          description: Specifies the action on the Object.
          enum:
          - enableAppProtection
          - disableAppProtection
          - upgradeCdpIoFilter
          - uninstallCdpIoFilter
          nullable: true
          type: string
          x-order: 0
        enableAppProtectionParams:
          $ref: '#/components/schemas/VmwareObjectEnableAppProtectionParams'
      required:
      - action
      title: Actions on VMware Objects
      type: object
    VmwareObjectEnableAppProtectionParams:
      description: Specifies the parameters to enable app protection on VMware.
      properties:
        appType:
          description: Specifies the app from which protection must be enabled.
          enum:
          - kSQL
          - kOracle
          - kAD
          - kExchange
          nullable: true
          type: string
          x-order: 0
        enableSqlProtectionParams:
          $ref: '#/components/schemas/VmwareObjectEnableSqlProtectionParams'
      required:
      - appType
      title: VMware app protection parameters.
      type: object
    VmwareObjectEnableSqlProtectionParams:
      description: Specifies the parameters for enabling SQL protection.
      properties:
        useInstalledAgent:
          description: Specifies if agent is already installed.
          nullable: true
          type: boolean
          x-order: 0
        credentials:
          $ref: '#/components/schemas/VmwareSQLCredentialParams'
      title: Enable SQL protection parameters.
      type: object
    VmwareObjectEntityParams:
      description: Object details for Vmware.
      properties:
        type:
          description: VMware Object type.
          enum:
          - kVCenter
          - kStandaloneHost
          - kvCloudDirector
          - kFolder
          - kDatacenter
          - kComputeResource
          - kClusterComputeResource
          - kResourcePool
          - kDatastore
          - kHostSystem
          - kVirtualMachine
          - kVirtualApp
          - kStoragePod
          - kNetwork
          - kDistributedVirtualPortgroup
          - kTagCategory
          - kTag
          - kOpaqueNetwork
          - kOrganization
          - kVirtualDatacenter
          - kCatalog
          - kOrgMetadata
          - kStoragePolicy
          - kVirtualAppTemplate
          nullable: true
          type: string
          x-order: 0
        cdpInfo:
          $ref: '#/components/schemas/VmwareCdpObject'
        isTemplate:
          description: Specifies if the object is a VM template.
          nullable: true
          type: boolean
          x-order: 2
      type: object
    VmwareObjectProtectionRequest:
      allOf:
      - $ref: '#/components/schemas/VmwareObjectProtectionRequest_allOf'
      - $ref: '#/components/schemas/CommonVmwareObjectParams'
      description: Specifies the VMware object level settings for object protection.
    VmwareObjectProtectionRequestParams:
      allOf:
      - $ref: '#/components/schemas/VmwareObjectProtectionRequestParams_allOf'
      - $ref: '#/components/schemas/CommonVmwareProtectionParams'
      description: Specifies the parameters which are specific to VMware object protection.
    VmwareObjectProtectionResponse:
      allOf:
      - $ref: '#/components/schemas/CommonVmwareObjectParams'
      - $ref: '#/components/schemas/VmwareObjectProtectionResponse_allOf'
      description: Specifies the input for a protection object in the VMware environment.
    VmwareObjectProtectionResponseParams:
      allOf:
      - $ref: '#/components/schemas/VmwareObjectProtectionResponse'
      - $ref: '#/components/schemas/CommonVmwareProtectionParams'
      description: Specifies the parameters which are specific to VMware object protection.
    VmwareObjectProtectionUpdateRequestParams:
      allOf:
      - $ref: '#/components/schemas/CommonVmwareProtectionParams'
      - $ref: '#/components/schemas/CommonVmwareObjectParams'
      - $ref: '#/components/schemas/VmwareObjectProtectionUpdateRequestParams_allOf'
      description: Specifies the parameters which are specific to VMware object protection.
    VmwareProtectionGroupExtraParams:
      description: Specifies the extra parameters which are specific to VMware object
        protection Group.
      properties:
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 0
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        excludeObjectIds:
          description: Specifies the list of IDs of the objects to not be protected
            in this backup. This field only applies if provided object id is non leaf
            entity such as Tag or a folder. This can be used to ignore specific objects
            under a parent object which has been included for protection.
          items:
            format: int64
            nullable: true
            type: integer
          type: array
          x-order: 2
        vmTagIds:
          description: 'Array of Array of VM Tag Ids that Specify VMs to Protect.
            Optionally specify a list of VMs to protect by listing Protection Source
            ids of VM Tags in this two dimensional array. Using this two dimensional
            array of Tag ids, the Cluster generates a list of VMs to protect which
            are derived from intersections of the inner arrays and union of the outer
            array, as shown by the following example. To protect only ''Eng'' VMs
            in the East and all the VMs in the West, specify the following tag id
            array: [ [1101, 2221], [3031] ], where 1101 is the ''Eng'' VM Tag id,
            2221 is the ''East'' VM Tag id and 3031 is the ''West'' VM Tag id. The
            inner array [1101, 2221] produces a list of VMs that are both tagged with
            ''Eng'' and ''East'' (an intersection). The outer array combines the list
            from the inner array with list of VMs tagged with ''West'' (a union).
            The list of resulting VMs are protected by this Protection Group.'
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
          x-order: 3
        excludeVmTagIds:
          description: 'Array of Arrays of VM Tag Ids that Specify VMs to Exclude.
            Optionally specify a list of VMs to exclude from protecting by listing
            Protection Source ids of VM Tags in this two dimensional array. Using
            this two dimensional array of Tag ids, the Cluster generates a list of
            VMs to exclude from protecting, which are derived from intersections of
            the inner arrays and union of the outer array, as shown by the following
            example. For example a Datacenter is selected to be protected but you
            want to exclude all the ''Former Employees'' VMs in the East and West
            but keep all the VMs for ''Former Employees'' in the South which are also
            stored in this Datacenter, by specifying the following tag id array: [
            [1000, 2221], [1000, 3031] ], where 1000 is the ''Former Employee'' VM
            Tag id, 2221 is the ''East'' VM Tag id and 3031 is the ''West'' VM Tag
            id. The first inner array [1000, 2221] produces a list of VMs that are
            both tagged with ''Former Employees'' and ''East'' (an intersection).
            The second inner array [1000, 3031] produces a list of VMs that are both
            tagged with ''Former Employees'' and ''West'' (an intersection). The outer
            array combines the list of VMs from the two inner arrays. The list of
            resulting VMs are excluded from being protected this Job.'
          items:
            items:
              format: int64
              type: integer
            type: array
          type: array
          x-order: 4
        excludeFilters:
          description: Specifies the list of exclusion filters applied during the
            group creation or edit. These exclusion filters can be wildcard supported
            strings or regular expressions. Objects satisfying these filters will
            be excluded during backup and also auto protected objects will be ignored
            if filtered by any of the filters.
          items:
            $ref: '#/components/schemas/VMFilter'
          nullable: true
          type: array
          x-order: 5
        leverageStorageSnapshots:
          description: Whether to leverage the storage array based snapshots for this
            backup. To leverage storage snapshots, the storage array has to be registered
            as a source. If storage based snapshots can not be taken, backup will
            fallback to the default backup method.
          nullable: true
          type: boolean
          x-order: 6
        leverageHyperflexSnapshots:
          description: Whether to leverage the hyperflex based snapshots for this
            backup. To leverage hyperflex snapshots, it has to first be registered.
            If hyperflex based snapshots cannot be taken, backup will fallback to
            the default backup method.
          nullable: true
          type: boolean
          x-order: 7
        leverageNutanixSnapshots:
          description: Whether to leverage the nutanix based snapshots for this backup.
            To leverage nutanix snapshots, it has to first be registered. If nutanix
            based snapshots cannot be taken, backup will fallback to the default backup
            method.
          nullable: true
          type: boolean
          x-order: 8
        cloudMigration:
          description: Specifies whether or not to move the workload to the cloud.
          nullable: true
          type: boolean
          x-order: 9
      type: object
    VmwareProtectionGroupObjectParams:
      allOf:
      - $ref: '#/components/schemas/VmwareProtectionGroupObjectParams_allOf'
      - $ref: '#/components/schemas/CommonVmwareObjectParams'
      description: Specifies the input for a protection object in the VMware environment.
    VmwareProtectionGroupParams:
      allOf:
      - $ref: '#/components/schemas/VmwareProtectionGroupParams_allOf'
      - $ref: '#/components/schemas/CommonVmwareProtectionParams'
      - $ref: '#/components/schemas/VmwareProtectionGroupExtraParams'
      - $ref: '#/components/schemas/CommonCdpParams'
      description: Specifies the parameters which are specific to VMware related Protection
        Groups.
    VmwareProtectionGroupStandbyResourceParams:
      allOf:
      - $ref: '#/components/schemas/CommonStandbyResourceParams'
      - $ref: '#/components/schemas/VmwareProtectionGroupStandbyResourceParams_allOf'
      description: VMware protection group standby resource params which will be used
        to create standby VM entity for backup entity.
    VmwareRecoverDisksOriginalSourceConfig:
      description: Specifies the configuration for restoring a disk to the original
        VM from which the snapshot was taken.
      properties:
        disks:
          description: Specifies the disks to be recovered and the location to which
            they will be recovered.
          items:
            $ref: '#/components/schemas/VmwareRecoverOriginalSourceDiskParams'
          minItems: 1
          type: array
          x-order: 0
      required:
      - disks
      type: object
    VmwareRecoverDisksTargetSourceConfig:
      description: Specifies the configuration for restoring disks to a different
        VM than the one from which the snapshot was taken.
      properties:
        sourceId:
          description: Specifies the source ID of the VM to which the disks will be
            restored.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        disks:
          description: Specifies the disks to be recovered and the location to which
            they will be recovered.
          items:
            $ref: '#/components/schemas/VmwareRecoverTargetSourceDiskParams'
          minItems: 1
          type: array
          x-order: 1
      required:
      - disks
      - sourceId
      type: object
    VmwareRecoverFilesNewTargetConfig:
      description: Specifies the configuration for recovering files and folders to
        a new target.
      properties:
        targetVm:
          allOf:
          - $ref: '#/components/schemas/RecoverTarget'
          - type: object
            x-nullable: true
          description: Specifies the target VM to recover files and folders to.
          nullable: true
          type: object
          x-order: 0
        recoverMethod:
          description: Specifies the method to recover files and folders.
          enum:
          - AutoDeploy
          - UseExistingAgent
          - UseHypervisorApis
          type: string
          x-order: 1
        targetVmCredentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          - type: object
            x-nullable: true
          description: Specifies the credentials for the target VM. This is mandatory
            if the recoverMethod is AutoDeploy or UseHypervisorApis.
          nullable: true
          type: object
          x-order: 2
        absolutePath:
          description: Specifies the path location to recover files to.
          nullable: true
          type: string
          x-order: 3
      required:
      - absolutePath
      - recoverMethod
      - targetVm
      title: Vmware Recover Files New Target Config.
      type: object
    VmwareRecoverFilesOriginalTargetConfig:
      description: Specifies the configuration for recovering files and folders to
        the original target.
      properties:
        recoverMethod:
          description: Specifies the method to recover files and folders.
          enum:
          - AutoDeploy
          - UseExistingAgent
          - UseHypervisorApis
          type: string
          x-order: 0
        targetVmCredentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          - type: object
            x-nullable: true
          description: Specifies the credentials for the target VM. This is mandatory
            if the recoverMethod is AutoDeploy or UseHypervisorApis.
          nullable: true
          type: object
          x-order: 1
        recoverToOriginalPath:
          description: Specifies whether to recover files and folders to the original
            path location. If false, alternatePath must be specified.
          nullable: true
          type: boolean
          x-order: 2
        alternatePath:
          description: Specifies the alternate path location to recover files to.
          nullable: true
          type: string
          x-order: 3
      required:
      - recoverMethod
      - recoverToOriginalPath
      title: Vmware Recover Files Original Target Config.
      type: object
    VmwareRecoverOriginalSourceDiskParams:
      description: Specifies disk specific parameters for performing a disk recovery.
      properties:
        diskUuid:
          description: Specifies the UUID of the source disk being recovered.
          nullable: true
          type: string
          x-order: 0
        overwriteOriginalDisk:
          description: Specifies whether or not to overwrite the original disk. If
            this is set to true, then datastoreId should not be specified. Otherwise,
            datastoreId must be specified.
          nullable: true
          type: boolean
          x-order: 1
        datastoreId:
          description: Specifies the ID of the datastore on which the specified disk
            will be spun up.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      required:
      - diskUuid
      type: object
    VmwareRecoverTargetSourceDiskParams:
      description: Specifies disk specific parameters for performing a disk recovery.
      properties:
        diskUuid:
          description: Specifies the UUID of the source disk being recovered.
          nullable: true
          type: string
          x-order: 0
        datastoreId:
          description: Specifies the ID of the datastore on which the specified disk
            will be spun up.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      required:
      - datastoreId
      - diskUuid
      type: object
    VmwareSQLCredentialParams:
      description: Specifies the credentials to connect to SQL.
      properties:
        username:
          description: ' username for when agent is not installed'
          nullable: true
          type: string
          x-order: 0
        password:
          description: ' password for when agent is not installed'
          nullable: true
          type: string
          x-order: 1
      title: Credentials to connect to SQL.
      type: object
    VmwareSourceRegistrationParams:
      description: Specifies the paramaters to register a VMware source.
      properties:
        type:
          description: Specifies the VMware Source type.
          enum:
          - kVCenter
          - kStandaloneHost
          - kvCloudDirector
          nullable: true
          type: string
          x-order: 0
        vCenterParams:
          $ref: '#/components/schemas/VcenterRegistrationParams'
        esxiParams:
          $ref: '#/components/schemas/EsxiRegistrationParams'
        vcdParams:
          $ref: '#/components/schemas/VcdRegistrationParams'
      required:
      - type
      type: object
    VmwareSourceType:
      description: VMware Source Type
      properties:
        vmwareSourceType:
          description: Specifies the VMware Source types.
          enum:
          - kVCenter
          - kStandaloneHost
          - kvCloudDirector
          type: string
          x-order: 0
      title: VMware Source Type
      type: object
    VmwareStandbyObject:
      allOf:
      - $ref: '#/components/schemas/StandbyObject'
      - $ref: '#/components/schemas/VmwareStandbyObject_allOf'
      description: Specifies the VMware specific standby object details.
    VmwareTargetParamsForMountVolume:
      description: Specifies the parameters for a VMware mount volume target.
      properties:
        mountToOriginalTarget:
          description: Specifies whether to mount to the original target. If true,
            originalTargetConfig must be specified. If false, newTargetConfig must
            be specified.
          nullable: true
          type: boolean
          x-order: 0
        originalTargetConfig:
          allOf:
          - $ref: '#/components/schemas/VMwareMountVolumesOriginalTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the configuration for mounting to the original target.
          nullable: true
          type: object
          x-order: 1
        newTargetConfig:
          allOf:
          - $ref: '#/components/schemas/VMwareMountVolumesNewTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the configuration for mounting to a new target.
          nullable: true
          type: object
          x-order: 2
        readOnlyMount:
          description: Specifies whether to perform a read-only mount. Default is
            false.
          nullable: true
          type: boolean
          x-order: 3
        volumeNames:
          description: Specifies the names of volumes that need to be mounted. If
            this is not specified then all volumes that are part of the source VM
            will be mounted on the target VM.
          items:
            type: string
          nullable: true
          type: array
          x-order: 4
        mountedVolumeMapping:
          description: Specifies the mapping of original volumes and mounted volumes
          items:
            $ref: '#/components/schemas/MountedVolumeMapping'
          nullable: true
          readOnly: true
          type: array
          x-order: 5
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered. If this
            is not specified, then the VLAN settings will be automatically selected
            from one of the below options: a. If VLANs are configured on Cohesity,
            then the VLAN host/VIP will be automatically based on the client''s (e.g.
            ESXI host) IP address. b. If VLANs are not configured on Cohesity, then
            the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 6
      required:
      - mountToOriginalTarget
      title: VMware Target Params.
      type: object
    VmwareTargetParamsForRecoverDisk:
      description: Specifies the parameters for a VMware recovery target.
      properties:
        originalSourceConfig:
          $ref: '#/components/schemas/VmwareRecoverDisksOriginalSourceConfig'
        targetSourceConfig:
          $ref: '#/components/schemas/VmwareRecoverDisksTargetSourceConfig'
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered. If this
            is not specified, then the VLAN settings will be automatically selected
            from one of the below options: a. If VLANs are configured on Cohesity,
            then the VLAN host/VIP will be automatically based on the client''s (e.g.
            ESXI host) IP address. b. If VLANs are not configured on Cohesity, then
            the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 2
        powerOffVms:
          description: Specifies whether or not to power off VMs before performing
            the recovery.
          nullable: true
          type: boolean
          x-order: 3
        powerOnVms:
          description: Specifies whether or not to power on VMs after performing the
            recovery.
          nullable: true
          type: boolean
          x-order: 4
        continueOnError:
          description: Specifies whether or not to continue performing the recovery
            in the event that an error is encountered.
          nullable: true
          type: boolean
          x-order: 5
      title: VMware Target Params.
      type: object
    VmwareTargetParamsForRecoverFileAndFolder:
      description: Specifies the parameters for a VMware recovery target.
      properties:
        recoverToOriginalTarget:
          description: Specifies whether to recover to the original target. If true,
            originalTargetConfig must be specified. If false, newTargetConfig must
            be specified.
          nullable: true
          type: boolean
          x-order: 0
        originalTargetConfig:
          allOf:
          - $ref: '#/components/schemas/VmwareRecoverFilesOriginalTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the configuration for recovering to the original
            target.
          nullable: true
          type: object
          x-order: 1
        newTargetConfig:
          allOf:
          - $ref: '#/components/schemas/VmwareRecoverFilesNewTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the configuration for recovering to a new target.
          nullable: true
          type: object
          x-order: 2
        overwriteExisting:
          description: Specifies whether to overwrite the existing files. Default
            is true.
          nullable: true
          type: boolean
          x-order: 3
        preserveAttributes:
          description: Specifies whether to preserve original attributes. Default
            is true.
          nullable: true
          type: boolean
          x-order: 4
        continueOnError:
          description: Specifies whether to continue recovering other files if one
            of files or folders failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 5
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered files
            and folders. If this is not specified, then the VLAN settings will be
            automatically selected from one of the below options: a. If VLANs are
            configured on Cohesity, then the VLAN host/VIP will be automatically based
            on the client''s (e.g. ESXI host) IP address. b. If VLANs are not configured
            on Cohesity, then the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 6
      required:
      - recoverToOriginalTarget
      title: VMware Target Params for Recover File And Folder
      type: object
    VmwareTargetParamsForRecoverVApp:
      description: Specifies the parameters for a VMware recovery target.
      properties:
        renameRecoveredVmsParams:
          allOf:
          - $ref: '#/components/schemas/RecoveredOrClonedVmsRenameConfig'
          - type: object
            x-nullable: true
          description: Specifies params to rename the VMs that are recovered. If not
            specified, the original names of the VMs are preserved.
          nullable: true
          type: object
          x-order: 0
        renameRecoveredVAppsParams:
          allOf:
          - $ref: '#/components/schemas/RecoveredOrClonedVmsRenameConfig'
          - type: object
            x-nullable: true
          description: Specifies params to rename the vApps that are recovered. If
            not specified, the original names of the vApps are preserved.
          nullable: true
          type: object
          x-order: 1
        recoveryTargetConfig:
          allOf:
          - $ref: '#/components/schemas/VmwareVAppRecoveryTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the recovery target configuration if recovery has
            to be done to a different location which is different from original source
            or to original Source with different configuration. If not specified,
            then the recovery of the vms will be performed to original location with
            all configuration parameters retained.
          nullable: true
          type: object
          x-order: 2
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered. If this
            is not specified, then the VLAN settings will be automatically selected
            from one of the below options: a. If VLANs are configured on Cohesity,
            then the VLAN host/VIP will be automatically based on the client''s (e.g.
            ESXI host) IP address. b. If VLANs are not configured on Cohesity, then
            the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 3
        powerOnVms:
          description: Specifies whether to power on vms after recovery. If not specified,
            or false, recovered vms will be in powered off state.
          nullable: true
          type: boolean
          x-order: 4
        continueOnError:
          description: Specifies whether to continue recovering other vms if one of
            vms failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 5
        recoveryProcessType:
          description: Specifies type of Recovery Process to be used. InstantRecovery/CopyRecovery
            etc... Default value is InstantRecovery.
          enum:
          - InstantRecovery
          - CopyRecovery
          type: string
          x-order: 6
        attemptDifferentialRestore:
          description: Specifies whether to attempt differential restore.
          nullable: true
          type: boolean
          x-order: 7
      title: VMware Target Params.
      type: object
    VmwareTargetParamsForRecoverVAppTemplate:
      description: Specifies the parameters for a VMware recovery target when recovering
        a vApp Template.
      properties:
        renameRecoveredVmsParams:
          allOf:
          - $ref: '#/components/schemas/RecoveredOrClonedVmsRenameConfig'
          - type: object
            x-nullable: true
          description: Specifies params to rename the VMs that are recovered. If not
            specified, the original names of the VMs are preserved.
          nullable: true
          type: object
          x-order: 0
        renameRecoveredVAppTemplateParams:
          allOf:
          - $ref: '#/components/schemas/RecoveredOrClonedVmsRenameConfig'
          - type: object
            x-nullable: true
          description: Specifies params to rename the vApps templates that are recovered.
            If not specified, the original names of the vApp templates are preserved.
          nullable: true
          type: object
          x-order: 1
        recoveryTargetConfig:
          allOf:
          - $ref: '#/components/schemas/VmwareVAppTemplateRecoveryTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the recovery target configuration if recovery has
            to be done to a different location which is different from original source
            or to original Source with different configuration. If not specified,
            then the recovery of the vApp templates will be performed to original
            location with all configuration parameters retained.
          nullable: true
          type: object
          x-order: 2
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered. If this
            is not specified, then the VLAN settings will be automatically selected
            from one of the below options: a. If VLANs are configured on Cohesity,
            then the VLAN host/VIP will be automatically based on the client''s (e.g.
            ESXI host) IP address. b. If VLANs are not configured on Cohesity, then
            the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other vms if one of
            vms failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
        recoveryProcessType:
          description: Specifies type of Recovery Process to be used. InstantRecovery/CopyRecovery
            etc... Default value is InstantRecovery.
          enum:
          - InstantRecovery
          - CopyRecovery
          type: string
          x-order: 5
        attemptDifferentialRestore:
          description: Specifies whether to attempt differential restore.
          nullable: true
          type: boolean
          x-order: 6
      title: VMware Target Params.
      type: object
    VmwareTargetParamsForRecoverVM:
      description: Specifies the parameters for a VMware recovery target.
      properties:
        renameRecoveredVmsParams:
          allOf:
          - $ref: '#/components/schemas/RecoveredOrClonedVmsRenameConfig'
          - type: object
            x-nullable: true
          description: Specifies params to rename the VMs that are recovered. If not
            specified, the original names of the VMs are preserved.
          nullable: true
          type: object
          x-order: 0
        recoveryTargetConfig:
          allOf:
          - $ref: '#/components/schemas/VmwareVmRecoveryTargetConfig'
          - type: object
            x-nullable: true
          description: Specifies the recovery target configuration if recovery has
            to be done to a different location which is different from original source
            or to original Source with different configuration. If not specified,
            then the recovery of the vms will be performed to original location with
            all configuration parameters retained.
          nullable: true
          type: object
          x-order: 1
        vlanConfig:
          allOf:
          - $ref: '#/components/schemas/RecoveryVlanConfig'
          - type: object
            x-nullable: true
          description: 'Specifies VLAN Params associated with the recovered. If this
            is not specified, then the VLAN settings will be automatically selected
            from one of the below options: a. If VLANs are configured on Cohesity,
            then the VLAN host/VIP will be automatically based on the client''s (e.g.
            ESXI host) IP address. b. If VLANs are not configured on Cohesity, then
            the partition hostname or VIPs will be used for Recovery.'
          nullable: true
          type: object
          x-order: 2
        powerOnVms:
          description: Specifies whether to power on vms after recovery. If not specified,
            or false, recovered vms will be in powered off state.
          nullable: true
          type: boolean
          x-order: 3
        continueOnError:
          description: Specifies whether to continue recovering other vms if one of
            vms failed to recover. Default value is false.
          nullable: true
          type: boolean
          x-order: 4
        recoveryProcessType:
          description: Specifies type of Recovery Process to be used. InstantRecovery/CopyRecovery
            etc... Default value is InstantRecovery.
          enum:
          - InstantRecovery
          - CopyRecovery
          type: string
          x-order: 5
        attemptDifferentialRestore:
          description: Specifies whether to attempt differential restore.
          nullable: true
          type: boolean
          x-order: 6
        overwriteExistingVm:
          description: Specifies whether to overwrite the VM at the target location.
            This is a data destructive operation and if this is selected, the original
            VM may no longer be accessible. This option is only applicable if renameRecoveredVmParams
            is null and powerOffAndRenameExistingVm is false. This option is not supported
            for vApp or vApp template recoveries. Default value is false.
          nullable: true
          type: boolean
          x-order: 7
        powerOffAndRenameExistingVm:
          description: Specifies whether to power off and mark the VM at the target
            location as deprecated. As an example, <vm_name> will be renamed to deprecated::<vm_name>,
            and a new VM with the name <vm_name> in place of the now deprecated VM.
            Both deprecated::<vm_name> and <vm_name> will exist on the primary, but
            the corresponding protection job will only backup <vm_name> on its next
            run. Only applicable if renameRecoveredVmParams is null and overwriteExistingVm
            is false. This option is not supported for vApp or vApp template recoveries.
            Default value is false.
          nullable: true
          type: boolean
          x-order: 8
      title: VMware Target Params.
      type: object
    VmwareThrottlingParams:
      description: Specifies throttling params.
      properties:
        newTaskLatencyThresholdMsecs:
          description: If the latency of a datastore is above this value, then a new
            backup task that uses the datastore won't be started.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        activeTaskLatencyThresholdMsecs:
          description: If the latency of a datastore is above this value, then an
            existing backup task that uses the datastore will start getting throttled.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        maxConcurrentStreams:
          description: If this value is > 0 and the number of streams concurrently
            active on a datastore is equal to it, then any further requests to access
            the datastore would be denied until the number of active streams reduces.
            This applies for all the datastores in the specified host.
          format: int32
          nullable: true
          type: integer
          x-order: 2
      title: Throttling Params.
      type: object
    VmwareVAppRecoveryTargetConfig:
      description: Specifies the target object parameters to recover VMware vApps.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or an existing Source Target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVAppNewSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the VMs will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVAppOriginalSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if VM's are being recovered
            to Original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Vmware VMs Recovery Target Config.
      type: object
    VmwareVAppTemplateRecoveryTargetConfig:
      description: Specifies the target object parameters to recover VMware vApp templates.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or an existing Source Target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVAppTemplateNewSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the vApp templates will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVAppOriginalSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if vApp templates are being
            recovered to Original Source. If not specified, all the configuration
            parameters will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Vmware vApp Template Recovery Target Config.
      type: object
    VmwareVmRecoveryTargetConfig:
      description: Specifies the target object parameters to recover VMware vms.
      properties:
        recoverToNewSource:
          description: Specifies the parameter whether the recovery should be performed
            to a new or an existing Source Target.
          type: boolean
          x-order: 0
        newSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVmNewSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the new destination Source configuration parameters
            where the VMs will be recovered. This is mandatory if recoverToNewSource
            is set to true.
          nullable: true
          type: object
          x-order: 1
        originalSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVmOriginalSourceConfig'
          - type: object
            x-nullable: true
          description: Specifies the Source configuration if VM's are being recovered
            to Original Source. If not specified, all the configuration parameters
            will be retained.
          nullable: true
          type: object
          x-order: 2
      required:
      - recoverToNewSource
      title: Vmware VMs Recovery Target Config.
      type: object
    VolumeInfo:
      description: Specifies info of logical volume (filesystem).
      properties:
        name:
          description: Specifies the volume name.
          nullable: true
          type: string
          x-order: 0
        isSupported:
          description: Specifies if this volume is supported.
          nullable: true
          type: boolean
          x-order: 1
        volumeType:
          description: Specifies the volume type.
          enum:
          - SimpleVolume
          - LVM
          - LDM
          nullable: true
          type: string
          x-order: 2
        filesystemType:
          description: Specifies the filesystem type.
          nullable: true
          type: string
          x-order: 3
        filesystemUuid:
          description: Specifies the filesystem uuid.
          nullable: true
          type: string
          x-order: 4
        volumeGuid:
          description: Specifies the volume guid.
          nullable: true
          type: string
          x-order: 5
        volumeSizeInBytes:
          description: Specifies volume size in bytes.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        logicalVolumeInfo:
          allOf:
          - $ref: '#/components/schemas/LogicalVolumeInfo'
          - type: object
            x-nullable: true
          description: Specifies the logical volume info. This fields is for 'LVM'
            and 'LDM' volume type only.
          type: object
          x-order: 7
      type: object
    WebSocketRequestStatus:
      description: Describes the status of a websocket request, equivalent of HTTP
        codes.
      properties:
        enum:
          description: Specifies the Request status
          enum:
          - Running
          - Complete
          - Error
          type: string
          x-order: 0
      title: WebSocket Request Status
      type: object
    WeekDays:
      description: Week Days type.
      properties:
        weekDays:
          description: Specifies Week Days type.
          enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          type: string
          x-order: 0
      title: Week Days type.
      type: object
    WeekSchedule:
      description: Specifies settings that define a schedule for a Protection Group
        runs to start on certain days of week.
      properties:
        dayOfWeek:
          description: 'Specifies a list of days of the week when to start Protection
            Group Runs. <br> Example: To run a Protection Group on every Monday and
            Tuesday, set the schedule with following values: <br>  unit: ''Weeks''
            <br>  dayOfWeek: [''Monday'',''Tuesday'']'
          items:
            enum:
            - Sunday
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            type: string
          nullable: true
          type: array
          x-order: 0
      required:
      - dayOfWeek
      title: Week Schedule
      type: object
    WormRetention:
      description: Worm Retention type.
      properties:
        wormRetention:
          description: Specifies Worm Retention type.
          enum:
          - Compliance
          - Administrative
          type: string
          x-order: 0
      title: Worm Retention type.
      type: object
    AWSTier_allOf:
      properties:
        tierType:
          description: Specifies the AWS tier types.
          enum:
          - kAmazonS3Standard
          - kAmazonS3StandardIA
          - kAmazonS3OneZoneIA
          - kAmazonS3IntelligentTiering
          - kAmazonS3Glacier
          - kAmazonS3GlacierDeepArchive
          nullable: true
          type: string
          x-order: 0
      required:
      - tierType
      type: object
    ActionObjectLevelResponse_allOf:
      properties:
        resumeStatus:
          $ref: '#/components/schemas/ResumeActionObjectLevelResponse'
        pauseStatus:
          $ref: '#/components/schemas/PauseActionObjectLevelResponse'
        runNowStatus:
          $ref: '#/components/schemas/RunNowActionObjectLevelResponse'
        unProtectStatus:
          $ref: '#/components/schemas/UnprotectActionObjectLevelResponse'
      type: object
    ActiveDirectory_allOf:
      properties:
        idMappingParams:
          allOf:
          - $ref: '#/components/schemas/IdMappingParams'
          - type: object
            x-nullable: true
          description: Specifies the params of the user id mapping info of an Active
            Directory.
          nullable: true
          type: object
          x-order: 0
        domainName:
          description: Specifies the domain name of the Active Directory.
          nullable: true
          type: string
          x-order: 1
        centrifyZones:
          description: Specifies a list of centrify zones.
          items:
            $ref: '#/components/schemas/CentrifyZones'
          nullable: true
          type: array
          x-order: 2
        domainControllers:
          description: A list of domain names with a list of it's domain controllers.
          items:
            $ref: '#/components/schemas/DomainControllers'
          nullable: true
          type: array
          x-order: 3
        securityPrincipals:
          description: Specifies a list of security principals.
          items:
            $ref: '#/components/schemas/SecurityPrincipal'
          nullable: true
          type: array
          x-order: 4
        permissions:
          description: Specifies the list of tenants that have permissions for this
            Active Directory.
          items:
            $ref: '#/components/schemas/Tenant'
          nullable: true
          type: array
          x-order: 5
        transitiveAdTrustLevelLimit:
          description: Specifies level of transitive Active Directory trust domains
            to be used.
          format: int32
          nullable: true
          type: integer
          x-order: 6
      type: object
    AdCentrifyTypeParams_allOf:
      properties:
        fallbackOption:
          allOf:
          - $ref: '#/components/schemas/FallbackUserIdMappingParams'
          - type: object
            x-nullable: true
          description: Specifies a fallback user id mapping param in case the primary
            config does not work.
          nullable: true
          type: object
          x-order: 0
      required:
      - fallbackOption
      type: object
    AntivirusServiceGroup_allOf:
      properties:
        id:
          description: Specifies the Antivirus Service group id.
          format: int64
          nullable: true
          type: integer
          x-order: 0
      type: object
    ArchivalAwsExternalTargetParams_allOf:
      properties:
        awsS3StandardParams:
          $ref: '#/components/schemas/AwsS3StandardParams'
        awsS3StandardIAParams:
          $ref: '#/components/schemas/AwsS3StandardIAParams'
        awsS3OneZoneIAParams:
          $ref: '#/components/schemas/AwsS3OneZoneIAParams'
        awsS3IntelligentParams:
          $ref: '#/components/schemas/AwsS3IntelligentParams'
        awsS3GlacierParams:
          $ref: '#/components/schemas/AwsS3GlacierParams'
        awsS3GlacierDeepArchiveParams:
          $ref: '#/components/schemas/AwsS3GlacierDeepArchiveParams'
        awsGlacierParams:
          $ref: '#/components/schemas/AwsGlacierParams'
      type: object
    ArchivalAzureExternalTargetParams_allOf:
      properties:
        coolBlobParams:
          $ref: '#/components/schemas/AzureCoolBlobParams'
        hotBlobParams:
          $ref: '#/components/schemas/AzureHotBlobParams'
      type: object
    ArchivalConfig_allOf:
      properties:
        targetId:
          description: Specifies the Archival target to copy the Snapshots to.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        targetName:
          description: Specifies the Archival target name where Snapshots are copied.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        targetType:
          description: Specifies the Archival target type where Snapshots are copied.
          enum:
          - Tape
          - Cloud
          - Nas
          nullable: true
          readOnly: true
          type: string
          x-order: 2
        tierSettings:
          $ref: '#/components/schemas/TierLevelSettings'
        extendedRetention:
          description: Specifies additional retention policies that should be applied
            to the archived backup. Archived backup snapshot will be retained up to
            a time that is the maximum of all retention policies that are applicable
            to it.
          items:
            $ref: '#/components/schemas/ExtendedRetentionPolicy'
          nullable: true
          type: array
          x-order: 4
      required:
      - targetId
      type: object
    ArchivalExternalTargetParams_allOf:
      properties:
        azureParams:
          $ref: '#/components/schemas/ArchivalAzureExternalTargetParams'
        gcpParams:
          $ref: '#/components/schemas/ArchivalGcpExternalTargetParams'
        awsParams:
          $ref: '#/components/schemas/ArchivalAwsExternalTargetParams'
        oracleParams:
          $ref: '#/components/schemas/ArchivalOracleExternalTargetParams'
        nasParams:
          $ref: '#/components/schemas/ArchivalNasExternalTargetParams'
        qstarTapeParams:
          $ref: '#/components/schemas/ArchivalQstarTapeExternalTargetParams'
        s3CompParams:
          $ref: '#/components/schemas/ArchivalS3CompExternalTargetParams'
      type: object
    ArchivalGcpExternalTargetParams_allOf:
      properties:
        storageClass:
          description: Specifies the GCP External Target storage class.
          enum:
          - GCPStandard
          - GCPColdline
          - GCPNearline
          nullable: true
          type: string
          x-order: 0
        sourceSideDeduplication:
          description: Specifies the Source Side Deduplication setting for the GCP
            external target
          nullable: true
          type: boolean
          x-order: 1
        isIncrementalArchivalEnabled:
          description: Specifies if Incremental Archival setting is enabled or not.
          nullable: true
          type: boolean
          x-order: 2
        isForeverIncrementalArchivalEnabled:
          description: Specifies if Forever Incremental Archival setting is enabled
            or not.
          nullable: true
          type: boolean
          x-order: 3
      required:
      - storageClass
      type: object
    ArchivalOracleExternalTargetParams_allOf:
      properties:
        storageClass:
          description: Specifies the Oracle External Target storage class.
          enum:
          - OracleObjectStorage
          - OracleArchiveStorage
          nullable: true
          type: string
          x-order: 0
        sourceSideDeduplication:
          description: Specifies the Source Side Deduplication setting for the Oracle
            external target
          nullable: true
          type: boolean
          x-order: 1
        isIncrementalArchivalEnabled:
          description: Specifies if Incremental Archival setting is enabled or not.
          nullable: true
          type: boolean
          x-order: 2
        isForeverIncrementalArchivalEnabled:
          description: Specifies if Forever Incremental Archival setting is enabled
            or not.
          nullable: true
          type: boolean
          x-order: 3
      required:
      - storageClass
      type: object
    ArchivalS3CompExternalTargetParams_allOf:
      properties:
        sourceSideDeduplication:
          description: Specifies the Source Side Deduplication setting for the S3
            Compatible external target
          nullable: true
          type: boolean
          x-order: 0
        isIncrementalArchivalEnabled:
          description: Specifies if Incremental Archival setting is enabled or not.
          nullable: true
          type: boolean
          x-order: 1
        isForeverIncrementalArchivalEnabled:
          description: Specifies if Forever Incremental Archival setting is enabled
            or not.
          nullable: true
          type: boolean
          x-order: 2
      type: object
    ArchivalTargetProgressInfo_allOf:
      properties:
        objects:
          description: Specifies progress for objects.
          items:
            $ref: '#/components/schemas/ObjectProgressInfo'
          nullable: true
          type: array
          x-order: 0
      type: object
    ArchivalTargetResult_allOf:
      properties:
        runType:
          description: Type of Protection Group run. 'kRegular' indicates an incremental
            (CBT) backup. Incremental backups utilizing CBT (if supported) are captured
            of the target protection objects. The first run of a kRegular schedule
            captures all the blocks. 'kFull' indicates a full (no CBT) backup. A complete
            backup (all blocks) of the target protection objects are always captured
            and Change Block Tracking (CBT) is not utilized. 'kLog' indicates a Database
            Log backup. Capture the database transaction logs to allow rolling back
            to a specific point in time. 'kSystem' indicates system volume backup.
            It produces an image for bare metal recovery.
          enum:
          - kRegular
          - kFull
          - kLog
          - kSystem
          - kHydrateCDP
          nullable: true
          type: string
          x-order: 0
        isSlaViolated:
          description: Indicated if SLA has been violated for this run.
          nullable: true
          type: boolean
          x-order: 1
        snapshotId:
          description: Snapshot id for a successful snapshot. This field will not
            be set if the archival Run fails to take the snapshot.
          nullable: true
          type: string
          x-order: 2
        startTimeUsecs:
          description: Specifies the start time of replication run in Unix epoch Timestamp(in
            microseconds) for an archival target.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        endTimeUsecs:
          description: Specifies the end time of replication run in Unix epoch Timestamp(in
            microseconds) for an archival target.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        queuedTimeUsecs:
          description: Specifies the time when the archival is queued for schedule
            in Unix epoch Timestamp(in microseconds) for a target.
          format: int64
          nullable: true
          type: integer
          x-order: 5
        isIncremental:
          description: Whether this is an incremental archive. If set to true, this
            is an incremental archive, otherwise this is a full archive.
          nullable: true
          type: boolean
          x-order: 6
        isForeverIncremental:
          description: Whether this is forever incremental or not
          nullable: true
          type: boolean
          x-order: 7
        status:
          description: Status of the replication run for an archival target. 'Running'
            indicates that the run is still running. 'Canceled' indicates that the
            run has been canceled. 'Canceling' indicates that the run is in the process
            of being canceled. 'Paused' indicates that the ongoing run has been paused.
            'Failed' indicates that the run has failed. 'Missed' indicates that the
            run was unable to take place at the scheduled time because the previous
            run was still happening. 'Succeeded' indicates that the run has finished
            successfully. 'SucceededWithWarning' indicates that the run finished successfully,
            but there were some warning messages.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          - Paused
          - Pausing
          - Resuming
          nullable: true
          type: string
          x-order: 8
        message:
          description: Message about the archival run.
          nullable: true
          type: string
          x-order: 9
        progressTaskId:
          description: Progress monitor task id for archival.
          nullable: true
          type: string
          x-order: 10
        indexingTaskId:
          description: Progress monitor task for indexing.
          nullable: true
          type: string
          x-order: 11
        successfulObjectsCount:
          description: Specifies the count of objects for which backup was successful.
          format: int64
          nullable: true
          type: integer
          x-order: 12
        failedObjectsCount:
          description: Specifies the count of objects for which backup failed.
          format: int64
          nullable: true
          type: integer
          x-order: 13
        cancelledObjectsCount:
          description: Specifies the count of objects for which backup was cancelled.
          format: int64
          nullable: true
          type: integer
          x-order: 14
        successfulAppObjectsCount:
          description: Specifies the count of app objects for which backup was successful.
          format: int32
          nullable: true
          type: integer
          x-order: 15
        failedAppObjectsCount:
          description: Specifies the count of app objects for which backup failed.
          format: int32
          nullable: true
          type: integer
          x-order: 16
        cancelledAppObjectsCount:
          description: Specifies the count of app objects for which backup was cancelled.
          format: int32
          nullable: true
          type: integer
          x-order: 17
        stats:
          $ref: '#/components/schemas/ArchivalDataStats'
        isManuallyDeleted:
          description: Specifies whether the snapshot is deleted manually.
          nullable: true
          type: boolean
          x-order: 19
        expiryTimeUsecs:
          description: Specifies the expiry time of attempt in Unix epoch Timestamp
            (in microseconds).
          format: int64
          nullable: true
          type: integer
          x-order: 20
        dataLockConstraints:
          $ref: '#/components/schemas/DataLockConstraints'
        onLegalHold:
          description: Specifies the legal hold status for a archival target.
          nullable: true
          type: boolean
          x-order: 22
      type: object
    ArchivalTargetTierInfo_allOf:
      properties:
        currentTierType:
          description: Specifies the type of the current tier where the snapshot resides.
            This will be specified if the run is a CAD run.
          enum:
          - kAmazonS3Standard
          - kAmazonS3StandardIA
          - kAmazonS3OneZoneIA
          - kAmazonS3IntelligentTiering
          - kAmazonS3Glacier
          - kAmazonS3GlacierDeepArchive
          - kAzureTierHot
          - kAzureTierCool
          - kAzureTierArchive
          - kGoogleStandard
          - kGoogleRegional
          - kGoogleMultiRegional
          - kGoogleNearline
          - kGoogleColdline
          - kOracleTierStandard
          - kOracleTierArchive
          nullable: true
          type: string
          x-order: 0
      type: object
    AwsAuthenticationMethodsParams_allOf:
      properties:
        iAmUserParams:
          $ref: '#/components/schemas/AwsIAmUserParams'
        iAmRoleParams:
          $ref: '#/components/schemas/AwsIAmRoleParams'
      type: object
    AwsGlacierParams_allOf:
      properties:
        awsCloudStandardParams:
          $ref: '#/components/schemas/AwsCloudStandardParams'
        awsCloudGovParams:
          $ref: '#/components/schemas/AwsCloudGovParams'
        awsCloudC2SParams:
          $ref: '#/components/schemas/AwsCloudC2SParams'
      type: object
    AwsObjectProtectionRequestParams_allOf:
      properties:
        nativeProtectionTypeParams:
          $ref: '#/components/schemas/AwsNativeObjectProtectionParams'
        snapshotManagerProtectionTypeParams:
          $ref: '#/components/schemas/AwsSnapshotManagerObjectProtectionParams'
      type: object
    AwsS3GlacierDeepArchiveParams_allOf:
      properties:
        awsCloudStandardParams:
          $ref: '#/components/schemas/AwsCloudStandardParams'
        awsCloudGovParams:
          $ref: '#/components/schemas/AwsCloudGovParams'
      type: object
    AzureTier_allOf:
      properties:
        tierType:
          description: Specifies the Azure tier types.
          enum:
          - kAzureTierHot
          - kAzureTierCool
          - kAzureTierArchive
          nullable: true
          type: string
          x-order: 0
      required:
      - tierType
      type: object
    CassandraConnectionParams_sshPasswordCredentials:
      description: SSH username + password required for reading configuration file
        and for scp backup.Either 'sshPasswordCredentials' or 'sshPrivateKeyCredentials'
        are required.
      nullable: true
      properties:
        password:
          description: SSH password.
          type: string
          x-order: 0
        username:
          description: SSH username.
          type: string
          x-order: 1
      required:
      - password
      - username
      type: object
      x-order: 5
    CassandraConnectionParams_sshPrivateKeyCredentials:
      description: SSH  userID + privateKey required for reading configuration file
        and for scp backup.
      nullable: true
      properties:
        passphrase:
          description: Passphrase for the private key.
          type: string
          x-order: 0
        privateKey:
          description: The private key.
          type: string
          x-order: 1
        userId:
          description: userId for PrivateKey credentials.
          type: string
          x-order: 2
      required:
      - privateKey
      - userId
      type: object
      x-order: 6
    CassandraIndexedObject_allOf:
      properties:
        type:
          description: Specifies the Cassandra Object type.
          enum:
          - CassandraKeyspaces
          - CassandraTables
          nullable: true
          type: string
          x-order: 0
        id:
          description: Specifies the id of the indexed object.
          nullable: true
          type: string
          x-order: 1
      type: object
    CassandraProtectionGroupParams_allOf:
      nullable: true
      properties:
        dataCenters:
          description: Only the specified data centers will be considered while taking
            backup. The keyspaces having replication strategy 'Simple' can be backed
            up only if all the datacenters for the cassandra cluster are specified.
            For any keyspace having replication strategy as 'Network', all the associated
            data centers should be specified.
          items:
            type: string
          type: array
          x-order: 0
      type: object
      x-cohesity-discriminator-value: kCassandra
      x-nullable: true
    CassandraSourceRegistrationParams_allOf_jmxCredentials:
      description: JMX Credentials for this cluster. These should be the same for
        all the nodes
      nullable: true
      properties:
        password:
          description: JMX password.
          type: string
          x-order: 0
        username:
          description: JMX username.
          type: string
          x-order: 1
      required:
      - password
      - username
      type: object
      x-order: 0
    CassandraSourceRegistrationParams_allOf_cassandraCredentials:
      description: Cassandra Credentials for this cluster.
      nullable: true
      properties:
        password:
          description: Cassandra password.
          type: string
          x-order: 0
        username:
          description: Cassandra username.
          type: string
          x-order: 1
      required:
      - password
      - username
      type: object
      x-order: 1
    CassandraSourceRegistrationParams_allOf:
      properties:
        jmxCredentials:
          $ref: '#/components/schemas/CassandraSourceRegistrationParams_allOf_jmxCredentials'
        cassandraCredentials:
          $ref: '#/components/schemas/CassandraSourceRegistrationParams_allOf_cassandraCredentials'
        dataCenterNames:
          description: Data centers for this cluster.
          items:
            type: string
          type: array
          x-order: 2
        kerberosPrincipal:
          description: Principal for the kerberos connection. (This is required only
            if your Cassandra has Kerberos authentication. Please refer to the user
            guide.)
          nullable: true
          type: string
          x-order: 3
        dseSolrInfo:
          $ref: '#/components/schemas/DSESolrInfo'
      type: object
    CassandraSourceRegistrationUpdateParams_jmxCredentials:
      description: JMX Credentials for this cluster. These should be the same for
        all the nodes
      nullable: true
      properties:
        password:
          description: JMX password.
          type: string
          x-order: 0
        username:
          description: JMX username.
          type: string
          x-order: 1
      required:
      - password
      - username
      type: object
      x-order: 7
    CassandraSourceRegistrationUpdateParams_cassandraCredentials:
      description: Cassandra Credentials for this cluster.
      nullable: true
      properties:
        password:
          description: Cassandra password.
          type: string
          x-order: 0
        username:
          description: Cassandra username.
          type: string
          x-order: 1
      required:
      - password
      - username
      type: object
      x-order: 8
    CloudSpinConfig_allOf:
      properties:
        target:
          $ref: '#/components/schemas/CloudSpinTarget'
      required:
      - target
      type: object
    CloudSpinTargetResult_allOf:
      properties:
        startTimeUsecs:
          description: Specifies the start time of Cloud Spin in Unix epoch Timestamp(in
            microseconds) for a target.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        endTimeUsecs:
          description: Specifies the end time of Cloud Spin in Unix epoch Timestamp(in
            microseconds) for a target.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        status:
          description: Status of the Cloud Spin for a target. 'Running' indicates
            that the run is still running. 'Canceled' indicates that the run has been
            canceled. 'Canceling' indicates that the run is in the process of being
            canceled. 'Paused' indicates that the ongoing run has been paused. 'Failed'
            indicates that the run has failed. 'Missed' indicates that the run was
            unable to take place at the scheduled time because the previous run was
            still happening. 'Succeeded' indicates that the run has finished successfully.
            'SucceededWithWarning' indicates that the run finished successfully, but
            there were some warning messages.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          - Paused
          - Pausing
          - Resuming
          nullable: true
          type: string
          x-order: 2
        message:
          description: Message about the Cloud Spin run.
          nullable: true
          type: string
          x-order: 3
        stats:
          $ref: '#/components/schemas/CloudSpinDataStats'
        isManuallyDeleted:
          description: Specifies whether the snapshot is deleted manually.
          nullable: true
          type: boolean
          x-order: 5
        expiryTimeUsecs:
          description: Specifies the expiry time of attempt in Unix epoch Timestamp
            (in microseconds) for an object.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        cloudspinTaskId:
          description: Task ID for a CloudSpin protection run.
          nullable: true
          type: string
          x-order: 7
        progressTaskId:
          description: Progress monitor task id for Cloud Spin run.
          nullable: true
          type: string
          x-order: 8
        dataLockConstraints:
          $ref: '#/components/schemas/DataLockConstraints'
        onLegalHold:
          description: Specifies the legal hold status for a cloud spin target.
          nullable: true
          type: boolean
          x-order: 10
      type: object
    CommonArchivalAwsExternalTargetParams_allOf:
      properties:
        storageClass:
          description: Specifies the AWS External Target storage class.
          enum:
          - AmazonS3Standard
          - AmazonS3StandardIA
          - AmazonS3OneZoneIA
          - AmazonS3IntelligentTiering
          - AmazonS3Glacier
          - AmazonS3GlacierDeepArchive
          - AmazonGlacier
          nullable: true
          type: string
          x-order: 0
        sourceSideDeduplication:
          description: Specifies the Source Side Deduplication setting for the AWS
            external target
          nullable: true
          type: boolean
          x-order: 1
        isIncrementalArchivalEnabled:
          description: Specifies if Incremental Archival setting is enabled or not.
          nullable: true
          type: boolean
          x-order: 2
        isForeverIncrementalArchivalEnabled:
          description: Specifies if Forever Incremental Archival setting is enabled
            or not.
          nullable: true
          type: boolean
          x-order: 3
      required:
      - storageClass
      type: object
    CommonArchivalAzureExternalTargetParams_allOf:
      properties:
        storageClass:
          description: Specifies the Azure External Target storage class.
          enum:
          - AzureArchiveBlob
          - AzureCoolBlob
          - AzureHotBlob
          nullable: true
          type: string
          x-order: 0
        sourceSideDeduplication:
          description: Specifies the Source Side Deduplication setting for the Azure
            external target
          nullable: true
          type: boolean
          x-order: 1
        isIncrementalArchivalEnabled:
          description: Specifies if Incremental Archival setting is enabled or not.
          nullable: true
          type: boolean
          x-order: 2
        isForeverIncrementalArchivalEnabled:
          description: Specifies if Forever Incremental Archival setting is enabled
            or not.
          nullable: true
          type: boolean
          x-order: 3
      required:
      - storageClass
      type: object
    CommonCsrResponseParams_allOf:
      properties:
        id:
          description: Specifies the id of the CSR.
          nullable: true
          type: string
          x-order: 0
        publicKey:
          description: Specifies the public key generated for this CSR.
          nullable: true
          type: string
          x-order: 1
        csr:
          description: Specifies the CSR generated for the service.
          nullable: true
          type: string
          x-order: 2
      type: object
    CommonIndexedObjectParams_allOf:
      properties:
        name:
          description: Specifies the name of the object.
          nullable: true
          type: string
          x-order: 0
        path:
          description: Specifies the path of the object.
          nullable: true
          type: string
          x-order: 1
        protectionGroupId:
          description: '"Specifies the protection group id which contains this object."'
          nullable: true
          type: string
          x-order: 2
        protectionGroupName:
          description: '"Specifies the protection group name which contains this object."'
          nullable: true
          type: string
          x-order: 3
        storageDomainId:
          description: |-
            "Specifies the Storage Domain id where the backup data of Object
            is present."
          format: int64
          nullable: true
          type: integer
          x-order: 4
        sourceInfo:
          allOf:
          - $ref: '#/components/schemas/ObjectSummary'
          - type: object
            x-nullable: true
          description: Specifies the Source Object information.
          type: object
          x-order: 5
      type: object
    CommonMssqlNativeObjectProtectionParams_allOf:
      properties:
        numStreams:
          description: Specifies the number of streams to be used.
          format: int32
          nullable: true
          type: integer
          x-order: 0
        withClause:
          description: Specifies the WithClause to be used.
          nullable: true
          type: string
          x-order: 1
      type: object
    CommonObjectSummary_allOf:
      properties:
        protectionStats:
          description: Specifies the count and size of protected and unprotected objects
            for the size.
          items:
            $ref: '#/components/schemas/ObjectProtectionStatsSummary'
          nullable: true
          type: array
          x-order: 0
        permissions:
          $ref: '#/components/schemas/PermissionInfo'
      type: object
    CommonPreBackupScriptParams_allOf:
      properties:
        continueOnError:
          description: Specifies if the script needs to continue even if there is
            an occurence of an error. If this flag is set to true, then Backup Run
            will start even if the pre backup script fails. If not specified or false,
            then backup run will not start when script fails.
          nullable: true
          type: boolean
          x-order: 0
      type: object
    CommonSourceRegistrationParams_allOf:
      properties:
        endpoint:
          description: Specifies the endpoint IPaddress, URL or hostname of the host.
          type: string
          x-order: 0
        description:
          description: Specifies the description of the source being registered.
          nullable: true
          type: string
          x-order: 1
      required:
      - endpoint
      type: object
    CommonTdmCloneTaskRequestParams_allOf:
      properties:
        snapshotId:
          description: Specifies the snapshot ID, from which the clone is to be created.
          nullable: true
          type: string
          x-order: 0
        targetHostId:
          description: Specifies the ID of the host, where the clone needs to be created.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        pointInTimeUsecs:
          description: Specifies the timestamp (in usecs from epoch) for creating
            the clone at a point in time in the past.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      required:
      - snapshotId
      - targetHostId
      type: object
    CommonTdmCloneTaskResponseParams_allOf:
      properties:
        snapshot:
          allOf:
          - $ref: '#/components/schemas/ObjectSnapshot'
          description: Specifies the details of the snapshot used for cloning.
          nullable: true
          type: object
          x-order: 0
        parent:
          allOf:
          - $ref: '#/components/schemas/ObjectSummary'
          description: Specifies the details of the parent object of the clone.
          nullable: true
          type: object
          x-order: 1
        target:
          allOf:
          - $ref: '#/components/schemas/ObjectSummary'
          description: Specifies the details of the target, where the clone is created.
          nullable: true
          type: object
          x-order: 2
        view:
          allOf:
          - $ref: '#/components/schemas/ViewParams'
          description: Specifies the details of the view, which is used for the clone.
          nullable: true
          type: object
          x-order: 3
      type: object
    CommonTieringAwsExternalTargetParams_allOf:
      properties:
        storageClass:
          description: Specifies the AWS External Target storage class.
          enum:
          - AmazonS3Standard
          - AmazonS3StandardIA
          nullable: true
          type: string
          x-order: 0
      required:
      - storageClass
      type: object
    CommonTieringAzureExternalTargetParams_allOf:
      properties:
        storageClass:
          description: Specifies the Azure External Target class.
          enum:
          - AzureHotBlob
          nullable: true
          type: string
          x-order: 0
      required:
      - storageClass
      type: object
    CouchbaseIndexedObject_allOf:
      properties:
        type:
          description: Specifies the Couchbase Object Type. For Couchbase this is
            alywas set to Bucket.
          enum:
          - CouchbaseBuckets
          nullable: true
          type: string
          x-order: 0
        id:
          description: Specifies the id of the indexed object.
          nullable: true
          type: string
          x-order: 1
      type: object
    CouchbaseSourceRegistrationParams_allOf:
      properties:
        seeds:
          description: Specifies the IP Addresses or hostnames of the Couchbase cluster
            seed nodes.
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
        isSslRequired:
          description: Set to true if connection to couchbase has to be using SSL.
          nullable: true
          type: boolean
          x-order: 1
        httpPort:
          description: HTTP direct or HTTP SSL port.
          format: int32
          nullable: true
          type: integer
          x-order: 2
        carrierPort:
          description: Carrier direct or Carrier SSL port.
          format: int32
          nullable: true
          type: integer
          x-order: 3
      required:
      - carrierPort
      - httpPort
      - isSslRequired
      - seeds
      type: object
    CreateActiveDirectoryRequest_allOf:
      properties:
        domainName:
          description: Specifies the domain name of the Active Directory.
          nullable: true
          pattern: ^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])(\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9]))*$
          type: string
          x-order: 0
        activeDirectoryAdminParams:
          allOf:
          - $ref: '#/components/schemas/ActiveDirectoryAdminParams'
          - type: object
            x-nullable: true
          description: Specifies the params of a user with administrative privilege
            of this Active Directory.
          nullable: true
          type: object
          x-order: 1
        overwriteMachineAccounts:
          description: Specifies if specified machine accounts should overwrite existing
            machine accounts.
          nullable: true
          type: boolean
          x-order: 2
      required:
      - activeDirectoryAdminParams
      - domainName
      type: object
    CreateMcmSignupRequest_allOf:
      properties:
        acceptTerms:
          description: Specifies whether the User agrees to Terms and conditions for
            using Cohesity MCM services which are specified at <url>
          type: boolean
          x-order: 0
      required:
      - acceptTerms
      type: object
    CreateOdpRemoteClusterParams_allOf:
      properties:
        clusterId:
          description: Specifies the ODP Remote Cluster id.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        clusterIncarnationId:
          description: Specifies the ODP Remote Cluster incarnation id.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      required:
      - clusterId
      - clusterIncarnationId
      type: object
    CreateOrUpdateDataTieringTaskRequest_allOf:
      properties:
        downtieringPolicy:
          $ref: '#/components/schemas/DowntieringPolicy'
        uptieringPolicy:
          $ref: '#/components/schemas/UptieringPolicy'
      type: object
    CreateOrUpdateProtectionGroupRequest_allOf:
      properties:
        vmwareParams:
          $ref: '#/components/schemas/VmwareProtectionGroupParams'
        acropolisParams:
          $ref: '#/components/schemas/AcropolisProtectionGroupParams'
        kubernetesParams:
          $ref: '#/components/schemas/KubernetesProtectionGroupParams'
        mssqlParams:
          $ref: '#/components/schemas/MSSQLProtectionGroupParams'
        oracleParams:
          $ref: '#/components/schemas/OracleProtectionGroupParams'
        viewParams:
          $ref: '#/components/schemas/ViewProtectionGroupParams'
        pureParams:
          $ref: '#/components/schemas/PureProtectionGroupParams'
        nimbleParams:
          $ref: '#/components/schemas/NimbleProtectionGroupParams'
        hypervParams:
          $ref: '#/components/schemas/HyperVProtectionGroupParams'
        awsParams:
          $ref: '#/components/schemas/AwsProtectionGroupParams'
        azureParams:
          $ref: '#/components/schemas/AzureProtectionGroupParams'
        gcpParams:
          $ref: '#/components/schemas/GcpProtectionGroupParams'
        kvmParams:
          $ref: '#/components/schemas/KvmProtectionGroupParams'
        physicalParams:
          $ref: '#/components/schemas/PhysicalProtectionGroupParams'
        adParams:
          $ref: '#/components/schemas/ADProtectionGroupParams'
        office365Params:
          $ref: '#/components/schemas/Office365ProtectionGroupParams'
        netappParams:
          $ref: '#/components/schemas/NetappProtectionGroupParams'
        genericNasParams:
          $ref: '#/components/schemas/GenericNasProtectionGroupParams'
        isilonParams:
          $ref: '#/components/schemas/IsilonProtectionGroupParams'
        flashbladeParams:
          $ref: '#/components/schemas/FlashbladeProtectionGroupParams'
        gpfsParams:
          $ref: '#/components/schemas/GpfsProtectionGroupParams'
        couchbaseParams:
          $ref: '#/components/schemas/NoSqlProtectionGroupParams'
        elastifileParams:
          $ref: '#/components/schemas/ElastifileProtectionGroupParams'
        cassandraParams:
          $ref: '#/components/schemas/CassandraProtectionGroupParams'
        mongodbParams:
          $ref: '#/components/schemas/MongoDBProtectionGroupParams'
        hiveParams:
          $ref: '#/components/schemas/NoSqlProtectionGroupParams'
        hdfsParams:
          $ref: '#/components/schemas/HdfsProtectionGroupParams'
        hbaseParams:
          $ref: '#/components/schemas/NoSqlProtectionGroupParams'
        remoteAdapterParams:
          $ref: '#/components/schemas/RemoteAdapterProtectionGroupParams'
        exchangeParams:
          $ref: '#/components/schemas/ExchangeProtectionGroupParams'
        udaParams:
          $ref: '#/components/schemas/UdaProtectionGroupParams'
      type: object
    CreateProtectedObjectsRequest_allOf:
      properties:
        objects:
          description: Specifies the list of objects to be protected. Multiple objects
            from different adapters can be provided as input.
          items:
            $ref: '#/components/schemas/EnvSpecificObjectProtectionRequestParams'
          nullable: true
          type: array
          x-order: 0
        activateRemoteObjectProtection:
          description: If set to true, it will look for the remote backup of the given
            user and object, and activates it. Creates a new backup if the remote
            backup is not found. After activation, this object cannot get snapshots
            from remote clusters.
          nullable: true
          type: boolean
          x-order: 1
      required:
      - objects
      type: object
    CreateRecoveryRequest_allOf:
      properties:
        vmwareParams:
          $ref: '#/components/schemas/RecoverVmwareParams'
        awsParams:
          $ref: '#/components/schemas/RecoverAwsParams'
        gcpParams:
          $ref: '#/components/schemas/RecoverGcpParams'
        azureParams:
          $ref: '#/components/schemas/RecoverAzureParams'
        kvmParams:
          $ref: '#/components/schemas/RecoverKvmParams'
        acropolisParams:
          $ref: '#/components/schemas/RecoverAcropolisParams'
        mssqlParams:
          $ref: '#/components/schemas/RecoverSqlParams'
        netappParams:
          $ref: '#/components/schemas/RecoverNetappParams'
        genericNasParams:
          $ref: '#/components/schemas/RecoverGenericNasParams'
        isilonParams:
          $ref: '#/components/schemas/RecoverIsilonParams'
        flashbladeParams:
          $ref: '#/components/schemas/RecoverFlashbladeParams'
        elastifileParams:
          $ref: '#/components/schemas/RecoverElastifileParams'
        gpfsParams:
          $ref: '#/components/schemas/RecoverGpfsParams'
        physicalParams:
          $ref: '#/components/schemas/RecoverPhysicalParams'
        hypervParams:
          $ref: '#/components/schemas/RecoverHyperVParams'
        exchangeParams:
          $ref: '#/components/schemas/RecoverExchangeParams'
        cassandraParams:
          $ref: '#/components/schemas/CassandraParams'
        udaParams:
          $ref: '#/components/schemas/UdaParams'
        couchbaseParams:
          $ref: '#/components/schemas/CouchbaseParams'
        hbaseParams:
          $ref: '#/components/schemas/HbaseParams'
        hdfsParams:
          $ref: '#/components/schemas/HdfsParams'
        hiveParams:
          $ref: '#/components/schemas/HiveParams'
        mongodbParams:
          $ref: '#/components/schemas/MongodbParams'
        pureParams:
          $ref: '#/components/schemas/RecoverPureParams'
        kubernetesParams:
          $ref: '#/components/schemas/RecoverKubernetesParams'
        office365Params:
          $ref: '#/components/schemas/RecoverO365Params'
        oracleParams:
          $ref: '#/components/schemas/RecoverOracleParams'
      type: object
    CreateRigelConnectionRequest_allOf:
      properties:
        connectionId:
          description: Specifies the id of the connection.
          format: int64
          nullable: true
          type: integer
          x-order: 0
      required:
      - connectionId
      type: object
    CreateRigelConnectorRequest_allOf:
      properties:
        connectorId:
          description: Specifies the Id of the connector.
          format: int64
          nullable: true
          type: integer
          x-order: 0
      required:
      - connectorId
      type: object
    CreateRoleParams_allOf:
      properties:
        name:
          description: Specifies the Role name.
          nullable: true
          type: string
          x-order: 0
      required:
      - name
      type: object
    CreateTdmTaskRequest_allOf:
      properties:
        cloneParams:
          $ref: '#/components/schemas/TdmCloneTaskRequestParams'
        snapshotParams:
          $ref: '#/components/schemas/TdmSnapshotTaskParams'
        refreshParams:
          $ref: '#/components/schemas/TdmRefreshTaskRequestParams'
        teardownParams:
          $ref: '#/components/schemas/TdmTeardownTaskRequestParams'
      type: object
    CreateTenantParamsOthers_allOf:
      properties:
        network:
          $ref: '#/components/schemas/TenantNetwork'
      type: object
    CreateView_allOf:
      properties:
        storageDomainId:
          description: |-
            Specifies the id of the Storage Domain (View Box) where the View will be
            created.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        caseInsensitiveNamesEnabled:
          description: |-
            Specifies whether to support case insensitive file/folder names. This
            parameter can only be set during create and cannot be changed.
          nullable: true
          type: boolean
          x-order: 1
        objectServicesMappingConfig:
          description: |-
            Specifies the Object Services key mapping config of the view. This parameter can only
            be set during create and cannot be changed.
            Configuration of Object Services key mapping.
            Specifies the type of Object Services key mapping config.
          enum:
          - Random
          - Short
          - Long
          - Hierarchical
          - ObjectId
          nullable: true
          type: string
          x-order: 2
        viewProtectionConfig:
          allOf:
          - $ref: '#/components/schemas/ViewProtectionConfig'
          - type: object
            x-nullable: true
          description: Specifies the protection config of the View.
          type: object
          x-order: 3
      type: object
    DataTieringAnalysisGroup_allOf:
      properties:
        id:
          description: Specifies the ID of the data tiering analysis group.
          nullable: true
          type: string
          x-order: 0
        lastRun:
          $ref: '#/components/schemas/DataTieringAnalysisGroupRun'
      type: object
    DataTieringObjectInfo_allOf:
      properties:
        analysisInfo:
          $ref: '#/components/schemas/DataTieringObjectAnalysisInfo'
      type: object
    DataTieringTaskStats_allOf:
      properties:
        entityCount:
          description: Specifies total entity count.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        changedEntityCount:
          description: Specifies changed entity count.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        isTieringGoalMet:
          default: false
          description: Specifies whether tiering goal has been met.
          nullable: true
          type: boolean
          x-order: 2
        totalTieredBytes:
          description: Specifies total amount of data successfully tiered from the
            NAS source.
          format: int64
          nullable: true
          type: integer
          x-order: 3
      type: object
    DocumentLibraryItem_allOf:
      properties:
        fileType:
          description: Specifies the file type.
          enum:
          - File
          - Directory
          - Symlink
          nullable: true
          type: string
          x-order: 0
        itemSize:
          description: Specifies the size in bytes for the indexed item.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        creationTimeSecs:
          description: Specifies the Unix timestamp epoch in seconds at which this
            item is created.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        ownerName:
          description: Specifies the name of the owner of the document library item.
          nullable: true
          type: string
          x-order: 3
        ownerEmail:
          description: Specifies the email of the owner of the document library item.
          nullable: true
          type: string
          x-order: 4
      type: object
    DowntieringPolicy_allOf:
      properties:
        qosPolicy:
          description: |-
            Specifies whether the data tiering task will be written to HDD or
            SSD.
          enum:
          - kBackupHDD
          - kBackupSSD
          - kTestAndDevHigh
          - kBackupAll
          nullable: true
          type: string
          x-order: 0
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        retention:
          $ref: '#/components/schemas/Retention'
        skipBackSymlink:
          default: true
          description: |-
            Specifies whether to create a symlink for the migrated data from
            source to target.
          nullable: true
          type: boolean
          x-order: 3
        autoOrphanDataCleanup:
          default: true
          description: |-
            Specifies whether to remove the orphan data from the target if the
            symlink is removed from the source.
          nullable: true
          type: boolean
          x-order: 4
        tieringGoal:
          description: |-
            Specifies the maximum amount of data that should be present on source
            after downtiering.
          format: int64
          nullable: true
          type: integer
          x-order: 5
        fileAge:
          $ref: '#/components/schemas/DowntieringFileAgePolicy'
        target:
          $ref: '#/components/schemas/DowntieringTarget'
      type: object
    ElastifileObjectProtectionRequestParams_allOf:
      properties:
        objects:
          description: Specifies the objects to be protected.
          items:
            $ref: '#/components/schemas/ProtectionObjectInput'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
      required:
      - objects
      type: object
    Email_allOf:
      properties:
        id:
          description: Specifies the id of the email object.
          nullable: true
          type: string
          x-order: 0
        userObjectInfo:
          $ref: '#/components/schemas/ObjectSummary'
        folderName:
          description: Specify the name of the email folder.
          nullable: true
          type: string
          x-order: 2
        parentFolderId:
          description: Specifies the id of parent folder the mailbox item.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        path:
          description: Specifies the path to this mailbox item.
          nullable: true
          type: string
          x-order: 4
        type:
          description: Specifies the Mailbox item type.
          enum:
          - Email
          - Folder
          nullable: true
          type: string
          x-order: 5
        emailSubject:
          description: Specifies the subject of this email.
          nullable: true
          type: string
          x-order: 6
        hasAttachment:
          description: Specifies whether email has an attachment.
          nullable: true
          type: boolean
          x-order: 7
        senderAddress:
          description: Specifies the sender's email address.
          nullable: true
          type: string
          x-order: 8
        recipientAddresses:
          description: '"Specifies the email addresses of all receipients of this
            email."'
          items:
            type: string
          nullable: true
          type: array
          x-order: 9
        ccRecipientAddresses:
          description: |-
            "Specifies the email addresses of all the CC receipients of this
            email."
          items:
            type: string
          nullable: true
          type: array
          x-order: 10
        bccRecipientAddresses:
          description: |-
            "Specifies the email addresses of all the BCC receipients of this
            email."
          items:
            type: string
          nullable: true
          type: array
          x-order: 11
        sentTimeSecs:
          description: |-
            "Specifies the Unix timestamp epoch in seconds at which this
            email is sent."
          format: int64
          nullable: true
          type: integer
          x-order: 12
        receivedTimeSecs:
          description: |-
            "Specifies the Unix timestamp epoch in seconds at which this
            email is received."
          format: int64
          nullable: true
          type: integer
          x-order: 13
        protectionGroupId:
          description: '"Specifies the Protection Group id protecting the mailbox."'
          nullable: true
          type: string
          x-order: 14
        storageDomainId:
          description: |-
            "Specifies the Storage Domain id where the backup data of Object
            is present."
          format: int64
          nullable: true
          type: integer
          x-order: 15
        tenantId:
          description: '"Specify the tenant id to which this email belongs to."'
          nullable: true
          type: string
          x-order: 16
      type: object
    EmailHeliosSearchParams_allOf:
      properties:
        o365Params:
          description: Specifies the O365 specific params to search emails.
          items:
            $ref: '#/components/schemas/O365HeliosSearchEmailsRequestParams'
          nullable: true
          type: array
          x-order: 0
      type: object
    EnvSpecificObjectProtectionRequestParams_allOf:
      properties:
        vmwareParams:
          $ref: '#/components/schemas/VmwareObjectProtectionRequestParams'
        genericNasParams:
          $ref: '#/components/schemas/GenericNasObjectProtectionRequestParams'
        gpfsParams:
          $ref: '#/components/schemas/GpfsObjectProtectionRequestParams'
        elastifileParams:
          $ref: '#/components/schemas/ElastifileObjectProtectionRequestParams'
        netappParams:
          $ref: '#/components/schemas/NetappObjectProtectionRequestParams'
        isilonParams:
          $ref: '#/components/schemas/IsilonObjectProtectionRequestParams'
        flashbladeParams:
          $ref: '#/components/schemas/FlashbladeObjectProtectionRequestParams'
        mssqlParams:
          $ref: '#/components/schemas/MssqlObjectProtectionRequestParams'
        oracleParams:
          $ref: '#/components/schemas/OracleObjectProtectionRequestParams'
        office365Params:
          $ref: '#/components/schemas/Office365ObjectProtectionRequestParams'
        awsParams:
          $ref: '#/components/schemas/AwsObjectProtectionRequestParams'
        hypervParams:
          $ref: '#/components/schemas/HyperVObjectProtectionRequestParams'
        physicalParams:
          $ref: '#/components/schemas/PhysicalObjectProtectionRequestParams'
      type: object
    EsxiRegistrationParams_allOf:
      properties:
        minFreeDatastoreSpaceForBackupGb:
          description: Specifies the minimum free space (in GB) expected to be available
            in the datastore where the virtual disks of the VM being backed up reside.
            If the space available is lower than the specified value, backup will
            be aborted.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        maxConcurrentStreams:
          description: If this value is > 0 and the number of streams concurrently
            active on a datastore is equal to it, then any further requests to access
            the datastore would be denied until the number of active streams reduces.
            This applies for all the datastores in the specified host.
          format: int32
          nullable: true
          type: integer
          x-order: 1
        dataStoreParams:
          description: Specifies the datastore specific params.
          items:
            $ref: '#/components/schemas/DatastoreParams'
          nullable: true
          type: array
          x-order: 2
      type: object
    ExchangeIndexedObject_allOf:
      properties:
        objectName:
          description: Specifies the name of the Exchange mailbox.
          nullable: true
          type: string
          x-order: 0
        email:
          description: Specifies the email corresponding to the mailbox.
          nullable: true
          type: string
          x-order: 1
        databaseName:
          description: Specifies the name of the Exchange database corresponding to
            the mailbox.
          nullable: true
          type: string
          x-order: 2
      type: object
    ExternalTarget_allOf:
      properties:
        archivalParams:
          $ref: '#/components/schemas/ArchivalExternalTargetParams'
        tieringParams:
          $ref: '#/components/schemas/TieringExternalTargetParams'
      type: object
    File_allOf:
      properties:
        name:
          description: Specifies the file name.
          nullable: true
          type: string
          x-order: 0
        path:
          description: Specifies the path to this file.
          nullable: true
          type: string
          x-order: 1
        type:
          description: Specifies the file type.
          enum:
          - File
          - Directory
          - Symlink
          nullable: true
          type: string
          x-order: 2
        protectionGroupId:
          description: '"Specifies the protection group id which contains this file."'
          nullable: true
          type: string
          x-order: 3
        protectionGroupName:
          description: '"Specifies the protection group name which contains this file."'
          nullable: true
          type: string
          x-order: 4
        storageDomainId:
          description: |-
            "Specifies the Storage Domain id where the backup data of Object
            is present."
          format: int64
          nullable: true
          type: integer
          x-order: 5
        sourceInfo:
          allOf:
          - $ref: '#/components/schemas/ObjectSummary'
          - type: object
            x-nullable: true
          description: Specifies the Source Object information.
          type: object
          x-order: 6
      type: object
    GenericNasProtectionGroupParams_allOf:
      properties:
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/ProtectionObjectInput'
          minItems: 1
          type: array
          uniqueItems: true
          x-order: 0
      required:
      - objects
      type: object
    GetConnectionBandwidthResponseBody_allOf:
      properties:
        connectionId:
          description: Connection Id for which bandwidth settings are to be returned
          format: int64
          nullable: true
          type: integer
          x-order: 0
      type: object
    GetPITRangesProtectedObjectResponseBody_allOf:
      properties:
        oracleRestoreRangeInfo:
          $ref: '#/components/schemas/OracleRestoreRangeInfo'
      type: object
    GoogleTier_allOf:
      properties:
        tierType:
          description: Specifies the Google tier types.
          enum:
          - kGoogleStandard
          - kGoogleRegional
          - kGoogleMultiRegional
          - kGoogleNearline
          - kGoogleColdline
          nullable: true
          type: string
          x-order: 0
      required:
      - tierType
      type: object
    GroupParams_allOf:
      properties:
        sid:
          description: Specifies the sid of the Group.
          nullable: true
          type: string
          x-order: 0
        createdTimeMsecs:
          description: Specifies the epoch time in milliseconds when the Group was
            created.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 1
        lastUpdatedTimeMsecs:
          description: Specifies the epoch time in milliseconds when the Group was
            last modified.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 2
      type: object
    HDFSIndexedObject_allOf:
      properties:
        type:
          description: Specifies the HDFS Object Type.
          enum:
          - HDFSFolders
          - HDFSFiles
          nullable: true
          type: string
          x-order: 0
        id:
          description: Specifies the id of the indexed object.
          nullable: true
          type: string
          x-order: 1
      type: object
    HadoopConnectionParams_sshPasswordCredentials:
      description: SSH username + password required for reading configuration file
        and for scp backup.Either 'sshPasswordCredential' or 'sshPrivateKeyCredential'
        are required.
      nullable: true
      properties:
        password:
          description: SSH password.
          type: string
          x-order: 0
        username:
          description: SSH username.
          type: string
          x-order: 1
      required:
      - password
      - username
      type: object
      x-order: 2
    HadoopConnectionParams_sshPrivateKeyCredentials:
      description: SSH  userID + privateKey required for reading configuration file
        and for scp backup.
      nullable: true
      properties:
        passphrase:
          description: Passphrase for the private key.
          type: string
          x-order: 0
        privateKey:
          description: The private key.
          type: string
          x-order: 1
        userId:
          description: userId for PrivateKey credentials.
          type: string
          x-order: 2
      required:
      - privateKey
      - userId
      type: object
      x-order: 3
    HbaseIndexedObject_allOf:
      properties:
        type:
          description: Specifies the Hbase Object Type.
          enum:
          - HbaseNamespaces
          - HbaseTables
          nullable: true
          type: string
          x-order: 0
        id:
          description: Specifies the id of the indexed object.
          nullable: true
          type: string
          x-order: 1
      type: object
    HbaseSourceRegistrationParams_allOf_sshPasswordCredentials:
      description: SSH username + password required for reading configuration file.
        Either 'sshPasswordCredentials' or 'sshPrivateKeyCredentials' are required.
      nullable: true
      properties:
        password:
          description: SSH password.
          type: string
          x-order: 0
        username:
          description: SSH username.
          type: string
          x-order: 1
      required:
      - password
      - username
      type: object
      x-order: 2
    HbaseSourceRegistrationParams_allOf_sshPrivateKeyCredentials:
      description: SSH  userID + privateKey required for reading configuration file.
      nullable: true
      properties:
        passphrase:
          description: Passphrase for the private key.
          type: string
          x-order: 0
        privateKey:
          description: The private key.
          type: string
          x-order: 1
        userId:
          description: userId for PrivateKey credentials.
          type: string
          x-order: 2
      required:
      - privateKey
      - userId
      type: object
      x-order: 3
    HbaseSourceRegistrationParams_allOf:
      properties:
        host:
          description: IP or hostname of any host from which the HBase configuration
            file hbase-site.xml can be read.
          type: string
          x-order: 0
        configurationDirectory:
          description: The directory containing the hbase-site.xml.
          type: string
          x-order: 1
        sshPasswordCredentials:
          $ref: '#/components/schemas/HbaseSourceRegistrationParams_allOf_sshPasswordCredentials'
        sshPrivateKeyCredentials:
          $ref: '#/components/schemas/HbaseSourceRegistrationParams_allOf_sshPrivateKeyCredentials'
        hdfsSourceRegistrationID:
          description: Protection Source registration id of the HDFS on which this
            HBase is running.
          format: int64
          type: integer
          x-order: 4
        kerberosPrincipal:
          description: The kerberos principal to be used to connect to this Hbase
            source.
          nullable: true
          type: string
          x-order: 5
      required:
      - configurationDirectory
      - hdfsSourceRegistrationID
      - host
      type: object
    HdfsSourceRegistrationParams_allOf:
      properties:
        host:
          description: IP or hostname of any host from which the HDFS configuration
            files core-site.xml and hdfs-site.xml can be read.
          type: string
          x-order: 0
        configurationDirectory:
          description: The directory containing the core-site.xml and hdfs-site.xml
            configuration files.
          type: string
          x-order: 1
        sshPasswordCredentials:
          $ref: '#/components/schemas/HbaseSourceRegistrationParams_allOf_sshPasswordCredentials'
        sshPrivateKeyCredentials:
          $ref: '#/components/schemas/HbaseSourceRegistrationParams_allOf_sshPrivateKeyCredentials'
        kerberosPrincipal:
          description: The kerberos principal to be used to connect to this HDFS source.
          nullable: true
          type: string
          x-order: 4
        hadoopDistribution:
          description: The hadoop distribution for this cluster. This can be either
            'CDH' or 'HDP'
          enum:
          - CDH
          - HDP
          type: string
          x-order: 5
        hadoopVersion:
          description: The hadoop version for this cluster.
          type: string
          x-order: 6
      required:
      - configurationDirectory
      - hadoopDistribution
      - hadoopVersion
      - host
      type: object
    HeliosMonthSchedule_allOf:
      properties:
        weekOfMonth:
          description: 'Specifies the week of the month (such as ''Third'') in a Monthly
            Schedule specified by unit field as ''Months''. <br>This field is used
            in combination with ''dayOfWeek'' to define the day in the month to start
            the Protection Group Run. <br> Example: if ''weekOfMonth'' is set to ''Third''
            and day is set to ''Monday'', a backup is performed on the third Monday
            of every month.'
          enum:
          - First
          - Second
          - Third
          - Fourth
          - Last
          nullable: true
          type: string
          x-order: 0
      type: object
    HeliosPolicyResponse_allOf:
      properties:
        id:
          description: Specifies a unique policy id assigned by the Helios.
          nullable: true
          type: string
          x-order: 0
        numLinkedPolicies:
          description: In case of global policy response, specifies the number of
            policies linked to this global policy on the cluster.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        numObjectProtections:
          description: Specifies the number of object protections using the protection
            policy.
          format: int64
          nullable: true
          type: integer
          x-order: 2
      type: object
    HeliosReplicationConfig_allOf:
      properties:
        targetType:
          description: Specifies the type of target to which replication need to be
            performed.
          enum:
          - RemoteCluster
          - AWS
          - Azure
          nullable: true
          type: string
          x-order: 0
      type: object
    HeliosSearchIndexedObjectsRequest_allOf:
      properties:
        emailParams:
          $ref: '#/components/schemas/EmailHeliosSearchParams'
        fileParams:
          $ref: '#/components/schemas/SearchFileRequestParamsBase'
        cassandraParams:
          $ref: '#/components/schemas/CassandraSearchParams'
        couchbaseParams:
          $ref: '#/components/schemas/CouchbaseSearchParams'
        hbaseParams:
          $ref: '#/components/schemas/HbaseSearchParams'
        hiveParams:
          $ref: '#/components/schemas/HiveSearchParams'
        mongodbParams:
          $ref: '#/components/schemas/MongodbSearchParams'
        hdfsParams:
          $ref: '#/components/schemas/HdfsSearchParams'
        exchangeParams:
          $ref: '#/components/schemas/SearchExchangeObjectsRequestParams'
        publicFolderParams:
          $ref: '#/components/schemas/SearchPublicFolderRequestParams'
        msTeamsParams:
          $ref: '#/components/schemas/SearchMsTeamsRequestParams'
      type: object
    HeliosSearchIndexedObjectsResponseBody_allOf:
      properties:
        emails:
          description: Specifies the indexed emails and email folders.
          items:
            allOf:
            - $ref: '#/definitions/GlobalClusterIdentifier'
            - $ref: '#/definitions/Email'
            type: object
          type: array
        files:
          description: Specifies the indexed files and file folders.
          items:
            allOf:
            - $ref: '#/definitions/GlobalClusterIdentifier'
            - $ref: '#/definitions/File'
            type: object
          type: array
        cassandraObjects:
          description: Specifies the indexed Cassandra objects.
          items:
            allOf:
            - $ref: '#/definitions/GlobalClusterIdentifier'
            - $ref: '#/definitions/CassandraIndexedObject'
            type: object
          type: array
        couchbaseObjects:
          description: Specifies the indexed Couchbase objects.
          items:
            allOf:
            - $ref: '#/definitions/GlobalClusterIdentifier'
            - $ref: '#/definitions/CouchbaseIndexedObject'
            type: object
          type: array
        hbaseObjects:
          description: Specifies the indexed Hbase objects.
          items:
            allOf:
            - $ref: '#/definitions/GlobalClusterIdentifier'
            - $ref: '#/definitions/HbaseIndexedObject'
            type: object
          type: array
        hiveObjects:
          description: Specifies the indexed Hive objects.
          items:
            allOf:
            - $ref: '#/definitions/GlobalClusterIdentifier'
            - $ref: '#/definitions/HiveIndexedObject'
            type: object
          type: array
        mongoObjects:
          description: Specifies the indexed Mongo objects.
          items:
            allOf:
            - $ref: '#/definitions/GlobalClusterIdentifier'
            - $ref: '#/definitions/MongoIndexedObject'
            type: object
          type: array
        hdfsObjects:
          description: Specifies the indexed HDFS objects.
          items:
            allOf:
            - $ref: '#/definitions/GlobalClusterIdentifier'
            - $ref: '#/definitions/HDFSIndexedObject'
            type: object
          type: array
        exchangeObjects:
          description: Specifies the indexed HDFS objects.
          items:
            allOf:
            - $ref: '#/definitions/GlobalClusterIdentifier'
            - $ref: '#/definitions/ExchangeIndexedObject'
            type: object
          type: array
        publicFolderItems:
          description: Specifies the indexed Public folder items.
          items:
            allOf:
            - $ref: '#/definitions/GlobalClusterIdentifier'
            - $ref: '#/definitions/PublicFolderItem'
            type: object
          type: array
      type: object
    HiveIndexedObject_allOf:
      properties:
        type:
          description: Specifies the Hive Object Type.
          enum:
          - HiveDatabases
          - HiveTables
          - HivePartitions
          nullable: true
          type: string
          x-order: 0
        id:
          description: Specifies the id of the indexed object.
          nullable: true
          type: string
          x-order: 1
      type: object
    HiveSourceRegistrationParams_allOf_sshPasswordCredentials:
      description: SSH username + password required for reading configuration file.Either
        'sshPasswordCredentials' or 'sshPrivateKeyCredentials' are required.
      nullable: true
      properties:
        password:
          description: SSH password.
          type: string
          x-order: 0
        username:
          description: SSH username.
          type: string
          x-order: 1
      required:
      - password
      - username
      type: object
      x-order: 2
    HiveSourceRegistrationParams_allOf:
      properties:
        host:
          description: IP or hostname of any host from which the Hive configuration
            file hive-site.xml can be read.
          type: string
          x-order: 0
        configurationDirectory:
          description: The directory containing the hive-site.xml.
          type: string
          x-order: 1
        sshPasswordCredentials:
          $ref: '#/components/schemas/HiveSourceRegistrationParams_allOf_sshPasswordCredentials'
        sshPrivateKeyCredentials:
          $ref: '#/components/schemas/HbaseSourceRegistrationParams_allOf_sshPrivateKeyCredentials'
        hdfsSourceRegistrationID:
          description: Protection Source registration id of the HDFS on which this
            Hive is running.
          format: int64
          type: integer
          x-order: 4
        kerberosPrincipal:
          description: The kerberos principal to be used to connect to this Hive source.
          nullable: true
          type: string
          x-order: 5
      required:
      - configurationDirectory
      - hdfsSourceRegistrationID
      - host
      type: object
    HyperVObjectProtectionRequest_allOf:
      properties:
        id:
          description: Specifies the id of the object being protected. This can be
            a leaf level or non leaf level object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        excludeObjectIds:
          description: Specifies the list of IDs of the objects to not be protected
            by this Protection Group. This can be used to ignore specific objects
            under a parent object which has been included for protection.
          items:
            format: int64
            nullable: true
            type: integer
          type: array
          x-order: 1
      required:
      - id
      type: object
    HyperVObjectProtectionRequestParams_allOf:
      properties:
        objects:
          description: Specifies the objects to include in the backup.
          items:
            $ref: '#/components/schemas/HyperVObjectProtectionRequest'
          type: array
          x-order: 0
      required:
      - objects
      type: object
    HyperVObjectProtectionResponse_allOf:
      properties:
        excludeObjectIds:
          description: Specifies the list of IDs of the objects to not be protected
            by this Protection Group. This can be used to ignore specific objects
            under a parent object which has been included for protection.
          items:
            format: int64
            nullable: true
            type: integer
          type: array
          x-order: 0
      type: object
    HyperVProtectionGroupParams_allOf:
      properties:
        protectionType:
          description: Specifies the Protection Group type. If not specified, then
            backup method is auto determined. Specifying RCT will forcibly use RCT
            backup for all VMs in this Protection Group. Available only for VMs with
            hardware version 8.0 and above, but is more efficient. Specifying VSS
            will forcibly use VSS backup for all VMs in this Protection Group. Available
            for VMs with hardware version 5.0 and above, but is slower than RCT backup.
          enum:
          - kAuto
          - kRCT
          - kVSS
          nullable: true
          type: string
          x-order: 0
        objects:
          description: Specifies the objects to be included in the Protection Group.
          items:
            $ref: '#/components/schemas/HyperVProtectionGroupObjectParams'
          type: array
          uniqueItems: true
          x-order: 1
        excludeObjectIds:
          description: Specifies the list of IDs of the objects to not be protected
            by this Protection Group. This can be used to ignore specific objects
            under a parent object which has been included for protection.
          items:
            format: int64
            nullable: true
            type: integer
          type: array
          x-order: 2
        vmTagIds:
          description: 'Array of Array of VM Tag Ids that Specify VMs to Protect.
            Optionally specify a list of VMs to protect by listing Protection Source
            ids of VM Tags in this two dimensional array. Using this two dimensional
            array of Tag ids, the Cluster generates a list of VMs to protect which
            are derived from intersections of the inner arrays and union of the outer
            array, as shown by the following example. To protect only ''Eng'' VMs
            in the East and all the VMs in the West, specify the following tag id
            array: [ [1101, 2221], [3031] ], where 1101 is the ''Eng'' VM Tag id,
            2221 is the ''East'' VM Tag id and 3031 is the ''West'' VM Tag id. The
            inner array [1101, 2221] produces a list of VMs that are both tagged with
            ''Eng'' and ''East'' (an intersection). The outer array combines the list
            from the inner array with list of VMs tagged with ''West'' (a union).
            The list of resulting VMs are protected by this Protection Group.'
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
          x-order: 3
        excludeVmTagIds:
          description: 'Array of Arrays of VM Tag Ids that Specify VMs to Exclude.
            Optionally specify a list of VMs to exclude from protecting by listing
            Protection Source ids of VM Tags in this two dimensional array. Using
            this two dimensional array of Tag ids, the Cluster generates a list of
            VMs to exclude from protecting, which are derived from intersections of
            the inner arrays and union of the outer array, as shown by the following
            example. For example a Datacenter is selected to be protected but you
            want to exclude all the ''Former Employees'' VMs in the East and West
            but keep all the VMs for ''Former Employees'' in the South which are also
            stored in this Datacenter, by specifying the following tag id array: [
            [1000, 2221], [1000, 3031] ], where 1000 is the ''Former Employee'' VM
            Tag id, 2221 is the ''East'' VM Tag id and 3031 is the ''West'' VM Tag
            id. The first inner array [1000, 2221] produces a list of VMs that are
            both tagged with ''Former Employees'' and ''East'' (an intersection).
            The second inner array [1000, 3031] produces a list of VMs that are both
            tagged with ''Former Employees'' and ''West'' (an intersection). The outer
            array combines the list of VMs from the two inner arrays. The list of
            resulting VMs are excluded from being protected this Job.'
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
          x-order: 4
        cloudMigration:
          description: Specifies whether or not to move the workload to the cloud.
          nullable: true
          type: boolean
          x-order: 5
        sourceId:
          description: Specifies the id of the parent of the objects.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 6
        sourceName:
          description: Specifies the name of the parent of the objects.
          nullable: true
          readOnly: true
          type: string
          x-order: 7
      type: object
    Idp_allOf:
      properties:
        id:
          description: Specifies the Id of the IDP Configuration.
          format: int64
          nullable: true
          type: integer
          x-order: 0
      type: object
    Keystone_allOf:
      properties:
        name:
          description: Specifies the Keystone configuration name.
          nullable: true
          type: string
          x-order: 0
        id:
          description: Specifies the Keystone configuration id.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 1
        authUrl:
          description: Specifies the url points to the Keystone service.
          nullable: true
          type: string
          x-order: 2
      required:
      - authUrl
      - name
      type: object
    Ldap_allOf:
      properties:
        id:
          description: Specifies the LDAP id.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        tenantId:
          description: Specifies the LDAP tenant id.
          nullable: true
          type: string
          x-order: 1
      type: object
    MSSQLFileProtectionGroupParams_allOf:
      properties:
        objects:
          description: Specifies the list of object params to be protected.
          items:
            $ref: '#/components/schemas/MSSQLFileProtectionGroupObjectParams'
          minItems: 1
          nullable: true
          type: array
          x-order: 0
        performSourceSideDeduplication:
          description: Specifies whether or not to perform source side deduplication
            on this Protection Group.
          nullable: true
          type: boolean
          x-order: 1
        additionalHostParams:
          description: Specifies settings which are to be applied to specific host
            containers in this protection group.
          items:
            $ref: '#/components/schemas/MSSQLFileProtectionGroupHostParams'
          type: array
          x-order: 2
      required:
      - objects
      type: object
    MSSQLNativeProtectionGroupParams_allOf:
      properties:
        objects:
          description: Specifies the list of object params to be protected.
          items:
            $ref: '#/components/schemas/MSSQLNativeProtectionGroupObjectParams'
          minItems: 1
          nullable: true
          type: array
          x-order: 0
        numStreams:
          description: Specifies the number of streams to be used.
          format: int32
          nullable: true
          type: integer
          x-order: 1
        withClause:
          description: Specifies the WithClause to be used.
          nullable: true
          type: string
          x-order: 2
      required:
      - objects
      type: object
    MSSQLVolumeProtectionGroupParams_allOf:
      properties:
        objects:
          description: Specifies the list of object ids to be protected.
          items:
            $ref: '#/components/schemas/MSSQLVolumeProtectionGroupObjectParams'
          minItems: 1
          nullable: true
          type: array
          x-order: 0
        incrementalBackupAfterRestart:
          description: Specifies whether or to perform incremental backups the first
            time after a server restarts. By default, a full backup will be performed.
          nullable: true
          type: boolean
          x-order: 1
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
        backupDbVolumesOnly:
          description: Specifies whether to only backup volumes on which the specified
            databases reside. If not specified (default), all the volumes of the host
            will be protected.
          nullable: true
          type: boolean
          x-order: 3
        additionalHostParams:
          description: Specifies settings which are to be applied to specific host
            containers in this protection group.
          items:
            $ref: '#/components/schemas/MSSQLVolumeProtectionGroupHostParams'
          type: array
          x-order: 4
      required:
      - objects
      type: object
    McmSignup_allOf:
      properties:
        id:
          description: Specifies the id of the signup request.
          nullable: true
          type: integer
          x-order: 0
        createdAtMsecs:
          description: Specifies the time at which the signup request is created in
            Unix timestamp epoch in milliseconds.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        updatedAtMsecs:
          description: Specifies the time at which the signup request is updated in
            Unix timestamp epoch in milliseconds.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        status:
          description: Specifies the status of the MCM signup request.
          enum:
          - Open
          - InProgress
          - Denied
          - Finished
          nullable: true
          type: string
          x-order: 3
        acceptTerms:
          description: Specifies whether the User agrees to Terms and conditions for
            using Cohesity MCM services which are specified at <url>
          nullable: true
          type: boolean
          x-order: 4
      type: object
    McmSourceRegistration_allOf:
      properties:
        vmwareParams:
          $ref: '#/components/schemas/VmwareSourceRegistrationParams'
        physicalParams:
          $ref: '#/components/schemas/PhysicalSourceRegistrationParams'
        genericNasParams:
          $ref: '#/components/schemas/GenericNasRegistrationParams'
        isilonParams:
          $ref: '#/components/schemas/IsilonRegistrationParams'
        netappParams:
          $ref: '#/components/schemas/NetappRegistrationParams'
        cassandraParams:
          $ref: '#/components/schemas/CassandraSourceRegistrationParams'
        mongodbParams:
          $ref: '#/components/schemas/MongoDBSourceRegistrationParams'
        couchbaseParams:
          $ref: '#/components/schemas/CouchbaseSourceRegistrationParams'
        hdfsParams:
          $ref: '#/components/schemas/HdfsSourceRegistrationParams'
        hbaseParams:
          $ref: '#/components/schemas/HbaseSourceRegistrationParams'
        hiveParams:
          $ref: '#/components/schemas/HiveSourceRegistrationParams'
        awsParams:
          $ref: '#/components/schemas/AwsSourceRegistrationParams'
        office365Params:
          $ref: '#/components/schemas/Office365SourceRegistrationParams'
        hypervParams:
          $ref: '#/components/schemas/HyperVSourceRegistrationParams'
      type: object
    MongoDBProtectionGroupParams_allOf:
      nullable: true
      properties:
        cdpInfo:
          allOf:
          - $ref: '#/components/schemas/MongoDBCdpJobInfo'
          - type: object
            x-nullable: true
          description: Specifies the CDP related information for a given protection
            group. This field will only be populated when protection group is configured
            with a CDP policy.
          type: object
          x-order: 0
      type: object
      x-cohesity-discriminator-value: kMongoDB
      x-nullable: true
    MongoIndexedObject_allOf:
      properties:
        type:
          description: Specifies the Mongo Object Type.
          enum:
          - MongoDatabases
          - MongoCollections
          nullable: true
          type: string
          x-order: 0
        id:
          description: Specifies the id of the indexed object.
          nullable: true
          type: string
          x-order: 1
        cdpInfo:
          $ref: '#/components/schemas/CdpObjectInfo'
      type: object
    MonthSchedule_allOf:
      properties:
        weekOfMonth:
          description: 'Specifies the week of the month (such as ''Third'') in a Monthly
            Schedule specified by unit field as ''Months''. <br>This field is used
            in combination with ''dayOfWeek'' to define the day in the month to start
            the Protection Group Run. <br> Example: if ''weekOfMonth'' is set to ''Third''
            and day is set to ''Monday'', a backup is performed on the third Monday
            of every month.'
          enum:
          - First
          - Second
          - Third
          - Fourth
          - Last
          nullable: true
          type: string
          x-order: 0
      required:
      - weekOfMonth
      type: object
    MssqlConnectionResponseParams_allOf:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        skipConnectionDiscovery:
          description: Specifies whether to skip the discovery phase of all SQL servers,
            AAG groups etc during registration process.
          nullable: true
          type: boolean
          x-order: 1
        servers:
          description: Specifies the list of SQL servers. If SQL server is a part
            of avalibility group then it will be returned in aagServers field. This
            will include the list of all standalone SQL servers and servers belonging
            to any FCI enviournment.
          items:
            $ref: '#/components/schemas/SQLServer'
          nullable: true
          type: array
          x-order: 2
        fciClusters:
          description: Specifies the list of FCI (Failover Cluster Instaces) Clusters.
            This will contain the list of all failover pools under a windows cluster.
            FCI clusters which are part of AAG, will be returned seperatly under aagServers
            field.
          items:
            $ref: '#/components/schemas/FCICluster'
          nullable: true
          type: array
          x-order: 3
        aagGroups:
          description: Specifies the list of AAG (Always on Avalibility) groups.
          items:
            $ref: '#/components/schemas/AAGGroup'
          nullable: true
          type: array
          x-order: 4
      type: object
    MssqlFileObjectProtectionParams_allOf:
      properties:
        objects:
          description: Specifies the list of objects to be protected.
          items:
            $ref: '#/components/schemas/MssqlFileObjectProtection'
          minItems: 1
          nullable: true
          type: array
          x-order: 0
      required:
      - objects
      type: object
    MssqlNativeObjectProtectionParams_allOf:
      properties:
        objects:
          description: Specifies the list of objects to be protected.
          items:
            $ref: '#/components/schemas/MssqlNativeObjectProtection'
          minItems: 1
          nullable: true
          type: array
          x-order: 0
        numStreams:
          description: Specifies the number of streams to be used.
          format: int32
          nullable: true
          type: integer
          x-order: 1
        withClause:
          description: Specifies the WithClause to be used.
          nullable: true
          type: string
          x-order: 2
      required:
      - objects
      type: object
    NetappRecoverFileAndFolderInfo_allOf:
      properties:
        inodeId:
          description: Specifies the source inode number of the file being recovered.
          format: int64
          nullable: true
          type: integer
          x-order: 0
      type: object
    O365HeliosSearchEmailsRequestParams_allOf:
      properties:
        domainIds:
          description: Specifies the domain Ids in which mailboxes are registered.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 0
        mailboxIds:
          description: Specifies the mailbox Ids which contains the emails/folders.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 1
      type: object
    Object_allOf:
      properties:
        vmwareParams:
          $ref: '#/components/schemas/VmwareObjectEntityParams'
        isilonParams:
          allOf:
          - $ref: '#/components/schemas/IsilonObjectParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters for Isilon object.
          type: object
          x-order: 1
        netappParams:
          allOf:
          - $ref: '#/components/schemas/NetappObjectParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters for NetApp object.
          type: object
          x-order: 2
        genericNasParams:
          allOf:
          - $ref: '#/components/schemas/CommonNasObjectParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters for GenericNas object.
          type: object
          x-order: 3
        flashbladeParams:
          allOf:
          - $ref: '#/components/schemas/FlashbladeObjectParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters for Flashblade object.
          type: object
          x-order: 4
        elastifileParams:
          allOf:
          - $ref: '#/components/schemas/CommonNasObjectParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters for Elastifile object.
          type: object
          x-order: 5
        gpfsParams:
          allOf:
          - $ref: '#/components/schemas/CommonNasObjectParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters for GPFS object.
          type: object
          x-order: 6
        mssqlParams:
          allOf:
          - $ref: '#/components/schemas/MssqlObjectEntityParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters for Msssql object.
          type: object
          x-order: 7
        oracleParams:
          allOf:
          - $ref: '#/components/schemas/OracleObjectEntityParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters for Oracle object.
          type: object
          x-order: 8
        physicalParams:
          allOf:
          - $ref: '#/components/schemas/PhysicalObjectEntityParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters for Physical object.
          type: object
          x-order: 9
        sharepointParams:
          allOf:
          - $ref: '#/components/schemas/SharepointObjectEntityParams'
          - type: object
            x-nullable: true
          description: Specifies the parameters for Sharepoint object.
          type: object
          x-order: 10
      type: object
    ObjectActionRequest_allOf:
      properties:
        vmwareParams:
          $ref: '#/components/schemas/VmwareObjectActionParams'
      type: object
    ObjectArchivalSnapshotInfo_allOf:
      properties:
        snapshotId:
          description: Specifies the id of the archival snapshot for the object.
          nullable: true
          type: string
          x-order: 0
        logicalSizeBytes:
          description: Specifies the logical size of this snapshot in bytes.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    ObjectBrowseRequest_allOf:
      properties:
        hdfsParams:
          $ref: '#/components/schemas/HdfsBrowseRequestParams'
        paginationInfo:
          $ref: '#/components/schemas/PaginationInfo'
      type: object
    ObjectLastRun_allOf:
      properties:
        runId:
          description: Specifies the last run id.
          type: string
          x-order: 0
          x-nullale: true
        protectionGroupName:
          description: Specifies the protection group name of last run.
          nullable: true
          type: string
          x-order: 1
        protectionGroupId:
          description: Specifies the protection group id of last run.
          nullable: true
          type: string
          x-order: 2
        policyName:
          description: Specifies the policy name of last run.
          nullable: true
          type: string
          x-order: 3
        policyId:
          description: Specifies the policy id of last run.
          nullable: true
          type: string
          x-order: 4
        backupRunStatus:
          description: Specifies the status of last local back up run.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          - Paused
          - Pausing
          - Resuming
          nullable: true
          type: string
          x-order: 5
        archivalRunStatus:
          description: Specifies the status of last archival run.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          - Paused
          - Pausing
          - Resuming
          nullable: true
          type: string
          x-order: 6
        replicationRunStatus:
          description: Specifies the status of last replication run.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          - Paused
          - Pausing
          - Resuming
          nullable: true
          type: string
          x-order: 7
        isSlaViolated:
          description: Specifies if the sla is violated in last run.
          nullable: true
          type: boolean
          x-order: 8
      type: object
    ObjectProgressInfo_allOf:
      properties:
        failedAttempts:
          description: Specifies progress for failed attempts of this object.
          items:
            $ref: '#/components/schemas/ProgressTaskInfo'
          nullable: true
          type: array
          x-order: 0
      type: object
    ObjectProtectionSummary_allOf:
      properties:
        errorType:
          description: Specifies the type of error which occurred during creation
            of the object protection.
          enum:
          - InternalError
          - AlreadyExistsError
          nullable: true
          type: string
          x-order: 0
        error:
          description: Specifies the error message if an error occurred during creation
            of the object protection.
          nullable: true
          type: string
          x-order: 1
      type: object
    ObjectSummary_allOf:
      properties:
        objectHash:
          description: Specifies the hash identifier of the object.
          nullable: true
          type: string
          x-order: 0
        objectType:
          description: Specifies the type of the object.
          enum:
          - kCluster
          - kVserver
          - kVolume
          - kVCenter
          - kStandaloneHost
          - kvCloudDirector
          - kFolder
          - kDatacenter
          - kComputeResource
          - kClusterComputeResource
          - kResourcePool
          - kDatastore
          - kHostSystem
          - kVirtualMachine
          - kVirtualApp
          - kStoragePod
          - kNetwork
          - kDistributedVirtualPortgroup
          - kTagCategory
          - kTag
          - kOpaqueNetwork
          - kOrganization
          - kVirtualDatacenter
          - kCatalog
          - kOrgMetadata
          - kStoragePolicy
          - kVirtualAppTemplate
          - kDomain
          - kOutlook
          - kMailbox
          - kUsers
          - kGroups
          - kSites
          - kUser
          - kGroup
          - kSite
          - kApplication
          - kGraphUser
          - kPublicFolders
          - kPublicFolder
          - kTeams
          - kTeam
          - kKeyspace
          - kTable
          - kDatabase
          - kCollection
          - kBucket
          - kNamespace
          - kSCVMMServer
          - kStandaloneCluster
          - kHostGroup
          - kHypervHost
          - kHostCluster
          - kCustomProperty
          - kSubscription
          - kResourceGroup
          - kStorageAccount
          - kStorageKey
          - kStorageContainer
          - kStorageBlob
          - kNetworkSecurityGroup
          - kVirtualNetwork
          - kSubnet
          - kComputeOptions
          - kSnapshotManagerPermit
          - kAvailabilitySet
          - kOVirtManager
          - kHost
          - kStorageDomain
          - kVNicProfile
          - kIAMUser
          - kRegion
          - kAvailabilityZone
          - kEC2Instance
          - kVPC
          - kInstanceType
          - kKeyPair
          - kRDSOptionGroup
          - kRDSParameterGroup
          - kRDSInstance
          - kRDSSubnet
          - kRDSTag
          - kAuroraTag
          - kAuroraCluster
          - kAccount
          - kSubTaskPermit
          - kProject
          - kLabel
          - kMetadata
          - kVPCConnector
          - kPrismCentral
          - kOtherHypervisorCluster
          - kDfsGroup
          - kDfsTopDir
          - kZone
          - kMountPoint
          - kStorageArray
          - kFileSystem
          - kContainer
          - kFilesystem
          - kFileset
          - kViewBox
          - kView
          - kWindowsCluster
          - kOracleRACCluster
          - kOracleAPCluster
          - kService
          - kPVC
          - kPersistentVolumeClaim
          - kPersistentVolume
          - kRootContainer
          - kDAGRootContainer
          - kExchangeNode
          - kExchangeDAGDatabaseCopy
          - kExchangeStandaloneDatabase
          - kExchangeDAG
          - kExchangeDAGDatabase
          - kDomainController
          - kInstance
          - kAAG
          - kAAGRootContainer
          - kRACRootContainer
          - kTableSpace
          - kPDB
          - kObject
          nullable: true
          type: string
          x-order: 1
        logicalSizeBytes:
          description: Specifies the logical size of object in bytes.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        uuid:
          description: Specifies the uuid which is a unique identifier of the object.
          nullable: true
          type: string
          x-order: 3
        globalId:
          description: Specifies the global id which is a unique identifier of the
            object.
          nullable: true
          type: string
          x-order: 4
        protectionType:
          description: Specifies the protection type of the object if any.
          enum:
          - kAgent
          - kNative
          - kSnapshotManager
          - kRDSSnapshotManager
          - kAuroraSnapshotManager
          - kFile
          - kVolume
          nullable: true
          type: string
          x-order: 5
        osType:
          description: Specifies the operating system type of the object.
          enum:
          - kLinux
          - kWindows
          - kAix
          - kSolaris
          - kSapHana
          - kOther
          nullable: true
          type: string
          x-order: 6
        vCenterSummary:
          $ref: '#/components/schemas/ObjectTypeVCenterParams'
        sharepointSiteSummary:
          $ref: '#/components/schemas/SharepointObjectParams'
      type: object
    ObjectWithChildren_allOf:
      properties:
        objects:
          description: Specifies a list of child nodes for this specific node.
          items:
            $ref: '#/components/schemas/ObjectWithChildren'
          type: array
          x-go-name: ObjectNode
          x-order: 0
      type: object
    Office365SourceRegistrationParams_allOf:
      properties:
        office365AppCredentialsList:
          description: Specifies a list of office365 azure application credentials
            needed to authenticate & authorize users for Office 365.
          items:
            $ref: '#/components/schemas/Office365AppCredentials'
          minItems: 1
          type: array
          x-order: 0
        useOAuthForExchangeOnline:
          description: Specifies whether OAuth should be used for authentication in
            case of Exchange Online.
          nullable: true
          type: boolean
          x-order: 1
        proxyHostSourceIdList:
          description: Specifies the list of the protection source id of the windows
            physical host which will be used during the protection and recovery of
            the sites that belong to a office365 domain.
          items:
            format: int64
            type: integer
          nullable: true
          type: array
          x-order: 2
        office365Region:
          description: Specifies the region where Office 365 Exchange environment
            is.
          enum:
          - Default
          - China
          - Germany
          - UsDoD
          - UsGccHigh
          nullable: true
          type: string
          x-order: 3
        o365ObjectsDiscoveryParams:
          $ref: '#/components/schemas/ObjectsDiscoveryParams'
      type: object
    Office365UserMailboxObjectProtectionParams_allOf:
      properties:
        excludeFolders:
          description: Specifies filters to match Outlook folders which should be
            excluded when backing up office365 mailbox source. Two kinds of filters
            are supported. a) prefix which always starts with '/'. b) posix which
            always starts with empty quotes(''). Regular expressions are not supported.
            If not specified, all the mailbox folders will be protected.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
      type: object
    Office365UserOneDriveObjectProtectionParams_allOf:
      properties:
        excludeFolders:
          description: Specifies filters to match OneDrive folders which should be
            excluded when backing up office365 onedrive source. Two kinds of filters
            are supported. a) prefix which always starts with '/'. b) posix which
            always starts with empty quotes(''). Regular expressions are not supported.
            If not specified, all the OneDrive will be protected.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
      type: object
    OracleCloneObject_allOf:
      properties:
        dbVersion:
          description: Specifies the version of the Oracle database.
          nullable: true
          type: string
          x-order: 0
      type: object
    OracleTier_allOf:
      properties:
        tierType:
          description: Specifies the Oracle tier types.
          enum:
          - kOracleTierStandard
          - kOracleTierArchive
          nullable: true
          type: string
          x-order: 0
      required:
      - tierType
      type: object
    PolicyTemplateResponse_allOf:
      properties:
        id:
          description: Specifies a unique Policy id assigned by the Cohesity Cluster.
          nullable: true
          type: string
          x-order: 0
        numLinkedPolicies:
          description: Specifies the number of policies linked to this policy template.
            Only applicable in case of policy template.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        isUsable:
          description: This field is set to true if this policy template qualifies
            to create more policies. If the template is partially filled and can not
            create a working policy then this field will be set to false.
          nullable: true
          type: boolean
          x-order: 2
      type: object
    ProgressTask_allOf:
      properties:
        id:
          description: Specifies the task id of the Progress task.
          nullable: true
          type: string
          x-order: 0
      type: object
    ProtectedObject_allOf:
      properties:
        sourceInfo:
          allOf:
          - $ref: '#/components/schemas/ObjectSummary'
          - type: object
            x-nullable: true
          description: Specifies the Source Object information.
          nullable: true
          type: object
          x-order: 0
        latestSnapshotsInfo:
          description: Specifies the latest snapshot information for every Protection
            Group for a given object.
          items:
            $ref: '#/components/schemas/ObjectSnapshotsInfo'
          nullable: true
          type: array
          x-order: 1
      type: object
    ProtectedObjectBackupConfig_allOf:
      properties:
        isAutoProtectConfig:
          description: Specifies whether or not this configuration is applied to an
            autoprotected object rather than this specific object.
          nullable: true
          type: boolean
          x-order: 0
        autoProtectParentId:
          description: Specifies the parent ID of the object which the backup configuration
            is applied to if this is an auto protect config.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        isPaused:
          description: Specifies whether or not protection has been paused on this
            object.
          nullable: true
          type: boolean
          x-order: 2
        isActive:
          description: Specifies whether or not protection has been deactivated on
            this object.
          nullable: true
          type: boolean
          x-order: 3
      type: object
    ProtectedObjectInfo_allOf:
      properties:
        permissions:
          description: Specifies the list of tenants that have permissions for this
            accessing given protected object.
          items:
            $ref: '#/components/schemas/Tenant'
          nullable: true
          type: array
          x-order: 0
        objectBackupConfiguration:
          $ref: '#/components/schemas/ProtectedObjectBackupConfig'
        protectionGroupConfigurations:
          description: Specifies the protection info associated with every object.
            There can be multiple instances of protection info since the same object
            can be protected in multiple protection groups.
          items:
            $ref: '#/components/schemas/ProtectedObjectGroupBackupConfig'
          nullable: true
          type: array
          x-order: 2
        lastRun:
          $ref: '#/components/schemas/ObjectProtectionRunSummary'
      type: object
    ProtectionGroup_allOf:
      properties:
        vmwareParams:
          $ref: '#/components/schemas/VmwareProtectionGroupParams'
        acropolisParams:
          $ref: '#/components/schemas/AcropolisProtectionGroupParams'
        kubernetesParams:
          $ref: '#/components/schemas/KubernetesProtectionGroupParams'
        mssqlParams:
          $ref: '#/components/schemas/MSSQLProtectionGroupParams'
        oracleParams:
          $ref: '#/components/schemas/OracleProtectionGroupParams'
        viewParams:
          $ref: '#/components/schemas/ViewProtectionGroupParams'
        pureParams:
          $ref: '#/components/schemas/PureProtectionGroupParams'
        nimbleParams:
          $ref: '#/components/schemas/NimbleProtectionGroupParams'
        hypervParams:
          $ref: '#/components/schemas/HyperVProtectionGroupParams'
        awsParams:
          $ref: '#/components/schemas/AwsProtectionGroupParams'
        azureParams:
          $ref: '#/components/schemas/AzureProtectionGroupParams'
        gcpParams:
          $ref: '#/components/schemas/GcpProtectionGroupParams'
        kvmParams:
          $ref: '#/components/schemas/KvmProtectionGroupParams'
        physicalParams:
          $ref: '#/components/schemas/PhysicalProtectionGroupParams'
        adParams:
          $ref: '#/components/schemas/ADProtectionGroupParams'
        office365Params:
          $ref: '#/components/schemas/Office365ProtectionGroupParams'
        netappParams:
          $ref: '#/components/schemas/NetappProtectionGroupParams'
        genericNasParams:
          $ref: '#/components/schemas/GenericNasProtectionGroupParams'
        isilonParams:
          $ref: '#/components/schemas/IsilonProtectionGroupParams'
        flashbladeParams:
          $ref: '#/components/schemas/FlashbladeProtectionGroupParams'
        gpfsParams:
          $ref: '#/components/schemas/GpfsProtectionGroupParams'
        elastifileParams:
          $ref: '#/components/schemas/ElastifileProtectionGroupParams'
        remoteAdapterParams:
          $ref: '#/components/schemas/RemoteAdapterProtectionGroupParams'
        exchangeParams:
          $ref: '#/components/schemas/ExchangeProtectionGroupParams'
        cassandraParams:
          $ref: '#/components/schemas/CassandraProtectionGroupParams'
        couchbaseParams:
          $ref: '#/components/schemas/NoSqlProtectionGroupParams'
        mongodbParams:
          $ref: '#/components/schemas/MongoDBProtectionGroupParams'
        hiveParams:
          $ref: '#/components/schemas/NoSqlProtectionGroupParams'
        hdfsParams:
          $ref: '#/components/schemas/HdfsProtectionGroupParams'
        hbaseParams:
          $ref: '#/components/schemas/NoSqlProtectionGroupParams'
        udaParams:
          $ref: '#/components/schemas/UdaProtectionGroupParams'
      type: object
    ProtectionPolicyRequest_allOf:
      properties:
        templateId:
          description: Specifies the parent policy template id to which the policy
            is linked to.
          nullable: true
          type: string
          x-order: 0
      type: object
    ProtectionPolicyResponse_allOf:
      properties:
        id:
          description: Specifies a unique Policy id assigned by the Cohesity Cluster.
          nullable: true
          type: string
          x-order: 0
        templateId:
          description: Specifies the parent policy template id to which the policy
            is linked to. This field is set only when policy is created from template.
          nullable: true
          type: string
          x-order: 1
        isUsable:
          description: This field is set to true if the linked policy which is internally
            created from a policy templates qualifies as usable to create more policies
            on the cluster. If the linked policy is partially filled and can not create
            a working policy then this field will be set to false. In case of normal
            policy created on the cluster, this field wont be populated.
          nullable: true
          type: boolean
          x-order: 2
        isReplicated:
          description: This field is set to true when policy is the replicated policy.
          nullable: true
          type: boolean
          x-order: 3
        numProtectionGroups:
          description: Specifies the number of protection groups using the protection
            policy.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        numProtectedObjects:
          description: Specifies the number of protected objects using the protection
            policy.
          format: int64
          nullable: true
          type: integer
          x-order: 5
      type: object
    PublicFolderItem_allOf:
      properties:
        type:
          description: Specifies the Public folder item type.
          nullable: true
          type: string
          x-order: 0
          x-cohesity-enum: indexed_public_folder_type
        id:
          description: Specifies the id of the indexed item.
          nullable: true
          type: string
          x-order: 1
        subject:
          description: Specifies the subject of the indexed item.
          nullable: true
          type: string
          x-order: 2
        hasAttachments:
          description: Specifies whether the item has any attachments
          nullable: true
          type: boolean
          x-order: 3
        itemClass:
          description: Specifies the item class of the indexed item.
          nullable: true
          type: string
          x-order: 4
        receivedTimeSecs:
          description: Specifies the Unix timestamp epoch in seconds at which this
            item is received.
          format: int64
          nullable: true
          type: integer
          x-order: 5
        itemSize:
          description: Specifies the size in bytes for the indexed item.
          format: int64
          nullable: true
          type: integer
          x-order: 6
        parentFolderId:
          description: Specifies the id of parent folder the indexed item.
          nullable: true
          type: string
          x-order: 7
      type: object
    RecoverCassandraParams_allOf:
      properties:
        snapshots:
          description: Specifies the local snapshot ids and other details of the Objects
            to be recovered.
          items:
            $ref: '#/components/schemas/RecoverCassandraSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        suffix:
          description: A suffix that is to be applied to all recovered objects.
          nullable: true
          type: string
          x-order: 1
        selectedDataCenters:
          description: Selected Data centers for this cluster.
          items:
            type: string
          type: array
          x-order: 2
        stagingDirectoryList:
          description: Specifies the directory on the primary to copy the files which
            are to be uploaded using destination sstableloader.
          items:
            type: string
          type: array
          x-order: 3
      required:
      - snapshots
      type: object
    RecoverCassandraSnapshotParams_allOf:
      properties:
        objects:
          description: Specifies details of objects to be recovered.
          items:
            $ref: '#/components/schemas/RecoverCassandraNoSqlObjectParams'
          nullable: true
          type: array
          x-order: 0
      type: object
    RecoverCouchbaseParams_allOf:
      properties:
        snapshots:
          description: Specifies the local snapshot ids of the Objects to be recovered.
          items:
            $ref: '#/components/schemas/RecoverCouchbaseSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        suffix:
          description: A suffix that is to be applied to all recovered objects.
          nullable: true
          type: string
          x-order: 1
        filterDocumentsParams:
          $ref: '#/components/schemas/FilterDocumentsParams'
        appendDocuments:
          description: If set to true, docuements from the bucket being recovered
            will be appended into the bucket at the destination.
          nullable: true
          type: boolean
          x-order: 3
        ddlOnlyRecovery:
          description: Set to true to recover only the bucket configurations. No documents
            will be recovered.
          nullable: true
          type: boolean
          x-order: 4
        overwriteUsers:
          description: If set to true existing users will be replaced with users from
            the bucket being recovered.
          nullable: true
          type: boolean
          x-order: 5
      required:
      - filterDocumentsParams
      - snapshots
      type: object
    RecoverCouchbaseSnapshotParams_allOf:
      properties:
        objects:
          description: Specifies details of objects to be recovered.
          items:
            $ref: '#/components/schemas/RecoverCouchbaseNoSqlObjectParams'
          nullable: true
          type: array
          x-order: 0
      type: object
    RecoverExchangeAppSnapshotParams_allOf:
      properties:
        appObjects:
          description: Specifies the list of params for all the databases which have
            to be recovered.
          items:
            $ref: '#/components/schemas/ExchangeRecoverDatabaseParams'
          nullable: true
          type: array
          x-order: 0
      type: object
    RecoverHbaseParams_allOf:
      properties:
        snapshots:
          description: Specifies the local snapshot ids of the Objects to be recovered.
          items:
            $ref: '#/components/schemas/RecoverHbaseSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        suffix:
          description: A suffix that is to be applied to all recovered objects.
          nullable: true
          type: string
          x-order: 1
      required:
      - snapshots
      type: object
    RecoverHbaseSnapshotParams_allOf:
      properties:
        objects:
          description: Specifies details of objects to be recovered.
          items:
            $ref: '#/components/schemas/RecoverHbaseNoSqlObjectParams'
          nullable: true
          type: array
          x-order: 0
      type: object
    RecoverHdfsParams_allOf:
      properties:
        snapshots:
          description: Specifies the local snapshot ids of the Objects to be recovered.
          items:
            $ref: '#/components/schemas/RecoverHdfsSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        targetDirectory:
          description: Specifies the target directory where files and folders are
            to be recovered. If not set, this will be taken as '/'
          nullable: true
          type: string
          x-order: 1
      required:
      - snapshots
      type: object
    RecoverHdfsSnapshotParams_allOf:
      properties:
        objects:
          description: Specifies details of objects to be recovered.
          items:
            $ref: '#/components/schemas/RecoverHdfsNoSqlObjectParams'
          nullable: true
          type: array
          x-order: 0
      type: object
    RecoverHiveParams_allOf:
      properties:
        snapshots:
          description: Specifies the local snapshot ids of the Objects to be recovered.
          items:
            $ref: '#/components/schemas/RecoverHiveSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        suffix:
          description: A suffix that is to be applied to all recovered objects.
          nullable: true
          type: string
          x-order: 1
      required:
      - snapshots
      type: object
    RecoverHiveSnapshotParams_allOf:
      properties:
        objects:
          description: Specifies details of objects to be recovered.
          items:
            $ref: '#/components/schemas/RecoverHiveNoSqlObjectParams'
          nullable: true
          type: array
          x-order: 0
      type: object
    RecoverMongodbParams_allOf:
      properties:
        snapshots:
          description: Specifies the local snapshot ids of the Objects to be recovered.
          items:
            $ref: '#/components/schemas/RecoverMongodbSnapshotParams'
          nullable: true
          type: array
          x-order: 0
        suffix:
          description: A suffix that is to be applied to all recovered objects.
          nullable: true
          type: string
          x-order: 1
      required:
      - snapshots
      type: object
    RecoverMongodbSnapshotParams_allOf:
      properties:
        objects:
          description: Specifies details of objects to be recovered.
          items:
            $ref: '#/components/schemas/RecoverMongodbNoSqlObjectParams'
          nullable: true
          type: array
          x-order: 0
      type: object
    RecoverOracleDbSnapshotParams_allOf:
      properties:
        instantRecoveryInfo:
          allOf:
          - $ref: '#/components/schemas/RecoveryOracleTaskInfo'
          - type: object
            x-nullable: true
          description: Specifies the info about instant recovery. This is only applicable
            for RecoverOracle.
          nullable: true
          type: object
          x-order: 0
      type: object
    RecoverSqlAppParams_allOf:
      properties:
        targetEnvironment:
          description: Specifies the environment of the recovery target. The corresponding
            params below must be filled out.
          enum:
          - kSQL
          type: string
          x-order: 0
        sqlTargetParams:
          $ref: '#/components/schemas/SqlTargetParamsForRecoverSqlApp'
      required:
      - targetEnvironment
      type: object
    RecoverTarget_allOf:
      properties:
        parentSourceId:
          description: Specifies the id of the parent source of the target.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 0
        parentSourceName:
          description: Specifies the name of the parent source of the target.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
      type: object
    RecoverUdaSnapshotParams_allOf:
      properties:
        objects:
          description: Specifies the local snapshot ids and other details of the objects
            to be recovered.
          items:
            $ref: '#/components/schemas/RecoverUdaObjectParams'
          nullable: true
          type: array
          x-order: 0
      type: object
    RecoverVmwareChildSnapshotParams_allOf:
      properties:
        instantRecoveryInfo:
          allOf:
          - $ref: '#/components/schemas/RecoveryTaskInfo'
          - type: object
            x-nullable: true
          description: Specifies the info about instant recovery. This is only applicable
            for RecoverVm.
          nullable: true
          type: object
          x-order: 0
        datastoreMigrationInfo:
          allOf:
          - $ref: '#/components/schemas/RecoveryTaskInfo'
          - type: object
            x-nullable: true
          description: Specifies the info about datastore migration. This is only
            applicable for RecoverVm.
          nullable: true
          type: object
          x-order: 1
      type: object
    RecoverVmwareSnapshotParams_allOf:
      properties:
        childSnapshots:
          description: Specifies optional information about any child snapshots of
            this object. For example a VCD snapshot may have child VM information
            populated here.
          items:
            $ref: '#/components/schemas/RecoverVmwareChildSnapshotParams'
          type: array
          x-order: 0
      type: object
    Recovery_allOf:
      properties:
        vmwareParams:
          $ref: '#/components/schemas/RecoverVmwareParams'
        awsParams:
          $ref: '#/components/schemas/RecoverAwsParams'
        gcpParams:
          $ref: '#/components/schemas/RecoverGcpParams'
        azureParams:
          $ref: '#/components/schemas/RecoverAzureParams'
        kvmParams:
          $ref: '#/components/schemas/RecoverKvmParams'
        acropolisParams:
          $ref: '#/components/schemas/RecoverAcropolisParams'
        mssqlParams:
          $ref: '#/components/schemas/RecoverSqlParams'
        netappParams:
          $ref: '#/components/schemas/RecoverNetappParams'
        genericNasParams:
          $ref: '#/components/schemas/RecoverGenericNasParams'
        isilonParams:
          $ref: '#/components/schemas/RecoverIsilonParams'
        flashbladeParams:
          $ref: '#/components/schemas/RecoverFlashbladeParams'
        elastifileParams:
          $ref: '#/components/schemas/RecoverElastifileParams'
        gpfsParams:
          $ref: '#/components/schemas/RecoverGpfsParams'
        physicalParams:
          $ref: '#/components/schemas/RecoverPhysicalParams'
        hypervParams:
          $ref: '#/components/schemas/RecoverHyperVParams'
        exchangeParams:
          $ref: '#/components/schemas/RecoverExchangeParams'
        cassandraParams:
          $ref: '#/components/schemas/CassandraParams'
        udaParams:
          $ref: '#/components/schemas/UdaParams'
        couchbaseParams:
          $ref: '#/components/schemas/CouchbaseParams'
        hbaseParams:
          $ref: '#/components/schemas/HbaseParams'
        hdfsParams:
          $ref: '#/components/schemas/HdfsParams'
        hiveParams:
          $ref: '#/components/schemas/HiveParams'
        mongodbParams:
          $ref: '#/components/schemas/MongodbParams'
        pureParams:
          $ref: '#/components/schemas/RecoverPureParams'
        office365Params:
          $ref: '#/components/schemas/RecoverO365Params'
        kubernetesParams:
          $ref: '#/components/schemas/RecoverKubernetesParams'
        oracleParams:
          $ref: '#/components/schemas/RecoverOracleParams'
        viewParams:
          $ref: '#/components/schemas/RecoverViewParams'
      type: object
    RemoteAdapterHost_allOf:
      properties:
        incrementalBackupScript:
          $ref: '#/components/schemas/CommonPreBackupScriptParams'
        fullBackupScript:
          $ref: '#/components/schemas/CommonPreBackupScriptParams'
        logBackupScript:
          $ref: '#/components/schemas/CommonPreBackupScriptParams'
      type: object
    RemoteStorageInfo_allOf:
      properties:
        flashbladeParams:
          $ref: '#/components/schemas/FlashbladeParams'
      type: object
    ReplicationConfig_allOf:
      properties:
        targetType:
          description: Specifies the type of target to which replication need to be
            performed.
          enum:
          - RemoteCluster
          - AWS
          - Azure
          type: string
          x-order: 0
        remoteTargetConfig:
          $ref: '#/components/schemas/RemoteTargetConfig'
        awsTargetConfig:
          $ref: '#/components/schemas/AWSTargetConfig'
        azureTargetConfig:
          $ref: '#/components/schemas/AzureTargetConfig'
      required:
      - targetType
      type: object
    ReplicationTargetResult_allOf:
      properties:
        startTimeUsecs:
          description: Specifies the start time of replication in Unix epoch Timestamp(in
            microseconds) for a target.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        endTimeUsecs:
          description: Specifies the end time of replication in Unix epoch Timestamp(in
            microseconds) for a target.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        queuedTimeUsecs:
          description: Specifies the time when the replication is queued for schedule
            in Unix epoch Timestamp(in microseconds) for a target.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        status:
          description: Status of the replication for a target. 'Running' indicates
            that the run is still running. 'Canceled' indicates that the run has been
            canceled. 'Canceling' indicates that the run is in the process of being
            canceled. 'Paused' indicates that the ongoing run has been paused. 'Failed'
            indicates that the run has failed. 'Missed' indicates that the run was
            unable to take place at the scheduled time because the previous run was
            still happening. 'Succeeded' indicates that the run has finished successfully.
            'SucceededWithWarning' indicates that the run finished successfully, but
            there were some warning messages.
          enum:
          - Accepted
          - Running
          - Canceled
          - Canceling
          - Failed
          - Missed
          - Succeeded
          - SucceededWithWarning
          - OnHold
          - Paused
          - Pausing
          - Resuming
          nullable: true
          type: string
          x-order: 3
        message:
          description: Message about the replication run.
          nullable: true
          type: string
          x-order: 4
        percentageCompleted:
          description: Specifies the progress in percentage.
          format: int32
          nullable: true
          type: integer
          x-order: 5
        stats:
          $ref: '#/components/schemas/ReplicationDataStats'
        isManuallyDeleted:
          description: Specifies whether the snapshot is deleted manually.
          nullable: true
          type: boolean
          x-order: 7
        expiryTimeUsecs:
          description: Specifies the expiry time of attempt in Unix epoch Timestamp
            (in microseconds) for an object.
          format: int64
          nullable: true
          type: integer
          x-order: 8
        replicationTaskId:
          description: Task UID for a replication protection run. This is for tasks
            that are replicated from another cluster.
          nullable: true
          type: string
          x-order: 9
        entriesChanged:
          description: Specifies the number of metadata actions completed during the
            protection run.
          format: int32
          nullable: true
          type: integer
          x-order: 10
        isInBound:
          description: Specifies the direction of the replication. If the snapshot
            is replicated to this cluster, then isInBound is true. If the snapshot
            is replicated from this cluster to another cluster, then isInBound is
            false.
          nullable: true
          type: boolean
          x-order: 11
        dataLockConstraints:
          $ref: '#/components/schemas/DataLockConstraints'
        onLegalHold:
          description: Specifies the legal hold status for a replication target.
          nullable: true
          type: boolean
          x-order: 13
      type: object
    ReplicationTargetSummaryInfo_allOf:
      properties:
        awsTargetConfig:
          $ref: '#/components/schemas/AWSTargetConfig'
        azureTargetConfig:
          $ref: '#/components/schemas/AzureTargetConfig'
      type: object
    Role_allOf:
      properties:
        label:
          description: Specifies the Role label.
          nullable: true
          type: string
          x-order: 0
        createdTimestampMsecs:
          description: Specifies the timestamp when the Role is created in milliseconds.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        lastUpdatedTimestampMsecs:
          description: Specifies the timestamp when the Role is last updated in milliseconds.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        isUserCreatedRole:
          description: Specifies if the Role is created by user.
          nullable: true
          type: boolean
          x-order: 3
        tenantIds:
          description: Specifies the list of tenant ids who have access to this Role.
          items:
            type: string
          nullable: true
          type: array
          x-order: 4
      type: object
    RunNowActionObjectLevelParams_allOf:
      properties:
        takeLocalSnapshotOnly:
          description: If sepcified as true then runNow will only take local snapshot
            ignoring all other targets such as replication, archivals etc. If not
            sepcified or specified as false then runNow will follow the policy settings.
          nullable: true
          type: boolean
          x-order: 0
        backupType:
          description: Specifies the backup type should be used for RunNow action.
          enum:
          - kRegular
          - kFull
          - kLog
          - kSystem
          - kHydrateCDP
          type: string
          x-order: 1
      type: object
    ScvmmRegistrationParams_allOf:
      properties:
        agentEndpoint:
          description: Specifies the agent endpoint if it is different from the source
            endpoint.
          nullable: true
          type: string
          x-order: 0
        throttlingParams:
          $ref: '#/components/schemas/ThrottlingParams'
      type: object
    SearchEmailRequestParams_allOf:
      properties:
        o365Params:
          $ref: '#/components/schemas/O365SearchEmailsRequestParams'
      type: object
    SearchIndexedObjectsRequest_allOf:
      properties:
        emailParams:
          $ref: '#/components/schemas/SearchEmailRequestParams'
        fileParams:
          $ref: '#/components/schemas/SearchFileRequestParams'
        cassandraParams:
          $ref: '#/components/schemas/CassandraOnPremSearchParams'
        couchbaseParams:
          $ref: '#/components/schemas/CouchBaseOnPremSearchParams'
        hbaseParams:
          $ref: '#/components/schemas/HbaseOnPremSearchParams'
        hiveParams:
          $ref: '#/components/schemas/HiveOnPremSearchParams'
        mongodbParams:
          $ref: '#/components/schemas/MongoDbOnPremSearchParams'
        hdfsParams:
          $ref: '#/components/schemas/HDFSOnPremSearchParams'
        exchangeParams:
          $ref: '#/components/schemas/SearchExchangeObjectsRequestParams'
        publicFolderParams:
          $ref: '#/components/schemas/SearchPublicFolderRequestParams'
        msTeamsParams:
          $ref: '#/components/schemas/SearchMsTeamsRequestParams'
        sharepointParams:
          $ref: '#/components/schemas/SearchDocumentLibraryRequestParams'
      type: object
    SearchIndexedObjectsResponseBody_allOf:
      properties:
        emails:
          description: Specifies the indexed emails and email folders.
          items:
            $ref: '#/components/schemas/Email'
          type: array
        files:
          description: Specifies the indexed files.
          items:
            $ref: '#/components/schemas/File'
          type: array
        cassandraObjects:
          description: Specifies the indexed Cassandra objects.
          items:
            $ref: '#/components/schemas/CassandraIndexedObject'
          type: array
        couchbaseObjects:
          description: Specifies the indexed Couchbase objects.
          items:
            $ref: '#/components/schemas/CouchbaseIndexedObject'
          type: array
        hbaseObjects:
          description: Specifies the indexed Hbase objects.
          items:
            $ref: '#/components/schemas/HbaseIndexedObject'
          type: array
        hiveObjects:
          description: Specifies the indexed Hive objects.
          items:
            $ref: '#/components/schemas/HiveIndexedObject'
          type: array
        mongoObjects:
          description: Specifies the indexed Mongo objects.
          items:
            $ref: '#/components/schemas/MongoIndexedObject'
          type: array
        hdfsObjects:
          description: Specifies the indexed HDFS objects.
          items:
            $ref: '#/components/schemas/HDFSIndexedObject'
          type: array
        exchangeObjects:
          description: Specifies the indexed HDFS objects.
          items:
            $ref: '#/components/schemas/ExchangeIndexedObject'
          type: array
        publicFolderItems:
          description: Specifies the indexed Public folder items.
          items:
            $ref: '#/components/schemas/PublicFolderItem'
          type: array
        sharepointItems:
          description: Specifies the indexed Sharepoint items.
          items:
            $ref: '#/components/schemas/SharepointItem'
          type: array
      type: object
    SearchObject_allOf:
      properties:
        isDeleted:
          description: Specifies whether the object is deleted. Deleted objects can't
            be protected but can be recovered.
          nullable: true
          type: boolean
          x-order: 0
        sourceInfo:
          allOf:
          - $ref: '#/components/schemas/Object'
          - type: object
            x-nullable: true
          description: Specifies the Source Object information.
          type: object
          x-order: 1
        objectProtectionInfos:
          description: Specifies the object info on each cluster.
          items:
            $ref: '#/components/schemas/ObjectProtectionInfo'
          nullable: true
          type: array
          x-order: 2
      type: object
    Share_allOf:
      properties:
        name:
          description: Specifies the Share name.
          nullable: true
          type: string
          x-order: 0
        viewName:
          description: Specifies the View name of this Share.
          nullable: true
          type: string
          x-order: 1
        viewPath:
          description: Specifies the View path of this Share.
          nullable: true
          type: string
          x-order: 2
        nfsMountPaths:
          description: Specifies the path for mounting this Share as an NFS share.
            If Kerberos Provider has multiple hostaliases, each host alias has its
            own path.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
          x-order: 3
        smbMountPaths:
          description: Specifies the possible paths that can be used to mount this
            Share as a SMB share. If Active Directory has multiple account names,
            each machine account has its own path.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
          x-order: 4
        s3AccessPath:
          description: Specifies the path to access this Share as an S3 share.
          nullable: true
          readOnly: true
          type: string
          x-order: 5
        tenantId:
          description: Specifies the tenant id who has access to this Share.
          nullable: true
          readOnly: true
          type: string
          x-order: 6
      required:
      - name
      - viewName
      - viewPath
      type: object
    SnapshotTagInfo_allOf:
      properties:
        runIds:
          description: Specifies runs the tags are applied to.
          items:
            type: string
          nullable: true
          type: array
          x-order: 0
      type: object
    Source_allOf:
      properties:
        lastRefreshedTime:
          description: Time at which the data about this protection source was last
            refreshed.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        registrationId:
          description: Id of the registration as part of which this source was discovered.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      type: object
    SourceConnectionRequestParams_allOf:
      properties:
        cassandraConnectionParams:
          $ref: '#/components/schemas/CassandraConnectionParams'
        hiveConnectionParams:
          $ref: '#/components/schemas/HadoopConnectionParams'
        hbaseConnectionParams:
          $ref: '#/components/schemas/HadoopConnectionParams'
        hdfsConnectionParams:
          $ref: '#/components/schemas/HadoopConnectionParams'
        mssqlConnectionParams:
          $ref: '#/components/schemas/MssqlConnectionParams'
        oracleConnectionParams:
          $ref: '#/components/schemas/OracleConnectionParams'
        vmwareConnectionParams:
          $ref: '#/components/schemas/VmwareConnectionParams'
      type: object
    SourceHierarchyObjectSummary_allOf:
      properties:
        parentId:
          description: Specifies the ID of the direct parent of this object in the
            source hierarchy.
          format: int64
          nullable: true
          type: integer
          x-order: 0
      type: object
    SourceRegistration_allOf:
      properties:
        vmwareParams:
          $ref: '#/components/schemas/VmwareSourceRegistrationParams'
        physicalParams:
          $ref: '#/components/schemas/PhysicalSourceRegistrationParams'
        genericNasParams:
          $ref: '#/components/schemas/GenericNasRegistrationParams'
        isilonParams:
          $ref: '#/components/schemas/IsilonRegistrationParams'
        netappParams:
          $ref: '#/components/schemas/NetappRegistrationParams'
        elastifileParams:
          $ref: '#/components/schemas/ElastifileRegistrationParams'
        flashbladeParams:
          $ref: '#/components/schemas/FlashbladeRegistrationParams'
        gpfsParams:
          $ref: '#/components/schemas/GpfsRegistrationParams'
        cassandraParams:
          $ref: '#/components/schemas/CassandraSourceRegistrationParams'
        mongodbParams:
          $ref: '#/components/schemas/MongoDBSourceRegistrationParams'
        couchbaseParams:
          $ref: '#/components/schemas/CouchbaseSourceRegistrationParams'
        hdfsParams:
          $ref: '#/components/schemas/HdfsSourceRegistrationParams'
        hbaseParams:
          $ref: '#/components/schemas/HbaseSourceRegistrationParams'
        hiveParams:
          $ref: '#/components/schemas/HiveSourceRegistrationParams'
        udaParams:
          $ref: '#/components/schemas/UdaSourceRegistrationParams'
        office365Params:
          $ref: '#/components/schemas/Office365SourceRegistrationParams'
        awsParams:
          $ref: '#/components/schemas/AwsSourceRegistrationParams'
        hypervParams:
          $ref: '#/components/schemas/HyperVSourceRegistrationParams'
      type: object
    TargetMailboxParam_allOf:
      properties:
        targetFolderPath:
          description: Specifies the path to the target folder.
          nullable: true
          type: string
          x-order: 0
        parentSourceId:
          description: Specifies the id of the domain for alternate domain recovery.
          format: int64
          nullable: true
          type: integer
          x-order: 1
      required:
      - targetFolderPath
      type: object
    TargetSiteParam_allOf:
      properties:
        targetDocLibName:
          description: Specifies the name for the target doc lib.
          nullable: true
          type: string
          x-order: 0
        targetDocLibPrefix:
          description: Specifies the prefix for the target doc lib.
          nullable: true
          type: string
          x-order: 1
      type: object
    TdmCloneTaskRequestParams_allOf:
      properties:
        oracleParams:
          $ref: '#/components/schemas/OracleCloneTask'
      type: object
    TdmObject_allOf:
      properties:
        oracleParams:
          $ref: '#/components/schemas/OracleCloneObject'
      type: object
    TdmObjectTimelineEvent_allOf:
      properties:
        cloneParams:
          $ref: '#/components/schemas/TdmCloneTaskResponseParams'
        snapshotParams:
          $ref: '#/components/schemas/TdmSnapshot'
      type: object
    TdmRefreshTaskResponseParams_allOf:
      properties:
        oracleParams:
          $ref: '#/components/schemas/OracleCloneRefreshTask'
      type: object
    TdmSnapshot_allOf:
      properties:
        id:
          description: Specifies the ID of the snapshot.
          nullable: true
          type: string
          x-order: 0
        isAutomated:
          description: Specifies whether the snapshot was taken automatically by the
            scheduler.
          nullable: true
          type: boolean
          x-order: 1
        createdAt:
          description: Specifies the time (in usecs from epoch) when the snapshot
            was created.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        updatedAt:
          description: Specifies the time (in usecs from epoch) when the snapshot
            was last updated.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        createdByUser:
          allOf:
          - $ref: '#/components/schemas/User'
          description: Specifies the details of the user, who created the snapshot.
            This will be null for snapshots, that are taken by system, such as a scheduler.
          nullable: true
          type: object
          x-order: 4
        updatedByUser:
          allOf:
          - $ref: '#/components/schemas/User'
          description: Specifies the details of the user, who last updated the snapshot.
          nullable: true
          type: object
          x-order: 5
      required:
      - id
      type: object
    TdmSnapshotTaskParams_allOf:
      properties:
        cloneId:
          description: Specifies the ID of the clone.
          nullable: true
          type: string
          x-order: 0
      required:
      - cloneId
      type: object
    TdmTask_allOf:
      properties:
        cloneParams:
          $ref: '#/components/schemas/TdmCloneTaskResponseParams'
        refreshParams:
          $ref: '#/components/schemas/TdmRefreshTaskResponseParams'
      type: object
    TieringAwsExternalTargetParams_allOf:
      properties:
        awsS3StandardParams:
          $ref: '#/components/schemas/AwsS3StandardParams'
        awsS3IntelligentParams:
          $ref: '#/components/schemas/AwsS3IntelligentParams'
      type: object
    TieringAzureExternalTargetParams_allOf:
      properties:
        hotBlobParams:
          $ref: '#/components/schemas/AzureHotBlobParams'
      type: object
    TieringExternalTargetParams_allOf:
      properties:
        azureParams:
          $ref: '#/components/schemas/TieringAzureExternalTargetParams'
        gcpParams:
          $ref: '#/components/schemas/TieringGcpExternalTargetParams'
        awsParams:
          $ref: '#/components/schemas/TieringAwsExternalTargetParams'
        oracleParams:
          $ref: '#/components/schemas/TieringOracleExternalTargetParams'
        s3CompParams:
          $ref: '#/components/schemas/TieringS3CompExternalTargetParams'
      type: object
    TieringGcpExternalTargetParams_allOf:
      properties:
        storageClass:
          description: Specifies the GCP External Target class.
          enum:
          - GCPStandard
          nullable: true
          type: string
          x-order: 0
      required:
      - storageClass
      type: object
    TieringOracleExternalTargetParams_allOf:
      properties:
        storageClass:
          description: Specifies the Oracle External Target class.
          enum:
          - OracleObjectStorage
          nullable: true
          type: string
          x-order: 0
      required:
      - storageClass
      type: object
    UdaSourceRegistrationParams_credentials:
      description: 'Specifies credentials to access the Universal Data Adapter source.
        For e.g.: To perform backup and recovery tasks with Oracle Recovery Manager
        (RMAN), specify credentials for a user having ''SYSDBA'' or ''SYSBACKUP''
        administrative privilege.'
      properties:
        password:
          description: Specifies the password to access target entity.
          nullable: true
          type: string
          x-order: 0
        username:
          description: Specifies the username to access target entity.
          nullable: true
          type: string
          x-order: 1
      type: object
      x-order: 2
    UdaSourceRegistrationParams_viewParams:
      description: Specifies optional configuration parameters for the mounted view.
      nullable: true
      properties:
        mountDir:
          description: This field is deprecated and its value will be ignored. It
            was used to specify the absolute path on the host where the Cohesity view
            would be mounted. This is now controlled by the agent configuration and
            is common for all the Universal Data Adapter sources.
          nullable: true
          type: string
          x-order: 0
      type: object
      x-order: 5
    UnprotectActionObjectLevelParams_allOf:
      properties:
        deleteAllSnapshots:
          description: Specifies whether to delete all snapshots along with unprotecting
            object protection. If set to true, all snapshots will be deleted and no
            more recoverable.
          nullable: true
          type: boolean
          x-order: 0
        forceUnprotect:
          description: If specified as true then it will cancel the ongoing runs and
            immediatly unprotect.
          nullable: true
          type: boolean
          x-order: 1
      type: object
    UpdateActiveDirectoryRequest_allOf:
      properties:
        activeDirectoryAdminParams:
          allOf:
          - $ref: '#/components/schemas/ActiveDirectoryAdminParams'
          - type: object
            x-nullable: true
          description: Specifies the params of a user with administrative privilege
            of this Active Directory. This field is mandatory if machine accounts
            are updated.
          nullable: true
          type: object
          x-order: 0
        overwriteMachineAccounts:
          description: Specifies if specified machine accounts should overwrite existing
            machine accounts.
          nullable: true
          type: boolean
          x-order: 1
        idMappingParams:
          allOf:
          - $ref: '#/components/schemas/IdMappingParams'
          - type: object
            x-nullable: true
          description: Specifies the params of the user id mapping info of an Active
            Directory.
          nullable: true
          type: object
          x-order: 2
        transitiveAdTrustLevelLimit:
          description: Specifies level of transitive Active Directory trust domains
            to be used.
          format: int32
          nullable: true
          type: integer
          x-order: 3
      type: object
    UpdateMcmSignupRequest_allOf:
      properties:
        status:
          description: Specifies the status of the MCM signup request.
          enum:
          - Open
          - InProgress
          - Denied
          - Finished
          nullable: true
          type: string
          x-order: 0
      type: object
    UpdateViewParam_allOf:
      properties:
        name:
          description: Specifies the name of the View.
          nullable: true
          type: string
          x-order: 0
        category:
          description: Specifies the category of the View.
          enum:
          - BackupTarget
          - FileServices
          - ObjectServices
          nullable: true
          type: string
          x-order: 1
        protocolAccess:
          description: Specifies the supported Protocols for the View.
          items:
            $ref: '#/components/schemas/ViewProtocol'
          nullable: true
          type: array
          x-order: 2
        qos:
          allOf:
          - $ref: '#/components/schemas/QoS'
          - type: object
            x-nullable: true
          description: Specifies the Quality of Service (QoS) Policy for the View.
          type: object
          x-order: 3
        overrideGlobalSubnetWhitelist:
          description: |-
            Specifies whether view level client subnet whitelist overrides cluster and
            global setting.
          nullable: true
          type: boolean
          x-order: 4
        subnetWhitelist:
          description: |-
            Array of Subnets.
            Specifies a list of Subnets with IP addresses that have permissions to
            access the View. (Overrides or extends the Subnets specified at the global
            Cohesity Cluster level.)
          items:
            $ref: '#/components/schemas/Subnet'
          nullable: true
          type: array
          x-order: 5
        overrideGlobalNetgroupWhitelist:
          description: |-
            Specifies whether view level client netgroup whitelist overrides cluster and
            global setting.
          nullable: true
          type: boolean
          x-order: 6
        netgroupWhitelist:
          allOf:
          - $ref: '#/components/schemas/NisNetgroups'
          - type: object
            x-nullable: true
          description: |-
            Array of Netgroups.
            Specifies a list of netgroups with domains that have permissions to
            access the View. (Overrides or extends the Netgroup specified at the global
            Cohesity Cluster level.)
          type: object
          x-order: 7
        securityMode:
          description: |-
            Specifies the security mode used for this view.
            Currently we support the following modes: Native, Unified and NTFS style.
            'NativeMode' indicates a native security mode.
            'UnifiedMode' indicates a unified security mode.
            'NtfsMode' indicates a NTFS style security mode.
          enum:
          - NativeMode
          - UnifiedMode
          - NtfsMode
          nullable: true
          type: string
          x-order: 8
        storagePolicyOverride:
          allOf:
          - $ref: '#/components/schemas/StoragePolicyOverride'
          - type: object
            x-nullable: true
          description: |-
            Specifies if inline deduplication and compression settings inherited from
            the Storage Domain (View Box) should be disabled for this View.
          type: object
          x-order: 9
        logicalQuota:
          allOf:
          - $ref: '#/components/schemas/QuotaPolicy'
          - type: object
            x-nullable: true
          description: |-
            Specifies an optional logical quota limit (in bytes) for the usage allowed
            on this View.
            (Logical data is when the data is fully hydrated and expanded.)
            This limit overrides the limit inherited from the Storage Domain
            (View Box) (if set).
            If logicalQuota is nil, the limit is inherited from the
            Storage Domain (View Box) (if set).
            A new write is not allowed if the Storage Domain (View Box) will exceed the
            specified quota.
            However, it takes time for the Cohesity Cluster to calculate
            the usage across Nodes, so the limit may be exceeded by a small amount.
            In addition, if the limit is increased or data is removed,
            there may be a delay before the Cohesity Cluster allows more data
            to be written to the View, as the Cluster is calculating the usage
            across Nodes.
          type: object
          x-order: 10
        fileLockConfig:
          allOf:
          - $ref: '#/components/schemas/FileLevelDataLockConfig'
          - type: object
            x-nullable: true
          description: |-
            Optional config that enables file locking for this view. It cannot be
            disabled during the edit of a view, if it has been enabled during the
            creation of the view. Also, it cannot be enabled if it was disabled
            during the creation of the view.
          type: object
          x-order: 11
        fileExtensionFilter:
          allOf:
          - $ref: '#/components/schemas/FileExtensionFilter'
          - type: object
            x-nullable: true
          description: |-
            Optional filtering criteria that should be satisfied by all the files
            created in this view. It does not affect existing files.
          type: object
          x-order: 12
        antivirusScanConfig:
          allOf:
          - $ref: '#/components/schemas/AntivirusScanConfig'
          - type: object
            x-nullable: true
          description: Specifies the antivirus scan config settings for this View.
          type: object
          x-order: 13
        description:
          description: Specifies an optional text description about the View.
          nullable: true
          type: string
          x-order: 14
        allowMountOnWindows:
          description: |-
            Specifies if this View can be mounted using the NFS protocol
            on Windows systems. If true, this View can be NFS mounted on Windows
            systems.
          nullable: true
          type: boolean
          x-order: 15
        enableMinion:
          description: |-
            Specifies if this view should allow minion or not. If true, this will
            allow minion.
          nullable: true
          type: boolean
          x-order: 16
        enableFilerAuditLogging:
          description: Specifies if Filer Audit Logging is enabled for this view.
          nullable: true
          type: boolean
          x-order: 17
        tenantId:
          description: Optional tenant id who has access to this View.
          nullable: true
          type: string
          x-order: 18
        enableLiveIndexing:
          description: Specifies whether to enable live indexing for the view.
          nullable: true
          type: boolean
          x-order: 19
        enableOfflineCaching:
          description: Specifies whether to enable offline file caching of the view.
          nullable: true
          type: boolean
          x-order: 20
        accessSids:
          description: |-
            Array of Security Identifiers (SIDs)
            Specifies the list of security identifiers (SIDs) for the restricted
            Principals who have access to this View.
          items:
            type: string
          nullable: true
          type: array
          x-order: 21
        viewLockEnabled:
          description: |-
            Specifies whether view lock is enabled. If enabled the view cannot be
            modified or deleted until unlock. By default it is disabled.
          nullable: true
          type: boolean
          x-order: 22
        isReadOnly:
          description: Specifies if the view is a read only view. User will no longer
            be able to write to this view if this is set to true.
          nullable: true
          type: boolean
          x-order: 23
        viewPinningConfig:
          allOf:
          - $ref: '#/components/schemas/ViewPinningConfig'
          - type: object
            x-nullable: true
          description: Specifies the pinning config of this view.
          type: object
          x-order: 24
        selfServiceSnapshotConfig:
          allOf:
          - $ref: '#/components/schemas/SelfServiceSnapshotConfig'
          - type: object
            x-nullable: true
          description: Specifies self service config of this view.
          type: object
          x-order: 25
        enableMetadataAccelerator:
          description: |-
            Specifies if metadata accelerator is enabled for this view. Only
            supported while creating a view.
          nullable: true
          type: boolean
          x-order: 26
        isExternallyTriggeredBackupTarget:
          description: |-
            Specifies whether the view is for externally triggered backup
            target. If so, Magneto will ignore the backup schedule for the
            view protection job of this view. By default it is disabled.
          nullable: true
          type: boolean
          x-order: 27
      type: object
    UptieringPolicy_allOf:
      properties:
        fileAge:
          $ref: '#/components/schemas/UptieringFileAgePolicy'
        includeAllFiles:
          default: false
          description: |-
            If set, all files in the view will be uptiered regardless of
            file_select_policy, num_file_access, hot_file_window, file_size
            constraints.
          nullable: true
          type: boolean
          x-order: 1
        target:
          $ref: '#/components/schemas/UptieringTarget'
      type: object
    UserParams_allOf:
      properties:
        sid:
          description: Specifies the sid of the User.
          nullable: true
          type: string
          x-order: 0
        createdTimeMsecs:
          description: Specifies the epoch time in milliseconds when the user account
            was created.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 1
        lastUpdatedTimeMsecs:
          description: Specifies the epoch time in milliseconds when the user account
            was last modified.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 2
        tenantId:
          description: Specifies the tenant id of the User.
          nullable: true
          type: string
          x-order: 3
        s3AccountParams:
          allOf:
          - $ref: '#/components/schemas/S3AccountParams'
          - type: object
            x-nullable: true
          description: Specifies the S3 Account parameters of the User.
          type: object
          x-order: 4
        lockedReason:
          description: Specifies the reason for locking the User.
          enum:
          - NotLocked
          - FailedLoginAttempts
          - LockedByAdmin
          - Inactivity
          - OtherReasons
          nullable: true
          readOnly: true
          type: string
          x-order: 5
      type: object
    VMFilter_allOf:
      properties:
        caseSensitive:
          default: false
          description: Specifies whether the provided filter string is case sensitive
            or not. This needs to be explicitly set to true if user is trying to filter
            by case sensitive expressions. The default value is assumed to be false.
          nullable: true
          type: boolean
          x-order: 0
      type: object
    VcdConnectionParams_allOf:
      properties:
        host:
          description: IP or hostname of the source.
          nullable: true
          type: string
          x-order: 0
      required:
      - host
      type: object
    VcdRegistrationParams_allOf:
      properties:
        vcenterCredentialInfoList:
          description: Specifies the credentials information for all the vcenters
            in vcloud director.
          items:
            $ref: '#/components/schemas/VcenterCredentialInfo'
          minItems: 1
          nullable: true
          type: array
          x-order: 0
      required:
      - vcenterCredentialInfoList
      type: object
    VcenterCredentialInfo_allOf:
      properties:
        name:
          description: Specifies the name of the vCenter.
          nullable: true
          type: string
          x-order: 0
      type: object
    VcenterRegistrationParams_allOf:
      properties:
        caCert:
          description: Specifies the CA certificate to enable SSL communication between
            host and cluster.
          nullable: true
          type: string
          x-order: 0
        useVmBiosUuid:
          description: Specifies to use VM BIOS UUID to track virtual machines in
            the host.
          nullable: true
          type: boolean
          x-order: 1
        minFreeDatastoreSpaceForBackupGb:
          description: Specifies the minimum free space (in GB) expected to be available
            in the datastore where the virtual disks of the VM being backed up reside.
            If the space available is lower than the specified value, backup will
            be aborted.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        throttlingParams:
          $ref: '#/components/schemas/VmwareThrottlingParams'
        dataStoreParams:
          description: Specifies datastore specific parameters.
          items:
            $ref: '#/components/schemas/DatastoreParams'
          nullable: true
          type: array
          x-order: 4
      type: object
    View_allOf:
      properties:
        viewId:
          description: Specifies an id of the View assigned by the Cohesity Cluster.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 0
        isCategoryInferred:
          description: |-
            If True, category in response is not set by user but inferred by
            Iris because none is set. Category can only be none when view was
            created by v1 API or cloned from a view created by v1 API.

            Inference Logic is as follows:
            1. Object Services if only S3 or Swift protocol is selected.
            2. Backup Target only if one read-write protocol is selected and
               QoS is "Backup Target Commvault" or "Backup Target SSD".
            3. File Services if there are more than 1 read-write protocol or
               it doesn't fit any other category.
          nullable: true
          readOnly: true
          type: boolean
          x-order: 1
        dataLockExpiryUsecs:
          description: |-
            DataLock (Write Once Read Many) lock expiry epoch time in microseconds. If
            a view is marked as a DataLock view, only a Data Security Officer (a user
            having Data Security Privilege) can delete the view until the lock expiry
            time.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        objectServicesMappingConfig:
          description: |-
            Specifies the Object Services key mapping config of the view. This parameter can only
            be set during create and cannot be changed.
            Configuration of Object Services key mapping.
            Specifies the type of Object Services key mapping config.
          enum:
          - Random
          - Short
          - Long
          - Hierarchical
          - ObjectId
          nullable: true
          readOnly: true
          type: string
          x-order: 3
        storageDomainId:
          description: |-
            Specifies the id of the Storage Domain (View Box) where the View is
            stored.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 4
        storageDomainName:
          description: |-
            Specifies the name of the Storage Domain (View Box) where the View is
            stored.
          nullable: true
          readOnly: true
          type: string
          x-order: 5
        caseInsensitiveNamesEnabled:
          description: |-
            Specifies whether to support case insensitive file/folder names. This
            parameter can only be set during create and cannot be changed.
          nullable: true
          readOnly: true
          type: boolean
          x-order: 6
        createTimeMsecs:
          description: Specifies the time that the View was created in milliseconds.
          format: int64
          nullable: true
          readOnly: true
          type: integer
          x-order: 7
        basicMountPath:
          description: |-
            Specifies the NFS mount path of the View (without the hostname
            information).
            This path is used to support NFS mounting of the paths specified in the
            nfsExportPathList on Windows systems.
          nullable: true
          readOnly: true
          type: string
          x-order: 8
        nfsMountPath:
          description: |-
            This field is currently deprecated. Please use NFS MountPaths
            which would be an array of strings.
          nullable: true
          readOnly: true
          type: string
          x-order: 9
        nfsMountPaths:
          description: |-
            Array of NFS Paths.
            Specifies the path for mounting this View as an NFS share. If
            Kerberos Provider has multiple hostaliases, each host alias has
             its own path.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
          x-order: 10
        smbMountPaths:
          description: |-
            Array of SMB Paths.
            Specifies the possible paths that can be used to mount this View
            as a SMB share. If Active Directory has multiple account names;
            each machine account has its own path.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
          x-order: 11
        viewProtection:
          allOf:
          - $ref: '#/components/schemas/ViewProtection'
          - type: object
            x-nullable: true
          type: object
          x-order: 12
        aliases:
          description: |-
            Aliases created for the view. A view alias allows a directory path inside
            a view to be mounted using the alias name.
          items:
            $ref: '#/components/schemas/ViewAliasInfo'
          nullable: true
          readOnly: true
          type: array
          x-order: 13
        isTargetForMigratedData:
          description: Specifies if a view contains migrated data.
          nullable: true
          readOnly: true
          type: boolean
          x-order: 14
        viewFailover:
          allOf:
          - $ref: '#/components/schemas/ViewFailover'
          - type: object
            x-nullable: true
          description: |-
            Specifies the information about the failover of the
            view.
          type: object
          x-order: 15
        stats:
          allOf:
          - $ref: '#/components/schemas/ViewStats'
          - type: object
            x-nullable: true
          description: Specifies statistics about the View.
          type: object
          x-order: 16
        fileCountBySize:
          description: Specifies the file count by size for the View.
          items:
            $ref: '#/components/schemas/FileCount'
          type: array
          x-order: 17
        ownerSid:
          description: Specifies the sid of the view owner.
          nullable: true
          type: string
          x-order: 18
      type: object
    VmwareCdpObject_allOf:
      properties:
        ioFilterStatus:
          description: Specifies the state of CDP IO filter. CDP IO filter is an agent
            which will be installed on the object for performing continuous backup.
            <br> 1. 'kNotInstalled' specifies that CDP is enabled on this object but
            filter is not installed. <br> 2. 'kInstallFilterInProgress' specifies
            that IO filter installation is triggered and in progress. <br> 3. 'kFilterInstalledIOInactive'
            specifies that IO filter is installed but IO streaming is disabled due
            to missing backup or explicitly disabled by the user. <br> 4. 'kIOActivationInProgress'
            specifies that IO filter is activated to start streaming. <br> 5. 'kIOActive'
            specifies that filter is attached to the object and started streaming.
            <br> 6. 'kIODeactivationInProgress' specifies that deactivation has been
            initiated to stop the IO streaming. <br> 7. 'kUninstallFilterInProgress'
            specifies that uninstallation of IO filter is in progress.
          enum:
          - NotInstalled
          - InstallFilterInProgress
          - FilterInstalledIOInactive
          - FilterInstalled
          - IOInactive
          - IOActivationInProgress
          - IOActive
          - IODeactivationInProgress
          - UninstallFilterInProgress
          - UpgradeFilterInProgress
          - UpgradeFilterFailed
          - WaitingForCDPPolicyAttach
          nullable: true
          type: string
          x-order: 0
        ioFilterErrorMessage:
          description: Specifies the error message related to IO filter if there is
            any.
          nullable: true
          type: string
          x-order: 1
      type: object
    VmwareObjectProtectionRequest_allOf:
      properties:
        id:
          description: Specifies the id of the object being protected. This can be
            a leaf level or non leaf level object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        excludeObjectIds:
          description: Specifies the list of IDs of the objects to not be protected
            in this backup. This field only applies if provided object id is non leaf
            entity such as Tag or a folder. This can be used to ignore specific objects
            under a parent object which has been included for protection.
          items:
            format: int64
            nullable: true
            type: integer
          type: array
          x-order: 1
      required:
      - id
      type: object
    VmwareObjectProtectionRequestParams_allOf:
      properties:
        objects:
          description: Specifies the objects to include in the backup.
          items:
            $ref: '#/components/schemas/VmwareObjectProtectionRequest'
          type: array
          x-order: 0
        globalExcludeDisks:
          description: Specifies a list of disks to exclude from the backup.
          items:
            $ref: '#/components/schemas/DiskInfo'
          nullable: true
          type: array
          x-order: 1
      required:
      - objects
      type: object
    VmwareObjectProtectionResponse_allOf:
      properties:
        excludeObjectIds:
          description: Specifies the list of IDs of the objects to not be protected
            in this backup. This field only applies if provided object id is non leaf
            entity such as Tag or a folder. This can be used to ignore specific objects
            under a parent object which has been included for protection.
          items:
            format: int64
            nullable: true
            type: integer
          type: array
          x-order: 0
        cdpInfo:
          $ref: '#/components/schemas/VmwareCdpObject'
        standbyInfo:
          $ref: '#/components/schemas/VmwareStandbyObject'
      type: object
    VmwareObjectProtectionUpdateRequestParams_allOf:
      properties:
        excludeObjectIds:
          description: Specifies the list of IDs of the objects to not be protected
            in this backup. This field only applies if provided object id is non leaf
            entity such as Tag or a folder. This can be used to ignore specific objects
            under a parent object which has been included for protection.
          items:
            format: int64
            nullable: true
            type: integer
          type: array
          x-order: 0
      type: object
    VmwareProtectionGroupObjectParams_allOf:
      properties:
        id:
          description: Specifies the id of the object being protected. This can be
            a leaf level or non leaf level object.
          format: int64
          nullable: true
          type: integer
          x-order: 0
        name:
          description: Specifies the name of the virtual machine.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        isAutoprotected:
          description: Specifies whether the vm is part of an Autoprotection. True
            implies that the vm or its parent directory is autoprotected and will
            remain part of the autoprotection with additional settings specified here.
            False implies the object is not part of an Autoprotection and will remain
            protected and its individual settings here even if a parent directory's
            Autoprotection setting is altered. Default is false.
          nullable: true
          type: boolean
          x-order: 2
        cdpInfo:
          allOf:
          - $ref: '#/components/schemas/VmwareCdpObject'
          - type: object
            x-nullable: true
          description: Specifies the CDP related information for a given object. This
            field will only be populated when protection group is configured with
            policy having CDP retnetion settings.
          type: object
          x-order: 3
        standbyInfo:
          allOf:
          - $ref: '#/components/schemas/VmwareStandbyObject'
          - type: object
            x-nullable: true
          description: Specifies the standby related information for a given object.
            This field will only be populated when standby is configured in backup
            job settings.
          type: object
          x-order: 4
      required:
      - id
      type: object
    VmwareProtectionGroupParams_allOf:
      properties:
        objects:
          description: Specifies the objects to include in the backup.
          items:
            $ref: '#/components/schemas/VmwareProtectionGroupObjectParams'
          type: array
          x-order: 0
        globalExcludeDisks:
          description: Specifies a list of disks to exclude from the backup.
          items:
            $ref: '#/components/schemas/DiskInfo'
          nullable: true
          type: array
          x-order: 1
        standbyResourceObjects:
          description: Specifies the standby resource objects for this backup.
          items:
            $ref: '#/components/schemas/VmwareProtectionGroupStandbyResourceParams'
          nullable: true
          type: array
          x-order: 2
      type: object
    VmwareProtectionGroupStandbyResourceParams_allOf:
      properties:
        renameRestoredObjectParams:
          allOf:
          - $ref: '#/components/schemas/RecoveredOrClonedVmsRenameConfig'
          - type: object
            x-nullable: true
          description: Specifies params to rename the standby resource.
          nullable: true
          type: object
          x-order: 0
        parentObjectId:
          description: Specifies the object id for parent vCenter source where this
            standby resource should be created.
          format: int64
          nullable: true
          type: integer
          x-order: 1
        targetFolderObjectId:
          description: Specifies the object id for target vm folder where this standby
            resource should be created.
          format: int64
          nullable: true
          type: integer
          x-order: 2
        targetDatastoreFolderObjectId:
          description: Specifies the object id for target datastore folder where disks
            for this standby resource should be placed.
          format: int64
          nullable: true
          type: integer
          x-order: 3
        resourcePoolObjectId:
          description: Specifies the object id for resource pool where this standby
            resource should be created.
          format: int64
          nullable: true
          type: integer
          x-order: 4
        datastoreObjectIds:
          description: Specifies the list of IDs of the datastore objects where this
            standby resource should be created.
          items:
            format: int64
            nullable: true
            type: integer
          type: array
          x-order: 5
        networkConfig:
          allOf:
          - $ref: '#/components/schemas/RecoverVmwareVmNewSourceNetworkConfig'
          - type: object
            x-nullable: true
          description: Specifies the networking configuration to be applied to this
            standby resource.
          nullable: true
          type: object
          x-order: 6
      type: object
    VmwareStandbyObject_allOf:
      properties:
        CdpStandbyStatus:
          description: Specifies the current status of the standby object protected
            using continuous data protection policy.
          enum:
          - Init
          - VMCreationInProgress
          - VMCreated
          - LogStreamingInProgress
          - ReHydrationRequired
          - ReHydrationInProgress
          - Steady
          - Disabled
          - RestoreComplete
          nullable: true
          type: string
          x-order: 0
        guestId:
          description: Specifies the guest ID(OS) of the standby VM for the corresponding
            backup object.
          nullable: true
          readOnly: true
          type: string
          x-order: 1
        standbyMOref:
          $ref: '#/components/schemas/MOref'
        standbyTime:
          description: Specifies the time till which the standby object has been hydrated
            for the corresponding backup object.
          format: int64
          nullable: true
          type: integer
          x-order: 3
      type: object
  securitySchemes:
    APIKeyHeader:
      in: header
      name: apiKey
      type: apiKey
x-original-swagger-version: "2.0"
