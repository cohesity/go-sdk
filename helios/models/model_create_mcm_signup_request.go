/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CreateMcmSignupRequest Specifies the request params to create MCM signup request.
type CreateMcmSignupRequest struct {
	ContactInfo McmSignupUserContactInfo `json:"contactInfo"`
	// Specifies the workload requirements of the company to use Cohesity MCM.
	Workloads *[]string `json:"workloads,omitempty"`
	DmaasParams *DmaasSignupParams `json:"dmaasParams,omitempty"`
	// Specifies whether the User agrees to Terms and conditions for using Cohesity MCM services which are specified at <url>
	AcceptTerms bool `json:"acceptTerms"`
}

// NewCreateMcmSignupRequest instantiates a new CreateMcmSignupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMcmSignupRequest(contactInfo McmSignupUserContactInfo, acceptTerms bool) *CreateMcmSignupRequest {
	this := CreateMcmSignupRequest{}
	this.ContactInfo = contactInfo
	this.AcceptTerms = acceptTerms
	return &this
}

// NewCreateMcmSignupRequestWithDefaults instantiates a new CreateMcmSignupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMcmSignupRequestWithDefaults() *CreateMcmSignupRequest {
	this := CreateMcmSignupRequest{}
	return &this
}

// GetContactInfo returns the ContactInfo field value
func (o *CreateMcmSignupRequest) GetContactInfo() McmSignupUserContactInfo {
	if o == nil {
		var ret McmSignupUserContactInfo
		return ret
	}

	return o.ContactInfo
}

// GetContactInfoOk returns a tuple with the ContactInfo field value
// and a boolean to check if the value has been set.
func (o *CreateMcmSignupRequest) GetContactInfoOk() (*McmSignupUserContactInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ContactInfo, true
}

// SetContactInfo sets field value
func (o *CreateMcmSignupRequest) SetContactInfo(v McmSignupUserContactInfo) {
	o.ContactInfo = v
}

// GetWorkloads returns the Workloads field value if set, zero value otherwise.
func (o *CreateMcmSignupRequest) GetWorkloads() []string {
	if o == nil || o.Workloads == nil {
		var ret []string
		return ret
	}
	return *o.Workloads
}

// GetWorkloadsOk returns a tuple with the Workloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMcmSignupRequest) GetWorkloadsOk() (*[]string, bool) {
	if o == nil || o.Workloads == nil {
		return nil, false
	}
	return o.Workloads, true
}

// HasWorkloads returns a boolean if a field has been set.
func (o *CreateMcmSignupRequest) HasWorkloads() bool {
	if o != nil && o.Workloads != nil {
		return true
	}

	return false
}

// SetWorkloads gets a reference to the given []string and assigns it to the Workloads field.
func (o *CreateMcmSignupRequest) SetWorkloads(v []string) {
	o.Workloads = &v
}

// GetDmaasParams returns the DmaasParams field value if set, zero value otherwise.
func (o *CreateMcmSignupRequest) GetDmaasParams() DmaasSignupParams {
	if o == nil || o.DmaasParams == nil {
		var ret DmaasSignupParams
		return ret
	}
	return *o.DmaasParams
}

// GetDmaasParamsOk returns a tuple with the DmaasParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMcmSignupRequest) GetDmaasParamsOk() (*DmaasSignupParams, bool) {
	if o == nil || o.DmaasParams == nil {
		return nil, false
	}
	return o.DmaasParams, true
}

// HasDmaasParams returns a boolean if a field has been set.
func (o *CreateMcmSignupRequest) HasDmaasParams() bool {
	if o != nil && o.DmaasParams != nil {
		return true
	}

	return false
}

// SetDmaasParams gets a reference to the given DmaasSignupParams and assigns it to the DmaasParams field.
func (o *CreateMcmSignupRequest) SetDmaasParams(v DmaasSignupParams) {
	o.DmaasParams = &v
}

// GetAcceptTerms returns the AcceptTerms field value
func (o *CreateMcmSignupRequest) GetAcceptTerms() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AcceptTerms
}

// GetAcceptTermsOk returns a tuple with the AcceptTerms field value
// and a boolean to check if the value has been set.
func (o *CreateMcmSignupRequest) GetAcceptTermsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AcceptTerms, true
}

// SetAcceptTerms sets field value
func (o *CreateMcmSignupRequest) SetAcceptTerms(v bool) {
	o.AcceptTerms = v
}

func (o CreateMcmSignupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["contactInfo"] = o.ContactInfo
	}
	if o.Workloads != nil {
		toSerialize["workloads"] = o.Workloads
	}
	if o.DmaasParams != nil {
		toSerialize["dmaasParams"] = o.DmaasParams
	}
	if true {
		toSerialize["acceptTerms"] = o.AcceptTerms
	}
	return json.Marshal(toSerialize)
}

type NullableCreateMcmSignupRequest struct {
	value *CreateMcmSignupRequest
	isSet bool
}

func (v NullableCreateMcmSignupRequest) Get() *CreateMcmSignupRequest {
	return v.value
}

func (v *NullableCreateMcmSignupRequest) Set(val *CreateMcmSignupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMcmSignupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMcmSignupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMcmSignupRequest(val *CreateMcmSignupRequest) *NullableCreateMcmSignupRequest {
	return &NullableCreateMcmSignupRequest{value: val, isSet: true}
}

func (v NullableCreateMcmSignupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMcmSignupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


