/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// AwsAuthenticationMethodsParams Specifies the Authentication Methods parameters which are specific to AWS related External Targets.
type AwsAuthenticationMethodsParams struct {
	// Specifies the AWS External Target Authentication type.
	AuthenticationType NullableString `json:"authenticationType"`
	IAmUserParams *AwsIAmUserParams `json:"iAmUserParams,omitempty"`
	IAmRoleParams *AwsIAmRoleParams `json:"iAmRoleParams,omitempty"`
}

// NewAwsAuthenticationMethodsParams instantiates a new AwsAuthenticationMethodsParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsAuthenticationMethodsParams(authenticationType NullableString) *AwsAuthenticationMethodsParams {
	this := AwsAuthenticationMethodsParams{}
	this.AuthenticationType = authenticationType
	return &this
}

// NewAwsAuthenticationMethodsParamsWithDefaults instantiates a new AwsAuthenticationMethodsParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsAuthenticationMethodsParamsWithDefaults() *AwsAuthenticationMethodsParams {
	this := AwsAuthenticationMethodsParams{}
	return &this
}

// GetAuthenticationType returns the AuthenticationType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AwsAuthenticationMethodsParams) GetAuthenticationType() string {
	if o == nil || o.AuthenticationType.Get() == nil {
		var ret string
		return ret
	}

	return *o.AuthenticationType.Get()
}

// GetAuthenticationTypeOk returns a tuple with the AuthenticationType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsAuthenticationMethodsParams) GetAuthenticationTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AuthenticationType.Get(), o.AuthenticationType.IsSet()
}

// SetAuthenticationType sets field value
func (o *AwsAuthenticationMethodsParams) SetAuthenticationType(v string) {
	o.AuthenticationType.Set(&v)
}

// GetIAmUserParams returns the IAmUserParams field value if set, zero value otherwise.
func (o *AwsAuthenticationMethodsParams) GetIAmUserParams() AwsIAmUserParams {
	if o == nil || o.IAmUserParams == nil {
		var ret AwsIAmUserParams
		return ret
	}
	return *o.IAmUserParams
}

// GetIAmUserParamsOk returns a tuple with the IAmUserParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsAuthenticationMethodsParams) GetIAmUserParamsOk() (*AwsIAmUserParams, bool) {
	if o == nil || o.IAmUserParams == nil {
		return nil, false
	}
	return o.IAmUserParams, true
}

// HasIAmUserParams returns a boolean if a field has been set.
func (o *AwsAuthenticationMethodsParams) HasIAmUserParams() bool {
	if o != nil && o.IAmUserParams != nil {
		return true
	}

	return false
}

// SetIAmUserParams gets a reference to the given AwsIAmUserParams and assigns it to the IAmUserParams field.
func (o *AwsAuthenticationMethodsParams) SetIAmUserParams(v AwsIAmUserParams) {
	o.IAmUserParams = &v
}

// GetIAmRoleParams returns the IAmRoleParams field value if set, zero value otherwise.
func (o *AwsAuthenticationMethodsParams) GetIAmRoleParams() AwsIAmRoleParams {
	if o == nil || o.IAmRoleParams == nil {
		var ret AwsIAmRoleParams
		return ret
	}
	return *o.IAmRoleParams
}

// GetIAmRoleParamsOk returns a tuple with the IAmRoleParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsAuthenticationMethodsParams) GetIAmRoleParamsOk() (*AwsIAmRoleParams, bool) {
	if o == nil || o.IAmRoleParams == nil {
		return nil, false
	}
	return o.IAmRoleParams, true
}

// HasIAmRoleParams returns a boolean if a field has been set.
func (o *AwsAuthenticationMethodsParams) HasIAmRoleParams() bool {
	if o != nil && o.IAmRoleParams != nil {
		return true
	}

	return false
}

// SetIAmRoleParams gets a reference to the given AwsIAmRoleParams and assigns it to the IAmRoleParams field.
func (o *AwsAuthenticationMethodsParams) SetIAmRoleParams(v AwsIAmRoleParams) {
	o.IAmRoleParams = &v
}

func (o AwsAuthenticationMethodsParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["authenticationType"] = o.AuthenticationType.Get()
	}
	if o.IAmUserParams != nil {
		toSerialize["iAmUserParams"] = o.IAmUserParams
	}
	if o.IAmRoleParams != nil {
		toSerialize["iAmRoleParams"] = o.IAmRoleParams
	}
	return json.Marshal(toSerialize)
}

type NullableAwsAuthenticationMethodsParams struct {
	value *AwsAuthenticationMethodsParams
	isSet bool
}

func (v NullableAwsAuthenticationMethodsParams) Get() *AwsAuthenticationMethodsParams {
	return v.value
}

func (v *NullableAwsAuthenticationMethodsParams) Set(val *AwsAuthenticationMethodsParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsAuthenticationMethodsParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsAuthenticationMethodsParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsAuthenticationMethodsParams(val *AwsAuthenticationMethodsParams) *NullableAwsAuthenticationMethodsParams {
	return &NullableAwsAuthenticationMethodsParams{value: val, isSet: true}
}

func (v NullableAwsAuthenticationMethodsParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsAuthenticationMethodsParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


