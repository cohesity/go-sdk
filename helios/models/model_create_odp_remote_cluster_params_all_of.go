/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CreateOdpRemoteClusterParamsAllOf struct for CreateOdpRemoteClusterParamsAllOf
type CreateOdpRemoteClusterParamsAllOf struct {
	// Specifies the ODP Remote Cluster id.
	ClusterId NullableInt64 `json:"clusterId"`
	// Specifies the ODP Remote Cluster incarnation id.
	ClusterIncarnationId NullableInt64 `json:"clusterIncarnationId"`
}

// NewCreateOdpRemoteClusterParamsAllOf instantiates a new CreateOdpRemoteClusterParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOdpRemoteClusterParamsAllOf(clusterId NullableInt64, clusterIncarnationId NullableInt64) *CreateOdpRemoteClusterParamsAllOf {
	this := CreateOdpRemoteClusterParamsAllOf{}
	this.ClusterId = clusterId
	this.ClusterIncarnationId = clusterIncarnationId
	return &this
}

// NewCreateOdpRemoteClusterParamsAllOfWithDefaults instantiates a new CreateOdpRemoteClusterParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOdpRemoteClusterParamsAllOfWithDefaults() *CreateOdpRemoteClusterParamsAllOf {
	this := CreateOdpRemoteClusterParamsAllOf{}
	return &this
}

// GetClusterId returns the ClusterId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *CreateOdpRemoteClusterParamsAllOf) GetClusterId() int64 {
	if o == nil || o.ClusterId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.ClusterId.Get()
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOdpRemoteClusterParamsAllOf) GetClusterIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterId.Get(), o.ClusterId.IsSet()
}

// SetClusterId sets field value
func (o *CreateOdpRemoteClusterParamsAllOf) SetClusterId(v int64) {
	o.ClusterId.Set(&v)
}

// GetClusterIncarnationId returns the ClusterIncarnationId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *CreateOdpRemoteClusterParamsAllOf) GetClusterIncarnationId() int64 {
	if o == nil || o.ClusterIncarnationId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.ClusterIncarnationId.Get()
}

// GetClusterIncarnationIdOk returns a tuple with the ClusterIncarnationId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOdpRemoteClusterParamsAllOf) GetClusterIncarnationIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterIncarnationId.Get(), o.ClusterIncarnationId.IsSet()
}

// SetClusterIncarnationId sets field value
func (o *CreateOdpRemoteClusterParamsAllOf) SetClusterIncarnationId(v int64) {
	o.ClusterIncarnationId.Set(&v)
}

func (o CreateOdpRemoteClusterParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["clusterId"] = o.ClusterId.Get()
	}
	if true {
		toSerialize["clusterIncarnationId"] = o.ClusterIncarnationId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCreateOdpRemoteClusterParamsAllOf struct {
	value *CreateOdpRemoteClusterParamsAllOf
	isSet bool
}

func (v NullableCreateOdpRemoteClusterParamsAllOf) Get() *CreateOdpRemoteClusterParamsAllOf {
	return v.value
}

func (v *NullableCreateOdpRemoteClusterParamsAllOf) Set(val *CreateOdpRemoteClusterParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOdpRemoteClusterParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOdpRemoteClusterParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOdpRemoteClusterParamsAllOf(val *CreateOdpRemoteClusterParamsAllOf) *NullableCreateOdpRemoteClusterParamsAllOf {
	return &NullableCreateOdpRemoteClusterParamsAllOf{value: val, isSet: true}
}

func (v NullableCreateOdpRemoteClusterParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOdpRemoteClusterParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


