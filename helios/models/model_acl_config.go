/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// AclConfig Specifies the ACL config of an S3 bucket.
type AclConfig struct {
	// Specifies a list of ACL grants.
	Grants []AclGrant `json:"grants,omitempty"`
}

// NewAclConfig instantiates a new AclConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAclConfig() *AclConfig {
	this := AclConfig{}
	return &this
}

// NewAclConfigWithDefaults instantiates a new AclConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAclConfigWithDefaults() *AclConfig {
	this := AclConfig{}
	return &this
}

// GetGrants returns the Grants field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AclConfig) GetGrants() []AclGrant {
	if o == nil  {
		var ret []AclGrant
		return ret
	}
	return o.Grants
}

// GetGrantsOk returns a tuple with the Grants field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AclConfig) GetGrantsOk() (*[]AclGrant, bool) {
	if o == nil || o.Grants == nil {
		return nil, false
	}
	return &o.Grants, true
}

// HasGrants returns a boolean if a field has been set.
func (o *AclConfig) HasGrants() bool {
	if o != nil && o.Grants != nil {
		return true
	}

	return false
}

// SetGrants gets a reference to the given []AclGrant and assigns it to the Grants field.
func (o *AclConfig) SetGrants(v []AclGrant) {
	o.Grants = v
}

func (o AclConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Grants != nil {
		toSerialize["grants"] = o.Grants
	}
	return json.Marshal(toSerialize)
}

type NullableAclConfig struct {
	value *AclConfig
	isSet bool
}

func (v NullableAclConfig) Get() *AclConfig {
	return v.value
}

func (v *NullableAclConfig) Set(val *AclConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAclConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAclConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAclConfig(val *AclConfig) *NullableAclConfig {
	return &NullableAclConfig{value: val, isSet: true}
}

func (v NullableAclConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAclConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


