/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CassandraParams Specifies the recovery options specific to Cassandra environment.
type CassandraParams struct {
	// Specifies the type of recover action to be performed.
	RecoveryAction string `json:"recoveryAction"`
	RecoverCassandraParams RecoverCassandraParams `json:"recoverCassandraParams"`
}

// NewCassandraParams instantiates a new CassandraParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCassandraParams(recoveryAction string, recoverCassandraParams RecoverCassandraParams) *CassandraParams {
	this := CassandraParams{}
	this.RecoveryAction = recoveryAction
	this.RecoverCassandraParams = recoverCassandraParams
	return &this
}

// NewCassandraParamsWithDefaults instantiates a new CassandraParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCassandraParamsWithDefaults() *CassandraParams {
	this := CassandraParams{}
	return &this
}

// GetRecoveryAction returns the RecoveryAction field value
func (o *CassandraParams) GetRecoveryAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecoveryAction
}

// GetRecoveryActionOk returns a tuple with the RecoveryAction field value
// and a boolean to check if the value has been set.
func (o *CassandraParams) GetRecoveryActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RecoveryAction, true
}

// SetRecoveryAction sets field value
func (o *CassandraParams) SetRecoveryAction(v string) {
	o.RecoveryAction = v
}

// GetRecoverCassandraParams returns the RecoverCassandraParams field value
func (o *CassandraParams) GetRecoverCassandraParams() RecoverCassandraParams {
	if o == nil {
		var ret RecoverCassandraParams
		return ret
	}

	return o.RecoverCassandraParams
}

// GetRecoverCassandraParamsOk returns a tuple with the RecoverCassandraParams field value
// and a boolean to check if the value has been set.
func (o *CassandraParams) GetRecoverCassandraParamsOk() (*RecoverCassandraParams, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RecoverCassandraParams, true
}

// SetRecoverCassandraParams sets field value
func (o *CassandraParams) SetRecoverCassandraParams(v RecoverCassandraParams) {
	o.RecoverCassandraParams = v
}

func (o CassandraParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["recoveryAction"] = o.RecoveryAction
	}
	if true {
		toSerialize["recoverCassandraParams"] = o.RecoverCassandraParams
	}
	return json.Marshal(toSerialize)
}

type NullableCassandraParams struct {
	value *CassandraParams
	isSet bool
}

func (v NullableCassandraParams) Get() *CassandraParams {
	return v.value
}

func (v *NullableCassandraParams) Set(val *CassandraParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCassandraParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCassandraParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCassandraParams(val *CassandraParams) *NullableCassandraParams {
	return &NullableCassandraParams{value: val, isSet: true}
}

func (v NullableCassandraParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCassandraParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


