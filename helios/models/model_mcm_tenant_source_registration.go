/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// McmTenantSourceRegistration Specifies a source registration for a given tenant.
type McmTenantSourceRegistration struct {
	// Specifies the id assigned to the entry.
	SourceRegistrationId NullableString `json:"sourceRegistrationId,omitempty"`
	// Specifies the ID of the source on the cluster.
	SourceId NullableInt64 `json:"sourceId,omitempty"`
	// Specifies the environment of the source.
	Environment NullableString `json:"environment,omitempty"`
	// Specifies the type of the object.
	ObjectType NullableString `json:"objectType,omitempty"`
	// Specifies whether or not this object is a root level source (registered directly rather than the child of a registered source).
	IsRootSource NullableBool `json:"isRootSource,omitempty"`
	// Specifies the tenants which have access to this object.
	TenantIds *[]string `json:"tenantIds,omitempty"`
	// Specifies the account ID to which this source belongs.
	AccountId NullableString `json:"accountId,omitempty"`
	// Specifies the DMaaS tenant ID to which this source belongs.
	DmaasTenantId NullableString `json:"dmaasTenantId,omitempty"`
	// Specifies the ID of the cluster to which the source is registered.
	ClusterId NullableInt64 `json:"clusterId,omitempty"`
	// Specifies the object hash of the source.
	ObjectHash NullableString `json:"objectHash,omitempty"`
	UserDetails *User `json:"userDetails,omitempty"`
	// Specifies the timestamp at which this entry was created in msecs.
	CreatedAtMsecs NullableInt64 `json:"createdAtMsecs,omitempty"`
	// Specifies the timestamp at which this entry was updated in msecs.
	UpdatedAtMsecs NullableInt64 `json:"updatedAtMsecs,omitempty"`
	SourceRegistration *SourceRegistration `json:"sourceRegistration,omitempty"`
	// Specifies the list of enable application params which have been performed on this source.
	EnableAppParams *[]ObjectActionRequest `json:"enableAppParams,omitempty"`
	Credentials *SourceRegistrationCredentials `json:"credentials,omitempty"`
}

// NewMcmTenantSourceRegistration instantiates a new McmTenantSourceRegistration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcmTenantSourceRegistration() *McmTenantSourceRegistration {
	this := McmTenantSourceRegistration{}
	return &this
}

// NewMcmTenantSourceRegistrationWithDefaults instantiates a new McmTenantSourceRegistration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcmTenantSourceRegistrationWithDefaults() *McmTenantSourceRegistration {
	this := McmTenantSourceRegistration{}
	return &this
}

// GetSourceRegistrationId returns the SourceRegistrationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantSourceRegistration) GetSourceRegistrationId() string {
	if o == nil || o.SourceRegistrationId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceRegistrationId.Get()
}

// GetSourceRegistrationIdOk returns a tuple with the SourceRegistrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantSourceRegistration) GetSourceRegistrationIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceRegistrationId.Get(), o.SourceRegistrationId.IsSet()
}

// HasSourceRegistrationId returns a boolean if a field has been set.
func (o *McmTenantSourceRegistration) HasSourceRegistrationId() bool {
	if o != nil && o.SourceRegistrationId.IsSet() {
		return true
	}

	return false
}

// SetSourceRegistrationId gets a reference to the given NullableString and assigns it to the SourceRegistrationId field.
func (o *McmTenantSourceRegistration) SetSourceRegistrationId(v string) {
	o.SourceRegistrationId.Set(&v)
}
// SetSourceRegistrationIdNil sets the value for SourceRegistrationId to be an explicit nil
func (o *McmTenantSourceRegistration) SetSourceRegistrationIdNil() {
	o.SourceRegistrationId.Set(nil)
}

// UnsetSourceRegistrationId ensures that no value is present for SourceRegistrationId, not even an explicit nil
func (o *McmTenantSourceRegistration) UnsetSourceRegistrationId() {
	o.SourceRegistrationId.Unset()
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantSourceRegistration) GetSourceId() int64 {
	if o == nil || o.SourceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantSourceRegistration) GetSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *McmTenantSourceRegistration) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableInt64 and assigns it to the SourceId field.
func (o *McmTenantSourceRegistration) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *McmTenantSourceRegistration) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *McmTenantSourceRegistration) UnsetSourceId() {
	o.SourceId.Unset()
}

// GetEnvironment returns the Environment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantSourceRegistration) GetEnvironment() string {
	if o == nil || o.Environment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantSourceRegistration) GetEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// HasEnvironment returns a boolean if a field has been set.
func (o *McmTenantSourceRegistration) HasEnvironment() bool {
	if o != nil && o.Environment.IsSet() {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given NullableString and assigns it to the Environment field.
func (o *McmTenantSourceRegistration) SetEnvironment(v string) {
	o.Environment.Set(&v)
}
// SetEnvironmentNil sets the value for Environment to be an explicit nil
func (o *McmTenantSourceRegistration) SetEnvironmentNil() {
	o.Environment.Set(nil)
}

// UnsetEnvironment ensures that no value is present for Environment, not even an explicit nil
func (o *McmTenantSourceRegistration) UnsetEnvironment() {
	o.Environment.Unset()
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantSourceRegistration) GetObjectType() string {
	if o == nil || o.ObjectType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ObjectType.Get()
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantSourceRegistration) GetObjectTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ObjectType.Get(), o.ObjectType.IsSet()
}

// HasObjectType returns a boolean if a field has been set.
func (o *McmTenantSourceRegistration) HasObjectType() bool {
	if o != nil && o.ObjectType.IsSet() {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given NullableString and assigns it to the ObjectType field.
func (o *McmTenantSourceRegistration) SetObjectType(v string) {
	o.ObjectType.Set(&v)
}
// SetObjectTypeNil sets the value for ObjectType to be an explicit nil
func (o *McmTenantSourceRegistration) SetObjectTypeNil() {
	o.ObjectType.Set(nil)
}

// UnsetObjectType ensures that no value is present for ObjectType, not even an explicit nil
func (o *McmTenantSourceRegistration) UnsetObjectType() {
	o.ObjectType.Unset()
}

// GetIsRootSource returns the IsRootSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantSourceRegistration) GetIsRootSource() bool {
	if o == nil || o.IsRootSource.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsRootSource.Get()
}

// GetIsRootSourceOk returns a tuple with the IsRootSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantSourceRegistration) GetIsRootSourceOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsRootSource.Get(), o.IsRootSource.IsSet()
}

// HasIsRootSource returns a boolean if a field has been set.
func (o *McmTenantSourceRegistration) HasIsRootSource() bool {
	if o != nil && o.IsRootSource.IsSet() {
		return true
	}

	return false
}

// SetIsRootSource gets a reference to the given NullableBool and assigns it to the IsRootSource field.
func (o *McmTenantSourceRegistration) SetIsRootSource(v bool) {
	o.IsRootSource.Set(&v)
}
// SetIsRootSourceNil sets the value for IsRootSource to be an explicit nil
func (o *McmTenantSourceRegistration) SetIsRootSourceNil() {
	o.IsRootSource.Set(nil)
}

// UnsetIsRootSource ensures that no value is present for IsRootSource, not even an explicit nil
func (o *McmTenantSourceRegistration) UnsetIsRootSource() {
	o.IsRootSource.Unset()
}

// GetTenantIds returns the TenantIds field value if set, zero value otherwise.
func (o *McmTenantSourceRegistration) GetTenantIds() []string {
	if o == nil || o.TenantIds == nil {
		var ret []string
		return ret
	}
	return *o.TenantIds
}

// GetTenantIdsOk returns a tuple with the TenantIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmTenantSourceRegistration) GetTenantIdsOk() (*[]string, bool) {
	if o == nil || o.TenantIds == nil {
		return nil, false
	}
	return o.TenantIds, true
}

// HasTenantIds returns a boolean if a field has been set.
func (o *McmTenantSourceRegistration) HasTenantIds() bool {
	if o != nil && o.TenantIds != nil {
		return true
	}

	return false
}

// SetTenantIds gets a reference to the given []string and assigns it to the TenantIds field.
func (o *McmTenantSourceRegistration) SetTenantIds(v []string) {
	o.TenantIds = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantSourceRegistration) GetAccountId() string {
	if o == nil || o.AccountId.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantSourceRegistration) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *McmTenantSourceRegistration) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *McmTenantSourceRegistration) SetAccountId(v string) {
	o.AccountId.Set(&v)
}
// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *McmTenantSourceRegistration) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *McmTenantSourceRegistration) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetDmaasTenantId returns the DmaasTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantSourceRegistration) GetDmaasTenantId() string {
	if o == nil || o.DmaasTenantId.Get() == nil {
		var ret string
		return ret
	}
	return *o.DmaasTenantId.Get()
}

// GetDmaasTenantIdOk returns a tuple with the DmaasTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantSourceRegistration) GetDmaasTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DmaasTenantId.Get(), o.DmaasTenantId.IsSet()
}

// HasDmaasTenantId returns a boolean if a field has been set.
func (o *McmTenantSourceRegistration) HasDmaasTenantId() bool {
	if o != nil && o.DmaasTenantId.IsSet() {
		return true
	}

	return false
}

// SetDmaasTenantId gets a reference to the given NullableString and assigns it to the DmaasTenantId field.
func (o *McmTenantSourceRegistration) SetDmaasTenantId(v string) {
	o.DmaasTenantId.Set(&v)
}
// SetDmaasTenantIdNil sets the value for DmaasTenantId to be an explicit nil
func (o *McmTenantSourceRegistration) SetDmaasTenantIdNil() {
	o.DmaasTenantId.Set(nil)
}

// UnsetDmaasTenantId ensures that no value is present for DmaasTenantId, not even an explicit nil
func (o *McmTenantSourceRegistration) UnsetDmaasTenantId() {
	o.DmaasTenantId.Unset()
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantSourceRegistration) GetClusterId() int64 {
	if o == nil || o.ClusterId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ClusterId.Get()
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantSourceRegistration) GetClusterIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterId.Get(), o.ClusterId.IsSet()
}

// HasClusterId returns a boolean if a field has been set.
func (o *McmTenantSourceRegistration) HasClusterId() bool {
	if o != nil && o.ClusterId.IsSet() {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given NullableInt64 and assigns it to the ClusterId field.
func (o *McmTenantSourceRegistration) SetClusterId(v int64) {
	o.ClusterId.Set(&v)
}
// SetClusterIdNil sets the value for ClusterId to be an explicit nil
func (o *McmTenantSourceRegistration) SetClusterIdNil() {
	o.ClusterId.Set(nil)
}

// UnsetClusterId ensures that no value is present for ClusterId, not even an explicit nil
func (o *McmTenantSourceRegistration) UnsetClusterId() {
	o.ClusterId.Unset()
}

// GetObjectHash returns the ObjectHash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantSourceRegistration) GetObjectHash() string {
	if o == nil || o.ObjectHash.Get() == nil {
		var ret string
		return ret
	}
	return *o.ObjectHash.Get()
}

// GetObjectHashOk returns a tuple with the ObjectHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantSourceRegistration) GetObjectHashOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ObjectHash.Get(), o.ObjectHash.IsSet()
}

// HasObjectHash returns a boolean if a field has been set.
func (o *McmTenantSourceRegistration) HasObjectHash() bool {
	if o != nil && o.ObjectHash.IsSet() {
		return true
	}

	return false
}

// SetObjectHash gets a reference to the given NullableString and assigns it to the ObjectHash field.
func (o *McmTenantSourceRegistration) SetObjectHash(v string) {
	o.ObjectHash.Set(&v)
}
// SetObjectHashNil sets the value for ObjectHash to be an explicit nil
func (o *McmTenantSourceRegistration) SetObjectHashNil() {
	o.ObjectHash.Set(nil)
}

// UnsetObjectHash ensures that no value is present for ObjectHash, not even an explicit nil
func (o *McmTenantSourceRegistration) UnsetObjectHash() {
	o.ObjectHash.Unset()
}

// GetUserDetails returns the UserDetails field value if set, zero value otherwise.
func (o *McmTenantSourceRegistration) GetUserDetails() User {
	if o == nil || o.UserDetails == nil {
		var ret User
		return ret
	}
	return *o.UserDetails
}

// GetUserDetailsOk returns a tuple with the UserDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmTenantSourceRegistration) GetUserDetailsOk() (*User, bool) {
	if o == nil || o.UserDetails == nil {
		return nil, false
	}
	return o.UserDetails, true
}

// HasUserDetails returns a boolean if a field has been set.
func (o *McmTenantSourceRegistration) HasUserDetails() bool {
	if o != nil && o.UserDetails != nil {
		return true
	}

	return false
}

// SetUserDetails gets a reference to the given User and assigns it to the UserDetails field.
func (o *McmTenantSourceRegistration) SetUserDetails(v User) {
	o.UserDetails = &v
}

// GetCreatedAtMsecs returns the CreatedAtMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantSourceRegistration) GetCreatedAtMsecs() int64 {
	if o == nil || o.CreatedAtMsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.CreatedAtMsecs.Get()
}

// GetCreatedAtMsecsOk returns a tuple with the CreatedAtMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantSourceRegistration) GetCreatedAtMsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedAtMsecs.Get(), o.CreatedAtMsecs.IsSet()
}

// HasCreatedAtMsecs returns a boolean if a field has been set.
func (o *McmTenantSourceRegistration) HasCreatedAtMsecs() bool {
	if o != nil && o.CreatedAtMsecs.IsSet() {
		return true
	}

	return false
}

// SetCreatedAtMsecs gets a reference to the given NullableInt64 and assigns it to the CreatedAtMsecs field.
func (o *McmTenantSourceRegistration) SetCreatedAtMsecs(v int64) {
	o.CreatedAtMsecs.Set(&v)
}
// SetCreatedAtMsecsNil sets the value for CreatedAtMsecs to be an explicit nil
func (o *McmTenantSourceRegistration) SetCreatedAtMsecsNil() {
	o.CreatedAtMsecs.Set(nil)
}

// UnsetCreatedAtMsecs ensures that no value is present for CreatedAtMsecs, not even an explicit nil
func (o *McmTenantSourceRegistration) UnsetCreatedAtMsecs() {
	o.CreatedAtMsecs.Unset()
}

// GetUpdatedAtMsecs returns the UpdatedAtMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantSourceRegistration) GetUpdatedAtMsecs() int64 {
	if o == nil || o.UpdatedAtMsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.UpdatedAtMsecs.Get()
}

// GetUpdatedAtMsecsOk returns a tuple with the UpdatedAtMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantSourceRegistration) GetUpdatedAtMsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpdatedAtMsecs.Get(), o.UpdatedAtMsecs.IsSet()
}

// HasUpdatedAtMsecs returns a boolean if a field has been set.
func (o *McmTenantSourceRegistration) HasUpdatedAtMsecs() bool {
	if o != nil && o.UpdatedAtMsecs.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAtMsecs gets a reference to the given NullableInt64 and assigns it to the UpdatedAtMsecs field.
func (o *McmTenantSourceRegistration) SetUpdatedAtMsecs(v int64) {
	o.UpdatedAtMsecs.Set(&v)
}
// SetUpdatedAtMsecsNil sets the value for UpdatedAtMsecs to be an explicit nil
func (o *McmTenantSourceRegistration) SetUpdatedAtMsecsNil() {
	o.UpdatedAtMsecs.Set(nil)
}

// UnsetUpdatedAtMsecs ensures that no value is present for UpdatedAtMsecs, not even an explicit nil
func (o *McmTenantSourceRegistration) UnsetUpdatedAtMsecs() {
	o.UpdatedAtMsecs.Unset()
}

// GetSourceRegistration returns the SourceRegistration field value if set, zero value otherwise.
func (o *McmTenantSourceRegistration) GetSourceRegistration() SourceRegistration {
	if o == nil || o.SourceRegistration == nil {
		var ret SourceRegistration
		return ret
	}
	return *o.SourceRegistration
}

// GetSourceRegistrationOk returns a tuple with the SourceRegistration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmTenantSourceRegistration) GetSourceRegistrationOk() (*SourceRegistration, bool) {
	if o == nil || o.SourceRegistration == nil {
		return nil, false
	}
	return o.SourceRegistration, true
}

// HasSourceRegistration returns a boolean if a field has been set.
func (o *McmTenantSourceRegistration) HasSourceRegistration() bool {
	if o != nil && o.SourceRegistration != nil {
		return true
	}

	return false
}

// SetSourceRegistration gets a reference to the given SourceRegistration and assigns it to the SourceRegistration field.
func (o *McmTenantSourceRegistration) SetSourceRegistration(v SourceRegistration) {
	o.SourceRegistration = &v
}

// GetEnableAppParams returns the EnableAppParams field value if set, zero value otherwise.
func (o *McmTenantSourceRegistration) GetEnableAppParams() []ObjectActionRequest {
	if o == nil || o.EnableAppParams == nil {
		var ret []ObjectActionRequest
		return ret
	}
	return *o.EnableAppParams
}

// GetEnableAppParamsOk returns a tuple with the EnableAppParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmTenantSourceRegistration) GetEnableAppParamsOk() (*[]ObjectActionRequest, bool) {
	if o == nil || o.EnableAppParams == nil {
		return nil, false
	}
	return o.EnableAppParams, true
}

// HasEnableAppParams returns a boolean if a field has been set.
func (o *McmTenantSourceRegistration) HasEnableAppParams() bool {
	if o != nil && o.EnableAppParams != nil {
		return true
	}

	return false
}

// SetEnableAppParams gets a reference to the given []ObjectActionRequest and assigns it to the EnableAppParams field.
func (o *McmTenantSourceRegistration) SetEnableAppParams(v []ObjectActionRequest) {
	o.EnableAppParams = &v
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *McmTenantSourceRegistration) GetCredentials() SourceRegistrationCredentials {
	if o == nil || o.Credentials == nil {
		var ret SourceRegistrationCredentials
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmTenantSourceRegistration) GetCredentialsOk() (*SourceRegistrationCredentials, bool) {
	if o == nil || o.Credentials == nil {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *McmTenantSourceRegistration) HasCredentials() bool {
	if o != nil && o.Credentials != nil {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given SourceRegistrationCredentials and assigns it to the Credentials field.
func (o *McmTenantSourceRegistration) SetCredentials(v SourceRegistrationCredentials) {
	o.Credentials = &v
}

func (o McmTenantSourceRegistration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SourceRegistrationId.IsSet() {
		toSerialize["sourceRegistrationId"] = o.SourceRegistrationId.Get()
	}
	if o.SourceId.IsSet() {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if o.Environment.IsSet() {
		toSerialize["environment"] = o.Environment.Get()
	}
	if o.ObjectType.IsSet() {
		toSerialize["objectType"] = o.ObjectType.Get()
	}
	if o.IsRootSource.IsSet() {
		toSerialize["isRootSource"] = o.IsRootSource.Get()
	}
	if o.TenantIds != nil {
		toSerialize["tenantIds"] = o.TenantIds
	}
	if o.AccountId.IsSet() {
		toSerialize["accountId"] = o.AccountId.Get()
	}
	if o.DmaasTenantId.IsSet() {
		toSerialize["dmaasTenantId"] = o.DmaasTenantId.Get()
	}
	if o.ClusterId.IsSet() {
		toSerialize["clusterId"] = o.ClusterId.Get()
	}
	if o.ObjectHash.IsSet() {
		toSerialize["objectHash"] = o.ObjectHash.Get()
	}
	if o.UserDetails != nil {
		toSerialize["userDetails"] = o.UserDetails
	}
	if o.CreatedAtMsecs.IsSet() {
		toSerialize["createdAtMsecs"] = o.CreatedAtMsecs.Get()
	}
	if o.UpdatedAtMsecs.IsSet() {
		toSerialize["updatedAtMsecs"] = o.UpdatedAtMsecs.Get()
	}
	if o.SourceRegistration != nil {
		toSerialize["sourceRegistration"] = o.SourceRegistration
	}
	if o.EnableAppParams != nil {
		toSerialize["enableAppParams"] = o.EnableAppParams
	}
	if o.Credentials != nil {
		toSerialize["credentials"] = o.Credentials
	}
	return json.Marshal(toSerialize)
}

type NullableMcmTenantSourceRegistration struct {
	value *McmTenantSourceRegistration
	isSet bool
}

func (v NullableMcmTenantSourceRegistration) Get() *McmTenantSourceRegistration {
	return v.value
}

func (v *NullableMcmTenantSourceRegistration) Set(val *McmTenantSourceRegistration) {
	v.value = val
	v.isSet = true
}

func (v NullableMcmTenantSourceRegistration) IsSet() bool {
	return v.isSet
}

func (v *NullableMcmTenantSourceRegistration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcmTenantSourceRegistration(val *McmTenantSourceRegistration) *NullableMcmTenantSourceRegistration {
	return &NullableMcmTenantSourceRegistration{value: val, isSet: true}
}

func (v NullableMcmTenantSourceRegistration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcmTenantSourceRegistration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


