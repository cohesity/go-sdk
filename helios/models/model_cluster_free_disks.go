/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ClusterFreeDisks Sepcifies the free disks of cluster.
type ClusterFreeDisks struct {
	// Specifies list of free disks of cluster.
	NodeFreeDisks []NodeFreeDisks `json:"nodeFreeDisks"`
}

// NewClusterFreeDisks instantiates a new ClusterFreeDisks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterFreeDisks(nodeFreeDisks []NodeFreeDisks) *ClusterFreeDisks {
	this := ClusterFreeDisks{}
	this.NodeFreeDisks = nodeFreeDisks
	return &this
}

// NewClusterFreeDisksWithDefaults instantiates a new ClusterFreeDisks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterFreeDisksWithDefaults() *ClusterFreeDisks {
	this := ClusterFreeDisks{}
	return &this
}

// GetNodeFreeDisks returns the NodeFreeDisks field value
// If the value is explicit nil, the zero value for []NodeFreeDisks will be returned
func (o *ClusterFreeDisks) GetNodeFreeDisks() []NodeFreeDisks {
	if o == nil {
		var ret []NodeFreeDisks
		return ret
	}

	return o.NodeFreeDisks
}

// GetNodeFreeDisksOk returns a tuple with the NodeFreeDisks field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterFreeDisks) GetNodeFreeDisksOk() (*[]NodeFreeDisks, bool) {
	if o == nil || o.NodeFreeDisks == nil {
		return nil, false
	}
	return &o.NodeFreeDisks, true
}

// SetNodeFreeDisks sets field value
func (o *ClusterFreeDisks) SetNodeFreeDisks(v []NodeFreeDisks) {
	o.NodeFreeDisks = v
}

func (o ClusterFreeDisks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NodeFreeDisks != nil {
		toSerialize["nodeFreeDisks"] = o.NodeFreeDisks
	}
	return json.Marshal(toSerialize)
}

type NullableClusterFreeDisks struct {
	value *ClusterFreeDisks
	isSet bool
}

func (v NullableClusterFreeDisks) Get() *ClusterFreeDisks {
	return v.value
}

func (v *NullableClusterFreeDisks) Set(val *ClusterFreeDisks) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterFreeDisks) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterFreeDisks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterFreeDisks(val *ClusterFreeDisks) *NullableClusterFreeDisks {
	return &NullableClusterFreeDisks{value: val, isSet: true}
}

func (v NullableClusterFreeDisks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterFreeDisks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


