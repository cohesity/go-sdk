/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ReassociateKeyResponseBody The response body of reassociate key.
type ReassociateKeyResponseBody struct {
	// Specifies the new tenant id associated with the api key.
	TenantId NullableString `json:"tenantId,omitempty"`
}

// NewReassociateKeyResponseBody instantiates a new ReassociateKeyResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReassociateKeyResponseBody() *ReassociateKeyResponseBody {
	this := ReassociateKeyResponseBody{}
	return &this
}

// NewReassociateKeyResponseBodyWithDefaults instantiates a new ReassociateKeyResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReassociateKeyResponseBodyWithDefaults() *ReassociateKeyResponseBody {
	this := ReassociateKeyResponseBody{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReassociateKeyResponseBody) GetTenantId() string {
	if o == nil || o.TenantId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReassociateKeyResponseBody) GetTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *ReassociateKeyResponseBody) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *ReassociateKeyResponseBody) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *ReassociateKeyResponseBody) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *ReassociateKeyResponseBody) UnsetTenantId() {
	o.TenantId.Unset()
}

func (o ReassociateKeyResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableReassociateKeyResponseBody struct {
	value *ReassociateKeyResponseBody
	isSet bool
}

func (v NullableReassociateKeyResponseBody) Get() *ReassociateKeyResponseBody {
	return v.value
}

func (v *NullableReassociateKeyResponseBody) Set(val *ReassociateKeyResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableReassociateKeyResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableReassociateKeyResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReassociateKeyResponseBody(val *ReassociateKeyResponseBody) *NullableReassociateKeyResponseBody {
	return &NullableReassociateKeyResponseBody{value: val, isSet: true}
}

func (v NullableReassociateKeyResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReassociateKeyResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


