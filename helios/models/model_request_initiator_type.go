/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// RequestInitiatorType Specifies the type of the request's initiator.
type RequestInitiatorType struct {
	// Specifies the type of the request's initiator.
	RequestInitiatorType *string `json:"requestInitiatorType,omitempty"`
}

// NewRequestInitiatorType instantiates a new RequestInitiatorType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestInitiatorType() *RequestInitiatorType {
	this := RequestInitiatorType{}
	return &this
}

// NewRequestInitiatorTypeWithDefaults instantiates a new RequestInitiatorType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestInitiatorTypeWithDefaults() *RequestInitiatorType {
	this := RequestInitiatorType{}
	return &this
}

// GetRequestInitiatorType returns the RequestInitiatorType field value if set, zero value otherwise.
func (o *RequestInitiatorType) GetRequestInitiatorType() string {
	if o == nil || o.RequestInitiatorType == nil {
		var ret string
		return ret
	}
	return *o.RequestInitiatorType
}

// GetRequestInitiatorTypeOk returns a tuple with the RequestInitiatorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestInitiatorType) GetRequestInitiatorTypeOk() (*string, bool) {
	if o == nil || o.RequestInitiatorType == nil {
		return nil, false
	}
	return o.RequestInitiatorType, true
}

// HasRequestInitiatorType returns a boolean if a field has been set.
func (o *RequestInitiatorType) HasRequestInitiatorType() bool {
	if o != nil && o.RequestInitiatorType != nil {
		return true
	}

	return false
}

// SetRequestInitiatorType gets a reference to the given string and assigns it to the RequestInitiatorType field.
func (o *RequestInitiatorType) SetRequestInitiatorType(v string) {
	o.RequestInitiatorType = &v
}

func (o RequestInitiatorType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RequestInitiatorType != nil {
		toSerialize["requestInitiatorType"] = o.RequestInitiatorType
	}
	return json.Marshal(toSerialize)
}

type NullableRequestInitiatorType struct {
	value *RequestInitiatorType
	isSet bool
}

func (v NullableRequestInitiatorType) Get() *RequestInitiatorType {
	return v.value
}

func (v *NullableRequestInitiatorType) Set(val *RequestInitiatorType) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestInitiatorType) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestInitiatorType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestInitiatorType(val *RequestInitiatorType) *NullableRequestInitiatorType {
	return &NullableRequestInitiatorType{value: val, isSet: true}
}

func (v NullableRequestInitiatorType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestInitiatorType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


