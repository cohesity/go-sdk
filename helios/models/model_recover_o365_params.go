/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// RecoverO365Params Specifies the recovery options specific to Office 365 environment.
type RecoverO365Params struct {
	// Specifies the list of recover Object parameters.
	Objects []CommonRecoverObjectSnapshotParams `json:"objects,omitempty"`
	// Specifies the type of recovery action to be performed.
	RecoveryAction string `json:"recoveryAction"`
	// Specifies the parameters to recover Office 365 One Drive.
	RecoverOneDriveParams *RecoverOneDriveParams `json:"recoverOneDriveParams,omitempty"`
	// Specifies the parameters to recover Office 365 Mailbox.
	RecoverMailboxParams *RecoverMailboxParams `json:"recoverMailboxParams,omitempty"`
	// Specifies the parameters to recover Office 365 Public Folders.
	RecoverPublicFoldersParams *RecoverPublicFoldersParams `json:"recoverPublicFoldersParams,omitempty"`
	// Specifies the parameters to recover Microsoft 365 Group.
	RecoverMsGroupParams *RecoverMsGroupParams `json:"recoverMsGroupParams,omitempty"`
	// Specifies the parameters to recover Microsoft 365 Teams.
	RecoverMsTeamParams *RecoverMsTeamParams `json:"recoverMsTeamParams,omitempty"`
	// Specifies the parameters to recover Microsoft Office 365 Sharepoint Site.
	RecoverSiteParams *RecoverSiteParams `json:"recoverSiteParams,omitempty"`
}

// NewRecoverO365Params instantiates a new RecoverO365Params object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverO365Params(recoveryAction string) *RecoverO365Params {
	this := RecoverO365Params{}
	this.RecoveryAction = recoveryAction
	return &this
}

// NewRecoverO365ParamsWithDefaults instantiates a new RecoverO365Params object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverO365ParamsWithDefaults() *RecoverO365Params {
	this := RecoverO365Params{}
	return &this
}

// GetObjects returns the Objects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverO365Params) GetObjects() []CommonRecoverObjectSnapshotParams {
	if o == nil  {
		var ret []CommonRecoverObjectSnapshotParams
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverO365Params) GetObjectsOk() (*[]CommonRecoverObjectSnapshotParams, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return &o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *RecoverO365Params) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []CommonRecoverObjectSnapshotParams and assigns it to the Objects field.
func (o *RecoverO365Params) SetObjects(v []CommonRecoverObjectSnapshotParams) {
	o.Objects = v
}

// GetRecoveryAction returns the RecoveryAction field value
func (o *RecoverO365Params) GetRecoveryAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecoveryAction
}

// GetRecoveryActionOk returns a tuple with the RecoveryAction field value
// and a boolean to check if the value has been set.
func (o *RecoverO365Params) GetRecoveryActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RecoveryAction, true
}

// SetRecoveryAction sets field value
func (o *RecoverO365Params) SetRecoveryAction(v string) {
	o.RecoveryAction = v
}

// GetRecoverOneDriveParams returns the RecoverOneDriveParams field value if set, zero value otherwise.
func (o *RecoverO365Params) GetRecoverOneDriveParams() RecoverOneDriveParams {
	if o == nil || o.RecoverOneDriveParams == nil {
		var ret RecoverOneDriveParams
		return ret
	}
	return *o.RecoverOneDriveParams
}

// GetRecoverOneDriveParamsOk returns a tuple with the RecoverOneDriveParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverO365Params) GetRecoverOneDriveParamsOk() (*RecoverOneDriveParams, bool) {
	if o == nil || o.RecoverOneDriveParams == nil {
		return nil, false
	}
	return o.RecoverOneDriveParams, true
}

// HasRecoverOneDriveParams returns a boolean if a field has been set.
func (o *RecoverO365Params) HasRecoverOneDriveParams() bool {
	if o != nil && o.RecoverOneDriveParams != nil {
		return true
	}

	return false
}

// SetRecoverOneDriveParams gets a reference to the given RecoverOneDriveParams and assigns it to the RecoverOneDriveParams field.
func (o *RecoverO365Params) SetRecoverOneDriveParams(v RecoverOneDriveParams) {
	o.RecoverOneDriveParams = &v
}

// GetRecoverMailboxParams returns the RecoverMailboxParams field value if set, zero value otherwise.
func (o *RecoverO365Params) GetRecoverMailboxParams() RecoverMailboxParams {
	if o == nil || o.RecoverMailboxParams == nil {
		var ret RecoverMailboxParams
		return ret
	}
	return *o.RecoverMailboxParams
}

// GetRecoverMailboxParamsOk returns a tuple with the RecoverMailboxParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverO365Params) GetRecoverMailboxParamsOk() (*RecoverMailboxParams, bool) {
	if o == nil || o.RecoverMailboxParams == nil {
		return nil, false
	}
	return o.RecoverMailboxParams, true
}

// HasRecoverMailboxParams returns a boolean if a field has been set.
func (o *RecoverO365Params) HasRecoverMailboxParams() bool {
	if o != nil && o.RecoverMailboxParams != nil {
		return true
	}

	return false
}

// SetRecoverMailboxParams gets a reference to the given RecoverMailboxParams and assigns it to the RecoverMailboxParams field.
func (o *RecoverO365Params) SetRecoverMailboxParams(v RecoverMailboxParams) {
	o.RecoverMailboxParams = &v
}

// GetRecoverPublicFoldersParams returns the RecoverPublicFoldersParams field value if set, zero value otherwise.
func (o *RecoverO365Params) GetRecoverPublicFoldersParams() RecoverPublicFoldersParams {
	if o == nil || o.RecoverPublicFoldersParams == nil {
		var ret RecoverPublicFoldersParams
		return ret
	}
	return *o.RecoverPublicFoldersParams
}

// GetRecoverPublicFoldersParamsOk returns a tuple with the RecoverPublicFoldersParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverO365Params) GetRecoverPublicFoldersParamsOk() (*RecoverPublicFoldersParams, bool) {
	if o == nil || o.RecoverPublicFoldersParams == nil {
		return nil, false
	}
	return o.RecoverPublicFoldersParams, true
}

// HasRecoverPublicFoldersParams returns a boolean if a field has been set.
func (o *RecoverO365Params) HasRecoverPublicFoldersParams() bool {
	if o != nil && o.RecoverPublicFoldersParams != nil {
		return true
	}

	return false
}

// SetRecoverPublicFoldersParams gets a reference to the given RecoverPublicFoldersParams and assigns it to the RecoverPublicFoldersParams field.
func (o *RecoverO365Params) SetRecoverPublicFoldersParams(v RecoverPublicFoldersParams) {
	o.RecoverPublicFoldersParams = &v
}

// GetRecoverMsGroupParams returns the RecoverMsGroupParams field value if set, zero value otherwise.
func (o *RecoverO365Params) GetRecoverMsGroupParams() RecoverMsGroupParams {
	if o == nil || o.RecoverMsGroupParams == nil {
		var ret RecoverMsGroupParams
		return ret
	}
	return *o.RecoverMsGroupParams
}

// GetRecoverMsGroupParamsOk returns a tuple with the RecoverMsGroupParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverO365Params) GetRecoverMsGroupParamsOk() (*RecoverMsGroupParams, bool) {
	if o == nil || o.RecoverMsGroupParams == nil {
		return nil, false
	}
	return o.RecoverMsGroupParams, true
}

// HasRecoverMsGroupParams returns a boolean if a field has been set.
func (o *RecoverO365Params) HasRecoverMsGroupParams() bool {
	if o != nil && o.RecoverMsGroupParams != nil {
		return true
	}

	return false
}

// SetRecoverMsGroupParams gets a reference to the given RecoverMsGroupParams and assigns it to the RecoverMsGroupParams field.
func (o *RecoverO365Params) SetRecoverMsGroupParams(v RecoverMsGroupParams) {
	o.RecoverMsGroupParams = &v
}

// GetRecoverMsTeamParams returns the RecoverMsTeamParams field value if set, zero value otherwise.
func (o *RecoverO365Params) GetRecoverMsTeamParams() RecoverMsTeamParams {
	if o == nil || o.RecoverMsTeamParams == nil {
		var ret RecoverMsTeamParams
		return ret
	}
	return *o.RecoverMsTeamParams
}

// GetRecoverMsTeamParamsOk returns a tuple with the RecoverMsTeamParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverO365Params) GetRecoverMsTeamParamsOk() (*RecoverMsTeamParams, bool) {
	if o == nil || o.RecoverMsTeamParams == nil {
		return nil, false
	}
	return o.RecoverMsTeamParams, true
}

// HasRecoverMsTeamParams returns a boolean if a field has been set.
func (o *RecoverO365Params) HasRecoverMsTeamParams() bool {
	if o != nil && o.RecoverMsTeamParams != nil {
		return true
	}

	return false
}

// SetRecoverMsTeamParams gets a reference to the given RecoverMsTeamParams and assigns it to the RecoverMsTeamParams field.
func (o *RecoverO365Params) SetRecoverMsTeamParams(v RecoverMsTeamParams) {
	o.RecoverMsTeamParams = &v
}

// GetRecoverSiteParams returns the RecoverSiteParams field value if set, zero value otherwise.
func (o *RecoverO365Params) GetRecoverSiteParams() RecoverSiteParams {
	if o == nil || o.RecoverSiteParams == nil {
		var ret RecoverSiteParams
		return ret
	}
	return *o.RecoverSiteParams
}

// GetRecoverSiteParamsOk returns a tuple with the RecoverSiteParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverO365Params) GetRecoverSiteParamsOk() (*RecoverSiteParams, bool) {
	if o == nil || o.RecoverSiteParams == nil {
		return nil, false
	}
	return o.RecoverSiteParams, true
}

// HasRecoverSiteParams returns a boolean if a field has been set.
func (o *RecoverO365Params) HasRecoverSiteParams() bool {
	if o != nil && o.RecoverSiteParams != nil {
		return true
	}

	return false
}

// SetRecoverSiteParams gets a reference to the given RecoverSiteParams and assigns it to the RecoverSiteParams field.
func (o *RecoverO365Params) SetRecoverSiteParams(v RecoverSiteParams) {
	o.RecoverSiteParams = &v
}

func (o RecoverO365Params) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if true {
		toSerialize["recoveryAction"] = o.RecoveryAction
	}
	if o.RecoverOneDriveParams != nil {
		toSerialize["recoverOneDriveParams"] = o.RecoverOneDriveParams
	}
	if o.RecoverMailboxParams != nil {
		toSerialize["recoverMailboxParams"] = o.RecoverMailboxParams
	}
	if o.RecoverPublicFoldersParams != nil {
		toSerialize["recoverPublicFoldersParams"] = o.RecoverPublicFoldersParams
	}
	if o.RecoverMsGroupParams != nil {
		toSerialize["recoverMsGroupParams"] = o.RecoverMsGroupParams
	}
	if o.RecoverMsTeamParams != nil {
		toSerialize["recoverMsTeamParams"] = o.RecoverMsTeamParams
	}
	if o.RecoverSiteParams != nil {
		toSerialize["recoverSiteParams"] = o.RecoverSiteParams
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverO365Params struct {
	value *RecoverO365Params
	isSet bool
}

func (v NullableRecoverO365Params) Get() *RecoverO365Params {
	return v.value
}

func (v *NullableRecoverO365Params) Set(val *RecoverO365Params) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverO365Params) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverO365Params) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverO365Params(val *RecoverO365Params) *NullableRecoverO365Params {
	return &NullableRecoverO365Params{value: val, isSet: true}
}

func (v NullableRecoverO365Params) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverO365Params) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


