/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// McmClusterClaimRequestParams Specifies the request params to claim clusters to Helios.
type McmClusterClaimRequestParams struct {
	// Specifies the cluster id.
	ClusterId int64 `json:"clusterId"`
	// Specifies the cluster incarnation id.
	ClusterIncarnationId int64 `json:"clusterIncarnationId"`
	// Specifies the cluster name.
	ClusterName string `json:"clusterName"`
	// Claim token used for authentication.
	ClaimToken string `json:"claimToken"`
}

// NewMcmClusterClaimRequestParams instantiates a new McmClusterClaimRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcmClusterClaimRequestParams(clusterId int64, clusterIncarnationId int64, clusterName string, claimToken string) *McmClusterClaimRequestParams {
	this := McmClusterClaimRequestParams{}
	this.ClusterId = clusterId
	this.ClusterIncarnationId = clusterIncarnationId
	this.ClusterName = clusterName
	this.ClaimToken = claimToken
	return &this
}

// NewMcmClusterClaimRequestParamsWithDefaults instantiates a new McmClusterClaimRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcmClusterClaimRequestParamsWithDefaults() *McmClusterClaimRequestParams {
	this := McmClusterClaimRequestParams{}
	return &this
}

// GetClusterId returns the ClusterId field value
func (o *McmClusterClaimRequestParams) GetClusterId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *McmClusterClaimRequestParams) GetClusterIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *McmClusterClaimRequestParams) SetClusterId(v int64) {
	o.ClusterId = v
}

// GetClusterIncarnationId returns the ClusterIncarnationId field value
func (o *McmClusterClaimRequestParams) GetClusterIncarnationId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ClusterIncarnationId
}

// GetClusterIncarnationIdOk returns a tuple with the ClusterIncarnationId field value
// and a boolean to check if the value has been set.
func (o *McmClusterClaimRequestParams) GetClusterIncarnationIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClusterIncarnationId, true
}

// SetClusterIncarnationId sets field value
func (o *McmClusterClaimRequestParams) SetClusterIncarnationId(v int64) {
	o.ClusterIncarnationId = v
}

// GetClusterName returns the ClusterName field value
func (o *McmClusterClaimRequestParams) GetClusterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value
// and a boolean to check if the value has been set.
func (o *McmClusterClaimRequestParams) GetClusterNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClusterName, true
}

// SetClusterName sets field value
func (o *McmClusterClaimRequestParams) SetClusterName(v string) {
	o.ClusterName = v
}

// GetClaimToken returns the ClaimToken field value
func (o *McmClusterClaimRequestParams) GetClaimToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClaimToken
}

// GetClaimTokenOk returns a tuple with the ClaimToken field value
// and a boolean to check if the value has been set.
func (o *McmClusterClaimRequestParams) GetClaimTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClaimToken, true
}

// SetClaimToken sets field value
func (o *McmClusterClaimRequestParams) SetClaimToken(v string) {
	o.ClaimToken = v
}

func (o McmClusterClaimRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["clusterId"] = o.ClusterId
	}
	if true {
		toSerialize["clusterIncarnationId"] = o.ClusterIncarnationId
	}
	if true {
		toSerialize["clusterName"] = o.ClusterName
	}
	if true {
		toSerialize["claimToken"] = o.ClaimToken
	}
	return json.Marshal(toSerialize)
}

type NullableMcmClusterClaimRequestParams struct {
	value *McmClusterClaimRequestParams
	isSet bool
}

func (v NullableMcmClusterClaimRequestParams) Get() *McmClusterClaimRequestParams {
	return v.value
}

func (v *NullableMcmClusterClaimRequestParams) Set(val *McmClusterClaimRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMcmClusterClaimRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMcmClusterClaimRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcmClusterClaimRequestParams(val *McmClusterClaimRequestParams) *NullableMcmClusterClaimRequestParams {
	return &NullableMcmClusterClaimRequestParams{value: val, isSet: true}
}

func (v NullableMcmClusterClaimRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcmClusterClaimRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


