/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// LocalGlobalObjectIdList List of local and global IDs of objects.
type LocalGlobalObjectIdList struct {
	// Entity look up info summary.
	ObjectIdentifiers *[]LocalGlobalObjectIds `json:"objectIdentifiers,omitempty"`
}

// NewLocalGlobalObjectIdList instantiates a new LocalGlobalObjectIdList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocalGlobalObjectIdList() *LocalGlobalObjectIdList {
	this := LocalGlobalObjectIdList{}
	return &this
}

// NewLocalGlobalObjectIdListWithDefaults instantiates a new LocalGlobalObjectIdList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocalGlobalObjectIdListWithDefaults() *LocalGlobalObjectIdList {
	this := LocalGlobalObjectIdList{}
	return &this
}

// GetObjectIdentifiers returns the ObjectIdentifiers field value if set, zero value otherwise.
func (o *LocalGlobalObjectIdList) GetObjectIdentifiers() []LocalGlobalObjectIds {
	if o == nil || o.ObjectIdentifiers == nil {
		var ret []LocalGlobalObjectIds
		return ret
	}
	return *o.ObjectIdentifiers
}

// GetObjectIdentifiersOk returns a tuple with the ObjectIdentifiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalGlobalObjectIdList) GetObjectIdentifiersOk() (*[]LocalGlobalObjectIds, bool) {
	if o == nil || o.ObjectIdentifiers == nil {
		return nil, false
	}
	return o.ObjectIdentifiers, true
}

// HasObjectIdentifiers returns a boolean if a field has been set.
func (o *LocalGlobalObjectIdList) HasObjectIdentifiers() bool {
	if o != nil && o.ObjectIdentifiers != nil {
		return true
	}

	return false
}

// SetObjectIdentifiers gets a reference to the given []LocalGlobalObjectIds and assigns it to the ObjectIdentifiers field.
func (o *LocalGlobalObjectIdList) SetObjectIdentifiers(v []LocalGlobalObjectIds) {
	o.ObjectIdentifiers = &v
}

func (o LocalGlobalObjectIdList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ObjectIdentifiers != nil {
		toSerialize["objectIdentifiers"] = o.ObjectIdentifiers
	}
	return json.Marshal(toSerialize)
}

type NullableLocalGlobalObjectIdList struct {
	value *LocalGlobalObjectIdList
	isSet bool
}

func (v NullableLocalGlobalObjectIdList) Get() *LocalGlobalObjectIdList {
	return v.value
}

func (v *NullableLocalGlobalObjectIdList) Set(val *LocalGlobalObjectIdList) {
	v.value = val
	v.isSet = true
}

func (v NullableLocalGlobalObjectIdList) IsSet() bool {
	return v.isSet
}

func (v *NullableLocalGlobalObjectIdList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocalGlobalObjectIdList(val *LocalGlobalObjectIdList) *NullableLocalGlobalObjectIdList {
	return &NullableLocalGlobalObjectIdList{value: val, isSet: true}
}

func (v NullableLocalGlobalObjectIdList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocalGlobalObjectIdList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


