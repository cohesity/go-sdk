/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// FlashbladeObjectParams Specifies the common parameters for Flashblade objects.
type FlashbladeObjectParams struct {
	// Specifies a list of NAS mount protocols supported by this object.
	SupportedNasMountProtocols []string `json:"supportedNasMountProtocols,omitempty"`
}

// NewFlashbladeObjectParams instantiates a new FlashbladeObjectParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlashbladeObjectParams() *FlashbladeObjectParams {
	this := FlashbladeObjectParams{}
	return &this
}

// NewFlashbladeObjectParamsWithDefaults instantiates a new FlashbladeObjectParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlashbladeObjectParamsWithDefaults() *FlashbladeObjectParams {
	this := FlashbladeObjectParams{}
	return &this
}

// GetSupportedNasMountProtocols returns the SupportedNasMountProtocols field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FlashbladeObjectParams) GetSupportedNasMountProtocols() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.SupportedNasMountProtocols
}

// GetSupportedNasMountProtocolsOk returns a tuple with the SupportedNasMountProtocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FlashbladeObjectParams) GetSupportedNasMountProtocolsOk() (*[]string, bool) {
	if o == nil || o.SupportedNasMountProtocols == nil {
		return nil, false
	}
	return &o.SupportedNasMountProtocols, true
}

// HasSupportedNasMountProtocols returns a boolean if a field has been set.
func (o *FlashbladeObjectParams) HasSupportedNasMountProtocols() bool {
	if o != nil && o.SupportedNasMountProtocols != nil {
		return true
	}

	return false
}

// SetSupportedNasMountProtocols gets a reference to the given []string and assigns it to the SupportedNasMountProtocols field.
func (o *FlashbladeObjectParams) SetSupportedNasMountProtocols(v []string) {
	o.SupportedNasMountProtocols = v
}

func (o FlashbladeObjectParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SupportedNasMountProtocols != nil {
		toSerialize["supportedNasMountProtocols"] = o.SupportedNasMountProtocols
	}
	return json.Marshal(toSerialize)
}

type NullableFlashbladeObjectParams struct {
	value *FlashbladeObjectParams
	isSet bool
}

func (v NullableFlashbladeObjectParams) Get() *FlashbladeObjectParams {
	return v.value
}

func (v *NullableFlashbladeObjectParams) Set(val *FlashbladeObjectParams) {
	v.value = val
	v.isSet = true
}

func (v NullableFlashbladeObjectParams) IsSet() bool {
	return v.isSet
}

func (v *NullableFlashbladeObjectParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlashbladeObjectParams(val *FlashbladeObjectParams) *NullableFlashbladeObjectParams {
	return &NullableFlashbladeObjectParams{value: val, isSet: true}
}

func (v NullableFlashbladeObjectParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlashbladeObjectParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


