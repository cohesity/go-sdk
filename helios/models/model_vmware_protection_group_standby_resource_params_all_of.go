/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// VmwareProtectionGroupStandbyResourceParamsAllOf struct for VmwareProtectionGroupStandbyResourceParamsAllOf
type VmwareProtectionGroupStandbyResourceParamsAllOf struct {
	// Specifies params to rename the standby resource.
	RenameRestoredObjectParams NullableRecoveredOrClonedVmsRenameConfig `json:"renameRestoredObjectParams,omitempty"`
	// Specifies the object id for parent vCenter source where this standby resource should be created.
	ParentObjectId NullableInt64 `json:"parentObjectId,omitempty"`
	// Specifies the object id for target vm folder where this standby resource should be created.
	TargetFolderObjectId NullableInt64 `json:"targetFolderObjectId,omitempty"`
	// Specifies the object id for target datastore folder where disks for this standby resource should be placed.
	TargetDatastoreFolderObjectId NullableInt64 `json:"targetDatastoreFolderObjectId,omitempty"`
	// Specifies the object id for resource pool where this standby resource should be created.
	ResourcePoolObjectId NullableInt64 `json:"resourcePoolObjectId,omitempty"`
	// Specifies the list of IDs of the datastore objects where this standby resource should be created.
	DatastoreObjectIds *[]int64 `json:"datastoreObjectIds,omitempty"`
	// Specifies the networking configuration to be applied to this standby resource.
	NetworkConfig NullableRecoverVmwareVmNewSourceNetworkConfig `json:"networkConfig,omitempty"`
}

// NewVmwareProtectionGroupStandbyResourceParamsAllOf instantiates a new VmwareProtectionGroupStandbyResourceParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmwareProtectionGroupStandbyResourceParamsAllOf() *VmwareProtectionGroupStandbyResourceParamsAllOf {
	this := VmwareProtectionGroupStandbyResourceParamsAllOf{}
	return &this
}

// NewVmwareProtectionGroupStandbyResourceParamsAllOfWithDefaults instantiates a new VmwareProtectionGroupStandbyResourceParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmwareProtectionGroupStandbyResourceParamsAllOfWithDefaults() *VmwareProtectionGroupStandbyResourceParamsAllOf {
	this := VmwareProtectionGroupStandbyResourceParamsAllOf{}
	return &this
}

// GetRenameRestoredObjectParams returns the RenameRestoredObjectParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) GetRenameRestoredObjectParams() RecoveredOrClonedVmsRenameConfig {
	if o == nil || o.RenameRestoredObjectParams.Get() == nil {
		var ret RecoveredOrClonedVmsRenameConfig
		return ret
	}
	return *o.RenameRestoredObjectParams.Get()
}

// GetRenameRestoredObjectParamsOk returns a tuple with the RenameRestoredObjectParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) GetRenameRestoredObjectParamsOk() (*RecoveredOrClonedVmsRenameConfig, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RenameRestoredObjectParams.Get(), o.RenameRestoredObjectParams.IsSet()
}

// HasRenameRestoredObjectParams returns a boolean if a field has been set.
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) HasRenameRestoredObjectParams() bool {
	if o != nil && o.RenameRestoredObjectParams.IsSet() {
		return true
	}

	return false
}

// SetRenameRestoredObjectParams gets a reference to the given NullableRecoveredOrClonedVmsRenameConfig and assigns it to the RenameRestoredObjectParams field.
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) SetRenameRestoredObjectParams(v RecoveredOrClonedVmsRenameConfig) {
	o.RenameRestoredObjectParams.Set(&v)
}
// SetRenameRestoredObjectParamsNil sets the value for RenameRestoredObjectParams to be an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) SetRenameRestoredObjectParamsNil() {
	o.RenameRestoredObjectParams.Set(nil)
}

// UnsetRenameRestoredObjectParams ensures that no value is present for RenameRestoredObjectParams, not even an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) UnsetRenameRestoredObjectParams() {
	o.RenameRestoredObjectParams.Unset()
}

// GetParentObjectId returns the ParentObjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) GetParentObjectId() int64 {
	if o == nil || o.ParentObjectId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ParentObjectId.Get()
}

// GetParentObjectIdOk returns a tuple with the ParentObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) GetParentObjectIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ParentObjectId.Get(), o.ParentObjectId.IsSet()
}

// HasParentObjectId returns a boolean if a field has been set.
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) HasParentObjectId() bool {
	if o != nil && o.ParentObjectId.IsSet() {
		return true
	}

	return false
}

// SetParentObjectId gets a reference to the given NullableInt64 and assigns it to the ParentObjectId field.
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) SetParentObjectId(v int64) {
	o.ParentObjectId.Set(&v)
}
// SetParentObjectIdNil sets the value for ParentObjectId to be an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) SetParentObjectIdNil() {
	o.ParentObjectId.Set(nil)
}

// UnsetParentObjectId ensures that no value is present for ParentObjectId, not even an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) UnsetParentObjectId() {
	o.ParentObjectId.Unset()
}

// GetTargetFolderObjectId returns the TargetFolderObjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) GetTargetFolderObjectId() int64 {
	if o == nil || o.TargetFolderObjectId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TargetFolderObjectId.Get()
}

// GetTargetFolderObjectIdOk returns a tuple with the TargetFolderObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) GetTargetFolderObjectIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetFolderObjectId.Get(), o.TargetFolderObjectId.IsSet()
}

// HasTargetFolderObjectId returns a boolean if a field has been set.
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) HasTargetFolderObjectId() bool {
	if o != nil && o.TargetFolderObjectId.IsSet() {
		return true
	}

	return false
}

// SetTargetFolderObjectId gets a reference to the given NullableInt64 and assigns it to the TargetFolderObjectId field.
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) SetTargetFolderObjectId(v int64) {
	o.TargetFolderObjectId.Set(&v)
}
// SetTargetFolderObjectIdNil sets the value for TargetFolderObjectId to be an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) SetTargetFolderObjectIdNil() {
	o.TargetFolderObjectId.Set(nil)
}

// UnsetTargetFolderObjectId ensures that no value is present for TargetFolderObjectId, not even an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) UnsetTargetFolderObjectId() {
	o.TargetFolderObjectId.Unset()
}

// GetTargetDatastoreFolderObjectId returns the TargetDatastoreFolderObjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) GetTargetDatastoreFolderObjectId() int64 {
	if o == nil || o.TargetDatastoreFolderObjectId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TargetDatastoreFolderObjectId.Get()
}

// GetTargetDatastoreFolderObjectIdOk returns a tuple with the TargetDatastoreFolderObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) GetTargetDatastoreFolderObjectIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetDatastoreFolderObjectId.Get(), o.TargetDatastoreFolderObjectId.IsSet()
}

// HasTargetDatastoreFolderObjectId returns a boolean if a field has been set.
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) HasTargetDatastoreFolderObjectId() bool {
	if o != nil && o.TargetDatastoreFolderObjectId.IsSet() {
		return true
	}

	return false
}

// SetTargetDatastoreFolderObjectId gets a reference to the given NullableInt64 and assigns it to the TargetDatastoreFolderObjectId field.
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) SetTargetDatastoreFolderObjectId(v int64) {
	o.TargetDatastoreFolderObjectId.Set(&v)
}
// SetTargetDatastoreFolderObjectIdNil sets the value for TargetDatastoreFolderObjectId to be an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) SetTargetDatastoreFolderObjectIdNil() {
	o.TargetDatastoreFolderObjectId.Set(nil)
}

// UnsetTargetDatastoreFolderObjectId ensures that no value is present for TargetDatastoreFolderObjectId, not even an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) UnsetTargetDatastoreFolderObjectId() {
	o.TargetDatastoreFolderObjectId.Unset()
}

// GetResourcePoolObjectId returns the ResourcePoolObjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) GetResourcePoolObjectId() int64 {
	if o == nil || o.ResourcePoolObjectId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ResourcePoolObjectId.Get()
}

// GetResourcePoolObjectIdOk returns a tuple with the ResourcePoolObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) GetResourcePoolObjectIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ResourcePoolObjectId.Get(), o.ResourcePoolObjectId.IsSet()
}

// HasResourcePoolObjectId returns a boolean if a field has been set.
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) HasResourcePoolObjectId() bool {
	if o != nil && o.ResourcePoolObjectId.IsSet() {
		return true
	}

	return false
}

// SetResourcePoolObjectId gets a reference to the given NullableInt64 and assigns it to the ResourcePoolObjectId field.
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) SetResourcePoolObjectId(v int64) {
	o.ResourcePoolObjectId.Set(&v)
}
// SetResourcePoolObjectIdNil sets the value for ResourcePoolObjectId to be an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) SetResourcePoolObjectIdNil() {
	o.ResourcePoolObjectId.Set(nil)
}

// UnsetResourcePoolObjectId ensures that no value is present for ResourcePoolObjectId, not even an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) UnsetResourcePoolObjectId() {
	o.ResourcePoolObjectId.Unset()
}

// GetDatastoreObjectIds returns the DatastoreObjectIds field value if set, zero value otherwise.
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) GetDatastoreObjectIds() []int64 {
	if o == nil || o.DatastoreObjectIds == nil {
		var ret []int64
		return ret
	}
	return *o.DatastoreObjectIds
}

// GetDatastoreObjectIdsOk returns a tuple with the DatastoreObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) GetDatastoreObjectIdsOk() (*[]int64, bool) {
	if o == nil || o.DatastoreObjectIds == nil {
		return nil, false
	}
	return o.DatastoreObjectIds, true
}

// HasDatastoreObjectIds returns a boolean if a field has been set.
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) HasDatastoreObjectIds() bool {
	if o != nil && o.DatastoreObjectIds != nil {
		return true
	}

	return false
}

// SetDatastoreObjectIds gets a reference to the given []int64 and assigns it to the DatastoreObjectIds field.
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) SetDatastoreObjectIds(v []int64) {
	o.DatastoreObjectIds = &v
}

// GetNetworkConfig returns the NetworkConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) GetNetworkConfig() RecoverVmwareVmNewSourceNetworkConfig {
	if o == nil || o.NetworkConfig.Get() == nil {
		var ret RecoverVmwareVmNewSourceNetworkConfig
		return ret
	}
	return *o.NetworkConfig.Get()
}

// GetNetworkConfigOk returns a tuple with the NetworkConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) GetNetworkConfigOk() (*RecoverVmwareVmNewSourceNetworkConfig, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkConfig.Get(), o.NetworkConfig.IsSet()
}

// HasNetworkConfig returns a boolean if a field has been set.
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) HasNetworkConfig() bool {
	if o != nil && o.NetworkConfig.IsSet() {
		return true
	}

	return false
}

// SetNetworkConfig gets a reference to the given NullableRecoverVmwareVmNewSourceNetworkConfig and assigns it to the NetworkConfig field.
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) SetNetworkConfig(v RecoverVmwareVmNewSourceNetworkConfig) {
	o.NetworkConfig.Set(&v)
}
// SetNetworkConfigNil sets the value for NetworkConfig to be an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) SetNetworkConfigNil() {
	o.NetworkConfig.Set(nil)
}

// UnsetNetworkConfig ensures that no value is present for NetworkConfig, not even an explicit nil
func (o *VmwareProtectionGroupStandbyResourceParamsAllOf) UnsetNetworkConfig() {
	o.NetworkConfig.Unset()
}

func (o VmwareProtectionGroupStandbyResourceParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RenameRestoredObjectParams.IsSet() {
		toSerialize["renameRestoredObjectParams"] = o.RenameRestoredObjectParams.Get()
	}
	if o.ParentObjectId.IsSet() {
		toSerialize["parentObjectId"] = o.ParentObjectId.Get()
	}
	if o.TargetFolderObjectId.IsSet() {
		toSerialize["targetFolderObjectId"] = o.TargetFolderObjectId.Get()
	}
	if o.TargetDatastoreFolderObjectId.IsSet() {
		toSerialize["targetDatastoreFolderObjectId"] = o.TargetDatastoreFolderObjectId.Get()
	}
	if o.ResourcePoolObjectId.IsSet() {
		toSerialize["resourcePoolObjectId"] = o.ResourcePoolObjectId.Get()
	}
	if o.DatastoreObjectIds != nil {
		toSerialize["datastoreObjectIds"] = o.DatastoreObjectIds
	}
	if o.NetworkConfig.IsSet() {
		toSerialize["networkConfig"] = o.NetworkConfig.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableVmwareProtectionGroupStandbyResourceParamsAllOf struct {
	value *VmwareProtectionGroupStandbyResourceParamsAllOf
	isSet bool
}

func (v NullableVmwareProtectionGroupStandbyResourceParamsAllOf) Get() *VmwareProtectionGroupStandbyResourceParamsAllOf {
	return v.value
}

func (v *NullableVmwareProtectionGroupStandbyResourceParamsAllOf) Set(val *VmwareProtectionGroupStandbyResourceParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableVmwareProtectionGroupStandbyResourceParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableVmwareProtectionGroupStandbyResourceParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmwareProtectionGroupStandbyResourceParamsAllOf(val *VmwareProtectionGroupStandbyResourceParamsAllOf) *NullableVmwareProtectionGroupStandbyResourceParamsAllOf {
	return &NullableVmwareProtectionGroupStandbyResourceParamsAllOf{value: val, isSet: true}
}

func (v NullableVmwareProtectionGroupStandbyResourceParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmwareProtectionGroupStandbyResourceParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


