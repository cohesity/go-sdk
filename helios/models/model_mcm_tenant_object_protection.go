/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// McmTenantObjectProtection Specifies an object protection for a given tenant.
type McmTenantObjectProtection struct {
	// Specifies the id assigned to the entry.
	ObjectProtectionId NullableString `json:"objectProtectionId,omitempty"`
	// Specifies the tenants which have access to this object.
	TenantIds *[]string `json:"tenantIds,omitempty"`
	// Specifies the account ID to which this source belongs.
	AccountId NullableString `json:"accountId,omitempty"`
	// Specifies the DMaaS tenant ID to which this source belongs.
	DmaasTenantId NullableString `json:"dmaasTenantId,omitempty"`
	// Specifies the ID of the cluster to which the source is registered.
	ClusterId NullableInt64 `json:"clusterId,omitempty"`
	// Specifies the object hash of the source.
	ObjectHash NullableString `json:"objectHash,omitempty"`
	UserDetails *User `json:"userDetails,omitempty"`
	// Specifies the timestamp at which this entry was created in msecs.
	CreatedAtMsecs NullableInt64 `json:"createdAtMsecs,omitempty"`
	// Specifies the timestamp at which this entry was updated in msecs.
	UpdatedAtMsecs NullableInt64 `json:"updatedAtMsecs,omitempty"`
	ObjectProtection *ProtectedObjectInfo `json:"objectProtection,omitempty"`
}

// NewMcmTenantObjectProtection instantiates a new McmTenantObjectProtection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcmTenantObjectProtection() *McmTenantObjectProtection {
	this := McmTenantObjectProtection{}
	return &this
}

// NewMcmTenantObjectProtectionWithDefaults instantiates a new McmTenantObjectProtection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcmTenantObjectProtectionWithDefaults() *McmTenantObjectProtection {
	this := McmTenantObjectProtection{}
	return &this
}

// GetObjectProtectionId returns the ObjectProtectionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantObjectProtection) GetObjectProtectionId() string {
	if o == nil || o.ObjectProtectionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ObjectProtectionId.Get()
}

// GetObjectProtectionIdOk returns a tuple with the ObjectProtectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantObjectProtection) GetObjectProtectionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ObjectProtectionId.Get(), o.ObjectProtectionId.IsSet()
}

// HasObjectProtectionId returns a boolean if a field has been set.
func (o *McmTenantObjectProtection) HasObjectProtectionId() bool {
	if o != nil && o.ObjectProtectionId.IsSet() {
		return true
	}

	return false
}

// SetObjectProtectionId gets a reference to the given NullableString and assigns it to the ObjectProtectionId field.
func (o *McmTenantObjectProtection) SetObjectProtectionId(v string) {
	o.ObjectProtectionId.Set(&v)
}
// SetObjectProtectionIdNil sets the value for ObjectProtectionId to be an explicit nil
func (o *McmTenantObjectProtection) SetObjectProtectionIdNil() {
	o.ObjectProtectionId.Set(nil)
}

// UnsetObjectProtectionId ensures that no value is present for ObjectProtectionId, not even an explicit nil
func (o *McmTenantObjectProtection) UnsetObjectProtectionId() {
	o.ObjectProtectionId.Unset()
}

// GetTenantIds returns the TenantIds field value if set, zero value otherwise.
func (o *McmTenantObjectProtection) GetTenantIds() []string {
	if o == nil || o.TenantIds == nil {
		var ret []string
		return ret
	}
	return *o.TenantIds
}

// GetTenantIdsOk returns a tuple with the TenantIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmTenantObjectProtection) GetTenantIdsOk() (*[]string, bool) {
	if o == nil || o.TenantIds == nil {
		return nil, false
	}
	return o.TenantIds, true
}

// HasTenantIds returns a boolean if a field has been set.
func (o *McmTenantObjectProtection) HasTenantIds() bool {
	if o != nil && o.TenantIds != nil {
		return true
	}

	return false
}

// SetTenantIds gets a reference to the given []string and assigns it to the TenantIds field.
func (o *McmTenantObjectProtection) SetTenantIds(v []string) {
	o.TenantIds = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantObjectProtection) GetAccountId() string {
	if o == nil || o.AccountId.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantObjectProtection) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *McmTenantObjectProtection) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *McmTenantObjectProtection) SetAccountId(v string) {
	o.AccountId.Set(&v)
}
// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *McmTenantObjectProtection) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *McmTenantObjectProtection) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetDmaasTenantId returns the DmaasTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantObjectProtection) GetDmaasTenantId() string {
	if o == nil || o.DmaasTenantId.Get() == nil {
		var ret string
		return ret
	}
	return *o.DmaasTenantId.Get()
}

// GetDmaasTenantIdOk returns a tuple with the DmaasTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantObjectProtection) GetDmaasTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DmaasTenantId.Get(), o.DmaasTenantId.IsSet()
}

// HasDmaasTenantId returns a boolean if a field has been set.
func (o *McmTenantObjectProtection) HasDmaasTenantId() bool {
	if o != nil && o.DmaasTenantId.IsSet() {
		return true
	}

	return false
}

// SetDmaasTenantId gets a reference to the given NullableString and assigns it to the DmaasTenantId field.
func (o *McmTenantObjectProtection) SetDmaasTenantId(v string) {
	o.DmaasTenantId.Set(&v)
}
// SetDmaasTenantIdNil sets the value for DmaasTenantId to be an explicit nil
func (o *McmTenantObjectProtection) SetDmaasTenantIdNil() {
	o.DmaasTenantId.Set(nil)
}

// UnsetDmaasTenantId ensures that no value is present for DmaasTenantId, not even an explicit nil
func (o *McmTenantObjectProtection) UnsetDmaasTenantId() {
	o.DmaasTenantId.Unset()
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantObjectProtection) GetClusterId() int64 {
	if o == nil || o.ClusterId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ClusterId.Get()
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantObjectProtection) GetClusterIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterId.Get(), o.ClusterId.IsSet()
}

// HasClusterId returns a boolean if a field has been set.
func (o *McmTenantObjectProtection) HasClusterId() bool {
	if o != nil && o.ClusterId.IsSet() {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given NullableInt64 and assigns it to the ClusterId field.
func (o *McmTenantObjectProtection) SetClusterId(v int64) {
	o.ClusterId.Set(&v)
}
// SetClusterIdNil sets the value for ClusterId to be an explicit nil
func (o *McmTenantObjectProtection) SetClusterIdNil() {
	o.ClusterId.Set(nil)
}

// UnsetClusterId ensures that no value is present for ClusterId, not even an explicit nil
func (o *McmTenantObjectProtection) UnsetClusterId() {
	o.ClusterId.Unset()
}

// GetObjectHash returns the ObjectHash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantObjectProtection) GetObjectHash() string {
	if o == nil || o.ObjectHash.Get() == nil {
		var ret string
		return ret
	}
	return *o.ObjectHash.Get()
}

// GetObjectHashOk returns a tuple with the ObjectHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantObjectProtection) GetObjectHashOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ObjectHash.Get(), o.ObjectHash.IsSet()
}

// HasObjectHash returns a boolean if a field has been set.
func (o *McmTenantObjectProtection) HasObjectHash() bool {
	if o != nil && o.ObjectHash.IsSet() {
		return true
	}

	return false
}

// SetObjectHash gets a reference to the given NullableString and assigns it to the ObjectHash field.
func (o *McmTenantObjectProtection) SetObjectHash(v string) {
	o.ObjectHash.Set(&v)
}
// SetObjectHashNil sets the value for ObjectHash to be an explicit nil
func (o *McmTenantObjectProtection) SetObjectHashNil() {
	o.ObjectHash.Set(nil)
}

// UnsetObjectHash ensures that no value is present for ObjectHash, not even an explicit nil
func (o *McmTenantObjectProtection) UnsetObjectHash() {
	o.ObjectHash.Unset()
}

// GetUserDetails returns the UserDetails field value if set, zero value otherwise.
func (o *McmTenantObjectProtection) GetUserDetails() User {
	if o == nil || o.UserDetails == nil {
		var ret User
		return ret
	}
	return *o.UserDetails
}

// GetUserDetailsOk returns a tuple with the UserDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmTenantObjectProtection) GetUserDetailsOk() (*User, bool) {
	if o == nil || o.UserDetails == nil {
		return nil, false
	}
	return o.UserDetails, true
}

// HasUserDetails returns a boolean if a field has been set.
func (o *McmTenantObjectProtection) HasUserDetails() bool {
	if o != nil && o.UserDetails != nil {
		return true
	}

	return false
}

// SetUserDetails gets a reference to the given User and assigns it to the UserDetails field.
func (o *McmTenantObjectProtection) SetUserDetails(v User) {
	o.UserDetails = &v
}

// GetCreatedAtMsecs returns the CreatedAtMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantObjectProtection) GetCreatedAtMsecs() int64 {
	if o == nil || o.CreatedAtMsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.CreatedAtMsecs.Get()
}

// GetCreatedAtMsecsOk returns a tuple with the CreatedAtMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantObjectProtection) GetCreatedAtMsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedAtMsecs.Get(), o.CreatedAtMsecs.IsSet()
}

// HasCreatedAtMsecs returns a boolean if a field has been set.
func (o *McmTenantObjectProtection) HasCreatedAtMsecs() bool {
	if o != nil && o.CreatedAtMsecs.IsSet() {
		return true
	}

	return false
}

// SetCreatedAtMsecs gets a reference to the given NullableInt64 and assigns it to the CreatedAtMsecs field.
func (o *McmTenantObjectProtection) SetCreatedAtMsecs(v int64) {
	o.CreatedAtMsecs.Set(&v)
}
// SetCreatedAtMsecsNil sets the value for CreatedAtMsecs to be an explicit nil
func (o *McmTenantObjectProtection) SetCreatedAtMsecsNil() {
	o.CreatedAtMsecs.Set(nil)
}

// UnsetCreatedAtMsecs ensures that no value is present for CreatedAtMsecs, not even an explicit nil
func (o *McmTenantObjectProtection) UnsetCreatedAtMsecs() {
	o.CreatedAtMsecs.Unset()
}

// GetUpdatedAtMsecs returns the UpdatedAtMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantObjectProtection) GetUpdatedAtMsecs() int64 {
	if o == nil || o.UpdatedAtMsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.UpdatedAtMsecs.Get()
}

// GetUpdatedAtMsecsOk returns a tuple with the UpdatedAtMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantObjectProtection) GetUpdatedAtMsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpdatedAtMsecs.Get(), o.UpdatedAtMsecs.IsSet()
}

// HasUpdatedAtMsecs returns a boolean if a field has been set.
func (o *McmTenantObjectProtection) HasUpdatedAtMsecs() bool {
	if o != nil && o.UpdatedAtMsecs.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAtMsecs gets a reference to the given NullableInt64 and assigns it to the UpdatedAtMsecs field.
func (o *McmTenantObjectProtection) SetUpdatedAtMsecs(v int64) {
	o.UpdatedAtMsecs.Set(&v)
}
// SetUpdatedAtMsecsNil sets the value for UpdatedAtMsecs to be an explicit nil
func (o *McmTenantObjectProtection) SetUpdatedAtMsecsNil() {
	o.UpdatedAtMsecs.Set(nil)
}

// UnsetUpdatedAtMsecs ensures that no value is present for UpdatedAtMsecs, not even an explicit nil
func (o *McmTenantObjectProtection) UnsetUpdatedAtMsecs() {
	o.UpdatedAtMsecs.Unset()
}

// GetObjectProtection returns the ObjectProtection field value if set, zero value otherwise.
func (o *McmTenantObjectProtection) GetObjectProtection() ProtectedObjectInfo {
	if o == nil || o.ObjectProtection == nil {
		var ret ProtectedObjectInfo
		return ret
	}
	return *o.ObjectProtection
}

// GetObjectProtectionOk returns a tuple with the ObjectProtection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmTenantObjectProtection) GetObjectProtectionOk() (*ProtectedObjectInfo, bool) {
	if o == nil || o.ObjectProtection == nil {
		return nil, false
	}
	return o.ObjectProtection, true
}

// HasObjectProtection returns a boolean if a field has been set.
func (o *McmTenantObjectProtection) HasObjectProtection() bool {
	if o != nil && o.ObjectProtection != nil {
		return true
	}

	return false
}

// SetObjectProtection gets a reference to the given ProtectedObjectInfo and assigns it to the ObjectProtection field.
func (o *McmTenantObjectProtection) SetObjectProtection(v ProtectedObjectInfo) {
	o.ObjectProtection = &v
}

func (o McmTenantObjectProtection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ObjectProtectionId.IsSet() {
		toSerialize["objectProtectionId"] = o.ObjectProtectionId.Get()
	}
	if o.TenantIds != nil {
		toSerialize["tenantIds"] = o.TenantIds
	}
	if o.AccountId.IsSet() {
		toSerialize["accountId"] = o.AccountId.Get()
	}
	if o.DmaasTenantId.IsSet() {
		toSerialize["dmaasTenantId"] = o.DmaasTenantId.Get()
	}
	if o.ClusterId.IsSet() {
		toSerialize["clusterId"] = o.ClusterId.Get()
	}
	if o.ObjectHash.IsSet() {
		toSerialize["objectHash"] = o.ObjectHash.Get()
	}
	if o.UserDetails != nil {
		toSerialize["userDetails"] = o.UserDetails
	}
	if o.CreatedAtMsecs.IsSet() {
		toSerialize["createdAtMsecs"] = o.CreatedAtMsecs.Get()
	}
	if o.UpdatedAtMsecs.IsSet() {
		toSerialize["updatedAtMsecs"] = o.UpdatedAtMsecs.Get()
	}
	if o.ObjectProtection != nil {
		toSerialize["objectProtection"] = o.ObjectProtection
	}
	return json.Marshal(toSerialize)
}

type NullableMcmTenantObjectProtection struct {
	value *McmTenantObjectProtection
	isSet bool
}

func (v NullableMcmTenantObjectProtection) Get() *McmTenantObjectProtection {
	return v.value
}

func (v *NullableMcmTenantObjectProtection) Set(val *McmTenantObjectProtection) {
	v.value = val
	v.isSet = true
}

func (v NullableMcmTenantObjectProtection) IsSet() bool {
	return v.isSet
}

func (v *NullableMcmTenantObjectProtection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcmTenantObjectProtection(val *McmTenantObjectProtection) *NullableMcmTenantObjectProtection {
	return &NullableMcmTenantObjectProtection{value: val, isSet: true}
}

func (v NullableMcmTenantObjectProtection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcmTenantObjectProtection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


