/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ProtectionGroups Protection Group  response.
type ProtectionGroups struct {
	// Specifies the list of Protection Groups which were returned by the request.
	ProtectionGroups []ProtectionGroup `json:"protectionGroups,omitempty"`
}

// NewProtectionGroups instantiates a new ProtectionGroups object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionGroups() *ProtectionGroups {
	this := ProtectionGroups{}
	return &this
}

// NewProtectionGroupsWithDefaults instantiates a new ProtectionGroups object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionGroupsWithDefaults() *ProtectionGroups {
	this := ProtectionGroups{}
	return &this
}

// GetProtectionGroups returns the ProtectionGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroups) GetProtectionGroups() []ProtectionGroup {
	if o == nil  {
		var ret []ProtectionGroup
		return ret
	}
	return o.ProtectionGroups
}

// GetProtectionGroupsOk returns a tuple with the ProtectionGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroups) GetProtectionGroupsOk() (*[]ProtectionGroup, bool) {
	if o == nil || o.ProtectionGroups == nil {
		return nil, false
	}
	return &o.ProtectionGroups, true
}

// HasProtectionGroups returns a boolean if a field has been set.
func (o *ProtectionGroups) HasProtectionGroups() bool {
	if o != nil && o.ProtectionGroups != nil {
		return true
	}

	return false
}

// SetProtectionGroups gets a reference to the given []ProtectionGroup and assigns it to the ProtectionGroups field.
func (o *ProtectionGroups) SetProtectionGroups(v []ProtectionGroup) {
	o.ProtectionGroups = v
}

func (o ProtectionGroups) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProtectionGroups != nil {
		toSerialize["protectionGroups"] = o.ProtectionGroups
	}
	return json.Marshal(toSerialize)
}

type NullableProtectionGroups struct {
	value *ProtectionGroups
	isSet bool
}

func (v NullableProtectionGroups) Get() *ProtectionGroups {
	return v.value
}

func (v *NullableProtectionGroups) Set(val *ProtectionGroups) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionGroups) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionGroups) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionGroups(val *ProtectionGroups) *NullableProtectionGroups {
	return &NullableProtectionGroups{value: val, isSet: true}
}

func (v NullableProtectionGroups) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionGroups) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


