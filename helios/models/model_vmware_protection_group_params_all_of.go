/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// VmwareProtectionGroupParamsAllOf struct for VmwareProtectionGroupParamsAllOf
type VmwareProtectionGroupParamsAllOf struct {
	// Specifies the objects to include in the backup.
	Objects *[]VmwareProtectionGroupObjectParams `json:"objects,omitempty"`
	// Specifies a list of disks to exclude from the backup.
	GlobalExcludeDisks []DiskInfo `json:"globalExcludeDisks,omitempty"`
	// Specifies the standby resource objects for this backup.
	StandbyResourceObjects []VmwareProtectionGroupStandbyResourceParams `json:"standbyResourceObjects,omitempty"`
}

// NewVmwareProtectionGroupParamsAllOf instantiates a new VmwareProtectionGroupParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmwareProtectionGroupParamsAllOf() *VmwareProtectionGroupParamsAllOf {
	this := VmwareProtectionGroupParamsAllOf{}
	return &this
}

// NewVmwareProtectionGroupParamsAllOfWithDefaults instantiates a new VmwareProtectionGroupParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmwareProtectionGroupParamsAllOfWithDefaults() *VmwareProtectionGroupParamsAllOf {
	this := VmwareProtectionGroupParamsAllOf{}
	return &this
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *VmwareProtectionGroupParamsAllOf) GetObjects() []VmwareProtectionGroupObjectParams {
	if o == nil || o.Objects == nil {
		var ret []VmwareProtectionGroupObjectParams
		return ret
	}
	return *o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmwareProtectionGroupParamsAllOf) GetObjectsOk() (*[]VmwareProtectionGroupObjectParams, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *VmwareProtectionGroupParamsAllOf) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []VmwareProtectionGroupObjectParams and assigns it to the Objects field.
func (o *VmwareProtectionGroupParamsAllOf) SetObjects(v []VmwareProtectionGroupObjectParams) {
	o.Objects = &v
}

// GetGlobalExcludeDisks returns the GlobalExcludeDisks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareProtectionGroupParamsAllOf) GetGlobalExcludeDisks() []DiskInfo {
	if o == nil  {
		var ret []DiskInfo
		return ret
	}
	return o.GlobalExcludeDisks
}

// GetGlobalExcludeDisksOk returns a tuple with the GlobalExcludeDisks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareProtectionGroupParamsAllOf) GetGlobalExcludeDisksOk() (*[]DiskInfo, bool) {
	if o == nil || o.GlobalExcludeDisks == nil {
		return nil, false
	}
	return &o.GlobalExcludeDisks, true
}

// HasGlobalExcludeDisks returns a boolean if a field has been set.
func (o *VmwareProtectionGroupParamsAllOf) HasGlobalExcludeDisks() bool {
	if o != nil && o.GlobalExcludeDisks != nil {
		return true
	}

	return false
}

// SetGlobalExcludeDisks gets a reference to the given []DiskInfo and assigns it to the GlobalExcludeDisks field.
func (o *VmwareProtectionGroupParamsAllOf) SetGlobalExcludeDisks(v []DiskInfo) {
	o.GlobalExcludeDisks = v
}

// GetStandbyResourceObjects returns the StandbyResourceObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareProtectionGroupParamsAllOf) GetStandbyResourceObjects() []VmwareProtectionGroupStandbyResourceParams {
	if o == nil  {
		var ret []VmwareProtectionGroupStandbyResourceParams
		return ret
	}
	return o.StandbyResourceObjects
}

// GetStandbyResourceObjectsOk returns a tuple with the StandbyResourceObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareProtectionGroupParamsAllOf) GetStandbyResourceObjectsOk() (*[]VmwareProtectionGroupStandbyResourceParams, bool) {
	if o == nil || o.StandbyResourceObjects == nil {
		return nil, false
	}
	return &o.StandbyResourceObjects, true
}

// HasStandbyResourceObjects returns a boolean if a field has been set.
func (o *VmwareProtectionGroupParamsAllOf) HasStandbyResourceObjects() bool {
	if o != nil && o.StandbyResourceObjects != nil {
		return true
	}

	return false
}

// SetStandbyResourceObjects gets a reference to the given []VmwareProtectionGroupStandbyResourceParams and assigns it to the StandbyResourceObjects field.
func (o *VmwareProtectionGroupParamsAllOf) SetStandbyResourceObjects(v []VmwareProtectionGroupStandbyResourceParams) {
	o.StandbyResourceObjects = v
}

func (o VmwareProtectionGroupParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if o.GlobalExcludeDisks != nil {
		toSerialize["globalExcludeDisks"] = o.GlobalExcludeDisks
	}
	if o.StandbyResourceObjects != nil {
		toSerialize["standbyResourceObjects"] = o.StandbyResourceObjects
	}
	return json.Marshal(toSerialize)
}

type NullableVmwareProtectionGroupParamsAllOf struct {
	value *VmwareProtectionGroupParamsAllOf
	isSet bool
}

func (v NullableVmwareProtectionGroupParamsAllOf) Get() *VmwareProtectionGroupParamsAllOf {
	return v.value
}

func (v *NullableVmwareProtectionGroupParamsAllOf) Set(val *VmwareProtectionGroupParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableVmwareProtectionGroupParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableVmwareProtectionGroupParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmwareProtectionGroupParamsAllOf(val *VmwareProtectionGroupParamsAllOf) *NullableVmwareProtectionGroupParamsAllOf {
	return &NullableVmwareProtectionGroupParamsAllOf{value: val, isSet: true}
}

func (v NullableVmwareProtectionGroupParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmwareProtectionGroupParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


