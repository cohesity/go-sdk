/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// HeliosBmrBackupPolicy Specifies the BMR schedule in case of physical source protection.
type HeliosBmrBackupPolicy struct {
	Schedule *HeliosBmrSchedule `json:"schedule,omitempty"`
	Retention *HeliosRetention `json:"retention,omitempty"`
}

// NewHeliosBmrBackupPolicy instantiates a new HeliosBmrBackupPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosBmrBackupPolicy() *HeliosBmrBackupPolicy {
	this := HeliosBmrBackupPolicy{}
	return &this
}

// NewHeliosBmrBackupPolicyWithDefaults instantiates a new HeliosBmrBackupPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosBmrBackupPolicyWithDefaults() *HeliosBmrBackupPolicy {
	this := HeliosBmrBackupPolicy{}
	return &this
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *HeliosBmrBackupPolicy) GetSchedule() HeliosBmrSchedule {
	if o == nil || o.Schedule == nil {
		var ret HeliosBmrSchedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosBmrBackupPolicy) GetScheduleOk() (*HeliosBmrSchedule, bool) {
	if o == nil || o.Schedule == nil {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *HeliosBmrBackupPolicy) HasSchedule() bool {
	if o != nil && o.Schedule != nil {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given HeliosBmrSchedule and assigns it to the Schedule field.
func (o *HeliosBmrBackupPolicy) SetSchedule(v HeliosBmrSchedule) {
	o.Schedule = &v
}

// GetRetention returns the Retention field value if set, zero value otherwise.
func (o *HeliosBmrBackupPolicy) GetRetention() HeliosRetention {
	if o == nil || o.Retention == nil {
		var ret HeliosRetention
		return ret
	}
	return *o.Retention
}

// GetRetentionOk returns a tuple with the Retention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosBmrBackupPolicy) GetRetentionOk() (*HeliosRetention, bool) {
	if o == nil || o.Retention == nil {
		return nil, false
	}
	return o.Retention, true
}

// HasRetention returns a boolean if a field has been set.
func (o *HeliosBmrBackupPolicy) HasRetention() bool {
	if o != nil && o.Retention != nil {
		return true
	}

	return false
}

// SetRetention gets a reference to the given HeliosRetention and assigns it to the Retention field.
func (o *HeliosBmrBackupPolicy) SetRetention(v HeliosRetention) {
	o.Retention = &v
}

func (o HeliosBmrBackupPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Schedule != nil {
		toSerialize["schedule"] = o.Schedule
	}
	if o.Retention != nil {
		toSerialize["retention"] = o.Retention
	}
	return json.Marshal(toSerialize)
}

type NullableHeliosBmrBackupPolicy struct {
	value *HeliosBmrBackupPolicy
	isSet bool
}

func (v NullableHeliosBmrBackupPolicy) Get() *HeliosBmrBackupPolicy {
	return v.value
}

func (v *NullableHeliosBmrBackupPolicy) Set(val *HeliosBmrBackupPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosBmrBackupPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosBmrBackupPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosBmrBackupPolicy(val *HeliosBmrBackupPolicy) *NullableHeliosBmrBackupPolicy {
	return &NullableHeliosBmrBackupPolicy{value: val, isSet: true}
}

func (v NullableHeliosBmrBackupPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosBmrBackupPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


