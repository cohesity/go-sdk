/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// TieringS3CompExternalTargetParams Specifies the parameters which are specific to S3 Compatible related External Targets of tiering purpose type.
type TieringS3CompExternalTargetParams struct {
	// Specifies the bucket name of the external target.
	BucketName NullableString `json:"bucketName"`
	// Specifies the access key id of the external target.
	AccessKeyId NullableString `json:"accessKeyId"`
	// Specifies the secret access key of the external target.
	SecretAccessKey NullableString `json:"secretAccessKey"`
	// Specifies the endpoint of the external target.
	EndPoint NullableString `json:"endPoint"`
	// Specifies the secure connection(https) is enabled or not.
	SecureConnection NullableBool `json:"secureConnection,omitempty"`
	// Specifies the aws signature version of the external target.
	SignatureVersion NullableInt32 `json:"signatureVersion,omitempty"`
}

// NewTieringS3CompExternalTargetParams instantiates a new TieringS3CompExternalTargetParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTieringS3CompExternalTargetParams(bucketName NullableString, accessKeyId NullableString, secretAccessKey NullableString, endPoint NullableString) *TieringS3CompExternalTargetParams {
	this := TieringS3CompExternalTargetParams{}
	this.BucketName = bucketName
	this.AccessKeyId = accessKeyId
	this.SecretAccessKey = secretAccessKey
	this.EndPoint = endPoint
	return &this
}

// NewTieringS3CompExternalTargetParamsWithDefaults instantiates a new TieringS3CompExternalTargetParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTieringS3CompExternalTargetParamsWithDefaults() *TieringS3CompExternalTargetParams {
	this := TieringS3CompExternalTargetParams{}
	return &this
}

// GetBucketName returns the BucketName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TieringS3CompExternalTargetParams) GetBucketName() string {
	if o == nil || o.BucketName.Get() == nil {
		var ret string
		return ret
	}

	return *o.BucketName.Get()
}

// GetBucketNameOk returns a tuple with the BucketName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TieringS3CompExternalTargetParams) GetBucketNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BucketName.Get(), o.BucketName.IsSet()
}

// SetBucketName sets field value
func (o *TieringS3CompExternalTargetParams) SetBucketName(v string) {
	o.BucketName.Set(&v)
}

// GetAccessKeyId returns the AccessKeyId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TieringS3CompExternalTargetParams) GetAccessKeyId() string {
	if o == nil || o.AccessKeyId.Get() == nil {
		var ret string
		return ret
	}

	return *o.AccessKeyId.Get()
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TieringS3CompExternalTargetParams) GetAccessKeyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccessKeyId.Get(), o.AccessKeyId.IsSet()
}

// SetAccessKeyId sets field value
func (o *TieringS3CompExternalTargetParams) SetAccessKeyId(v string) {
	o.AccessKeyId.Set(&v)
}

// GetSecretAccessKey returns the SecretAccessKey field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TieringS3CompExternalTargetParams) GetSecretAccessKey() string {
	if o == nil || o.SecretAccessKey.Get() == nil {
		var ret string
		return ret
	}

	return *o.SecretAccessKey.Get()
}

// GetSecretAccessKeyOk returns a tuple with the SecretAccessKey field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TieringS3CompExternalTargetParams) GetSecretAccessKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SecretAccessKey.Get(), o.SecretAccessKey.IsSet()
}

// SetSecretAccessKey sets field value
func (o *TieringS3CompExternalTargetParams) SetSecretAccessKey(v string) {
	o.SecretAccessKey.Set(&v)
}

// GetEndPoint returns the EndPoint field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TieringS3CompExternalTargetParams) GetEndPoint() string {
	if o == nil || o.EndPoint.Get() == nil {
		var ret string
		return ret
	}

	return *o.EndPoint.Get()
}

// GetEndPointOk returns a tuple with the EndPoint field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TieringS3CompExternalTargetParams) GetEndPointOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndPoint.Get(), o.EndPoint.IsSet()
}

// SetEndPoint sets field value
func (o *TieringS3CompExternalTargetParams) SetEndPoint(v string) {
	o.EndPoint.Set(&v)
}

// GetSecureConnection returns the SecureConnection field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TieringS3CompExternalTargetParams) GetSecureConnection() bool {
	if o == nil || o.SecureConnection.Get() == nil {
		var ret bool
		return ret
	}
	return *o.SecureConnection.Get()
}

// GetSecureConnectionOk returns a tuple with the SecureConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TieringS3CompExternalTargetParams) GetSecureConnectionOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SecureConnection.Get(), o.SecureConnection.IsSet()
}

// HasSecureConnection returns a boolean if a field has been set.
func (o *TieringS3CompExternalTargetParams) HasSecureConnection() bool {
	if o != nil && o.SecureConnection.IsSet() {
		return true
	}

	return false
}

// SetSecureConnection gets a reference to the given NullableBool and assigns it to the SecureConnection field.
func (o *TieringS3CompExternalTargetParams) SetSecureConnection(v bool) {
	o.SecureConnection.Set(&v)
}
// SetSecureConnectionNil sets the value for SecureConnection to be an explicit nil
func (o *TieringS3CompExternalTargetParams) SetSecureConnectionNil() {
	o.SecureConnection.Set(nil)
}

// UnsetSecureConnection ensures that no value is present for SecureConnection, not even an explicit nil
func (o *TieringS3CompExternalTargetParams) UnsetSecureConnection() {
	o.SecureConnection.Unset()
}

// GetSignatureVersion returns the SignatureVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TieringS3CompExternalTargetParams) GetSignatureVersion() int32 {
	if o == nil || o.SignatureVersion.Get() == nil {
		var ret int32
		return ret
	}
	return *o.SignatureVersion.Get()
}

// GetSignatureVersionOk returns a tuple with the SignatureVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TieringS3CompExternalTargetParams) GetSignatureVersionOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SignatureVersion.Get(), o.SignatureVersion.IsSet()
}

// HasSignatureVersion returns a boolean if a field has been set.
func (o *TieringS3CompExternalTargetParams) HasSignatureVersion() bool {
	if o != nil && o.SignatureVersion.IsSet() {
		return true
	}

	return false
}

// SetSignatureVersion gets a reference to the given NullableInt32 and assigns it to the SignatureVersion field.
func (o *TieringS3CompExternalTargetParams) SetSignatureVersion(v int32) {
	o.SignatureVersion.Set(&v)
}
// SetSignatureVersionNil sets the value for SignatureVersion to be an explicit nil
func (o *TieringS3CompExternalTargetParams) SetSignatureVersionNil() {
	o.SignatureVersion.Set(nil)
}

// UnsetSignatureVersion ensures that no value is present for SignatureVersion, not even an explicit nil
func (o *TieringS3CompExternalTargetParams) UnsetSignatureVersion() {
	o.SignatureVersion.Unset()
}

func (o TieringS3CompExternalTargetParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bucketName"] = o.BucketName.Get()
	}
	if true {
		toSerialize["accessKeyId"] = o.AccessKeyId.Get()
	}
	if true {
		toSerialize["secretAccessKey"] = o.SecretAccessKey.Get()
	}
	if true {
		toSerialize["endPoint"] = o.EndPoint.Get()
	}
	if o.SecureConnection.IsSet() {
		toSerialize["secureConnection"] = o.SecureConnection.Get()
	}
	if o.SignatureVersion.IsSet() {
		toSerialize["signatureVersion"] = o.SignatureVersion.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTieringS3CompExternalTargetParams struct {
	value *TieringS3CompExternalTargetParams
	isSet bool
}

func (v NullableTieringS3CompExternalTargetParams) Get() *TieringS3CompExternalTargetParams {
	return v.value
}

func (v *NullableTieringS3CompExternalTargetParams) Set(val *TieringS3CompExternalTargetParams) {
	v.value = val
	v.isSet = true
}

func (v NullableTieringS3CompExternalTargetParams) IsSet() bool {
	return v.isSet
}

func (v *NullableTieringS3CompExternalTargetParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTieringS3CompExternalTargetParams(val *TieringS3CompExternalTargetParams) *NullableTieringS3CompExternalTargetParams {
	return &NullableTieringS3CompExternalTargetParams{value: val, isSet: true}
}

func (v NullableTieringS3CompExternalTargetParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTieringS3CompExternalTargetParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


