/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// RecoverAcropolisVmParams Specifies the recovery options specific to Acropolis environment.
type RecoverAcropolisVmParams struct {
	// Specifies the Protection Group Runs params to recover. All the VM's that are successfully backed up by specified Runs will be recovered. This can be specified along with individual snapshots of VMs. User has to make sure that specified Object snapshots and Protection Group Runs should not have any intersection. For example, user cannot specify multiple Runs which has same Object or an Object snapshot and a Run which has same Object's snapshot.
	RecoverProtectionGroupRunsParams []RecoverProtectionGroupRunParams `json:"recoverProtectionGroupRunsParams,omitempty"`
	// Specifies the environment of the recovery target. The corresponding params below must be filled out.
	TargetEnvironment string `json:"targetEnvironment"`
	// Specifies the params for recovering to a Acropolis target.
	AcropolisTargetParams NullableAcropolisTargetParamsForRecoverVm `json:"acropolisTargetParams,omitempty"`
}

// NewRecoverAcropolisVmParams instantiates a new RecoverAcropolisVmParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverAcropolisVmParams(targetEnvironment string) *RecoverAcropolisVmParams {
	this := RecoverAcropolisVmParams{}
	this.TargetEnvironment = targetEnvironment
	return &this
}

// NewRecoverAcropolisVmParamsWithDefaults instantiates a new RecoverAcropolisVmParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverAcropolisVmParamsWithDefaults() *RecoverAcropolisVmParams {
	this := RecoverAcropolisVmParams{}
	return &this
}

// GetRecoverProtectionGroupRunsParams returns the RecoverProtectionGroupRunsParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverAcropolisVmParams) GetRecoverProtectionGroupRunsParams() []RecoverProtectionGroupRunParams {
	if o == nil  {
		var ret []RecoverProtectionGroupRunParams
		return ret
	}
	return o.RecoverProtectionGroupRunsParams
}

// GetRecoverProtectionGroupRunsParamsOk returns a tuple with the RecoverProtectionGroupRunsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAcropolisVmParams) GetRecoverProtectionGroupRunsParamsOk() (*[]RecoverProtectionGroupRunParams, bool) {
	if o == nil || o.RecoverProtectionGroupRunsParams == nil {
		return nil, false
	}
	return &o.RecoverProtectionGroupRunsParams, true
}

// HasRecoverProtectionGroupRunsParams returns a boolean if a field has been set.
func (o *RecoverAcropolisVmParams) HasRecoverProtectionGroupRunsParams() bool {
	if o != nil && o.RecoverProtectionGroupRunsParams != nil {
		return true
	}

	return false
}

// SetRecoverProtectionGroupRunsParams gets a reference to the given []RecoverProtectionGroupRunParams and assigns it to the RecoverProtectionGroupRunsParams field.
func (o *RecoverAcropolisVmParams) SetRecoverProtectionGroupRunsParams(v []RecoverProtectionGroupRunParams) {
	o.RecoverProtectionGroupRunsParams = v
}

// GetTargetEnvironment returns the TargetEnvironment field value
func (o *RecoverAcropolisVmParams) GetTargetEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetEnvironment
}

// GetTargetEnvironmentOk returns a tuple with the TargetEnvironment field value
// and a boolean to check if the value has been set.
func (o *RecoverAcropolisVmParams) GetTargetEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TargetEnvironment, true
}

// SetTargetEnvironment sets field value
func (o *RecoverAcropolisVmParams) SetTargetEnvironment(v string) {
	o.TargetEnvironment = v
}

// GetAcropolisTargetParams returns the AcropolisTargetParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverAcropolisVmParams) GetAcropolisTargetParams() AcropolisTargetParamsForRecoverVm {
	if o == nil || o.AcropolisTargetParams.Get() == nil {
		var ret AcropolisTargetParamsForRecoverVm
		return ret
	}
	return *o.AcropolisTargetParams.Get()
}

// GetAcropolisTargetParamsOk returns a tuple with the AcropolisTargetParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAcropolisVmParams) GetAcropolisTargetParamsOk() (*AcropolisTargetParamsForRecoverVm, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AcropolisTargetParams.Get(), o.AcropolisTargetParams.IsSet()
}

// HasAcropolisTargetParams returns a boolean if a field has been set.
func (o *RecoverAcropolisVmParams) HasAcropolisTargetParams() bool {
	if o != nil && o.AcropolisTargetParams.IsSet() {
		return true
	}

	return false
}

// SetAcropolisTargetParams gets a reference to the given NullableAcropolisTargetParamsForRecoverVm and assigns it to the AcropolisTargetParams field.
func (o *RecoverAcropolisVmParams) SetAcropolisTargetParams(v AcropolisTargetParamsForRecoverVm) {
	o.AcropolisTargetParams.Set(&v)
}
// SetAcropolisTargetParamsNil sets the value for AcropolisTargetParams to be an explicit nil
func (o *RecoverAcropolisVmParams) SetAcropolisTargetParamsNil() {
	o.AcropolisTargetParams.Set(nil)
}

// UnsetAcropolisTargetParams ensures that no value is present for AcropolisTargetParams, not even an explicit nil
func (o *RecoverAcropolisVmParams) UnsetAcropolisTargetParams() {
	o.AcropolisTargetParams.Unset()
}

func (o RecoverAcropolisVmParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RecoverProtectionGroupRunsParams != nil {
		toSerialize["recoverProtectionGroupRunsParams"] = o.RecoverProtectionGroupRunsParams
	}
	if true {
		toSerialize["targetEnvironment"] = o.TargetEnvironment
	}
	if o.AcropolisTargetParams.IsSet() {
		toSerialize["acropolisTargetParams"] = o.AcropolisTargetParams.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverAcropolisVmParams struct {
	value *RecoverAcropolisVmParams
	isSet bool
}

func (v NullableRecoverAcropolisVmParams) Get() *RecoverAcropolisVmParams {
	return v.value
}

func (v *NullableRecoverAcropolisVmParams) Set(val *RecoverAcropolisVmParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverAcropolisVmParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverAcropolisVmParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverAcropolisVmParams(val *RecoverAcropolisVmParams) *NullableRecoverAcropolisVmParams {
	return &NullableRecoverAcropolisVmParams{value: val, isSet: true}
}

func (v NullableRecoverAcropolisVmParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverAcropolisVmParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


