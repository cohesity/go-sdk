/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CreateProtectionGroupRunRequest Specifies the request to create a protection run. On success, the system will accept the request and return the Protection Group id for which the run is supposed to start. The actual run may start at a later time if the system is busy. Consumers must query the Protection Group to see the run.
type CreateProtectionGroupRunRequest struct {
	// Type of protection run. 'kRegular' indicates an incremental (CBT) backup. Incremental backups utilizing CBT (if supported) are captured of the target protection objects. The first run of a kRegular schedule captures all the blocks. 'kFull' indicates a full (no CBT) backup. A complete backup (all blocks) of the target protection objects are always captured and Change Block Tracking (CBT) is not utilized. 'kLog' indicates a Database Log backup. Capture the database transaction logs to allow rolling back to a specific point in time. 'kSystem' indicates system volume backup. It produces an image for bare metal recovery.
	RunType NullableString `json:"runType"`
	// Specifies the list of objects to be protected by this Protection Group run. These can be leaf objects or non-leaf objects in the protection hierarchy. This must be specified only if a subset of objects from the Protection Groups needs to be protected.
	Objects *[]RunObject `json:"objects,omitempty"`
	TargetsConfig *RunTargetsConfiguration `json:"targetsConfig,omitempty"`
}

// NewCreateProtectionGroupRunRequest instantiates a new CreateProtectionGroupRunRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProtectionGroupRunRequest(runType NullableString) *CreateProtectionGroupRunRequest {
	this := CreateProtectionGroupRunRequest{}
	this.RunType = runType
	return &this
}

// NewCreateProtectionGroupRunRequestWithDefaults instantiates a new CreateProtectionGroupRunRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProtectionGroupRunRequestWithDefaults() *CreateProtectionGroupRunRequest {
	this := CreateProtectionGroupRunRequest{}
	return &this
}

// GetRunType returns the RunType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateProtectionGroupRunRequest) GetRunType() string {
	if o == nil || o.RunType.Get() == nil {
		var ret string
		return ret
	}

	return *o.RunType.Get()
}

// GetRunTypeOk returns a tuple with the RunType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProtectionGroupRunRequest) GetRunTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RunType.Get(), o.RunType.IsSet()
}

// SetRunType sets field value
func (o *CreateProtectionGroupRunRequest) SetRunType(v string) {
	o.RunType.Set(&v)
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *CreateProtectionGroupRunRequest) GetObjects() []RunObject {
	if o == nil || o.Objects == nil {
		var ret []RunObject
		return ret
	}
	return *o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProtectionGroupRunRequest) GetObjectsOk() (*[]RunObject, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *CreateProtectionGroupRunRequest) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []RunObject and assigns it to the Objects field.
func (o *CreateProtectionGroupRunRequest) SetObjects(v []RunObject) {
	o.Objects = &v
}

// GetTargetsConfig returns the TargetsConfig field value if set, zero value otherwise.
func (o *CreateProtectionGroupRunRequest) GetTargetsConfig() RunTargetsConfiguration {
	if o == nil || o.TargetsConfig == nil {
		var ret RunTargetsConfiguration
		return ret
	}
	return *o.TargetsConfig
}

// GetTargetsConfigOk returns a tuple with the TargetsConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProtectionGroupRunRequest) GetTargetsConfigOk() (*RunTargetsConfiguration, bool) {
	if o == nil || o.TargetsConfig == nil {
		return nil, false
	}
	return o.TargetsConfig, true
}

// HasTargetsConfig returns a boolean if a field has been set.
func (o *CreateProtectionGroupRunRequest) HasTargetsConfig() bool {
	if o != nil && o.TargetsConfig != nil {
		return true
	}

	return false
}

// SetTargetsConfig gets a reference to the given RunTargetsConfiguration and assigns it to the TargetsConfig field.
func (o *CreateProtectionGroupRunRequest) SetTargetsConfig(v RunTargetsConfiguration) {
	o.TargetsConfig = &v
}

func (o CreateProtectionGroupRunRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["runType"] = o.RunType.Get()
	}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if o.TargetsConfig != nil {
		toSerialize["targetsConfig"] = o.TargetsConfig
	}
	return json.Marshal(toSerialize)
}

type NullableCreateProtectionGroupRunRequest struct {
	value *CreateProtectionGroupRunRequest
	isSet bool
}

func (v NullableCreateProtectionGroupRunRequest) Get() *CreateProtectionGroupRunRequest {
	return v.value
}

func (v *NullableCreateProtectionGroupRunRequest) Set(val *CreateProtectionGroupRunRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProtectionGroupRunRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProtectionGroupRunRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProtectionGroupRunRequest(val *CreateProtectionGroupRunRequest) *NullableCreateProtectionGroupRunRequest {
	return &NullableCreateProtectionGroupRunRequest{value: val, isSet: true}
}

func (v NullableCreateProtectionGroupRunRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProtectionGroupRunRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


