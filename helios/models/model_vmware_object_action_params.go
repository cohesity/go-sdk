/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// VmwareObjectActionParams Specifies the parameters to perform an action on VMware Objects.
type VmwareObjectActionParams struct {
	// Specifies the action on the Object.
	Action NullableString `json:"action"`
	EnableAppProtectionParams *VmwareObjectEnableAppProtectionParams `json:"enableAppProtectionParams,omitempty"`
}

// NewVmwareObjectActionParams instantiates a new VmwareObjectActionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmwareObjectActionParams(action NullableString) *VmwareObjectActionParams {
	this := VmwareObjectActionParams{}
	this.Action = action
	return &this
}

// NewVmwareObjectActionParamsWithDefaults instantiates a new VmwareObjectActionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmwareObjectActionParamsWithDefaults() *VmwareObjectActionParams {
	this := VmwareObjectActionParams{}
	return &this
}

// GetAction returns the Action field value
// If the value is explicit nil, the zero value for string will be returned
func (o *VmwareObjectActionParams) GetAction() string {
	if o == nil || o.Action.Get() == nil {
		var ret string
		return ret
	}

	return *o.Action.Get()
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareObjectActionParams) GetActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Action.Get(), o.Action.IsSet()
}

// SetAction sets field value
func (o *VmwareObjectActionParams) SetAction(v string) {
	o.Action.Set(&v)
}

// GetEnableAppProtectionParams returns the EnableAppProtectionParams field value if set, zero value otherwise.
func (o *VmwareObjectActionParams) GetEnableAppProtectionParams() VmwareObjectEnableAppProtectionParams {
	if o == nil || o.EnableAppProtectionParams == nil {
		var ret VmwareObjectEnableAppProtectionParams
		return ret
	}
	return *o.EnableAppProtectionParams
}

// GetEnableAppProtectionParamsOk returns a tuple with the EnableAppProtectionParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmwareObjectActionParams) GetEnableAppProtectionParamsOk() (*VmwareObjectEnableAppProtectionParams, bool) {
	if o == nil || o.EnableAppProtectionParams == nil {
		return nil, false
	}
	return o.EnableAppProtectionParams, true
}

// HasEnableAppProtectionParams returns a boolean if a field has been set.
func (o *VmwareObjectActionParams) HasEnableAppProtectionParams() bool {
	if o != nil && o.EnableAppProtectionParams != nil {
		return true
	}

	return false
}

// SetEnableAppProtectionParams gets a reference to the given VmwareObjectEnableAppProtectionParams and assigns it to the EnableAppProtectionParams field.
func (o *VmwareObjectActionParams) SetEnableAppProtectionParams(v VmwareObjectEnableAppProtectionParams) {
	o.EnableAppProtectionParams = &v
}

func (o VmwareObjectActionParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["action"] = o.Action.Get()
	}
	if o.EnableAppProtectionParams != nil {
		toSerialize["enableAppProtectionParams"] = o.EnableAppProtectionParams
	}
	return json.Marshal(toSerialize)
}

type NullableVmwareObjectActionParams struct {
	value *VmwareObjectActionParams
	isSet bool
}

func (v NullableVmwareObjectActionParams) Get() *VmwareObjectActionParams {
	return v.value
}

func (v *NullableVmwareObjectActionParams) Set(val *VmwareObjectActionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableVmwareObjectActionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableVmwareObjectActionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmwareObjectActionParams(val *VmwareObjectActionParams) *NullableVmwareObjectActionParams {
	return &NullableVmwareObjectActionParams{value: val, isSet: true}
}

func (v NullableVmwareObjectActionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmwareObjectActionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


