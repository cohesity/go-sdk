/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ArchivalRunFilterParams Specifies the additional filtering params for archival runs.
type ArchivalRunFilterParams struct {
	// Specifies the run types to filter archival runs.
	RunTypes []string `json:"runTypes,omitempty"`
	// Specifies the protection environment types to filter archival runs.
	ProtectionEnvironmentTypes []string `json:"protectionEnvironmentTypes,omitempty"`
}

// NewArchivalRunFilterParams instantiates a new ArchivalRunFilterParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArchivalRunFilterParams() *ArchivalRunFilterParams {
	this := ArchivalRunFilterParams{}
	return &this
}

// NewArchivalRunFilterParamsWithDefaults instantiates a new ArchivalRunFilterParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArchivalRunFilterParamsWithDefaults() *ArchivalRunFilterParams {
	this := ArchivalRunFilterParams{}
	return &this
}

// GetRunTypes returns the RunTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArchivalRunFilterParams) GetRunTypes() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.RunTypes
}

// GetRunTypesOk returns a tuple with the RunTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArchivalRunFilterParams) GetRunTypesOk() (*[]string, bool) {
	if o == nil || o.RunTypes == nil {
		return nil, false
	}
	return &o.RunTypes, true
}

// HasRunTypes returns a boolean if a field has been set.
func (o *ArchivalRunFilterParams) HasRunTypes() bool {
	if o != nil && o.RunTypes != nil {
		return true
	}

	return false
}

// SetRunTypes gets a reference to the given []string and assigns it to the RunTypes field.
func (o *ArchivalRunFilterParams) SetRunTypes(v []string) {
	o.RunTypes = v
}

// GetProtectionEnvironmentTypes returns the ProtectionEnvironmentTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArchivalRunFilterParams) GetProtectionEnvironmentTypes() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.ProtectionEnvironmentTypes
}

// GetProtectionEnvironmentTypesOk returns a tuple with the ProtectionEnvironmentTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArchivalRunFilterParams) GetProtectionEnvironmentTypesOk() (*[]string, bool) {
	if o == nil || o.ProtectionEnvironmentTypes == nil {
		return nil, false
	}
	return &o.ProtectionEnvironmentTypes, true
}

// HasProtectionEnvironmentTypes returns a boolean if a field has been set.
func (o *ArchivalRunFilterParams) HasProtectionEnvironmentTypes() bool {
	if o != nil && o.ProtectionEnvironmentTypes != nil {
		return true
	}

	return false
}

// SetProtectionEnvironmentTypes gets a reference to the given []string and assigns it to the ProtectionEnvironmentTypes field.
func (o *ArchivalRunFilterParams) SetProtectionEnvironmentTypes(v []string) {
	o.ProtectionEnvironmentTypes = v
}

func (o ArchivalRunFilterParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RunTypes != nil {
		toSerialize["runTypes"] = o.RunTypes
	}
	if o.ProtectionEnvironmentTypes != nil {
		toSerialize["protectionEnvironmentTypes"] = o.ProtectionEnvironmentTypes
	}
	return json.Marshal(toSerialize)
}

type NullableArchivalRunFilterParams struct {
	value *ArchivalRunFilterParams
	isSet bool
}

func (v NullableArchivalRunFilterParams) Get() *ArchivalRunFilterParams {
	return v.value
}

func (v *NullableArchivalRunFilterParams) Set(val *ArchivalRunFilterParams) {
	v.value = val
	v.isSet = true
}

func (v NullableArchivalRunFilterParams) IsSet() bool {
	return v.isSet
}

func (v *NullableArchivalRunFilterParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArchivalRunFilterParams(val *ArchivalRunFilterParams) *NullableArchivalRunFilterParams {
	return &NullableArchivalRunFilterParams{value: val, isSet: true}
}

func (v NullableArchivalRunFilterParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArchivalRunFilterParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


