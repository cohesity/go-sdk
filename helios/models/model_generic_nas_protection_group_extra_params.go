/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// GenericNasProtectionGroupExtraParams Specifies the extra parameters which are specific to NAS related Protection Groups.
type GenericNasProtectionGroupExtraParams struct {
	// Specifies whether or not to store the snapshots in this run directly in an Archive Target instead of on the Cluster. If this is set to true, the associated policy must have exactly one Archive Target associated with it and the policy must be set up to archive after every run. Also, a Storage Domain cannot be specified. Default behavior is 'false'.
	DirectCloudArchive NullableBool `json:"directCloudArchive,omitempty"`
	// Specifies whether or not to enable native format for direct archive job. This field is set to true if native format should be used for archiving.
	NativeFormat NullableBool `json:"nativeFormat,omitempty"`
}

// NewGenericNasProtectionGroupExtraParams instantiates a new GenericNasProtectionGroupExtraParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericNasProtectionGroupExtraParams() *GenericNasProtectionGroupExtraParams {
	this := GenericNasProtectionGroupExtraParams{}
	return &this
}

// NewGenericNasProtectionGroupExtraParamsWithDefaults instantiates a new GenericNasProtectionGroupExtraParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericNasProtectionGroupExtraParamsWithDefaults() *GenericNasProtectionGroupExtraParams {
	this := GenericNasProtectionGroupExtraParams{}
	return &this
}

// GetDirectCloudArchive returns the DirectCloudArchive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GenericNasProtectionGroupExtraParams) GetDirectCloudArchive() bool {
	if o == nil || o.DirectCloudArchive.Get() == nil {
		var ret bool
		return ret
	}
	return *o.DirectCloudArchive.Get()
}

// GetDirectCloudArchiveOk returns a tuple with the DirectCloudArchive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GenericNasProtectionGroupExtraParams) GetDirectCloudArchiveOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DirectCloudArchive.Get(), o.DirectCloudArchive.IsSet()
}

// HasDirectCloudArchive returns a boolean if a field has been set.
func (o *GenericNasProtectionGroupExtraParams) HasDirectCloudArchive() bool {
	if o != nil && o.DirectCloudArchive.IsSet() {
		return true
	}

	return false
}

// SetDirectCloudArchive gets a reference to the given NullableBool and assigns it to the DirectCloudArchive field.
func (o *GenericNasProtectionGroupExtraParams) SetDirectCloudArchive(v bool) {
	o.DirectCloudArchive.Set(&v)
}
// SetDirectCloudArchiveNil sets the value for DirectCloudArchive to be an explicit nil
func (o *GenericNasProtectionGroupExtraParams) SetDirectCloudArchiveNil() {
	o.DirectCloudArchive.Set(nil)
}

// UnsetDirectCloudArchive ensures that no value is present for DirectCloudArchive, not even an explicit nil
func (o *GenericNasProtectionGroupExtraParams) UnsetDirectCloudArchive() {
	o.DirectCloudArchive.Unset()
}

// GetNativeFormat returns the NativeFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GenericNasProtectionGroupExtraParams) GetNativeFormat() bool {
	if o == nil || o.NativeFormat.Get() == nil {
		var ret bool
		return ret
	}
	return *o.NativeFormat.Get()
}

// GetNativeFormatOk returns a tuple with the NativeFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GenericNasProtectionGroupExtraParams) GetNativeFormatOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NativeFormat.Get(), o.NativeFormat.IsSet()
}

// HasNativeFormat returns a boolean if a field has been set.
func (o *GenericNasProtectionGroupExtraParams) HasNativeFormat() bool {
	if o != nil && o.NativeFormat.IsSet() {
		return true
	}

	return false
}

// SetNativeFormat gets a reference to the given NullableBool and assigns it to the NativeFormat field.
func (o *GenericNasProtectionGroupExtraParams) SetNativeFormat(v bool) {
	o.NativeFormat.Set(&v)
}
// SetNativeFormatNil sets the value for NativeFormat to be an explicit nil
func (o *GenericNasProtectionGroupExtraParams) SetNativeFormatNil() {
	o.NativeFormat.Set(nil)
}

// UnsetNativeFormat ensures that no value is present for NativeFormat, not even an explicit nil
func (o *GenericNasProtectionGroupExtraParams) UnsetNativeFormat() {
	o.NativeFormat.Unset()
}

func (o GenericNasProtectionGroupExtraParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DirectCloudArchive.IsSet() {
		toSerialize["directCloudArchive"] = o.DirectCloudArchive.Get()
	}
	if o.NativeFormat.IsSet() {
		toSerialize["nativeFormat"] = o.NativeFormat.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGenericNasProtectionGroupExtraParams struct {
	value *GenericNasProtectionGroupExtraParams
	isSet bool
}

func (v NullableGenericNasProtectionGroupExtraParams) Get() *GenericNasProtectionGroupExtraParams {
	return v.value
}

func (v *NullableGenericNasProtectionGroupExtraParams) Set(val *GenericNasProtectionGroupExtraParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericNasProtectionGroupExtraParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericNasProtectionGroupExtraParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericNasProtectionGroupExtraParams(val *GenericNasProtectionGroupExtraParams) *NullableGenericNasProtectionGroupExtraParams {
	return &NullableGenericNasProtectionGroupExtraParams{value: val, isSet: true}
}

func (v NullableGenericNasProtectionGroupExtraParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericNasProtectionGroupExtraParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


