/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// AwsTargetParamsForRecoverRds Specifies the parameters for an AWS recovery target.
type AwsTargetParamsForRecoverRds struct {
	// Specifies the recovery target configuration if recovery has to be done to a different location which is different from original source or to original Source with different configuration. If not specified, then the recovery of the vms will be performed to original location with all configuration parameters retained.
	RecoveryTargetConfig NullableAwsRdsRecoveryTargetConfig `json:"recoveryTargetConfig,omitempty"`
	// Specifies the RDS params.
	RdsConfig NullableRdsConfig `json:"rdsConfig,omitempty"`
}

// NewAwsTargetParamsForRecoverRds instantiates a new AwsTargetParamsForRecoverRds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsTargetParamsForRecoverRds() *AwsTargetParamsForRecoverRds {
	this := AwsTargetParamsForRecoverRds{}
	return &this
}

// NewAwsTargetParamsForRecoverRdsWithDefaults instantiates a new AwsTargetParamsForRecoverRds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsTargetParamsForRecoverRdsWithDefaults() *AwsTargetParamsForRecoverRds {
	this := AwsTargetParamsForRecoverRds{}
	return &this
}

// GetRecoveryTargetConfig returns the RecoveryTargetConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsTargetParamsForRecoverRds) GetRecoveryTargetConfig() AwsRdsRecoveryTargetConfig {
	if o == nil || o.RecoveryTargetConfig.Get() == nil {
		var ret AwsRdsRecoveryTargetConfig
		return ret
	}
	return *o.RecoveryTargetConfig.Get()
}

// GetRecoveryTargetConfigOk returns a tuple with the RecoveryTargetConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsTargetParamsForRecoverRds) GetRecoveryTargetConfigOk() (*AwsRdsRecoveryTargetConfig, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RecoveryTargetConfig.Get(), o.RecoveryTargetConfig.IsSet()
}

// HasRecoveryTargetConfig returns a boolean if a field has been set.
func (o *AwsTargetParamsForRecoverRds) HasRecoveryTargetConfig() bool {
	if o != nil && o.RecoveryTargetConfig.IsSet() {
		return true
	}

	return false
}

// SetRecoveryTargetConfig gets a reference to the given NullableAwsRdsRecoveryTargetConfig and assigns it to the RecoveryTargetConfig field.
func (o *AwsTargetParamsForRecoverRds) SetRecoveryTargetConfig(v AwsRdsRecoveryTargetConfig) {
	o.RecoveryTargetConfig.Set(&v)
}
// SetRecoveryTargetConfigNil sets the value for RecoveryTargetConfig to be an explicit nil
func (o *AwsTargetParamsForRecoverRds) SetRecoveryTargetConfigNil() {
	o.RecoveryTargetConfig.Set(nil)
}

// UnsetRecoveryTargetConfig ensures that no value is present for RecoveryTargetConfig, not even an explicit nil
func (o *AwsTargetParamsForRecoverRds) UnsetRecoveryTargetConfig() {
	o.RecoveryTargetConfig.Unset()
}

// GetRdsConfig returns the RdsConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsTargetParamsForRecoverRds) GetRdsConfig() RdsConfig {
	if o == nil || o.RdsConfig.Get() == nil {
		var ret RdsConfig
		return ret
	}
	return *o.RdsConfig.Get()
}

// GetRdsConfigOk returns a tuple with the RdsConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsTargetParamsForRecoverRds) GetRdsConfigOk() (*RdsConfig, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RdsConfig.Get(), o.RdsConfig.IsSet()
}

// HasRdsConfig returns a boolean if a field has been set.
func (o *AwsTargetParamsForRecoverRds) HasRdsConfig() bool {
	if o != nil && o.RdsConfig.IsSet() {
		return true
	}

	return false
}

// SetRdsConfig gets a reference to the given NullableRdsConfig and assigns it to the RdsConfig field.
func (o *AwsTargetParamsForRecoverRds) SetRdsConfig(v RdsConfig) {
	o.RdsConfig.Set(&v)
}
// SetRdsConfigNil sets the value for RdsConfig to be an explicit nil
func (o *AwsTargetParamsForRecoverRds) SetRdsConfigNil() {
	o.RdsConfig.Set(nil)
}

// UnsetRdsConfig ensures that no value is present for RdsConfig, not even an explicit nil
func (o *AwsTargetParamsForRecoverRds) UnsetRdsConfig() {
	o.RdsConfig.Unset()
}

func (o AwsTargetParamsForRecoverRds) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RecoveryTargetConfig.IsSet() {
		toSerialize["recoveryTargetConfig"] = o.RecoveryTargetConfig.Get()
	}
	if o.RdsConfig.IsSet() {
		toSerialize["rdsConfig"] = o.RdsConfig.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAwsTargetParamsForRecoverRds struct {
	value *AwsTargetParamsForRecoverRds
	isSet bool
}

func (v NullableAwsTargetParamsForRecoverRds) Get() *AwsTargetParamsForRecoverRds {
	return v.value
}

func (v *NullableAwsTargetParamsForRecoverRds) Set(val *AwsTargetParamsForRecoverRds) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsTargetParamsForRecoverRds) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsTargetParamsForRecoverRds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsTargetParamsForRecoverRds(val *AwsTargetParamsForRecoverRds) *NullableAwsTargetParamsForRecoverRds {
	return &NullableAwsTargetParamsForRecoverRds{value: val, isSet: true}
}

func (v NullableAwsTargetParamsForRecoverRds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsTargetParamsForRecoverRds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


