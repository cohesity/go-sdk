/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// MSSQLVolumeProtectionGroupHostParams Specifies the host specific parameters for a host container in this protection group. Objects specified here should only be MSSQL root containers and will not be protected unless they are also specified in the 'objects' list. This list is just for specifying source level settings.
type MSSQLVolumeProtectionGroupHostParams struct {
	// Specifies the id of the host container on which databases are hosted.
	HostId NullableInt64 `json:"hostId"`
	// Specifies the name of the host container on which databases are hosted.
	HostName NullableString `json:"hostName,omitempty"`
	// Specifies the list of volume GUIDs to be protected. If not specified, all the volumes of the host will be protected. Note that volumes of host on which databases are hosted are protected even if its not mentioned in this list.
	VolumeGuids []string `json:"volumeGuids,omitempty"`
	// Specifies whether to enable system/bmr backup using 3rd party tools installed on agent host.
	EnableSystemBackup NullableBool `json:"enableSystemBackup,omitempty"`
}

// NewMSSQLVolumeProtectionGroupHostParams instantiates a new MSSQLVolumeProtectionGroupHostParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMSSQLVolumeProtectionGroupHostParams(hostId NullableInt64) *MSSQLVolumeProtectionGroupHostParams {
	this := MSSQLVolumeProtectionGroupHostParams{}
	this.HostId = hostId
	return &this
}

// NewMSSQLVolumeProtectionGroupHostParamsWithDefaults instantiates a new MSSQLVolumeProtectionGroupHostParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMSSQLVolumeProtectionGroupHostParamsWithDefaults() *MSSQLVolumeProtectionGroupHostParams {
	this := MSSQLVolumeProtectionGroupHostParams{}
	return &this
}

// GetHostId returns the HostId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *MSSQLVolumeProtectionGroupHostParams) GetHostId() int64 {
	if o == nil || o.HostId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.HostId.Get()
}

// GetHostIdOk returns a tuple with the HostId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MSSQLVolumeProtectionGroupHostParams) GetHostIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HostId.Get(), o.HostId.IsSet()
}

// SetHostId sets field value
func (o *MSSQLVolumeProtectionGroupHostParams) SetHostId(v int64) {
	o.HostId.Set(&v)
}

// GetHostName returns the HostName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MSSQLVolumeProtectionGroupHostParams) GetHostName() string {
	if o == nil || o.HostName.Get() == nil {
		var ret string
		return ret
	}
	return *o.HostName.Get()
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MSSQLVolumeProtectionGroupHostParams) GetHostNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HostName.Get(), o.HostName.IsSet()
}

// HasHostName returns a boolean if a field has been set.
func (o *MSSQLVolumeProtectionGroupHostParams) HasHostName() bool {
	if o != nil && o.HostName.IsSet() {
		return true
	}

	return false
}

// SetHostName gets a reference to the given NullableString and assigns it to the HostName field.
func (o *MSSQLVolumeProtectionGroupHostParams) SetHostName(v string) {
	o.HostName.Set(&v)
}
// SetHostNameNil sets the value for HostName to be an explicit nil
func (o *MSSQLVolumeProtectionGroupHostParams) SetHostNameNil() {
	o.HostName.Set(nil)
}

// UnsetHostName ensures that no value is present for HostName, not even an explicit nil
func (o *MSSQLVolumeProtectionGroupHostParams) UnsetHostName() {
	o.HostName.Unset()
}

// GetVolumeGuids returns the VolumeGuids field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MSSQLVolumeProtectionGroupHostParams) GetVolumeGuids() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.VolumeGuids
}

// GetVolumeGuidsOk returns a tuple with the VolumeGuids field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MSSQLVolumeProtectionGroupHostParams) GetVolumeGuidsOk() (*[]string, bool) {
	if o == nil || o.VolumeGuids == nil {
		return nil, false
	}
	return &o.VolumeGuids, true
}

// HasVolumeGuids returns a boolean if a field has been set.
func (o *MSSQLVolumeProtectionGroupHostParams) HasVolumeGuids() bool {
	if o != nil && o.VolumeGuids != nil {
		return true
	}

	return false
}

// SetVolumeGuids gets a reference to the given []string and assigns it to the VolumeGuids field.
func (o *MSSQLVolumeProtectionGroupHostParams) SetVolumeGuids(v []string) {
	o.VolumeGuids = v
}

// GetEnableSystemBackup returns the EnableSystemBackup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MSSQLVolumeProtectionGroupHostParams) GetEnableSystemBackup() bool {
	if o == nil || o.EnableSystemBackup.Get() == nil {
		var ret bool
		return ret
	}
	return *o.EnableSystemBackup.Get()
}

// GetEnableSystemBackupOk returns a tuple with the EnableSystemBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MSSQLVolumeProtectionGroupHostParams) GetEnableSystemBackupOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EnableSystemBackup.Get(), o.EnableSystemBackup.IsSet()
}

// HasEnableSystemBackup returns a boolean if a field has been set.
func (o *MSSQLVolumeProtectionGroupHostParams) HasEnableSystemBackup() bool {
	if o != nil && o.EnableSystemBackup.IsSet() {
		return true
	}

	return false
}

// SetEnableSystemBackup gets a reference to the given NullableBool and assigns it to the EnableSystemBackup field.
func (o *MSSQLVolumeProtectionGroupHostParams) SetEnableSystemBackup(v bool) {
	o.EnableSystemBackup.Set(&v)
}
// SetEnableSystemBackupNil sets the value for EnableSystemBackup to be an explicit nil
func (o *MSSQLVolumeProtectionGroupHostParams) SetEnableSystemBackupNil() {
	o.EnableSystemBackup.Set(nil)
}

// UnsetEnableSystemBackup ensures that no value is present for EnableSystemBackup, not even an explicit nil
func (o *MSSQLVolumeProtectionGroupHostParams) UnsetEnableSystemBackup() {
	o.EnableSystemBackup.Unset()
}

func (o MSSQLVolumeProtectionGroupHostParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["hostId"] = o.HostId.Get()
	}
	if o.HostName.IsSet() {
		toSerialize["hostName"] = o.HostName.Get()
	}
	if o.VolumeGuids != nil {
		toSerialize["volumeGuids"] = o.VolumeGuids
	}
	if o.EnableSystemBackup.IsSet() {
		toSerialize["enableSystemBackup"] = o.EnableSystemBackup.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMSSQLVolumeProtectionGroupHostParams struct {
	value *MSSQLVolumeProtectionGroupHostParams
	isSet bool
}

func (v NullableMSSQLVolumeProtectionGroupHostParams) Get() *MSSQLVolumeProtectionGroupHostParams {
	return v.value
}

func (v *NullableMSSQLVolumeProtectionGroupHostParams) Set(val *MSSQLVolumeProtectionGroupHostParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMSSQLVolumeProtectionGroupHostParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMSSQLVolumeProtectionGroupHostParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMSSQLVolumeProtectionGroupHostParams(val *MSSQLVolumeProtectionGroupHostParams) *NullableMSSQLVolumeProtectionGroupHostParams {
	return &NullableMSSQLVolumeProtectionGroupHostParams{value: val, isSet: true}
}

func (v NullableMSSQLVolumeProtectionGroupHostParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMSSQLVolumeProtectionGroupHostParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


