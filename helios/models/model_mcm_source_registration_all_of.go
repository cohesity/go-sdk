/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// McmSourceRegistrationAllOf struct for McmSourceRegistrationAllOf
type McmSourceRegistrationAllOf struct {
	VmwareParams *VmwareSourceRegistrationParams `json:"vmwareParams,omitempty"`
	PhysicalParams *PhysicalSourceRegistrationParams `json:"physicalParams,omitempty"`
	GenericNasParams *GenericNasRegistrationParams `json:"genericNasParams,omitempty"`
	IsilonParams *IsilonRegistrationParams `json:"isilonParams,omitempty"`
	NetappParams *NetappRegistrationParams `json:"netappParams,omitempty"`
	CassandraParams *CassandraSourceRegistrationParams `json:"cassandraParams,omitempty"`
	MongodbParams *MongoDBSourceRegistrationParams `json:"mongodbParams,omitempty"`
	CouchbaseParams *CouchbaseSourceRegistrationParams `json:"couchbaseParams,omitempty"`
	HdfsParams *HdfsSourceRegistrationParams `json:"hdfsParams,omitempty"`
	HbaseParams *HbaseSourceRegistrationParams `json:"hbaseParams,omitempty"`
	HiveParams *HiveSourceRegistrationParams `json:"hiveParams,omitempty"`
	AwsParams *AwsSourceRegistrationParams `json:"awsParams,omitempty"`
	Office365Params *Office365SourceRegistrationParams `json:"office365Params,omitempty"`
	HypervParams *HyperVSourceRegistrationParams `json:"hypervParams,omitempty"`
}

// NewMcmSourceRegistrationAllOf instantiates a new McmSourceRegistrationAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcmSourceRegistrationAllOf() *McmSourceRegistrationAllOf {
	this := McmSourceRegistrationAllOf{}
	return &this
}

// NewMcmSourceRegistrationAllOfWithDefaults instantiates a new McmSourceRegistrationAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcmSourceRegistrationAllOfWithDefaults() *McmSourceRegistrationAllOf {
	this := McmSourceRegistrationAllOf{}
	return &this
}

// GetVmwareParams returns the VmwareParams field value if set, zero value otherwise.
func (o *McmSourceRegistrationAllOf) GetVmwareParams() VmwareSourceRegistrationParams {
	if o == nil || o.VmwareParams == nil {
		var ret VmwareSourceRegistrationParams
		return ret
	}
	return *o.VmwareParams
}

// GetVmwareParamsOk returns a tuple with the VmwareParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmSourceRegistrationAllOf) GetVmwareParamsOk() (*VmwareSourceRegistrationParams, bool) {
	if o == nil || o.VmwareParams == nil {
		return nil, false
	}
	return o.VmwareParams, true
}

// HasVmwareParams returns a boolean if a field has been set.
func (o *McmSourceRegistrationAllOf) HasVmwareParams() bool {
	if o != nil && o.VmwareParams != nil {
		return true
	}

	return false
}

// SetVmwareParams gets a reference to the given VmwareSourceRegistrationParams and assigns it to the VmwareParams field.
func (o *McmSourceRegistrationAllOf) SetVmwareParams(v VmwareSourceRegistrationParams) {
	o.VmwareParams = &v
}

// GetPhysicalParams returns the PhysicalParams field value if set, zero value otherwise.
func (o *McmSourceRegistrationAllOf) GetPhysicalParams() PhysicalSourceRegistrationParams {
	if o == nil || o.PhysicalParams == nil {
		var ret PhysicalSourceRegistrationParams
		return ret
	}
	return *o.PhysicalParams
}

// GetPhysicalParamsOk returns a tuple with the PhysicalParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmSourceRegistrationAllOf) GetPhysicalParamsOk() (*PhysicalSourceRegistrationParams, bool) {
	if o == nil || o.PhysicalParams == nil {
		return nil, false
	}
	return o.PhysicalParams, true
}

// HasPhysicalParams returns a boolean if a field has been set.
func (o *McmSourceRegistrationAllOf) HasPhysicalParams() bool {
	if o != nil && o.PhysicalParams != nil {
		return true
	}

	return false
}

// SetPhysicalParams gets a reference to the given PhysicalSourceRegistrationParams and assigns it to the PhysicalParams field.
func (o *McmSourceRegistrationAllOf) SetPhysicalParams(v PhysicalSourceRegistrationParams) {
	o.PhysicalParams = &v
}

// GetGenericNasParams returns the GenericNasParams field value if set, zero value otherwise.
func (o *McmSourceRegistrationAllOf) GetGenericNasParams() GenericNasRegistrationParams {
	if o == nil || o.GenericNasParams == nil {
		var ret GenericNasRegistrationParams
		return ret
	}
	return *o.GenericNasParams
}

// GetGenericNasParamsOk returns a tuple with the GenericNasParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmSourceRegistrationAllOf) GetGenericNasParamsOk() (*GenericNasRegistrationParams, bool) {
	if o == nil || o.GenericNasParams == nil {
		return nil, false
	}
	return o.GenericNasParams, true
}

// HasGenericNasParams returns a boolean if a field has been set.
func (o *McmSourceRegistrationAllOf) HasGenericNasParams() bool {
	if o != nil && o.GenericNasParams != nil {
		return true
	}

	return false
}

// SetGenericNasParams gets a reference to the given GenericNasRegistrationParams and assigns it to the GenericNasParams field.
func (o *McmSourceRegistrationAllOf) SetGenericNasParams(v GenericNasRegistrationParams) {
	o.GenericNasParams = &v
}

// GetIsilonParams returns the IsilonParams field value if set, zero value otherwise.
func (o *McmSourceRegistrationAllOf) GetIsilonParams() IsilonRegistrationParams {
	if o == nil || o.IsilonParams == nil {
		var ret IsilonRegistrationParams
		return ret
	}
	return *o.IsilonParams
}

// GetIsilonParamsOk returns a tuple with the IsilonParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmSourceRegistrationAllOf) GetIsilonParamsOk() (*IsilonRegistrationParams, bool) {
	if o == nil || o.IsilonParams == nil {
		return nil, false
	}
	return o.IsilonParams, true
}

// HasIsilonParams returns a boolean if a field has been set.
func (o *McmSourceRegistrationAllOf) HasIsilonParams() bool {
	if o != nil && o.IsilonParams != nil {
		return true
	}

	return false
}

// SetIsilonParams gets a reference to the given IsilonRegistrationParams and assigns it to the IsilonParams field.
func (o *McmSourceRegistrationAllOf) SetIsilonParams(v IsilonRegistrationParams) {
	o.IsilonParams = &v
}

// GetNetappParams returns the NetappParams field value if set, zero value otherwise.
func (o *McmSourceRegistrationAllOf) GetNetappParams() NetappRegistrationParams {
	if o == nil || o.NetappParams == nil {
		var ret NetappRegistrationParams
		return ret
	}
	return *o.NetappParams
}

// GetNetappParamsOk returns a tuple with the NetappParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmSourceRegistrationAllOf) GetNetappParamsOk() (*NetappRegistrationParams, bool) {
	if o == nil || o.NetappParams == nil {
		return nil, false
	}
	return o.NetappParams, true
}

// HasNetappParams returns a boolean if a field has been set.
func (o *McmSourceRegistrationAllOf) HasNetappParams() bool {
	if o != nil && o.NetappParams != nil {
		return true
	}

	return false
}

// SetNetappParams gets a reference to the given NetappRegistrationParams and assigns it to the NetappParams field.
func (o *McmSourceRegistrationAllOf) SetNetappParams(v NetappRegistrationParams) {
	o.NetappParams = &v
}

// GetCassandraParams returns the CassandraParams field value if set, zero value otherwise.
func (o *McmSourceRegistrationAllOf) GetCassandraParams() CassandraSourceRegistrationParams {
	if o == nil || o.CassandraParams == nil {
		var ret CassandraSourceRegistrationParams
		return ret
	}
	return *o.CassandraParams
}

// GetCassandraParamsOk returns a tuple with the CassandraParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmSourceRegistrationAllOf) GetCassandraParamsOk() (*CassandraSourceRegistrationParams, bool) {
	if o == nil || o.CassandraParams == nil {
		return nil, false
	}
	return o.CassandraParams, true
}

// HasCassandraParams returns a boolean if a field has been set.
func (o *McmSourceRegistrationAllOf) HasCassandraParams() bool {
	if o != nil && o.CassandraParams != nil {
		return true
	}

	return false
}

// SetCassandraParams gets a reference to the given CassandraSourceRegistrationParams and assigns it to the CassandraParams field.
func (o *McmSourceRegistrationAllOf) SetCassandraParams(v CassandraSourceRegistrationParams) {
	o.CassandraParams = &v
}

// GetMongodbParams returns the MongodbParams field value if set, zero value otherwise.
func (o *McmSourceRegistrationAllOf) GetMongodbParams() MongoDBSourceRegistrationParams {
	if o == nil || o.MongodbParams == nil {
		var ret MongoDBSourceRegistrationParams
		return ret
	}
	return *o.MongodbParams
}

// GetMongodbParamsOk returns a tuple with the MongodbParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmSourceRegistrationAllOf) GetMongodbParamsOk() (*MongoDBSourceRegistrationParams, bool) {
	if o == nil || o.MongodbParams == nil {
		return nil, false
	}
	return o.MongodbParams, true
}

// HasMongodbParams returns a boolean if a field has been set.
func (o *McmSourceRegistrationAllOf) HasMongodbParams() bool {
	if o != nil && o.MongodbParams != nil {
		return true
	}

	return false
}

// SetMongodbParams gets a reference to the given MongoDBSourceRegistrationParams and assigns it to the MongodbParams field.
func (o *McmSourceRegistrationAllOf) SetMongodbParams(v MongoDBSourceRegistrationParams) {
	o.MongodbParams = &v
}

// GetCouchbaseParams returns the CouchbaseParams field value if set, zero value otherwise.
func (o *McmSourceRegistrationAllOf) GetCouchbaseParams() CouchbaseSourceRegistrationParams {
	if o == nil || o.CouchbaseParams == nil {
		var ret CouchbaseSourceRegistrationParams
		return ret
	}
	return *o.CouchbaseParams
}

// GetCouchbaseParamsOk returns a tuple with the CouchbaseParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmSourceRegistrationAllOf) GetCouchbaseParamsOk() (*CouchbaseSourceRegistrationParams, bool) {
	if o == nil || o.CouchbaseParams == nil {
		return nil, false
	}
	return o.CouchbaseParams, true
}

// HasCouchbaseParams returns a boolean if a field has been set.
func (o *McmSourceRegistrationAllOf) HasCouchbaseParams() bool {
	if o != nil && o.CouchbaseParams != nil {
		return true
	}

	return false
}

// SetCouchbaseParams gets a reference to the given CouchbaseSourceRegistrationParams and assigns it to the CouchbaseParams field.
func (o *McmSourceRegistrationAllOf) SetCouchbaseParams(v CouchbaseSourceRegistrationParams) {
	o.CouchbaseParams = &v
}

// GetHdfsParams returns the HdfsParams field value if set, zero value otherwise.
func (o *McmSourceRegistrationAllOf) GetHdfsParams() HdfsSourceRegistrationParams {
	if o == nil || o.HdfsParams == nil {
		var ret HdfsSourceRegistrationParams
		return ret
	}
	return *o.HdfsParams
}

// GetHdfsParamsOk returns a tuple with the HdfsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmSourceRegistrationAllOf) GetHdfsParamsOk() (*HdfsSourceRegistrationParams, bool) {
	if o == nil || o.HdfsParams == nil {
		return nil, false
	}
	return o.HdfsParams, true
}

// HasHdfsParams returns a boolean if a field has been set.
func (o *McmSourceRegistrationAllOf) HasHdfsParams() bool {
	if o != nil && o.HdfsParams != nil {
		return true
	}

	return false
}

// SetHdfsParams gets a reference to the given HdfsSourceRegistrationParams and assigns it to the HdfsParams field.
func (o *McmSourceRegistrationAllOf) SetHdfsParams(v HdfsSourceRegistrationParams) {
	o.HdfsParams = &v
}

// GetHbaseParams returns the HbaseParams field value if set, zero value otherwise.
func (o *McmSourceRegistrationAllOf) GetHbaseParams() HbaseSourceRegistrationParams {
	if o == nil || o.HbaseParams == nil {
		var ret HbaseSourceRegistrationParams
		return ret
	}
	return *o.HbaseParams
}

// GetHbaseParamsOk returns a tuple with the HbaseParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmSourceRegistrationAllOf) GetHbaseParamsOk() (*HbaseSourceRegistrationParams, bool) {
	if o == nil || o.HbaseParams == nil {
		return nil, false
	}
	return o.HbaseParams, true
}

// HasHbaseParams returns a boolean if a field has been set.
func (o *McmSourceRegistrationAllOf) HasHbaseParams() bool {
	if o != nil && o.HbaseParams != nil {
		return true
	}

	return false
}

// SetHbaseParams gets a reference to the given HbaseSourceRegistrationParams and assigns it to the HbaseParams field.
func (o *McmSourceRegistrationAllOf) SetHbaseParams(v HbaseSourceRegistrationParams) {
	o.HbaseParams = &v
}

// GetHiveParams returns the HiveParams field value if set, zero value otherwise.
func (o *McmSourceRegistrationAllOf) GetHiveParams() HiveSourceRegistrationParams {
	if o == nil || o.HiveParams == nil {
		var ret HiveSourceRegistrationParams
		return ret
	}
	return *o.HiveParams
}

// GetHiveParamsOk returns a tuple with the HiveParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmSourceRegistrationAllOf) GetHiveParamsOk() (*HiveSourceRegistrationParams, bool) {
	if o == nil || o.HiveParams == nil {
		return nil, false
	}
	return o.HiveParams, true
}

// HasHiveParams returns a boolean if a field has been set.
func (o *McmSourceRegistrationAllOf) HasHiveParams() bool {
	if o != nil && o.HiveParams != nil {
		return true
	}

	return false
}

// SetHiveParams gets a reference to the given HiveSourceRegistrationParams and assigns it to the HiveParams field.
func (o *McmSourceRegistrationAllOf) SetHiveParams(v HiveSourceRegistrationParams) {
	o.HiveParams = &v
}

// GetAwsParams returns the AwsParams field value if set, zero value otherwise.
func (o *McmSourceRegistrationAllOf) GetAwsParams() AwsSourceRegistrationParams {
	if o == nil || o.AwsParams == nil {
		var ret AwsSourceRegistrationParams
		return ret
	}
	return *o.AwsParams
}

// GetAwsParamsOk returns a tuple with the AwsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmSourceRegistrationAllOf) GetAwsParamsOk() (*AwsSourceRegistrationParams, bool) {
	if o == nil || o.AwsParams == nil {
		return nil, false
	}
	return o.AwsParams, true
}

// HasAwsParams returns a boolean if a field has been set.
func (o *McmSourceRegistrationAllOf) HasAwsParams() bool {
	if o != nil && o.AwsParams != nil {
		return true
	}

	return false
}

// SetAwsParams gets a reference to the given AwsSourceRegistrationParams and assigns it to the AwsParams field.
func (o *McmSourceRegistrationAllOf) SetAwsParams(v AwsSourceRegistrationParams) {
	o.AwsParams = &v
}

// GetOffice365Params returns the Office365Params field value if set, zero value otherwise.
func (o *McmSourceRegistrationAllOf) GetOffice365Params() Office365SourceRegistrationParams {
	if o == nil || o.Office365Params == nil {
		var ret Office365SourceRegistrationParams
		return ret
	}
	return *o.Office365Params
}

// GetOffice365ParamsOk returns a tuple with the Office365Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmSourceRegistrationAllOf) GetOffice365ParamsOk() (*Office365SourceRegistrationParams, bool) {
	if o == nil || o.Office365Params == nil {
		return nil, false
	}
	return o.Office365Params, true
}

// HasOffice365Params returns a boolean if a field has been set.
func (o *McmSourceRegistrationAllOf) HasOffice365Params() bool {
	if o != nil && o.Office365Params != nil {
		return true
	}

	return false
}

// SetOffice365Params gets a reference to the given Office365SourceRegistrationParams and assigns it to the Office365Params field.
func (o *McmSourceRegistrationAllOf) SetOffice365Params(v Office365SourceRegistrationParams) {
	o.Office365Params = &v
}

// GetHypervParams returns the HypervParams field value if set, zero value otherwise.
func (o *McmSourceRegistrationAllOf) GetHypervParams() HyperVSourceRegistrationParams {
	if o == nil || o.HypervParams == nil {
		var ret HyperVSourceRegistrationParams
		return ret
	}
	return *o.HypervParams
}

// GetHypervParamsOk returns a tuple with the HypervParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmSourceRegistrationAllOf) GetHypervParamsOk() (*HyperVSourceRegistrationParams, bool) {
	if o == nil || o.HypervParams == nil {
		return nil, false
	}
	return o.HypervParams, true
}

// HasHypervParams returns a boolean if a field has been set.
func (o *McmSourceRegistrationAllOf) HasHypervParams() bool {
	if o != nil && o.HypervParams != nil {
		return true
	}

	return false
}

// SetHypervParams gets a reference to the given HyperVSourceRegistrationParams and assigns it to the HypervParams field.
func (o *McmSourceRegistrationAllOf) SetHypervParams(v HyperVSourceRegistrationParams) {
	o.HypervParams = &v
}

func (o McmSourceRegistrationAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VmwareParams != nil {
		toSerialize["vmwareParams"] = o.VmwareParams
	}
	if o.PhysicalParams != nil {
		toSerialize["physicalParams"] = o.PhysicalParams
	}
	if o.GenericNasParams != nil {
		toSerialize["genericNasParams"] = o.GenericNasParams
	}
	if o.IsilonParams != nil {
		toSerialize["isilonParams"] = o.IsilonParams
	}
	if o.NetappParams != nil {
		toSerialize["netappParams"] = o.NetappParams
	}
	if o.CassandraParams != nil {
		toSerialize["cassandraParams"] = o.CassandraParams
	}
	if o.MongodbParams != nil {
		toSerialize["mongodbParams"] = o.MongodbParams
	}
	if o.CouchbaseParams != nil {
		toSerialize["couchbaseParams"] = o.CouchbaseParams
	}
	if o.HdfsParams != nil {
		toSerialize["hdfsParams"] = o.HdfsParams
	}
	if o.HbaseParams != nil {
		toSerialize["hbaseParams"] = o.HbaseParams
	}
	if o.HiveParams != nil {
		toSerialize["hiveParams"] = o.HiveParams
	}
	if o.AwsParams != nil {
		toSerialize["awsParams"] = o.AwsParams
	}
	if o.Office365Params != nil {
		toSerialize["office365Params"] = o.Office365Params
	}
	if o.HypervParams != nil {
		toSerialize["hypervParams"] = o.HypervParams
	}
	return json.Marshal(toSerialize)
}

type NullableMcmSourceRegistrationAllOf struct {
	value *McmSourceRegistrationAllOf
	isSet bool
}

func (v NullableMcmSourceRegistrationAllOf) Get() *McmSourceRegistrationAllOf {
	return v.value
}

func (v *NullableMcmSourceRegistrationAllOf) Set(val *McmSourceRegistrationAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMcmSourceRegistrationAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMcmSourceRegistrationAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcmSourceRegistrationAllOf(val *McmSourceRegistrationAllOf) *NullableMcmSourceRegistrationAllOf {
	return &NullableMcmSourceRegistrationAllOf{value: val, isSet: true}
}

func (v NullableMcmSourceRegistrationAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcmSourceRegistrationAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


