/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// VmwareObjectProtectionRequestAllOf struct for VmwareObjectProtectionRequestAllOf
type VmwareObjectProtectionRequestAllOf struct {
	// Specifies the id of the object being protected. This can be a leaf level or non leaf level object.
	Id NullableInt64 `json:"id"`
	// Specifies the list of IDs of the objects to not be protected in this backup. This field only applies if provided object id is non leaf entity such as Tag or a folder. This can be used to ignore specific objects under a parent object which has been included for protection.
	ExcludeObjectIds *[]int64 `json:"excludeObjectIds,omitempty"`
}

// NewVmwareObjectProtectionRequestAllOf instantiates a new VmwareObjectProtectionRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmwareObjectProtectionRequestAllOf(id NullableInt64) *VmwareObjectProtectionRequestAllOf {
	this := VmwareObjectProtectionRequestAllOf{}
	this.Id = id
	return &this
}

// NewVmwareObjectProtectionRequestAllOfWithDefaults instantiates a new VmwareObjectProtectionRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmwareObjectProtectionRequestAllOfWithDefaults() *VmwareObjectProtectionRequestAllOf {
	this := VmwareObjectProtectionRequestAllOf{}
	return &this
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *VmwareObjectProtectionRequestAllOf) GetId() int64 {
	if o == nil || o.Id.Get() == nil {
		var ret int64
		return ret
	}

	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareObjectProtectionRequestAllOf) GetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// SetId sets field value
func (o *VmwareObjectProtectionRequestAllOf) SetId(v int64) {
	o.Id.Set(&v)
}

// GetExcludeObjectIds returns the ExcludeObjectIds field value if set, zero value otherwise.
func (o *VmwareObjectProtectionRequestAllOf) GetExcludeObjectIds() []int64 {
	if o == nil || o.ExcludeObjectIds == nil {
		var ret []int64
		return ret
	}
	return *o.ExcludeObjectIds
}

// GetExcludeObjectIdsOk returns a tuple with the ExcludeObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmwareObjectProtectionRequestAllOf) GetExcludeObjectIdsOk() (*[]int64, bool) {
	if o == nil || o.ExcludeObjectIds == nil {
		return nil, false
	}
	return o.ExcludeObjectIds, true
}

// HasExcludeObjectIds returns a boolean if a field has been set.
func (o *VmwareObjectProtectionRequestAllOf) HasExcludeObjectIds() bool {
	if o != nil && o.ExcludeObjectIds != nil {
		return true
	}

	return false
}

// SetExcludeObjectIds gets a reference to the given []int64 and assigns it to the ExcludeObjectIds field.
func (o *VmwareObjectProtectionRequestAllOf) SetExcludeObjectIds(v []int64) {
	o.ExcludeObjectIds = &v
}

func (o VmwareObjectProtectionRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id.Get()
	}
	if o.ExcludeObjectIds != nil {
		toSerialize["excludeObjectIds"] = o.ExcludeObjectIds
	}
	return json.Marshal(toSerialize)
}

type NullableVmwareObjectProtectionRequestAllOf struct {
	value *VmwareObjectProtectionRequestAllOf
	isSet bool
}

func (v NullableVmwareObjectProtectionRequestAllOf) Get() *VmwareObjectProtectionRequestAllOf {
	return v.value
}

func (v *NullableVmwareObjectProtectionRequestAllOf) Set(val *VmwareObjectProtectionRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableVmwareObjectProtectionRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableVmwareObjectProtectionRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmwareObjectProtectionRequestAllOf(val *VmwareObjectProtectionRequestAllOf) *NullableVmwareObjectProtectionRequestAllOf {
	return &NullableVmwareObjectProtectionRequestAllOf{value: val, isSet: true}
}

func (v NullableVmwareObjectProtectionRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmwareObjectProtectionRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


