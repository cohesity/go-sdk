/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ViewProtectionConfig Specifies the View protection config.
type ViewProtectionConfig struct {
	// Specifies the View protection group type.
	ProtectionGroupType NullableString `json:"protectionGroupType"`
	// Specifies the parameters used for existing protection group.
	ExistingGroupParam *ExistingGroupParam `json:"existingGroupParam,omitempty"`
	// Specifies the parameters used for new protection group.
	NewGroupParam *NewGroupParam `json:"newGroupParam,omitempty"`
}

// NewViewProtectionConfig instantiates a new ViewProtectionConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewProtectionConfig(protectionGroupType NullableString) *ViewProtectionConfig {
	this := ViewProtectionConfig{}
	this.ProtectionGroupType = protectionGroupType
	return &this
}

// NewViewProtectionConfigWithDefaults instantiates a new ViewProtectionConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewProtectionConfigWithDefaults() *ViewProtectionConfig {
	this := ViewProtectionConfig{}
	return &this
}

// GetProtectionGroupType returns the ProtectionGroupType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ViewProtectionConfig) GetProtectionGroupType() string {
	if o == nil || o.ProtectionGroupType.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProtectionGroupType.Get()
}

// GetProtectionGroupTypeOk returns a tuple with the ProtectionGroupType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewProtectionConfig) GetProtectionGroupTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionGroupType.Get(), o.ProtectionGroupType.IsSet()
}

// SetProtectionGroupType sets field value
func (o *ViewProtectionConfig) SetProtectionGroupType(v string) {
	o.ProtectionGroupType.Set(&v)
}

// GetExistingGroupParam returns the ExistingGroupParam field value if set, zero value otherwise.
func (o *ViewProtectionConfig) GetExistingGroupParam() ExistingGroupParam {
	if o == nil || o.ExistingGroupParam == nil {
		var ret ExistingGroupParam
		return ret
	}
	return *o.ExistingGroupParam
}

// GetExistingGroupParamOk returns a tuple with the ExistingGroupParam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProtectionConfig) GetExistingGroupParamOk() (*ExistingGroupParam, bool) {
	if o == nil || o.ExistingGroupParam == nil {
		return nil, false
	}
	return o.ExistingGroupParam, true
}

// HasExistingGroupParam returns a boolean if a field has been set.
func (o *ViewProtectionConfig) HasExistingGroupParam() bool {
	if o != nil && o.ExistingGroupParam != nil {
		return true
	}

	return false
}

// SetExistingGroupParam gets a reference to the given ExistingGroupParam and assigns it to the ExistingGroupParam field.
func (o *ViewProtectionConfig) SetExistingGroupParam(v ExistingGroupParam) {
	o.ExistingGroupParam = &v
}

// GetNewGroupParam returns the NewGroupParam field value if set, zero value otherwise.
func (o *ViewProtectionConfig) GetNewGroupParam() NewGroupParam {
	if o == nil || o.NewGroupParam == nil {
		var ret NewGroupParam
		return ret
	}
	return *o.NewGroupParam
}

// GetNewGroupParamOk returns a tuple with the NewGroupParam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProtectionConfig) GetNewGroupParamOk() (*NewGroupParam, bool) {
	if o == nil || o.NewGroupParam == nil {
		return nil, false
	}
	return o.NewGroupParam, true
}

// HasNewGroupParam returns a boolean if a field has been set.
func (o *ViewProtectionConfig) HasNewGroupParam() bool {
	if o != nil && o.NewGroupParam != nil {
		return true
	}

	return false
}

// SetNewGroupParam gets a reference to the given NewGroupParam and assigns it to the NewGroupParam field.
func (o *ViewProtectionConfig) SetNewGroupParam(v NewGroupParam) {
	o.NewGroupParam = &v
}

func (o ViewProtectionConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["protectionGroupType"] = o.ProtectionGroupType.Get()
	}
	if o.ExistingGroupParam != nil {
		toSerialize["existingGroupParam"] = o.ExistingGroupParam
	}
	if o.NewGroupParam != nil {
		toSerialize["newGroupParam"] = o.NewGroupParam
	}
	return json.Marshal(toSerialize)
}

type NullableViewProtectionConfig struct {
	value *ViewProtectionConfig
	isSet bool
}

func (v NullableViewProtectionConfig) Get() *ViewProtectionConfig {
	return v.value
}

func (v *NullableViewProtectionConfig) Set(val *ViewProtectionConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableViewProtectionConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableViewProtectionConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewProtectionConfig(val *ViewProtectionConfig) *NullableViewProtectionConfig {
	return &NullableViewProtectionConfig{value: val, isSet: true}
}

func (v NullableViewProtectionConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewProtectionConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


