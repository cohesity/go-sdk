/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CommonTdmCloneSnapshotParams Specifies the common properties of a clone snapshot.
type CommonTdmCloneSnapshotParams struct {
	// Specifies the label for the snapshot.
	Label NullableString `json:"label,omitempty"`
}

// NewCommonTdmCloneSnapshotParams instantiates a new CommonTdmCloneSnapshotParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonTdmCloneSnapshotParams() *CommonTdmCloneSnapshotParams {
	this := CommonTdmCloneSnapshotParams{}
	return &this
}

// NewCommonTdmCloneSnapshotParamsWithDefaults instantiates a new CommonTdmCloneSnapshotParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonTdmCloneSnapshotParamsWithDefaults() *CommonTdmCloneSnapshotParams {
	this := CommonTdmCloneSnapshotParams{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonTdmCloneSnapshotParams) GetLabel() string {
	if o == nil || o.Label.Get() == nil {
		var ret string
		return ret
	}
	return *o.Label.Get()
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonTdmCloneSnapshotParams) GetLabelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Label.Get(), o.Label.IsSet()
}

// HasLabel returns a boolean if a field has been set.
func (o *CommonTdmCloneSnapshotParams) HasLabel() bool {
	if o != nil && o.Label.IsSet() {
		return true
	}

	return false
}

// SetLabel gets a reference to the given NullableString and assigns it to the Label field.
func (o *CommonTdmCloneSnapshotParams) SetLabel(v string) {
	o.Label.Set(&v)
}
// SetLabelNil sets the value for Label to be an explicit nil
func (o *CommonTdmCloneSnapshotParams) SetLabelNil() {
	o.Label.Set(nil)
}

// UnsetLabel ensures that no value is present for Label, not even an explicit nil
func (o *CommonTdmCloneSnapshotParams) UnsetLabel() {
	o.Label.Unset()
}

func (o CommonTdmCloneSnapshotParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Label.IsSet() {
		toSerialize["label"] = o.Label.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCommonTdmCloneSnapshotParams struct {
	value *CommonTdmCloneSnapshotParams
	isSet bool
}

func (v NullableCommonTdmCloneSnapshotParams) Get() *CommonTdmCloneSnapshotParams {
	return v.value
}

func (v *NullableCommonTdmCloneSnapshotParams) Set(val *CommonTdmCloneSnapshotParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonTdmCloneSnapshotParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonTdmCloneSnapshotParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonTdmCloneSnapshotParams(val *CommonTdmCloneSnapshotParams) *NullableCommonTdmCloneSnapshotParams {
	return &NullableCommonTdmCloneSnapshotParams{value: val, isSet: true}
}

func (v NullableCommonTdmCloneSnapshotParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonTdmCloneSnapshotParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


