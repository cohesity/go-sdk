/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// RecoverCassandraParamsAllOf struct for RecoverCassandraParamsAllOf
type RecoverCassandraParamsAllOf struct {
	// Specifies the local snapshot ids and other details of the Objects to be recovered.
	Snapshots []RecoverCassandraSnapshotParams `json:"snapshots"`
	// A suffix that is to be applied to all recovered objects.
	Suffix NullableString `json:"suffix,omitempty"`
	// Selected Data centers for this cluster.
	SelectedDataCenters *[]string `json:"selectedDataCenters,omitempty"`
	// Specifies the directory on the primary to copy the files which are to be uploaded using destination sstableloader.
	StagingDirectoryList *[]string `json:"stagingDirectoryList,omitempty"`
}

// NewRecoverCassandraParamsAllOf instantiates a new RecoverCassandraParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverCassandraParamsAllOf(snapshots []RecoverCassandraSnapshotParams) *RecoverCassandraParamsAllOf {
	this := RecoverCassandraParamsAllOf{}
	this.Snapshots = snapshots
	return &this
}

// NewRecoverCassandraParamsAllOfWithDefaults instantiates a new RecoverCassandraParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverCassandraParamsAllOfWithDefaults() *RecoverCassandraParamsAllOf {
	this := RecoverCassandraParamsAllOf{}
	return &this
}

// GetSnapshots returns the Snapshots field value
// If the value is explicit nil, the zero value for []RecoverCassandraSnapshotParams will be returned
func (o *RecoverCassandraParamsAllOf) GetSnapshots() []RecoverCassandraSnapshotParams {
	if o == nil {
		var ret []RecoverCassandraSnapshotParams
		return ret
	}

	return o.Snapshots
}

// GetSnapshotsOk returns a tuple with the Snapshots field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverCassandraParamsAllOf) GetSnapshotsOk() (*[]RecoverCassandraSnapshotParams, bool) {
	if o == nil || o.Snapshots == nil {
		return nil, false
	}
	return &o.Snapshots, true
}

// SetSnapshots sets field value
func (o *RecoverCassandraParamsAllOf) SetSnapshots(v []RecoverCassandraSnapshotParams) {
	o.Snapshots = v
}

// GetSuffix returns the Suffix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverCassandraParamsAllOf) GetSuffix() string {
	if o == nil || o.Suffix.Get() == nil {
		var ret string
		return ret
	}
	return *o.Suffix.Get()
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverCassandraParamsAllOf) GetSuffixOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Suffix.Get(), o.Suffix.IsSet()
}

// HasSuffix returns a boolean if a field has been set.
func (o *RecoverCassandraParamsAllOf) HasSuffix() bool {
	if o != nil && o.Suffix.IsSet() {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given NullableString and assigns it to the Suffix field.
func (o *RecoverCassandraParamsAllOf) SetSuffix(v string) {
	o.Suffix.Set(&v)
}
// SetSuffixNil sets the value for Suffix to be an explicit nil
func (o *RecoverCassandraParamsAllOf) SetSuffixNil() {
	o.Suffix.Set(nil)
}

// UnsetSuffix ensures that no value is present for Suffix, not even an explicit nil
func (o *RecoverCassandraParamsAllOf) UnsetSuffix() {
	o.Suffix.Unset()
}

// GetSelectedDataCenters returns the SelectedDataCenters field value if set, zero value otherwise.
func (o *RecoverCassandraParamsAllOf) GetSelectedDataCenters() []string {
	if o == nil || o.SelectedDataCenters == nil {
		var ret []string
		return ret
	}
	return *o.SelectedDataCenters
}

// GetSelectedDataCentersOk returns a tuple with the SelectedDataCenters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverCassandraParamsAllOf) GetSelectedDataCentersOk() (*[]string, bool) {
	if o == nil || o.SelectedDataCenters == nil {
		return nil, false
	}
	return o.SelectedDataCenters, true
}

// HasSelectedDataCenters returns a boolean if a field has been set.
func (o *RecoverCassandraParamsAllOf) HasSelectedDataCenters() bool {
	if o != nil && o.SelectedDataCenters != nil {
		return true
	}

	return false
}

// SetSelectedDataCenters gets a reference to the given []string and assigns it to the SelectedDataCenters field.
func (o *RecoverCassandraParamsAllOf) SetSelectedDataCenters(v []string) {
	o.SelectedDataCenters = &v
}

// GetStagingDirectoryList returns the StagingDirectoryList field value if set, zero value otherwise.
func (o *RecoverCassandraParamsAllOf) GetStagingDirectoryList() []string {
	if o == nil || o.StagingDirectoryList == nil {
		var ret []string
		return ret
	}
	return *o.StagingDirectoryList
}

// GetStagingDirectoryListOk returns a tuple with the StagingDirectoryList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverCassandraParamsAllOf) GetStagingDirectoryListOk() (*[]string, bool) {
	if o == nil || o.StagingDirectoryList == nil {
		return nil, false
	}
	return o.StagingDirectoryList, true
}

// HasStagingDirectoryList returns a boolean if a field has been set.
func (o *RecoverCassandraParamsAllOf) HasStagingDirectoryList() bool {
	if o != nil && o.StagingDirectoryList != nil {
		return true
	}

	return false
}

// SetStagingDirectoryList gets a reference to the given []string and assigns it to the StagingDirectoryList field.
func (o *RecoverCassandraParamsAllOf) SetStagingDirectoryList(v []string) {
	o.StagingDirectoryList = &v
}

func (o RecoverCassandraParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Snapshots != nil {
		toSerialize["snapshots"] = o.Snapshots
	}
	if o.Suffix.IsSet() {
		toSerialize["suffix"] = o.Suffix.Get()
	}
	if o.SelectedDataCenters != nil {
		toSerialize["selectedDataCenters"] = o.SelectedDataCenters
	}
	if o.StagingDirectoryList != nil {
		toSerialize["stagingDirectoryList"] = o.StagingDirectoryList
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverCassandraParamsAllOf struct {
	value *RecoverCassandraParamsAllOf
	isSet bool
}

func (v NullableRecoverCassandraParamsAllOf) Get() *RecoverCassandraParamsAllOf {
	return v.value
}

func (v *NullableRecoverCassandraParamsAllOf) Set(val *RecoverCassandraParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverCassandraParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverCassandraParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverCassandraParamsAllOf(val *RecoverCassandraParamsAllOf) *NullableRecoverCassandraParamsAllOf {
	return &NullableRecoverCassandraParamsAllOf{value: val, isSet: true}
}

func (v NullableRecoverCassandraParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverCassandraParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


