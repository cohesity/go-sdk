/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// HeliosSourceObjectsStats Number of assigned objects to a tenant for given source name.
type HeliosSourceObjectsStats struct {
	// Name of the source
	SourceName NullableString `json:"sourceName,omitempty"`
	// Number of objects assigned.
	NumAssignedObjects NullableInt64 `json:"numAssignedObjects,omitempty"`
}

// NewHeliosSourceObjectsStats instantiates a new HeliosSourceObjectsStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosSourceObjectsStats() *HeliosSourceObjectsStats {
	this := HeliosSourceObjectsStats{}
	return &this
}

// NewHeliosSourceObjectsStatsWithDefaults instantiates a new HeliosSourceObjectsStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosSourceObjectsStatsWithDefaults() *HeliosSourceObjectsStats {
	this := HeliosSourceObjectsStats{}
	return &this
}

// GetSourceName returns the SourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosSourceObjectsStats) GetSourceName() string {
	if o == nil || o.SourceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceName.Get()
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosSourceObjectsStats) GetSourceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceName.Get(), o.SourceName.IsSet()
}

// HasSourceName returns a boolean if a field has been set.
func (o *HeliosSourceObjectsStats) HasSourceName() bool {
	if o != nil && o.SourceName.IsSet() {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given NullableString and assigns it to the SourceName field.
func (o *HeliosSourceObjectsStats) SetSourceName(v string) {
	o.SourceName.Set(&v)
}
// SetSourceNameNil sets the value for SourceName to be an explicit nil
func (o *HeliosSourceObjectsStats) SetSourceNameNil() {
	o.SourceName.Set(nil)
}

// UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil
func (o *HeliosSourceObjectsStats) UnsetSourceName() {
	o.SourceName.Unset()
}

// GetNumAssignedObjects returns the NumAssignedObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosSourceObjectsStats) GetNumAssignedObjects() int64 {
	if o == nil || o.NumAssignedObjects.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumAssignedObjects.Get()
}

// GetNumAssignedObjectsOk returns a tuple with the NumAssignedObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosSourceObjectsStats) GetNumAssignedObjectsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumAssignedObjects.Get(), o.NumAssignedObjects.IsSet()
}

// HasNumAssignedObjects returns a boolean if a field has been set.
func (o *HeliosSourceObjectsStats) HasNumAssignedObjects() bool {
	if o != nil && o.NumAssignedObjects.IsSet() {
		return true
	}

	return false
}

// SetNumAssignedObjects gets a reference to the given NullableInt64 and assigns it to the NumAssignedObjects field.
func (o *HeliosSourceObjectsStats) SetNumAssignedObjects(v int64) {
	o.NumAssignedObjects.Set(&v)
}
// SetNumAssignedObjectsNil sets the value for NumAssignedObjects to be an explicit nil
func (o *HeliosSourceObjectsStats) SetNumAssignedObjectsNil() {
	o.NumAssignedObjects.Set(nil)
}

// UnsetNumAssignedObjects ensures that no value is present for NumAssignedObjects, not even an explicit nil
func (o *HeliosSourceObjectsStats) UnsetNumAssignedObjects() {
	o.NumAssignedObjects.Unset()
}

func (o HeliosSourceObjectsStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SourceName.IsSet() {
		toSerialize["sourceName"] = o.SourceName.Get()
	}
	if o.NumAssignedObjects.IsSet() {
		toSerialize["numAssignedObjects"] = o.NumAssignedObjects.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableHeliosSourceObjectsStats struct {
	value *HeliosSourceObjectsStats
	isSet bool
}

func (v NullableHeliosSourceObjectsStats) Get() *HeliosSourceObjectsStats {
	return v.value
}

func (v *NullableHeliosSourceObjectsStats) Set(val *HeliosSourceObjectsStats) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosSourceObjectsStats) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosSourceObjectsStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosSourceObjectsStats(val *HeliosSourceObjectsStats) *NullableHeliosSourceObjectsStats {
	return &NullableHeliosSourceObjectsStats{value: val, isSet: true}
}

func (v NullableHeliosSourceObjectsStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosSourceObjectsStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


