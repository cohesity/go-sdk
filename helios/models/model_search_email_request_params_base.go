/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// SearchEmailRequestParamsBase Specifies the request parameters to search for emails and email folders.
type SearchEmailRequestParamsBase struct {
	// Specifies a list of mailbox item types. Only items within the given types will be returned.
	Types []string `json:"types,omitempty"`
	// Filters the emails which have attachment.
	HasAttachment NullableBool `json:"hasAttachment,omitempty"`
	// Filters the emails which are received from specified User's email address.
	SenderAddress NullableString `json:"senderAddress,omitempty"`
	// Filters the emails which are sent to specified email addresses.
	RecipientAddresses []string `json:"recipientAddresses,omitempty"`
	// Filters the emails which are sent to specified email addresses in CC.
	CcRecipientAddresses []string `json:"ccRecipientAddresses,omitempty"`
	// Filters the emails which are sent to specified email addresses in BCC.
	BccRecipientAddresses []string `json:"bccRecipientAddresses,omitempty"`
	// Specifies the start time in Unix timestamp epoch in seconds where the received time of the email is more than specified value.
	ReceivedStartTimeSecs NullableInt64 `json:"receivedStartTimeSecs,omitempty"`
	// Specifies the end time in Unix timestamp epoch in seconds where the received time of the email is less than specified value.
	ReceivedEndTimeSecs NullableInt64 `json:"receivedEndTimeSecs,omitempty"`
	// Filters the emails which have the specified text in its subject.
	EmailSubject NullableString `json:"emailSubject,omitempty"`
	// Filters the emails which are categorized to specified folders.
	FolderNames []string `json:"folderNames,omitempty"`
	// Specifies the source environment.
	SourceEnvironment NullableString `json:"sourceEnvironment,omitempty"`
}

// NewSearchEmailRequestParamsBase instantiates a new SearchEmailRequestParamsBase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchEmailRequestParamsBase() *SearchEmailRequestParamsBase {
	this := SearchEmailRequestParamsBase{}
	return &this
}

// NewSearchEmailRequestParamsBaseWithDefaults instantiates a new SearchEmailRequestParamsBase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchEmailRequestParamsBaseWithDefaults() *SearchEmailRequestParamsBase {
	this := SearchEmailRequestParamsBase{}
	return &this
}

// GetTypes returns the Types field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchEmailRequestParamsBase) GetTypes() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchEmailRequestParamsBase) GetTypesOk() (*[]string, bool) {
	if o == nil || o.Types == nil {
		return nil, false
	}
	return &o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *SearchEmailRequestParamsBase) HasTypes() bool {
	if o != nil && o.Types != nil {
		return true
	}

	return false
}

// SetTypes gets a reference to the given []string and assigns it to the Types field.
func (o *SearchEmailRequestParamsBase) SetTypes(v []string) {
	o.Types = v
}

// GetHasAttachment returns the HasAttachment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchEmailRequestParamsBase) GetHasAttachment() bool {
	if o == nil || o.HasAttachment.Get() == nil {
		var ret bool
		return ret
	}
	return *o.HasAttachment.Get()
}

// GetHasAttachmentOk returns a tuple with the HasAttachment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchEmailRequestParamsBase) GetHasAttachmentOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HasAttachment.Get(), o.HasAttachment.IsSet()
}

// HasHasAttachment returns a boolean if a field has been set.
func (o *SearchEmailRequestParamsBase) HasHasAttachment() bool {
	if o != nil && o.HasAttachment.IsSet() {
		return true
	}

	return false
}

// SetHasAttachment gets a reference to the given NullableBool and assigns it to the HasAttachment field.
func (o *SearchEmailRequestParamsBase) SetHasAttachment(v bool) {
	o.HasAttachment.Set(&v)
}
// SetHasAttachmentNil sets the value for HasAttachment to be an explicit nil
func (o *SearchEmailRequestParamsBase) SetHasAttachmentNil() {
	o.HasAttachment.Set(nil)
}

// UnsetHasAttachment ensures that no value is present for HasAttachment, not even an explicit nil
func (o *SearchEmailRequestParamsBase) UnsetHasAttachment() {
	o.HasAttachment.Unset()
}

// GetSenderAddress returns the SenderAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchEmailRequestParamsBase) GetSenderAddress() string {
	if o == nil || o.SenderAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.SenderAddress.Get()
}

// GetSenderAddressOk returns a tuple with the SenderAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchEmailRequestParamsBase) GetSenderAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SenderAddress.Get(), o.SenderAddress.IsSet()
}

// HasSenderAddress returns a boolean if a field has been set.
func (o *SearchEmailRequestParamsBase) HasSenderAddress() bool {
	if o != nil && o.SenderAddress.IsSet() {
		return true
	}

	return false
}

// SetSenderAddress gets a reference to the given NullableString and assigns it to the SenderAddress field.
func (o *SearchEmailRequestParamsBase) SetSenderAddress(v string) {
	o.SenderAddress.Set(&v)
}
// SetSenderAddressNil sets the value for SenderAddress to be an explicit nil
func (o *SearchEmailRequestParamsBase) SetSenderAddressNil() {
	o.SenderAddress.Set(nil)
}

// UnsetSenderAddress ensures that no value is present for SenderAddress, not even an explicit nil
func (o *SearchEmailRequestParamsBase) UnsetSenderAddress() {
	o.SenderAddress.Unset()
}

// GetRecipientAddresses returns the RecipientAddresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchEmailRequestParamsBase) GetRecipientAddresses() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.RecipientAddresses
}

// GetRecipientAddressesOk returns a tuple with the RecipientAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchEmailRequestParamsBase) GetRecipientAddressesOk() (*[]string, bool) {
	if o == nil || o.RecipientAddresses == nil {
		return nil, false
	}
	return &o.RecipientAddresses, true
}

// HasRecipientAddresses returns a boolean if a field has been set.
func (o *SearchEmailRequestParamsBase) HasRecipientAddresses() bool {
	if o != nil && o.RecipientAddresses != nil {
		return true
	}

	return false
}

// SetRecipientAddresses gets a reference to the given []string and assigns it to the RecipientAddresses field.
func (o *SearchEmailRequestParamsBase) SetRecipientAddresses(v []string) {
	o.RecipientAddresses = v
}

// GetCcRecipientAddresses returns the CcRecipientAddresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchEmailRequestParamsBase) GetCcRecipientAddresses() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.CcRecipientAddresses
}

// GetCcRecipientAddressesOk returns a tuple with the CcRecipientAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchEmailRequestParamsBase) GetCcRecipientAddressesOk() (*[]string, bool) {
	if o == nil || o.CcRecipientAddresses == nil {
		return nil, false
	}
	return &o.CcRecipientAddresses, true
}

// HasCcRecipientAddresses returns a boolean if a field has been set.
func (o *SearchEmailRequestParamsBase) HasCcRecipientAddresses() bool {
	if o != nil && o.CcRecipientAddresses != nil {
		return true
	}

	return false
}

// SetCcRecipientAddresses gets a reference to the given []string and assigns it to the CcRecipientAddresses field.
func (o *SearchEmailRequestParamsBase) SetCcRecipientAddresses(v []string) {
	o.CcRecipientAddresses = v
}

// GetBccRecipientAddresses returns the BccRecipientAddresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchEmailRequestParamsBase) GetBccRecipientAddresses() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.BccRecipientAddresses
}

// GetBccRecipientAddressesOk returns a tuple with the BccRecipientAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchEmailRequestParamsBase) GetBccRecipientAddressesOk() (*[]string, bool) {
	if o == nil || o.BccRecipientAddresses == nil {
		return nil, false
	}
	return &o.BccRecipientAddresses, true
}

// HasBccRecipientAddresses returns a boolean if a field has been set.
func (o *SearchEmailRequestParamsBase) HasBccRecipientAddresses() bool {
	if o != nil && o.BccRecipientAddresses != nil {
		return true
	}

	return false
}

// SetBccRecipientAddresses gets a reference to the given []string and assigns it to the BccRecipientAddresses field.
func (o *SearchEmailRequestParamsBase) SetBccRecipientAddresses(v []string) {
	o.BccRecipientAddresses = v
}

// GetReceivedStartTimeSecs returns the ReceivedStartTimeSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchEmailRequestParamsBase) GetReceivedStartTimeSecs() int64 {
	if o == nil || o.ReceivedStartTimeSecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ReceivedStartTimeSecs.Get()
}

// GetReceivedStartTimeSecsOk returns a tuple with the ReceivedStartTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchEmailRequestParamsBase) GetReceivedStartTimeSecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReceivedStartTimeSecs.Get(), o.ReceivedStartTimeSecs.IsSet()
}

// HasReceivedStartTimeSecs returns a boolean if a field has been set.
func (o *SearchEmailRequestParamsBase) HasReceivedStartTimeSecs() bool {
	if o != nil && o.ReceivedStartTimeSecs.IsSet() {
		return true
	}

	return false
}

// SetReceivedStartTimeSecs gets a reference to the given NullableInt64 and assigns it to the ReceivedStartTimeSecs field.
func (o *SearchEmailRequestParamsBase) SetReceivedStartTimeSecs(v int64) {
	o.ReceivedStartTimeSecs.Set(&v)
}
// SetReceivedStartTimeSecsNil sets the value for ReceivedStartTimeSecs to be an explicit nil
func (o *SearchEmailRequestParamsBase) SetReceivedStartTimeSecsNil() {
	o.ReceivedStartTimeSecs.Set(nil)
}

// UnsetReceivedStartTimeSecs ensures that no value is present for ReceivedStartTimeSecs, not even an explicit nil
func (o *SearchEmailRequestParamsBase) UnsetReceivedStartTimeSecs() {
	o.ReceivedStartTimeSecs.Unset()
}

// GetReceivedEndTimeSecs returns the ReceivedEndTimeSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchEmailRequestParamsBase) GetReceivedEndTimeSecs() int64 {
	if o == nil || o.ReceivedEndTimeSecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ReceivedEndTimeSecs.Get()
}

// GetReceivedEndTimeSecsOk returns a tuple with the ReceivedEndTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchEmailRequestParamsBase) GetReceivedEndTimeSecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReceivedEndTimeSecs.Get(), o.ReceivedEndTimeSecs.IsSet()
}

// HasReceivedEndTimeSecs returns a boolean if a field has been set.
func (o *SearchEmailRequestParamsBase) HasReceivedEndTimeSecs() bool {
	if o != nil && o.ReceivedEndTimeSecs.IsSet() {
		return true
	}

	return false
}

// SetReceivedEndTimeSecs gets a reference to the given NullableInt64 and assigns it to the ReceivedEndTimeSecs field.
func (o *SearchEmailRequestParamsBase) SetReceivedEndTimeSecs(v int64) {
	o.ReceivedEndTimeSecs.Set(&v)
}
// SetReceivedEndTimeSecsNil sets the value for ReceivedEndTimeSecs to be an explicit nil
func (o *SearchEmailRequestParamsBase) SetReceivedEndTimeSecsNil() {
	o.ReceivedEndTimeSecs.Set(nil)
}

// UnsetReceivedEndTimeSecs ensures that no value is present for ReceivedEndTimeSecs, not even an explicit nil
func (o *SearchEmailRequestParamsBase) UnsetReceivedEndTimeSecs() {
	o.ReceivedEndTimeSecs.Unset()
}

// GetEmailSubject returns the EmailSubject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchEmailRequestParamsBase) GetEmailSubject() string {
	if o == nil || o.EmailSubject.Get() == nil {
		var ret string
		return ret
	}
	return *o.EmailSubject.Get()
}

// GetEmailSubjectOk returns a tuple with the EmailSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchEmailRequestParamsBase) GetEmailSubjectOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EmailSubject.Get(), o.EmailSubject.IsSet()
}

// HasEmailSubject returns a boolean if a field has been set.
func (o *SearchEmailRequestParamsBase) HasEmailSubject() bool {
	if o != nil && o.EmailSubject.IsSet() {
		return true
	}

	return false
}

// SetEmailSubject gets a reference to the given NullableString and assigns it to the EmailSubject field.
func (o *SearchEmailRequestParamsBase) SetEmailSubject(v string) {
	o.EmailSubject.Set(&v)
}
// SetEmailSubjectNil sets the value for EmailSubject to be an explicit nil
func (o *SearchEmailRequestParamsBase) SetEmailSubjectNil() {
	o.EmailSubject.Set(nil)
}

// UnsetEmailSubject ensures that no value is present for EmailSubject, not even an explicit nil
func (o *SearchEmailRequestParamsBase) UnsetEmailSubject() {
	o.EmailSubject.Unset()
}

// GetFolderNames returns the FolderNames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchEmailRequestParamsBase) GetFolderNames() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.FolderNames
}

// GetFolderNamesOk returns a tuple with the FolderNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchEmailRequestParamsBase) GetFolderNamesOk() (*[]string, bool) {
	if o == nil || o.FolderNames == nil {
		return nil, false
	}
	return &o.FolderNames, true
}

// HasFolderNames returns a boolean if a field has been set.
func (o *SearchEmailRequestParamsBase) HasFolderNames() bool {
	if o != nil && o.FolderNames != nil {
		return true
	}

	return false
}

// SetFolderNames gets a reference to the given []string and assigns it to the FolderNames field.
func (o *SearchEmailRequestParamsBase) SetFolderNames(v []string) {
	o.FolderNames = v
}

// GetSourceEnvironment returns the SourceEnvironment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchEmailRequestParamsBase) GetSourceEnvironment() string {
	if o == nil || o.SourceEnvironment.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceEnvironment.Get()
}

// GetSourceEnvironmentOk returns a tuple with the SourceEnvironment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchEmailRequestParamsBase) GetSourceEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceEnvironment.Get(), o.SourceEnvironment.IsSet()
}

// HasSourceEnvironment returns a boolean if a field has been set.
func (o *SearchEmailRequestParamsBase) HasSourceEnvironment() bool {
	if o != nil && o.SourceEnvironment.IsSet() {
		return true
	}

	return false
}

// SetSourceEnvironment gets a reference to the given NullableString and assigns it to the SourceEnvironment field.
func (o *SearchEmailRequestParamsBase) SetSourceEnvironment(v string) {
	o.SourceEnvironment.Set(&v)
}
// SetSourceEnvironmentNil sets the value for SourceEnvironment to be an explicit nil
func (o *SearchEmailRequestParamsBase) SetSourceEnvironmentNil() {
	o.SourceEnvironment.Set(nil)
}

// UnsetSourceEnvironment ensures that no value is present for SourceEnvironment, not even an explicit nil
func (o *SearchEmailRequestParamsBase) UnsetSourceEnvironment() {
	o.SourceEnvironment.Unset()
}

func (o SearchEmailRequestParamsBase) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Types != nil {
		toSerialize["types"] = o.Types
	}
	if o.HasAttachment.IsSet() {
		toSerialize["hasAttachment"] = o.HasAttachment.Get()
	}
	if o.SenderAddress.IsSet() {
		toSerialize["senderAddress"] = o.SenderAddress.Get()
	}
	if o.RecipientAddresses != nil {
		toSerialize["recipientAddresses"] = o.RecipientAddresses
	}
	if o.CcRecipientAddresses != nil {
		toSerialize["ccRecipientAddresses"] = o.CcRecipientAddresses
	}
	if o.BccRecipientAddresses != nil {
		toSerialize["bccRecipientAddresses"] = o.BccRecipientAddresses
	}
	if o.ReceivedStartTimeSecs.IsSet() {
		toSerialize["receivedStartTimeSecs"] = o.ReceivedStartTimeSecs.Get()
	}
	if o.ReceivedEndTimeSecs.IsSet() {
		toSerialize["receivedEndTimeSecs"] = o.ReceivedEndTimeSecs.Get()
	}
	if o.EmailSubject.IsSet() {
		toSerialize["emailSubject"] = o.EmailSubject.Get()
	}
	if o.FolderNames != nil {
		toSerialize["folderNames"] = o.FolderNames
	}
	if o.SourceEnvironment.IsSet() {
		toSerialize["sourceEnvironment"] = o.SourceEnvironment.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSearchEmailRequestParamsBase struct {
	value *SearchEmailRequestParamsBase
	isSet bool
}

func (v NullableSearchEmailRequestParamsBase) Get() *SearchEmailRequestParamsBase {
	return v.value
}

func (v *NullableSearchEmailRequestParamsBase) Set(val *SearchEmailRequestParamsBase) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchEmailRequestParamsBase) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchEmailRequestParamsBase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchEmailRequestParamsBase(val *SearchEmailRequestParamsBase) *NullableSearchEmailRequestParamsBase {
	return &NullableSearchEmailRequestParamsBase{value: val, isSet: true}
}

func (v NullableSearchEmailRequestParamsBase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchEmailRequestParamsBase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


