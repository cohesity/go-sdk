/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// HourSchedule Specifies settings that define a schedule for a Protection Group runs to start after certain number of hours.
type HourSchedule struct {
	// Specifies a factor to multiply the unit by, to determine the backup schedule. <br> Example: If 'frequency' set to 2 and the unit is 'Hours', then Snapshots are backed up every 2 hours. <br> This field is only applicable if unit is 'Minutes', 'Hours' or 'Days'.
	Frequency NullableInt64 `json:"frequency"`
}

// NewHourSchedule instantiates a new HourSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHourSchedule(frequency NullableInt64) *HourSchedule {
	this := HourSchedule{}
	this.Frequency = frequency
	return &this
}

// NewHourScheduleWithDefaults instantiates a new HourSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHourScheduleWithDefaults() *HourSchedule {
	this := HourSchedule{}
	return &this
}

// GetFrequency returns the Frequency field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *HourSchedule) GetFrequency() int64 {
	if o == nil || o.Frequency.Get() == nil {
		var ret int64
		return ret
	}

	return *o.Frequency.Get()
}

// GetFrequencyOk returns a tuple with the Frequency field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HourSchedule) GetFrequencyOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Frequency.Get(), o.Frequency.IsSet()
}

// SetFrequency sets field value
func (o *HourSchedule) SetFrequency(v int64) {
	o.Frequency.Set(&v)
}

func (o HourSchedule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["frequency"] = o.Frequency.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableHourSchedule struct {
	value *HourSchedule
	isSet bool
}

func (v NullableHourSchedule) Get() *HourSchedule {
	return v.value
}

func (v *NullableHourSchedule) Set(val *HourSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableHourSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableHourSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHourSchedule(val *HourSchedule) *NullableHourSchedule {
	return &NullableHourSchedule{value: val, isSet: true}
}

func (v NullableHourSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHourSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


