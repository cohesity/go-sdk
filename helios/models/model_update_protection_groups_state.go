/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// UpdateProtectionGroupsState struct for UpdateProtectionGroupsState
type UpdateProtectionGroupsState struct {
	// Specifies a list of Protection Group ids along with details for which updation of state was failed.
	FailedProtectionGroups []FailedProtectionGroupDetails `json:"failedProtectionGroups,omitempty"`
	// Specifies a list of Protection Group ids for which updation of state was successful.
	SuccessfulProtectionGroupIds []string `json:"successfulProtectionGroupIds,omitempty"`
}

// NewUpdateProtectionGroupsState instantiates a new UpdateProtectionGroupsState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProtectionGroupsState() *UpdateProtectionGroupsState {
	this := UpdateProtectionGroupsState{}
	return &this
}

// NewUpdateProtectionGroupsStateWithDefaults instantiates a new UpdateProtectionGroupsState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProtectionGroupsStateWithDefaults() *UpdateProtectionGroupsState {
	this := UpdateProtectionGroupsState{}
	return &this
}

// GetFailedProtectionGroups returns the FailedProtectionGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionGroupsState) GetFailedProtectionGroups() []FailedProtectionGroupDetails {
	if o == nil  {
		var ret []FailedProtectionGroupDetails
		return ret
	}
	return o.FailedProtectionGroups
}

// GetFailedProtectionGroupsOk returns a tuple with the FailedProtectionGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionGroupsState) GetFailedProtectionGroupsOk() (*[]FailedProtectionGroupDetails, bool) {
	if o == nil || o.FailedProtectionGroups == nil {
		return nil, false
	}
	return &o.FailedProtectionGroups, true
}

// HasFailedProtectionGroups returns a boolean if a field has been set.
func (o *UpdateProtectionGroupsState) HasFailedProtectionGroups() bool {
	if o != nil && o.FailedProtectionGroups != nil {
		return true
	}

	return false
}

// SetFailedProtectionGroups gets a reference to the given []FailedProtectionGroupDetails and assigns it to the FailedProtectionGroups field.
func (o *UpdateProtectionGroupsState) SetFailedProtectionGroups(v []FailedProtectionGroupDetails) {
	o.FailedProtectionGroups = v
}

// GetSuccessfulProtectionGroupIds returns the SuccessfulProtectionGroupIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionGroupsState) GetSuccessfulProtectionGroupIds() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.SuccessfulProtectionGroupIds
}

// GetSuccessfulProtectionGroupIdsOk returns a tuple with the SuccessfulProtectionGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionGroupsState) GetSuccessfulProtectionGroupIdsOk() (*[]string, bool) {
	if o == nil || o.SuccessfulProtectionGroupIds == nil {
		return nil, false
	}
	return &o.SuccessfulProtectionGroupIds, true
}

// HasSuccessfulProtectionGroupIds returns a boolean if a field has been set.
func (o *UpdateProtectionGroupsState) HasSuccessfulProtectionGroupIds() bool {
	if o != nil && o.SuccessfulProtectionGroupIds != nil {
		return true
	}

	return false
}

// SetSuccessfulProtectionGroupIds gets a reference to the given []string and assigns it to the SuccessfulProtectionGroupIds field.
func (o *UpdateProtectionGroupsState) SetSuccessfulProtectionGroupIds(v []string) {
	o.SuccessfulProtectionGroupIds = v
}

func (o UpdateProtectionGroupsState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FailedProtectionGroups != nil {
		toSerialize["failedProtectionGroups"] = o.FailedProtectionGroups
	}
	if o.SuccessfulProtectionGroupIds != nil {
		toSerialize["successfulProtectionGroupIds"] = o.SuccessfulProtectionGroupIds
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateProtectionGroupsState struct {
	value *UpdateProtectionGroupsState
	isSet bool
}

func (v NullableUpdateProtectionGroupsState) Get() *UpdateProtectionGroupsState {
	return v.value
}

func (v *NullableUpdateProtectionGroupsState) Set(val *UpdateProtectionGroupsState) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProtectionGroupsState) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProtectionGroupsState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProtectionGroupsState(val *UpdateProtectionGroupsState) *NullableUpdateProtectionGroupsState {
	return &NullableUpdateProtectionGroupsState{value: val, isSet: true}
}

func (v NullableUpdateProtectionGroupsState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProtectionGroupsState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


