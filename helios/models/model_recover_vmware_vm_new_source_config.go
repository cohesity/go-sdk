/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// RecoverVmwareVmNewSourceConfig Specifies the new destination Source configuration where the VMs will be recovered.
type RecoverVmwareVmNewSourceConfig struct {
	// Specifies the type of VMware source to which the VMs are being restored.
	SourceType NullableString `json:"sourceType"`
	StandaloneHostParams *RecoverVmwareVmEsxiSourceConfig `json:"standaloneHostParams,omitempty"`
	VCenterParams *RecoverVmwareVmVCenterSourceConfig `json:"vCenterParams,omitempty"`
	VCloudDirectorParams *RecoverVmwareVmVCDSourceConfig `json:"vCloudDirectorParams,omitempty"`
}

// NewRecoverVmwareVmNewSourceConfig instantiates a new RecoverVmwareVmNewSourceConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverVmwareVmNewSourceConfig(sourceType NullableString) *RecoverVmwareVmNewSourceConfig {
	this := RecoverVmwareVmNewSourceConfig{}
	this.SourceType = sourceType
	return &this
}

// NewRecoverVmwareVmNewSourceConfigWithDefaults instantiates a new RecoverVmwareVmNewSourceConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverVmwareVmNewSourceConfigWithDefaults() *RecoverVmwareVmNewSourceConfig {
	this := RecoverVmwareVmNewSourceConfig{}
	return &this
}

// GetSourceType returns the SourceType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RecoverVmwareVmNewSourceConfig) GetSourceType() string {
	if o == nil || o.SourceType.Get() == nil {
		var ret string
		return ret
	}

	return *o.SourceType.Get()
}

// GetSourceTypeOk returns a tuple with the SourceType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverVmwareVmNewSourceConfig) GetSourceTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceType.Get(), o.SourceType.IsSet()
}

// SetSourceType sets field value
func (o *RecoverVmwareVmNewSourceConfig) SetSourceType(v string) {
	o.SourceType.Set(&v)
}

// GetStandaloneHostParams returns the StandaloneHostParams field value if set, zero value otherwise.
func (o *RecoverVmwareVmNewSourceConfig) GetStandaloneHostParams() RecoverVmwareVmEsxiSourceConfig {
	if o == nil || o.StandaloneHostParams == nil {
		var ret RecoverVmwareVmEsxiSourceConfig
		return ret
	}
	return *o.StandaloneHostParams
}

// GetStandaloneHostParamsOk returns a tuple with the StandaloneHostParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverVmwareVmNewSourceConfig) GetStandaloneHostParamsOk() (*RecoverVmwareVmEsxiSourceConfig, bool) {
	if o == nil || o.StandaloneHostParams == nil {
		return nil, false
	}
	return o.StandaloneHostParams, true
}

// HasStandaloneHostParams returns a boolean if a field has been set.
func (o *RecoverVmwareVmNewSourceConfig) HasStandaloneHostParams() bool {
	if o != nil && o.StandaloneHostParams != nil {
		return true
	}

	return false
}

// SetStandaloneHostParams gets a reference to the given RecoverVmwareVmEsxiSourceConfig and assigns it to the StandaloneHostParams field.
func (o *RecoverVmwareVmNewSourceConfig) SetStandaloneHostParams(v RecoverVmwareVmEsxiSourceConfig) {
	o.StandaloneHostParams = &v
}

// GetVCenterParams returns the VCenterParams field value if set, zero value otherwise.
func (o *RecoverVmwareVmNewSourceConfig) GetVCenterParams() RecoverVmwareVmVCenterSourceConfig {
	if o == nil || o.VCenterParams == nil {
		var ret RecoverVmwareVmVCenterSourceConfig
		return ret
	}
	return *o.VCenterParams
}

// GetVCenterParamsOk returns a tuple with the VCenterParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverVmwareVmNewSourceConfig) GetVCenterParamsOk() (*RecoverVmwareVmVCenterSourceConfig, bool) {
	if o == nil || o.VCenterParams == nil {
		return nil, false
	}
	return o.VCenterParams, true
}

// HasVCenterParams returns a boolean if a field has been set.
func (o *RecoverVmwareVmNewSourceConfig) HasVCenterParams() bool {
	if o != nil && o.VCenterParams != nil {
		return true
	}

	return false
}

// SetVCenterParams gets a reference to the given RecoverVmwareVmVCenterSourceConfig and assigns it to the VCenterParams field.
func (o *RecoverVmwareVmNewSourceConfig) SetVCenterParams(v RecoverVmwareVmVCenterSourceConfig) {
	o.VCenterParams = &v
}

// GetVCloudDirectorParams returns the VCloudDirectorParams field value if set, zero value otherwise.
func (o *RecoverVmwareVmNewSourceConfig) GetVCloudDirectorParams() RecoverVmwareVmVCDSourceConfig {
	if o == nil || o.VCloudDirectorParams == nil {
		var ret RecoverVmwareVmVCDSourceConfig
		return ret
	}
	return *o.VCloudDirectorParams
}

// GetVCloudDirectorParamsOk returns a tuple with the VCloudDirectorParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverVmwareVmNewSourceConfig) GetVCloudDirectorParamsOk() (*RecoverVmwareVmVCDSourceConfig, bool) {
	if o == nil || o.VCloudDirectorParams == nil {
		return nil, false
	}
	return o.VCloudDirectorParams, true
}

// HasVCloudDirectorParams returns a boolean if a field has been set.
func (o *RecoverVmwareVmNewSourceConfig) HasVCloudDirectorParams() bool {
	if o != nil && o.VCloudDirectorParams != nil {
		return true
	}

	return false
}

// SetVCloudDirectorParams gets a reference to the given RecoverVmwareVmVCDSourceConfig and assigns it to the VCloudDirectorParams field.
func (o *RecoverVmwareVmNewSourceConfig) SetVCloudDirectorParams(v RecoverVmwareVmVCDSourceConfig) {
	o.VCloudDirectorParams = &v
}

func (o RecoverVmwareVmNewSourceConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sourceType"] = o.SourceType.Get()
	}
	if o.StandaloneHostParams != nil {
		toSerialize["standaloneHostParams"] = o.StandaloneHostParams
	}
	if o.VCenterParams != nil {
		toSerialize["vCenterParams"] = o.VCenterParams
	}
	if o.VCloudDirectorParams != nil {
		toSerialize["vCloudDirectorParams"] = o.VCloudDirectorParams
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverVmwareVmNewSourceConfig struct {
	value *RecoverVmwareVmNewSourceConfig
	isSet bool
}

func (v NullableRecoverVmwareVmNewSourceConfig) Get() *RecoverVmwareVmNewSourceConfig {
	return v.value
}

func (v *NullableRecoverVmwareVmNewSourceConfig) Set(val *RecoverVmwareVmNewSourceConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverVmwareVmNewSourceConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverVmwareVmNewSourceConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverVmwareVmNewSourceConfig(val *RecoverVmwareVmNewSourceConfig) *NullableRecoverVmwareVmNewSourceConfig {
	return &NullableRecoverVmwareVmNewSourceConfig{value: val, isSet: true}
}

func (v NullableRecoverVmwareVmNewSourceConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverVmwareVmNewSourceConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


