/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// VmwareRecoverFilesNewTargetConfig Specifies the configuration for recovering files and folders to a new target.
type VmwareRecoverFilesNewTargetConfig struct {
	// Specifies the target VM to recover files and folders to.
	TargetVm NullableRecoverTarget `json:"targetVm"`
	// Specifies the method to recover files and folders.
	RecoverMethod string `json:"recoverMethod"`
	// Specifies the credentials for the target VM. This is mandatory if the recoverMethod is AutoDeploy or UseHypervisorApis.
	TargetVmCredentials NullableCredentials `json:"targetVmCredentials,omitempty"`
	// Specifies the path location to recover files to.
	AbsolutePath NullableString `json:"absolutePath"`
}

// NewVmwareRecoverFilesNewTargetConfig instantiates a new VmwareRecoverFilesNewTargetConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmwareRecoverFilesNewTargetConfig(targetVm NullableRecoverTarget, recoverMethod string, absolutePath NullableString) *VmwareRecoverFilesNewTargetConfig {
	this := VmwareRecoverFilesNewTargetConfig{}
	this.TargetVm = targetVm
	this.RecoverMethod = recoverMethod
	this.AbsolutePath = absolutePath
	return &this
}

// NewVmwareRecoverFilesNewTargetConfigWithDefaults instantiates a new VmwareRecoverFilesNewTargetConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmwareRecoverFilesNewTargetConfigWithDefaults() *VmwareRecoverFilesNewTargetConfig {
	this := VmwareRecoverFilesNewTargetConfig{}
	return &this
}

// GetTargetVm returns the TargetVm field value
// If the value is explicit nil, the zero value for RecoverTarget will be returned
func (o *VmwareRecoverFilesNewTargetConfig) GetTargetVm() RecoverTarget {
	if o == nil || o.TargetVm.Get() == nil {
		var ret RecoverTarget
		return ret
	}

	return *o.TargetVm.Get()
}

// GetTargetVmOk returns a tuple with the TargetVm field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareRecoverFilesNewTargetConfig) GetTargetVmOk() (*RecoverTarget, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetVm.Get(), o.TargetVm.IsSet()
}

// SetTargetVm sets field value
func (o *VmwareRecoverFilesNewTargetConfig) SetTargetVm(v RecoverTarget) {
	o.TargetVm.Set(&v)
}

// GetRecoverMethod returns the RecoverMethod field value
func (o *VmwareRecoverFilesNewTargetConfig) GetRecoverMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecoverMethod
}

// GetRecoverMethodOk returns a tuple with the RecoverMethod field value
// and a boolean to check if the value has been set.
func (o *VmwareRecoverFilesNewTargetConfig) GetRecoverMethodOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RecoverMethod, true
}

// SetRecoverMethod sets field value
func (o *VmwareRecoverFilesNewTargetConfig) SetRecoverMethod(v string) {
	o.RecoverMethod = v
}

// GetTargetVmCredentials returns the TargetVmCredentials field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareRecoverFilesNewTargetConfig) GetTargetVmCredentials() Credentials {
	if o == nil || o.TargetVmCredentials.Get() == nil {
		var ret Credentials
		return ret
	}
	return *o.TargetVmCredentials.Get()
}

// GetTargetVmCredentialsOk returns a tuple with the TargetVmCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareRecoverFilesNewTargetConfig) GetTargetVmCredentialsOk() (*Credentials, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetVmCredentials.Get(), o.TargetVmCredentials.IsSet()
}

// HasTargetVmCredentials returns a boolean if a field has been set.
func (o *VmwareRecoverFilesNewTargetConfig) HasTargetVmCredentials() bool {
	if o != nil && o.TargetVmCredentials.IsSet() {
		return true
	}

	return false
}

// SetTargetVmCredentials gets a reference to the given NullableCredentials and assigns it to the TargetVmCredentials field.
func (o *VmwareRecoverFilesNewTargetConfig) SetTargetVmCredentials(v Credentials) {
	o.TargetVmCredentials.Set(&v)
}
// SetTargetVmCredentialsNil sets the value for TargetVmCredentials to be an explicit nil
func (o *VmwareRecoverFilesNewTargetConfig) SetTargetVmCredentialsNil() {
	o.TargetVmCredentials.Set(nil)
}

// UnsetTargetVmCredentials ensures that no value is present for TargetVmCredentials, not even an explicit nil
func (o *VmwareRecoverFilesNewTargetConfig) UnsetTargetVmCredentials() {
	o.TargetVmCredentials.Unset()
}

// GetAbsolutePath returns the AbsolutePath field value
// If the value is explicit nil, the zero value for string will be returned
func (o *VmwareRecoverFilesNewTargetConfig) GetAbsolutePath() string {
	if o == nil || o.AbsolutePath.Get() == nil {
		var ret string
		return ret
	}

	return *o.AbsolutePath.Get()
}

// GetAbsolutePathOk returns a tuple with the AbsolutePath field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareRecoverFilesNewTargetConfig) GetAbsolutePathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AbsolutePath.Get(), o.AbsolutePath.IsSet()
}

// SetAbsolutePath sets field value
func (o *VmwareRecoverFilesNewTargetConfig) SetAbsolutePath(v string) {
	o.AbsolutePath.Set(&v)
}

func (o VmwareRecoverFilesNewTargetConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["targetVm"] = o.TargetVm.Get()
	}
	if true {
		toSerialize["recoverMethod"] = o.RecoverMethod
	}
	if o.TargetVmCredentials.IsSet() {
		toSerialize["targetVmCredentials"] = o.TargetVmCredentials.Get()
	}
	if true {
		toSerialize["absolutePath"] = o.AbsolutePath.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableVmwareRecoverFilesNewTargetConfig struct {
	value *VmwareRecoverFilesNewTargetConfig
	isSet bool
}

func (v NullableVmwareRecoverFilesNewTargetConfig) Get() *VmwareRecoverFilesNewTargetConfig {
	return v.value
}

func (v *NullableVmwareRecoverFilesNewTargetConfig) Set(val *VmwareRecoverFilesNewTargetConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableVmwareRecoverFilesNewTargetConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableVmwareRecoverFilesNewTargetConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmwareRecoverFilesNewTargetConfig(val *VmwareRecoverFilesNewTargetConfig) *NullableVmwareRecoverFilesNewTargetConfig {
	return &NullableVmwareRecoverFilesNewTargetConfig{value: val, isSet: true}
}

func (v NullableVmwareRecoverFilesNewTargetConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmwareRecoverFilesNewTargetConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


