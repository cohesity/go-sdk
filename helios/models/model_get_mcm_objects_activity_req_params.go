/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// GetMcmObjectsActivityReqParams Specifies the params to filter object activity.
type GetMcmObjectsActivityReqParams struct {
	// Specifies the list of object identifiers to filter the activity.
	ObjectIdentifiers []McmObjectIdentifier `json:"objectIdentifiers,omitempty"`
	// Specifies the list of environments.
	Environments []string `json:"environments,omitempty"`
	// Specifies the status of the activity event.
	Status NullableString `json:"status,omitempty"`
	// Specifies the time in Unix timestamp epoch in microsecond which filters all the activity started after this value.
	FromTimeUsecs NullableInt64 `json:"fromTimeUsecs,omitempty"`
	// Specifies the time in Unix timestamp epoch in microsecond which filters all the activity started before this value.
	ToTimeUsecs NullableInt64 `json:"toTimeUsecs,omitempty"`
	// Specifies the activity types.
	ActivityTypes []string `json:"activityTypes,omitempty"`
	// Specifies the additional filters in case activity type is set to 'BackupRun'.
	BackupRunParams NullableBackupRunFilterParams `json:"backupRunParams,omitempty"`
	ArchivalRunParams *ArchivalRunFilterParams `json:"archivalRunParams,omitempty"`
	// Specifies the additional filters in case activity type is set to 'Restore'.
	RestoreParams NullableRestoreFilterParams `json:"restoreParams,omitempty"`
}

// NewGetMcmObjectsActivityReqParams instantiates a new GetMcmObjectsActivityReqParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMcmObjectsActivityReqParams() *GetMcmObjectsActivityReqParams {
	this := GetMcmObjectsActivityReqParams{}
	return &this
}

// NewGetMcmObjectsActivityReqParamsWithDefaults instantiates a new GetMcmObjectsActivityReqParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMcmObjectsActivityReqParamsWithDefaults() *GetMcmObjectsActivityReqParams {
	this := GetMcmObjectsActivityReqParams{}
	return &this
}

// GetObjectIdentifiers returns the ObjectIdentifiers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMcmObjectsActivityReqParams) GetObjectIdentifiers() []McmObjectIdentifier {
	if o == nil  {
		var ret []McmObjectIdentifier
		return ret
	}
	return o.ObjectIdentifiers
}

// GetObjectIdentifiersOk returns a tuple with the ObjectIdentifiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMcmObjectsActivityReqParams) GetObjectIdentifiersOk() (*[]McmObjectIdentifier, bool) {
	if o == nil || o.ObjectIdentifiers == nil {
		return nil, false
	}
	return &o.ObjectIdentifiers, true
}

// HasObjectIdentifiers returns a boolean if a field has been set.
func (o *GetMcmObjectsActivityReqParams) HasObjectIdentifiers() bool {
	if o != nil && o.ObjectIdentifiers != nil {
		return true
	}

	return false
}

// SetObjectIdentifiers gets a reference to the given []McmObjectIdentifier and assigns it to the ObjectIdentifiers field.
func (o *GetMcmObjectsActivityReqParams) SetObjectIdentifiers(v []McmObjectIdentifier) {
	o.ObjectIdentifiers = v
}

// GetEnvironments returns the Environments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMcmObjectsActivityReqParams) GetEnvironments() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Environments
}

// GetEnvironmentsOk returns a tuple with the Environments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMcmObjectsActivityReqParams) GetEnvironmentsOk() (*[]string, bool) {
	if o == nil || o.Environments == nil {
		return nil, false
	}
	return &o.Environments, true
}

// HasEnvironments returns a boolean if a field has been set.
func (o *GetMcmObjectsActivityReqParams) HasEnvironments() bool {
	if o != nil && o.Environments != nil {
		return true
	}

	return false
}

// SetEnvironments gets a reference to the given []string and assigns it to the Environments field.
func (o *GetMcmObjectsActivityReqParams) SetEnvironments(v []string) {
	o.Environments = v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMcmObjectsActivityReqParams) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMcmObjectsActivityReqParams) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *GetMcmObjectsActivityReqParams) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *GetMcmObjectsActivityReqParams) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *GetMcmObjectsActivityReqParams) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *GetMcmObjectsActivityReqParams) UnsetStatus() {
	o.Status.Unset()
}

// GetFromTimeUsecs returns the FromTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMcmObjectsActivityReqParams) GetFromTimeUsecs() int64 {
	if o == nil || o.FromTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.FromTimeUsecs.Get()
}

// GetFromTimeUsecsOk returns a tuple with the FromTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMcmObjectsActivityReqParams) GetFromTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FromTimeUsecs.Get(), o.FromTimeUsecs.IsSet()
}

// HasFromTimeUsecs returns a boolean if a field has been set.
func (o *GetMcmObjectsActivityReqParams) HasFromTimeUsecs() bool {
	if o != nil && o.FromTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetFromTimeUsecs gets a reference to the given NullableInt64 and assigns it to the FromTimeUsecs field.
func (o *GetMcmObjectsActivityReqParams) SetFromTimeUsecs(v int64) {
	o.FromTimeUsecs.Set(&v)
}
// SetFromTimeUsecsNil sets the value for FromTimeUsecs to be an explicit nil
func (o *GetMcmObjectsActivityReqParams) SetFromTimeUsecsNil() {
	o.FromTimeUsecs.Set(nil)
}

// UnsetFromTimeUsecs ensures that no value is present for FromTimeUsecs, not even an explicit nil
func (o *GetMcmObjectsActivityReqParams) UnsetFromTimeUsecs() {
	o.FromTimeUsecs.Unset()
}

// GetToTimeUsecs returns the ToTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMcmObjectsActivityReqParams) GetToTimeUsecs() int64 {
	if o == nil || o.ToTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ToTimeUsecs.Get()
}

// GetToTimeUsecsOk returns a tuple with the ToTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMcmObjectsActivityReqParams) GetToTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ToTimeUsecs.Get(), o.ToTimeUsecs.IsSet()
}

// HasToTimeUsecs returns a boolean if a field has been set.
func (o *GetMcmObjectsActivityReqParams) HasToTimeUsecs() bool {
	if o != nil && o.ToTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetToTimeUsecs gets a reference to the given NullableInt64 and assigns it to the ToTimeUsecs field.
func (o *GetMcmObjectsActivityReqParams) SetToTimeUsecs(v int64) {
	o.ToTimeUsecs.Set(&v)
}
// SetToTimeUsecsNil sets the value for ToTimeUsecs to be an explicit nil
func (o *GetMcmObjectsActivityReqParams) SetToTimeUsecsNil() {
	o.ToTimeUsecs.Set(nil)
}

// UnsetToTimeUsecs ensures that no value is present for ToTimeUsecs, not even an explicit nil
func (o *GetMcmObjectsActivityReqParams) UnsetToTimeUsecs() {
	o.ToTimeUsecs.Unset()
}

// GetActivityTypes returns the ActivityTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMcmObjectsActivityReqParams) GetActivityTypes() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.ActivityTypes
}

// GetActivityTypesOk returns a tuple with the ActivityTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMcmObjectsActivityReqParams) GetActivityTypesOk() (*[]string, bool) {
	if o == nil || o.ActivityTypes == nil {
		return nil, false
	}
	return &o.ActivityTypes, true
}

// HasActivityTypes returns a boolean if a field has been set.
func (o *GetMcmObjectsActivityReqParams) HasActivityTypes() bool {
	if o != nil && o.ActivityTypes != nil {
		return true
	}

	return false
}

// SetActivityTypes gets a reference to the given []string and assigns it to the ActivityTypes field.
func (o *GetMcmObjectsActivityReqParams) SetActivityTypes(v []string) {
	o.ActivityTypes = v
}

// GetBackupRunParams returns the BackupRunParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMcmObjectsActivityReqParams) GetBackupRunParams() BackupRunFilterParams {
	if o == nil || o.BackupRunParams.Get() == nil {
		var ret BackupRunFilterParams
		return ret
	}
	return *o.BackupRunParams.Get()
}

// GetBackupRunParamsOk returns a tuple with the BackupRunParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMcmObjectsActivityReqParams) GetBackupRunParamsOk() (*BackupRunFilterParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BackupRunParams.Get(), o.BackupRunParams.IsSet()
}

// HasBackupRunParams returns a boolean if a field has been set.
func (o *GetMcmObjectsActivityReqParams) HasBackupRunParams() bool {
	if o != nil && o.BackupRunParams.IsSet() {
		return true
	}

	return false
}

// SetBackupRunParams gets a reference to the given NullableBackupRunFilterParams and assigns it to the BackupRunParams field.
func (o *GetMcmObjectsActivityReqParams) SetBackupRunParams(v BackupRunFilterParams) {
	o.BackupRunParams.Set(&v)
}
// SetBackupRunParamsNil sets the value for BackupRunParams to be an explicit nil
func (o *GetMcmObjectsActivityReqParams) SetBackupRunParamsNil() {
	o.BackupRunParams.Set(nil)
}

// UnsetBackupRunParams ensures that no value is present for BackupRunParams, not even an explicit nil
func (o *GetMcmObjectsActivityReqParams) UnsetBackupRunParams() {
	o.BackupRunParams.Unset()
}

// GetArchivalRunParams returns the ArchivalRunParams field value if set, zero value otherwise.
func (o *GetMcmObjectsActivityReqParams) GetArchivalRunParams() ArchivalRunFilterParams {
	if o == nil || o.ArchivalRunParams == nil {
		var ret ArchivalRunFilterParams
		return ret
	}
	return *o.ArchivalRunParams
}

// GetArchivalRunParamsOk returns a tuple with the ArchivalRunParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMcmObjectsActivityReqParams) GetArchivalRunParamsOk() (*ArchivalRunFilterParams, bool) {
	if o == nil || o.ArchivalRunParams == nil {
		return nil, false
	}
	return o.ArchivalRunParams, true
}

// HasArchivalRunParams returns a boolean if a field has been set.
func (o *GetMcmObjectsActivityReqParams) HasArchivalRunParams() bool {
	if o != nil && o.ArchivalRunParams != nil {
		return true
	}

	return false
}

// SetArchivalRunParams gets a reference to the given ArchivalRunFilterParams and assigns it to the ArchivalRunParams field.
func (o *GetMcmObjectsActivityReqParams) SetArchivalRunParams(v ArchivalRunFilterParams) {
	o.ArchivalRunParams = &v
}

// GetRestoreParams returns the RestoreParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMcmObjectsActivityReqParams) GetRestoreParams() RestoreFilterParams {
	if o == nil || o.RestoreParams.Get() == nil {
		var ret RestoreFilterParams
		return ret
	}
	return *o.RestoreParams.Get()
}

// GetRestoreParamsOk returns a tuple with the RestoreParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMcmObjectsActivityReqParams) GetRestoreParamsOk() (*RestoreFilterParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RestoreParams.Get(), o.RestoreParams.IsSet()
}

// HasRestoreParams returns a boolean if a field has been set.
func (o *GetMcmObjectsActivityReqParams) HasRestoreParams() bool {
	if o != nil && o.RestoreParams.IsSet() {
		return true
	}

	return false
}

// SetRestoreParams gets a reference to the given NullableRestoreFilterParams and assigns it to the RestoreParams field.
func (o *GetMcmObjectsActivityReqParams) SetRestoreParams(v RestoreFilterParams) {
	o.RestoreParams.Set(&v)
}
// SetRestoreParamsNil sets the value for RestoreParams to be an explicit nil
func (o *GetMcmObjectsActivityReqParams) SetRestoreParamsNil() {
	o.RestoreParams.Set(nil)
}

// UnsetRestoreParams ensures that no value is present for RestoreParams, not even an explicit nil
func (o *GetMcmObjectsActivityReqParams) UnsetRestoreParams() {
	o.RestoreParams.Unset()
}

func (o GetMcmObjectsActivityReqParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ObjectIdentifiers != nil {
		toSerialize["objectIdentifiers"] = o.ObjectIdentifiers
	}
	if o.Environments != nil {
		toSerialize["environments"] = o.Environments
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.FromTimeUsecs.IsSet() {
		toSerialize["fromTimeUsecs"] = o.FromTimeUsecs.Get()
	}
	if o.ToTimeUsecs.IsSet() {
		toSerialize["toTimeUsecs"] = o.ToTimeUsecs.Get()
	}
	if o.ActivityTypes != nil {
		toSerialize["activityTypes"] = o.ActivityTypes
	}
	if o.BackupRunParams.IsSet() {
		toSerialize["backupRunParams"] = o.BackupRunParams.Get()
	}
	if o.ArchivalRunParams != nil {
		toSerialize["archivalRunParams"] = o.ArchivalRunParams
	}
	if o.RestoreParams.IsSet() {
		toSerialize["restoreParams"] = o.RestoreParams.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGetMcmObjectsActivityReqParams struct {
	value *GetMcmObjectsActivityReqParams
	isSet bool
}

func (v NullableGetMcmObjectsActivityReqParams) Get() *GetMcmObjectsActivityReqParams {
	return v.value
}

func (v *NullableGetMcmObjectsActivityReqParams) Set(val *GetMcmObjectsActivityReqParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMcmObjectsActivityReqParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMcmObjectsActivityReqParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMcmObjectsActivityReqParams(val *GetMcmObjectsActivityReqParams) *NullableGetMcmObjectsActivityReqParams {
	return &NullableGetMcmObjectsActivityReqParams{value: val, isSet: true}
}

func (v NullableGetMcmObjectsActivityReqParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMcmObjectsActivityReqParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


