/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// HeliosTenantResources A list of storage domains and sources assigned to a Tenant.
type HeliosTenantResources struct {
	// Specifies the new tenant id associated with the api key.
	TenantId NullableString `json:"tenantId,omitempty"`
	// THe list of assigned resources grouped by cluster Id.
	Resources []HeliosTenantClusterResources `json:"resources,omitempty"`
}

// NewHeliosTenantResources instantiates a new HeliosTenantResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosTenantResources() *HeliosTenantResources {
	this := HeliosTenantResources{}
	return &this
}

// NewHeliosTenantResourcesWithDefaults instantiates a new HeliosTenantResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosTenantResourcesWithDefaults() *HeliosTenantResources {
	this := HeliosTenantResources{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosTenantResources) GetTenantId() string {
	if o == nil || o.TenantId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosTenantResources) GetTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *HeliosTenantResources) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *HeliosTenantResources) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *HeliosTenantResources) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *HeliosTenantResources) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetResources returns the Resources field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosTenantResources) GetResources() []HeliosTenantClusterResources {
	if o == nil  {
		var ret []HeliosTenantClusterResources
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosTenantResources) GetResourcesOk() (*[]HeliosTenantClusterResources, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return &o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *HeliosTenantResources) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given []HeliosTenantClusterResources and assigns it to the Resources field.
func (o *HeliosTenantResources) SetResources(v []HeliosTenantClusterResources) {
	o.Resources = v
}

func (o HeliosTenantResources) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	return json.Marshal(toSerialize)
}

type NullableHeliosTenantResources struct {
	value *HeliosTenantResources
	isSet bool
}

func (v NullableHeliosTenantResources) Get() *HeliosTenantResources {
	return v.value
}

func (v *NullableHeliosTenantResources) Set(val *HeliosTenantResources) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosTenantResources) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosTenantResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosTenantResources(val *HeliosTenantResources) *NullableHeliosTenantResources {
	return &NullableHeliosTenantResources{value: val, isSet: true}
}

func (v NullableHeliosTenantResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosTenantResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


