/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// NimbleProtectionGroupParams Specifies the parameters which are specific to Nimble related Protection Groups.
type NimbleProtectionGroupParams struct {
	// Specifies the objects to be included in the Protection Group.
	Objects []NimbleProtectionGroupObjectParams `json:"objects"`
	// Specifies the id of the parent of the objects.
	SourceId NullableInt64 `json:"sourceId,omitempty"`
	// Specifies the name of the parent of the objects.
	SourceName NullableString `json:"sourceName,omitempty"`
}

// NewNimbleProtectionGroupParams instantiates a new NimbleProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNimbleProtectionGroupParams(objects []NimbleProtectionGroupObjectParams) *NimbleProtectionGroupParams {
	this := NimbleProtectionGroupParams{}
	this.Objects = objects
	return &this
}

// NewNimbleProtectionGroupParamsWithDefaults instantiates a new NimbleProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNimbleProtectionGroupParamsWithDefaults() *NimbleProtectionGroupParams {
	this := NimbleProtectionGroupParams{}
	return &this
}

// GetObjects returns the Objects field value
func (o *NimbleProtectionGroupParams) GetObjects() []NimbleProtectionGroupObjectParams {
	if o == nil {
		var ret []NimbleProtectionGroupObjectParams
		return ret
	}

	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value
// and a boolean to check if the value has been set.
func (o *NimbleProtectionGroupParams) GetObjectsOk() (*[]NimbleProtectionGroupObjectParams, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Objects, true
}

// SetObjects sets field value
func (o *NimbleProtectionGroupParams) SetObjects(v []NimbleProtectionGroupObjectParams) {
	o.Objects = v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NimbleProtectionGroupParams) GetSourceId() int64 {
	if o == nil || o.SourceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NimbleProtectionGroupParams) GetSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *NimbleProtectionGroupParams) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableInt64 and assigns it to the SourceId field.
func (o *NimbleProtectionGroupParams) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *NimbleProtectionGroupParams) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *NimbleProtectionGroupParams) UnsetSourceId() {
	o.SourceId.Unset()
}

// GetSourceName returns the SourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NimbleProtectionGroupParams) GetSourceName() string {
	if o == nil || o.SourceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceName.Get()
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NimbleProtectionGroupParams) GetSourceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceName.Get(), o.SourceName.IsSet()
}

// HasSourceName returns a boolean if a field has been set.
func (o *NimbleProtectionGroupParams) HasSourceName() bool {
	if o != nil && o.SourceName.IsSet() {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given NullableString and assigns it to the SourceName field.
func (o *NimbleProtectionGroupParams) SetSourceName(v string) {
	o.SourceName.Set(&v)
}
// SetSourceNameNil sets the value for SourceName to be an explicit nil
func (o *NimbleProtectionGroupParams) SetSourceNameNil() {
	o.SourceName.Set(nil)
}

// UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil
func (o *NimbleProtectionGroupParams) UnsetSourceName() {
	o.SourceName.Unset()
}

func (o NimbleProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["objects"] = o.Objects
	}
	if o.SourceId.IsSet() {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if o.SourceName.IsSet() {
		toSerialize["sourceName"] = o.SourceName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableNimbleProtectionGroupParams struct {
	value *NimbleProtectionGroupParams
	isSet bool
}

func (v NullableNimbleProtectionGroupParams) Get() *NimbleProtectionGroupParams {
	return v.value
}

func (v *NullableNimbleProtectionGroupParams) Set(val *NimbleProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableNimbleProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableNimbleProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNimbleProtectionGroupParams(val *NimbleProtectionGroupParams) *NullableNimbleProtectionGroupParams {
	return &NullableNimbleProtectionGroupParams{value: val, isSet: true}
}

func (v NullableNimbleProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNimbleProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


