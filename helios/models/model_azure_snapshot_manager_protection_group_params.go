/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// AzureSnapshotManagerProtectionGroupParams Specifies the parameters which are specific to Azure related Protection Groups using Azure native snapshot orchestration with snapshot manager. Objects must be specified.
type AzureSnapshotManagerProtectionGroupParams struct {
	// Specifies the objects to be included in the Protection Group.
	Objects *[]AzureSnapshotManagerProtectionGroupObjectParams `json:"objects,omitempty"`
	// Specifies the objects to be excluded in the Protection Group.
	ExcludeObjectIds []int64 `json:"excludeObjectIds,omitempty"`
	// Array of arrays of VM Tag Ids that Specify VMs to Protect.
	VmTagIds [][]int64 `json:"vmTagIds,omitempty"`
	// Array of arrays of VM Tag Ids that Specify VMs to Exclude.
	ExcludeVmTagIds [][]int64 `json:"excludeVmTagIds,omitempty"`
	// Specifies the id of the parent of the objects.
	SourceId NullableInt64 `json:"sourceId,omitempty"`
	// Specifies the name of the parent of the objects.
	SourceName NullableString `json:"sourceName,omitempty"`
}

// NewAzureSnapshotManagerProtectionGroupParams instantiates a new AzureSnapshotManagerProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureSnapshotManagerProtectionGroupParams() *AzureSnapshotManagerProtectionGroupParams {
	this := AzureSnapshotManagerProtectionGroupParams{}
	return &this
}

// NewAzureSnapshotManagerProtectionGroupParamsWithDefaults instantiates a new AzureSnapshotManagerProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureSnapshotManagerProtectionGroupParamsWithDefaults() *AzureSnapshotManagerProtectionGroupParams {
	this := AzureSnapshotManagerProtectionGroupParams{}
	return &this
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *AzureSnapshotManagerProtectionGroupParams) GetObjects() []AzureSnapshotManagerProtectionGroupObjectParams {
	if o == nil || o.Objects == nil {
		var ret []AzureSnapshotManagerProtectionGroupObjectParams
		return ret
	}
	return *o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSnapshotManagerProtectionGroupParams) GetObjectsOk() (*[]AzureSnapshotManagerProtectionGroupObjectParams, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *AzureSnapshotManagerProtectionGroupParams) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []AzureSnapshotManagerProtectionGroupObjectParams and assigns it to the Objects field.
func (o *AzureSnapshotManagerProtectionGroupParams) SetObjects(v []AzureSnapshotManagerProtectionGroupObjectParams) {
	o.Objects = &v
}

// GetExcludeObjectIds returns the ExcludeObjectIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureSnapshotManagerProtectionGroupParams) GetExcludeObjectIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.ExcludeObjectIds
}

// GetExcludeObjectIdsOk returns a tuple with the ExcludeObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureSnapshotManagerProtectionGroupParams) GetExcludeObjectIdsOk() (*[]int64, bool) {
	if o == nil || o.ExcludeObjectIds == nil {
		return nil, false
	}
	return &o.ExcludeObjectIds, true
}

// HasExcludeObjectIds returns a boolean if a field has been set.
func (o *AzureSnapshotManagerProtectionGroupParams) HasExcludeObjectIds() bool {
	if o != nil && o.ExcludeObjectIds != nil {
		return true
	}

	return false
}

// SetExcludeObjectIds gets a reference to the given []int64 and assigns it to the ExcludeObjectIds field.
func (o *AzureSnapshotManagerProtectionGroupParams) SetExcludeObjectIds(v []int64) {
	o.ExcludeObjectIds = v
}

// GetVmTagIds returns the VmTagIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureSnapshotManagerProtectionGroupParams) GetVmTagIds() [][]int64 {
	if o == nil  {
		var ret [][]int64
		return ret
	}
	return o.VmTagIds
}

// GetVmTagIdsOk returns a tuple with the VmTagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureSnapshotManagerProtectionGroupParams) GetVmTagIdsOk() (*[][]int64, bool) {
	if o == nil || o.VmTagIds == nil {
		return nil, false
	}
	return &o.VmTagIds, true
}

// HasVmTagIds returns a boolean if a field has been set.
func (o *AzureSnapshotManagerProtectionGroupParams) HasVmTagIds() bool {
	if o != nil && o.VmTagIds != nil {
		return true
	}

	return false
}

// SetVmTagIds gets a reference to the given [][]int64 and assigns it to the VmTagIds field.
func (o *AzureSnapshotManagerProtectionGroupParams) SetVmTagIds(v [][]int64) {
	o.VmTagIds = v
}

// GetExcludeVmTagIds returns the ExcludeVmTagIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureSnapshotManagerProtectionGroupParams) GetExcludeVmTagIds() [][]int64 {
	if o == nil  {
		var ret [][]int64
		return ret
	}
	return o.ExcludeVmTagIds
}

// GetExcludeVmTagIdsOk returns a tuple with the ExcludeVmTagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureSnapshotManagerProtectionGroupParams) GetExcludeVmTagIdsOk() (*[][]int64, bool) {
	if o == nil || o.ExcludeVmTagIds == nil {
		return nil, false
	}
	return &o.ExcludeVmTagIds, true
}

// HasExcludeVmTagIds returns a boolean if a field has been set.
func (o *AzureSnapshotManagerProtectionGroupParams) HasExcludeVmTagIds() bool {
	if o != nil && o.ExcludeVmTagIds != nil {
		return true
	}

	return false
}

// SetExcludeVmTagIds gets a reference to the given [][]int64 and assigns it to the ExcludeVmTagIds field.
func (o *AzureSnapshotManagerProtectionGroupParams) SetExcludeVmTagIds(v [][]int64) {
	o.ExcludeVmTagIds = v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureSnapshotManagerProtectionGroupParams) GetSourceId() int64 {
	if o == nil || o.SourceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureSnapshotManagerProtectionGroupParams) GetSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *AzureSnapshotManagerProtectionGroupParams) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableInt64 and assigns it to the SourceId field.
func (o *AzureSnapshotManagerProtectionGroupParams) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *AzureSnapshotManagerProtectionGroupParams) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *AzureSnapshotManagerProtectionGroupParams) UnsetSourceId() {
	o.SourceId.Unset()
}

// GetSourceName returns the SourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureSnapshotManagerProtectionGroupParams) GetSourceName() string {
	if o == nil || o.SourceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceName.Get()
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureSnapshotManagerProtectionGroupParams) GetSourceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceName.Get(), o.SourceName.IsSet()
}

// HasSourceName returns a boolean if a field has been set.
func (o *AzureSnapshotManagerProtectionGroupParams) HasSourceName() bool {
	if o != nil && o.SourceName.IsSet() {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given NullableString and assigns it to the SourceName field.
func (o *AzureSnapshotManagerProtectionGroupParams) SetSourceName(v string) {
	o.SourceName.Set(&v)
}
// SetSourceNameNil sets the value for SourceName to be an explicit nil
func (o *AzureSnapshotManagerProtectionGroupParams) SetSourceNameNil() {
	o.SourceName.Set(nil)
}

// UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil
func (o *AzureSnapshotManagerProtectionGroupParams) UnsetSourceName() {
	o.SourceName.Unset()
}

func (o AzureSnapshotManagerProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if o.ExcludeObjectIds != nil {
		toSerialize["excludeObjectIds"] = o.ExcludeObjectIds
	}
	if o.VmTagIds != nil {
		toSerialize["vmTagIds"] = o.VmTagIds
	}
	if o.ExcludeVmTagIds != nil {
		toSerialize["excludeVmTagIds"] = o.ExcludeVmTagIds
	}
	if o.SourceId.IsSet() {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if o.SourceName.IsSet() {
		toSerialize["sourceName"] = o.SourceName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAzureSnapshotManagerProtectionGroupParams struct {
	value *AzureSnapshotManagerProtectionGroupParams
	isSet bool
}

func (v NullableAzureSnapshotManagerProtectionGroupParams) Get() *AzureSnapshotManagerProtectionGroupParams {
	return v.value
}

func (v *NullableAzureSnapshotManagerProtectionGroupParams) Set(val *AzureSnapshotManagerProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureSnapshotManagerProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureSnapshotManagerProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureSnapshotManagerProtectionGroupParams(val *AzureSnapshotManagerProtectionGroupParams) *NullableAzureSnapshotManagerProtectionGroupParams {
	return &NullableAzureSnapshotManagerProtectionGroupParams{value: val, isSet: true}
}

func (v NullableAzureSnapshotManagerProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureSnapshotManagerProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


