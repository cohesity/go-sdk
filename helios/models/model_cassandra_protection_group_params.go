/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CassandraProtectionGroupParams Specifies the parameters for Cassandra Protection Group.
type CassandraProtectionGroupParams struct {
	// Specifies the objects to be included in the Protection Group.
	Objects *[]NoSqlProtectionGroupObjectParams `json:"objects,omitempty"`
	// Specifies the maximum number of concurrent IO Streams that will be created to exchange data with the cluster.
	Concurrency NullableInt32 `json:"concurrency,omitempty"`
	// Specifies the maximum network bandwidth that each concurrent IO Stream can use for exchanging data with the cluster.
	BandwidthMBPS NullableInt64 `json:"bandwidthMBPS,omitempty"`
	// Specifies the objects to be excluded in the Protection Group.
	ExcludeObjectIds []int64 `json:"excludeObjectIds,omitempty"`
	// Object ID of the Source on which this protection was run .
	SourceId NullableInt64 `json:"sourceId,omitempty"`
	// Specifies the name of the Source on which this protection was run.
	SourceName NullableString `json:"sourceName,omitempty"`
	// Only the specified data centers will be considered while taking backup. The keyspaces having replication strategy 'Simple' can be backed up only if all the datacenters for the cassandra cluster are specified. For any keyspace having replication strategy as 'Network', all the associated data centers should be specified.
	DataCenters *[]string `json:"dataCenters,omitempty"`
}

// NewCassandraProtectionGroupParams instantiates a new CassandraProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCassandraProtectionGroupParams() *CassandraProtectionGroupParams {
	this := CassandraProtectionGroupParams{}
	return &this
}

// NewCassandraProtectionGroupParamsWithDefaults instantiates a new CassandraProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCassandraProtectionGroupParamsWithDefaults() *CassandraProtectionGroupParams {
	this := CassandraProtectionGroupParams{}
	return &this
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *CassandraProtectionGroupParams) GetObjects() []NoSqlProtectionGroupObjectParams {
	if o == nil || o.Objects == nil {
		var ret []NoSqlProtectionGroupObjectParams
		return ret
	}
	return *o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CassandraProtectionGroupParams) GetObjectsOk() (*[]NoSqlProtectionGroupObjectParams, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []NoSqlProtectionGroupObjectParams and assigns it to the Objects field.
func (o *CassandraProtectionGroupParams) SetObjects(v []NoSqlProtectionGroupObjectParams) {
	o.Objects = &v
}

// GetConcurrency returns the Concurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionGroupParams) GetConcurrency() int32 {
	if o == nil || o.Concurrency.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Concurrency.Get()
}

// GetConcurrencyOk returns a tuple with the Concurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionGroupParams) GetConcurrencyOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Concurrency.Get(), o.Concurrency.IsSet()
}

// HasConcurrency returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasConcurrency() bool {
	if o != nil && o.Concurrency.IsSet() {
		return true
	}

	return false
}

// SetConcurrency gets a reference to the given NullableInt32 and assigns it to the Concurrency field.
func (o *CassandraProtectionGroupParams) SetConcurrency(v int32) {
	o.Concurrency.Set(&v)
}
// SetConcurrencyNil sets the value for Concurrency to be an explicit nil
func (o *CassandraProtectionGroupParams) SetConcurrencyNil() {
	o.Concurrency.Set(nil)
}

// UnsetConcurrency ensures that no value is present for Concurrency, not even an explicit nil
func (o *CassandraProtectionGroupParams) UnsetConcurrency() {
	o.Concurrency.Unset()
}

// GetBandwidthMBPS returns the BandwidthMBPS field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionGroupParams) GetBandwidthMBPS() int64 {
	if o == nil || o.BandwidthMBPS.Get() == nil {
		var ret int64
		return ret
	}
	return *o.BandwidthMBPS.Get()
}

// GetBandwidthMBPSOk returns a tuple with the BandwidthMBPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionGroupParams) GetBandwidthMBPSOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BandwidthMBPS.Get(), o.BandwidthMBPS.IsSet()
}

// HasBandwidthMBPS returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasBandwidthMBPS() bool {
	if o != nil && o.BandwidthMBPS.IsSet() {
		return true
	}

	return false
}

// SetBandwidthMBPS gets a reference to the given NullableInt64 and assigns it to the BandwidthMBPS field.
func (o *CassandraProtectionGroupParams) SetBandwidthMBPS(v int64) {
	o.BandwidthMBPS.Set(&v)
}
// SetBandwidthMBPSNil sets the value for BandwidthMBPS to be an explicit nil
func (o *CassandraProtectionGroupParams) SetBandwidthMBPSNil() {
	o.BandwidthMBPS.Set(nil)
}

// UnsetBandwidthMBPS ensures that no value is present for BandwidthMBPS, not even an explicit nil
func (o *CassandraProtectionGroupParams) UnsetBandwidthMBPS() {
	o.BandwidthMBPS.Unset()
}

// GetExcludeObjectIds returns the ExcludeObjectIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionGroupParams) GetExcludeObjectIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.ExcludeObjectIds
}

// GetExcludeObjectIdsOk returns a tuple with the ExcludeObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionGroupParams) GetExcludeObjectIdsOk() (*[]int64, bool) {
	if o == nil || o.ExcludeObjectIds == nil {
		return nil, false
	}
	return &o.ExcludeObjectIds, true
}

// HasExcludeObjectIds returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasExcludeObjectIds() bool {
	if o != nil && o.ExcludeObjectIds != nil {
		return true
	}

	return false
}

// SetExcludeObjectIds gets a reference to the given []int64 and assigns it to the ExcludeObjectIds field.
func (o *CassandraProtectionGroupParams) SetExcludeObjectIds(v []int64) {
	o.ExcludeObjectIds = v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionGroupParams) GetSourceId() int64 {
	if o == nil || o.SourceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionGroupParams) GetSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableInt64 and assigns it to the SourceId field.
func (o *CassandraProtectionGroupParams) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *CassandraProtectionGroupParams) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *CassandraProtectionGroupParams) UnsetSourceId() {
	o.SourceId.Unset()
}

// GetSourceName returns the SourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraProtectionGroupParams) GetSourceName() string {
	if o == nil || o.SourceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceName.Get()
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraProtectionGroupParams) GetSourceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceName.Get(), o.SourceName.IsSet()
}

// HasSourceName returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasSourceName() bool {
	if o != nil && o.SourceName.IsSet() {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given NullableString and assigns it to the SourceName field.
func (o *CassandraProtectionGroupParams) SetSourceName(v string) {
	o.SourceName.Set(&v)
}
// SetSourceNameNil sets the value for SourceName to be an explicit nil
func (o *CassandraProtectionGroupParams) SetSourceNameNil() {
	o.SourceName.Set(nil)
}

// UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil
func (o *CassandraProtectionGroupParams) UnsetSourceName() {
	o.SourceName.Unset()
}

// GetDataCenters returns the DataCenters field value if set, zero value otherwise.
func (o *CassandraProtectionGroupParams) GetDataCenters() []string {
	if o == nil || o.DataCenters == nil {
		var ret []string
		return ret
	}
	return *o.DataCenters
}

// GetDataCentersOk returns a tuple with the DataCenters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CassandraProtectionGroupParams) GetDataCentersOk() (*[]string, bool) {
	if o == nil || o.DataCenters == nil {
		return nil, false
	}
	return o.DataCenters, true
}

// HasDataCenters returns a boolean if a field has been set.
func (o *CassandraProtectionGroupParams) HasDataCenters() bool {
	if o != nil && o.DataCenters != nil {
		return true
	}

	return false
}

// SetDataCenters gets a reference to the given []string and assigns it to the DataCenters field.
func (o *CassandraProtectionGroupParams) SetDataCenters(v []string) {
	o.DataCenters = &v
}

func (o CassandraProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if o.Concurrency.IsSet() {
		toSerialize["concurrency"] = o.Concurrency.Get()
	}
	if o.BandwidthMBPS.IsSet() {
		toSerialize["bandwidthMBPS"] = o.BandwidthMBPS.Get()
	}
	if o.ExcludeObjectIds != nil {
		toSerialize["excludeObjectIds"] = o.ExcludeObjectIds
	}
	if o.SourceId.IsSet() {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if o.SourceName.IsSet() {
		toSerialize["sourceName"] = o.SourceName.Get()
	}
	if o.DataCenters != nil {
		toSerialize["dataCenters"] = o.DataCenters
	}
	return json.Marshal(toSerialize)
}

type NullableCassandraProtectionGroupParams struct {
	value *CassandraProtectionGroupParams
	isSet bool
}

func (v NullableCassandraProtectionGroupParams) Get() *CassandraProtectionGroupParams {
	return v.value
}

func (v *NullableCassandraProtectionGroupParams) Set(val *CassandraProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCassandraProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCassandraProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCassandraProtectionGroupParams(val *CassandraProtectionGroupParams) *NullableCassandraProtectionGroupParams {
	return &NullableCassandraProtectionGroupParams{value: val, isSet: true}
}

func (v NullableCassandraProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCassandraProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


