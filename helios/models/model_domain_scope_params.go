/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// DomainScopeParams Specifies the parameters for domain type scope
type DomainScopeParams struct {
	// Specifies the domain name.
	DomainName NullableString `json:"domainName"`
}

// NewDomainScopeParams instantiates a new DomainScopeParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainScopeParams(domainName NullableString) *DomainScopeParams {
	this := DomainScopeParams{}
	this.DomainName = domainName
	return &this
}

// NewDomainScopeParamsWithDefaults instantiates a new DomainScopeParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainScopeParamsWithDefaults() *DomainScopeParams {
	this := DomainScopeParams{}
	return &this
}

// GetDomainName returns the DomainName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DomainScopeParams) GetDomainName() string {
	if o == nil || o.DomainName.Get() == nil {
		var ret string
		return ret
	}

	return *o.DomainName.Get()
}

// GetDomainNameOk returns a tuple with the DomainName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DomainScopeParams) GetDomainNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DomainName.Get(), o.DomainName.IsSet()
}

// SetDomainName sets field value
func (o *DomainScopeParams) SetDomainName(v string) {
	o.DomainName.Set(&v)
}

func (o DomainScopeParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["domainName"] = o.DomainName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableDomainScopeParams struct {
	value *DomainScopeParams
	isSet bool
}

func (v NullableDomainScopeParams) Get() *DomainScopeParams {
	return v.value
}

func (v *NullableDomainScopeParams) Set(val *DomainScopeParams) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainScopeParams) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainScopeParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainScopeParams(val *DomainScopeParams) *NullableDomainScopeParams {
	return &NullableDomainScopeParams{value: val, isSet: true}
}

func (v NullableDomainScopeParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainScopeParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


