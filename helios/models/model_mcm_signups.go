/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// McmSignups List all MCM signup requests.
type McmSignups struct {
	// Specfies the list of MCM signup requests.
	Signups []McmSignup `json:"signups,omitempty"`
}

// NewMcmSignups instantiates a new McmSignups object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcmSignups() *McmSignups {
	this := McmSignups{}
	return &this
}

// NewMcmSignupsWithDefaults instantiates a new McmSignups object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcmSignupsWithDefaults() *McmSignups {
	this := McmSignups{}
	return &this
}

// GetSignups returns the Signups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmSignups) GetSignups() []McmSignup {
	if o == nil  {
		var ret []McmSignup
		return ret
	}
	return o.Signups
}

// GetSignupsOk returns a tuple with the Signups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmSignups) GetSignupsOk() (*[]McmSignup, bool) {
	if o == nil || o.Signups == nil {
		return nil, false
	}
	return &o.Signups, true
}

// HasSignups returns a boolean if a field has been set.
func (o *McmSignups) HasSignups() bool {
	if o != nil && o.Signups != nil {
		return true
	}

	return false
}

// SetSignups gets a reference to the given []McmSignup and assigns it to the Signups field.
func (o *McmSignups) SetSignups(v []McmSignup) {
	o.Signups = v
}

func (o McmSignups) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Signups != nil {
		toSerialize["signups"] = o.Signups
	}
	return json.Marshal(toSerialize)
}

type NullableMcmSignups struct {
	value *McmSignups
	isSet bool
}

func (v NullableMcmSignups) Get() *McmSignups {
	return v.value
}

func (v *NullableMcmSignups) Set(val *McmSignups) {
	v.value = val
	v.isSet = true
}

func (v NullableMcmSignups) IsSet() bool {
	return v.isSet
}

func (v *NullableMcmSignups) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcmSignups(val *McmSignups) *NullableMcmSignups {
	return &NullableMcmSignups{value: val, isSet: true}
}

func (v NullableMcmSignups) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcmSignups) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


