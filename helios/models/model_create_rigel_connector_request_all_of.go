/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CreateRigelConnectorRequestAllOf struct for CreateRigelConnectorRequestAllOf
type CreateRigelConnectorRequestAllOf struct {
	// Specifies the Id of the connector.
	ConnectorId NullableInt64 `json:"connectorId"`
}

// NewCreateRigelConnectorRequestAllOf instantiates a new CreateRigelConnectorRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRigelConnectorRequestAllOf(connectorId NullableInt64) *CreateRigelConnectorRequestAllOf {
	this := CreateRigelConnectorRequestAllOf{}
	this.ConnectorId = connectorId
	return &this
}

// NewCreateRigelConnectorRequestAllOfWithDefaults instantiates a new CreateRigelConnectorRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRigelConnectorRequestAllOfWithDefaults() *CreateRigelConnectorRequestAllOf {
	this := CreateRigelConnectorRequestAllOf{}
	return &this
}

// GetConnectorId returns the ConnectorId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *CreateRigelConnectorRequestAllOf) GetConnectorId() int64 {
	if o == nil || o.ConnectorId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.ConnectorId.Get()
}

// GetConnectorIdOk returns a tuple with the ConnectorId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRigelConnectorRequestAllOf) GetConnectorIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ConnectorId.Get(), o.ConnectorId.IsSet()
}

// SetConnectorId sets field value
func (o *CreateRigelConnectorRequestAllOf) SetConnectorId(v int64) {
	o.ConnectorId.Set(&v)
}

func (o CreateRigelConnectorRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["connectorId"] = o.ConnectorId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCreateRigelConnectorRequestAllOf struct {
	value *CreateRigelConnectorRequestAllOf
	isSet bool
}

func (v NullableCreateRigelConnectorRequestAllOf) Get() *CreateRigelConnectorRequestAllOf {
	return v.value
}

func (v *NullableCreateRigelConnectorRequestAllOf) Set(val *CreateRigelConnectorRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRigelConnectorRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRigelConnectorRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRigelConnectorRequestAllOf(val *CreateRigelConnectorRequestAllOf) *NullableCreateRigelConnectorRequestAllOf {
	return &NullableCreateRigelConnectorRequestAllOf{value: val, isSet: true}
}

func (v NullableCreateRigelConnectorRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRigelConnectorRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


