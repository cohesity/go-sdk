/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ConstructRestoreMetaInfoOracleParams Params to fetch oracle restore meta info
type ConstructRestoreMetaInfoOracleParams struct {
	// Specifies the name of the Oracle database that we restore to.
	DbName NullableString `json:"dbName"`
	// Specifies the base directory of Oracle at destination.
	BaseDir NullableString `json:"baseDir"`
	// Specifies the home directory of Oracle at destination.
	HomeDir NullableString `json:"homeDir"`
	// Specifies the location to put the database files(datafiles, logfiles etc.)
	DbFileDestination NullableString `json:"dbFileDestination,omitempty"`
	// Specifies whether operation is clone or not
	IsClone NullableBool `json:"isClone"`
	// Specifies whether the operation is granular restore or not.
	IsGranularRestore NullableBool `json:"isGranularRestore,omitempty"`
}

// NewConstructRestoreMetaInfoOracleParams instantiates a new ConstructRestoreMetaInfoOracleParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConstructRestoreMetaInfoOracleParams(dbName NullableString, baseDir NullableString, homeDir NullableString, isClone NullableBool) *ConstructRestoreMetaInfoOracleParams {
	this := ConstructRestoreMetaInfoOracleParams{}
	this.DbName = dbName
	this.BaseDir = baseDir
	this.HomeDir = homeDir
	this.IsClone = isClone
	return &this
}

// NewConstructRestoreMetaInfoOracleParamsWithDefaults instantiates a new ConstructRestoreMetaInfoOracleParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConstructRestoreMetaInfoOracleParamsWithDefaults() *ConstructRestoreMetaInfoOracleParams {
	this := ConstructRestoreMetaInfoOracleParams{}
	return &this
}

// GetDbName returns the DbName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetDbName() string {
	if o == nil || o.DbName.Get() == nil {
		var ret string
		return ret
	}

	return *o.DbName.Get()
}

// GetDbNameOk returns a tuple with the DbName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetDbNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DbName.Get(), o.DbName.IsSet()
}

// SetDbName sets field value
func (o *ConstructRestoreMetaInfoOracleParams) SetDbName(v string) {
	o.DbName.Set(&v)
}

// GetBaseDir returns the BaseDir field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetBaseDir() string {
	if o == nil || o.BaseDir.Get() == nil {
		var ret string
		return ret
	}

	return *o.BaseDir.Get()
}

// GetBaseDirOk returns a tuple with the BaseDir field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetBaseDirOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BaseDir.Get(), o.BaseDir.IsSet()
}

// SetBaseDir sets field value
func (o *ConstructRestoreMetaInfoOracleParams) SetBaseDir(v string) {
	o.BaseDir.Set(&v)
}

// GetHomeDir returns the HomeDir field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetHomeDir() string {
	if o == nil || o.HomeDir.Get() == nil {
		var ret string
		return ret
	}

	return *o.HomeDir.Get()
}

// GetHomeDirOk returns a tuple with the HomeDir field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetHomeDirOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HomeDir.Get(), o.HomeDir.IsSet()
}

// SetHomeDir sets field value
func (o *ConstructRestoreMetaInfoOracleParams) SetHomeDir(v string) {
	o.HomeDir.Set(&v)
}

// GetDbFileDestination returns the DbFileDestination field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConstructRestoreMetaInfoOracleParams) GetDbFileDestination() string {
	if o == nil || o.DbFileDestination.Get() == nil {
		var ret string
		return ret
	}
	return *o.DbFileDestination.Get()
}

// GetDbFileDestinationOk returns a tuple with the DbFileDestination field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetDbFileDestinationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DbFileDestination.Get(), o.DbFileDestination.IsSet()
}

// HasDbFileDestination returns a boolean if a field has been set.
func (o *ConstructRestoreMetaInfoOracleParams) HasDbFileDestination() bool {
	if o != nil && o.DbFileDestination.IsSet() {
		return true
	}

	return false
}

// SetDbFileDestination gets a reference to the given NullableString and assigns it to the DbFileDestination field.
func (o *ConstructRestoreMetaInfoOracleParams) SetDbFileDestination(v string) {
	o.DbFileDestination.Set(&v)
}
// SetDbFileDestinationNil sets the value for DbFileDestination to be an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) SetDbFileDestinationNil() {
	o.DbFileDestination.Set(nil)
}

// UnsetDbFileDestination ensures that no value is present for DbFileDestination, not even an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) UnsetDbFileDestination() {
	o.DbFileDestination.Unset()
}

// GetIsClone returns the IsClone field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetIsClone() bool {
	if o == nil || o.IsClone.Get() == nil {
		var ret bool
		return ret
	}

	return *o.IsClone.Get()
}

// GetIsCloneOk returns a tuple with the IsClone field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetIsCloneOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsClone.Get(), o.IsClone.IsSet()
}

// SetIsClone sets field value
func (o *ConstructRestoreMetaInfoOracleParams) SetIsClone(v bool) {
	o.IsClone.Set(&v)
}

// GetIsGranularRestore returns the IsGranularRestore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConstructRestoreMetaInfoOracleParams) GetIsGranularRestore() bool {
	if o == nil || o.IsGranularRestore.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsGranularRestore.Get()
}

// GetIsGranularRestoreOk returns a tuple with the IsGranularRestore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructRestoreMetaInfoOracleParams) GetIsGranularRestoreOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsGranularRestore.Get(), o.IsGranularRestore.IsSet()
}

// HasIsGranularRestore returns a boolean if a field has been set.
func (o *ConstructRestoreMetaInfoOracleParams) HasIsGranularRestore() bool {
	if o != nil && o.IsGranularRestore.IsSet() {
		return true
	}

	return false
}

// SetIsGranularRestore gets a reference to the given NullableBool and assigns it to the IsGranularRestore field.
func (o *ConstructRestoreMetaInfoOracleParams) SetIsGranularRestore(v bool) {
	o.IsGranularRestore.Set(&v)
}
// SetIsGranularRestoreNil sets the value for IsGranularRestore to be an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) SetIsGranularRestoreNil() {
	o.IsGranularRestore.Set(nil)
}

// UnsetIsGranularRestore ensures that no value is present for IsGranularRestore, not even an explicit nil
func (o *ConstructRestoreMetaInfoOracleParams) UnsetIsGranularRestore() {
	o.IsGranularRestore.Unset()
}

func (o ConstructRestoreMetaInfoOracleParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dbName"] = o.DbName.Get()
	}
	if true {
		toSerialize["baseDir"] = o.BaseDir.Get()
	}
	if true {
		toSerialize["homeDir"] = o.HomeDir.Get()
	}
	if o.DbFileDestination.IsSet() {
		toSerialize["dbFileDestination"] = o.DbFileDestination.Get()
	}
	if true {
		toSerialize["isClone"] = o.IsClone.Get()
	}
	if o.IsGranularRestore.IsSet() {
		toSerialize["isGranularRestore"] = o.IsGranularRestore.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableConstructRestoreMetaInfoOracleParams struct {
	value *ConstructRestoreMetaInfoOracleParams
	isSet bool
}

func (v NullableConstructRestoreMetaInfoOracleParams) Get() *ConstructRestoreMetaInfoOracleParams {
	return v.value
}

func (v *NullableConstructRestoreMetaInfoOracleParams) Set(val *ConstructRestoreMetaInfoOracleParams) {
	v.value = val
	v.isSet = true
}

func (v NullableConstructRestoreMetaInfoOracleParams) IsSet() bool {
	return v.isSet
}

func (v *NullableConstructRestoreMetaInfoOracleParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConstructRestoreMetaInfoOracleParams(val *ConstructRestoreMetaInfoOracleParams) *NullableConstructRestoreMetaInfoOracleParams {
	return &NullableConstructRestoreMetaInfoOracleParams{value: val, isSet: true}
}

func (v NullableConstructRestoreMetaInfoOracleParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConstructRestoreMetaInfoOracleParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


