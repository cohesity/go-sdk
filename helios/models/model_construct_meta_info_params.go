/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ConstructMetaInfoParams Params to construct meta info
type ConstructMetaInfoParams struct {
	// Specifies the environment type of the Protection group
	Environment NullableString `json:"environment"`
	// Oracle Params to construct meta info for alternate restore or clone.
	OracleParams *ConstructRestoreMetaInfoOracleParams `json:"oracleParams,omitempty"`
}

// NewConstructMetaInfoParams instantiates a new ConstructMetaInfoParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConstructMetaInfoParams(environment NullableString) *ConstructMetaInfoParams {
	this := ConstructMetaInfoParams{}
	this.Environment = environment
	return &this
}

// NewConstructMetaInfoParamsWithDefaults instantiates a new ConstructMetaInfoParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConstructMetaInfoParamsWithDefaults() *ConstructMetaInfoParams {
	this := ConstructMetaInfoParams{}
	return &this
}

// GetEnvironment returns the Environment field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ConstructMetaInfoParams) GetEnvironment() string {
	if o == nil || o.Environment.Get() == nil {
		var ret string
		return ret
	}

	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConstructMetaInfoParams) GetEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// SetEnvironment sets field value
func (o *ConstructMetaInfoParams) SetEnvironment(v string) {
	o.Environment.Set(&v)
}

// GetOracleParams returns the OracleParams field value if set, zero value otherwise.
func (o *ConstructMetaInfoParams) GetOracleParams() ConstructRestoreMetaInfoOracleParams {
	if o == nil || o.OracleParams == nil {
		var ret ConstructRestoreMetaInfoOracleParams
		return ret
	}
	return *o.OracleParams
}

// GetOracleParamsOk returns a tuple with the OracleParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstructMetaInfoParams) GetOracleParamsOk() (*ConstructRestoreMetaInfoOracleParams, bool) {
	if o == nil || o.OracleParams == nil {
		return nil, false
	}
	return o.OracleParams, true
}

// HasOracleParams returns a boolean if a field has been set.
func (o *ConstructMetaInfoParams) HasOracleParams() bool {
	if o != nil && o.OracleParams != nil {
		return true
	}

	return false
}

// SetOracleParams gets a reference to the given ConstructRestoreMetaInfoOracleParams and assigns it to the OracleParams field.
func (o *ConstructMetaInfoParams) SetOracleParams(v ConstructRestoreMetaInfoOracleParams) {
	o.OracleParams = &v
}

func (o ConstructMetaInfoParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["environment"] = o.Environment.Get()
	}
	if o.OracleParams != nil {
		toSerialize["oracleParams"] = o.OracleParams
	}
	return json.Marshal(toSerialize)
}

type NullableConstructMetaInfoParams struct {
	value *ConstructMetaInfoParams
	isSet bool
}

func (v NullableConstructMetaInfoParams) Get() *ConstructMetaInfoParams {
	return v.value
}

func (v *NullableConstructMetaInfoParams) Set(val *ConstructMetaInfoParams) {
	v.value = val
	v.isSet = true
}

func (v NullableConstructMetaInfoParams) IsSet() bool {
	return v.isSet
}

func (v *NullableConstructMetaInfoParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConstructMetaInfoParams(val *ConstructMetaInfoParams) *NullableConstructMetaInfoParams {
	return &NullableConstructMetaInfoParams{value: val, isSet: true}
}

func (v NullableConstructMetaInfoParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConstructMetaInfoParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


