/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// HdfsParams Specifies the recovery options specific to HDFS environment.
type HdfsParams struct {
	// Specifies the type of recover action to be performed.
	RecoveryAction string `json:"recoveryAction"`
	RecoverHdfsParams RecoverHdfsParams `json:"recoverHdfsParams"`
}

// NewHdfsParams instantiates a new HdfsParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHdfsParams(recoveryAction string, recoverHdfsParams RecoverHdfsParams) *HdfsParams {
	this := HdfsParams{}
	this.RecoveryAction = recoveryAction
	this.RecoverHdfsParams = recoverHdfsParams
	return &this
}

// NewHdfsParamsWithDefaults instantiates a new HdfsParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHdfsParamsWithDefaults() *HdfsParams {
	this := HdfsParams{}
	return &this
}

// GetRecoveryAction returns the RecoveryAction field value
func (o *HdfsParams) GetRecoveryAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecoveryAction
}

// GetRecoveryActionOk returns a tuple with the RecoveryAction field value
// and a boolean to check if the value has been set.
func (o *HdfsParams) GetRecoveryActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RecoveryAction, true
}

// SetRecoveryAction sets field value
func (o *HdfsParams) SetRecoveryAction(v string) {
	o.RecoveryAction = v
}

// GetRecoverHdfsParams returns the RecoverHdfsParams field value
func (o *HdfsParams) GetRecoverHdfsParams() RecoverHdfsParams {
	if o == nil {
		var ret RecoverHdfsParams
		return ret
	}

	return o.RecoverHdfsParams
}

// GetRecoverHdfsParamsOk returns a tuple with the RecoverHdfsParams field value
// and a boolean to check if the value has been set.
func (o *HdfsParams) GetRecoverHdfsParamsOk() (*RecoverHdfsParams, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RecoverHdfsParams, true
}

// SetRecoverHdfsParams sets field value
func (o *HdfsParams) SetRecoverHdfsParams(v RecoverHdfsParams) {
	o.RecoverHdfsParams = v
}

func (o HdfsParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["recoveryAction"] = o.RecoveryAction
	}
	if true {
		toSerialize["recoverHdfsParams"] = o.RecoverHdfsParams
	}
	return json.Marshal(toSerialize)
}

type NullableHdfsParams struct {
	value *HdfsParams
	isSet bool
}

func (v NullableHdfsParams) Get() *HdfsParams {
	return v.value
}

func (v *NullableHdfsParams) Set(val *HdfsParams) {
	v.value = val
	v.isSet = true
}

func (v NullableHdfsParams) IsSet() bool {
	return v.isSet
}

func (v *NullableHdfsParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHdfsParams(val *HdfsParams) *NullableHdfsParams {
	return &NullableHdfsParams{value: val, isSet: true}
}

func (v NullableHdfsParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHdfsParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


