/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// VmwareObjectEnableSqlProtectionParams Specifies the parameters for enabling SQL protection.
type VmwareObjectEnableSqlProtectionParams struct {
	// Specifies if agent is already installed.
	UseInstalledAgent NullableBool `json:"useInstalledAgent,omitempty"`
	Credentials *VmwareSQLCredentialParams `json:"credentials,omitempty"`
}

// NewVmwareObjectEnableSqlProtectionParams instantiates a new VmwareObjectEnableSqlProtectionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmwareObjectEnableSqlProtectionParams() *VmwareObjectEnableSqlProtectionParams {
	this := VmwareObjectEnableSqlProtectionParams{}
	return &this
}

// NewVmwareObjectEnableSqlProtectionParamsWithDefaults instantiates a new VmwareObjectEnableSqlProtectionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmwareObjectEnableSqlProtectionParamsWithDefaults() *VmwareObjectEnableSqlProtectionParams {
	this := VmwareObjectEnableSqlProtectionParams{}
	return &this
}

// GetUseInstalledAgent returns the UseInstalledAgent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareObjectEnableSqlProtectionParams) GetUseInstalledAgent() bool {
	if o == nil || o.UseInstalledAgent.Get() == nil {
		var ret bool
		return ret
	}
	return *o.UseInstalledAgent.Get()
}

// GetUseInstalledAgentOk returns a tuple with the UseInstalledAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareObjectEnableSqlProtectionParams) GetUseInstalledAgentOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UseInstalledAgent.Get(), o.UseInstalledAgent.IsSet()
}

// HasUseInstalledAgent returns a boolean if a field has been set.
func (o *VmwareObjectEnableSqlProtectionParams) HasUseInstalledAgent() bool {
	if o != nil && o.UseInstalledAgent.IsSet() {
		return true
	}

	return false
}

// SetUseInstalledAgent gets a reference to the given NullableBool and assigns it to the UseInstalledAgent field.
func (o *VmwareObjectEnableSqlProtectionParams) SetUseInstalledAgent(v bool) {
	o.UseInstalledAgent.Set(&v)
}
// SetUseInstalledAgentNil sets the value for UseInstalledAgent to be an explicit nil
func (o *VmwareObjectEnableSqlProtectionParams) SetUseInstalledAgentNil() {
	o.UseInstalledAgent.Set(nil)
}

// UnsetUseInstalledAgent ensures that no value is present for UseInstalledAgent, not even an explicit nil
func (o *VmwareObjectEnableSqlProtectionParams) UnsetUseInstalledAgent() {
	o.UseInstalledAgent.Unset()
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *VmwareObjectEnableSqlProtectionParams) GetCredentials() VmwareSQLCredentialParams {
	if o == nil || o.Credentials == nil {
		var ret VmwareSQLCredentialParams
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmwareObjectEnableSqlProtectionParams) GetCredentialsOk() (*VmwareSQLCredentialParams, bool) {
	if o == nil || o.Credentials == nil {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *VmwareObjectEnableSqlProtectionParams) HasCredentials() bool {
	if o != nil && o.Credentials != nil {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given VmwareSQLCredentialParams and assigns it to the Credentials field.
func (o *VmwareObjectEnableSqlProtectionParams) SetCredentials(v VmwareSQLCredentialParams) {
	o.Credentials = &v
}

func (o VmwareObjectEnableSqlProtectionParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UseInstalledAgent.IsSet() {
		toSerialize["useInstalledAgent"] = o.UseInstalledAgent.Get()
	}
	if o.Credentials != nil {
		toSerialize["credentials"] = o.Credentials
	}
	return json.Marshal(toSerialize)
}

type NullableVmwareObjectEnableSqlProtectionParams struct {
	value *VmwareObjectEnableSqlProtectionParams
	isSet bool
}

func (v NullableVmwareObjectEnableSqlProtectionParams) Get() *VmwareObjectEnableSqlProtectionParams {
	return v.value
}

func (v *NullableVmwareObjectEnableSqlProtectionParams) Set(val *VmwareObjectEnableSqlProtectionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableVmwareObjectEnableSqlProtectionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableVmwareObjectEnableSqlProtectionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmwareObjectEnableSqlProtectionParams(val *VmwareObjectEnableSqlProtectionParams) *NullableVmwareObjectEnableSqlProtectionParams {
	return &NullableVmwareObjectEnableSqlProtectionParams{value: val, isSet: true}
}

func (v NullableVmwareObjectEnableSqlProtectionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmwareObjectEnableSqlProtectionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


