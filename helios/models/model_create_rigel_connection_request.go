/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CreateRigelConnectionRequest Specify the params to create a connection of Rigel.
type CreateRigelConnectionRequest struct {
	// Specifies the id of the tenant which the connection belongs to.
	TenantId NullableString `json:"tenantId"`
	// Specifies the name of the connection.
	Name NullableString `json:"name"`
	// Specifies the id of the connection.
	ConnectionId NullableInt64 `json:"connectionId"`
}

// NewCreateRigelConnectionRequest instantiates a new CreateRigelConnectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRigelConnectionRequest(tenantId NullableString, name NullableString, connectionId NullableInt64) *CreateRigelConnectionRequest {
	this := CreateRigelConnectionRequest{}
	this.TenantId = tenantId
	this.Name = name
	this.ConnectionId = connectionId
	return &this
}

// NewCreateRigelConnectionRequestWithDefaults instantiates a new CreateRigelConnectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRigelConnectionRequestWithDefaults() *CreateRigelConnectionRequest {
	this := CreateRigelConnectionRequest{}
	return &this
}

// GetTenantId returns the TenantId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateRigelConnectionRequest) GetTenantId() string {
	if o == nil || o.TenantId.Get() == nil {
		var ret string
		return ret
	}

	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRigelConnectionRequest) GetTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// SetTenantId sets field value
func (o *CreateRigelConnectionRequest) SetTenantId(v string) {
	o.TenantId.Set(&v)
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateRigelConnectionRequest) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRigelConnectionRequest) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *CreateRigelConnectionRequest) SetName(v string) {
	o.Name.Set(&v)
}

// GetConnectionId returns the ConnectionId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *CreateRigelConnectionRequest) GetConnectionId() int64 {
	if o == nil || o.ConnectionId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.ConnectionId.Get()
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRigelConnectionRequest) GetConnectionIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ConnectionId.Get(), o.ConnectionId.IsSet()
}

// SetConnectionId sets field value
func (o *CreateRigelConnectionRequest) SetConnectionId(v int64) {
	o.ConnectionId.Set(&v)
}

func (o CreateRigelConnectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if true {
		toSerialize["name"] = o.Name.Get()
	}
	if true {
		toSerialize["connectionId"] = o.ConnectionId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCreateRigelConnectionRequest struct {
	value *CreateRigelConnectionRequest
	isSet bool
}

func (v NullableCreateRigelConnectionRequest) Get() *CreateRigelConnectionRequest {
	return v.value
}

func (v *NullableCreateRigelConnectionRequest) Set(val *CreateRigelConnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRigelConnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRigelConnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRigelConnectionRequest(val *CreateRigelConnectionRequest) *NullableCreateRigelConnectionRequest {
	return &NullableCreateRigelConnectionRequest{value: val, isSet: true}
}

func (v NullableCreateRigelConnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRigelConnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


