/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ProgressTasks List of Progress Tasks.
type ProgressTasks struct {
	// Specifies the list of Progress Task.
	ProgressTasks []ProgressTask `json:"progressTasks,omitempty"`
}

// NewProgressTasks instantiates a new ProgressTasks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgressTasks() *ProgressTasks {
	this := ProgressTasks{}
	return &this
}

// NewProgressTasksWithDefaults instantiates a new ProgressTasks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgressTasksWithDefaults() *ProgressTasks {
	this := ProgressTasks{}
	return &this
}

// GetProgressTasks returns the ProgressTasks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProgressTasks) GetProgressTasks() []ProgressTask {
	if o == nil  {
		var ret []ProgressTask
		return ret
	}
	return o.ProgressTasks
}

// GetProgressTasksOk returns a tuple with the ProgressTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProgressTasks) GetProgressTasksOk() (*[]ProgressTask, bool) {
	if o == nil || o.ProgressTasks == nil {
		return nil, false
	}
	return &o.ProgressTasks, true
}

// HasProgressTasks returns a boolean if a field has been set.
func (o *ProgressTasks) HasProgressTasks() bool {
	if o != nil && o.ProgressTasks != nil {
		return true
	}

	return false
}

// SetProgressTasks gets a reference to the given []ProgressTask and assigns it to the ProgressTasks field.
func (o *ProgressTasks) SetProgressTasks(v []ProgressTask) {
	o.ProgressTasks = v
}

func (o ProgressTasks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProgressTasks != nil {
		toSerialize["progressTasks"] = o.ProgressTasks
	}
	return json.Marshal(toSerialize)
}

type NullableProgressTasks struct {
	value *ProgressTasks
	isSet bool
}

func (v NullableProgressTasks) Get() *ProgressTasks {
	return v.value
}

func (v *NullableProgressTasks) Set(val *ProgressTasks) {
	v.value = val
	v.isSet = true
}

func (v NullableProgressTasks) IsSet() bool {
	return v.isSet
}

func (v *NullableProgressTasks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgressTasks(val *ProgressTasks) *NullableProgressTasks {
	return &NullableProgressTasks{value: val, isSet: true}
}

func (v NullableProgressTasks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgressTasks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


