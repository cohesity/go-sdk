/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// EmailHeliosSearchParamsAllOf struct for EmailHeliosSearchParamsAllOf
type EmailHeliosSearchParamsAllOf struct {
	// Specifies the O365 specific params to search emails.
	O365Params []O365HeliosSearchEmailsRequestParams `json:"o365Params,omitempty"`
}

// NewEmailHeliosSearchParamsAllOf instantiates a new EmailHeliosSearchParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailHeliosSearchParamsAllOf() *EmailHeliosSearchParamsAllOf {
	this := EmailHeliosSearchParamsAllOf{}
	return &this
}

// NewEmailHeliosSearchParamsAllOfWithDefaults instantiates a new EmailHeliosSearchParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailHeliosSearchParamsAllOfWithDefaults() *EmailHeliosSearchParamsAllOf {
	this := EmailHeliosSearchParamsAllOf{}
	return &this
}

// GetO365Params returns the O365Params field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailHeliosSearchParamsAllOf) GetO365Params() []O365HeliosSearchEmailsRequestParams {
	if o == nil  {
		var ret []O365HeliosSearchEmailsRequestParams
		return ret
	}
	return o.O365Params
}

// GetO365ParamsOk returns a tuple with the O365Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailHeliosSearchParamsAllOf) GetO365ParamsOk() (*[]O365HeliosSearchEmailsRequestParams, bool) {
	if o == nil || o.O365Params == nil {
		return nil, false
	}
	return &o.O365Params, true
}

// HasO365Params returns a boolean if a field has been set.
func (o *EmailHeliosSearchParamsAllOf) HasO365Params() bool {
	if o != nil && o.O365Params != nil {
		return true
	}

	return false
}

// SetO365Params gets a reference to the given []O365HeliosSearchEmailsRequestParams and assigns it to the O365Params field.
func (o *EmailHeliosSearchParamsAllOf) SetO365Params(v []O365HeliosSearchEmailsRequestParams) {
	o.O365Params = v
}

func (o EmailHeliosSearchParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.O365Params != nil {
		toSerialize["o365Params"] = o.O365Params
	}
	return json.Marshal(toSerialize)
}

type NullableEmailHeliosSearchParamsAllOf struct {
	value *EmailHeliosSearchParamsAllOf
	isSet bool
}

func (v NullableEmailHeliosSearchParamsAllOf) Get() *EmailHeliosSearchParamsAllOf {
	return v.value
}

func (v *NullableEmailHeliosSearchParamsAllOf) Set(val *EmailHeliosSearchParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailHeliosSearchParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailHeliosSearchParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailHeliosSearchParamsAllOf(val *EmailHeliosSearchParamsAllOf) *NullableEmailHeliosSearchParamsAllOf {
	return &NullableEmailHeliosSearchParamsAllOf{value: val, isSet: true}
}

func (v NullableEmailHeliosSearchParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailHeliosSearchParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


