/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CreateMcmClaimResponseBody Specifies the response of claiming an entity to Helios.
type CreateMcmClaimResponseBody struct {
	// Specfies the type of entity.
	EntityType NullableString `json:"entityType,omitempty"`
	RigelParams *McmRigelClaimResponseParams `json:"rigelParams,omitempty"`
	ClusterParams *McmClusterClaimResponseParams `json:"clusterParams,omitempty"`
}

// NewCreateMcmClaimResponseBody instantiates a new CreateMcmClaimResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMcmClaimResponseBody() *CreateMcmClaimResponseBody {
	this := CreateMcmClaimResponseBody{}
	return &this
}

// NewCreateMcmClaimResponseBodyWithDefaults instantiates a new CreateMcmClaimResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMcmClaimResponseBodyWithDefaults() *CreateMcmClaimResponseBody {
	this := CreateMcmClaimResponseBody{}
	return &this
}

// GetEntityType returns the EntityType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateMcmClaimResponseBody) GetEntityType() string {
	if o == nil || o.EntityType.Get() == nil {
		var ret string
		return ret
	}
	return *o.EntityType.Get()
}

// GetEntityTypeOk returns a tuple with the EntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateMcmClaimResponseBody) GetEntityTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EntityType.Get(), o.EntityType.IsSet()
}

// HasEntityType returns a boolean if a field has been set.
func (o *CreateMcmClaimResponseBody) HasEntityType() bool {
	if o != nil && o.EntityType.IsSet() {
		return true
	}

	return false
}

// SetEntityType gets a reference to the given NullableString and assigns it to the EntityType field.
func (o *CreateMcmClaimResponseBody) SetEntityType(v string) {
	o.EntityType.Set(&v)
}
// SetEntityTypeNil sets the value for EntityType to be an explicit nil
func (o *CreateMcmClaimResponseBody) SetEntityTypeNil() {
	o.EntityType.Set(nil)
}

// UnsetEntityType ensures that no value is present for EntityType, not even an explicit nil
func (o *CreateMcmClaimResponseBody) UnsetEntityType() {
	o.EntityType.Unset()
}

// GetRigelParams returns the RigelParams field value if set, zero value otherwise.
func (o *CreateMcmClaimResponseBody) GetRigelParams() McmRigelClaimResponseParams {
	if o == nil || o.RigelParams == nil {
		var ret McmRigelClaimResponseParams
		return ret
	}
	return *o.RigelParams
}

// GetRigelParamsOk returns a tuple with the RigelParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMcmClaimResponseBody) GetRigelParamsOk() (*McmRigelClaimResponseParams, bool) {
	if o == nil || o.RigelParams == nil {
		return nil, false
	}
	return o.RigelParams, true
}

// HasRigelParams returns a boolean if a field has been set.
func (o *CreateMcmClaimResponseBody) HasRigelParams() bool {
	if o != nil && o.RigelParams != nil {
		return true
	}

	return false
}

// SetRigelParams gets a reference to the given McmRigelClaimResponseParams and assigns it to the RigelParams field.
func (o *CreateMcmClaimResponseBody) SetRigelParams(v McmRigelClaimResponseParams) {
	o.RigelParams = &v
}

// GetClusterParams returns the ClusterParams field value if set, zero value otherwise.
func (o *CreateMcmClaimResponseBody) GetClusterParams() McmClusterClaimResponseParams {
	if o == nil || o.ClusterParams == nil {
		var ret McmClusterClaimResponseParams
		return ret
	}
	return *o.ClusterParams
}

// GetClusterParamsOk returns a tuple with the ClusterParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMcmClaimResponseBody) GetClusterParamsOk() (*McmClusterClaimResponseParams, bool) {
	if o == nil || o.ClusterParams == nil {
		return nil, false
	}
	return o.ClusterParams, true
}

// HasClusterParams returns a boolean if a field has been set.
func (o *CreateMcmClaimResponseBody) HasClusterParams() bool {
	if o != nil && o.ClusterParams != nil {
		return true
	}

	return false
}

// SetClusterParams gets a reference to the given McmClusterClaimResponseParams and assigns it to the ClusterParams field.
func (o *CreateMcmClaimResponseBody) SetClusterParams(v McmClusterClaimResponseParams) {
	o.ClusterParams = &v
}

func (o CreateMcmClaimResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntityType.IsSet() {
		toSerialize["entityType"] = o.EntityType.Get()
	}
	if o.RigelParams != nil {
		toSerialize["rigelParams"] = o.RigelParams
	}
	if o.ClusterParams != nil {
		toSerialize["clusterParams"] = o.ClusterParams
	}
	return json.Marshal(toSerialize)
}

type NullableCreateMcmClaimResponseBody struct {
	value *CreateMcmClaimResponseBody
	isSet bool
}

func (v NullableCreateMcmClaimResponseBody) Get() *CreateMcmClaimResponseBody {
	return v.value
}

func (v *NullableCreateMcmClaimResponseBody) Set(val *CreateMcmClaimResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMcmClaimResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMcmClaimResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMcmClaimResponseBody(val *CreateMcmClaimResponseBody) *NullableCreateMcmClaimResponseBody {
	return &NullableCreateMcmClaimResponseBody{value: val, isSet: true}
}

func (v NullableCreateMcmClaimResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMcmClaimResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


