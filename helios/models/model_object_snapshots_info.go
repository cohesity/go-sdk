/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ObjectSnapshotsInfo Specifies the snapshots information for every Protection Group for a given object.
type ObjectSnapshotsInfo struct {
	// Specifies the local snapshot information.
	LocalSnapshotInfo NullableObjectLocalSnapshotInfo `json:"localSnapshotInfo,omitempty"`
	// Specifies the archival snapshots information.
	ArchivalSnapshotsInfo []ObjectArchivalSnapshotInfo `json:"archivalSnapshotsInfo,omitempty"`
	// Specifies the indexing status of objects in this snapshot.<br> 'InProgress' indicates the indexing is in progress.<br> 'Done' indicates indexing is done.<br> 'NoIndex' indicates indexing is not applicable.<br> 'Error' indicates indexing failed with error.
	IndexingStatus NullableString `json:"indexingStatus,omitempty"`
	// Specifies id of the Protection Group.
	ProtectionGroupId NullableString `json:"protectionGroupId,omitempty"`
	// Specifies name of the Protection Group.
	ProtectionGroupName NullableString `json:"protectionGroupName,omitempty"`
	// Specifies the instance id of the protection run which create the snapshot.
	RunInstanceId NullableInt64 `json:"runInstanceId,omitempty"`
	// Specifies the source protection group id in case of replication.
	SourceGroupId NullableString `json:"sourceGroupId,omitempty"`
	// Specifies the Storage Domain id where the backup data of Object is present.
	StorageDomainId NullableInt64 `json:"storageDomainId,omitempty"`
	// Specifies the name of Storage Domain id where the backup data of Object is present
	StorageDomainName NullableString `json:"storageDomainName,omitempty"`
	// Specifies the id of Protection Group Run.
	ProtectionRunId NullableString `json:"protectionRunId,omitempty"`
	// Specifies the type of protection run created this snapshot.
	RunType NullableString `json:"runType,omitempty"`
	// Specifies the start time of Protection Group Run in Unix timestamp epoch in microseconds.
	ProtectionRunStartTimeUsecs NullableInt64 `json:"protectionRunStartTimeUsecs,omitempty"`
	// Specifies the end time of Protection Group Run in Unix timestamp epoch in microseconds.
	ProtectionRunEndTimeUsecs NullableInt64 `json:"protectionRunEndTimeUsecs,omitempty"`
}

// NewObjectSnapshotsInfo instantiates a new ObjectSnapshotsInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectSnapshotsInfo() *ObjectSnapshotsInfo {
	this := ObjectSnapshotsInfo{}
	return &this
}

// NewObjectSnapshotsInfoWithDefaults instantiates a new ObjectSnapshotsInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectSnapshotsInfoWithDefaults() *ObjectSnapshotsInfo {
	this := ObjectSnapshotsInfo{}
	return &this
}

// GetLocalSnapshotInfo returns the LocalSnapshotInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSnapshotsInfo) GetLocalSnapshotInfo() ObjectLocalSnapshotInfo {
	if o == nil || o.LocalSnapshotInfo.Get() == nil {
		var ret ObjectLocalSnapshotInfo
		return ret
	}
	return *o.LocalSnapshotInfo.Get()
}

// GetLocalSnapshotInfoOk returns a tuple with the LocalSnapshotInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotsInfo) GetLocalSnapshotInfoOk() (*ObjectLocalSnapshotInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LocalSnapshotInfo.Get(), o.LocalSnapshotInfo.IsSet()
}

// HasLocalSnapshotInfo returns a boolean if a field has been set.
func (o *ObjectSnapshotsInfo) HasLocalSnapshotInfo() bool {
	if o != nil && o.LocalSnapshotInfo.IsSet() {
		return true
	}

	return false
}

// SetLocalSnapshotInfo gets a reference to the given NullableObjectLocalSnapshotInfo and assigns it to the LocalSnapshotInfo field.
func (o *ObjectSnapshotsInfo) SetLocalSnapshotInfo(v ObjectLocalSnapshotInfo) {
	o.LocalSnapshotInfo.Set(&v)
}
// SetLocalSnapshotInfoNil sets the value for LocalSnapshotInfo to be an explicit nil
func (o *ObjectSnapshotsInfo) SetLocalSnapshotInfoNil() {
	o.LocalSnapshotInfo.Set(nil)
}

// UnsetLocalSnapshotInfo ensures that no value is present for LocalSnapshotInfo, not even an explicit nil
func (o *ObjectSnapshotsInfo) UnsetLocalSnapshotInfo() {
	o.LocalSnapshotInfo.Unset()
}

// GetArchivalSnapshotsInfo returns the ArchivalSnapshotsInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSnapshotsInfo) GetArchivalSnapshotsInfo() []ObjectArchivalSnapshotInfo {
	if o == nil  {
		var ret []ObjectArchivalSnapshotInfo
		return ret
	}
	return o.ArchivalSnapshotsInfo
}

// GetArchivalSnapshotsInfoOk returns a tuple with the ArchivalSnapshotsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotsInfo) GetArchivalSnapshotsInfoOk() (*[]ObjectArchivalSnapshotInfo, bool) {
	if o == nil || o.ArchivalSnapshotsInfo == nil {
		return nil, false
	}
	return &o.ArchivalSnapshotsInfo, true
}

// HasArchivalSnapshotsInfo returns a boolean if a field has been set.
func (o *ObjectSnapshotsInfo) HasArchivalSnapshotsInfo() bool {
	if o != nil && o.ArchivalSnapshotsInfo != nil {
		return true
	}

	return false
}

// SetArchivalSnapshotsInfo gets a reference to the given []ObjectArchivalSnapshotInfo and assigns it to the ArchivalSnapshotsInfo field.
func (o *ObjectSnapshotsInfo) SetArchivalSnapshotsInfo(v []ObjectArchivalSnapshotInfo) {
	o.ArchivalSnapshotsInfo = v
}

// GetIndexingStatus returns the IndexingStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSnapshotsInfo) GetIndexingStatus() string {
	if o == nil || o.IndexingStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.IndexingStatus.Get()
}

// GetIndexingStatusOk returns a tuple with the IndexingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotsInfo) GetIndexingStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IndexingStatus.Get(), o.IndexingStatus.IsSet()
}

// HasIndexingStatus returns a boolean if a field has been set.
func (o *ObjectSnapshotsInfo) HasIndexingStatus() bool {
	if o != nil && o.IndexingStatus.IsSet() {
		return true
	}

	return false
}

// SetIndexingStatus gets a reference to the given NullableString and assigns it to the IndexingStatus field.
func (o *ObjectSnapshotsInfo) SetIndexingStatus(v string) {
	o.IndexingStatus.Set(&v)
}
// SetIndexingStatusNil sets the value for IndexingStatus to be an explicit nil
func (o *ObjectSnapshotsInfo) SetIndexingStatusNil() {
	o.IndexingStatus.Set(nil)
}

// UnsetIndexingStatus ensures that no value is present for IndexingStatus, not even an explicit nil
func (o *ObjectSnapshotsInfo) UnsetIndexingStatus() {
	o.IndexingStatus.Unset()
}

// GetProtectionGroupId returns the ProtectionGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSnapshotsInfo) GetProtectionGroupId() string {
	if o == nil || o.ProtectionGroupId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProtectionGroupId.Get()
}

// GetProtectionGroupIdOk returns a tuple with the ProtectionGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotsInfo) GetProtectionGroupIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionGroupId.Get(), o.ProtectionGroupId.IsSet()
}

// HasProtectionGroupId returns a boolean if a field has been set.
func (o *ObjectSnapshotsInfo) HasProtectionGroupId() bool {
	if o != nil && o.ProtectionGroupId.IsSet() {
		return true
	}

	return false
}

// SetProtectionGroupId gets a reference to the given NullableString and assigns it to the ProtectionGroupId field.
func (o *ObjectSnapshotsInfo) SetProtectionGroupId(v string) {
	o.ProtectionGroupId.Set(&v)
}
// SetProtectionGroupIdNil sets the value for ProtectionGroupId to be an explicit nil
func (o *ObjectSnapshotsInfo) SetProtectionGroupIdNil() {
	o.ProtectionGroupId.Set(nil)
}

// UnsetProtectionGroupId ensures that no value is present for ProtectionGroupId, not even an explicit nil
func (o *ObjectSnapshotsInfo) UnsetProtectionGroupId() {
	o.ProtectionGroupId.Unset()
}

// GetProtectionGroupName returns the ProtectionGroupName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSnapshotsInfo) GetProtectionGroupName() string {
	if o == nil || o.ProtectionGroupName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProtectionGroupName.Get()
}

// GetProtectionGroupNameOk returns a tuple with the ProtectionGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotsInfo) GetProtectionGroupNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionGroupName.Get(), o.ProtectionGroupName.IsSet()
}

// HasProtectionGroupName returns a boolean if a field has been set.
func (o *ObjectSnapshotsInfo) HasProtectionGroupName() bool {
	if o != nil && o.ProtectionGroupName.IsSet() {
		return true
	}

	return false
}

// SetProtectionGroupName gets a reference to the given NullableString and assigns it to the ProtectionGroupName field.
func (o *ObjectSnapshotsInfo) SetProtectionGroupName(v string) {
	o.ProtectionGroupName.Set(&v)
}
// SetProtectionGroupNameNil sets the value for ProtectionGroupName to be an explicit nil
func (o *ObjectSnapshotsInfo) SetProtectionGroupNameNil() {
	o.ProtectionGroupName.Set(nil)
}

// UnsetProtectionGroupName ensures that no value is present for ProtectionGroupName, not even an explicit nil
func (o *ObjectSnapshotsInfo) UnsetProtectionGroupName() {
	o.ProtectionGroupName.Unset()
}

// GetRunInstanceId returns the RunInstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSnapshotsInfo) GetRunInstanceId() int64 {
	if o == nil || o.RunInstanceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RunInstanceId.Get()
}

// GetRunInstanceIdOk returns a tuple with the RunInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotsInfo) GetRunInstanceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RunInstanceId.Get(), o.RunInstanceId.IsSet()
}

// HasRunInstanceId returns a boolean if a field has been set.
func (o *ObjectSnapshotsInfo) HasRunInstanceId() bool {
	if o != nil && o.RunInstanceId.IsSet() {
		return true
	}

	return false
}

// SetRunInstanceId gets a reference to the given NullableInt64 and assigns it to the RunInstanceId field.
func (o *ObjectSnapshotsInfo) SetRunInstanceId(v int64) {
	o.RunInstanceId.Set(&v)
}
// SetRunInstanceIdNil sets the value for RunInstanceId to be an explicit nil
func (o *ObjectSnapshotsInfo) SetRunInstanceIdNil() {
	o.RunInstanceId.Set(nil)
}

// UnsetRunInstanceId ensures that no value is present for RunInstanceId, not even an explicit nil
func (o *ObjectSnapshotsInfo) UnsetRunInstanceId() {
	o.RunInstanceId.Unset()
}

// GetSourceGroupId returns the SourceGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSnapshotsInfo) GetSourceGroupId() string {
	if o == nil || o.SourceGroupId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceGroupId.Get()
}

// GetSourceGroupIdOk returns a tuple with the SourceGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotsInfo) GetSourceGroupIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceGroupId.Get(), o.SourceGroupId.IsSet()
}

// HasSourceGroupId returns a boolean if a field has been set.
func (o *ObjectSnapshotsInfo) HasSourceGroupId() bool {
	if o != nil && o.SourceGroupId.IsSet() {
		return true
	}

	return false
}

// SetSourceGroupId gets a reference to the given NullableString and assigns it to the SourceGroupId field.
func (o *ObjectSnapshotsInfo) SetSourceGroupId(v string) {
	o.SourceGroupId.Set(&v)
}
// SetSourceGroupIdNil sets the value for SourceGroupId to be an explicit nil
func (o *ObjectSnapshotsInfo) SetSourceGroupIdNil() {
	o.SourceGroupId.Set(nil)
}

// UnsetSourceGroupId ensures that no value is present for SourceGroupId, not even an explicit nil
func (o *ObjectSnapshotsInfo) UnsetSourceGroupId() {
	o.SourceGroupId.Unset()
}

// GetStorageDomainId returns the StorageDomainId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSnapshotsInfo) GetStorageDomainId() int64 {
	if o == nil || o.StorageDomainId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StorageDomainId.Get()
}

// GetStorageDomainIdOk returns a tuple with the StorageDomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotsInfo) GetStorageDomainIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StorageDomainId.Get(), o.StorageDomainId.IsSet()
}

// HasStorageDomainId returns a boolean if a field has been set.
func (o *ObjectSnapshotsInfo) HasStorageDomainId() bool {
	if o != nil && o.StorageDomainId.IsSet() {
		return true
	}

	return false
}

// SetStorageDomainId gets a reference to the given NullableInt64 and assigns it to the StorageDomainId field.
func (o *ObjectSnapshotsInfo) SetStorageDomainId(v int64) {
	o.StorageDomainId.Set(&v)
}
// SetStorageDomainIdNil sets the value for StorageDomainId to be an explicit nil
func (o *ObjectSnapshotsInfo) SetStorageDomainIdNil() {
	o.StorageDomainId.Set(nil)
}

// UnsetStorageDomainId ensures that no value is present for StorageDomainId, not even an explicit nil
func (o *ObjectSnapshotsInfo) UnsetStorageDomainId() {
	o.StorageDomainId.Unset()
}

// GetStorageDomainName returns the StorageDomainName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSnapshotsInfo) GetStorageDomainName() string {
	if o == nil || o.StorageDomainName.Get() == nil {
		var ret string
		return ret
	}
	return *o.StorageDomainName.Get()
}

// GetStorageDomainNameOk returns a tuple with the StorageDomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotsInfo) GetStorageDomainNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StorageDomainName.Get(), o.StorageDomainName.IsSet()
}

// HasStorageDomainName returns a boolean if a field has been set.
func (o *ObjectSnapshotsInfo) HasStorageDomainName() bool {
	if o != nil && o.StorageDomainName.IsSet() {
		return true
	}

	return false
}

// SetStorageDomainName gets a reference to the given NullableString and assigns it to the StorageDomainName field.
func (o *ObjectSnapshotsInfo) SetStorageDomainName(v string) {
	o.StorageDomainName.Set(&v)
}
// SetStorageDomainNameNil sets the value for StorageDomainName to be an explicit nil
func (o *ObjectSnapshotsInfo) SetStorageDomainNameNil() {
	o.StorageDomainName.Set(nil)
}

// UnsetStorageDomainName ensures that no value is present for StorageDomainName, not even an explicit nil
func (o *ObjectSnapshotsInfo) UnsetStorageDomainName() {
	o.StorageDomainName.Unset()
}

// GetProtectionRunId returns the ProtectionRunId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSnapshotsInfo) GetProtectionRunId() string {
	if o == nil || o.ProtectionRunId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProtectionRunId.Get()
}

// GetProtectionRunIdOk returns a tuple with the ProtectionRunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotsInfo) GetProtectionRunIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionRunId.Get(), o.ProtectionRunId.IsSet()
}

// HasProtectionRunId returns a boolean if a field has been set.
func (o *ObjectSnapshotsInfo) HasProtectionRunId() bool {
	if o != nil && o.ProtectionRunId.IsSet() {
		return true
	}

	return false
}

// SetProtectionRunId gets a reference to the given NullableString and assigns it to the ProtectionRunId field.
func (o *ObjectSnapshotsInfo) SetProtectionRunId(v string) {
	o.ProtectionRunId.Set(&v)
}
// SetProtectionRunIdNil sets the value for ProtectionRunId to be an explicit nil
func (o *ObjectSnapshotsInfo) SetProtectionRunIdNil() {
	o.ProtectionRunId.Set(nil)
}

// UnsetProtectionRunId ensures that no value is present for ProtectionRunId, not even an explicit nil
func (o *ObjectSnapshotsInfo) UnsetProtectionRunId() {
	o.ProtectionRunId.Unset()
}

// GetRunType returns the RunType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSnapshotsInfo) GetRunType() string {
	if o == nil || o.RunType.Get() == nil {
		var ret string
		return ret
	}
	return *o.RunType.Get()
}

// GetRunTypeOk returns a tuple with the RunType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotsInfo) GetRunTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RunType.Get(), o.RunType.IsSet()
}

// HasRunType returns a boolean if a field has been set.
func (o *ObjectSnapshotsInfo) HasRunType() bool {
	if o != nil && o.RunType.IsSet() {
		return true
	}

	return false
}

// SetRunType gets a reference to the given NullableString and assigns it to the RunType field.
func (o *ObjectSnapshotsInfo) SetRunType(v string) {
	o.RunType.Set(&v)
}
// SetRunTypeNil sets the value for RunType to be an explicit nil
func (o *ObjectSnapshotsInfo) SetRunTypeNil() {
	o.RunType.Set(nil)
}

// UnsetRunType ensures that no value is present for RunType, not even an explicit nil
func (o *ObjectSnapshotsInfo) UnsetRunType() {
	o.RunType.Unset()
}

// GetProtectionRunStartTimeUsecs returns the ProtectionRunStartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSnapshotsInfo) GetProtectionRunStartTimeUsecs() int64 {
	if o == nil || o.ProtectionRunStartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ProtectionRunStartTimeUsecs.Get()
}

// GetProtectionRunStartTimeUsecsOk returns a tuple with the ProtectionRunStartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotsInfo) GetProtectionRunStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionRunStartTimeUsecs.Get(), o.ProtectionRunStartTimeUsecs.IsSet()
}

// HasProtectionRunStartTimeUsecs returns a boolean if a field has been set.
func (o *ObjectSnapshotsInfo) HasProtectionRunStartTimeUsecs() bool {
	if o != nil && o.ProtectionRunStartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetProtectionRunStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the ProtectionRunStartTimeUsecs field.
func (o *ObjectSnapshotsInfo) SetProtectionRunStartTimeUsecs(v int64) {
	o.ProtectionRunStartTimeUsecs.Set(&v)
}
// SetProtectionRunStartTimeUsecsNil sets the value for ProtectionRunStartTimeUsecs to be an explicit nil
func (o *ObjectSnapshotsInfo) SetProtectionRunStartTimeUsecsNil() {
	o.ProtectionRunStartTimeUsecs.Set(nil)
}

// UnsetProtectionRunStartTimeUsecs ensures that no value is present for ProtectionRunStartTimeUsecs, not even an explicit nil
func (o *ObjectSnapshotsInfo) UnsetProtectionRunStartTimeUsecs() {
	o.ProtectionRunStartTimeUsecs.Unset()
}

// GetProtectionRunEndTimeUsecs returns the ProtectionRunEndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSnapshotsInfo) GetProtectionRunEndTimeUsecs() int64 {
	if o == nil || o.ProtectionRunEndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ProtectionRunEndTimeUsecs.Get()
}

// GetProtectionRunEndTimeUsecsOk returns a tuple with the ProtectionRunEndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSnapshotsInfo) GetProtectionRunEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionRunEndTimeUsecs.Get(), o.ProtectionRunEndTimeUsecs.IsSet()
}

// HasProtectionRunEndTimeUsecs returns a boolean if a field has been set.
func (o *ObjectSnapshotsInfo) HasProtectionRunEndTimeUsecs() bool {
	if o != nil && o.ProtectionRunEndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetProtectionRunEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the ProtectionRunEndTimeUsecs field.
func (o *ObjectSnapshotsInfo) SetProtectionRunEndTimeUsecs(v int64) {
	o.ProtectionRunEndTimeUsecs.Set(&v)
}
// SetProtectionRunEndTimeUsecsNil sets the value for ProtectionRunEndTimeUsecs to be an explicit nil
func (o *ObjectSnapshotsInfo) SetProtectionRunEndTimeUsecsNil() {
	o.ProtectionRunEndTimeUsecs.Set(nil)
}

// UnsetProtectionRunEndTimeUsecs ensures that no value is present for ProtectionRunEndTimeUsecs, not even an explicit nil
func (o *ObjectSnapshotsInfo) UnsetProtectionRunEndTimeUsecs() {
	o.ProtectionRunEndTimeUsecs.Unset()
}

func (o ObjectSnapshotsInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LocalSnapshotInfo.IsSet() {
		toSerialize["localSnapshotInfo"] = o.LocalSnapshotInfo.Get()
	}
	if o.ArchivalSnapshotsInfo != nil {
		toSerialize["archivalSnapshotsInfo"] = o.ArchivalSnapshotsInfo
	}
	if o.IndexingStatus.IsSet() {
		toSerialize["indexingStatus"] = o.IndexingStatus.Get()
	}
	if o.ProtectionGroupId.IsSet() {
		toSerialize["protectionGroupId"] = o.ProtectionGroupId.Get()
	}
	if o.ProtectionGroupName.IsSet() {
		toSerialize["protectionGroupName"] = o.ProtectionGroupName.Get()
	}
	if o.RunInstanceId.IsSet() {
		toSerialize["runInstanceId"] = o.RunInstanceId.Get()
	}
	if o.SourceGroupId.IsSet() {
		toSerialize["sourceGroupId"] = o.SourceGroupId.Get()
	}
	if o.StorageDomainId.IsSet() {
		toSerialize["storageDomainId"] = o.StorageDomainId.Get()
	}
	if o.StorageDomainName.IsSet() {
		toSerialize["storageDomainName"] = o.StorageDomainName.Get()
	}
	if o.ProtectionRunId.IsSet() {
		toSerialize["protectionRunId"] = o.ProtectionRunId.Get()
	}
	if o.RunType.IsSet() {
		toSerialize["runType"] = o.RunType.Get()
	}
	if o.ProtectionRunStartTimeUsecs.IsSet() {
		toSerialize["protectionRunStartTimeUsecs"] = o.ProtectionRunStartTimeUsecs.Get()
	}
	if o.ProtectionRunEndTimeUsecs.IsSet() {
		toSerialize["protectionRunEndTimeUsecs"] = o.ProtectionRunEndTimeUsecs.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableObjectSnapshotsInfo struct {
	value *ObjectSnapshotsInfo
	isSet bool
}

func (v NullableObjectSnapshotsInfo) Get() *ObjectSnapshotsInfo {
	return v.value
}

func (v *NullableObjectSnapshotsInfo) Set(val *ObjectSnapshotsInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectSnapshotsInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectSnapshotsInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectSnapshotsInfo(val *ObjectSnapshotsInfo) *NullableObjectSnapshotsInfo {
	return &NullableObjectSnapshotsInfo{value: val, isSet: true}
}

func (v NullableObjectSnapshotsInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectSnapshotsInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


