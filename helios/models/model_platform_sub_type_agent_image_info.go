/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// PlatformSubTypeAgentImageInfo Specifies the agent information of platform sub type.
type PlatformSubTypeAgentImageInfo struct {
	// Specifies the package type of the agent.
	PackageType NullableString `json:"packageType,omitempty"`
	// Specifies the URL for agent downlaod.
	DownloadURL NullableString `json:"downloadURL,omitempty"`
}

// NewPlatformSubTypeAgentImageInfo instantiates a new PlatformSubTypeAgentImageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlatformSubTypeAgentImageInfo() *PlatformSubTypeAgentImageInfo {
	this := PlatformSubTypeAgentImageInfo{}
	return &this
}

// NewPlatformSubTypeAgentImageInfoWithDefaults instantiates a new PlatformSubTypeAgentImageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlatformSubTypeAgentImageInfoWithDefaults() *PlatformSubTypeAgentImageInfo {
	this := PlatformSubTypeAgentImageInfo{}
	return &this
}

// GetPackageType returns the PackageType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PlatformSubTypeAgentImageInfo) GetPackageType() string {
	if o == nil || o.PackageType.Get() == nil {
		var ret string
		return ret
	}
	return *o.PackageType.Get()
}

// GetPackageTypeOk returns a tuple with the PackageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PlatformSubTypeAgentImageInfo) GetPackageTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PackageType.Get(), o.PackageType.IsSet()
}

// HasPackageType returns a boolean if a field has been set.
func (o *PlatformSubTypeAgentImageInfo) HasPackageType() bool {
	if o != nil && o.PackageType.IsSet() {
		return true
	}

	return false
}

// SetPackageType gets a reference to the given NullableString and assigns it to the PackageType field.
func (o *PlatformSubTypeAgentImageInfo) SetPackageType(v string) {
	o.PackageType.Set(&v)
}
// SetPackageTypeNil sets the value for PackageType to be an explicit nil
func (o *PlatformSubTypeAgentImageInfo) SetPackageTypeNil() {
	o.PackageType.Set(nil)
}

// UnsetPackageType ensures that no value is present for PackageType, not even an explicit nil
func (o *PlatformSubTypeAgentImageInfo) UnsetPackageType() {
	o.PackageType.Unset()
}

// GetDownloadURL returns the DownloadURL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PlatformSubTypeAgentImageInfo) GetDownloadURL() string {
	if o == nil || o.DownloadURL.Get() == nil {
		var ret string
		return ret
	}
	return *o.DownloadURL.Get()
}

// GetDownloadURLOk returns a tuple with the DownloadURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PlatformSubTypeAgentImageInfo) GetDownloadURLOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DownloadURL.Get(), o.DownloadURL.IsSet()
}

// HasDownloadURL returns a boolean if a field has been set.
func (o *PlatformSubTypeAgentImageInfo) HasDownloadURL() bool {
	if o != nil && o.DownloadURL.IsSet() {
		return true
	}

	return false
}

// SetDownloadURL gets a reference to the given NullableString and assigns it to the DownloadURL field.
func (o *PlatformSubTypeAgentImageInfo) SetDownloadURL(v string) {
	o.DownloadURL.Set(&v)
}
// SetDownloadURLNil sets the value for DownloadURL to be an explicit nil
func (o *PlatformSubTypeAgentImageInfo) SetDownloadURLNil() {
	o.DownloadURL.Set(nil)
}

// UnsetDownloadURL ensures that no value is present for DownloadURL, not even an explicit nil
func (o *PlatformSubTypeAgentImageInfo) UnsetDownloadURL() {
	o.DownloadURL.Unset()
}

func (o PlatformSubTypeAgentImageInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PackageType.IsSet() {
		toSerialize["packageType"] = o.PackageType.Get()
	}
	if o.DownloadURL.IsSet() {
		toSerialize["downloadURL"] = o.DownloadURL.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePlatformSubTypeAgentImageInfo struct {
	value *PlatformSubTypeAgentImageInfo
	isSet bool
}

func (v NullablePlatformSubTypeAgentImageInfo) Get() *PlatformSubTypeAgentImageInfo {
	return v.value
}

func (v *NullablePlatformSubTypeAgentImageInfo) Set(val *PlatformSubTypeAgentImageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePlatformSubTypeAgentImageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePlatformSubTypeAgentImageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlatformSubTypeAgentImageInfo(val *PlatformSubTypeAgentImageInfo) *NullablePlatformSubTypeAgentImageInfo {
	return &NullablePlatformSubTypeAgentImageInfo{value: val, isSet: true}
}

func (v NullablePlatformSubTypeAgentImageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlatformSubTypeAgentImageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


