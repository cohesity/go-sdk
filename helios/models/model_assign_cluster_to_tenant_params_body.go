/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// AssignClusterToTenantParamsBody Params to assign a cluster or region to a tenant
type AssignClusterToTenantParamsBody struct {
	// Specifies the list of cluster identifiers. The format is clusterId:clusterIncarnationId.
	ClusterIdentifier NullableString `json:"clusterIdentifier"`
	Network TenantNetwork `json:"network"`
}

// NewAssignClusterToTenantParamsBody instantiates a new AssignClusterToTenantParamsBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssignClusterToTenantParamsBody(clusterIdentifier NullableString, network TenantNetwork) *AssignClusterToTenantParamsBody {
	this := AssignClusterToTenantParamsBody{}
	this.ClusterIdentifier = clusterIdentifier
	this.Network = network
	return &this
}

// NewAssignClusterToTenantParamsBodyWithDefaults instantiates a new AssignClusterToTenantParamsBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssignClusterToTenantParamsBodyWithDefaults() *AssignClusterToTenantParamsBody {
	this := AssignClusterToTenantParamsBody{}
	return &this
}

// GetClusterIdentifier returns the ClusterIdentifier field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AssignClusterToTenantParamsBody) GetClusterIdentifier() string {
	if o == nil || o.ClusterIdentifier.Get() == nil {
		var ret string
		return ret
	}

	return *o.ClusterIdentifier.Get()
}

// GetClusterIdentifierOk returns a tuple with the ClusterIdentifier field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssignClusterToTenantParamsBody) GetClusterIdentifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterIdentifier.Get(), o.ClusterIdentifier.IsSet()
}

// SetClusterIdentifier sets field value
func (o *AssignClusterToTenantParamsBody) SetClusterIdentifier(v string) {
	o.ClusterIdentifier.Set(&v)
}

// GetNetwork returns the Network field value
func (o *AssignClusterToTenantParamsBody) GetNetwork() TenantNetwork {
	if o == nil {
		var ret TenantNetwork
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *AssignClusterToTenantParamsBody) GetNetworkOk() (*TenantNetwork, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *AssignClusterToTenantParamsBody) SetNetwork(v TenantNetwork) {
	o.Network = v
}

func (o AssignClusterToTenantParamsBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["clusterIdentifier"] = o.ClusterIdentifier.Get()
	}
	if true {
		toSerialize["network"] = o.Network
	}
	return json.Marshal(toSerialize)
}

type NullableAssignClusterToTenantParamsBody struct {
	value *AssignClusterToTenantParamsBody
	isSet bool
}

func (v NullableAssignClusterToTenantParamsBody) Get() *AssignClusterToTenantParamsBody {
	return v.value
}

func (v *NullableAssignClusterToTenantParamsBody) Set(val *AssignClusterToTenantParamsBody) {
	v.value = val
	v.isSet = true
}

func (v NullableAssignClusterToTenantParamsBody) IsSet() bool {
	return v.isSet
}

func (v *NullableAssignClusterToTenantParamsBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssignClusterToTenantParamsBody(val *AssignClusterToTenantParamsBody) *NullableAssignClusterToTenantParamsBody {
	return &NullableAssignClusterToTenantParamsBody{value: val, isSet: true}
}

func (v NullableAssignClusterToTenantParamsBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssignClusterToTenantParamsBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


