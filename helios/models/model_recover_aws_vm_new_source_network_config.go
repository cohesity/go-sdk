/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// RecoverAwsVmNewSourceNetworkConfig Specifies the network config parameters to be applied for AWS VMs if recovering to new Source.
type RecoverAwsVmNewSourceNetworkConfig struct {
	// Specifies the Virtual Private Cloud to choose for the instance type.
	Vpc NullableRecoveryObjectIdentifier `json:"vpc"`
	// Specifies the subnet within above VPC.
	Subnet NullableRecoveryObjectIdentifier `json:"subnet"`
	// Specifies the network security groups within above VPC.
	SecurityGroups []RecoveryObjectIdentifier `json:"securityGroups"`
}

// NewRecoverAwsVmNewSourceNetworkConfig instantiates a new RecoverAwsVmNewSourceNetworkConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverAwsVmNewSourceNetworkConfig(vpc NullableRecoveryObjectIdentifier, subnet NullableRecoveryObjectIdentifier, securityGroups []RecoveryObjectIdentifier) *RecoverAwsVmNewSourceNetworkConfig {
	this := RecoverAwsVmNewSourceNetworkConfig{}
	this.Vpc = vpc
	this.Subnet = subnet
	this.SecurityGroups = securityGroups
	return &this
}

// NewRecoverAwsVmNewSourceNetworkConfigWithDefaults instantiates a new RecoverAwsVmNewSourceNetworkConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverAwsVmNewSourceNetworkConfigWithDefaults() *RecoverAwsVmNewSourceNetworkConfig {
	this := RecoverAwsVmNewSourceNetworkConfig{}
	return &this
}

// GetVpc returns the Vpc field value
// If the value is explicit nil, the zero value for RecoveryObjectIdentifier will be returned
func (o *RecoverAwsVmNewSourceNetworkConfig) GetVpc() RecoveryObjectIdentifier {
	if o == nil || o.Vpc.Get() == nil {
		var ret RecoveryObjectIdentifier
		return ret
	}

	return *o.Vpc.Get()
}

// GetVpcOk returns a tuple with the Vpc field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAwsVmNewSourceNetworkConfig) GetVpcOk() (*RecoveryObjectIdentifier, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Vpc.Get(), o.Vpc.IsSet()
}

// SetVpc sets field value
func (o *RecoverAwsVmNewSourceNetworkConfig) SetVpc(v RecoveryObjectIdentifier) {
	o.Vpc.Set(&v)
}

// GetSubnet returns the Subnet field value
// If the value is explicit nil, the zero value for RecoveryObjectIdentifier will be returned
func (o *RecoverAwsVmNewSourceNetworkConfig) GetSubnet() RecoveryObjectIdentifier {
	if o == nil || o.Subnet.Get() == nil {
		var ret RecoveryObjectIdentifier
		return ret
	}

	return *o.Subnet.Get()
}

// GetSubnetOk returns a tuple with the Subnet field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAwsVmNewSourceNetworkConfig) GetSubnetOk() (*RecoveryObjectIdentifier, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Subnet.Get(), o.Subnet.IsSet()
}

// SetSubnet sets field value
func (o *RecoverAwsVmNewSourceNetworkConfig) SetSubnet(v RecoveryObjectIdentifier) {
	o.Subnet.Set(&v)
}

// GetSecurityGroups returns the SecurityGroups field value
// If the value is explicit nil, the zero value for []RecoveryObjectIdentifier will be returned
func (o *RecoverAwsVmNewSourceNetworkConfig) GetSecurityGroups() []RecoveryObjectIdentifier {
	if o == nil {
		var ret []RecoveryObjectIdentifier
		return ret
	}

	return o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAwsVmNewSourceNetworkConfig) GetSecurityGroupsOk() (*[]RecoveryObjectIdentifier, bool) {
	if o == nil || o.SecurityGroups == nil {
		return nil, false
	}
	return &o.SecurityGroups, true
}

// SetSecurityGroups sets field value
func (o *RecoverAwsVmNewSourceNetworkConfig) SetSecurityGroups(v []RecoveryObjectIdentifier) {
	o.SecurityGroups = v
}

func (o RecoverAwsVmNewSourceNetworkConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["vpc"] = o.Vpc.Get()
	}
	if true {
		toSerialize["subnet"] = o.Subnet.Get()
	}
	if o.SecurityGroups != nil {
		toSerialize["securityGroups"] = o.SecurityGroups
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverAwsVmNewSourceNetworkConfig struct {
	value *RecoverAwsVmNewSourceNetworkConfig
	isSet bool
}

func (v NullableRecoverAwsVmNewSourceNetworkConfig) Get() *RecoverAwsVmNewSourceNetworkConfig {
	return v.value
}

func (v *NullableRecoverAwsVmNewSourceNetworkConfig) Set(val *RecoverAwsVmNewSourceNetworkConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverAwsVmNewSourceNetworkConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverAwsVmNewSourceNetworkConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverAwsVmNewSourceNetworkConfig(val *RecoverAwsVmNewSourceNetworkConfig) *NullableRecoverAwsVmNewSourceNetworkConfig {
	return &NullableRecoverAwsVmNewSourceNetworkConfig{value: val, isSet: true}
}

func (v NullableRecoverAwsVmNewSourceNetworkConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverAwsVmNewSourceNetworkConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


