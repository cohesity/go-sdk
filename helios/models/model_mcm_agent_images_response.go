/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// McmAgentImagesResponse Specifies the agent image information on Helios.
type McmAgentImagesResponse struct {
	// Specifies a list of agents from Helios.
	Agents []McmAgentImage `json:"agents,omitempty"`
}

// NewMcmAgentImagesResponse instantiates a new McmAgentImagesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcmAgentImagesResponse() *McmAgentImagesResponse {
	this := McmAgentImagesResponse{}
	return &this
}

// NewMcmAgentImagesResponseWithDefaults instantiates a new McmAgentImagesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcmAgentImagesResponseWithDefaults() *McmAgentImagesResponse {
	this := McmAgentImagesResponse{}
	return &this
}

// GetAgents returns the Agents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmAgentImagesResponse) GetAgents() []McmAgentImage {
	if o == nil  {
		var ret []McmAgentImage
		return ret
	}
	return o.Agents
}

// GetAgentsOk returns a tuple with the Agents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmAgentImagesResponse) GetAgentsOk() (*[]McmAgentImage, bool) {
	if o == nil || o.Agents == nil {
		return nil, false
	}
	return &o.Agents, true
}

// HasAgents returns a boolean if a field has been set.
func (o *McmAgentImagesResponse) HasAgents() bool {
	if o != nil && o.Agents != nil {
		return true
	}

	return false
}

// SetAgents gets a reference to the given []McmAgentImage and assigns it to the Agents field.
func (o *McmAgentImagesResponse) SetAgents(v []McmAgentImage) {
	o.Agents = v
}

func (o McmAgentImagesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Agents != nil {
		toSerialize["agents"] = o.Agents
	}
	return json.Marshal(toSerialize)
}

type NullableMcmAgentImagesResponse struct {
	value *McmAgentImagesResponse
	isSet bool
}

func (v NullableMcmAgentImagesResponse) Get() *McmAgentImagesResponse {
	return v.value
}

func (v *NullableMcmAgentImagesResponse) Set(val *McmAgentImagesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMcmAgentImagesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMcmAgentImagesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcmAgentImagesResponse(val *McmAgentImagesResponse) *NullableMcmAgentImagesResponse {
	return &NullableMcmAgentImagesResponse{value: val, isSet: true}
}

func (v NullableMcmAgentImagesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcmAgentImagesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


