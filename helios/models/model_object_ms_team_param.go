/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ObjectMsTeamParam Specifies recovery parameters associated with a Microsoft 365 Team.
type ObjectMsTeamParam struct {
	// Specifies the Microsoft 365 Team recover object info.
	RecoverObject CommonRecoverObjectSnapshotParams `json:"recoverObject"`
	// Specifies parameters to recover a Microsoft 365 Team.
	MsTeamParam MsTeamParam `json:"msTeamParam"`
}

// NewObjectMsTeamParam instantiates a new ObjectMsTeamParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectMsTeamParam(recoverObject CommonRecoverObjectSnapshotParams, msTeamParam MsTeamParam) *ObjectMsTeamParam {
	this := ObjectMsTeamParam{}
	this.RecoverObject = recoverObject
	this.MsTeamParam = msTeamParam
	return &this
}

// NewObjectMsTeamParamWithDefaults instantiates a new ObjectMsTeamParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectMsTeamParamWithDefaults() *ObjectMsTeamParam {
	this := ObjectMsTeamParam{}
	return &this
}

// GetRecoverObject returns the RecoverObject field value
func (o *ObjectMsTeamParam) GetRecoverObject() CommonRecoverObjectSnapshotParams {
	if o == nil {
		var ret CommonRecoverObjectSnapshotParams
		return ret
	}

	return o.RecoverObject
}

// GetRecoverObjectOk returns a tuple with the RecoverObject field value
// and a boolean to check if the value has been set.
func (o *ObjectMsTeamParam) GetRecoverObjectOk() (*CommonRecoverObjectSnapshotParams, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RecoverObject, true
}

// SetRecoverObject sets field value
func (o *ObjectMsTeamParam) SetRecoverObject(v CommonRecoverObjectSnapshotParams) {
	o.RecoverObject = v
}

// GetMsTeamParam returns the MsTeamParam field value
func (o *ObjectMsTeamParam) GetMsTeamParam() MsTeamParam {
	if o == nil {
		var ret MsTeamParam
		return ret
	}

	return o.MsTeamParam
}

// GetMsTeamParamOk returns a tuple with the MsTeamParam field value
// and a boolean to check if the value has been set.
func (o *ObjectMsTeamParam) GetMsTeamParamOk() (*MsTeamParam, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MsTeamParam, true
}

// SetMsTeamParam sets field value
func (o *ObjectMsTeamParam) SetMsTeamParam(v MsTeamParam) {
	o.MsTeamParam = v
}

func (o ObjectMsTeamParam) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["recoverObject"] = o.RecoverObject
	}
	if true {
		toSerialize["msTeamParam"] = o.MsTeamParam
	}
	return json.Marshal(toSerialize)
}

type NullableObjectMsTeamParam struct {
	value *ObjectMsTeamParam
	isSet bool
}

func (v NullableObjectMsTeamParam) Get() *ObjectMsTeamParam {
	return v.value
}

func (v *NullableObjectMsTeamParam) Set(val *ObjectMsTeamParam) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectMsTeamParam) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectMsTeamParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectMsTeamParam(val *ObjectMsTeamParam) *NullableObjectMsTeamParam {
	return &NullableObjectMsTeamParam{value: val, isSet: true}
}

func (v NullableObjectMsTeamParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectMsTeamParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


