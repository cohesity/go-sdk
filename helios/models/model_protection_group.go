/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ProtectionGroup Protection Group  response.
type ProtectionGroup struct {
	// Specifies the ID of the Protection Group.
	Id NullableString `json:"id,omitempty"`
	// Specifies the name of the Protection Group.
	Name NullableString `json:"name,omitempty"`
	// Specifies the unique id of the Protection Policy associated with the Protection Group. The Policy provides retry settings Protection Schedules, Priority, SLA, etc.
	PolicyId NullableString `json:"policyId,omitempty"`
	// Specifies the priority of the Protection Group.
	Priority NullableString `json:"priority,omitempty"`
	// Specifies the Storage Domain (View Box) ID where this Protection Group writes data.
	StorageDomainId NullableInt64 `json:"storageDomainId,omitempty"`
	// Specifies a description of the Protection Group.
	Description NullableString `json:"description,omitempty"`
	StartTime *TimeOfDay `json:"startTime,omitempty"`
	// Specifies the end time in micro seconds for this Protection Group. If this is not specified, the Protection Group won't be ended.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	AlertPolicy *ProtectionGroupAlertingPolicy `json:"alertPolicy,omitempty"`
	// Specifies the SLA parameters for this Protection Group.
	Sla []SlaRule `json:"sla,omitempty"`
	// Specifies whether the Protection Group will be written to HDD or SSD.
	QosPolicy NullableString `json:"qosPolicy,omitempty"`
	// Specifies whether currently executing jobs should abort if a blackout period specified by a policy starts. Available only if the selected policy has at least one blackout period. Default value is false.
	AbortInBlackouts NullableBool `json:"abortInBlackouts,omitempty"`
	// Specifies whether currently executing jobs should be paused if a blackout period specified by a policy starts. Available only if the selected policy has at least one blackout period. Default value is false. This field should not be set to true if 'abortInBlackouts' is sent as true.
	PauseInBlackouts NullableBool `json:"pauseInBlackouts,omitempty"`
	// Specifies if the Protection Group is active or not.
	IsActive NullableBool `json:"isActive,omitempty"`
	// Specifies if the Protection Group has been deleted.
	IsDeleted NullableBool `json:"isDeleted,omitempty"`
	// Specifies if the the Protection Group is paused. New runs are not scheduled for the paused Protection Groups. Active run if any is not impacted.
	IsPaused NullableBool `json:"isPaused,omitempty"`
	// Specifies the environment of the Protection Group.
	Environment NullableString `json:"environment,omitempty"`
	LastRun *ProtectionGroupRun `json:"lastRun,omitempty"`
	// Specifies the list of tenants that have permissions for this protection group.
	Permissions []Tenant `json:"permissions,omitempty"`
	// Specifies if the the Protection Group is using a protect once type of policy. This field is helpful to identify run happen for this group.
	IsProtectOnce NullableBool `json:"isProtectOnce,omitempty"`
	// Specifies the Information about missing entities.
	MissingEntities []MissingEntityParams `json:"missingEntities,omitempty"`
	// Specifies the number of protected objects of the Protection Group.
	NumProtectedObjects NullableInt64 `json:"numProtectedObjects,omitempty"`
	VmwareParams *VmwareProtectionGroupParams `json:"vmwareParams,omitempty"`
	AcropolisParams *AcropolisProtectionGroupParams `json:"acropolisParams,omitempty"`
	KubernetesParams *KubernetesProtectionGroupParams `json:"kubernetesParams,omitempty"`
	MssqlParams *MSSQLProtectionGroupParams `json:"mssqlParams,omitempty"`
	OracleParams *OracleProtectionGroupParams `json:"oracleParams,omitempty"`
	ViewParams NullableViewProtectionGroupParams `json:"viewParams,omitempty"`
	PureParams NullablePureProtectionGroupParams `json:"pureParams,omitempty"`
	NimbleParams NullableNimbleProtectionGroupParams `json:"nimbleParams,omitempty"`
	HypervParams *HyperVProtectionGroupParams `json:"hypervParams,omitempty"`
	AwsParams *AwsProtectionGroupParams `json:"awsParams,omitempty"`
	AzureParams *AzureProtectionGroupParams `json:"azureParams,omitempty"`
	GcpParams *GcpProtectionGroupParams `json:"gcpParams,omitempty"`
	KvmParams NullableKvmProtectionGroupParams `json:"kvmParams,omitempty"`
	PhysicalParams *PhysicalProtectionGroupParams `json:"physicalParams,omitempty"`
	AdParams *ADProtectionGroupParams `json:"adParams,omitempty"`
	Office365Params *Office365ProtectionGroupParams `json:"office365Params,omitempty"`
	NetappParams NullableNetappProtectionGroupParams `json:"netappParams,omitempty"`
	GenericNasParams *GenericNasProtectionGroupParams `json:"genericNasParams,omitempty"`
	IsilonParams NullableIsilonProtectionGroupParams `json:"isilonParams,omitempty"`
	FlashbladeParams NullableFlashbladeProtectionGroupParams `json:"flashbladeParams,omitempty"`
	GpfsParams NullableGpfsProtectionGroupParams `json:"gpfsParams,omitempty"`
	ElastifileParams NullableElastifileProtectionGroupParams `json:"elastifileParams,omitempty"`
	RemoteAdapterParams NullableRemoteAdapterProtectionGroupParams `json:"remoteAdapterParams,omitempty"`
	ExchangeParams *ExchangeProtectionGroupParams `json:"exchangeParams,omitempty"`
	CassandraParams *CassandraProtectionGroupParams `json:"cassandraParams,omitempty"`
	CouchbaseParams *NoSqlProtectionGroupParams `json:"couchbaseParams,omitempty"`
	MongodbParams *MongoDBProtectionGroupParams `json:"mongodbParams,omitempty"`
	HiveParams *NoSqlProtectionGroupParams `json:"hiveParams,omitempty"`
	HdfsParams *HdfsProtectionGroupParams `json:"hdfsParams,omitempty"`
	HbaseParams *NoSqlProtectionGroupParams `json:"hbaseParams,omitempty"`
	UdaParams *UdaProtectionGroupParams `json:"udaParams,omitempty"`
}

// NewProtectionGroup instantiates a new ProtectionGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionGroup() *ProtectionGroup {
	this := ProtectionGroup{}
	return &this
}

// NewProtectionGroupWithDefaults instantiates a new ProtectionGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionGroupWithDefaults() *ProtectionGroup {
	this := ProtectionGroup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ProtectionGroup) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ProtectionGroup) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ProtectionGroup) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ProtectionGroup) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ProtectionGroup) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ProtectionGroup) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ProtectionGroup) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ProtectionGroup) UnsetName() {
	o.Name.Unset()
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetPolicyId() string {
	if o == nil || o.PolicyId.Get() == nil {
		var ret string
		return ret
	}
	return *o.PolicyId.Get()
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetPolicyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PolicyId.Get(), o.PolicyId.IsSet()
}

// HasPolicyId returns a boolean if a field has been set.
func (o *ProtectionGroup) HasPolicyId() bool {
	if o != nil && o.PolicyId.IsSet() {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given NullableString and assigns it to the PolicyId field.
func (o *ProtectionGroup) SetPolicyId(v string) {
	o.PolicyId.Set(&v)
}
// SetPolicyIdNil sets the value for PolicyId to be an explicit nil
func (o *ProtectionGroup) SetPolicyIdNil() {
	o.PolicyId.Set(nil)
}

// UnsetPolicyId ensures that no value is present for PolicyId, not even an explicit nil
func (o *ProtectionGroup) UnsetPolicyId() {
	o.PolicyId.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetPriority() string {
	if o == nil || o.Priority.Get() == nil {
		var ret string
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetPriorityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *ProtectionGroup) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableString and assigns it to the Priority field.
func (o *ProtectionGroup) SetPriority(v string) {
	o.Priority.Set(&v)
}
// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *ProtectionGroup) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *ProtectionGroup) UnsetPriority() {
	o.Priority.Unset()
}

// GetStorageDomainId returns the StorageDomainId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetStorageDomainId() int64 {
	if o == nil || o.StorageDomainId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StorageDomainId.Get()
}

// GetStorageDomainIdOk returns a tuple with the StorageDomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetStorageDomainIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StorageDomainId.Get(), o.StorageDomainId.IsSet()
}

// HasStorageDomainId returns a boolean if a field has been set.
func (o *ProtectionGroup) HasStorageDomainId() bool {
	if o != nil && o.StorageDomainId.IsSet() {
		return true
	}

	return false
}

// SetStorageDomainId gets a reference to the given NullableInt64 and assigns it to the StorageDomainId field.
func (o *ProtectionGroup) SetStorageDomainId(v int64) {
	o.StorageDomainId.Set(&v)
}
// SetStorageDomainIdNil sets the value for StorageDomainId to be an explicit nil
func (o *ProtectionGroup) SetStorageDomainIdNil() {
	o.StorageDomainId.Set(nil)
}

// UnsetStorageDomainId ensures that no value is present for StorageDomainId, not even an explicit nil
func (o *ProtectionGroup) UnsetStorageDomainId() {
	o.StorageDomainId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ProtectionGroup) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ProtectionGroup) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ProtectionGroup) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ProtectionGroup) UnsetDescription() {
	o.Description.Unset()
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *ProtectionGroup) GetStartTime() TimeOfDay {
	if o == nil || o.StartTime == nil {
		var ret TimeOfDay
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetStartTimeOk() (*TimeOfDay, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *ProtectionGroup) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given TimeOfDay and assigns it to the StartTime field.
func (o *ProtectionGroup) SetStartTime(v TimeOfDay) {
	o.StartTime = &v
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetEndTimeUsecs() int64 {
	if o == nil || o.EndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionGroup) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *ProtectionGroup) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *ProtectionGroup) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *ProtectionGroup) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetAlertPolicy returns the AlertPolicy field value if set, zero value otherwise.
func (o *ProtectionGroup) GetAlertPolicy() ProtectionGroupAlertingPolicy {
	if o == nil || o.AlertPolicy == nil {
		var ret ProtectionGroupAlertingPolicy
		return ret
	}
	return *o.AlertPolicy
}

// GetAlertPolicyOk returns a tuple with the AlertPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetAlertPolicyOk() (*ProtectionGroupAlertingPolicy, bool) {
	if o == nil || o.AlertPolicy == nil {
		return nil, false
	}
	return o.AlertPolicy, true
}

// HasAlertPolicy returns a boolean if a field has been set.
func (o *ProtectionGroup) HasAlertPolicy() bool {
	if o != nil && o.AlertPolicy != nil {
		return true
	}

	return false
}

// SetAlertPolicy gets a reference to the given ProtectionGroupAlertingPolicy and assigns it to the AlertPolicy field.
func (o *ProtectionGroup) SetAlertPolicy(v ProtectionGroupAlertingPolicy) {
	o.AlertPolicy = &v
}

// GetSla returns the Sla field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetSla() []SlaRule {
	if o == nil  {
		var ret []SlaRule
		return ret
	}
	return o.Sla
}

// GetSlaOk returns a tuple with the Sla field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetSlaOk() (*[]SlaRule, bool) {
	if o == nil || o.Sla == nil {
		return nil, false
	}
	return &o.Sla, true
}

// HasSla returns a boolean if a field has been set.
func (o *ProtectionGroup) HasSla() bool {
	if o != nil && o.Sla != nil {
		return true
	}

	return false
}

// SetSla gets a reference to the given []SlaRule and assigns it to the Sla field.
func (o *ProtectionGroup) SetSla(v []SlaRule) {
	o.Sla = v
}

// GetQosPolicy returns the QosPolicy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetQosPolicy() string {
	if o == nil || o.QosPolicy.Get() == nil {
		var ret string
		return ret
	}
	return *o.QosPolicy.Get()
}

// GetQosPolicyOk returns a tuple with the QosPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetQosPolicyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.QosPolicy.Get(), o.QosPolicy.IsSet()
}

// HasQosPolicy returns a boolean if a field has been set.
func (o *ProtectionGroup) HasQosPolicy() bool {
	if o != nil && o.QosPolicy.IsSet() {
		return true
	}

	return false
}

// SetQosPolicy gets a reference to the given NullableString and assigns it to the QosPolicy field.
func (o *ProtectionGroup) SetQosPolicy(v string) {
	o.QosPolicy.Set(&v)
}
// SetQosPolicyNil sets the value for QosPolicy to be an explicit nil
func (o *ProtectionGroup) SetQosPolicyNil() {
	o.QosPolicy.Set(nil)
}

// UnsetQosPolicy ensures that no value is present for QosPolicy, not even an explicit nil
func (o *ProtectionGroup) UnsetQosPolicy() {
	o.QosPolicy.Unset()
}

// GetAbortInBlackouts returns the AbortInBlackouts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetAbortInBlackouts() bool {
	if o == nil || o.AbortInBlackouts.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AbortInBlackouts.Get()
}

// GetAbortInBlackoutsOk returns a tuple with the AbortInBlackouts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetAbortInBlackoutsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AbortInBlackouts.Get(), o.AbortInBlackouts.IsSet()
}

// HasAbortInBlackouts returns a boolean if a field has been set.
func (o *ProtectionGroup) HasAbortInBlackouts() bool {
	if o != nil && o.AbortInBlackouts.IsSet() {
		return true
	}

	return false
}

// SetAbortInBlackouts gets a reference to the given NullableBool and assigns it to the AbortInBlackouts field.
func (o *ProtectionGroup) SetAbortInBlackouts(v bool) {
	o.AbortInBlackouts.Set(&v)
}
// SetAbortInBlackoutsNil sets the value for AbortInBlackouts to be an explicit nil
func (o *ProtectionGroup) SetAbortInBlackoutsNil() {
	o.AbortInBlackouts.Set(nil)
}

// UnsetAbortInBlackouts ensures that no value is present for AbortInBlackouts, not even an explicit nil
func (o *ProtectionGroup) UnsetAbortInBlackouts() {
	o.AbortInBlackouts.Unset()
}

// GetPauseInBlackouts returns the PauseInBlackouts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetPauseInBlackouts() bool {
	if o == nil || o.PauseInBlackouts.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PauseInBlackouts.Get()
}

// GetPauseInBlackoutsOk returns a tuple with the PauseInBlackouts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetPauseInBlackoutsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PauseInBlackouts.Get(), o.PauseInBlackouts.IsSet()
}

// HasPauseInBlackouts returns a boolean if a field has been set.
func (o *ProtectionGroup) HasPauseInBlackouts() bool {
	if o != nil && o.PauseInBlackouts.IsSet() {
		return true
	}

	return false
}

// SetPauseInBlackouts gets a reference to the given NullableBool and assigns it to the PauseInBlackouts field.
func (o *ProtectionGroup) SetPauseInBlackouts(v bool) {
	o.PauseInBlackouts.Set(&v)
}
// SetPauseInBlackoutsNil sets the value for PauseInBlackouts to be an explicit nil
func (o *ProtectionGroup) SetPauseInBlackoutsNil() {
	o.PauseInBlackouts.Set(nil)
}

// UnsetPauseInBlackouts ensures that no value is present for PauseInBlackouts, not even an explicit nil
func (o *ProtectionGroup) UnsetPauseInBlackouts() {
	o.PauseInBlackouts.Unset()
}

// GetIsActive returns the IsActive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetIsActive() bool {
	if o == nil || o.IsActive.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsActive.Get()
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetIsActiveOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsActive.Get(), o.IsActive.IsSet()
}

// HasIsActive returns a boolean if a field has been set.
func (o *ProtectionGroup) HasIsActive() bool {
	if o != nil && o.IsActive.IsSet() {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given NullableBool and assigns it to the IsActive field.
func (o *ProtectionGroup) SetIsActive(v bool) {
	o.IsActive.Set(&v)
}
// SetIsActiveNil sets the value for IsActive to be an explicit nil
func (o *ProtectionGroup) SetIsActiveNil() {
	o.IsActive.Set(nil)
}

// UnsetIsActive ensures that no value is present for IsActive, not even an explicit nil
func (o *ProtectionGroup) UnsetIsActive() {
	o.IsActive.Unset()
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetIsDeleted() bool {
	if o == nil || o.IsDeleted.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsDeleted.Get()
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetIsDeletedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsDeleted.Get(), o.IsDeleted.IsSet()
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *ProtectionGroup) HasIsDeleted() bool {
	if o != nil && o.IsDeleted.IsSet() {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given NullableBool and assigns it to the IsDeleted field.
func (o *ProtectionGroup) SetIsDeleted(v bool) {
	o.IsDeleted.Set(&v)
}
// SetIsDeletedNil sets the value for IsDeleted to be an explicit nil
func (o *ProtectionGroup) SetIsDeletedNil() {
	o.IsDeleted.Set(nil)
}

// UnsetIsDeleted ensures that no value is present for IsDeleted, not even an explicit nil
func (o *ProtectionGroup) UnsetIsDeleted() {
	o.IsDeleted.Unset()
}

// GetIsPaused returns the IsPaused field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetIsPaused() bool {
	if o == nil || o.IsPaused.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsPaused.Get()
}

// GetIsPausedOk returns a tuple with the IsPaused field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetIsPausedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsPaused.Get(), o.IsPaused.IsSet()
}

// HasIsPaused returns a boolean if a field has been set.
func (o *ProtectionGroup) HasIsPaused() bool {
	if o != nil && o.IsPaused.IsSet() {
		return true
	}

	return false
}

// SetIsPaused gets a reference to the given NullableBool and assigns it to the IsPaused field.
func (o *ProtectionGroup) SetIsPaused(v bool) {
	o.IsPaused.Set(&v)
}
// SetIsPausedNil sets the value for IsPaused to be an explicit nil
func (o *ProtectionGroup) SetIsPausedNil() {
	o.IsPaused.Set(nil)
}

// UnsetIsPaused ensures that no value is present for IsPaused, not even an explicit nil
func (o *ProtectionGroup) UnsetIsPaused() {
	o.IsPaused.Unset()
}

// GetEnvironment returns the Environment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetEnvironment() string {
	if o == nil || o.Environment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// HasEnvironment returns a boolean if a field has been set.
func (o *ProtectionGroup) HasEnvironment() bool {
	if o != nil && o.Environment.IsSet() {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given NullableString and assigns it to the Environment field.
func (o *ProtectionGroup) SetEnvironment(v string) {
	o.Environment.Set(&v)
}
// SetEnvironmentNil sets the value for Environment to be an explicit nil
func (o *ProtectionGroup) SetEnvironmentNil() {
	o.Environment.Set(nil)
}

// UnsetEnvironment ensures that no value is present for Environment, not even an explicit nil
func (o *ProtectionGroup) UnsetEnvironment() {
	o.Environment.Unset()
}

// GetLastRun returns the LastRun field value if set, zero value otherwise.
func (o *ProtectionGroup) GetLastRun() ProtectionGroupRun {
	if o == nil || o.LastRun == nil {
		var ret ProtectionGroupRun
		return ret
	}
	return *o.LastRun
}

// GetLastRunOk returns a tuple with the LastRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetLastRunOk() (*ProtectionGroupRun, bool) {
	if o == nil || o.LastRun == nil {
		return nil, false
	}
	return o.LastRun, true
}

// HasLastRun returns a boolean if a field has been set.
func (o *ProtectionGroup) HasLastRun() bool {
	if o != nil && o.LastRun != nil {
		return true
	}

	return false
}

// SetLastRun gets a reference to the given ProtectionGroupRun and assigns it to the LastRun field.
func (o *ProtectionGroup) SetLastRun(v ProtectionGroupRun) {
	o.LastRun = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetPermissions() []Tenant {
	if o == nil  {
		var ret []Tenant
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetPermissionsOk() (*[]Tenant, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return &o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *ProtectionGroup) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []Tenant and assigns it to the Permissions field.
func (o *ProtectionGroup) SetPermissions(v []Tenant) {
	o.Permissions = v
}

// GetIsProtectOnce returns the IsProtectOnce field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetIsProtectOnce() bool {
	if o == nil || o.IsProtectOnce.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsProtectOnce.Get()
}

// GetIsProtectOnceOk returns a tuple with the IsProtectOnce field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetIsProtectOnceOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsProtectOnce.Get(), o.IsProtectOnce.IsSet()
}

// HasIsProtectOnce returns a boolean if a field has been set.
func (o *ProtectionGroup) HasIsProtectOnce() bool {
	if o != nil && o.IsProtectOnce.IsSet() {
		return true
	}

	return false
}

// SetIsProtectOnce gets a reference to the given NullableBool and assigns it to the IsProtectOnce field.
func (o *ProtectionGroup) SetIsProtectOnce(v bool) {
	o.IsProtectOnce.Set(&v)
}
// SetIsProtectOnceNil sets the value for IsProtectOnce to be an explicit nil
func (o *ProtectionGroup) SetIsProtectOnceNil() {
	o.IsProtectOnce.Set(nil)
}

// UnsetIsProtectOnce ensures that no value is present for IsProtectOnce, not even an explicit nil
func (o *ProtectionGroup) UnsetIsProtectOnce() {
	o.IsProtectOnce.Unset()
}

// GetMissingEntities returns the MissingEntities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetMissingEntities() []MissingEntityParams {
	if o == nil  {
		var ret []MissingEntityParams
		return ret
	}
	return o.MissingEntities
}

// GetMissingEntitiesOk returns a tuple with the MissingEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetMissingEntitiesOk() (*[]MissingEntityParams, bool) {
	if o == nil || o.MissingEntities == nil {
		return nil, false
	}
	return &o.MissingEntities, true
}

// HasMissingEntities returns a boolean if a field has been set.
func (o *ProtectionGroup) HasMissingEntities() bool {
	if o != nil && o.MissingEntities != nil {
		return true
	}

	return false
}

// SetMissingEntities gets a reference to the given []MissingEntityParams and assigns it to the MissingEntities field.
func (o *ProtectionGroup) SetMissingEntities(v []MissingEntityParams) {
	o.MissingEntities = v
}

// GetNumProtectedObjects returns the NumProtectedObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetNumProtectedObjects() int64 {
	if o == nil || o.NumProtectedObjects.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumProtectedObjects.Get()
}

// GetNumProtectedObjectsOk returns a tuple with the NumProtectedObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetNumProtectedObjectsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumProtectedObjects.Get(), o.NumProtectedObjects.IsSet()
}

// HasNumProtectedObjects returns a boolean if a field has been set.
func (o *ProtectionGroup) HasNumProtectedObjects() bool {
	if o != nil && o.NumProtectedObjects.IsSet() {
		return true
	}

	return false
}

// SetNumProtectedObjects gets a reference to the given NullableInt64 and assigns it to the NumProtectedObjects field.
func (o *ProtectionGroup) SetNumProtectedObjects(v int64) {
	o.NumProtectedObjects.Set(&v)
}
// SetNumProtectedObjectsNil sets the value for NumProtectedObjects to be an explicit nil
func (o *ProtectionGroup) SetNumProtectedObjectsNil() {
	o.NumProtectedObjects.Set(nil)
}

// UnsetNumProtectedObjects ensures that no value is present for NumProtectedObjects, not even an explicit nil
func (o *ProtectionGroup) UnsetNumProtectedObjects() {
	o.NumProtectedObjects.Unset()
}

// GetVmwareParams returns the VmwareParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetVmwareParams() VmwareProtectionGroupParams {
	if o == nil || o.VmwareParams == nil {
		var ret VmwareProtectionGroupParams
		return ret
	}
	return *o.VmwareParams
}

// GetVmwareParamsOk returns a tuple with the VmwareParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetVmwareParamsOk() (*VmwareProtectionGroupParams, bool) {
	if o == nil || o.VmwareParams == nil {
		return nil, false
	}
	return o.VmwareParams, true
}

// HasVmwareParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasVmwareParams() bool {
	if o != nil && o.VmwareParams != nil {
		return true
	}

	return false
}

// SetVmwareParams gets a reference to the given VmwareProtectionGroupParams and assigns it to the VmwareParams field.
func (o *ProtectionGroup) SetVmwareParams(v VmwareProtectionGroupParams) {
	o.VmwareParams = &v
}

// GetAcropolisParams returns the AcropolisParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetAcropolisParams() AcropolisProtectionGroupParams {
	if o == nil || o.AcropolisParams == nil {
		var ret AcropolisProtectionGroupParams
		return ret
	}
	return *o.AcropolisParams
}

// GetAcropolisParamsOk returns a tuple with the AcropolisParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetAcropolisParamsOk() (*AcropolisProtectionGroupParams, bool) {
	if o == nil || o.AcropolisParams == nil {
		return nil, false
	}
	return o.AcropolisParams, true
}

// HasAcropolisParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasAcropolisParams() bool {
	if o != nil && o.AcropolisParams != nil {
		return true
	}

	return false
}

// SetAcropolisParams gets a reference to the given AcropolisProtectionGroupParams and assigns it to the AcropolisParams field.
func (o *ProtectionGroup) SetAcropolisParams(v AcropolisProtectionGroupParams) {
	o.AcropolisParams = &v
}

// GetKubernetesParams returns the KubernetesParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetKubernetesParams() KubernetesProtectionGroupParams {
	if o == nil || o.KubernetesParams == nil {
		var ret KubernetesProtectionGroupParams
		return ret
	}
	return *o.KubernetesParams
}

// GetKubernetesParamsOk returns a tuple with the KubernetesParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetKubernetesParamsOk() (*KubernetesProtectionGroupParams, bool) {
	if o == nil || o.KubernetesParams == nil {
		return nil, false
	}
	return o.KubernetesParams, true
}

// HasKubernetesParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasKubernetesParams() bool {
	if o != nil && o.KubernetesParams != nil {
		return true
	}

	return false
}

// SetKubernetesParams gets a reference to the given KubernetesProtectionGroupParams and assigns it to the KubernetesParams field.
func (o *ProtectionGroup) SetKubernetesParams(v KubernetesProtectionGroupParams) {
	o.KubernetesParams = &v
}

// GetMssqlParams returns the MssqlParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetMssqlParams() MSSQLProtectionGroupParams {
	if o == nil || o.MssqlParams == nil {
		var ret MSSQLProtectionGroupParams
		return ret
	}
	return *o.MssqlParams
}

// GetMssqlParamsOk returns a tuple with the MssqlParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetMssqlParamsOk() (*MSSQLProtectionGroupParams, bool) {
	if o == nil || o.MssqlParams == nil {
		return nil, false
	}
	return o.MssqlParams, true
}

// HasMssqlParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasMssqlParams() bool {
	if o != nil && o.MssqlParams != nil {
		return true
	}

	return false
}

// SetMssqlParams gets a reference to the given MSSQLProtectionGroupParams and assigns it to the MssqlParams field.
func (o *ProtectionGroup) SetMssqlParams(v MSSQLProtectionGroupParams) {
	o.MssqlParams = &v
}

// GetOracleParams returns the OracleParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetOracleParams() OracleProtectionGroupParams {
	if o == nil || o.OracleParams == nil {
		var ret OracleProtectionGroupParams
		return ret
	}
	return *o.OracleParams
}

// GetOracleParamsOk returns a tuple with the OracleParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetOracleParamsOk() (*OracleProtectionGroupParams, bool) {
	if o == nil || o.OracleParams == nil {
		return nil, false
	}
	return o.OracleParams, true
}

// HasOracleParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasOracleParams() bool {
	if o != nil && o.OracleParams != nil {
		return true
	}

	return false
}

// SetOracleParams gets a reference to the given OracleProtectionGroupParams and assigns it to the OracleParams field.
func (o *ProtectionGroup) SetOracleParams(v OracleProtectionGroupParams) {
	o.OracleParams = &v
}

// GetViewParams returns the ViewParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetViewParams() ViewProtectionGroupParams {
	if o == nil || o.ViewParams.Get() == nil {
		var ret ViewProtectionGroupParams
		return ret
	}
	return *o.ViewParams.Get()
}

// GetViewParamsOk returns a tuple with the ViewParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetViewParamsOk() (*ViewProtectionGroupParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewParams.Get(), o.ViewParams.IsSet()
}

// HasViewParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasViewParams() bool {
	if o != nil && o.ViewParams.IsSet() {
		return true
	}

	return false
}

// SetViewParams gets a reference to the given NullableViewProtectionGroupParams and assigns it to the ViewParams field.
func (o *ProtectionGroup) SetViewParams(v ViewProtectionGroupParams) {
	o.ViewParams.Set(&v)
}
// SetViewParamsNil sets the value for ViewParams to be an explicit nil
func (o *ProtectionGroup) SetViewParamsNil() {
	o.ViewParams.Set(nil)
}

// UnsetViewParams ensures that no value is present for ViewParams, not even an explicit nil
func (o *ProtectionGroup) UnsetViewParams() {
	o.ViewParams.Unset()
}

// GetPureParams returns the PureParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetPureParams() PureProtectionGroupParams {
	if o == nil || o.PureParams.Get() == nil {
		var ret PureProtectionGroupParams
		return ret
	}
	return *o.PureParams.Get()
}

// GetPureParamsOk returns a tuple with the PureParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetPureParamsOk() (*PureProtectionGroupParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PureParams.Get(), o.PureParams.IsSet()
}

// HasPureParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasPureParams() bool {
	if o != nil && o.PureParams.IsSet() {
		return true
	}

	return false
}

// SetPureParams gets a reference to the given NullablePureProtectionGroupParams and assigns it to the PureParams field.
func (o *ProtectionGroup) SetPureParams(v PureProtectionGroupParams) {
	o.PureParams.Set(&v)
}
// SetPureParamsNil sets the value for PureParams to be an explicit nil
func (o *ProtectionGroup) SetPureParamsNil() {
	o.PureParams.Set(nil)
}

// UnsetPureParams ensures that no value is present for PureParams, not even an explicit nil
func (o *ProtectionGroup) UnsetPureParams() {
	o.PureParams.Unset()
}

// GetNimbleParams returns the NimbleParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetNimbleParams() NimbleProtectionGroupParams {
	if o == nil || o.NimbleParams.Get() == nil {
		var ret NimbleProtectionGroupParams
		return ret
	}
	return *o.NimbleParams.Get()
}

// GetNimbleParamsOk returns a tuple with the NimbleParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetNimbleParamsOk() (*NimbleProtectionGroupParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NimbleParams.Get(), o.NimbleParams.IsSet()
}

// HasNimbleParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasNimbleParams() bool {
	if o != nil && o.NimbleParams.IsSet() {
		return true
	}

	return false
}

// SetNimbleParams gets a reference to the given NullableNimbleProtectionGroupParams and assigns it to the NimbleParams field.
func (o *ProtectionGroup) SetNimbleParams(v NimbleProtectionGroupParams) {
	o.NimbleParams.Set(&v)
}
// SetNimbleParamsNil sets the value for NimbleParams to be an explicit nil
func (o *ProtectionGroup) SetNimbleParamsNil() {
	o.NimbleParams.Set(nil)
}

// UnsetNimbleParams ensures that no value is present for NimbleParams, not even an explicit nil
func (o *ProtectionGroup) UnsetNimbleParams() {
	o.NimbleParams.Unset()
}

// GetHypervParams returns the HypervParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetHypervParams() HyperVProtectionGroupParams {
	if o == nil || o.HypervParams == nil {
		var ret HyperVProtectionGroupParams
		return ret
	}
	return *o.HypervParams
}

// GetHypervParamsOk returns a tuple with the HypervParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetHypervParamsOk() (*HyperVProtectionGroupParams, bool) {
	if o == nil || o.HypervParams == nil {
		return nil, false
	}
	return o.HypervParams, true
}

// HasHypervParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasHypervParams() bool {
	if o != nil && o.HypervParams != nil {
		return true
	}

	return false
}

// SetHypervParams gets a reference to the given HyperVProtectionGroupParams and assigns it to the HypervParams field.
func (o *ProtectionGroup) SetHypervParams(v HyperVProtectionGroupParams) {
	o.HypervParams = &v
}

// GetAwsParams returns the AwsParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetAwsParams() AwsProtectionGroupParams {
	if o == nil || o.AwsParams == nil {
		var ret AwsProtectionGroupParams
		return ret
	}
	return *o.AwsParams
}

// GetAwsParamsOk returns a tuple with the AwsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetAwsParamsOk() (*AwsProtectionGroupParams, bool) {
	if o == nil || o.AwsParams == nil {
		return nil, false
	}
	return o.AwsParams, true
}

// HasAwsParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasAwsParams() bool {
	if o != nil && o.AwsParams != nil {
		return true
	}

	return false
}

// SetAwsParams gets a reference to the given AwsProtectionGroupParams and assigns it to the AwsParams field.
func (o *ProtectionGroup) SetAwsParams(v AwsProtectionGroupParams) {
	o.AwsParams = &v
}

// GetAzureParams returns the AzureParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetAzureParams() AzureProtectionGroupParams {
	if o == nil || o.AzureParams == nil {
		var ret AzureProtectionGroupParams
		return ret
	}
	return *o.AzureParams
}

// GetAzureParamsOk returns a tuple with the AzureParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetAzureParamsOk() (*AzureProtectionGroupParams, bool) {
	if o == nil || o.AzureParams == nil {
		return nil, false
	}
	return o.AzureParams, true
}

// HasAzureParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasAzureParams() bool {
	if o != nil && o.AzureParams != nil {
		return true
	}

	return false
}

// SetAzureParams gets a reference to the given AzureProtectionGroupParams and assigns it to the AzureParams field.
func (o *ProtectionGroup) SetAzureParams(v AzureProtectionGroupParams) {
	o.AzureParams = &v
}

// GetGcpParams returns the GcpParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetGcpParams() GcpProtectionGroupParams {
	if o == nil || o.GcpParams == nil {
		var ret GcpProtectionGroupParams
		return ret
	}
	return *o.GcpParams
}

// GetGcpParamsOk returns a tuple with the GcpParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetGcpParamsOk() (*GcpProtectionGroupParams, bool) {
	if o == nil || o.GcpParams == nil {
		return nil, false
	}
	return o.GcpParams, true
}

// HasGcpParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasGcpParams() bool {
	if o != nil && o.GcpParams != nil {
		return true
	}

	return false
}

// SetGcpParams gets a reference to the given GcpProtectionGroupParams and assigns it to the GcpParams field.
func (o *ProtectionGroup) SetGcpParams(v GcpProtectionGroupParams) {
	o.GcpParams = &v
}

// GetKvmParams returns the KvmParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetKvmParams() KvmProtectionGroupParams {
	if o == nil || o.KvmParams.Get() == nil {
		var ret KvmProtectionGroupParams
		return ret
	}
	return *o.KvmParams.Get()
}

// GetKvmParamsOk returns a tuple with the KvmParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetKvmParamsOk() (*KvmProtectionGroupParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.KvmParams.Get(), o.KvmParams.IsSet()
}

// HasKvmParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasKvmParams() bool {
	if o != nil && o.KvmParams.IsSet() {
		return true
	}

	return false
}

// SetKvmParams gets a reference to the given NullableKvmProtectionGroupParams and assigns it to the KvmParams field.
func (o *ProtectionGroup) SetKvmParams(v KvmProtectionGroupParams) {
	o.KvmParams.Set(&v)
}
// SetKvmParamsNil sets the value for KvmParams to be an explicit nil
func (o *ProtectionGroup) SetKvmParamsNil() {
	o.KvmParams.Set(nil)
}

// UnsetKvmParams ensures that no value is present for KvmParams, not even an explicit nil
func (o *ProtectionGroup) UnsetKvmParams() {
	o.KvmParams.Unset()
}

// GetPhysicalParams returns the PhysicalParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetPhysicalParams() PhysicalProtectionGroupParams {
	if o == nil || o.PhysicalParams == nil {
		var ret PhysicalProtectionGroupParams
		return ret
	}
	return *o.PhysicalParams
}

// GetPhysicalParamsOk returns a tuple with the PhysicalParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetPhysicalParamsOk() (*PhysicalProtectionGroupParams, bool) {
	if o == nil || o.PhysicalParams == nil {
		return nil, false
	}
	return o.PhysicalParams, true
}

// HasPhysicalParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasPhysicalParams() bool {
	if o != nil && o.PhysicalParams != nil {
		return true
	}

	return false
}

// SetPhysicalParams gets a reference to the given PhysicalProtectionGroupParams and assigns it to the PhysicalParams field.
func (o *ProtectionGroup) SetPhysicalParams(v PhysicalProtectionGroupParams) {
	o.PhysicalParams = &v
}

// GetAdParams returns the AdParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetAdParams() ADProtectionGroupParams {
	if o == nil || o.AdParams == nil {
		var ret ADProtectionGroupParams
		return ret
	}
	return *o.AdParams
}

// GetAdParamsOk returns a tuple with the AdParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetAdParamsOk() (*ADProtectionGroupParams, bool) {
	if o == nil || o.AdParams == nil {
		return nil, false
	}
	return o.AdParams, true
}

// HasAdParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasAdParams() bool {
	if o != nil && o.AdParams != nil {
		return true
	}

	return false
}

// SetAdParams gets a reference to the given ADProtectionGroupParams and assigns it to the AdParams field.
func (o *ProtectionGroup) SetAdParams(v ADProtectionGroupParams) {
	o.AdParams = &v
}

// GetOffice365Params returns the Office365Params field value if set, zero value otherwise.
func (o *ProtectionGroup) GetOffice365Params() Office365ProtectionGroupParams {
	if o == nil || o.Office365Params == nil {
		var ret Office365ProtectionGroupParams
		return ret
	}
	return *o.Office365Params
}

// GetOffice365ParamsOk returns a tuple with the Office365Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetOffice365ParamsOk() (*Office365ProtectionGroupParams, bool) {
	if o == nil || o.Office365Params == nil {
		return nil, false
	}
	return o.Office365Params, true
}

// HasOffice365Params returns a boolean if a field has been set.
func (o *ProtectionGroup) HasOffice365Params() bool {
	if o != nil && o.Office365Params != nil {
		return true
	}

	return false
}

// SetOffice365Params gets a reference to the given Office365ProtectionGroupParams and assigns it to the Office365Params field.
func (o *ProtectionGroup) SetOffice365Params(v Office365ProtectionGroupParams) {
	o.Office365Params = &v
}

// GetNetappParams returns the NetappParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetNetappParams() NetappProtectionGroupParams {
	if o == nil || o.NetappParams.Get() == nil {
		var ret NetappProtectionGroupParams
		return ret
	}
	return *o.NetappParams.Get()
}

// GetNetappParamsOk returns a tuple with the NetappParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetNetappParamsOk() (*NetappProtectionGroupParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetappParams.Get(), o.NetappParams.IsSet()
}

// HasNetappParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasNetappParams() bool {
	if o != nil && o.NetappParams.IsSet() {
		return true
	}

	return false
}

// SetNetappParams gets a reference to the given NullableNetappProtectionGroupParams and assigns it to the NetappParams field.
func (o *ProtectionGroup) SetNetappParams(v NetappProtectionGroupParams) {
	o.NetappParams.Set(&v)
}
// SetNetappParamsNil sets the value for NetappParams to be an explicit nil
func (o *ProtectionGroup) SetNetappParamsNil() {
	o.NetappParams.Set(nil)
}

// UnsetNetappParams ensures that no value is present for NetappParams, not even an explicit nil
func (o *ProtectionGroup) UnsetNetappParams() {
	o.NetappParams.Unset()
}

// GetGenericNasParams returns the GenericNasParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetGenericNasParams() GenericNasProtectionGroupParams {
	if o == nil || o.GenericNasParams == nil {
		var ret GenericNasProtectionGroupParams
		return ret
	}
	return *o.GenericNasParams
}

// GetGenericNasParamsOk returns a tuple with the GenericNasParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetGenericNasParamsOk() (*GenericNasProtectionGroupParams, bool) {
	if o == nil || o.GenericNasParams == nil {
		return nil, false
	}
	return o.GenericNasParams, true
}

// HasGenericNasParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasGenericNasParams() bool {
	if o != nil && o.GenericNasParams != nil {
		return true
	}

	return false
}

// SetGenericNasParams gets a reference to the given GenericNasProtectionGroupParams and assigns it to the GenericNasParams field.
func (o *ProtectionGroup) SetGenericNasParams(v GenericNasProtectionGroupParams) {
	o.GenericNasParams = &v
}

// GetIsilonParams returns the IsilonParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetIsilonParams() IsilonProtectionGroupParams {
	if o == nil || o.IsilonParams.Get() == nil {
		var ret IsilonProtectionGroupParams
		return ret
	}
	return *o.IsilonParams.Get()
}

// GetIsilonParamsOk returns a tuple with the IsilonParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetIsilonParamsOk() (*IsilonProtectionGroupParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsilonParams.Get(), o.IsilonParams.IsSet()
}

// HasIsilonParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasIsilonParams() bool {
	if o != nil && o.IsilonParams.IsSet() {
		return true
	}

	return false
}

// SetIsilonParams gets a reference to the given NullableIsilonProtectionGroupParams and assigns it to the IsilonParams field.
func (o *ProtectionGroup) SetIsilonParams(v IsilonProtectionGroupParams) {
	o.IsilonParams.Set(&v)
}
// SetIsilonParamsNil sets the value for IsilonParams to be an explicit nil
func (o *ProtectionGroup) SetIsilonParamsNil() {
	o.IsilonParams.Set(nil)
}

// UnsetIsilonParams ensures that no value is present for IsilonParams, not even an explicit nil
func (o *ProtectionGroup) UnsetIsilonParams() {
	o.IsilonParams.Unset()
}

// GetFlashbladeParams returns the FlashbladeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetFlashbladeParams() FlashbladeProtectionGroupParams {
	if o == nil || o.FlashbladeParams.Get() == nil {
		var ret FlashbladeProtectionGroupParams
		return ret
	}
	return *o.FlashbladeParams.Get()
}

// GetFlashbladeParamsOk returns a tuple with the FlashbladeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetFlashbladeParamsOk() (*FlashbladeProtectionGroupParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FlashbladeParams.Get(), o.FlashbladeParams.IsSet()
}

// HasFlashbladeParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasFlashbladeParams() bool {
	if o != nil && o.FlashbladeParams.IsSet() {
		return true
	}

	return false
}

// SetFlashbladeParams gets a reference to the given NullableFlashbladeProtectionGroupParams and assigns it to the FlashbladeParams field.
func (o *ProtectionGroup) SetFlashbladeParams(v FlashbladeProtectionGroupParams) {
	o.FlashbladeParams.Set(&v)
}
// SetFlashbladeParamsNil sets the value for FlashbladeParams to be an explicit nil
func (o *ProtectionGroup) SetFlashbladeParamsNil() {
	o.FlashbladeParams.Set(nil)
}

// UnsetFlashbladeParams ensures that no value is present for FlashbladeParams, not even an explicit nil
func (o *ProtectionGroup) UnsetFlashbladeParams() {
	o.FlashbladeParams.Unset()
}

// GetGpfsParams returns the GpfsParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetGpfsParams() GpfsProtectionGroupParams {
	if o == nil || o.GpfsParams.Get() == nil {
		var ret GpfsProtectionGroupParams
		return ret
	}
	return *o.GpfsParams.Get()
}

// GetGpfsParamsOk returns a tuple with the GpfsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetGpfsParamsOk() (*GpfsProtectionGroupParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GpfsParams.Get(), o.GpfsParams.IsSet()
}

// HasGpfsParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasGpfsParams() bool {
	if o != nil && o.GpfsParams.IsSet() {
		return true
	}

	return false
}

// SetGpfsParams gets a reference to the given NullableGpfsProtectionGroupParams and assigns it to the GpfsParams field.
func (o *ProtectionGroup) SetGpfsParams(v GpfsProtectionGroupParams) {
	o.GpfsParams.Set(&v)
}
// SetGpfsParamsNil sets the value for GpfsParams to be an explicit nil
func (o *ProtectionGroup) SetGpfsParamsNil() {
	o.GpfsParams.Set(nil)
}

// UnsetGpfsParams ensures that no value is present for GpfsParams, not even an explicit nil
func (o *ProtectionGroup) UnsetGpfsParams() {
	o.GpfsParams.Unset()
}

// GetElastifileParams returns the ElastifileParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetElastifileParams() ElastifileProtectionGroupParams {
	if o == nil || o.ElastifileParams.Get() == nil {
		var ret ElastifileProtectionGroupParams
		return ret
	}
	return *o.ElastifileParams.Get()
}

// GetElastifileParamsOk returns a tuple with the ElastifileParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetElastifileParamsOk() (*ElastifileProtectionGroupParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ElastifileParams.Get(), o.ElastifileParams.IsSet()
}

// HasElastifileParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasElastifileParams() bool {
	if o != nil && o.ElastifileParams.IsSet() {
		return true
	}

	return false
}

// SetElastifileParams gets a reference to the given NullableElastifileProtectionGroupParams and assigns it to the ElastifileParams field.
func (o *ProtectionGroup) SetElastifileParams(v ElastifileProtectionGroupParams) {
	o.ElastifileParams.Set(&v)
}
// SetElastifileParamsNil sets the value for ElastifileParams to be an explicit nil
func (o *ProtectionGroup) SetElastifileParamsNil() {
	o.ElastifileParams.Set(nil)
}

// UnsetElastifileParams ensures that no value is present for ElastifileParams, not even an explicit nil
func (o *ProtectionGroup) UnsetElastifileParams() {
	o.ElastifileParams.Unset()
}

// GetRemoteAdapterParams returns the RemoteAdapterParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionGroup) GetRemoteAdapterParams() RemoteAdapterProtectionGroupParams {
	if o == nil || o.RemoteAdapterParams.Get() == nil {
		var ret RemoteAdapterProtectionGroupParams
		return ret
	}
	return *o.RemoteAdapterParams.Get()
}

// GetRemoteAdapterParamsOk returns a tuple with the RemoteAdapterParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionGroup) GetRemoteAdapterParamsOk() (*RemoteAdapterProtectionGroupParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RemoteAdapterParams.Get(), o.RemoteAdapterParams.IsSet()
}

// HasRemoteAdapterParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasRemoteAdapterParams() bool {
	if o != nil && o.RemoteAdapterParams.IsSet() {
		return true
	}

	return false
}

// SetRemoteAdapterParams gets a reference to the given NullableRemoteAdapterProtectionGroupParams and assigns it to the RemoteAdapterParams field.
func (o *ProtectionGroup) SetRemoteAdapterParams(v RemoteAdapterProtectionGroupParams) {
	o.RemoteAdapterParams.Set(&v)
}
// SetRemoteAdapterParamsNil sets the value for RemoteAdapterParams to be an explicit nil
func (o *ProtectionGroup) SetRemoteAdapterParamsNil() {
	o.RemoteAdapterParams.Set(nil)
}

// UnsetRemoteAdapterParams ensures that no value is present for RemoteAdapterParams, not even an explicit nil
func (o *ProtectionGroup) UnsetRemoteAdapterParams() {
	o.RemoteAdapterParams.Unset()
}

// GetExchangeParams returns the ExchangeParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetExchangeParams() ExchangeProtectionGroupParams {
	if o == nil || o.ExchangeParams == nil {
		var ret ExchangeProtectionGroupParams
		return ret
	}
	return *o.ExchangeParams
}

// GetExchangeParamsOk returns a tuple with the ExchangeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetExchangeParamsOk() (*ExchangeProtectionGroupParams, bool) {
	if o == nil || o.ExchangeParams == nil {
		return nil, false
	}
	return o.ExchangeParams, true
}

// HasExchangeParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasExchangeParams() bool {
	if o != nil && o.ExchangeParams != nil {
		return true
	}

	return false
}

// SetExchangeParams gets a reference to the given ExchangeProtectionGroupParams and assigns it to the ExchangeParams field.
func (o *ProtectionGroup) SetExchangeParams(v ExchangeProtectionGroupParams) {
	o.ExchangeParams = &v
}

// GetCassandraParams returns the CassandraParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetCassandraParams() CassandraProtectionGroupParams {
	if o == nil || o.CassandraParams == nil {
		var ret CassandraProtectionGroupParams
		return ret
	}
	return *o.CassandraParams
}

// GetCassandraParamsOk returns a tuple with the CassandraParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetCassandraParamsOk() (*CassandraProtectionGroupParams, bool) {
	if o == nil || o.CassandraParams == nil {
		return nil, false
	}
	return o.CassandraParams, true
}

// HasCassandraParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasCassandraParams() bool {
	if o != nil && o.CassandraParams != nil {
		return true
	}

	return false
}

// SetCassandraParams gets a reference to the given CassandraProtectionGroupParams and assigns it to the CassandraParams field.
func (o *ProtectionGroup) SetCassandraParams(v CassandraProtectionGroupParams) {
	o.CassandraParams = &v
}

// GetCouchbaseParams returns the CouchbaseParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetCouchbaseParams() NoSqlProtectionGroupParams {
	if o == nil || o.CouchbaseParams == nil {
		var ret NoSqlProtectionGroupParams
		return ret
	}
	return *o.CouchbaseParams
}

// GetCouchbaseParamsOk returns a tuple with the CouchbaseParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetCouchbaseParamsOk() (*NoSqlProtectionGroupParams, bool) {
	if o == nil || o.CouchbaseParams == nil {
		return nil, false
	}
	return o.CouchbaseParams, true
}

// HasCouchbaseParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasCouchbaseParams() bool {
	if o != nil && o.CouchbaseParams != nil {
		return true
	}

	return false
}

// SetCouchbaseParams gets a reference to the given NoSqlProtectionGroupParams and assigns it to the CouchbaseParams field.
func (o *ProtectionGroup) SetCouchbaseParams(v NoSqlProtectionGroupParams) {
	o.CouchbaseParams = &v
}

// GetMongodbParams returns the MongodbParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetMongodbParams() MongoDBProtectionGroupParams {
	if o == nil || o.MongodbParams == nil {
		var ret MongoDBProtectionGroupParams
		return ret
	}
	return *o.MongodbParams
}

// GetMongodbParamsOk returns a tuple with the MongodbParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetMongodbParamsOk() (*MongoDBProtectionGroupParams, bool) {
	if o == nil || o.MongodbParams == nil {
		return nil, false
	}
	return o.MongodbParams, true
}

// HasMongodbParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasMongodbParams() bool {
	if o != nil && o.MongodbParams != nil {
		return true
	}

	return false
}

// SetMongodbParams gets a reference to the given MongoDBProtectionGroupParams and assigns it to the MongodbParams field.
func (o *ProtectionGroup) SetMongodbParams(v MongoDBProtectionGroupParams) {
	o.MongodbParams = &v
}

// GetHiveParams returns the HiveParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetHiveParams() NoSqlProtectionGroupParams {
	if o == nil || o.HiveParams == nil {
		var ret NoSqlProtectionGroupParams
		return ret
	}
	return *o.HiveParams
}

// GetHiveParamsOk returns a tuple with the HiveParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetHiveParamsOk() (*NoSqlProtectionGroupParams, bool) {
	if o == nil || o.HiveParams == nil {
		return nil, false
	}
	return o.HiveParams, true
}

// HasHiveParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasHiveParams() bool {
	if o != nil && o.HiveParams != nil {
		return true
	}

	return false
}

// SetHiveParams gets a reference to the given NoSqlProtectionGroupParams and assigns it to the HiveParams field.
func (o *ProtectionGroup) SetHiveParams(v NoSqlProtectionGroupParams) {
	o.HiveParams = &v
}

// GetHdfsParams returns the HdfsParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetHdfsParams() HdfsProtectionGroupParams {
	if o == nil || o.HdfsParams == nil {
		var ret HdfsProtectionGroupParams
		return ret
	}
	return *o.HdfsParams
}

// GetHdfsParamsOk returns a tuple with the HdfsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetHdfsParamsOk() (*HdfsProtectionGroupParams, bool) {
	if o == nil || o.HdfsParams == nil {
		return nil, false
	}
	return o.HdfsParams, true
}

// HasHdfsParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasHdfsParams() bool {
	if o != nil && o.HdfsParams != nil {
		return true
	}

	return false
}

// SetHdfsParams gets a reference to the given HdfsProtectionGroupParams and assigns it to the HdfsParams field.
func (o *ProtectionGroup) SetHdfsParams(v HdfsProtectionGroupParams) {
	o.HdfsParams = &v
}

// GetHbaseParams returns the HbaseParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetHbaseParams() NoSqlProtectionGroupParams {
	if o == nil || o.HbaseParams == nil {
		var ret NoSqlProtectionGroupParams
		return ret
	}
	return *o.HbaseParams
}

// GetHbaseParamsOk returns a tuple with the HbaseParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetHbaseParamsOk() (*NoSqlProtectionGroupParams, bool) {
	if o == nil || o.HbaseParams == nil {
		return nil, false
	}
	return o.HbaseParams, true
}

// HasHbaseParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasHbaseParams() bool {
	if o != nil && o.HbaseParams != nil {
		return true
	}

	return false
}

// SetHbaseParams gets a reference to the given NoSqlProtectionGroupParams and assigns it to the HbaseParams field.
func (o *ProtectionGroup) SetHbaseParams(v NoSqlProtectionGroupParams) {
	o.HbaseParams = &v
}

// GetUdaParams returns the UdaParams field value if set, zero value otherwise.
func (o *ProtectionGroup) GetUdaParams() UdaProtectionGroupParams {
	if o == nil || o.UdaParams == nil {
		var ret UdaProtectionGroupParams
		return ret
	}
	return *o.UdaParams
}

// GetUdaParamsOk returns a tuple with the UdaParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionGroup) GetUdaParamsOk() (*UdaProtectionGroupParams, bool) {
	if o == nil || o.UdaParams == nil {
		return nil, false
	}
	return o.UdaParams, true
}

// HasUdaParams returns a boolean if a field has been set.
func (o *ProtectionGroup) HasUdaParams() bool {
	if o != nil && o.UdaParams != nil {
		return true
	}

	return false
}

// SetUdaParams gets a reference to the given UdaProtectionGroupParams and assigns it to the UdaParams field.
func (o *ProtectionGroup) SetUdaParams(v UdaProtectionGroupParams) {
	o.UdaParams = &v
}

func (o ProtectionGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.PolicyId.IsSet() {
		toSerialize["policyId"] = o.PolicyId.Get()
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	if o.StorageDomainId.IsSet() {
		toSerialize["storageDomainId"] = o.StorageDomainId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.StartTime != nil {
		toSerialize["startTime"] = o.StartTime
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.AlertPolicy != nil {
		toSerialize["alertPolicy"] = o.AlertPolicy
	}
	if o.Sla != nil {
		toSerialize["sla"] = o.Sla
	}
	if o.QosPolicy.IsSet() {
		toSerialize["qosPolicy"] = o.QosPolicy.Get()
	}
	if o.AbortInBlackouts.IsSet() {
		toSerialize["abortInBlackouts"] = o.AbortInBlackouts.Get()
	}
	if o.PauseInBlackouts.IsSet() {
		toSerialize["pauseInBlackouts"] = o.PauseInBlackouts.Get()
	}
	if o.IsActive.IsSet() {
		toSerialize["isActive"] = o.IsActive.Get()
	}
	if o.IsDeleted.IsSet() {
		toSerialize["isDeleted"] = o.IsDeleted.Get()
	}
	if o.IsPaused.IsSet() {
		toSerialize["isPaused"] = o.IsPaused.Get()
	}
	if o.Environment.IsSet() {
		toSerialize["environment"] = o.Environment.Get()
	}
	if o.LastRun != nil {
		toSerialize["lastRun"] = o.LastRun
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.IsProtectOnce.IsSet() {
		toSerialize["isProtectOnce"] = o.IsProtectOnce.Get()
	}
	if o.MissingEntities != nil {
		toSerialize["missingEntities"] = o.MissingEntities
	}
	if o.NumProtectedObjects.IsSet() {
		toSerialize["numProtectedObjects"] = o.NumProtectedObjects.Get()
	}
	if o.VmwareParams != nil {
		toSerialize["vmwareParams"] = o.VmwareParams
	}
	if o.AcropolisParams != nil {
		toSerialize["acropolisParams"] = o.AcropolisParams
	}
	if o.KubernetesParams != nil {
		toSerialize["kubernetesParams"] = o.KubernetesParams
	}
	if o.MssqlParams != nil {
		toSerialize["mssqlParams"] = o.MssqlParams
	}
	if o.OracleParams != nil {
		toSerialize["oracleParams"] = o.OracleParams
	}
	if o.ViewParams.IsSet() {
		toSerialize["viewParams"] = o.ViewParams.Get()
	}
	if o.PureParams.IsSet() {
		toSerialize["pureParams"] = o.PureParams.Get()
	}
	if o.NimbleParams.IsSet() {
		toSerialize["nimbleParams"] = o.NimbleParams.Get()
	}
	if o.HypervParams != nil {
		toSerialize["hypervParams"] = o.HypervParams
	}
	if o.AwsParams != nil {
		toSerialize["awsParams"] = o.AwsParams
	}
	if o.AzureParams != nil {
		toSerialize["azureParams"] = o.AzureParams
	}
	if o.GcpParams != nil {
		toSerialize["gcpParams"] = o.GcpParams
	}
	if o.KvmParams.IsSet() {
		toSerialize["kvmParams"] = o.KvmParams.Get()
	}
	if o.PhysicalParams != nil {
		toSerialize["physicalParams"] = o.PhysicalParams
	}
	if o.AdParams != nil {
		toSerialize["adParams"] = o.AdParams
	}
	if o.Office365Params != nil {
		toSerialize["office365Params"] = o.Office365Params
	}
	if o.NetappParams.IsSet() {
		toSerialize["netappParams"] = o.NetappParams.Get()
	}
	if o.GenericNasParams != nil {
		toSerialize["genericNasParams"] = o.GenericNasParams
	}
	if o.IsilonParams.IsSet() {
		toSerialize["isilonParams"] = o.IsilonParams.Get()
	}
	if o.FlashbladeParams.IsSet() {
		toSerialize["flashbladeParams"] = o.FlashbladeParams.Get()
	}
	if o.GpfsParams.IsSet() {
		toSerialize["gpfsParams"] = o.GpfsParams.Get()
	}
	if o.ElastifileParams.IsSet() {
		toSerialize["elastifileParams"] = o.ElastifileParams.Get()
	}
	if o.RemoteAdapterParams.IsSet() {
		toSerialize["remoteAdapterParams"] = o.RemoteAdapterParams.Get()
	}
	if o.ExchangeParams != nil {
		toSerialize["exchangeParams"] = o.ExchangeParams
	}
	if o.CassandraParams != nil {
		toSerialize["cassandraParams"] = o.CassandraParams
	}
	if o.CouchbaseParams != nil {
		toSerialize["couchbaseParams"] = o.CouchbaseParams
	}
	if o.MongodbParams != nil {
		toSerialize["mongodbParams"] = o.MongodbParams
	}
	if o.HiveParams != nil {
		toSerialize["hiveParams"] = o.HiveParams
	}
	if o.HdfsParams != nil {
		toSerialize["hdfsParams"] = o.HdfsParams
	}
	if o.HbaseParams != nil {
		toSerialize["hbaseParams"] = o.HbaseParams
	}
	if o.UdaParams != nil {
		toSerialize["udaParams"] = o.UdaParams
	}
	return json.Marshal(toSerialize)
}

type NullableProtectionGroup struct {
	value *ProtectionGroup
	isSet bool
}

func (v NullableProtectionGroup) Get() *ProtectionGroup {
	return v.value
}

func (v *NullableProtectionGroup) Set(val *ProtectionGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionGroup(val *ProtectionGroup) *NullableProtectionGroup {
	return &NullableProtectionGroup{value: val, isSet: true}
}

func (v NullableProtectionGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


