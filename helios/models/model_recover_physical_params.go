/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// RecoverPhysicalParams Specifies the recovery options specific to Physical environment.
type RecoverPhysicalParams struct {
	// Specifies the list of Recover Object parameters. For recovering files, specifies the object contains the file to recover.
	Objects []CommonRecoverObjectSnapshotParams `json:"objects"`
	// Specifies the type of recover action to be performed.
	RecoveryAction string `json:"recoveryAction"`
	// Specifies the parameters to recover Physical Volumes.
	RecoverVolumeParams NullableRecoverPhysicalVolumeParams `json:"recoverVolumeParams,omitempty"`
	// Specifies the parameters to mount Physical Volumes.
	MountVolumeParams NullableMountPhysicalVolumeParams `json:"mountVolumeParams,omitempty"`
	// Specifies the parameters to perform a file and folder recovery.
	RecoverFileAndFolderParams NullableRecoverPhysicalFileAndFolderParams `json:"recoverFileAndFolderParams,omitempty"`
	// Specifies the parameters to download files and folders.
	DownloadFileAndFolderParams NullableCommonDownloadFileAndFolderParams `json:"downloadFileAndFolderParams,omitempty"`
}

// NewRecoverPhysicalParams instantiates a new RecoverPhysicalParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverPhysicalParams(objects []CommonRecoverObjectSnapshotParams, recoveryAction string) *RecoverPhysicalParams {
	this := RecoverPhysicalParams{}
	this.Objects = objects
	this.RecoveryAction = recoveryAction
	return &this
}

// NewRecoverPhysicalParamsWithDefaults instantiates a new RecoverPhysicalParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverPhysicalParamsWithDefaults() *RecoverPhysicalParams {
	this := RecoverPhysicalParams{}
	return &this
}

// GetObjects returns the Objects field value
// If the value is explicit nil, the zero value for []CommonRecoverObjectSnapshotParams will be returned
func (o *RecoverPhysicalParams) GetObjects() []CommonRecoverObjectSnapshotParams {
	if o == nil {
		var ret []CommonRecoverObjectSnapshotParams
		return ret
	}

	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverPhysicalParams) GetObjectsOk() (*[]CommonRecoverObjectSnapshotParams, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return &o.Objects, true
}

// SetObjects sets field value
func (o *RecoverPhysicalParams) SetObjects(v []CommonRecoverObjectSnapshotParams) {
	o.Objects = v
}

// GetRecoveryAction returns the RecoveryAction field value
func (o *RecoverPhysicalParams) GetRecoveryAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecoveryAction
}

// GetRecoveryActionOk returns a tuple with the RecoveryAction field value
// and a boolean to check if the value has been set.
func (o *RecoverPhysicalParams) GetRecoveryActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RecoveryAction, true
}

// SetRecoveryAction sets field value
func (o *RecoverPhysicalParams) SetRecoveryAction(v string) {
	o.RecoveryAction = v
}

// GetRecoverVolumeParams returns the RecoverVolumeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverPhysicalParams) GetRecoverVolumeParams() RecoverPhysicalVolumeParams {
	if o == nil || o.RecoverVolumeParams.Get() == nil {
		var ret RecoverPhysicalVolumeParams
		return ret
	}
	return *o.RecoverVolumeParams.Get()
}

// GetRecoverVolumeParamsOk returns a tuple with the RecoverVolumeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverPhysicalParams) GetRecoverVolumeParamsOk() (*RecoverPhysicalVolumeParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RecoverVolumeParams.Get(), o.RecoverVolumeParams.IsSet()
}

// HasRecoverVolumeParams returns a boolean if a field has been set.
func (o *RecoverPhysicalParams) HasRecoverVolumeParams() bool {
	if o != nil && o.RecoverVolumeParams.IsSet() {
		return true
	}

	return false
}

// SetRecoverVolumeParams gets a reference to the given NullableRecoverPhysicalVolumeParams and assigns it to the RecoverVolumeParams field.
func (o *RecoverPhysicalParams) SetRecoverVolumeParams(v RecoverPhysicalVolumeParams) {
	o.RecoverVolumeParams.Set(&v)
}
// SetRecoverVolumeParamsNil sets the value for RecoverVolumeParams to be an explicit nil
func (o *RecoverPhysicalParams) SetRecoverVolumeParamsNil() {
	o.RecoverVolumeParams.Set(nil)
}

// UnsetRecoverVolumeParams ensures that no value is present for RecoverVolumeParams, not even an explicit nil
func (o *RecoverPhysicalParams) UnsetRecoverVolumeParams() {
	o.RecoverVolumeParams.Unset()
}

// GetMountVolumeParams returns the MountVolumeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverPhysicalParams) GetMountVolumeParams() MountPhysicalVolumeParams {
	if o == nil || o.MountVolumeParams.Get() == nil {
		var ret MountPhysicalVolumeParams
		return ret
	}
	return *o.MountVolumeParams.Get()
}

// GetMountVolumeParamsOk returns a tuple with the MountVolumeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverPhysicalParams) GetMountVolumeParamsOk() (*MountPhysicalVolumeParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MountVolumeParams.Get(), o.MountVolumeParams.IsSet()
}

// HasMountVolumeParams returns a boolean if a field has been set.
func (o *RecoverPhysicalParams) HasMountVolumeParams() bool {
	if o != nil && o.MountVolumeParams.IsSet() {
		return true
	}

	return false
}

// SetMountVolumeParams gets a reference to the given NullableMountPhysicalVolumeParams and assigns it to the MountVolumeParams field.
func (o *RecoverPhysicalParams) SetMountVolumeParams(v MountPhysicalVolumeParams) {
	o.MountVolumeParams.Set(&v)
}
// SetMountVolumeParamsNil sets the value for MountVolumeParams to be an explicit nil
func (o *RecoverPhysicalParams) SetMountVolumeParamsNil() {
	o.MountVolumeParams.Set(nil)
}

// UnsetMountVolumeParams ensures that no value is present for MountVolumeParams, not even an explicit nil
func (o *RecoverPhysicalParams) UnsetMountVolumeParams() {
	o.MountVolumeParams.Unset()
}

// GetRecoverFileAndFolderParams returns the RecoverFileAndFolderParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverPhysicalParams) GetRecoverFileAndFolderParams() RecoverPhysicalFileAndFolderParams {
	if o == nil || o.RecoverFileAndFolderParams.Get() == nil {
		var ret RecoverPhysicalFileAndFolderParams
		return ret
	}
	return *o.RecoverFileAndFolderParams.Get()
}

// GetRecoverFileAndFolderParamsOk returns a tuple with the RecoverFileAndFolderParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverPhysicalParams) GetRecoverFileAndFolderParamsOk() (*RecoverPhysicalFileAndFolderParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RecoverFileAndFolderParams.Get(), o.RecoverFileAndFolderParams.IsSet()
}

// HasRecoverFileAndFolderParams returns a boolean if a field has been set.
func (o *RecoverPhysicalParams) HasRecoverFileAndFolderParams() bool {
	if o != nil && o.RecoverFileAndFolderParams.IsSet() {
		return true
	}

	return false
}

// SetRecoverFileAndFolderParams gets a reference to the given NullableRecoverPhysicalFileAndFolderParams and assigns it to the RecoverFileAndFolderParams field.
func (o *RecoverPhysicalParams) SetRecoverFileAndFolderParams(v RecoverPhysicalFileAndFolderParams) {
	o.RecoverFileAndFolderParams.Set(&v)
}
// SetRecoverFileAndFolderParamsNil sets the value for RecoverFileAndFolderParams to be an explicit nil
func (o *RecoverPhysicalParams) SetRecoverFileAndFolderParamsNil() {
	o.RecoverFileAndFolderParams.Set(nil)
}

// UnsetRecoverFileAndFolderParams ensures that no value is present for RecoverFileAndFolderParams, not even an explicit nil
func (o *RecoverPhysicalParams) UnsetRecoverFileAndFolderParams() {
	o.RecoverFileAndFolderParams.Unset()
}

// GetDownloadFileAndFolderParams returns the DownloadFileAndFolderParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverPhysicalParams) GetDownloadFileAndFolderParams() CommonDownloadFileAndFolderParams {
	if o == nil || o.DownloadFileAndFolderParams.Get() == nil {
		var ret CommonDownloadFileAndFolderParams
		return ret
	}
	return *o.DownloadFileAndFolderParams.Get()
}

// GetDownloadFileAndFolderParamsOk returns a tuple with the DownloadFileAndFolderParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverPhysicalParams) GetDownloadFileAndFolderParamsOk() (*CommonDownloadFileAndFolderParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DownloadFileAndFolderParams.Get(), o.DownloadFileAndFolderParams.IsSet()
}

// HasDownloadFileAndFolderParams returns a boolean if a field has been set.
func (o *RecoverPhysicalParams) HasDownloadFileAndFolderParams() bool {
	if o != nil && o.DownloadFileAndFolderParams.IsSet() {
		return true
	}

	return false
}

// SetDownloadFileAndFolderParams gets a reference to the given NullableCommonDownloadFileAndFolderParams and assigns it to the DownloadFileAndFolderParams field.
func (o *RecoverPhysicalParams) SetDownloadFileAndFolderParams(v CommonDownloadFileAndFolderParams) {
	o.DownloadFileAndFolderParams.Set(&v)
}
// SetDownloadFileAndFolderParamsNil sets the value for DownloadFileAndFolderParams to be an explicit nil
func (o *RecoverPhysicalParams) SetDownloadFileAndFolderParamsNil() {
	o.DownloadFileAndFolderParams.Set(nil)
}

// UnsetDownloadFileAndFolderParams ensures that no value is present for DownloadFileAndFolderParams, not even an explicit nil
func (o *RecoverPhysicalParams) UnsetDownloadFileAndFolderParams() {
	o.DownloadFileAndFolderParams.Unset()
}

func (o RecoverPhysicalParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if true {
		toSerialize["recoveryAction"] = o.RecoveryAction
	}
	if o.RecoverVolumeParams.IsSet() {
		toSerialize["recoverVolumeParams"] = o.RecoverVolumeParams.Get()
	}
	if o.MountVolumeParams.IsSet() {
		toSerialize["mountVolumeParams"] = o.MountVolumeParams.Get()
	}
	if o.RecoverFileAndFolderParams.IsSet() {
		toSerialize["recoverFileAndFolderParams"] = o.RecoverFileAndFolderParams.Get()
	}
	if o.DownloadFileAndFolderParams.IsSet() {
		toSerialize["downloadFileAndFolderParams"] = o.DownloadFileAndFolderParams.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverPhysicalParams struct {
	value *RecoverPhysicalParams
	isSet bool
}

func (v NullableRecoverPhysicalParams) Get() *RecoverPhysicalParams {
	return v.value
}

func (v *NullableRecoverPhysicalParams) Set(val *RecoverPhysicalParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverPhysicalParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverPhysicalParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverPhysicalParams(val *RecoverPhysicalParams) *NullableRecoverPhysicalParams {
	return &NullableRecoverPhysicalParams{value: val, isSet: true}
}

func (v NullableRecoverPhysicalParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverPhysicalParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


