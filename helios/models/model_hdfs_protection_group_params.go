/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// HdfsProtectionGroupParams Specifies the parameters for HDFS Protection Group.
type HdfsProtectionGroupParams struct {
	// Specifies the paths to be included in the Protection Group.
	IncludePaths *[]string `json:"includePaths,omitempty"`
	// Specifies the paths to be excluded in the Protection Group. excludePaths will ovrride includePaths.
	ExcludePaths *[]string `json:"excludePaths,omitempty"`
	// Specifies the maximum number of concurrent IO Streams that will be created to exchange data with the cluster.
	Concurrency NullableInt32 `json:"concurrency,omitempty"`
	// Specifies the maximum network bandwidth that each concurrent IO Stream can use for exchanging data with the cluster.
	BandwidthMBPS NullableInt64 `json:"bandwidthMBPS,omitempty"`
	// The object ID of the HDFS source for this protection group.
	HdfsSourceId NullableInt64 `json:"hdfsSourceId"`
	// Object ID of the Source on which this protection was run .
	SourceId NullableInt64 `json:"sourceId,omitempty"`
	IndexingPolicy *IndexingPolicy `json:"indexingPolicy,omitempty"`
	// Specifies the name of the Source on which this protection was run.
	SourceName NullableString `json:"sourceName,omitempty"`
}

// NewHdfsProtectionGroupParams instantiates a new HdfsProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHdfsProtectionGroupParams(hdfsSourceId NullableInt64) *HdfsProtectionGroupParams {
	this := HdfsProtectionGroupParams{}
	this.HdfsSourceId = hdfsSourceId
	return &this
}

// NewHdfsProtectionGroupParamsWithDefaults instantiates a new HdfsProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHdfsProtectionGroupParamsWithDefaults() *HdfsProtectionGroupParams {
	this := HdfsProtectionGroupParams{}
	return &this
}

// GetIncludePaths returns the IncludePaths field value if set, zero value otherwise.
func (o *HdfsProtectionGroupParams) GetIncludePaths() []string {
	if o == nil || o.IncludePaths == nil {
		var ret []string
		return ret
	}
	return *o.IncludePaths
}

// GetIncludePathsOk returns a tuple with the IncludePaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HdfsProtectionGroupParams) GetIncludePathsOk() (*[]string, bool) {
	if o == nil || o.IncludePaths == nil {
		return nil, false
	}
	return o.IncludePaths, true
}

// HasIncludePaths returns a boolean if a field has been set.
func (o *HdfsProtectionGroupParams) HasIncludePaths() bool {
	if o != nil && o.IncludePaths != nil {
		return true
	}

	return false
}

// SetIncludePaths gets a reference to the given []string and assigns it to the IncludePaths field.
func (o *HdfsProtectionGroupParams) SetIncludePaths(v []string) {
	o.IncludePaths = &v
}

// GetExcludePaths returns the ExcludePaths field value if set, zero value otherwise.
func (o *HdfsProtectionGroupParams) GetExcludePaths() []string {
	if o == nil || o.ExcludePaths == nil {
		var ret []string
		return ret
	}
	return *o.ExcludePaths
}

// GetExcludePathsOk returns a tuple with the ExcludePaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HdfsProtectionGroupParams) GetExcludePathsOk() (*[]string, bool) {
	if o == nil || o.ExcludePaths == nil {
		return nil, false
	}
	return o.ExcludePaths, true
}

// HasExcludePaths returns a boolean if a field has been set.
func (o *HdfsProtectionGroupParams) HasExcludePaths() bool {
	if o != nil && o.ExcludePaths != nil {
		return true
	}

	return false
}

// SetExcludePaths gets a reference to the given []string and assigns it to the ExcludePaths field.
func (o *HdfsProtectionGroupParams) SetExcludePaths(v []string) {
	o.ExcludePaths = &v
}

// GetConcurrency returns the Concurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HdfsProtectionGroupParams) GetConcurrency() int32 {
	if o == nil || o.Concurrency.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Concurrency.Get()
}

// GetConcurrencyOk returns a tuple with the Concurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HdfsProtectionGroupParams) GetConcurrencyOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Concurrency.Get(), o.Concurrency.IsSet()
}

// HasConcurrency returns a boolean if a field has been set.
func (o *HdfsProtectionGroupParams) HasConcurrency() bool {
	if o != nil && o.Concurrency.IsSet() {
		return true
	}

	return false
}

// SetConcurrency gets a reference to the given NullableInt32 and assigns it to the Concurrency field.
func (o *HdfsProtectionGroupParams) SetConcurrency(v int32) {
	o.Concurrency.Set(&v)
}
// SetConcurrencyNil sets the value for Concurrency to be an explicit nil
func (o *HdfsProtectionGroupParams) SetConcurrencyNil() {
	o.Concurrency.Set(nil)
}

// UnsetConcurrency ensures that no value is present for Concurrency, not even an explicit nil
func (o *HdfsProtectionGroupParams) UnsetConcurrency() {
	o.Concurrency.Unset()
}

// GetBandwidthMBPS returns the BandwidthMBPS field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HdfsProtectionGroupParams) GetBandwidthMBPS() int64 {
	if o == nil || o.BandwidthMBPS.Get() == nil {
		var ret int64
		return ret
	}
	return *o.BandwidthMBPS.Get()
}

// GetBandwidthMBPSOk returns a tuple with the BandwidthMBPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HdfsProtectionGroupParams) GetBandwidthMBPSOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BandwidthMBPS.Get(), o.BandwidthMBPS.IsSet()
}

// HasBandwidthMBPS returns a boolean if a field has been set.
func (o *HdfsProtectionGroupParams) HasBandwidthMBPS() bool {
	if o != nil && o.BandwidthMBPS.IsSet() {
		return true
	}

	return false
}

// SetBandwidthMBPS gets a reference to the given NullableInt64 and assigns it to the BandwidthMBPS field.
func (o *HdfsProtectionGroupParams) SetBandwidthMBPS(v int64) {
	o.BandwidthMBPS.Set(&v)
}
// SetBandwidthMBPSNil sets the value for BandwidthMBPS to be an explicit nil
func (o *HdfsProtectionGroupParams) SetBandwidthMBPSNil() {
	o.BandwidthMBPS.Set(nil)
}

// UnsetBandwidthMBPS ensures that no value is present for BandwidthMBPS, not even an explicit nil
func (o *HdfsProtectionGroupParams) UnsetBandwidthMBPS() {
	o.BandwidthMBPS.Unset()
}

// GetHdfsSourceId returns the HdfsSourceId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *HdfsProtectionGroupParams) GetHdfsSourceId() int64 {
	if o == nil || o.HdfsSourceId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.HdfsSourceId.Get()
}

// GetHdfsSourceIdOk returns a tuple with the HdfsSourceId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HdfsProtectionGroupParams) GetHdfsSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HdfsSourceId.Get(), o.HdfsSourceId.IsSet()
}

// SetHdfsSourceId sets field value
func (o *HdfsProtectionGroupParams) SetHdfsSourceId(v int64) {
	o.HdfsSourceId.Set(&v)
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HdfsProtectionGroupParams) GetSourceId() int64 {
	if o == nil || o.SourceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HdfsProtectionGroupParams) GetSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *HdfsProtectionGroupParams) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableInt64 and assigns it to the SourceId field.
func (o *HdfsProtectionGroupParams) SetSourceId(v int64) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *HdfsProtectionGroupParams) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *HdfsProtectionGroupParams) UnsetSourceId() {
	o.SourceId.Unset()
}

// GetIndexingPolicy returns the IndexingPolicy field value if set, zero value otherwise.
func (o *HdfsProtectionGroupParams) GetIndexingPolicy() IndexingPolicy {
	if o == nil || o.IndexingPolicy == nil {
		var ret IndexingPolicy
		return ret
	}
	return *o.IndexingPolicy
}

// GetIndexingPolicyOk returns a tuple with the IndexingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HdfsProtectionGroupParams) GetIndexingPolicyOk() (*IndexingPolicy, bool) {
	if o == nil || o.IndexingPolicy == nil {
		return nil, false
	}
	return o.IndexingPolicy, true
}

// HasIndexingPolicy returns a boolean if a field has been set.
func (o *HdfsProtectionGroupParams) HasIndexingPolicy() bool {
	if o != nil && o.IndexingPolicy != nil {
		return true
	}

	return false
}

// SetIndexingPolicy gets a reference to the given IndexingPolicy and assigns it to the IndexingPolicy field.
func (o *HdfsProtectionGroupParams) SetIndexingPolicy(v IndexingPolicy) {
	o.IndexingPolicy = &v
}

// GetSourceName returns the SourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HdfsProtectionGroupParams) GetSourceName() string {
	if o == nil || o.SourceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceName.Get()
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HdfsProtectionGroupParams) GetSourceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceName.Get(), o.SourceName.IsSet()
}

// HasSourceName returns a boolean if a field has been set.
func (o *HdfsProtectionGroupParams) HasSourceName() bool {
	if o != nil && o.SourceName.IsSet() {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given NullableString and assigns it to the SourceName field.
func (o *HdfsProtectionGroupParams) SetSourceName(v string) {
	o.SourceName.Set(&v)
}
// SetSourceNameNil sets the value for SourceName to be an explicit nil
func (o *HdfsProtectionGroupParams) SetSourceNameNil() {
	o.SourceName.Set(nil)
}

// UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil
func (o *HdfsProtectionGroupParams) UnsetSourceName() {
	o.SourceName.Unset()
}

func (o HdfsProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludePaths != nil {
		toSerialize["includePaths"] = o.IncludePaths
	}
	if o.ExcludePaths != nil {
		toSerialize["excludePaths"] = o.ExcludePaths
	}
	if o.Concurrency.IsSet() {
		toSerialize["concurrency"] = o.Concurrency.Get()
	}
	if o.BandwidthMBPS.IsSet() {
		toSerialize["bandwidthMBPS"] = o.BandwidthMBPS.Get()
	}
	if true {
		toSerialize["hdfsSourceId"] = o.HdfsSourceId.Get()
	}
	if o.SourceId.IsSet() {
		toSerialize["sourceId"] = o.SourceId.Get()
	}
	if o.IndexingPolicy != nil {
		toSerialize["indexingPolicy"] = o.IndexingPolicy
	}
	if o.SourceName.IsSet() {
		toSerialize["sourceName"] = o.SourceName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableHdfsProtectionGroupParams struct {
	value *HdfsProtectionGroupParams
	isSet bool
}

func (v NullableHdfsProtectionGroupParams) Get() *HdfsProtectionGroupParams {
	return v.value
}

func (v *NullableHdfsProtectionGroupParams) Set(val *HdfsProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableHdfsProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableHdfsProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHdfsProtectionGroupParams(val *HdfsProtectionGroupParams) *NullableHdfsProtectionGroupParams {
	return &NullableHdfsProtectionGroupParams{value: val, isSet: true}
}

func (v NullableHdfsProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHdfsProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


