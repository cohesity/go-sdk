/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ServiceUnitProgress Specifies the progress of one patch operation for one service at one patch level.
type ServiceUnitProgress struct {
	// Specifies the service which is patched.
	Service NullableString `json:"service,omitempty"`
	// Specifies whether a operation is in progress for the service.
	InProgress NullableBool `json:"inProgress,omitempty"`
	// Specifies the percentage of completion of the patch unit operation.
	Percentage NullableInt64 `json:"percentage,omitempty"`
	// Specifies the time remaining to complete the patch operation for the service.
	TimeRemainingSeconds NullableInt64 `json:"timeRemainingSeconds,omitempty"`
	// Specifies the time taken so far in this patch unit operation for the service.
	TimeTakenSeconds NullableInt64 `json:"timeTakenSeconds,omitempty"`
	// Specifies the details of patch operation for each service at each patch level.
	NodesProgress []NodeUnitProgress `json:"nodesProgress,omitempty"`
	// Specifies a message about the patch unit operation.
	ServiceMessage NullableString `json:"serviceMessage,omitempty"`
}

// NewServiceUnitProgress instantiates a new ServiceUnitProgress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceUnitProgress() *ServiceUnitProgress {
	this := ServiceUnitProgress{}
	return &this
}

// NewServiceUnitProgressWithDefaults instantiates a new ServiceUnitProgress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceUnitProgressWithDefaults() *ServiceUnitProgress {
	this := ServiceUnitProgress{}
	return &this
}

// GetService returns the Service field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceUnitProgress) GetService() string {
	if o == nil || o.Service.Get() == nil {
		var ret string
		return ret
	}
	return *o.Service.Get()
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceUnitProgress) GetServiceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Service.Get(), o.Service.IsSet()
}

// HasService returns a boolean if a field has been set.
func (o *ServiceUnitProgress) HasService() bool {
	if o != nil && o.Service.IsSet() {
		return true
	}

	return false
}

// SetService gets a reference to the given NullableString and assigns it to the Service field.
func (o *ServiceUnitProgress) SetService(v string) {
	o.Service.Set(&v)
}
// SetServiceNil sets the value for Service to be an explicit nil
func (o *ServiceUnitProgress) SetServiceNil() {
	o.Service.Set(nil)
}

// UnsetService ensures that no value is present for Service, not even an explicit nil
func (o *ServiceUnitProgress) UnsetService() {
	o.Service.Unset()
}

// GetInProgress returns the InProgress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceUnitProgress) GetInProgress() bool {
	if o == nil || o.InProgress.Get() == nil {
		var ret bool
		return ret
	}
	return *o.InProgress.Get()
}

// GetInProgressOk returns a tuple with the InProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceUnitProgress) GetInProgressOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InProgress.Get(), o.InProgress.IsSet()
}

// HasInProgress returns a boolean if a field has been set.
func (o *ServiceUnitProgress) HasInProgress() bool {
	if o != nil && o.InProgress.IsSet() {
		return true
	}

	return false
}

// SetInProgress gets a reference to the given NullableBool and assigns it to the InProgress field.
func (o *ServiceUnitProgress) SetInProgress(v bool) {
	o.InProgress.Set(&v)
}
// SetInProgressNil sets the value for InProgress to be an explicit nil
func (o *ServiceUnitProgress) SetInProgressNil() {
	o.InProgress.Set(nil)
}

// UnsetInProgress ensures that no value is present for InProgress, not even an explicit nil
func (o *ServiceUnitProgress) UnsetInProgress() {
	o.InProgress.Unset()
}

// GetPercentage returns the Percentage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceUnitProgress) GetPercentage() int64 {
	if o == nil || o.Percentage.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Percentage.Get()
}

// GetPercentageOk returns a tuple with the Percentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceUnitProgress) GetPercentageOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Percentage.Get(), o.Percentage.IsSet()
}

// HasPercentage returns a boolean if a field has been set.
func (o *ServiceUnitProgress) HasPercentage() bool {
	if o != nil && o.Percentage.IsSet() {
		return true
	}

	return false
}

// SetPercentage gets a reference to the given NullableInt64 and assigns it to the Percentage field.
func (o *ServiceUnitProgress) SetPercentage(v int64) {
	o.Percentage.Set(&v)
}
// SetPercentageNil sets the value for Percentage to be an explicit nil
func (o *ServiceUnitProgress) SetPercentageNil() {
	o.Percentage.Set(nil)
}

// UnsetPercentage ensures that no value is present for Percentage, not even an explicit nil
func (o *ServiceUnitProgress) UnsetPercentage() {
	o.Percentage.Unset()
}

// GetTimeRemainingSeconds returns the TimeRemainingSeconds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceUnitProgress) GetTimeRemainingSeconds() int64 {
	if o == nil || o.TimeRemainingSeconds.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TimeRemainingSeconds.Get()
}

// GetTimeRemainingSecondsOk returns a tuple with the TimeRemainingSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceUnitProgress) GetTimeRemainingSecondsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TimeRemainingSeconds.Get(), o.TimeRemainingSeconds.IsSet()
}

// HasTimeRemainingSeconds returns a boolean if a field has been set.
func (o *ServiceUnitProgress) HasTimeRemainingSeconds() bool {
	if o != nil && o.TimeRemainingSeconds.IsSet() {
		return true
	}

	return false
}

// SetTimeRemainingSeconds gets a reference to the given NullableInt64 and assigns it to the TimeRemainingSeconds field.
func (o *ServiceUnitProgress) SetTimeRemainingSeconds(v int64) {
	o.TimeRemainingSeconds.Set(&v)
}
// SetTimeRemainingSecondsNil sets the value for TimeRemainingSeconds to be an explicit nil
func (o *ServiceUnitProgress) SetTimeRemainingSecondsNil() {
	o.TimeRemainingSeconds.Set(nil)
}

// UnsetTimeRemainingSeconds ensures that no value is present for TimeRemainingSeconds, not even an explicit nil
func (o *ServiceUnitProgress) UnsetTimeRemainingSeconds() {
	o.TimeRemainingSeconds.Unset()
}

// GetTimeTakenSeconds returns the TimeTakenSeconds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceUnitProgress) GetTimeTakenSeconds() int64 {
	if o == nil || o.TimeTakenSeconds.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TimeTakenSeconds.Get()
}

// GetTimeTakenSecondsOk returns a tuple with the TimeTakenSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceUnitProgress) GetTimeTakenSecondsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TimeTakenSeconds.Get(), o.TimeTakenSeconds.IsSet()
}

// HasTimeTakenSeconds returns a boolean if a field has been set.
func (o *ServiceUnitProgress) HasTimeTakenSeconds() bool {
	if o != nil && o.TimeTakenSeconds.IsSet() {
		return true
	}

	return false
}

// SetTimeTakenSeconds gets a reference to the given NullableInt64 and assigns it to the TimeTakenSeconds field.
func (o *ServiceUnitProgress) SetTimeTakenSeconds(v int64) {
	o.TimeTakenSeconds.Set(&v)
}
// SetTimeTakenSecondsNil sets the value for TimeTakenSeconds to be an explicit nil
func (o *ServiceUnitProgress) SetTimeTakenSecondsNil() {
	o.TimeTakenSeconds.Set(nil)
}

// UnsetTimeTakenSeconds ensures that no value is present for TimeTakenSeconds, not even an explicit nil
func (o *ServiceUnitProgress) UnsetTimeTakenSeconds() {
	o.TimeTakenSeconds.Unset()
}

// GetNodesProgress returns the NodesProgress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceUnitProgress) GetNodesProgress() []NodeUnitProgress {
	if o == nil  {
		var ret []NodeUnitProgress
		return ret
	}
	return o.NodesProgress
}

// GetNodesProgressOk returns a tuple with the NodesProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceUnitProgress) GetNodesProgressOk() (*[]NodeUnitProgress, bool) {
	if o == nil || o.NodesProgress == nil {
		return nil, false
	}
	return &o.NodesProgress, true
}

// HasNodesProgress returns a boolean if a field has been set.
func (o *ServiceUnitProgress) HasNodesProgress() bool {
	if o != nil && o.NodesProgress != nil {
		return true
	}

	return false
}

// SetNodesProgress gets a reference to the given []NodeUnitProgress and assigns it to the NodesProgress field.
func (o *ServiceUnitProgress) SetNodesProgress(v []NodeUnitProgress) {
	o.NodesProgress = v
}

// GetServiceMessage returns the ServiceMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceUnitProgress) GetServiceMessage() string {
	if o == nil || o.ServiceMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServiceMessage.Get()
}

// GetServiceMessageOk returns a tuple with the ServiceMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceUnitProgress) GetServiceMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServiceMessage.Get(), o.ServiceMessage.IsSet()
}

// HasServiceMessage returns a boolean if a field has been set.
func (o *ServiceUnitProgress) HasServiceMessage() bool {
	if o != nil && o.ServiceMessage.IsSet() {
		return true
	}

	return false
}

// SetServiceMessage gets a reference to the given NullableString and assigns it to the ServiceMessage field.
func (o *ServiceUnitProgress) SetServiceMessage(v string) {
	o.ServiceMessage.Set(&v)
}
// SetServiceMessageNil sets the value for ServiceMessage to be an explicit nil
func (o *ServiceUnitProgress) SetServiceMessageNil() {
	o.ServiceMessage.Set(nil)
}

// UnsetServiceMessage ensures that no value is present for ServiceMessage, not even an explicit nil
func (o *ServiceUnitProgress) UnsetServiceMessage() {
	o.ServiceMessage.Unset()
}

func (o ServiceUnitProgress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Service.IsSet() {
		toSerialize["service"] = o.Service.Get()
	}
	if o.InProgress.IsSet() {
		toSerialize["inProgress"] = o.InProgress.Get()
	}
	if o.Percentage.IsSet() {
		toSerialize["percentage"] = o.Percentage.Get()
	}
	if o.TimeRemainingSeconds.IsSet() {
		toSerialize["timeRemainingSeconds"] = o.TimeRemainingSeconds.Get()
	}
	if o.TimeTakenSeconds.IsSet() {
		toSerialize["timeTakenSeconds"] = o.TimeTakenSeconds.Get()
	}
	if o.NodesProgress != nil {
		toSerialize["nodesProgress"] = o.NodesProgress
	}
	if o.ServiceMessage.IsSet() {
		toSerialize["serviceMessage"] = o.ServiceMessage.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableServiceUnitProgress struct {
	value *ServiceUnitProgress
	isSet bool
}

func (v NullableServiceUnitProgress) Get() *ServiceUnitProgress {
	return v.value
}

func (v *NullableServiceUnitProgress) Set(val *ServiceUnitProgress) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceUnitProgress) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceUnitProgress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceUnitProgress(val *ServiceUnitProgress) *NullableServiceUnitProgress {
	return &NullableServiceUnitProgress{value: val, isSet: true}
}

func (v NullableServiceUnitProgress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceUnitProgress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


