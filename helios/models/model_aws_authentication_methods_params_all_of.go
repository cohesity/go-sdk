/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// AwsAuthenticationMethodsParamsAllOf struct for AwsAuthenticationMethodsParamsAllOf
type AwsAuthenticationMethodsParamsAllOf struct {
	IAmUserParams *AwsIAmUserParams `json:"iAmUserParams,omitempty"`
	IAmRoleParams *AwsIAmRoleParams `json:"iAmRoleParams,omitempty"`
}

// NewAwsAuthenticationMethodsParamsAllOf instantiates a new AwsAuthenticationMethodsParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsAuthenticationMethodsParamsAllOf() *AwsAuthenticationMethodsParamsAllOf {
	this := AwsAuthenticationMethodsParamsAllOf{}
	return &this
}

// NewAwsAuthenticationMethodsParamsAllOfWithDefaults instantiates a new AwsAuthenticationMethodsParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsAuthenticationMethodsParamsAllOfWithDefaults() *AwsAuthenticationMethodsParamsAllOf {
	this := AwsAuthenticationMethodsParamsAllOf{}
	return &this
}

// GetIAmUserParams returns the IAmUserParams field value if set, zero value otherwise.
func (o *AwsAuthenticationMethodsParamsAllOf) GetIAmUserParams() AwsIAmUserParams {
	if o == nil || o.IAmUserParams == nil {
		var ret AwsIAmUserParams
		return ret
	}
	return *o.IAmUserParams
}

// GetIAmUserParamsOk returns a tuple with the IAmUserParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsAuthenticationMethodsParamsAllOf) GetIAmUserParamsOk() (*AwsIAmUserParams, bool) {
	if o == nil || o.IAmUserParams == nil {
		return nil, false
	}
	return o.IAmUserParams, true
}

// HasIAmUserParams returns a boolean if a field has been set.
func (o *AwsAuthenticationMethodsParamsAllOf) HasIAmUserParams() bool {
	if o != nil && o.IAmUserParams != nil {
		return true
	}

	return false
}

// SetIAmUserParams gets a reference to the given AwsIAmUserParams and assigns it to the IAmUserParams field.
func (o *AwsAuthenticationMethodsParamsAllOf) SetIAmUserParams(v AwsIAmUserParams) {
	o.IAmUserParams = &v
}

// GetIAmRoleParams returns the IAmRoleParams field value if set, zero value otherwise.
func (o *AwsAuthenticationMethodsParamsAllOf) GetIAmRoleParams() AwsIAmRoleParams {
	if o == nil || o.IAmRoleParams == nil {
		var ret AwsIAmRoleParams
		return ret
	}
	return *o.IAmRoleParams
}

// GetIAmRoleParamsOk returns a tuple with the IAmRoleParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsAuthenticationMethodsParamsAllOf) GetIAmRoleParamsOk() (*AwsIAmRoleParams, bool) {
	if o == nil || o.IAmRoleParams == nil {
		return nil, false
	}
	return o.IAmRoleParams, true
}

// HasIAmRoleParams returns a boolean if a field has been set.
func (o *AwsAuthenticationMethodsParamsAllOf) HasIAmRoleParams() bool {
	if o != nil && o.IAmRoleParams != nil {
		return true
	}

	return false
}

// SetIAmRoleParams gets a reference to the given AwsIAmRoleParams and assigns it to the IAmRoleParams field.
func (o *AwsAuthenticationMethodsParamsAllOf) SetIAmRoleParams(v AwsIAmRoleParams) {
	o.IAmRoleParams = &v
}

func (o AwsAuthenticationMethodsParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IAmUserParams != nil {
		toSerialize["iAmUserParams"] = o.IAmUserParams
	}
	if o.IAmRoleParams != nil {
		toSerialize["iAmRoleParams"] = o.IAmRoleParams
	}
	return json.Marshal(toSerialize)
}

type NullableAwsAuthenticationMethodsParamsAllOf struct {
	value *AwsAuthenticationMethodsParamsAllOf
	isSet bool
}

func (v NullableAwsAuthenticationMethodsParamsAllOf) Get() *AwsAuthenticationMethodsParamsAllOf {
	return v.value
}

func (v *NullableAwsAuthenticationMethodsParamsAllOf) Set(val *AwsAuthenticationMethodsParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsAuthenticationMethodsParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsAuthenticationMethodsParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsAuthenticationMethodsParamsAllOf(val *AwsAuthenticationMethodsParamsAllOf) *NullableAwsAuthenticationMethodsParamsAllOf {
	return &NullableAwsAuthenticationMethodsParamsAllOf{value: val, isSet: true}
}

func (v NullableAwsAuthenticationMethodsParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsAuthenticationMethodsParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


