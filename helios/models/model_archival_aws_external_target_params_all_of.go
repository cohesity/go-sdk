/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ArchivalAwsExternalTargetParamsAllOf struct for ArchivalAwsExternalTargetParamsAllOf
type ArchivalAwsExternalTargetParamsAllOf struct {
	AwsS3StandardParams *AwsS3StandardParams `json:"awsS3StandardParams,omitempty"`
	AwsS3StandardIAParams *AwsS3StandardIAParams `json:"awsS3StandardIAParams,omitempty"`
	AwsS3OneZoneIAParams *AwsS3OneZoneIAParams `json:"awsS3OneZoneIAParams,omitempty"`
	AwsS3IntelligentParams *AwsS3IntelligentParams `json:"awsS3IntelligentParams,omitempty"`
	AwsS3GlacierParams *AwsS3GlacierParams `json:"awsS3GlacierParams,omitempty"`
	AwsS3GlacierDeepArchiveParams *AwsS3GlacierDeepArchiveParams `json:"awsS3GlacierDeepArchiveParams,omitempty"`
	AwsGlacierParams *AwsGlacierParams `json:"awsGlacierParams,omitempty"`
}

// NewArchivalAwsExternalTargetParamsAllOf instantiates a new ArchivalAwsExternalTargetParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArchivalAwsExternalTargetParamsAllOf() *ArchivalAwsExternalTargetParamsAllOf {
	this := ArchivalAwsExternalTargetParamsAllOf{}
	return &this
}

// NewArchivalAwsExternalTargetParamsAllOfWithDefaults instantiates a new ArchivalAwsExternalTargetParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArchivalAwsExternalTargetParamsAllOfWithDefaults() *ArchivalAwsExternalTargetParamsAllOf {
	this := ArchivalAwsExternalTargetParamsAllOf{}
	return &this
}

// GetAwsS3StandardParams returns the AwsS3StandardParams field value if set, zero value otherwise.
func (o *ArchivalAwsExternalTargetParamsAllOf) GetAwsS3StandardParams() AwsS3StandardParams {
	if o == nil || o.AwsS3StandardParams == nil {
		var ret AwsS3StandardParams
		return ret
	}
	return *o.AwsS3StandardParams
}

// GetAwsS3StandardParamsOk returns a tuple with the AwsS3StandardParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArchivalAwsExternalTargetParamsAllOf) GetAwsS3StandardParamsOk() (*AwsS3StandardParams, bool) {
	if o == nil || o.AwsS3StandardParams == nil {
		return nil, false
	}
	return o.AwsS3StandardParams, true
}

// HasAwsS3StandardParams returns a boolean if a field has been set.
func (o *ArchivalAwsExternalTargetParamsAllOf) HasAwsS3StandardParams() bool {
	if o != nil && o.AwsS3StandardParams != nil {
		return true
	}

	return false
}

// SetAwsS3StandardParams gets a reference to the given AwsS3StandardParams and assigns it to the AwsS3StandardParams field.
func (o *ArchivalAwsExternalTargetParamsAllOf) SetAwsS3StandardParams(v AwsS3StandardParams) {
	o.AwsS3StandardParams = &v
}

// GetAwsS3StandardIAParams returns the AwsS3StandardIAParams field value if set, zero value otherwise.
func (o *ArchivalAwsExternalTargetParamsAllOf) GetAwsS3StandardIAParams() AwsS3StandardIAParams {
	if o == nil || o.AwsS3StandardIAParams == nil {
		var ret AwsS3StandardIAParams
		return ret
	}
	return *o.AwsS3StandardIAParams
}

// GetAwsS3StandardIAParamsOk returns a tuple with the AwsS3StandardIAParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArchivalAwsExternalTargetParamsAllOf) GetAwsS3StandardIAParamsOk() (*AwsS3StandardIAParams, bool) {
	if o == nil || o.AwsS3StandardIAParams == nil {
		return nil, false
	}
	return o.AwsS3StandardIAParams, true
}

// HasAwsS3StandardIAParams returns a boolean if a field has been set.
func (o *ArchivalAwsExternalTargetParamsAllOf) HasAwsS3StandardIAParams() bool {
	if o != nil && o.AwsS3StandardIAParams != nil {
		return true
	}

	return false
}

// SetAwsS3StandardIAParams gets a reference to the given AwsS3StandardIAParams and assigns it to the AwsS3StandardIAParams field.
func (o *ArchivalAwsExternalTargetParamsAllOf) SetAwsS3StandardIAParams(v AwsS3StandardIAParams) {
	o.AwsS3StandardIAParams = &v
}

// GetAwsS3OneZoneIAParams returns the AwsS3OneZoneIAParams field value if set, zero value otherwise.
func (o *ArchivalAwsExternalTargetParamsAllOf) GetAwsS3OneZoneIAParams() AwsS3OneZoneIAParams {
	if o == nil || o.AwsS3OneZoneIAParams == nil {
		var ret AwsS3OneZoneIAParams
		return ret
	}
	return *o.AwsS3OneZoneIAParams
}

// GetAwsS3OneZoneIAParamsOk returns a tuple with the AwsS3OneZoneIAParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArchivalAwsExternalTargetParamsAllOf) GetAwsS3OneZoneIAParamsOk() (*AwsS3OneZoneIAParams, bool) {
	if o == nil || o.AwsS3OneZoneIAParams == nil {
		return nil, false
	}
	return o.AwsS3OneZoneIAParams, true
}

// HasAwsS3OneZoneIAParams returns a boolean if a field has been set.
func (o *ArchivalAwsExternalTargetParamsAllOf) HasAwsS3OneZoneIAParams() bool {
	if o != nil && o.AwsS3OneZoneIAParams != nil {
		return true
	}

	return false
}

// SetAwsS3OneZoneIAParams gets a reference to the given AwsS3OneZoneIAParams and assigns it to the AwsS3OneZoneIAParams field.
func (o *ArchivalAwsExternalTargetParamsAllOf) SetAwsS3OneZoneIAParams(v AwsS3OneZoneIAParams) {
	o.AwsS3OneZoneIAParams = &v
}

// GetAwsS3IntelligentParams returns the AwsS3IntelligentParams field value if set, zero value otherwise.
func (o *ArchivalAwsExternalTargetParamsAllOf) GetAwsS3IntelligentParams() AwsS3IntelligentParams {
	if o == nil || o.AwsS3IntelligentParams == nil {
		var ret AwsS3IntelligentParams
		return ret
	}
	return *o.AwsS3IntelligentParams
}

// GetAwsS3IntelligentParamsOk returns a tuple with the AwsS3IntelligentParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArchivalAwsExternalTargetParamsAllOf) GetAwsS3IntelligentParamsOk() (*AwsS3IntelligentParams, bool) {
	if o == nil || o.AwsS3IntelligentParams == nil {
		return nil, false
	}
	return o.AwsS3IntelligentParams, true
}

// HasAwsS3IntelligentParams returns a boolean if a field has been set.
func (o *ArchivalAwsExternalTargetParamsAllOf) HasAwsS3IntelligentParams() bool {
	if o != nil && o.AwsS3IntelligentParams != nil {
		return true
	}

	return false
}

// SetAwsS3IntelligentParams gets a reference to the given AwsS3IntelligentParams and assigns it to the AwsS3IntelligentParams field.
func (o *ArchivalAwsExternalTargetParamsAllOf) SetAwsS3IntelligentParams(v AwsS3IntelligentParams) {
	o.AwsS3IntelligentParams = &v
}

// GetAwsS3GlacierParams returns the AwsS3GlacierParams field value if set, zero value otherwise.
func (o *ArchivalAwsExternalTargetParamsAllOf) GetAwsS3GlacierParams() AwsS3GlacierParams {
	if o == nil || o.AwsS3GlacierParams == nil {
		var ret AwsS3GlacierParams
		return ret
	}
	return *o.AwsS3GlacierParams
}

// GetAwsS3GlacierParamsOk returns a tuple with the AwsS3GlacierParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArchivalAwsExternalTargetParamsAllOf) GetAwsS3GlacierParamsOk() (*AwsS3GlacierParams, bool) {
	if o == nil || o.AwsS3GlacierParams == nil {
		return nil, false
	}
	return o.AwsS3GlacierParams, true
}

// HasAwsS3GlacierParams returns a boolean if a field has been set.
func (o *ArchivalAwsExternalTargetParamsAllOf) HasAwsS3GlacierParams() bool {
	if o != nil && o.AwsS3GlacierParams != nil {
		return true
	}

	return false
}

// SetAwsS3GlacierParams gets a reference to the given AwsS3GlacierParams and assigns it to the AwsS3GlacierParams field.
func (o *ArchivalAwsExternalTargetParamsAllOf) SetAwsS3GlacierParams(v AwsS3GlacierParams) {
	o.AwsS3GlacierParams = &v
}

// GetAwsS3GlacierDeepArchiveParams returns the AwsS3GlacierDeepArchiveParams field value if set, zero value otherwise.
func (o *ArchivalAwsExternalTargetParamsAllOf) GetAwsS3GlacierDeepArchiveParams() AwsS3GlacierDeepArchiveParams {
	if o == nil || o.AwsS3GlacierDeepArchiveParams == nil {
		var ret AwsS3GlacierDeepArchiveParams
		return ret
	}
	return *o.AwsS3GlacierDeepArchiveParams
}

// GetAwsS3GlacierDeepArchiveParamsOk returns a tuple with the AwsS3GlacierDeepArchiveParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArchivalAwsExternalTargetParamsAllOf) GetAwsS3GlacierDeepArchiveParamsOk() (*AwsS3GlacierDeepArchiveParams, bool) {
	if o == nil || o.AwsS3GlacierDeepArchiveParams == nil {
		return nil, false
	}
	return o.AwsS3GlacierDeepArchiveParams, true
}

// HasAwsS3GlacierDeepArchiveParams returns a boolean if a field has been set.
func (o *ArchivalAwsExternalTargetParamsAllOf) HasAwsS3GlacierDeepArchiveParams() bool {
	if o != nil && o.AwsS3GlacierDeepArchiveParams != nil {
		return true
	}

	return false
}

// SetAwsS3GlacierDeepArchiveParams gets a reference to the given AwsS3GlacierDeepArchiveParams and assigns it to the AwsS3GlacierDeepArchiveParams field.
func (o *ArchivalAwsExternalTargetParamsAllOf) SetAwsS3GlacierDeepArchiveParams(v AwsS3GlacierDeepArchiveParams) {
	o.AwsS3GlacierDeepArchiveParams = &v
}

// GetAwsGlacierParams returns the AwsGlacierParams field value if set, zero value otherwise.
func (o *ArchivalAwsExternalTargetParamsAllOf) GetAwsGlacierParams() AwsGlacierParams {
	if o == nil || o.AwsGlacierParams == nil {
		var ret AwsGlacierParams
		return ret
	}
	return *o.AwsGlacierParams
}

// GetAwsGlacierParamsOk returns a tuple with the AwsGlacierParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArchivalAwsExternalTargetParamsAllOf) GetAwsGlacierParamsOk() (*AwsGlacierParams, bool) {
	if o == nil || o.AwsGlacierParams == nil {
		return nil, false
	}
	return o.AwsGlacierParams, true
}

// HasAwsGlacierParams returns a boolean if a field has been set.
func (o *ArchivalAwsExternalTargetParamsAllOf) HasAwsGlacierParams() bool {
	if o != nil && o.AwsGlacierParams != nil {
		return true
	}

	return false
}

// SetAwsGlacierParams gets a reference to the given AwsGlacierParams and assigns it to the AwsGlacierParams field.
func (o *ArchivalAwsExternalTargetParamsAllOf) SetAwsGlacierParams(v AwsGlacierParams) {
	o.AwsGlacierParams = &v
}

func (o ArchivalAwsExternalTargetParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AwsS3StandardParams != nil {
		toSerialize["awsS3StandardParams"] = o.AwsS3StandardParams
	}
	if o.AwsS3StandardIAParams != nil {
		toSerialize["awsS3StandardIAParams"] = o.AwsS3StandardIAParams
	}
	if o.AwsS3OneZoneIAParams != nil {
		toSerialize["awsS3OneZoneIAParams"] = o.AwsS3OneZoneIAParams
	}
	if o.AwsS3IntelligentParams != nil {
		toSerialize["awsS3IntelligentParams"] = o.AwsS3IntelligentParams
	}
	if o.AwsS3GlacierParams != nil {
		toSerialize["awsS3GlacierParams"] = o.AwsS3GlacierParams
	}
	if o.AwsS3GlacierDeepArchiveParams != nil {
		toSerialize["awsS3GlacierDeepArchiveParams"] = o.AwsS3GlacierDeepArchiveParams
	}
	if o.AwsGlacierParams != nil {
		toSerialize["awsGlacierParams"] = o.AwsGlacierParams
	}
	return json.Marshal(toSerialize)
}

type NullableArchivalAwsExternalTargetParamsAllOf struct {
	value *ArchivalAwsExternalTargetParamsAllOf
	isSet bool
}

func (v NullableArchivalAwsExternalTargetParamsAllOf) Get() *ArchivalAwsExternalTargetParamsAllOf {
	return v.value
}

func (v *NullableArchivalAwsExternalTargetParamsAllOf) Set(val *ArchivalAwsExternalTargetParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableArchivalAwsExternalTargetParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableArchivalAwsExternalTargetParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArchivalAwsExternalTargetParamsAllOf(val *ArchivalAwsExternalTargetParamsAllOf) *NullableArchivalAwsExternalTargetParamsAllOf {
	return &NullableArchivalAwsExternalTargetParamsAllOf{value: val, isSet: true}
}

func (v NullableArchivalAwsExternalTargetParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArchivalAwsExternalTargetParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


