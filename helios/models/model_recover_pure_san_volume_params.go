/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// RecoverPureSanVolumeParams Specifies the parameters to recover Pure SAN Volume.
type RecoverPureSanVolumeParams struct {
	// Specifies the environment of the recovery target. The corresponding target params must be filled out.
	TargetEnvironment string `json:"targetEnvironment"`
	// Specifies the parameters of the Pure SAN volume to recover to.
	PureTargetParams NullableRecoverPureVolumeTargetParams `json:"pureTargetParams,omitempty"`
}

// NewRecoverPureSanVolumeParams instantiates a new RecoverPureSanVolumeParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverPureSanVolumeParams(targetEnvironment string) *RecoverPureSanVolumeParams {
	this := RecoverPureSanVolumeParams{}
	this.TargetEnvironment = targetEnvironment
	return &this
}

// NewRecoverPureSanVolumeParamsWithDefaults instantiates a new RecoverPureSanVolumeParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverPureSanVolumeParamsWithDefaults() *RecoverPureSanVolumeParams {
	this := RecoverPureSanVolumeParams{}
	return &this
}

// GetTargetEnvironment returns the TargetEnvironment field value
func (o *RecoverPureSanVolumeParams) GetTargetEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetEnvironment
}

// GetTargetEnvironmentOk returns a tuple with the TargetEnvironment field value
// and a boolean to check if the value has been set.
func (o *RecoverPureSanVolumeParams) GetTargetEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TargetEnvironment, true
}

// SetTargetEnvironment sets field value
func (o *RecoverPureSanVolumeParams) SetTargetEnvironment(v string) {
	o.TargetEnvironment = v
}

// GetPureTargetParams returns the PureTargetParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverPureSanVolumeParams) GetPureTargetParams() RecoverPureVolumeTargetParams {
	if o == nil || o.PureTargetParams.Get() == nil {
		var ret RecoverPureVolumeTargetParams
		return ret
	}
	return *o.PureTargetParams.Get()
}

// GetPureTargetParamsOk returns a tuple with the PureTargetParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverPureSanVolumeParams) GetPureTargetParamsOk() (*RecoverPureVolumeTargetParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PureTargetParams.Get(), o.PureTargetParams.IsSet()
}

// HasPureTargetParams returns a boolean if a field has been set.
func (o *RecoverPureSanVolumeParams) HasPureTargetParams() bool {
	if o != nil && o.PureTargetParams.IsSet() {
		return true
	}

	return false
}

// SetPureTargetParams gets a reference to the given NullableRecoverPureVolumeTargetParams and assigns it to the PureTargetParams field.
func (o *RecoverPureSanVolumeParams) SetPureTargetParams(v RecoverPureVolumeTargetParams) {
	o.PureTargetParams.Set(&v)
}
// SetPureTargetParamsNil sets the value for PureTargetParams to be an explicit nil
func (o *RecoverPureSanVolumeParams) SetPureTargetParamsNil() {
	o.PureTargetParams.Set(nil)
}

// UnsetPureTargetParams ensures that no value is present for PureTargetParams, not even an explicit nil
func (o *RecoverPureSanVolumeParams) UnsetPureTargetParams() {
	o.PureTargetParams.Unset()
}

func (o RecoverPureSanVolumeParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["targetEnvironment"] = o.TargetEnvironment
	}
	if o.PureTargetParams.IsSet() {
		toSerialize["pureTargetParams"] = o.PureTargetParams.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverPureSanVolumeParams struct {
	value *RecoverPureSanVolumeParams
	isSet bool
}

func (v NullableRecoverPureSanVolumeParams) Get() *RecoverPureSanVolumeParams {
	return v.value
}

func (v *NullableRecoverPureSanVolumeParams) Set(val *RecoverPureSanVolumeParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverPureSanVolumeParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverPureSanVolumeParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverPureSanVolumeParams(val *RecoverPureSanVolumeParams) *NullableRecoverPureSanVolumeParams {
	return &NullableRecoverPureSanVolumeParams{value: val, isSet: true}
}

func (v NullableRecoverPureSanVolumeParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverPureSanVolumeParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


