/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CreateRecoveryRequestAllOf struct for CreateRecoveryRequestAllOf
type CreateRecoveryRequestAllOf struct {
	VmwareParams *RecoverVmwareParams `json:"vmwareParams,omitempty"`
	AwsParams *RecoverAwsParams `json:"awsParams,omitempty"`
	GcpParams *RecoverGcpParams `json:"gcpParams,omitempty"`
	AzureParams *RecoverAzureParams `json:"azureParams,omitempty"`
	KvmParams *RecoverKvmParams `json:"kvmParams,omitempty"`
	AcropolisParams *RecoverAcropolisParams `json:"acropolisParams,omitempty"`
	MssqlParams *RecoverSqlParams `json:"mssqlParams,omitempty"`
	NetappParams *RecoverNetappParams `json:"netappParams,omitempty"`
	GenericNasParams *RecoverGenericNasParams `json:"genericNasParams,omitempty"`
	IsilonParams *RecoverIsilonParams `json:"isilonParams,omitempty"`
	FlashbladeParams *RecoverFlashbladeParams `json:"flashbladeParams,omitempty"`
	ElastifileParams *RecoverElastifileParams `json:"elastifileParams,omitempty"`
	GpfsParams *RecoverGpfsParams `json:"gpfsParams,omitempty"`
	PhysicalParams *RecoverPhysicalParams `json:"physicalParams,omitempty"`
	HypervParams *RecoverHyperVParams `json:"hypervParams,omitempty"`
	ExchangeParams *RecoverExchangeParams `json:"exchangeParams,omitempty"`
	CassandraParams *CassandraParams `json:"cassandraParams,omitempty"`
	UdaParams *UdaParams `json:"udaParams,omitempty"`
	CouchbaseParams *CouchbaseParams `json:"couchbaseParams,omitempty"`
	HbaseParams *HbaseParams `json:"hbaseParams,omitempty"`
	HdfsParams *HdfsParams `json:"hdfsParams,omitempty"`
	HiveParams *HiveParams `json:"hiveParams,omitempty"`
	MongodbParams *MongodbParams `json:"mongodbParams,omitempty"`
	PureParams *RecoverPureParams `json:"pureParams,omitempty"`
	KubernetesParams *RecoverKubernetesParams `json:"kubernetesParams,omitempty"`
	Office365Params *RecoverO365Params `json:"office365Params,omitempty"`
	OracleParams *RecoverOracleParams `json:"oracleParams,omitempty"`
}

// NewCreateRecoveryRequestAllOf instantiates a new CreateRecoveryRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRecoveryRequestAllOf() *CreateRecoveryRequestAllOf {
	this := CreateRecoveryRequestAllOf{}
	return &this
}

// NewCreateRecoveryRequestAllOfWithDefaults instantiates a new CreateRecoveryRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRecoveryRequestAllOfWithDefaults() *CreateRecoveryRequestAllOf {
	this := CreateRecoveryRequestAllOf{}
	return &this
}

// GetVmwareParams returns the VmwareParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetVmwareParams() RecoverVmwareParams {
	if o == nil || o.VmwareParams == nil {
		var ret RecoverVmwareParams
		return ret
	}
	return *o.VmwareParams
}

// GetVmwareParamsOk returns a tuple with the VmwareParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetVmwareParamsOk() (*RecoverVmwareParams, bool) {
	if o == nil || o.VmwareParams == nil {
		return nil, false
	}
	return o.VmwareParams, true
}

// HasVmwareParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasVmwareParams() bool {
	if o != nil && o.VmwareParams != nil {
		return true
	}

	return false
}

// SetVmwareParams gets a reference to the given RecoverVmwareParams and assigns it to the VmwareParams field.
func (o *CreateRecoveryRequestAllOf) SetVmwareParams(v RecoverVmwareParams) {
	o.VmwareParams = &v
}

// GetAwsParams returns the AwsParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetAwsParams() RecoverAwsParams {
	if o == nil || o.AwsParams == nil {
		var ret RecoverAwsParams
		return ret
	}
	return *o.AwsParams
}

// GetAwsParamsOk returns a tuple with the AwsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetAwsParamsOk() (*RecoverAwsParams, bool) {
	if o == nil || o.AwsParams == nil {
		return nil, false
	}
	return o.AwsParams, true
}

// HasAwsParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasAwsParams() bool {
	if o != nil && o.AwsParams != nil {
		return true
	}

	return false
}

// SetAwsParams gets a reference to the given RecoverAwsParams and assigns it to the AwsParams field.
func (o *CreateRecoveryRequestAllOf) SetAwsParams(v RecoverAwsParams) {
	o.AwsParams = &v
}

// GetGcpParams returns the GcpParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetGcpParams() RecoverGcpParams {
	if o == nil || o.GcpParams == nil {
		var ret RecoverGcpParams
		return ret
	}
	return *o.GcpParams
}

// GetGcpParamsOk returns a tuple with the GcpParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetGcpParamsOk() (*RecoverGcpParams, bool) {
	if o == nil || o.GcpParams == nil {
		return nil, false
	}
	return o.GcpParams, true
}

// HasGcpParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasGcpParams() bool {
	if o != nil && o.GcpParams != nil {
		return true
	}

	return false
}

// SetGcpParams gets a reference to the given RecoverGcpParams and assigns it to the GcpParams field.
func (o *CreateRecoveryRequestAllOf) SetGcpParams(v RecoverGcpParams) {
	o.GcpParams = &v
}

// GetAzureParams returns the AzureParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetAzureParams() RecoverAzureParams {
	if o == nil || o.AzureParams == nil {
		var ret RecoverAzureParams
		return ret
	}
	return *o.AzureParams
}

// GetAzureParamsOk returns a tuple with the AzureParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetAzureParamsOk() (*RecoverAzureParams, bool) {
	if o == nil || o.AzureParams == nil {
		return nil, false
	}
	return o.AzureParams, true
}

// HasAzureParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasAzureParams() bool {
	if o != nil && o.AzureParams != nil {
		return true
	}

	return false
}

// SetAzureParams gets a reference to the given RecoverAzureParams and assigns it to the AzureParams field.
func (o *CreateRecoveryRequestAllOf) SetAzureParams(v RecoverAzureParams) {
	o.AzureParams = &v
}

// GetKvmParams returns the KvmParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetKvmParams() RecoverKvmParams {
	if o == nil || o.KvmParams == nil {
		var ret RecoverKvmParams
		return ret
	}
	return *o.KvmParams
}

// GetKvmParamsOk returns a tuple with the KvmParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetKvmParamsOk() (*RecoverKvmParams, bool) {
	if o == nil || o.KvmParams == nil {
		return nil, false
	}
	return o.KvmParams, true
}

// HasKvmParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasKvmParams() bool {
	if o != nil && o.KvmParams != nil {
		return true
	}

	return false
}

// SetKvmParams gets a reference to the given RecoverKvmParams and assigns it to the KvmParams field.
func (o *CreateRecoveryRequestAllOf) SetKvmParams(v RecoverKvmParams) {
	o.KvmParams = &v
}

// GetAcropolisParams returns the AcropolisParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetAcropolisParams() RecoverAcropolisParams {
	if o == nil || o.AcropolisParams == nil {
		var ret RecoverAcropolisParams
		return ret
	}
	return *o.AcropolisParams
}

// GetAcropolisParamsOk returns a tuple with the AcropolisParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetAcropolisParamsOk() (*RecoverAcropolisParams, bool) {
	if o == nil || o.AcropolisParams == nil {
		return nil, false
	}
	return o.AcropolisParams, true
}

// HasAcropolisParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasAcropolisParams() bool {
	if o != nil && o.AcropolisParams != nil {
		return true
	}

	return false
}

// SetAcropolisParams gets a reference to the given RecoverAcropolisParams and assigns it to the AcropolisParams field.
func (o *CreateRecoveryRequestAllOf) SetAcropolisParams(v RecoverAcropolisParams) {
	o.AcropolisParams = &v
}

// GetMssqlParams returns the MssqlParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetMssqlParams() RecoverSqlParams {
	if o == nil || o.MssqlParams == nil {
		var ret RecoverSqlParams
		return ret
	}
	return *o.MssqlParams
}

// GetMssqlParamsOk returns a tuple with the MssqlParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetMssqlParamsOk() (*RecoverSqlParams, bool) {
	if o == nil || o.MssqlParams == nil {
		return nil, false
	}
	return o.MssqlParams, true
}

// HasMssqlParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasMssqlParams() bool {
	if o != nil && o.MssqlParams != nil {
		return true
	}

	return false
}

// SetMssqlParams gets a reference to the given RecoverSqlParams and assigns it to the MssqlParams field.
func (o *CreateRecoveryRequestAllOf) SetMssqlParams(v RecoverSqlParams) {
	o.MssqlParams = &v
}

// GetNetappParams returns the NetappParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetNetappParams() RecoverNetappParams {
	if o == nil || o.NetappParams == nil {
		var ret RecoverNetappParams
		return ret
	}
	return *o.NetappParams
}

// GetNetappParamsOk returns a tuple with the NetappParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetNetappParamsOk() (*RecoverNetappParams, bool) {
	if o == nil || o.NetappParams == nil {
		return nil, false
	}
	return o.NetappParams, true
}

// HasNetappParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasNetappParams() bool {
	if o != nil && o.NetappParams != nil {
		return true
	}

	return false
}

// SetNetappParams gets a reference to the given RecoverNetappParams and assigns it to the NetappParams field.
func (o *CreateRecoveryRequestAllOf) SetNetappParams(v RecoverNetappParams) {
	o.NetappParams = &v
}

// GetGenericNasParams returns the GenericNasParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetGenericNasParams() RecoverGenericNasParams {
	if o == nil || o.GenericNasParams == nil {
		var ret RecoverGenericNasParams
		return ret
	}
	return *o.GenericNasParams
}

// GetGenericNasParamsOk returns a tuple with the GenericNasParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetGenericNasParamsOk() (*RecoverGenericNasParams, bool) {
	if o == nil || o.GenericNasParams == nil {
		return nil, false
	}
	return o.GenericNasParams, true
}

// HasGenericNasParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasGenericNasParams() bool {
	if o != nil && o.GenericNasParams != nil {
		return true
	}

	return false
}

// SetGenericNasParams gets a reference to the given RecoverGenericNasParams and assigns it to the GenericNasParams field.
func (o *CreateRecoveryRequestAllOf) SetGenericNasParams(v RecoverGenericNasParams) {
	o.GenericNasParams = &v
}

// GetIsilonParams returns the IsilonParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetIsilonParams() RecoverIsilonParams {
	if o == nil || o.IsilonParams == nil {
		var ret RecoverIsilonParams
		return ret
	}
	return *o.IsilonParams
}

// GetIsilonParamsOk returns a tuple with the IsilonParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetIsilonParamsOk() (*RecoverIsilonParams, bool) {
	if o == nil || o.IsilonParams == nil {
		return nil, false
	}
	return o.IsilonParams, true
}

// HasIsilonParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasIsilonParams() bool {
	if o != nil && o.IsilonParams != nil {
		return true
	}

	return false
}

// SetIsilonParams gets a reference to the given RecoverIsilonParams and assigns it to the IsilonParams field.
func (o *CreateRecoveryRequestAllOf) SetIsilonParams(v RecoverIsilonParams) {
	o.IsilonParams = &v
}

// GetFlashbladeParams returns the FlashbladeParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetFlashbladeParams() RecoverFlashbladeParams {
	if o == nil || o.FlashbladeParams == nil {
		var ret RecoverFlashbladeParams
		return ret
	}
	return *o.FlashbladeParams
}

// GetFlashbladeParamsOk returns a tuple with the FlashbladeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetFlashbladeParamsOk() (*RecoverFlashbladeParams, bool) {
	if o == nil || o.FlashbladeParams == nil {
		return nil, false
	}
	return o.FlashbladeParams, true
}

// HasFlashbladeParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasFlashbladeParams() bool {
	if o != nil && o.FlashbladeParams != nil {
		return true
	}

	return false
}

// SetFlashbladeParams gets a reference to the given RecoverFlashbladeParams and assigns it to the FlashbladeParams field.
func (o *CreateRecoveryRequestAllOf) SetFlashbladeParams(v RecoverFlashbladeParams) {
	o.FlashbladeParams = &v
}

// GetElastifileParams returns the ElastifileParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetElastifileParams() RecoverElastifileParams {
	if o == nil || o.ElastifileParams == nil {
		var ret RecoverElastifileParams
		return ret
	}
	return *o.ElastifileParams
}

// GetElastifileParamsOk returns a tuple with the ElastifileParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetElastifileParamsOk() (*RecoverElastifileParams, bool) {
	if o == nil || o.ElastifileParams == nil {
		return nil, false
	}
	return o.ElastifileParams, true
}

// HasElastifileParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasElastifileParams() bool {
	if o != nil && o.ElastifileParams != nil {
		return true
	}

	return false
}

// SetElastifileParams gets a reference to the given RecoverElastifileParams and assigns it to the ElastifileParams field.
func (o *CreateRecoveryRequestAllOf) SetElastifileParams(v RecoverElastifileParams) {
	o.ElastifileParams = &v
}

// GetGpfsParams returns the GpfsParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetGpfsParams() RecoverGpfsParams {
	if o == nil || o.GpfsParams == nil {
		var ret RecoverGpfsParams
		return ret
	}
	return *o.GpfsParams
}

// GetGpfsParamsOk returns a tuple with the GpfsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetGpfsParamsOk() (*RecoverGpfsParams, bool) {
	if o == nil || o.GpfsParams == nil {
		return nil, false
	}
	return o.GpfsParams, true
}

// HasGpfsParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasGpfsParams() bool {
	if o != nil && o.GpfsParams != nil {
		return true
	}

	return false
}

// SetGpfsParams gets a reference to the given RecoverGpfsParams and assigns it to the GpfsParams field.
func (o *CreateRecoveryRequestAllOf) SetGpfsParams(v RecoverGpfsParams) {
	o.GpfsParams = &v
}

// GetPhysicalParams returns the PhysicalParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetPhysicalParams() RecoverPhysicalParams {
	if o == nil || o.PhysicalParams == nil {
		var ret RecoverPhysicalParams
		return ret
	}
	return *o.PhysicalParams
}

// GetPhysicalParamsOk returns a tuple with the PhysicalParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetPhysicalParamsOk() (*RecoverPhysicalParams, bool) {
	if o == nil || o.PhysicalParams == nil {
		return nil, false
	}
	return o.PhysicalParams, true
}

// HasPhysicalParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasPhysicalParams() bool {
	if o != nil && o.PhysicalParams != nil {
		return true
	}

	return false
}

// SetPhysicalParams gets a reference to the given RecoverPhysicalParams and assigns it to the PhysicalParams field.
func (o *CreateRecoveryRequestAllOf) SetPhysicalParams(v RecoverPhysicalParams) {
	o.PhysicalParams = &v
}

// GetHypervParams returns the HypervParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetHypervParams() RecoverHyperVParams {
	if o == nil || o.HypervParams == nil {
		var ret RecoverHyperVParams
		return ret
	}
	return *o.HypervParams
}

// GetHypervParamsOk returns a tuple with the HypervParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetHypervParamsOk() (*RecoverHyperVParams, bool) {
	if o == nil || o.HypervParams == nil {
		return nil, false
	}
	return o.HypervParams, true
}

// HasHypervParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasHypervParams() bool {
	if o != nil && o.HypervParams != nil {
		return true
	}

	return false
}

// SetHypervParams gets a reference to the given RecoverHyperVParams and assigns it to the HypervParams field.
func (o *CreateRecoveryRequestAllOf) SetHypervParams(v RecoverHyperVParams) {
	o.HypervParams = &v
}

// GetExchangeParams returns the ExchangeParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetExchangeParams() RecoverExchangeParams {
	if o == nil || o.ExchangeParams == nil {
		var ret RecoverExchangeParams
		return ret
	}
	return *o.ExchangeParams
}

// GetExchangeParamsOk returns a tuple with the ExchangeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetExchangeParamsOk() (*RecoverExchangeParams, bool) {
	if o == nil || o.ExchangeParams == nil {
		return nil, false
	}
	return o.ExchangeParams, true
}

// HasExchangeParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasExchangeParams() bool {
	if o != nil && o.ExchangeParams != nil {
		return true
	}

	return false
}

// SetExchangeParams gets a reference to the given RecoverExchangeParams and assigns it to the ExchangeParams field.
func (o *CreateRecoveryRequestAllOf) SetExchangeParams(v RecoverExchangeParams) {
	o.ExchangeParams = &v
}

// GetCassandraParams returns the CassandraParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetCassandraParams() CassandraParams {
	if o == nil || o.CassandraParams == nil {
		var ret CassandraParams
		return ret
	}
	return *o.CassandraParams
}

// GetCassandraParamsOk returns a tuple with the CassandraParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetCassandraParamsOk() (*CassandraParams, bool) {
	if o == nil || o.CassandraParams == nil {
		return nil, false
	}
	return o.CassandraParams, true
}

// HasCassandraParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasCassandraParams() bool {
	if o != nil && o.CassandraParams != nil {
		return true
	}

	return false
}

// SetCassandraParams gets a reference to the given CassandraParams and assigns it to the CassandraParams field.
func (o *CreateRecoveryRequestAllOf) SetCassandraParams(v CassandraParams) {
	o.CassandraParams = &v
}

// GetUdaParams returns the UdaParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetUdaParams() UdaParams {
	if o == nil || o.UdaParams == nil {
		var ret UdaParams
		return ret
	}
	return *o.UdaParams
}

// GetUdaParamsOk returns a tuple with the UdaParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetUdaParamsOk() (*UdaParams, bool) {
	if o == nil || o.UdaParams == nil {
		return nil, false
	}
	return o.UdaParams, true
}

// HasUdaParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasUdaParams() bool {
	if o != nil && o.UdaParams != nil {
		return true
	}

	return false
}

// SetUdaParams gets a reference to the given UdaParams and assigns it to the UdaParams field.
func (o *CreateRecoveryRequestAllOf) SetUdaParams(v UdaParams) {
	o.UdaParams = &v
}

// GetCouchbaseParams returns the CouchbaseParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetCouchbaseParams() CouchbaseParams {
	if o == nil || o.CouchbaseParams == nil {
		var ret CouchbaseParams
		return ret
	}
	return *o.CouchbaseParams
}

// GetCouchbaseParamsOk returns a tuple with the CouchbaseParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetCouchbaseParamsOk() (*CouchbaseParams, bool) {
	if o == nil || o.CouchbaseParams == nil {
		return nil, false
	}
	return o.CouchbaseParams, true
}

// HasCouchbaseParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasCouchbaseParams() bool {
	if o != nil && o.CouchbaseParams != nil {
		return true
	}

	return false
}

// SetCouchbaseParams gets a reference to the given CouchbaseParams and assigns it to the CouchbaseParams field.
func (o *CreateRecoveryRequestAllOf) SetCouchbaseParams(v CouchbaseParams) {
	o.CouchbaseParams = &v
}

// GetHbaseParams returns the HbaseParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetHbaseParams() HbaseParams {
	if o == nil || o.HbaseParams == nil {
		var ret HbaseParams
		return ret
	}
	return *o.HbaseParams
}

// GetHbaseParamsOk returns a tuple with the HbaseParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetHbaseParamsOk() (*HbaseParams, bool) {
	if o == nil || o.HbaseParams == nil {
		return nil, false
	}
	return o.HbaseParams, true
}

// HasHbaseParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasHbaseParams() bool {
	if o != nil && o.HbaseParams != nil {
		return true
	}

	return false
}

// SetHbaseParams gets a reference to the given HbaseParams and assigns it to the HbaseParams field.
func (o *CreateRecoveryRequestAllOf) SetHbaseParams(v HbaseParams) {
	o.HbaseParams = &v
}

// GetHdfsParams returns the HdfsParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetHdfsParams() HdfsParams {
	if o == nil || o.HdfsParams == nil {
		var ret HdfsParams
		return ret
	}
	return *o.HdfsParams
}

// GetHdfsParamsOk returns a tuple with the HdfsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetHdfsParamsOk() (*HdfsParams, bool) {
	if o == nil || o.HdfsParams == nil {
		return nil, false
	}
	return o.HdfsParams, true
}

// HasHdfsParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasHdfsParams() bool {
	if o != nil && o.HdfsParams != nil {
		return true
	}

	return false
}

// SetHdfsParams gets a reference to the given HdfsParams and assigns it to the HdfsParams field.
func (o *CreateRecoveryRequestAllOf) SetHdfsParams(v HdfsParams) {
	o.HdfsParams = &v
}

// GetHiveParams returns the HiveParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetHiveParams() HiveParams {
	if o == nil || o.HiveParams == nil {
		var ret HiveParams
		return ret
	}
	return *o.HiveParams
}

// GetHiveParamsOk returns a tuple with the HiveParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetHiveParamsOk() (*HiveParams, bool) {
	if o == nil || o.HiveParams == nil {
		return nil, false
	}
	return o.HiveParams, true
}

// HasHiveParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasHiveParams() bool {
	if o != nil && o.HiveParams != nil {
		return true
	}

	return false
}

// SetHiveParams gets a reference to the given HiveParams and assigns it to the HiveParams field.
func (o *CreateRecoveryRequestAllOf) SetHiveParams(v HiveParams) {
	o.HiveParams = &v
}

// GetMongodbParams returns the MongodbParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetMongodbParams() MongodbParams {
	if o == nil || o.MongodbParams == nil {
		var ret MongodbParams
		return ret
	}
	return *o.MongodbParams
}

// GetMongodbParamsOk returns a tuple with the MongodbParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetMongodbParamsOk() (*MongodbParams, bool) {
	if o == nil || o.MongodbParams == nil {
		return nil, false
	}
	return o.MongodbParams, true
}

// HasMongodbParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasMongodbParams() bool {
	if o != nil && o.MongodbParams != nil {
		return true
	}

	return false
}

// SetMongodbParams gets a reference to the given MongodbParams and assigns it to the MongodbParams field.
func (o *CreateRecoveryRequestAllOf) SetMongodbParams(v MongodbParams) {
	o.MongodbParams = &v
}

// GetPureParams returns the PureParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetPureParams() RecoverPureParams {
	if o == nil || o.PureParams == nil {
		var ret RecoverPureParams
		return ret
	}
	return *o.PureParams
}

// GetPureParamsOk returns a tuple with the PureParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetPureParamsOk() (*RecoverPureParams, bool) {
	if o == nil || o.PureParams == nil {
		return nil, false
	}
	return o.PureParams, true
}

// HasPureParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasPureParams() bool {
	if o != nil && o.PureParams != nil {
		return true
	}

	return false
}

// SetPureParams gets a reference to the given RecoverPureParams and assigns it to the PureParams field.
func (o *CreateRecoveryRequestAllOf) SetPureParams(v RecoverPureParams) {
	o.PureParams = &v
}

// GetKubernetesParams returns the KubernetesParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetKubernetesParams() RecoverKubernetesParams {
	if o == nil || o.KubernetesParams == nil {
		var ret RecoverKubernetesParams
		return ret
	}
	return *o.KubernetesParams
}

// GetKubernetesParamsOk returns a tuple with the KubernetesParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetKubernetesParamsOk() (*RecoverKubernetesParams, bool) {
	if o == nil || o.KubernetesParams == nil {
		return nil, false
	}
	return o.KubernetesParams, true
}

// HasKubernetesParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasKubernetesParams() bool {
	if o != nil && o.KubernetesParams != nil {
		return true
	}

	return false
}

// SetKubernetesParams gets a reference to the given RecoverKubernetesParams and assigns it to the KubernetesParams field.
func (o *CreateRecoveryRequestAllOf) SetKubernetesParams(v RecoverKubernetesParams) {
	o.KubernetesParams = &v
}

// GetOffice365Params returns the Office365Params field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetOffice365Params() RecoverO365Params {
	if o == nil || o.Office365Params == nil {
		var ret RecoverO365Params
		return ret
	}
	return *o.Office365Params
}

// GetOffice365ParamsOk returns a tuple with the Office365Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetOffice365ParamsOk() (*RecoverO365Params, bool) {
	if o == nil || o.Office365Params == nil {
		return nil, false
	}
	return o.Office365Params, true
}

// HasOffice365Params returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasOffice365Params() bool {
	if o != nil && o.Office365Params != nil {
		return true
	}

	return false
}

// SetOffice365Params gets a reference to the given RecoverO365Params and assigns it to the Office365Params field.
func (o *CreateRecoveryRequestAllOf) SetOffice365Params(v RecoverO365Params) {
	o.Office365Params = &v
}

// GetOracleParams returns the OracleParams field value if set, zero value otherwise.
func (o *CreateRecoveryRequestAllOf) GetOracleParams() RecoverOracleParams {
	if o == nil || o.OracleParams == nil {
		var ret RecoverOracleParams
		return ret
	}
	return *o.OracleParams
}

// GetOracleParamsOk returns a tuple with the OracleParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecoveryRequestAllOf) GetOracleParamsOk() (*RecoverOracleParams, bool) {
	if o == nil || o.OracleParams == nil {
		return nil, false
	}
	return o.OracleParams, true
}

// HasOracleParams returns a boolean if a field has been set.
func (o *CreateRecoveryRequestAllOf) HasOracleParams() bool {
	if o != nil && o.OracleParams != nil {
		return true
	}

	return false
}

// SetOracleParams gets a reference to the given RecoverOracleParams and assigns it to the OracleParams field.
func (o *CreateRecoveryRequestAllOf) SetOracleParams(v RecoverOracleParams) {
	o.OracleParams = &v
}

func (o CreateRecoveryRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VmwareParams != nil {
		toSerialize["vmwareParams"] = o.VmwareParams
	}
	if o.AwsParams != nil {
		toSerialize["awsParams"] = o.AwsParams
	}
	if o.GcpParams != nil {
		toSerialize["gcpParams"] = o.GcpParams
	}
	if o.AzureParams != nil {
		toSerialize["azureParams"] = o.AzureParams
	}
	if o.KvmParams != nil {
		toSerialize["kvmParams"] = o.KvmParams
	}
	if o.AcropolisParams != nil {
		toSerialize["acropolisParams"] = o.AcropolisParams
	}
	if o.MssqlParams != nil {
		toSerialize["mssqlParams"] = o.MssqlParams
	}
	if o.NetappParams != nil {
		toSerialize["netappParams"] = o.NetappParams
	}
	if o.GenericNasParams != nil {
		toSerialize["genericNasParams"] = o.GenericNasParams
	}
	if o.IsilonParams != nil {
		toSerialize["isilonParams"] = o.IsilonParams
	}
	if o.FlashbladeParams != nil {
		toSerialize["flashbladeParams"] = o.FlashbladeParams
	}
	if o.ElastifileParams != nil {
		toSerialize["elastifileParams"] = o.ElastifileParams
	}
	if o.GpfsParams != nil {
		toSerialize["gpfsParams"] = o.GpfsParams
	}
	if o.PhysicalParams != nil {
		toSerialize["physicalParams"] = o.PhysicalParams
	}
	if o.HypervParams != nil {
		toSerialize["hypervParams"] = o.HypervParams
	}
	if o.ExchangeParams != nil {
		toSerialize["exchangeParams"] = o.ExchangeParams
	}
	if o.CassandraParams != nil {
		toSerialize["cassandraParams"] = o.CassandraParams
	}
	if o.UdaParams != nil {
		toSerialize["udaParams"] = o.UdaParams
	}
	if o.CouchbaseParams != nil {
		toSerialize["couchbaseParams"] = o.CouchbaseParams
	}
	if o.HbaseParams != nil {
		toSerialize["hbaseParams"] = o.HbaseParams
	}
	if o.HdfsParams != nil {
		toSerialize["hdfsParams"] = o.HdfsParams
	}
	if o.HiveParams != nil {
		toSerialize["hiveParams"] = o.HiveParams
	}
	if o.MongodbParams != nil {
		toSerialize["mongodbParams"] = o.MongodbParams
	}
	if o.PureParams != nil {
		toSerialize["pureParams"] = o.PureParams
	}
	if o.KubernetesParams != nil {
		toSerialize["kubernetesParams"] = o.KubernetesParams
	}
	if o.Office365Params != nil {
		toSerialize["office365Params"] = o.Office365Params
	}
	if o.OracleParams != nil {
		toSerialize["oracleParams"] = o.OracleParams
	}
	return json.Marshal(toSerialize)
}

type NullableCreateRecoveryRequestAllOf struct {
	value *CreateRecoveryRequestAllOf
	isSet bool
}

func (v NullableCreateRecoveryRequestAllOf) Get() *CreateRecoveryRequestAllOf {
	return v.value
}

func (v *NullableCreateRecoveryRequestAllOf) Set(val *CreateRecoveryRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRecoveryRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRecoveryRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRecoveryRequestAllOf(val *CreateRecoveryRequestAllOf) *NullableCreateRecoveryRequestAllOf {
	return &NullableCreateRecoveryRequestAllOf{value: val, isSet: true}
}

func (v NullableCreateRecoveryRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRecoveryRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


