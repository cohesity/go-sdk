/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// RecoverOracleNewTargetViewConfig Specifies recovery parameters when recovering to a view.
type RecoverOracleNewTargetViewConfig struct {
	// Specifies the directory where cohesity view for app recovery will be mounted.
	ViewMountPath NullableString `json:"viewMountPath,omitempty"`
	// Specifies the time in the past to which the Oracle db needs to be restored. This allows for granular recovery of Oracle databases. If this is not set, the Oracle db will be restored from the full/incremental snapshot.
	RestoreTimeUsecs NullableInt64 `json:"restoreTimeUsecs,omitempty"`
	// Specifies the Oracle database node channels info. If not specified, the default values assigned by the server are applied to all the databases.
	DbChannels []OracleDbChannel `json:"dbChannels,omitempty"`
	// Specifies if database should be left in recovery mode.
	RecoveryMode NullableBool `json:"recoveryMode,omitempty"`
	// Specifies key value pairs of shell variables which defines the restore shell environment.
	ShellEvironmentVars []ShellKeyValuePair `json:"shellEvironmentVars,omitempty"`
	// Specifies information about list of objects (PDBs) to restore.
	GranularRestoreInfo *RecoverOracleGranularRestoreInfo `json:"granularRestoreInfo,omitempty"`
	// Specifies Range in Time, Scn or Sequence to restore archive logs of a DB.
	OracleArchiveLogInfo *OracleArchiveLogInfo `json:"oracleArchiveLogInfo,omitempty"`
}

// NewRecoverOracleNewTargetViewConfig instantiates a new RecoverOracleNewTargetViewConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverOracleNewTargetViewConfig() *RecoverOracleNewTargetViewConfig {
	this := RecoverOracleNewTargetViewConfig{}
	return &this
}

// NewRecoverOracleNewTargetViewConfigWithDefaults instantiates a new RecoverOracleNewTargetViewConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverOracleNewTargetViewConfigWithDefaults() *RecoverOracleNewTargetViewConfig {
	this := RecoverOracleNewTargetViewConfig{}
	return &this
}

// GetViewMountPath returns the ViewMountPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverOracleNewTargetViewConfig) GetViewMountPath() string {
	if o == nil || o.ViewMountPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.ViewMountPath.Get()
}

// GetViewMountPathOk returns a tuple with the ViewMountPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverOracleNewTargetViewConfig) GetViewMountPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewMountPath.Get(), o.ViewMountPath.IsSet()
}

// HasViewMountPath returns a boolean if a field has been set.
func (o *RecoverOracleNewTargetViewConfig) HasViewMountPath() bool {
	if o != nil && o.ViewMountPath.IsSet() {
		return true
	}

	return false
}

// SetViewMountPath gets a reference to the given NullableString and assigns it to the ViewMountPath field.
func (o *RecoverOracleNewTargetViewConfig) SetViewMountPath(v string) {
	o.ViewMountPath.Set(&v)
}
// SetViewMountPathNil sets the value for ViewMountPath to be an explicit nil
func (o *RecoverOracleNewTargetViewConfig) SetViewMountPathNil() {
	o.ViewMountPath.Set(nil)
}

// UnsetViewMountPath ensures that no value is present for ViewMountPath, not even an explicit nil
func (o *RecoverOracleNewTargetViewConfig) UnsetViewMountPath() {
	o.ViewMountPath.Unset()
}

// GetRestoreTimeUsecs returns the RestoreTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverOracleNewTargetViewConfig) GetRestoreTimeUsecs() int64 {
	if o == nil || o.RestoreTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RestoreTimeUsecs.Get()
}

// GetRestoreTimeUsecsOk returns a tuple with the RestoreTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverOracleNewTargetViewConfig) GetRestoreTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RestoreTimeUsecs.Get(), o.RestoreTimeUsecs.IsSet()
}

// HasRestoreTimeUsecs returns a boolean if a field has been set.
func (o *RecoverOracleNewTargetViewConfig) HasRestoreTimeUsecs() bool {
	if o != nil && o.RestoreTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetRestoreTimeUsecs gets a reference to the given NullableInt64 and assigns it to the RestoreTimeUsecs field.
func (o *RecoverOracleNewTargetViewConfig) SetRestoreTimeUsecs(v int64) {
	o.RestoreTimeUsecs.Set(&v)
}
// SetRestoreTimeUsecsNil sets the value for RestoreTimeUsecs to be an explicit nil
func (o *RecoverOracleNewTargetViewConfig) SetRestoreTimeUsecsNil() {
	o.RestoreTimeUsecs.Set(nil)
}

// UnsetRestoreTimeUsecs ensures that no value is present for RestoreTimeUsecs, not even an explicit nil
func (o *RecoverOracleNewTargetViewConfig) UnsetRestoreTimeUsecs() {
	o.RestoreTimeUsecs.Unset()
}

// GetDbChannels returns the DbChannels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverOracleNewTargetViewConfig) GetDbChannels() []OracleDbChannel {
	if o == nil  {
		var ret []OracleDbChannel
		return ret
	}
	return o.DbChannels
}

// GetDbChannelsOk returns a tuple with the DbChannels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverOracleNewTargetViewConfig) GetDbChannelsOk() (*[]OracleDbChannel, bool) {
	if o == nil || o.DbChannels == nil {
		return nil, false
	}
	return &o.DbChannels, true
}

// HasDbChannels returns a boolean if a field has been set.
func (o *RecoverOracleNewTargetViewConfig) HasDbChannels() bool {
	if o != nil && o.DbChannels != nil {
		return true
	}

	return false
}

// SetDbChannels gets a reference to the given []OracleDbChannel and assigns it to the DbChannels field.
func (o *RecoverOracleNewTargetViewConfig) SetDbChannels(v []OracleDbChannel) {
	o.DbChannels = v
}

// GetRecoveryMode returns the RecoveryMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverOracleNewTargetViewConfig) GetRecoveryMode() bool {
	if o == nil || o.RecoveryMode.Get() == nil {
		var ret bool
		return ret
	}
	return *o.RecoveryMode.Get()
}

// GetRecoveryModeOk returns a tuple with the RecoveryMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverOracleNewTargetViewConfig) GetRecoveryModeOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RecoveryMode.Get(), o.RecoveryMode.IsSet()
}

// HasRecoveryMode returns a boolean if a field has been set.
func (o *RecoverOracleNewTargetViewConfig) HasRecoveryMode() bool {
	if o != nil && o.RecoveryMode.IsSet() {
		return true
	}

	return false
}

// SetRecoveryMode gets a reference to the given NullableBool and assigns it to the RecoveryMode field.
func (o *RecoverOracleNewTargetViewConfig) SetRecoveryMode(v bool) {
	o.RecoveryMode.Set(&v)
}
// SetRecoveryModeNil sets the value for RecoveryMode to be an explicit nil
func (o *RecoverOracleNewTargetViewConfig) SetRecoveryModeNil() {
	o.RecoveryMode.Set(nil)
}

// UnsetRecoveryMode ensures that no value is present for RecoveryMode, not even an explicit nil
func (o *RecoverOracleNewTargetViewConfig) UnsetRecoveryMode() {
	o.RecoveryMode.Unset()
}

// GetShellEvironmentVars returns the ShellEvironmentVars field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverOracleNewTargetViewConfig) GetShellEvironmentVars() []ShellKeyValuePair {
	if o == nil  {
		var ret []ShellKeyValuePair
		return ret
	}
	return o.ShellEvironmentVars
}

// GetShellEvironmentVarsOk returns a tuple with the ShellEvironmentVars field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverOracleNewTargetViewConfig) GetShellEvironmentVarsOk() (*[]ShellKeyValuePair, bool) {
	if o == nil || o.ShellEvironmentVars == nil {
		return nil, false
	}
	return &o.ShellEvironmentVars, true
}

// HasShellEvironmentVars returns a boolean if a field has been set.
func (o *RecoverOracleNewTargetViewConfig) HasShellEvironmentVars() bool {
	if o != nil && o.ShellEvironmentVars != nil {
		return true
	}

	return false
}

// SetShellEvironmentVars gets a reference to the given []ShellKeyValuePair and assigns it to the ShellEvironmentVars field.
func (o *RecoverOracleNewTargetViewConfig) SetShellEvironmentVars(v []ShellKeyValuePair) {
	o.ShellEvironmentVars = v
}

// GetGranularRestoreInfo returns the GranularRestoreInfo field value if set, zero value otherwise.
func (o *RecoverOracleNewTargetViewConfig) GetGranularRestoreInfo() RecoverOracleGranularRestoreInfo {
	if o == nil || o.GranularRestoreInfo == nil {
		var ret RecoverOracleGranularRestoreInfo
		return ret
	}
	return *o.GranularRestoreInfo
}

// GetGranularRestoreInfoOk returns a tuple with the GranularRestoreInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverOracleNewTargetViewConfig) GetGranularRestoreInfoOk() (*RecoverOracleGranularRestoreInfo, bool) {
	if o == nil || o.GranularRestoreInfo == nil {
		return nil, false
	}
	return o.GranularRestoreInfo, true
}

// HasGranularRestoreInfo returns a boolean if a field has been set.
func (o *RecoverOracleNewTargetViewConfig) HasGranularRestoreInfo() bool {
	if o != nil && o.GranularRestoreInfo != nil {
		return true
	}

	return false
}

// SetGranularRestoreInfo gets a reference to the given RecoverOracleGranularRestoreInfo and assigns it to the GranularRestoreInfo field.
func (o *RecoverOracleNewTargetViewConfig) SetGranularRestoreInfo(v RecoverOracleGranularRestoreInfo) {
	o.GranularRestoreInfo = &v
}

// GetOracleArchiveLogInfo returns the OracleArchiveLogInfo field value if set, zero value otherwise.
func (o *RecoverOracleNewTargetViewConfig) GetOracleArchiveLogInfo() OracleArchiveLogInfo {
	if o == nil || o.OracleArchiveLogInfo == nil {
		var ret OracleArchiveLogInfo
		return ret
	}
	return *o.OracleArchiveLogInfo
}

// GetOracleArchiveLogInfoOk returns a tuple with the OracleArchiveLogInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverOracleNewTargetViewConfig) GetOracleArchiveLogInfoOk() (*OracleArchiveLogInfo, bool) {
	if o == nil || o.OracleArchiveLogInfo == nil {
		return nil, false
	}
	return o.OracleArchiveLogInfo, true
}

// HasOracleArchiveLogInfo returns a boolean if a field has been set.
func (o *RecoverOracleNewTargetViewConfig) HasOracleArchiveLogInfo() bool {
	if o != nil && o.OracleArchiveLogInfo != nil {
		return true
	}

	return false
}

// SetOracleArchiveLogInfo gets a reference to the given OracleArchiveLogInfo and assigns it to the OracleArchiveLogInfo field.
func (o *RecoverOracleNewTargetViewConfig) SetOracleArchiveLogInfo(v OracleArchiveLogInfo) {
	o.OracleArchiveLogInfo = &v
}

func (o RecoverOracleNewTargetViewConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ViewMountPath.IsSet() {
		toSerialize["viewMountPath"] = o.ViewMountPath.Get()
	}
	if o.RestoreTimeUsecs.IsSet() {
		toSerialize["restoreTimeUsecs"] = o.RestoreTimeUsecs.Get()
	}
	if o.DbChannels != nil {
		toSerialize["dbChannels"] = o.DbChannels
	}
	if o.RecoveryMode.IsSet() {
		toSerialize["recoveryMode"] = o.RecoveryMode.Get()
	}
	if o.ShellEvironmentVars != nil {
		toSerialize["shellEvironmentVars"] = o.ShellEvironmentVars
	}
	if o.GranularRestoreInfo != nil {
		toSerialize["granularRestoreInfo"] = o.GranularRestoreInfo
	}
	if o.OracleArchiveLogInfo != nil {
		toSerialize["oracleArchiveLogInfo"] = o.OracleArchiveLogInfo
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverOracleNewTargetViewConfig struct {
	value *RecoverOracleNewTargetViewConfig
	isSet bool
}

func (v NullableRecoverOracleNewTargetViewConfig) Get() *RecoverOracleNewTargetViewConfig {
	return v.value
}

func (v *NullableRecoverOracleNewTargetViewConfig) Set(val *RecoverOracleNewTargetViewConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverOracleNewTargetViewConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverOracleNewTargetViewConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverOracleNewTargetViewConfig(val *RecoverOracleNewTargetViewConfig) *NullableRecoverOracleNewTargetViewConfig {
	return &NullableRecoverOracleNewTargetViewConfig{value: val, isSet: true}
}

func (v NullableRecoverOracleNewTargetViewConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverOracleNewTargetViewConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


