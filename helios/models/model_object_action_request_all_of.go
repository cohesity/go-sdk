/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ObjectActionRequestAllOf struct for ObjectActionRequestAllOf
type ObjectActionRequestAllOf struct {
	VmwareParams *VmwareObjectActionParams `json:"vmwareParams,omitempty"`
}

// NewObjectActionRequestAllOf instantiates a new ObjectActionRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectActionRequestAllOf() *ObjectActionRequestAllOf {
	this := ObjectActionRequestAllOf{}
	return &this
}

// NewObjectActionRequestAllOfWithDefaults instantiates a new ObjectActionRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectActionRequestAllOfWithDefaults() *ObjectActionRequestAllOf {
	this := ObjectActionRequestAllOf{}
	return &this
}

// GetVmwareParams returns the VmwareParams field value if set, zero value otherwise.
func (o *ObjectActionRequestAllOf) GetVmwareParams() VmwareObjectActionParams {
	if o == nil || o.VmwareParams == nil {
		var ret VmwareObjectActionParams
		return ret
	}
	return *o.VmwareParams
}

// GetVmwareParamsOk returns a tuple with the VmwareParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectActionRequestAllOf) GetVmwareParamsOk() (*VmwareObjectActionParams, bool) {
	if o == nil || o.VmwareParams == nil {
		return nil, false
	}
	return o.VmwareParams, true
}

// HasVmwareParams returns a boolean if a field has been set.
func (o *ObjectActionRequestAllOf) HasVmwareParams() bool {
	if o != nil && o.VmwareParams != nil {
		return true
	}

	return false
}

// SetVmwareParams gets a reference to the given VmwareObjectActionParams and assigns it to the VmwareParams field.
func (o *ObjectActionRequestAllOf) SetVmwareParams(v VmwareObjectActionParams) {
	o.VmwareParams = &v
}

func (o ObjectActionRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VmwareParams != nil {
		toSerialize["vmwareParams"] = o.VmwareParams
	}
	return json.Marshal(toSerialize)
}

type NullableObjectActionRequestAllOf struct {
	value *ObjectActionRequestAllOf
	isSet bool
}

func (v NullableObjectActionRequestAllOf) Get() *ObjectActionRequestAllOf {
	return v.value
}

func (v *NullableObjectActionRequestAllOf) Set(val *ObjectActionRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectActionRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectActionRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectActionRequestAllOf(val *ObjectActionRequestAllOf) *NullableObjectActionRequestAllOf {
	return &NullableObjectActionRequestAllOf{value: val, isSet: true}
}

func (v NullableObjectActionRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectActionRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


