/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CommonProtectionGroupRequestParams Specifies the parameters which are common between all Protection Group requests.
type CommonProtectionGroupRequestParams struct {
	// Specifies the name of the Protection Group.
	Name NullableString `json:"name"`
	// Specifies the unique id of the Protection Policy associated with the Protection Group. The Policy provides retry settings Protection Schedules, Priority, SLA, etc.
	PolicyId NullableString `json:"policyId"`
	// Specifies the priority of the Protection Group.
	Priority NullableString `json:"priority,omitempty"`
	// Specifies the Storage Domain (View Box) ID where this Protection Group writes data.
	StorageDomainId NullableInt64 `json:"storageDomainId,omitempty"`
	// Specifies a description of the Protection Group.
	Description NullableString `json:"description,omitempty"`
	StartTime *TimeOfDay `json:"startTime,omitempty"`
	// Specifies the end time in micro seconds for this Protection Group. If this is not specified, the Protection Group won't be ended.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	AlertPolicy *ProtectionGroupAlertingPolicy `json:"alertPolicy,omitempty"`
	// Specifies the SLA parameters for this Protection Group.
	Sla []SlaRule `json:"sla,omitempty"`
	// Specifies whether the Protection Group will be written to HDD or SSD.
	QosPolicy NullableString `json:"qosPolicy,omitempty"`
	// Specifies whether currently executing jobs should abort if a blackout period specified by a policy starts. Available only if the selected policy has at least one blackout period. Default value is false. This field should not be set to true if 'pauseInBlackouts' is set to true.
	AbortInBlackouts NullableBool `json:"abortInBlackouts,omitempty"`
	// Specifies whether currently executing jobs should be paused if a blackout period specified by a policy starts. Available only if the selected policy has at least one blackout period. Default value is false. This field should not be set to true if 'abortInBlackouts' is sent as true.
	PauseInBlackouts NullableBool `json:"pauseInBlackouts,omitempty"`
	// Specifies the environment type of the Protection Group.
	Environment NullableString `json:"environment"`
	// Specifies if the the Protection Group is paused. New runs are not scheduled for the paused Protection Groups. Active run if any is not impacted.
	IsPaused NullableBool `json:"isPaused,omitempty"`
}

// NewCommonProtectionGroupRequestParams instantiates a new CommonProtectionGroupRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonProtectionGroupRequestParams(name NullableString, policyId NullableString, environment NullableString) *CommonProtectionGroupRequestParams {
	this := CommonProtectionGroupRequestParams{}
	this.Name = name
	this.PolicyId = policyId
	this.Environment = environment
	return &this
}

// NewCommonProtectionGroupRequestParamsWithDefaults instantiates a new CommonProtectionGroupRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonProtectionGroupRequestParamsWithDefaults() *CommonProtectionGroupRequestParams {
	this := CommonProtectionGroupRequestParams{}
	return &this
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CommonProtectionGroupRequestParams) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupRequestParams) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *CommonProtectionGroupRequestParams) SetName(v string) {
	o.Name.Set(&v)
}

// GetPolicyId returns the PolicyId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CommonProtectionGroupRequestParams) GetPolicyId() string {
	if o == nil || o.PolicyId.Get() == nil {
		var ret string
		return ret
	}

	return *o.PolicyId.Get()
}

// GetPolicyIdOk returns a tuple with the PolicyId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupRequestParams) GetPolicyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PolicyId.Get(), o.PolicyId.IsSet()
}

// SetPolicyId sets field value
func (o *CommonProtectionGroupRequestParams) SetPolicyId(v string) {
	o.PolicyId.Set(&v)
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupRequestParams) GetPriority() string {
	if o == nil || o.Priority.Get() == nil {
		var ret string
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupRequestParams) GetPriorityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *CommonProtectionGroupRequestParams) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableString and assigns it to the Priority field.
func (o *CommonProtectionGroupRequestParams) SetPriority(v string) {
	o.Priority.Set(&v)
}
// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *CommonProtectionGroupRequestParams) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *CommonProtectionGroupRequestParams) UnsetPriority() {
	o.Priority.Unset()
}

// GetStorageDomainId returns the StorageDomainId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupRequestParams) GetStorageDomainId() int64 {
	if o == nil || o.StorageDomainId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StorageDomainId.Get()
}

// GetStorageDomainIdOk returns a tuple with the StorageDomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupRequestParams) GetStorageDomainIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StorageDomainId.Get(), o.StorageDomainId.IsSet()
}

// HasStorageDomainId returns a boolean if a field has been set.
func (o *CommonProtectionGroupRequestParams) HasStorageDomainId() bool {
	if o != nil && o.StorageDomainId.IsSet() {
		return true
	}

	return false
}

// SetStorageDomainId gets a reference to the given NullableInt64 and assigns it to the StorageDomainId field.
func (o *CommonProtectionGroupRequestParams) SetStorageDomainId(v int64) {
	o.StorageDomainId.Set(&v)
}
// SetStorageDomainIdNil sets the value for StorageDomainId to be an explicit nil
func (o *CommonProtectionGroupRequestParams) SetStorageDomainIdNil() {
	o.StorageDomainId.Set(nil)
}

// UnsetStorageDomainId ensures that no value is present for StorageDomainId, not even an explicit nil
func (o *CommonProtectionGroupRequestParams) UnsetStorageDomainId() {
	o.StorageDomainId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupRequestParams) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupRequestParams) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CommonProtectionGroupRequestParams) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CommonProtectionGroupRequestParams) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CommonProtectionGroupRequestParams) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CommonProtectionGroupRequestParams) UnsetDescription() {
	o.Description.Unset()
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *CommonProtectionGroupRequestParams) GetStartTime() TimeOfDay {
	if o == nil || o.StartTime == nil {
		var ret TimeOfDay
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonProtectionGroupRequestParams) GetStartTimeOk() (*TimeOfDay, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *CommonProtectionGroupRequestParams) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given TimeOfDay and assigns it to the StartTime field.
func (o *CommonProtectionGroupRequestParams) SetStartTime(v TimeOfDay) {
	o.StartTime = &v
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupRequestParams) GetEndTimeUsecs() int64 {
	if o == nil || o.EndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupRequestParams) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *CommonProtectionGroupRequestParams) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *CommonProtectionGroupRequestParams) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *CommonProtectionGroupRequestParams) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *CommonProtectionGroupRequestParams) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetAlertPolicy returns the AlertPolicy field value if set, zero value otherwise.
func (o *CommonProtectionGroupRequestParams) GetAlertPolicy() ProtectionGroupAlertingPolicy {
	if o == nil || o.AlertPolicy == nil {
		var ret ProtectionGroupAlertingPolicy
		return ret
	}
	return *o.AlertPolicy
}

// GetAlertPolicyOk returns a tuple with the AlertPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonProtectionGroupRequestParams) GetAlertPolicyOk() (*ProtectionGroupAlertingPolicy, bool) {
	if o == nil || o.AlertPolicy == nil {
		return nil, false
	}
	return o.AlertPolicy, true
}

// HasAlertPolicy returns a boolean if a field has been set.
func (o *CommonProtectionGroupRequestParams) HasAlertPolicy() bool {
	if o != nil && o.AlertPolicy != nil {
		return true
	}

	return false
}

// SetAlertPolicy gets a reference to the given ProtectionGroupAlertingPolicy and assigns it to the AlertPolicy field.
func (o *CommonProtectionGroupRequestParams) SetAlertPolicy(v ProtectionGroupAlertingPolicy) {
	o.AlertPolicy = &v
}

// GetSla returns the Sla field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupRequestParams) GetSla() []SlaRule {
	if o == nil  {
		var ret []SlaRule
		return ret
	}
	return o.Sla
}

// GetSlaOk returns a tuple with the Sla field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupRequestParams) GetSlaOk() (*[]SlaRule, bool) {
	if o == nil || o.Sla == nil {
		return nil, false
	}
	return &o.Sla, true
}

// HasSla returns a boolean if a field has been set.
func (o *CommonProtectionGroupRequestParams) HasSla() bool {
	if o != nil && o.Sla != nil {
		return true
	}

	return false
}

// SetSla gets a reference to the given []SlaRule and assigns it to the Sla field.
func (o *CommonProtectionGroupRequestParams) SetSla(v []SlaRule) {
	o.Sla = v
}

// GetQosPolicy returns the QosPolicy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupRequestParams) GetQosPolicy() string {
	if o == nil || o.QosPolicy.Get() == nil {
		var ret string
		return ret
	}
	return *o.QosPolicy.Get()
}

// GetQosPolicyOk returns a tuple with the QosPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupRequestParams) GetQosPolicyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.QosPolicy.Get(), o.QosPolicy.IsSet()
}

// HasQosPolicy returns a boolean if a field has been set.
func (o *CommonProtectionGroupRequestParams) HasQosPolicy() bool {
	if o != nil && o.QosPolicy.IsSet() {
		return true
	}

	return false
}

// SetQosPolicy gets a reference to the given NullableString and assigns it to the QosPolicy field.
func (o *CommonProtectionGroupRequestParams) SetQosPolicy(v string) {
	o.QosPolicy.Set(&v)
}
// SetQosPolicyNil sets the value for QosPolicy to be an explicit nil
func (o *CommonProtectionGroupRequestParams) SetQosPolicyNil() {
	o.QosPolicy.Set(nil)
}

// UnsetQosPolicy ensures that no value is present for QosPolicy, not even an explicit nil
func (o *CommonProtectionGroupRequestParams) UnsetQosPolicy() {
	o.QosPolicy.Unset()
}

// GetAbortInBlackouts returns the AbortInBlackouts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupRequestParams) GetAbortInBlackouts() bool {
	if o == nil || o.AbortInBlackouts.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AbortInBlackouts.Get()
}

// GetAbortInBlackoutsOk returns a tuple with the AbortInBlackouts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupRequestParams) GetAbortInBlackoutsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AbortInBlackouts.Get(), o.AbortInBlackouts.IsSet()
}

// HasAbortInBlackouts returns a boolean if a field has been set.
func (o *CommonProtectionGroupRequestParams) HasAbortInBlackouts() bool {
	if o != nil && o.AbortInBlackouts.IsSet() {
		return true
	}

	return false
}

// SetAbortInBlackouts gets a reference to the given NullableBool and assigns it to the AbortInBlackouts field.
func (o *CommonProtectionGroupRequestParams) SetAbortInBlackouts(v bool) {
	o.AbortInBlackouts.Set(&v)
}
// SetAbortInBlackoutsNil sets the value for AbortInBlackouts to be an explicit nil
func (o *CommonProtectionGroupRequestParams) SetAbortInBlackoutsNil() {
	o.AbortInBlackouts.Set(nil)
}

// UnsetAbortInBlackouts ensures that no value is present for AbortInBlackouts, not even an explicit nil
func (o *CommonProtectionGroupRequestParams) UnsetAbortInBlackouts() {
	o.AbortInBlackouts.Unset()
}

// GetPauseInBlackouts returns the PauseInBlackouts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupRequestParams) GetPauseInBlackouts() bool {
	if o == nil || o.PauseInBlackouts.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PauseInBlackouts.Get()
}

// GetPauseInBlackoutsOk returns a tuple with the PauseInBlackouts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupRequestParams) GetPauseInBlackoutsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PauseInBlackouts.Get(), o.PauseInBlackouts.IsSet()
}

// HasPauseInBlackouts returns a boolean if a field has been set.
func (o *CommonProtectionGroupRequestParams) HasPauseInBlackouts() bool {
	if o != nil && o.PauseInBlackouts.IsSet() {
		return true
	}

	return false
}

// SetPauseInBlackouts gets a reference to the given NullableBool and assigns it to the PauseInBlackouts field.
func (o *CommonProtectionGroupRequestParams) SetPauseInBlackouts(v bool) {
	o.PauseInBlackouts.Set(&v)
}
// SetPauseInBlackoutsNil sets the value for PauseInBlackouts to be an explicit nil
func (o *CommonProtectionGroupRequestParams) SetPauseInBlackoutsNil() {
	o.PauseInBlackouts.Set(nil)
}

// UnsetPauseInBlackouts ensures that no value is present for PauseInBlackouts, not even an explicit nil
func (o *CommonProtectionGroupRequestParams) UnsetPauseInBlackouts() {
	o.PauseInBlackouts.Unset()
}

// GetEnvironment returns the Environment field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CommonProtectionGroupRequestParams) GetEnvironment() string {
	if o == nil || o.Environment.Get() == nil {
		var ret string
		return ret
	}

	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupRequestParams) GetEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// SetEnvironment sets field value
func (o *CommonProtectionGroupRequestParams) SetEnvironment(v string) {
	o.Environment.Set(&v)
}

// GetIsPaused returns the IsPaused field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupRequestParams) GetIsPaused() bool {
	if o == nil || o.IsPaused.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsPaused.Get()
}

// GetIsPausedOk returns a tuple with the IsPaused field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupRequestParams) GetIsPausedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsPaused.Get(), o.IsPaused.IsSet()
}

// HasIsPaused returns a boolean if a field has been set.
func (o *CommonProtectionGroupRequestParams) HasIsPaused() bool {
	if o != nil && o.IsPaused.IsSet() {
		return true
	}

	return false
}

// SetIsPaused gets a reference to the given NullableBool and assigns it to the IsPaused field.
func (o *CommonProtectionGroupRequestParams) SetIsPaused(v bool) {
	o.IsPaused.Set(&v)
}
// SetIsPausedNil sets the value for IsPaused to be an explicit nil
func (o *CommonProtectionGroupRequestParams) SetIsPausedNil() {
	o.IsPaused.Set(nil)
}

// UnsetIsPaused ensures that no value is present for IsPaused, not even an explicit nil
func (o *CommonProtectionGroupRequestParams) UnsetIsPaused() {
	o.IsPaused.Unset()
}

func (o CommonProtectionGroupRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name.Get()
	}
	if true {
		toSerialize["policyId"] = o.PolicyId.Get()
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	if o.StorageDomainId.IsSet() {
		toSerialize["storageDomainId"] = o.StorageDomainId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.StartTime != nil {
		toSerialize["startTime"] = o.StartTime
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.AlertPolicy != nil {
		toSerialize["alertPolicy"] = o.AlertPolicy
	}
	if o.Sla != nil {
		toSerialize["sla"] = o.Sla
	}
	if o.QosPolicy.IsSet() {
		toSerialize["qosPolicy"] = o.QosPolicy.Get()
	}
	if o.AbortInBlackouts.IsSet() {
		toSerialize["abortInBlackouts"] = o.AbortInBlackouts.Get()
	}
	if o.PauseInBlackouts.IsSet() {
		toSerialize["pauseInBlackouts"] = o.PauseInBlackouts.Get()
	}
	if true {
		toSerialize["environment"] = o.Environment.Get()
	}
	if o.IsPaused.IsSet() {
		toSerialize["isPaused"] = o.IsPaused.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCommonProtectionGroupRequestParams struct {
	value *CommonProtectionGroupRequestParams
	isSet bool
}

func (v NullableCommonProtectionGroupRequestParams) Get() *CommonProtectionGroupRequestParams {
	return v.value
}

func (v *NullableCommonProtectionGroupRequestParams) Set(val *CommonProtectionGroupRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonProtectionGroupRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonProtectionGroupRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonProtectionGroupRequestParams(val *CommonProtectionGroupRequestParams) *NullableCommonProtectionGroupRequestParams {
	return &NullableCommonProtectionGroupRequestParams{value: val, isSet: true}
}

func (v NullableCommonProtectionGroupRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonProtectionGroupRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


