/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ClusterProxyServerConfig Specifies the parameters of the proxy server to be used for external traffic.
type ClusterProxyServerConfig struct {
	// Specifies the unique name of the proxy server.
	Name NullableString `json:"name,omitempty"`
	// Specifies the IP address of the proxy server.
	Ip NullableString `json:"ip"`
	// Specifies the port on which the server is listening.
	Port NullableInt32 `json:"port"`
	// Specifies the username for the proxy.
	Username NullableString `json:"username,omitempty"`
	// Specifies the password for the proxy.
	Password NullableString `json:"password,omitempty"`
}

// NewClusterProxyServerConfig instantiates a new ClusterProxyServerConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterProxyServerConfig(ip NullableString, port NullableInt32) *ClusterProxyServerConfig {
	this := ClusterProxyServerConfig{}
	this.Ip = ip
	this.Port = port
	return &this
}

// NewClusterProxyServerConfigWithDefaults instantiates a new ClusterProxyServerConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterProxyServerConfigWithDefaults() *ClusterProxyServerConfig {
	this := ClusterProxyServerConfig{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterProxyServerConfig) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterProxyServerConfig) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ClusterProxyServerConfig) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ClusterProxyServerConfig) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ClusterProxyServerConfig) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ClusterProxyServerConfig) UnsetName() {
	o.Name.Unset()
}

// GetIp returns the Ip field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ClusterProxyServerConfig) GetIp() string {
	if o == nil || o.Ip.Get() == nil {
		var ret string
		return ret
	}

	return *o.Ip.Get()
}

// GetIpOk returns a tuple with the Ip field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterProxyServerConfig) GetIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Ip.Get(), o.Ip.IsSet()
}

// SetIp sets field value
func (o *ClusterProxyServerConfig) SetIp(v string) {
	o.Ip.Set(&v)
}

// GetPort returns the Port field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *ClusterProxyServerConfig) GetPort() int32 {
	if o == nil || o.Port.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Port.Get()
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterProxyServerConfig) GetPortOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Port.Get(), o.Port.IsSet()
}

// SetPort sets field value
func (o *ClusterProxyServerConfig) SetPort(v int32) {
	o.Port.Set(&v)
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterProxyServerConfig) GetUsername() string {
	if o == nil || o.Username.Get() == nil {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterProxyServerConfig) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *ClusterProxyServerConfig) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *ClusterProxyServerConfig) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *ClusterProxyServerConfig) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *ClusterProxyServerConfig) UnsetUsername() {
	o.Username.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterProxyServerConfig) GetPassword() string {
	if o == nil || o.Password.Get() == nil {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterProxyServerConfig) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *ClusterProxyServerConfig) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *ClusterProxyServerConfig) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *ClusterProxyServerConfig) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *ClusterProxyServerConfig) UnsetPassword() {
	o.Password.Unset()
}

func (o ClusterProxyServerConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if true {
		toSerialize["ip"] = o.Ip.Get()
	}
	if true {
		toSerialize["port"] = o.Port.Get()
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableClusterProxyServerConfig struct {
	value *ClusterProxyServerConfig
	isSet bool
}

func (v NullableClusterProxyServerConfig) Get() *ClusterProxyServerConfig {
	return v.value
}

func (v *NullableClusterProxyServerConfig) Set(val *ClusterProxyServerConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterProxyServerConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterProxyServerConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterProxyServerConfig(val *ClusterProxyServerConfig) *NullableClusterProxyServerConfig {
	return &NullableClusterProxyServerConfig{value: val, isSet: true}
}

func (v NullableClusterProxyServerConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterProxyServerConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


