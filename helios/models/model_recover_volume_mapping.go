/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// RecoverVolumeMapping Specifies the mapping from a source volume to a destination volume.
type RecoverVolumeMapping struct {
	// Specifies the guid of the source volume.
	SourceVolumeGuid NullableString `json:"sourceVolumeGuid"`
	// Specifies the guid of the destination volume.
	DestinationVolumeGuid NullableString `json:"destinationVolumeGuid"`
}

// NewRecoverVolumeMapping instantiates a new RecoverVolumeMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverVolumeMapping(sourceVolumeGuid NullableString, destinationVolumeGuid NullableString) *RecoverVolumeMapping {
	this := RecoverVolumeMapping{}
	this.SourceVolumeGuid = sourceVolumeGuid
	this.DestinationVolumeGuid = destinationVolumeGuid
	return &this
}

// NewRecoverVolumeMappingWithDefaults instantiates a new RecoverVolumeMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverVolumeMappingWithDefaults() *RecoverVolumeMapping {
	this := RecoverVolumeMapping{}
	return &this
}

// GetSourceVolumeGuid returns the SourceVolumeGuid field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RecoverVolumeMapping) GetSourceVolumeGuid() string {
	if o == nil || o.SourceVolumeGuid.Get() == nil {
		var ret string
		return ret
	}

	return *o.SourceVolumeGuid.Get()
}

// GetSourceVolumeGuidOk returns a tuple with the SourceVolumeGuid field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverVolumeMapping) GetSourceVolumeGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceVolumeGuid.Get(), o.SourceVolumeGuid.IsSet()
}

// SetSourceVolumeGuid sets field value
func (o *RecoverVolumeMapping) SetSourceVolumeGuid(v string) {
	o.SourceVolumeGuid.Set(&v)
}

// GetDestinationVolumeGuid returns the DestinationVolumeGuid field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RecoverVolumeMapping) GetDestinationVolumeGuid() string {
	if o == nil || o.DestinationVolumeGuid.Get() == nil {
		var ret string
		return ret
	}

	return *o.DestinationVolumeGuid.Get()
}

// GetDestinationVolumeGuidOk returns a tuple with the DestinationVolumeGuid field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverVolumeMapping) GetDestinationVolumeGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DestinationVolumeGuid.Get(), o.DestinationVolumeGuid.IsSet()
}

// SetDestinationVolumeGuid sets field value
func (o *RecoverVolumeMapping) SetDestinationVolumeGuid(v string) {
	o.DestinationVolumeGuid.Set(&v)
}

func (o RecoverVolumeMapping) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sourceVolumeGuid"] = o.SourceVolumeGuid.Get()
	}
	if true {
		toSerialize["destinationVolumeGuid"] = o.DestinationVolumeGuid.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverVolumeMapping struct {
	value *RecoverVolumeMapping
	isSet bool
}

func (v NullableRecoverVolumeMapping) Get() *RecoverVolumeMapping {
	return v.value
}

func (v *NullableRecoverVolumeMapping) Set(val *RecoverVolumeMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverVolumeMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverVolumeMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverVolumeMapping(val *RecoverVolumeMapping) *NullableRecoverVolumeMapping {
	return &NullableRecoverVolumeMapping{value: val, isSet: true}
}

func (v NullableRecoverVolumeMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverVolumeMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


