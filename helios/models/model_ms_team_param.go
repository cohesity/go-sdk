/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// MsTeamParam Specifies the parameters to recover a Microsoft 365 Team.
type MsTeamParam struct {
	// Specifies whether to recover the whole Microsoft 365 Team.
	RecoverEntireMsTeam NullableBool `json:"recoverEntireMsTeam"`
}

// NewMsTeamParam instantiates a new MsTeamParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMsTeamParam(recoverEntireMsTeam NullableBool) *MsTeamParam {
	this := MsTeamParam{}
	this.RecoverEntireMsTeam = recoverEntireMsTeam
	return &this
}

// NewMsTeamParamWithDefaults instantiates a new MsTeamParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMsTeamParamWithDefaults() *MsTeamParam {
	this := MsTeamParam{}
	return &this
}

// GetRecoverEntireMsTeam returns the RecoverEntireMsTeam field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *MsTeamParam) GetRecoverEntireMsTeam() bool {
	if o == nil || o.RecoverEntireMsTeam.Get() == nil {
		var ret bool
		return ret
	}

	return *o.RecoverEntireMsTeam.Get()
}

// GetRecoverEntireMsTeamOk returns a tuple with the RecoverEntireMsTeam field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MsTeamParam) GetRecoverEntireMsTeamOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RecoverEntireMsTeam.Get(), o.RecoverEntireMsTeam.IsSet()
}

// SetRecoverEntireMsTeam sets field value
func (o *MsTeamParam) SetRecoverEntireMsTeam(v bool) {
	o.RecoverEntireMsTeam.Set(&v)
}

func (o MsTeamParam) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["recoverEntireMsTeam"] = o.RecoverEntireMsTeam.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMsTeamParam struct {
	value *MsTeamParam
	isSet bool
}

func (v NullableMsTeamParam) Get() *MsTeamParam {
	return v.value
}

func (v *NullableMsTeamParam) Set(val *MsTeamParam) {
	v.value = val
	v.isSet = true
}

func (v NullableMsTeamParam) IsSet() bool {
	return v.isSet
}

func (v *NullableMsTeamParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMsTeamParam(val *MsTeamParam) *NullableMsTeamParam {
	return &NullableMsTeamParam{value: val, isSet: true}
}

func (v NullableMsTeamParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMsTeamParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


