/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CommonProtectionGroupResponseParams Specifies the parameters which are common between all Protection Group responses.
type CommonProtectionGroupResponseParams struct {
	// Specifies the ID of the Protection Group.
	Id NullableString `json:"id,omitempty"`
	// Specifies the name of the Protection Group.
	Name NullableString `json:"name,omitempty"`
	// Specifies the unique id of the Protection Policy associated with the Protection Group. The Policy provides retry settings Protection Schedules, Priority, SLA, etc.
	PolicyId NullableString `json:"policyId,omitempty"`
	// Specifies the priority of the Protection Group.
	Priority NullableString `json:"priority,omitempty"`
	// Specifies the Storage Domain (View Box) ID where this Protection Group writes data.
	StorageDomainId NullableInt64 `json:"storageDomainId,omitempty"`
	// Specifies a description of the Protection Group.
	Description NullableString `json:"description,omitempty"`
	StartTime *TimeOfDay `json:"startTime,omitempty"`
	// Specifies the end time in micro seconds for this Protection Group. If this is not specified, the Protection Group won't be ended.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	AlertPolicy *ProtectionGroupAlertingPolicy `json:"alertPolicy,omitempty"`
	// Specifies the SLA parameters for this Protection Group.
	Sla []SlaRule `json:"sla,omitempty"`
	// Specifies whether the Protection Group will be written to HDD or SSD.
	QosPolicy NullableString `json:"qosPolicy,omitempty"`
	// Specifies whether currently executing jobs should abort if a blackout period specified by a policy starts. Available only if the selected policy has at least one blackout period. Default value is false.
	AbortInBlackouts NullableBool `json:"abortInBlackouts,omitempty"`
	// Specifies whether currently executing jobs should be paused if a blackout period specified by a policy starts. Available only if the selected policy has at least one blackout period. Default value is false. This field should not be set to true if 'abortInBlackouts' is sent as true.
	PauseInBlackouts NullableBool `json:"pauseInBlackouts,omitempty"`
	// Specifies if the Protection Group is active or not.
	IsActive NullableBool `json:"isActive,omitempty"`
	// Specifies if the Protection Group has been deleted.
	IsDeleted NullableBool `json:"isDeleted,omitempty"`
	// Specifies if the the Protection Group is paused. New runs are not scheduled for the paused Protection Groups. Active run if any is not impacted.
	IsPaused NullableBool `json:"isPaused,omitempty"`
	// Specifies the environment of the Protection Group.
	Environment NullableString `json:"environment,omitempty"`
	LastRun *ProtectionGroupRun `json:"lastRun,omitempty"`
	// Specifies the list of tenants that have permissions for this protection group.
	Permissions []Tenant `json:"permissions,omitempty"`
	// Specifies if the the Protection Group is using a protect once type of policy. This field is helpful to identify run happen for this group.
	IsProtectOnce NullableBool `json:"isProtectOnce,omitempty"`
	// Specifies the Information about missing entities.
	MissingEntities []MissingEntityParams `json:"missingEntities,omitempty"`
	// Specifies the number of protected objects of the Protection Group.
	NumProtectedObjects NullableInt64 `json:"numProtectedObjects,omitempty"`
}

// NewCommonProtectionGroupResponseParams instantiates a new CommonProtectionGroupResponseParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonProtectionGroupResponseParams() *CommonProtectionGroupResponseParams {
	this := CommonProtectionGroupResponseParams{}
	return &this
}

// NewCommonProtectionGroupResponseParamsWithDefaults instantiates a new CommonProtectionGroupResponseParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonProtectionGroupResponseParamsWithDefaults() *CommonProtectionGroupResponseParams {
	this := CommonProtectionGroupResponseParams{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *CommonProtectionGroupResponseParams) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CommonProtectionGroupResponseParams) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CommonProtectionGroupResponseParams) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CommonProtectionGroupResponseParams) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CommonProtectionGroupResponseParams) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CommonProtectionGroupResponseParams) UnsetName() {
	o.Name.Unset()
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetPolicyId() string {
	if o == nil || o.PolicyId.Get() == nil {
		var ret string
		return ret
	}
	return *o.PolicyId.Get()
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetPolicyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PolicyId.Get(), o.PolicyId.IsSet()
}

// HasPolicyId returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasPolicyId() bool {
	if o != nil && o.PolicyId.IsSet() {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given NullableString and assigns it to the PolicyId field.
func (o *CommonProtectionGroupResponseParams) SetPolicyId(v string) {
	o.PolicyId.Set(&v)
}
// SetPolicyIdNil sets the value for PolicyId to be an explicit nil
func (o *CommonProtectionGroupResponseParams) SetPolicyIdNil() {
	o.PolicyId.Set(nil)
}

// UnsetPolicyId ensures that no value is present for PolicyId, not even an explicit nil
func (o *CommonProtectionGroupResponseParams) UnsetPolicyId() {
	o.PolicyId.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetPriority() string {
	if o == nil || o.Priority.Get() == nil {
		var ret string
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetPriorityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableString and assigns it to the Priority field.
func (o *CommonProtectionGroupResponseParams) SetPriority(v string) {
	o.Priority.Set(&v)
}
// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *CommonProtectionGroupResponseParams) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *CommonProtectionGroupResponseParams) UnsetPriority() {
	o.Priority.Unset()
}

// GetStorageDomainId returns the StorageDomainId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetStorageDomainId() int64 {
	if o == nil || o.StorageDomainId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StorageDomainId.Get()
}

// GetStorageDomainIdOk returns a tuple with the StorageDomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetStorageDomainIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StorageDomainId.Get(), o.StorageDomainId.IsSet()
}

// HasStorageDomainId returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasStorageDomainId() bool {
	if o != nil && o.StorageDomainId.IsSet() {
		return true
	}

	return false
}

// SetStorageDomainId gets a reference to the given NullableInt64 and assigns it to the StorageDomainId field.
func (o *CommonProtectionGroupResponseParams) SetStorageDomainId(v int64) {
	o.StorageDomainId.Set(&v)
}
// SetStorageDomainIdNil sets the value for StorageDomainId to be an explicit nil
func (o *CommonProtectionGroupResponseParams) SetStorageDomainIdNil() {
	o.StorageDomainId.Set(nil)
}

// UnsetStorageDomainId ensures that no value is present for StorageDomainId, not even an explicit nil
func (o *CommonProtectionGroupResponseParams) UnsetStorageDomainId() {
	o.StorageDomainId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CommonProtectionGroupResponseParams) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CommonProtectionGroupResponseParams) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CommonProtectionGroupResponseParams) UnsetDescription() {
	o.Description.Unset()
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *CommonProtectionGroupResponseParams) GetStartTime() TimeOfDay {
	if o == nil || o.StartTime == nil {
		var ret TimeOfDay
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonProtectionGroupResponseParams) GetStartTimeOk() (*TimeOfDay, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given TimeOfDay and assigns it to the StartTime field.
func (o *CommonProtectionGroupResponseParams) SetStartTime(v TimeOfDay) {
	o.StartTime = &v
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetEndTimeUsecs() int64 {
	if o == nil || o.EndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *CommonProtectionGroupResponseParams) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *CommonProtectionGroupResponseParams) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *CommonProtectionGroupResponseParams) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetAlertPolicy returns the AlertPolicy field value if set, zero value otherwise.
func (o *CommonProtectionGroupResponseParams) GetAlertPolicy() ProtectionGroupAlertingPolicy {
	if o == nil || o.AlertPolicy == nil {
		var ret ProtectionGroupAlertingPolicy
		return ret
	}
	return *o.AlertPolicy
}

// GetAlertPolicyOk returns a tuple with the AlertPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonProtectionGroupResponseParams) GetAlertPolicyOk() (*ProtectionGroupAlertingPolicy, bool) {
	if o == nil || o.AlertPolicy == nil {
		return nil, false
	}
	return o.AlertPolicy, true
}

// HasAlertPolicy returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasAlertPolicy() bool {
	if o != nil && o.AlertPolicy != nil {
		return true
	}

	return false
}

// SetAlertPolicy gets a reference to the given ProtectionGroupAlertingPolicy and assigns it to the AlertPolicy field.
func (o *CommonProtectionGroupResponseParams) SetAlertPolicy(v ProtectionGroupAlertingPolicy) {
	o.AlertPolicy = &v
}

// GetSla returns the Sla field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetSla() []SlaRule {
	if o == nil  {
		var ret []SlaRule
		return ret
	}
	return o.Sla
}

// GetSlaOk returns a tuple with the Sla field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetSlaOk() (*[]SlaRule, bool) {
	if o == nil || o.Sla == nil {
		return nil, false
	}
	return &o.Sla, true
}

// HasSla returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasSla() bool {
	if o != nil && o.Sla != nil {
		return true
	}

	return false
}

// SetSla gets a reference to the given []SlaRule and assigns it to the Sla field.
func (o *CommonProtectionGroupResponseParams) SetSla(v []SlaRule) {
	o.Sla = v
}

// GetQosPolicy returns the QosPolicy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetQosPolicy() string {
	if o == nil || o.QosPolicy.Get() == nil {
		var ret string
		return ret
	}
	return *o.QosPolicy.Get()
}

// GetQosPolicyOk returns a tuple with the QosPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetQosPolicyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.QosPolicy.Get(), o.QosPolicy.IsSet()
}

// HasQosPolicy returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasQosPolicy() bool {
	if o != nil && o.QosPolicy.IsSet() {
		return true
	}

	return false
}

// SetQosPolicy gets a reference to the given NullableString and assigns it to the QosPolicy field.
func (o *CommonProtectionGroupResponseParams) SetQosPolicy(v string) {
	o.QosPolicy.Set(&v)
}
// SetQosPolicyNil sets the value for QosPolicy to be an explicit nil
func (o *CommonProtectionGroupResponseParams) SetQosPolicyNil() {
	o.QosPolicy.Set(nil)
}

// UnsetQosPolicy ensures that no value is present for QosPolicy, not even an explicit nil
func (o *CommonProtectionGroupResponseParams) UnsetQosPolicy() {
	o.QosPolicy.Unset()
}

// GetAbortInBlackouts returns the AbortInBlackouts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetAbortInBlackouts() bool {
	if o == nil || o.AbortInBlackouts.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AbortInBlackouts.Get()
}

// GetAbortInBlackoutsOk returns a tuple with the AbortInBlackouts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetAbortInBlackoutsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AbortInBlackouts.Get(), o.AbortInBlackouts.IsSet()
}

// HasAbortInBlackouts returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasAbortInBlackouts() bool {
	if o != nil && o.AbortInBlackouts.IsSet() {
		return true
	}

	return false
}

// SetAbortInBlackouts gets a reference to the given NullableBool and assigns it to the AbortInBlackouts field.
func (o *CommonProtectionGroupResponseParams) SetAbortInBlackouts(v bool) {
	o.AbortInBlackouts.Set(&v)
}
// SetAbortInBlackoutsNil sets the value for AbortInBlackouts to be an explicit nil
func (o *CommonProtectionGroupResponseParams) SetAbortInBlackoutsNil() {
	o.AbortInBlackouts.Set(nil)
}

// UnsetAbortInBlackouts ensures that no value is present for AbortInBlackouts, not even an explicit nil
func (o *CommonProtectionGroupResponseParams) UnsetAbortInBlackouts() {
	o.AbortInBlackouts.Unset()
}

// GetPauseInBlackouts returns the PauseInBlackouts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetPauseInBlackouts() bool {
	if o == nil || o.PauseInBlackouts.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PauseInBlackouts.Get()
}

// GetPauseInBlackoutsOk returns a tuple with the PauseInBlackouts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetPauseInBlackoutsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PauseInBlackouts.Get(), o.PauseInBlackouts.IsSet()
}

// HasPauseInBlackouts returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasPauseInBlackouts() bool {
	if o != nil && o.PauseInBlackouts.IsSet() {
		return true
	}

	return false
}

// SetPauseInBlackouts gets a reference to the given NullableBool and assigns it to the PauseInBlackouts field.
func (o *CommonProtectionGroupResponseParams) SetPauseInBlackouts(v bool) {
	o.PauseInBlackouts.Set(&v)
}
// SetPauseInBlackoutsNil sets the value for PauseInBlackouts to be an explicit nil
func (o *CommonProtectionGroupResponseParams) SetPauseInBlackoutsNil() {
	o.PauseInBlackouts.Set(nil)
}

// UnsetPauseInBlackouts ensures that no value is present for PauseInBlackouts, not even an explicit nil
func (o *CommonProtectionGroupResponseParams) UnsetPauseInBlackouts() {
	o.PauseInBlackouts.Unset()
}

// GetIsActive returns the IsActive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetIsActive() bool {
	if o == nil || o.IsActive.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsActive.Get()
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetIsActiveOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsActive.Get(), o.IsActive.IsSet()
}

// HasIsActive returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasIsActive() bool {
	if o != nil && o.IsActive.IsSet() {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given NullableBool and assigns it to the IsActive field.
func (o *CommonProtectionGroupResponseParams) SetIsActive(v bool) {
	o.IsActive.Set(&v)
}
// SetIsActiveNil sets the value for IsActive to be an explicit nil
func (o *CommonProtectionGroupResponseParams) SetIsActiveNil() {
	o.IsActive.Set(nil)
}

// UnsetIsActive ensures that no value is present for IsActive, not even an explicit nil
func (o *CommonProtectionGroupResponseParams) UnsetIsActive() {
	o.IsActive.Unset()
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetIsDeleted() bool {
	if o == nil || o.IsDeleted.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsDeleted.Get()
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetIsDeletedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsDeleted.Get(), o.IsDeleted.IsSet()
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasIsDeleted() bool {
	if o != nil && o.IsDeleted.IsSet() {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given NullableBool and assigns it to the IsDeleted field.
func (o *CommonProtectionGroupResponseParams) SetIsDeleted(v bool) {
	o.IsDeleted.Set(&v)
}
// SetIsDeletedNil sets the value for IsDeleted to be an explicit nil
func (o *CommonProtectionGroupResponseParams) SetIsDeletedNil() {
	o.IsDeleted.Set(nil)
}

// UnsetIsDeleted ensures that no value is present for IsDeleted, not even an explicit nil
func (o *CommonProtectionGroupResponseParams) UnsetIsDeleted() {
	o.IsDeleted.Unset()
}

// GetIsPaused returns the IsPaused field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetIsPaused() bool {
	if o == nil || o.IsPaused.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsPaused.Get()
}

// GetIsPausedOk returns a tuple with the IsPaused field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetIsPausedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsPaused.Get(), o.IsPaused.IsSet()
}

// HasIsPaused returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasIsPaused() bool {
	if o != nil && o.IsPaused.IsSet() {
		return true
	}

	return false
}

// SetIsPaused gets a reference to the given NullableBool and assigns it to the IsPaused field.
func (o *CommonProtectionGroupResponseParams) SetIsPaused(v bool) {
	o.IsPaused.Set(&v)
}
// SetIsPausedNil sets the value for IsPaused to be an explicit nil
func (o *CommonProtectionGroupResponseParams) SetIsPausedNil() {
	o.IsPaused.Set(nil)
}

// UnsetIsPaused ensures that no value is present for IsPaused, not even an explicit nil
func (o *CommonProtectionGroupResponseParams) UnsetIsPaused() {
	o.IsPaused.Unset()
}

// GetEnvironment returns the Environment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetEnvironment() string {
	if o == nil || o.Environment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// HasEnvironment returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasEnvironment() bool {
	if o != nil && o.Environment.IsSet() {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given NullableString and assigns it to the Environment field.
func (o *CommonProtectionGroupResponseParams) SetEnvironment(v string) {
	o.Environment.Set(&v)
}
// SetEnvironmentNil sets the value for Environment to be an explicit nil
func (o *CommonProtectionGroupResponseParams) SetEnvironmentNil() {
	o.Environment.Set(nil)
}

// UnsetEnvironment ensures that no value is present for Environment, not even an explicit nil
func (o *CommonProtectionGroupResponseParams) UnsetEnvironment() {
	o.Environment.Unset()
}

// GetLastRun returns the LastRun field value if set, zero value otherwise.
func (o *CommonProtectionGroupResponseParams) GetLastRun() ProtectionGroupRun {
	if o == nil || o.LastRun == nil {
		var ret ProtectionGroupRun
		return ret
	}
	return *o.LastRun
}

// GetLastRunOk returns a tuple with the LastRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonProtectionGroupResponseParams) GetLastRunOk() (*ProtectionGroupRun, bool) {
	if o == nil || o.LastRun == nil {
		return nil, false
	}
	return o.LastRun, true
}

// HasLastRun returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasLastRun() bool {
	if o != nil && o.LastRun != nil {
		return true
	}

	return false
}

// SetLastRun gets a reference to the given ProtectionGroupRun and assigns it to the LastRun field.
func (o *CommonProtectionGroupResponseParams) SetLastRun(v ProtectionGroupRun) {
	o.LastRun = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetPermissions() []Tenant {
	if o == nil  {
		var ret []Tenant
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetPermissionsOk() (*[]Tenant, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return &o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []Tenant and assigns it to the Permissions field.
func (o *CommonProtectionGroupResponseParams) SetPermissions(v []Tenant) {
	o.Permissions = v
}

// GetIsProtectOnce returns the IsProtectOnce field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetIsProtectOnce() bool {
	if o == nil || o.IsProtectOnce.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsProtectOnce.Get()
}

// GetIsProtectOnceOk returns a tuple with the IsProtectOnce field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetIsProtectOnceOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsProtectOnce.Get(), o.IsProtectOnce.IsSet()
}

// HasIsProtectOnce returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasIsProtectOnce() bool {
	if o != nil && o.IsProtectOnce.IsSet() {
		return true
	}

	return false
}

// SetIsProtectOnce gets a reference to the given NullableBool and assigns it to the IsProtectOnce field.
func (o *CommonProtectionGroupResponseParams) SetIsProtectOnce(v bool) {
	o.IsProtectOnce.Set(&v)
}
// SetIsProtectOnceNil sets the value for IsProtectOnce to be an explicit nil
func (o *CommonProtectionGroupResponseParams) SetIsProtectOnceNil() {
	o.IsProtectOnce.Set(nil)
}

// UnsetIsProtectOnce ensures that no value is present for IsProtectOnce, not even an explicit nil
func (o *CommonProtectionGroupResponseParams) UnsetIsProtectOnce() {
	o.IsProtectOnce.Unset()
}

// GetMissingEntities returns the MissingEntities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetMissingEntities() []MissingEntityParams {
	if o == nil  {
		var ret []MissingEntityParams
		return ret
	}
	return o.MissingEntities
}

// GetMissingEntitiesOk returns a tuple with the MissingEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetMissingEntitiesOk() (*[]MissingEntityParams, bool) {
	if o == nil || o.MissingEntities == nil {
		return nil, false
	}
	return &o.MissingEntities, true
}

// HasMissingEntities returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasMissingEntities() bool {
	if o != nil && o.MissingEntities != nil {
		return true
	}

	return false
}

// SetMissingEntities gets a reference to the given []MissingEntityParams and assigns it to the MissingEntities field.
func (o *CommonProtectionGroupResponseParams) SetMissingEntities(v []MissingEntityParams) {
	o.MissingEntities = v
}

// GetNumProtectedObjects returns the NumProtectedObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonProtectionGroupResponseParams) GetNumProtectedObjects() int64 {
	if o == nil || o.NumProtectedObjects.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumProtectedObjects.Get()
}

// GetNumProtectedObjectsOk returns a tuple with the NumProtectedObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonProtectionGroupResponseParams) GetNumProtectedObjectsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumProtectedObjects.Get(), o.NumProtectedObjects.IsSet()
}

// HasNumProtectedObjects returns a boolean if a field has been set.
func (o *CommonProtectionGroupResponseParams) HasNumProtectedObjects() bool {
	if o != nil && o.NumProtectedObjects.IsSet() {
		return true
	}

	return false
}

// SetNumProtectedObjects gets a reference to the given NullableInt64 and assigns it to the NumProtectedObjects field.
func (o *CommonProtectionGroupResponseParams) SetNumProtectedObjects(v int64) {
	o.NumProtectedObjects.Set(&v)
}
// SetNumProtectedObjectsNil sets the value for NumProtectedObjects to be an explicit nil
func (o *CommonProtectionGroupResponseParams) SetNumProtectedObjectsNil() {
	o.NumProtectedObjects.Set(nil)
}

// UnsetNumProtectedObjects ensures that no value is present for NumProtectedObjects, not even an explicit nil
func (o *CommonProtectionGroupResponseParams) UnsetNumProtectedObjects() {
	o.NumProtectedObjects.Unset()
}

func (o CommonProtectionGroupResponseParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.PolicyId.IsSet() {
		toSerialize["policyId"] = o.PolicyId.Get()
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	if o.StorageDomainId.IsSet() {
		toSerialize["storageDomainId"] = o.StorageDomainId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.StartTime != nil {
		toSerialize["startTime"] = o.StartTime
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.AlertPolicy != nil {
		toSerialize["alertPolicy"] = o.AlertPolicy
	}
	if o.Sla != nil {
		toSerialize["sla"] = o.Sla
	}
	if o.QosPolicy.IsSet() {
		toSerialize["qosPolicy"] = o.QosPolicy.Get()
	}
	if o.AbortInBlackouts.IsSet() {
		toSerialize["abortInBlackouts"] = o.AbortInBlackouts.Get()
	}
	if o.PauseInBlackouts.IsSet() {
		toSerialize["pauseInBlackouts"] = o.PauseInBlackouts.Get()
	}
	if o.IsActive.IsSet() {
		toSerialize["isActive"] = o.IsActive.Get()
	}
	if o.IsDeleted.IsSet() {
		toSerialize["isDeleted"] = o.IsDeleted.Get()
	}
	if o.IsPaused.IsSet() {
		toSerialize["isPaused"] = o.IsPaused.Get()
	}
	if o.Environment.IsSet() {
		toSerialize["environment"] = o.Environment.Get()
	}
	if o.LastRun != nil {
		toSerialize["lastRun"] = o.LastRun
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.IsProtectOnce.IsSet() {
		toSerialize["isProtectOnce"] = o.IsProtectOnce.Get()
	}
	if o.MissingEntities != nil {
		toSerialize["missingEntities"] = o.MissingEntities
	}
	if o.NumProtectedObjects.IsSet() {
		toSerialize["numProtectedObjects"] = o.NumProtectedObjects.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCommonProtectionGroupResponseParams struct {
	value *CommonProtectionGroupResponseParams
	isSet bool
}

func (v NullableCommonProtectionGroupResponseParams) Get() *CommonProtectionGroupResponseParams {
	return v.value
}

func (v *NullableCommonProtectionGroupResponseParams) Set(val *CommonProtectionGroupResponseParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonProtectionGroupResponseParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonProtectionGroupResponseParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonProtectionGroupResponseParams(val *CommonProtectionGroupResponseParams) *NullableCommonProtectionGroupResponseParams {
	return &NullableCommonProtectionGroupResponseParams{value: val, isSet: true}
}

func (v NullableCommonProtectionGroupResponseParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonProtectionGroupResponseParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


