/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// McmSignup Specifies a MCM signup request.
type McmSignup struct {
	// Specifies the id of the signup request.
	Id NullableInt32 `json:"id,omitempty"`
	// Specifies the time at which the signup request is created in Unix timestamp epoch in milliseconds.
	CreatedAtMsecs NullableInt64 `json:"createdAtMsecs,omitempty"`
	// Specifies the time at which the signup request is updated in Unix timestamp epoch in milliseconds.
	UpdatedAtMsecs NullableInt64 `json:"updatedAtMsecs,omitempty"`
	// Specifies the status of the MCM signup request.
	Status NullableString `json:"status,omitempty"`
	// Specifies whether the User agrees to Terms and conditions for using Cohesity MCM services which are specified at <url>
	AcceptTerms NullableBool `json:"acceptTerms,omitempty"`
	ContactInfo McmSignupUserContactInfo `json:"contactInfo"`
	// Specifies the workload requirements of the company to use Cohesity MCM.
	Workloads *[]string `json:"workloads,omitempty"`
	DmaasParams *DmaasSignupParams `json:"dmaasParams,omitempty"`
}

// NewMcmSignup instantiates a new McmSignup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcmSignup(contactInfo McmSignupUserContactInfo) *McmSignup {
	this := McmSignup{}
	this.ContactInfo = contactInfo
	return &this
}

// NewMcmSignupWithDefaults instantiates a new McmSignup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcmSignupWithDefaults() *McmSignup {
	this := McmSignup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmSignup) GetId() int32 {
	if o == nil || o.Id.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmSignup) GetIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *McmSignup) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt32 and assigns it to the Id field.
func (o *McmSignup) SetId(v int32) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *McmSignup) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *McmSignup) UnsetId() {
	o.Id.Unset()
}

// GetCreatedAtMsecs returns the CreatedAtMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmSignup) GetCreatedAtMsecs() int64 {
	if o == nil || o.CreatedAtMsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.CreatedAtMsecs.Get()
}

// GetCreatedAtMsecsOk returns a tuple with the CreatedAtMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmSignup) GetCreatedAtMsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedAtMsecs.Get(), o.CreatedAtMsecs.IsSet()
}

// HasCreatedAtMsecs returns a boolean if a field has been set.
func (o *McmSignup) HasCreatedAtMsecs() bool {
	if o != nil && o.CreatedAtMsecs.IsSet() {
		return true
	}

	return false
}

// SetCreatedAtMsecs gets a reference to the given NullableInt64 and assigns it to the CreatedAtMsecs field.
func (o *McmSignup) SetCreatedAtMsecs(v int64) {
	o.CreatedAtMsecs.Set(&v)
}
// SetCreatedAtMsecsNil sets the value for CreatedAtMsecs to be an explicit nil
func (o *McmSignup) SetCreatedAtMsecsNil() {
	o.CreatedAtMsecs.Set(nil)
}

// UnsetCreatedAtMsecs ensures that no value is present for CreatedAtMsecs, not even an explicit nil
func (o *McmSignup) UnsetCreatedAtMsecs() {
	o.CreatedAtMsecs.Unset()
}

// GetUpdatedAtMsecs returns the UpdatedAtMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmSignup) GetUpdatedAtMsecs() int64 {
	if o == nil || o.UpdatedAtMsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.UpdatedAtMsecs.Get()
}

// GetUpdatedAtMsecsOk returns a tuple with the UpdatedAtMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmSignup) GetUpdatedAtMsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpdatedAtMsecs.Get(), o.UpdatedAtMsecs.IsSet()
}

// HasUpdatedAtMsecs returns a boolean if a field has been set.
func (o *McmSignup) HasUpdatedAtMsecs() bool {
	if o != nil && o.UpdatedAtMsecs.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAtMsecs gets a reference to the given NullableInt64 and assigns it to the UpdatedAtMsecs field.
func (o *McmSignup) SetUpdatedAtMsecs(v int64) {
	o.UpdatedAtMsecs.Set(&v)
}
// SetUpdatedAtMsecsNil sets the value for UpdatedAtMsecs to be an explicit nil
func (o *McmSignup) SetUpdatedAtMsecsNil() {
	o.UpdatedAtMsecs.Set(nil)
}

// UnsetUpdatedAtMsecs ensures that no value is present for UpdatedAtMsecs, not even an explicit nil
func (o *McmSignup) UnsetUpdatedAtMsecs() {
	o.UpdatedAtMsecs.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmSignup) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmSignup) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *McmSignup) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *McmSignup) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *McmSignup) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *McmSignup) UnsetStatus() {
	o.Status.Unset()
}

// GetAcceptTerms returns the AcceptTerms field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmSignup) GetAcceptTerms() bool {
	if o == nil || o.AcceptTerms.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AcceptTerms.Get()
}

// GetAcceptTermsOk returns a tuple with the AcceptTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmSignup) GetAcceptTermsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AcceptTerms.Get(), o.AcceptTerms.IsSet()
}

// HasAcceptTerms returns a boolean if a field has been set.
func (o *McmSignup) HasAcceptTerms() bool {
	if o != nil && o.AcceptTerms.IsSet() {
		return true
	}

	return false
}

// SetAcceptTerms gets a reference to the given NullableBool and assigns it to the AcceptTerms field.
func (o *McmSignup) SetAcceptTerms(v bool) {
	o.AcceptTerms.Set(&v)
}
// SetAcceptTermsNil sets the value for AcceptTerms to be an explicit nil
func (o *McmSignup) SetAcceptTermsNil() {
	o.AcceptTerms.Set(nil)
}

// UnsetAcceptTerms ensures that no value is present for AcceptTerms, not even an explicit nil
func (o *McmSignup) UnsetAcceptTerms() {
	o.AcceptTerms.Unset()
}

// GetContactInfo returns the ContactInfo field value
func (o *McmSignup) GetContactInfo() McmSignupUserContactInfo {
	if o == nil {
		var ret McmSignupUserContactInfo
		return ret
	}

	return o.ContactInfo
}

// GetContactInfoOk returns a tuple with the ContactInfo field value
// and a boolean to check if the value has been set.
func (o *McmSignup) GetContactInfoOk() (*McmSignupUserContactInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ContactInfo, true
}

// SetContactInfo sets field value
func (o *McmSignup) SetContactInfo(v McmSignupUserContactInfo) {
	o.ContactInfo = v
}

// GetWorkloads returns the Workloads field value if set, zero value otherwise.
func (o *McmSignup) GetWorkloads() []string {
	if o == nil || o.Workloads == nil {
		var ret []string
		return ret
	}
	return *o.Workloads
}

// GetWorkloadsOk returns a tuple with the Workloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmSignup) GetWorkloadsOk() (*[]string, bool) {
	if o == nil || o.Workloads == nil {
		return nil, false
	}
	return o.Workloads, true
}

// HasWorkloads returns a boolean if a field has been set.
func (o *McmSignup) HasWorkloads() bool {
	if o != nil && o.Workloads != nil {
		return true
	}

	return false
}

// SetWorkloads gets a reference to the given []string and assigns it to the Workloads field.
func (o *McmSignup) SetWorkloads(v []string) {
	o.Workloads = &v
}

// GetDmaasParams returns the DmaasParams field value if set, zero value otherwise.
func (o *McmSignup) GetDmaasParams() DmaasSignupParams {
	if o == nil || o.DmaasParams == nil {
		var ret DmaasSignupParams
		return ret
	}
	return *o.DmaasParams
}

// GetDmaasParamsOk returns a tuple with the DmaasParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmSignup) GetDmaasParamsOk() (*DmaasSignupParams, bool) {
	if o == nil || o.DmaasParams == nil {
		return nil, false
	}
	return o.DmaasParams, true
}

// HasDmaasParams returns a boolean if a field has been set.
func (o *McmSignup) HasDmaasParams() bool {
	if o != nil && o.DmaasParams != nil {
		return true
	}

	return false
}

// SetDmaasParams gets a reference to the given DmaasSignupParams and assigns it to the DmaasParams field.
func (o *McmSignup) SetDmaasParams(v DmaasSignupParams) {
	o.DmaasParams = &v
}

func (o McmSignup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.CreatedAtMsecs.IsSet() {
		toSerialize["createdAtMsecs"] = o.CreatedAtMsecs.Get()
	}
	if o.UpdatedAtMsecs.IsSet() {
		toSerialize["updatedAtMsecs"] = o.UpdatedAtMsecs.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.AcceptTerms.IsSet() {
		toSerialize["acceptTerms"] = o.AcceptTerms.Get()
	}
	if true {
		toSerialize["contactInfo"] = o.ContactInfo
	}
	if o.Workloads != nil {
		toSerialize["workloads"] = o.Workloads
	}
	if o.DmaasParams != nil {
		toSerialize["dmaasParams"] = o.DmaasParams
	}
	return json.Marshal(toSerialize)
}

type NullableMcmSignup struct {
	value *McmSignup
	isSet bool
}

func (v NullableMcmSignup) Get() *McmSignup {
	return v.value
}

func (v *NullableMcmSignup) Set(val *McmSignup) {
	v.value = val
	v.isSet = true
}

func (v NullableMcmSignup) IsSet() bool {
	return v.isSet
}

func (v *NullableMcmSignup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcmSignup(val *McmSignup) *NullableMcmSignup {
	return &NullableMcmSignup{value: val, isSet: true}
}

func (v NullableMcmSignup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcmSignup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


