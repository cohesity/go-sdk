/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CommonCloudTierSettings Specifies the common settings required for configuring cloud tiering.
type CommonCloudTierSettings struct {
	// Specifies the unit for moving the data from current tier to next tier. This unit will be a base unit for the 'moveAfter' field specified below.
	MoveAfterUnit NullableString `json:"moveAfterUnit,omitempty"`
	// Specifies the time period after which the backup will be moved from current tier to next tier.
	MoveAfter NullableInt64 `json:"moveAfter,omitempty"`
}

// NewCommonCloudTierSettings instantiates a new CommonCloudTierSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonCloudTierSettings() *CommonCloudTierSettings {
	this := CommonCloudTierSettings{}
	return &this
}

// NewCommonCloudTierSettingsWithDefaults instantiates a new CommonCloudTierSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonCloudTierSettingsWithDefaults() *CommonCloudTierSettings {
	this := CommonCloudTierSettings{}
	return &this
}

// GetMoveAfterUnit returns the MoveAfterUnit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonCloudTierSettings) GetMoveAfterUnit() string {
	if o == nil || o.MoveAfterUnit.Get() == nil {
		var ret string
		return ret
	}
	return *o.MoveAfterUnit.Get()
}

// GetMoveAfterUnitOk returns a tuple with the MoveAfterUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonCloudTierSettings) GetMoveAfterUnitOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MoveAfterUnit.Get(), o.MoveAfterUnit.IsSet()
}

// HasMoveAfterUnit returns a boolean if a field has been set.
func (o *CommonCloudTierSettings) HasMoveAfterUnit() bool {
	if o != nil && o.MoveAfterUnit.IsSet() {
		return true
	}

	return false
}

// SetMoveAfterUnit gets a reference to the given NullableString and assigns it to the MoveAfterUnit field.
func (o *CommonCloudTierSettings) SetMoveAfterUnit(v string) {
	o.MoveAfterUnit.Set(&v)
}
// SetMoveAfterUnitNil sets the value for MoveAfterUnit to be an explicit nil
func (o *CommonCloudTierSettings) SetMoveAfterUnitNil() {
	o.MoveAfterUnit.Set(nil)
}

// UnsetMoveAfterUnit ensures that no value is present for MoveAfterUnit, not even an explicit nil
func (o *CommonCloudTierSettings) UnsetMoveAfterUnit() {
	o.MoveAfterUnit.Unset()
}

// GetMoveAfter returns the MoveAfter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonCloudTierSettings) GetMoveAfter() int64 {
	if o == nil || o.MoveAfter.Get() == nil {
		var ret int64
		return ret
	}
	return *o.MoveAfter.Get()
}

// GetMoveAfterOk returns a tuple with the MoveAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonCloudTierSettings) GetMoveAfterOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MoveAfter.Get(), o.MoveAfter.IsSet()
}

// HasMoveAfter returns a boolean if a field has been set.
func (o *CommonCloudTierSettings) HasMoveAfter() bool {
	if o != nil && o.MoveAfter.IsSet() {
		return true
	}

	return false
}

// SetMoveAfter gets a reference to the given NullableInt64 and assigns it to the MoveAfter field.
func (o *CommonCloudTierSettings) SetMoveAfter(v int64) {
	o.MoveAfter.Set(&v)
}
// SetMoveAfterNil sets the value for MoveAfter to be an explicit nil
func (o *CommonCloudTierSettings) SetMoveAfterNil() {
	o.MoveAfter.Set(nil)
}

// UnsetMoveAfter ensures that no value is present for MoveAfter, not even an explicit nil
func (o *CommonCloudTierSettings) UnsetMoveAfter() {
	o.MoveAfter.Unset()
}

func (o CommonCloudTierSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MoveAfterUnit.IsSet() {
		toSerialize["moveAfterUnit"] = o.MoveAfterUnit.Get()
	}
	if o.MoveAfter.IsSet() {
		toSerialize["moveAfter"] = o.MoveAfter.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCommonCloudTierSettings struct {
	value *CommonCloudTierSettings
	isSet bool
}

func (v NullableCommonCloudTierSettings) Get() *CommonCloudTierSettings {
	return v.value
}

func (v *NullableCommonCloudTierSettings) Set(val *CommonCloudTierSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonCloudTierSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonCloudTierSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonCloudTierSettings(val *CommonCloudTierSettings) *NullableCommonCloudTierSettings {
	return &NullableCommonCloudTierSettings{value: val, isSet: true}
}

func (v NullableCommonCloudTierSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonCloudTierSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


