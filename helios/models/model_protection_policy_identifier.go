/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ProtectionPolicyIdentifier Specifies Protection Policy Identifier.
type ProtectionPolicyIdentifier struct {
	// Specifies Protection Policy id.
	ProtectionPolicyId NullableString `json:"protectionPolicyId,omitempty"`
	// Specifies Protection Policy name.
	ProtectionPolicyName NullableString `json:"protectionPolicyName,omitempty"`
}

// NewProtectionPolicyIdentifier instantiates a new ProtectionPolicyIdentifier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionPolicyIdentifier() *ProtectionPolicyIdentifier {
	this := ProtectionPolicyIdentifier{}
	return &this
}

// NewProtectionPolicyIdentifierWithDefaults instantiates a new ProtectionPolicyIdentifier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionPolicyIdentifierWithDefaults() *ProtectionPolicyIdentifier {
	this := ProtectionPolicyIdentifier{}
	return &this
}

// GetProtectionPolicyId returns the ProtectionPolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionPolicyIdentifier) GetProtectionPolicyId() string {
	if o == nil || o.ProtectionPolicyId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProtectionPolicyId.Get()
}

// GetProtectionPolicyIdOk returns a tuple with the ProtectionPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionPolicyIdentifier) GetProtectionPolicyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionPolicyId.Get(), o.ProtectionPolicyId.IsSet()
}

// HasProtectionPolicyId returns a boolean if a field has been set.
func (o *ProtectionPolicyIdentifier) HasProtectionPolicyId() bool {
	if o != nil && o.ProtectionPolicyId.IsSet() {
		return true
	}

	return false
}

// SetProtectionPolicyId gets a reference to the given NullableString and assigns it to the ProtectionPolicyId field.
func (o *ProtectionPolicyIdentifier) SetProtectionPolicyId(v string) {
	o.ProtectionPolicyId.Set(&v)
}
// SetProtectionPolicyIdNil sets the value for ProtectionPolicyId to be an explicit nil
func (o *ProtectionPolicyIdentifier) SetProtectionPolicyIdNil() {
	o.ProtectionPolicyId.Set(nil)
}

// UnsetProtectionPolicyId ensures that no value is present for ProtectionPolicyId, not even an explicit nil
func (o *ProtectionPolicyIdentifier) UnsetProtectionPolicyId() {
	o.ProtectionPolicyId.Unset()
}

// GetProtectionPolicyName returns the ProtectionPolicyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionPolicyIdentifier) GetProtectionPolicyName() string {
	if o == nil || o.ProtectionPolicyName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProtectionPolicyName.Get()
}

// GetProtectionPolicyNameOk returns a tuple with the ProtectionPolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionPolicyIdentifier) GetProtectionPolicyNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionPolicyName.Get(), o.ProtectionPolicyName.IsSet()
}

// HasProtectionPolicyName returns a boolean if a field has been set.
func (o *ProtectionPolicyIdentifier) HasProtectionPolicyName() bool {
	if o != nil && o.ProtectionPolicyName.IsSet() {
		return true
	}

	return false
}

// SetProtectionPolicyName gets a reference to the given NullableString and assigns it to the ProtectionPolicyName field.
func (o *ProtectionPolicyIdentifier) SetProtectionPolicyName(v string) {
	o.ProtectionPolicyName.Set(&v)
}
// SetProtectionPolicyNameNil sets the value for ProtectionPolicyName to be an explicit nil
func (o *ProtectionPolicyIdentifier) SetProtectionPolicyNameNil() {
	o.ProtectionPolicyName.Set(nil)
}

// UnsetProtectionPolicyName ensures that no value is present for ProtectionPolicyName, not even an explicit nil
func (o *ProtectionPolicyIdentifier) UnsetProtectionPolicyName() {
	o.ProtectionPolicyName.Unset()
}

func (o ProtectionPolicyIdentifier) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProtectionPolicyId.IsSet() {
		toSerialize["protectionPolicyId"] = o.ProtectionPolicyId.Get()
	}
	if o.ProtectionPolicyName.IsSet() {
		toSerialize["protectionPolicyName"] = o.ProtectionPolicyName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProtectionPolicyIdentifier struct {
	value *ProtectionPolicyIdentifier
	isSet bool
}

func (v NullableProtectionPolicyIdentifier) Get() *ProtectionPolicyIdentifier {
	return v.value
}

func (v *NullableProtectionPolicyIdentifier) Set(val *ProtectionPolicyIdentifier) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionPolicyIdentifier) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionPolicyIdentifier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionPolicyIdentifier(val *ProtectionPolicyIdentifier) *NullableProtectionPolicyIdentifier {
	return &NullableProtectionPolicyIdentifier{value: val, isSet: true}
}

func (v NullableProtectionPolicyIdentifier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionPolicyIdentifier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


