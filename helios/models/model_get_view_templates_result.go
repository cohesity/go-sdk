/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// GetViewTemplatesResult Specifies the list of view template returned that matched the specified filter criteria.
type GetViewTemplatesResult struct {
	// Array of view template. Specifies the list of view templates returned in this response.
	Templates []Template `json:"Templates,omitempty"`
}

// NewGetViewTemplatesResult instantiates a new GetViewTemplatesResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetViewTemplatesResult() *GetViewTemplatesResult {
	this := GetViewTemplatesResult{}
	return &this
}

// NewGetViewTemplatesResultWithDefaults instantiates a new GetViewTemplatesResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetViewTemplatesResultWithDefaults() *GetViewTemplatesResult {
	this := GetViewTemplatesResult{}
	return &this
}

// GetTemplates returns the Templates field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetViewTemplatesResult) GetTemplates() []Template {
	if o == nil  {
		var ret []Template
		return ret
	}
	return o.Templates
}

// GetTemplatesOk returns a tuple with the Templates field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetViewTemplatesResult) GetTemplatesOk() (*[]Template, bool) {
	if o == nil || o.Templates == nil {
		return nil, false
	}
	return &o.Templates, true
}

// HasTemplates returns a boolean if a field has been set.
func (o *GetViewTemplatesResult) HasTemplates() bool {
	if o != nil && o.Templates != nil {
		return true
	}

	return false
}

// SetTemplates gets a reference to the given []Template and assigns it to the Templates field.
func (o *GetViewTemplatesResult) SetTemplates(v []Template) {
	o.Templates = v
}

func (o GetViewTemplatesResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Templates != nil {
		toSerialize["Templates"] = o.Templates
	}
	return json.Marshal(toSerialize)
}

type NullableGetViewTemplatesResult struct {
	value *GetViewTemplatesResult
	isSet bool
}

func (v NullableGetViewTemplatesResult) Get() *GetViewTemplatesResult {
	return v.value
}

func (v *NullableGetViewTemplatesResult) Set(val *GetViewTemplatesResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetViewTemplatesResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetViewTemplatesResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetViewTemplatesResult(val *GetViewTemplatesResult) *NullableGetViewTemplatesResult {
	return &NullableGetViewTemplatesResult{value: val, isSet: true}
}

func (v NullableGetViewTemplatesResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetViewTemplatesResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


