/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// PerformRunActionResponse Specifies the response of the performed run action.
type PerformRunActionResponse struct {
	// Specifies the type of the action is performed on protection runs.
	Action NullableString `json:"action,omitempty"`
	// Specifies the pause action response params.
	PauseParams *[]PauseProtectionRunActionResponseParams `json:"pauseParams,omitempty"`
	// Specifies the resume action response params.
	ResumeParams *[]ResumeProtectionRunActionResponseParams `json:"resumeParams,omitempty"`
	// Specifies the cancel action response params.
	CancelParams *[]CancelProtectionGroupRunResponseParams `json:"cancelParams,omitempty"`
}

// NewPerformRunActionResponse instantiates a new PerformRunActionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPerformRunActionResponse() *PerformRunActionResponse {
	this := PerformRunActionResponse{}
	return &this
}

// NewPerformRunActionResponseWithDefaults instantiates a new PerformRunActionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPerformRunActionResponseWithDefaults() *PerformRunActionResponse {
	this := PerformRunActionResponse{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRunActionResponse) GetAction() string {
	if o == nil || o.Action.Get() == nil {
		var ret string
		return ret
	}
	return *o.Action.Get()
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRunActionResponse) GetActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Action.Get(), o.Action.IsSet()
}

// HasAction returns a boolean if a field has been set.
func (o *PerformRunActionResponse) HasAction() bool {
	if o != nil && o.Action.IsSet() {
		return true
	}

	return false
}

// SetAction gets a reference to the given NullableString and assigns it to the Action field.
func (o *PerformRunActionResponse) SetAction(v string) {
	o.Action.Set(&v)
}
// SetActionNil sets the value for Action to be an explicit nil
func (o *PerformRunActionResponse) SetActionNil() {
	o.Action.Set(nil)
}

// UnsetAction ensures that no value is present for Action, not even an explicit nil
func (o *PerformRunActionResponse) UnsetAction() {
	o.Action.Unset()
}

// GetPauseParams returns the PauseParams field value if set, zero value otherwise.
func (o *PerformRunActionResponse) GetPauseParams() []PauseProtectionRunActionResponseParams {
	if o == nil || o.PauseParams == nil {
		var ret []PauseProtectionRunActionResponseParams
		return ret
	}
	return *o.PauseParams
}

// GetPauseParamsOk returns a tuple with the PauseParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRunActionResponse) GetPauseParamsOk() (*[]PauseProtectionRunActionResponseParams, bool) {
	if o == nil || o.PauseParams == nil {
		return nil, false
	}
	return o.PauseParams, true
}

// HasPauseParams returns a boolean if a field has been set.
func (o *PerformRunActionResponse) HasPauseParams() bool {
	if o != nil && o.PauseParams != nil {
		return true
	}

	return false
}

// SetPauseParams gets a reference to the given []PauseProtectionRunActionResponseParams and assigns it to the PauseParams field.
func (o *PerformRunActionResponse) SetPauseParams(v []PauseProtectionRunActionResponseParams) {
	o.PauseParams = &v
}

// GetResumeParams returns the ResumeParams field value if set, zero value otherwise.
func (o *PerformRunActionResponse) GetResumeParams() []ResumeProtectionRunActionResponseParams {
	if o == nil || o.ResumeParams == nil {
		var ret []ResumeProtectionRunActionResponseParams
		return ret
	}
	return *o.ResumeParams
}

// GetResumeParamsOk returns a tuple with the ResumeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRunActionResponse) GetResumeParamsOk() (*[]ResumeProtectionRunActionResponseParams, bool) {
	if o == nil || o.ResumeParams == nil {
		return nil, false
	}
	return o.ResumeParams, true
}

// HasResumeParams returns a boolean if a field has been set.
func (o *PerformRunActionResponse) HasResumeParams() bool {
	if o != nil && o.ResumeParams != nil {
		return true
	}

	return false
}

// SetResumeParams gets a reference to the given []ResumeProtectionRunActionResponseParams and assigns it to the ResumeParams field.
func (o *PerformRunActionResponse) SetResumeParams(v []ResumeProtectionRunActionResponseParams) {
	o.ResumeParams = &v
}

// GetCancelParams returns the CancelParams field value if set, zero value otherwise.
func (o *PerformRunActionResponse) GetCancelParams() []CancelProtectionGroupRunResponseParams {
	if o == nil || o.CancelParams == nil {
		var ret []CancelProtectionGroupRunResponseParams
		return ret
	}
	return *o.CancelParams
}

// GetCancelParamsOk returns a tuple with the CancelParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRunActionResponse) GetCancelParamsOk() (*[]CancelProtectionGroupRunResponseParams, bool) {
	if o == nil || o.CancelParams == nil {
		return nil, false
	}
	return o.CancelParams, true
}

// HasCancelParams returns a boolean if a field has been set.
func (o *PerformRunActionResponse) HasCancelParams() bool {
	if o != nil && o.CancelParams != nil {
		return true
	}

	return false
}

// SetCancelParams gets a reference to the given []CancelProtectionGroupRunResponseParams and assigns it to the CancelParams field.
func (o *PerformRunActionResponse) SetCancelParams(v []CancelProtectionGroupRunResponseParams) {
	o.CancelParams = &v
}

func (o PerformRunActionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action.IsSet() {
		toSerialize["action"] = o.Action.Get()
	}
	if o.PauseParams != nil {
		toSerialize["pauseParams"] = o.PauseParams
	}
	if o.ResumeParams != nil {
		toSerialize["resumeParams"] = o.ResumeParams
	}
	if o.CancelParams != nil {
		toSerialize["cancelParams"] = o.CancelParams
	}
	return json.Marshal(toSerialize)
}

type NullablePerformRunActionResponse struct {
	value *PerformRunActionResponse
	isSet bool
}

func (v NullablePerformRunActionResponse) Get() *PerformRunActionResponse {
	return v.value
}

func (v *NullablePerformRunActionResponse) Set(val *PerformRunActionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePerformRunActionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePerformRunActionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePerformRunActionResponse(val *PerformRunActionResponse) *NullablePerformRunActionResponse {
	return &NullablePerformRunActionResponse{value: val, isSet: true}
}

func (v NullablePerformRunActionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePerformRunActionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


