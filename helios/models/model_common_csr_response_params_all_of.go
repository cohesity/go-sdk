/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CommonCsrResponseParamsAllOf struct for CommonCsrResponseParamsAllOf
type CommonCsrResponseParamsAllOf struct {
	// Specifies the id of the CSR.
	Id NullableString `json:"id,omitempty"`
	// Specifies the public key generated for this CSR.
	PublicKey NullableString `json:"publicKey,omitempty"`
	// Specifies the CSR generated for the service.
	Csr NullableString `json:"csr,omitempty"`
}

// NewCommonCsrResponseParamsAllOf instantiates a new CommonCsrResponseParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonCsrResponseParamsAllOf() *CommonCsrResponseParamsAllOf {
	this := CommonCsrResponseParamsAllOf{}
	return &this
}

// NewCommonCsrResponseParamsAllOfWithDefaults instantiates a new CommonCsrResponseParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonCsrResponseParamsAllOfWithDefaults() *CommonCsrResponseParamsAllOf {
	this := CommonCsrResponseParamsAllOf{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonCsrResponseParamsAllOf) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonCsrResponseParamsAllOf) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CommonCsrResponseParamsAllOf) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *CommonCsrResponseParamsAllOf) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CommonCsrResponseParamsAllOf) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CommonCsrResponseParamsAllOf) UnsetId() {
	o.Id.Unset()
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonCsrResponseParamsAllOf) GetPublicKey() string {
	if o == nil || o.PublicKey.Get() == nil {
		var ret string
		return ret
	}
	return *o.PublicKey.Get()
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonCsrResponseParamsAllOf) GetPublicKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PublicKey.Get(), o.PublicKey.IsSet()
}

// HasPublicKey returns a boolean if a field has been set.
func (o *CommonCsrResponseParamsAllOf) HasPublicKey() bool {
	if o != nil && o.PublicKey.IsSet() {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given NullableString and assigns it to the PublicKey field.
func (o *CommonCsrResponseParamsAllOf) SetPublicKey(v string) {
	o.PublicKey.Set(&v)
}
// SetPublicKeyNil sets the value for PublicKey to be an explicit nil
func (o *CommonCsrResponseParamsAllOf) SetPublicKeyNil() {
	o.PublicKey.Set(nil)
}

// UnsetPublicKey ensures that no value is present for PublicKey, not even an explicit nil
func (o *CommonCsrResponseParamsAllOf) UnsetPublicKey() {
	o.PublicKey.Unset()
}

// GetCsr returns the Csr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonCsrResponseParamsAllOf) GetCsr() string {
	if o == nil || o.Csr.Get() == nil {
		var ret string
		return ret
	}
	return *o.Csr.Get()
}

// GetCsrOk returns a tuple with the Csr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonCsrResponseParamsAllOf) GetCsrOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Csr.Get(), o.Csr.IsSet()
}

// HasCsr returns a boolean if a field has been set.
func (o *CommonCsrResponseParamsAllOf) HasCsr() bool {
	if o != nil && o.Csr.IsSet() {
		return true
	}

	return false
}

// SetCsr gets a reference to the given NullableString and assigns it to the Csr field.
func (o *CommonCsrResponseParamsAllOf) SetCsr(v string) {
	o.Csr.Set(&v)
}
// SetCsrNil sets the value for Csr to be an explicit nil
func (o *CommonCsrResponseParamsAllOf) SetCsrNil() {
	o.Csr.Set(nil)
}

// UnsetCsr ensures that no value is present for Csr, not even an explicit nil
func (o *CommonCsrResponseParamsAllOf) UnsetCsr() {
	o.Csr.Unset()
}

func (o CommonCsrResponseParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.PublicKey.IsSet() {
		toSerialize["publicKey"] = o.PublicKey.Get()
	}
	if o.Csr.IsSet() {
		toSerialize["csr"] = o.Csr.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCommonCsrResponseParamsAllOf struct {
	value *CommonCsrResponseParamsAllOf
	isSet bool
}

func (v NullableCommonCsrResponseParamsAllOf) Get() *CommonCsrResponseParamsAllOf {
	return v.value
}

func (v *NullableCommonCsrResponseParamsAllOf) Set(val *CommonCsrResponseParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonCsrResponseParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonCsrResponseParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonCsrResponseParamsAllOf(val *CommonCsrResponseParamsAllOf) *NullableCommonCsrResponseParamsAllOf {
	return &NullableCommonCsrResponseParamsAllOf{value: val, isSet: true}
}

func (v NullableCommonCsrResponseParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonCsrResponseParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


