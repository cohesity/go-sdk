/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CommonPreBackupScriptParamsAllOf struct for CommonPreBackupScriptParamsAllOf
type CommonPreBackupScriptParamsAllOf struct {
	// Specifies if the script needs to continue even if there is an occurence of an error. If this flag is set to true, then Backup Run will start even if the pre backup script fails. If not specified or false, then backup run will not start when script fails.
	ContinueOnError NullableBool `json:"continueOnError,omitempty"`
}

// NewCommonPreBackupScriptParamsAllOf instantiates a new CommonPreBackupScriptParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonPreBackupScriptParamsAllOf() *CommonPreBackupScriptParamsAllOf {
	this := CommonPreBackupScriptParamsAllOf{}
	return &this
}

// NewCommonPreBackupScriptParamsAllOfWithDefaults instantiates a new CommonPreBackupScriptParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonPreBackupScriptParamsAllOfWithDefaults() *CommonPreBackupScriptParamsAllOf {
	this := CommonPreBackupScriptParamsAllOf{}
	return &this
}

// GetContinueOnError returns the ContinueOnError field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonPreBackupScriptParamsAllOf) GetContinueOnError() bool {
	if o == nil || o.ContinueOnError.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ContinueOnError.Get()
}

// GetContinueOnErrorOk returns a tuple with the ContinueOnError field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonPreBackupScriptParamsAllOf) GetContinueOnErrorOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ContinueOnError.Get(), o.ContinueOnError.IsSet()
}

// HasContinueOnError returns a boolean if a field has been set.
func (o *CommonPreBackupScriptParamsAllOf) HasContinueOnError() bool {
	if o != nil && o.ContinueOnError.IsSet() {
		return true
	}

	return false
}

// SetContinueOnError gets a reference to the given NullableBool and assigns it to the ContinueOnError field.
func (o *CommonPreBackupScriptParamsAllOf) SetContinueOnError(v bool) {
	o.ContinueOnError.Set(&v)
}
// SetContinueOnErrorNil sets the value for ContinueOnError to be an explicit nil
func (o *CommonPreBackupScriptParamsAllOf) SetContinueOnErrorNil() {
	o.ContinueOnError.Set(nil)
}

// UnsetContinueOnError ensures that no value is present for ContinueOnError, not even an explicit nil
func (o *CommonPreBackupScriptParamsAllOf) UnsetContinueOnError() {
	o.ContinueOnError.Unset()
}

func (o CommonPreBackupScriptParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContinueOnError.IsSet() {
		toSerialize["continueOnError"] = o.ContinueOnError.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCommonPreBackupScriptParamsAllOf struct {
	value *CommonPreBackupScriptParamsAllOf
	isSet bool
}

func (v NullableCommonPreBackupScriptParamsAllOf) Get() *CommonPreBackupScriptParamsAllOf {
	return v.value
}

func (v *NullableCommonPreBackupScriptParamsAllOf) Set(val *CommonPreBackupScriptParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonPreBackupScriptParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonPreBackupScriptParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonPreBackupScriptParamsAllOf(val *CommonPreBackupScriptParamsAllOf) *NullableCommonPreBackupScriptParamsAllOf {
	return &NullableCommonPreBackupScriptParamsAllOf{value: val, isSet: true}
}

func (v NullableCommonPreBackupScriptParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonPreBackupScriptParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


