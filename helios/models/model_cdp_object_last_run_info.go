/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CdpObjectLastRunInfo Specifies the last backup information for a given CDP object.
type CdpObjectLastRunInfo struct {
	LocalBackupInfo *CdpLocalBackupInfo `json:"localBackupInfo,omitempty"`
}

// NewCdpObjectLastRunInfo instantiates a new CdpObjectLastRunInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdpObjectLastRunInfo() *CdpObjectLastRunInfo {
	this := CdpObjectLastRunInfo{}
	return &this
}

// NewCdpObjectLastRunInfoWithDefaults instantiates a new CdpObjectLastRunInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdpObjectLastRunInfoWithDefaults() *CdpObjectLastRunInfo {
	this := CdpObjectLastRunInfo{}
	return &this
}

// GetLocalBackupInfo returns the LocalBackupInfo field value if set, zero value otherwise.
func (o *CdpObjectLastRunInfo) GetLocalBackupInfo() CdpLocalBackupInfo {
	if o == nil || o.LocalBackupInfo == nil {
		var ret CdpLocalBackupInfo
		return ret
	}
	return *o.LocalBackupInfo
}

// GetLocalBackupInfoOk returns a tuple with the LocalBackupInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdpObjectLastRunInfo) GetLocalBackupInfoOk() (*CdpLocalBackupInfo, bool) {
	if o == nil || o.LocalBackupInfo == nil {
		return nil, false
	}
	return o.LocalBackupInfo, true
}

// HasLocalBackupInfo returns a boolean if a field has been set.
func (o *CdpObjectLastRunInfo) HasLocalBackupInfo() bool {
	if o != nil && o.LocalBackupInfo != nil {
		return true
	}

	return false
}

// SetLocalBackupInfo gets a reference to the given CdpLocalBackupInfo and assigns it to the LocalBackupInfo field.
func (o *CdpObjectLastRunInfo) SetLocalBackupInfo(v CdpLocalBackupInfo) {
	o.LocalBackupInfo = &v
}

func (o CdpObjectLastRunInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LocalBackupInfo != nil {
		toSerialize["localBackupInfo"] = o.LocalBackupInfo
	}
	return json.Marshal(toSerialize)
}

type NullableCdpObjectLastRunInfo struct {
	value *CdpObjectLastRunInfo
	isSet bool
}

func (v NullableCdpObjectLastRunInfo) Get() *CdpObjectLastRunInfo {
	return v.value
}

func (v *NullableCdpObjectLastRunInfo) Set(val *CdpObjectLastRunInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCdpObjectLastRunInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCdpObjectLastRunInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdpObjectLastRunInfo(val *CdpObjectLastRunInfo) *NullableCdpObjectLastRunInfo {
	return &NullableCdpObjectLastRunInfo{value: val, isSet: true}
}

func (v NullableCdpObjectLastRunInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdpObjectLastRunInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


