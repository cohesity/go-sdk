/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// GpfsObjectProtectionParams Specifies the parameters which are specific to Gpfs object protection.
type GpfsObjectProtectionParams struct {
	// Specifies the protocol of the NAS device being backed up.
	Protocol NullableString `json:"protocol,omitempty"`
}

// NewGpfsObjectProtectionParams instantiates a new GpfsObjectProtectionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGpfsObjectProtectionParams() *GpfsObjectProtectionParams {
	this := GpfsObjectProtectionParams{}
	return &this
}

// NewGpfsObjectProtectionParamsWithDefaults instantiates a new GpfsObjectProtectionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGpfsObjectProtectionParamsWithDefaults() *GpfsObjectProtectionParams {
	this := GpfsObjectProtectionParams{}
	return &this
}

// GetProtocol returns the Protocol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GpfsObjectProtectionParams) GetProtocol() string {
	if o == nil || o.Protocol.Get() == nil {
		var ret string
		return ret
	}
	return *o.Protocol.Get()
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GpfsObjectProtectionParams) GetProtocolOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Protocol.Get(), o.Protocol.IsSet()
}

// HasProtocol returns a boolean if a field has been set.
func (o *GpfsObjectProtectionParams) HasProtocol() bool {
	if o != nil && o.Protocol.IsSet() {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given NullableString and assigns it to the Protocol field.
func (o *GpfsObjectProtectionParams) SetProtocol(v string) {
	o.Protocol.Set(&v)
}
// SetProtocolNil sets the value for Protocol to be an explicit nil
func (o *GpfsObjectProtectionParams) SetProtocolNil() {
	o.Protocol.Set(nil)
}

// UnsetProtocol ensures that no value is present for Protocol, not even an explicit nil
func (o *GpfsObjectProtectionParams) UnsetProtocol() {
	o.Protocol.Unset()
}

func (o GpfsObjectProtectionParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Protocol.IsSet() {
		toSerialize["protocol"] = o.Protocol.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGpfsObjectProtectionParams struct {
	value *GpfsObjectProtectionParams
	isSet bool
}

func (v NullableGpfsObjectProtectionParams) Get() *GpfsObjectProtectionParams {
	return v.value
}

func (v *NullableGpfsObjectProtectionParams) Set(val *GpfsObjectProtectionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGpfsObjectProtectionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGpfsObjectProtectionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGpfsObjectProtectionParams(val *GpfsObjectProtectionParams) *NullableGpfsObjectProtectionParams {
	return &NullableGpfsObjectProtectionParams{value: val, isSet: true}
}

func (v NullableGpfsObjectProtectionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGpfsObjectProtectionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


