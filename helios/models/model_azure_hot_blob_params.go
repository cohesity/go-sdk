/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// AzureHotBlobParams Specifies the parameters which are specific to Azure related with tier type Hot Blob
type AzureHotBlobParams struct {
	// Specifies the category of the external target.
	Category NullableString `json:"category"`
}

// NewAzureHotBlobParams instantiates a new AzureHotBlobParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureHotBlobParams(category NullableString) *AzureHotBlobParams {
	this := AzureHotBlobParams{}
	this.Category = category
	return &this
}

// NewAzureHotBlobParamsWithDefaults instantiates a new AzureHotBlobParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureHotBlobParamsWithDefaults() *AzureHotBlobParams {
	this := AzureHotBlobParams{}
	return &this
}

// GetCategory returns the Category field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AzureHotBlobParams) GetCategory() string {
	if o == nil || o.Category.Get() == nil {
		var ret string
		return ret
	}

	return *o.Category.Get()
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureHotBlobParams) GetCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Category.Get(), o.Category.IsSet()
}

// SetCategory sets field value
func (o *AzureHotBlobParams) SetCategory(v string) {
	o.Category.Set(&v)
}

func (o AzureHotBlobParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["category"] = o.Category.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAzureHotBlobParams struct {
	value *AzureHotBlobParams
	isSet bool
}

func (v NullableAzureHotBlobParams) Get() *AzureHotBlobParams {
	return v.value
}

func (v *NullableAzureHotBlobParams) Set(val *AzureHotBlobParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureHotBlobParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureHotBlobParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureHotBlobParams(val *AzureHotBlobParams) *NullableAzureHotBlobParams {
	return &NullableAzureHotBlobParams{value: val, isSet: true}
}

func (v NullableAzureHotBlobParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureHotBlobParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


