/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ProtectedObjectInfoAllOf struct for ProtectedObjectInfoAllOf
type ProtectedObjectInfoAllOf struct {
	// Specifies the list of tenants that have permissions for this accessing given protected object.
	Permissions []Tenant `json:"permissions,omitempty"`
	ObjectBackupConfiguration *ProtectedObjectBackupConfig `json:"objectBackupConfiguration,omitempty"`
	// Specifies the protection info associated with every object. There can be multiple instances of protection info since the same object can be protected in multiple protection groups.
	ProtectionGroupConfigurations []ProtectedObjectGroupBackupConfig `json:"protectionGroupConfigurations,omitempty"`
	LastRun *ObjectProtectionRunSummary `json:"lastRun,omitempty"`
}

// NewProtectedObjectInfoAllOf instantiates a new ProtectedObjectInfoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectedObjectInfoAllOf() *ProtectedObjectInfoAllOf {
	this := ProtectedObjectInfoAllOf{}
	return &this
}

// NewProtectedObjectInfoAllOfWithDefaults instantiates a new ProtectedObjectInfoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectedObjectInfoAllOfWithDefaults() *ProtectedObjectInfoAllOf {
	this := ProtectedObjectInfoAllOf{}
	return &this
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectInfoAllOf) GetPermissions() []Tenant {
	if o == nil  {
		var ret []Tenant
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectInfoAllOf) GetPermissionsOk() (*[]Tenant, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return &o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *ProtectedObjectInfoAllOf) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []Tenant and assigns it to the Permissions field.
func (o *ProtectedObjectInfoAllOf) SetPermissions(v []Tenant) {
	o.Permissions = v
}

// GetObjectBackupConfiguration returns the ObjectBackupConfiguration field value if set, zero value otherwise.
func (o *ProtectedObjectInfoAllOf) GetObjectBackupConfiguration() ProtectedObjectBackupConfig {
	if o == nil || o.ObjectBackupConfiguration == nil {
		var ret ProtectedObjectBackupConfig
		return ret
	}
	return *o.ObjectBackupConfiguration
}

// GetObjectBackupConfigurationOk returns a tuple with the ObjectBackupConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectInfoAllOf) GetObjectBackupConfigurationOk() (*ProtectedObjectBackupConfig, bool) {
	if o == nil || o.ObjectBackupConfiguration == nil {
		return nil, false
	}
	return o.ObjectBackupConfiguration, true
}

// HasObjectBackupConfiguration returns a boolean if a field has been set.
func (o *ProtectedObjectInfoAllOf) HasObjectBackupConfiguration() bool {
	if o != nil && o.ObjectBackupConfiguration != nil {
		return true
	}

	return false
}

// SetObjectBackupConfiguration gets a reference to the given ProtectedObjectBackupConfig and assigns it to the ObjectBackupConfiguration field.
func (o *ProtectedObjectInfoAllOf) SetObjectBackupConfiguration(v ProtectedObjectBackupConfig) {
	o.ObjectBackupConfiguration = &v
}

// GetProtectionGroupConfigurations returns the ProtectionGroupConfigurations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectedObjectInfoAllOf) GetProtectionGroupConfigurations() []ProtectedObjectGroupBackupConfig {
	if o == nil  {
		var ret []ProtectedObjectGroupBackupConfig
		return ret
	}
	return o.ProtectionGroupConfigurations
}

// GetProtectionGroupConfigurationsOk returns a tuple with the ProtectionGroupConfigurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectedObjectInfoAllOf) GetProtectionGroupConfigurationsOk() (*[]ProtectedObjectGroupBackupConfig, bool) {
	if o == nil || o.ProtectionGroupConfigurations == nil {
		return nil, false
	}
	return &o.ProtectionGroupConfigurations, true
}

// HasProtectionGroupConfigurations returns a boolean if a field has been set.
func (o *ProtectedObjectInfoAllOf) HasProtectionGroupConfigurations() bool {
	if o != nil && o.ProtectionGroupConfigurations != nil {
		return true
	}

	return false
}

// SetProtectionGroupConfigurations gets a reference to the given []ProtectedObjectGroupBackupConfig and assigns it to the ProtectionGroupConfigurations field.
func (o *ProtectedObjectInfoAllOf) SetProtectionGroupConfigurations(v []ProtectedObjectGroupBackupConfig) {
	o.ProtectionGroupConfigurations = v
}

// GetLastRun returns the LastRun field value if set, zero value otherwise.
func (o *ProtectedObjectInfoAllOf) GetLastRun() ObjectProtectionRunSummary {
	if o == nil || o.LastRun == nil {
		var ret ObjectProtectionRunSummary
		return ret
	}
	return *o.LastRun
}

// GetLastRunOk returns a tuple with the LastRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedObjectInfoAllOf) GetLastRunOk() (*ObjectProtectionRunSummary, bool) {
	if o == nil || o.LastRun == nil {
		return nil, false
	}
	return o.LastRun, true
}

// HasLastRun returns a boolean if a field has been set.
func (o *ProtectedObjectInfoAllOf) HasLastRun() bool {
	if o != nil && o.LastRun != nil {
		return true
	}

	return false
}

// SetLastRun gets a reference to the given ObjectProtectionRunSummary and assigns it to the LastRun field.
func (o *ProtectedObjectInfoAllOf) SetLastRun(v ObjectProtectionRunSummary) {
	o.LastRun = &v
}

func (o ProtectedObjectInfoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.ObjectBackupConfiguration != nil {
		toSerialize["objectBackupConfiguration"] = o.ObjectBackupConfiguration
	}
	if o.ProtectionGroupConfigurations != nil {
		toSerialize["protectionGroupConfigurations"] = o.ProtectionGroupConfigurations
	}
	if o.LastRun != nil {
		toSerialize["lastRun"] = o.LastRun
	}
	return json.Marshal(toSerialize)
}

type NullableProtectedObjectInfoAllOf struct {
	value *ProtectedObjectInfoAllOf
	isSet bool
}

func (v NullableProtectedObjectInfoAllOf) Get() *ProtectedObjectInfoAllOf {
	return v.value
}

func (v *NullableProtectedObjectInfoAllOf) Set(val *ProtectedObjectInfoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectedObjectInfoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectedObjectInfoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectedObjectInfoAllOf(val *ProtectedObjectInfoAllOf) *NullableProtectedObjectInfoAllOf {
	return &NullableProtectedObjectInfoAllOf{value: val, isSet: true}
}

func (v NullableProtectedObjectInfoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectedObjectInfoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


