/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ProtectionPolicyResponseWithPagination Specifies the details about the Protection Policy.
type ProtectionPolicyResponseWithPagination struct {
	// Specifies a list of protection policies.
	Policies []ProtectionPolicyResponse `json:"policies,omitempty"`
}

// NewProtectionPolicyResponseWithPagination instantiates a new ProtectionPolicyResponseWithPagination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionPolicyResponseWithPagination() *ProtectionPolicyResponseWithPagination {
	this := ProtectionPolicyResponseWithPagination{}
	return &this
}

// NewProtectionPolicyResponseWithPaginationWithDefaults instantiates a new ProtectionPolicyResponseWithPagination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionPolicyResponseWithPaginationWithDefaults() *ProtectionPolicyResponseWithPagination {
	this := ProtectionPolicyResponseWithPagination{}
	return &this
}

// GetPolicies returns the Policies field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionPolicyResponseWithPagination) GetPolicies() []ProtectionPolicyResponse {
	if o == nil  {
		var ret []ProtectionPolicyResponse
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionPolicyResponseWithPagination) GetPoliciesOk() (*[]ProtectionPolicyResponse, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return &o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *ProtectionPolicyResponseWithPagination) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []ProtectionPolicyResponse and assigns it to the Policies field.
func (o *ProtectionPolicyResponseWithPagination) SetPolicies(v []ProtectionPolicyResponse) {
	o.Policies = v
}

func (o ProtectionPolicyResponseWithPagination) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableProtectionPolicyResponseWithPagination struct {
	value *ProtectionPolicyResponseWithPagination
	isSet bool
}

func (v NullableProtectionPolicyResponseWithPagination) Get() *ProtectionPolicyResponseWithPagination {
	return v.value
}

func (v *NullableProtectionPolicyResponseWithPagination) Set(val *ProtectionPolicyResponseWithPagination) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionPolicyResponseWithPagination) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionPolicyResponseWithPagination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionPolicyResponseWithPagination(val *ProtectionPolicyResponseWithPagination) *NullableProtectionPolicyResponseWithPagination {
	return &NullableProtectionPolicyResponseWithPagination{value: val, isSet: true}
}

func (v NullableProtectionPolicyResponseWithPagination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionPolicyResponseWithPagination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


