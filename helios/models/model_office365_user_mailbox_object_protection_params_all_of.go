/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// Office365UserMailboxObjectProtectionParamsAllOf struct for Office365UserMailboxObjectProtectionParamsAllOf
type Office365UserMailboxObjectProtectionParamsAllOf struct {
	// Specifies filters to match Outlook folders which should be excluded when backing up office365 mailbox source. Two kinds of filters are supported. a) prefix which always starts with '/'. b) posix which always starts with empty quotes(''). Regular expressions are not supported. If not specified, all the mailbox folders will be protected.
	ExcludeFolders []string `json:"excludeFolders,omitempty"`
}

// NewOffice365UserMailboxObjectProtectionParamsAllOf instantiates a new Office365UserMailboxObjectProtectionParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOffice365UserMailboxObjectProtectionParamsAllOf() *Office365UserMailboxObjectProtectionParamsAllOf {
	this := Office365UserMailboxObjectProtectionParamsAllOf{}
	return &this
}

// NewOffice365UserMailboxObjectProtectionParamsAllOfWithDefaults instantiates a new Office365UserMailboxObjectProtectionParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOffice365UserMailboxObjectProtectionParamsAllOfWithDefaults() *Office365UserMailboxObjectProtectionParamsAllOf {
	this := Office365UserMailboxObjectProtectionParamsAllOf{}
	return &this
}

// GetExcludeFolders returns the ExcludeFolders field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Office365UserMailboxObjectProtectionParamsAllOf) GetExcludeFolders() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.ExcludeFolders
}

// GetExcludeFoldersOk returns a tuple with the ExcludeFolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Office365UserMailboxObjectProtectionParamsAllOf) GetExcludeFoldersOk() (*[]string, bool) {
	if o == nil || o.ExcludeFolders == nil {
		return nil, false
	}
	return &o.ExcludeFolders, true
}

// HasExcludeFolders returns a boolean if a field has been set.
func (o *Office365UserMailboxObjectProtectionParamsAllOf) HasExcludeFolders() bool {
	if o != nil && o.ExcludeFolders != nil {
		return true
	}

	return false
}

// SetExcludeFolders gets a reference to the given []string and assigns it to the ExcludeFolders field.
func (o *Office365UserMailboxObjectProtectionParamsAllOf) SetExcludeFolders(v []string) {
	o.ExcludeFolders = v
}

func (o Office365UserMailboxObjectProtectionParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExcludeFolders != nil {
		toSerialize["excludeFolders"] = o.ExcludeFolders
	}
	return json.Marshal(toSerialize)
}

type NullableOffice365UserMailboxObjectProtectionParamsAllOf struct {
	value *Office365UserMailboxObjectProtectionParamsAllOf
	isSet bool
}

func (v NullableOffice365UserMailboxObjectProtectionParamsAllOf) Get() *Office365UserMailboxObjectProtectionParamsAllOf {
	return v.value
}

func (v *NullableOffice365UserMailboxObjectProtectionParamsAllOf) Set(val *Office365UserMailboxObjectProtectionParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableOffice365UserMailboxObjectProtectionParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableOffice365UserMailboxObjectProtectionParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOffice365UserMailboxObjectProtectionParamsAllOf(val *Office365UserMailboxObjectProtectionParamsAllOf) *NullableOffice365UserMailboxObjectProtectionParamsAllOf {
	return &NullableOffice365UserMailboxObjectProtectionParamsAllOf{value: val, isSet: true}
}

func (v NullableOffice365UserMailboxObjectProtectionParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOffice365UserMailboxObjectProtectionParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


