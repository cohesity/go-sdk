/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// UnprotectActionObjectLevelParams Specifies the request parameters for Unprotect action on a Protected object.
type UnprotectActionObjectLevelParams struct {
	// Specifies the ID of the object.
	Id NullableInt64 `json:"id"`
	// Specifies the name of the object.
	Name NullableString `json:"name,omitempty"`
	// Specifies whether to delete all snapshots along with unprotecting object protection. If set to true, all snapshots will be deleted and no more recoverable.
	DeleteAllSnapshots NullableBool `json:"deleteAllSnapshots,omitempty"`
	// If specified as true then it will cancel the ongoing runs and immediatly unprotect.
	ForceUnprotect NullableBool `json:"forceUnprotect,omitempty"`
}

// NewUnprotectActionObjectLevelParams instantiates a new UnprotectActionObjectLevelParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnprotectActionObjectLevelParams(id NullableInt64) *UnprotectActionObjectLevelParams {
	this := UnprotectActionObjectLevelParams{}
	this.Id = id
	return &this
}

// NewUnprotectActionObjectLevelParamsWithDefaults instantiates a new UnprotectActionObjectLevelParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnprotectActionObjectLevelParamsWithDefaults() *UnprotectActionObjectLevelParams {
	this := UnprotectActionObjectLevelParams{}
	return &this
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *UnprotectActionObjectLevelParams) GetId() int64 {
	if o == nil || o.Id.Get() == nil {
		var ret int64
		return ret
	}

	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UnprotectActionObjectLevelParams) GetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// SetId sets field value
func (o *UnprotectActionObjectLevelParams) SetId(v int64) {
	o.Id.Set(&v)
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UnprotectActionObjectLevelParams) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UnprotectActionObjectLevelParams) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *UnprotectActionObjectLevelParams) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *UnprotectActionObjectLevelParams) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *UnprotectActionObjectLevelParams) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *UnprotectActionObjectLevelParams) UnsetName() {
	o.Name.Unset()
}

// GetDeleteAllSnapshots returns the DeleteAllSnapshots field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UnprotectActionObjectLevelParams) GetDeleteAllSnapshots() bool {
	if o == nil || o.DeleteAllSnapshots.Get() == nil {
		var ret bool
		return ret
	}
	return *o.DeleteAllSnapshots.Get()
}

// GetDeleteAllSnapshotsOk returns a tuple with the DeleteAllSnapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UnprotectActionObjectLevelParams) GetDeleteAllSnapshotsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeleteAllSnapshots.Get(), o.DeleteAllSnapshots.IsSet()
}

// HasDeleteAllSnapshots returns a boolean if a field has been set.
func (o *UnprotectActionObjectLevelParams) HasDeleteAllSnapshots() bool {
	if o != nil && o.DeleteAllSnapshots.IsSet() {
		return true
	}

	return false
}

// SetDeleteAllSnapshots gets a reference to the given NullableBool and assigns it to the DeleteAllSnapshots field.
func (o *UnprotectActionObjectLevelParams) SetDeleteAllSnapshots(v bool) {
	o.DeleteAllSnapshots.Set(&v)
}
// SetDeleteAllSnapshotsNil sets the value for DeleteAllSnapshots to be an explicit nil
func (o *UnprotectActionObjectLevelParams) SetDeleteAllSnapshotsNil() {
	o.DeleteAllSnapshots.Set(nil)
}

// UnsetDeleteAllSnapshots ensures that no value is present for DeleteAllSnapshots, not even an explicit nil
func (o *UnprotectActionObjectLevelParams) UnsetDeleteAllSnapshots() {
	o.DeleteAllSnapshots.Unset()
}

// GetForceUnprotect returns the ForceUnprotect field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UnprotectActionObjectLevelParams) GetForceUnprotect() bool {
	if o == nil || o.ForceUnprotect.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ForceUnprotect.Get()
}

// GetForceUnprotectOk returns a tuple with the ForceUnprotect field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UnprotectActionObjectLevelParams) GetForceUnprotectOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ForceUnprotect.Get(), o.ForceUnprotect.IsSet()
}

// HasForceUnprotect returns a boolean if a field has been set.
func (o *UnprotectActionObjectLevelParams) HasForceUnprotect() bool {
	if o != nil && o.ForceUnprotect.IsSet() {
		return true
	}

	return false
}

// SetForceUnprotect gets a reference to the given NullableBool and assigns it to the ForceUnprotect field.
func (o *UnprotectActionObjectLevelParams) SetForceUnprotect(v bool) {
	o.ForceUnprotect.Set(&v)
}
// SetForceUnprotectNil sets the value for ForceUnprotect to be an explicit nil
func (o *UnprotectActionObjectLevelParams) SetForceUnprotectNil() {
	o.ForceUnprotect.Set(nil)
}

// UnsetForceUnprotect ensures that no value is present for ForceUnprotect, not even an explicit nil
func (o *UnprotectActionObjectLevelParams) UnsetForceUnprotect() {
	o.ForceUnprotect.Unset()
}

func (o UnprotectActionObjectLevelParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.DeleteAllSnapshots.IsSet() {
		toSerialize["deleteAllSnapshots"] = o.DeleteAllSnapshots.Get()
	}
	if o.ForceUnprotect.IsSet() {
		toSerialize["forceUnprotect"] = o.ForceUnprotect.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUnprotectActionObjectLevelParams struct {
	value *UnprotectActionObjectLevelParams
	isSet bool
}

func (v NullableUnprotectActionObjectLevelParams) Get() *UnprotectActionObjectLevelParams {
	return v.value
}

func (v *NullableUnprotectActionObjectLevelParams) Set(val *UnprotectActionObjectLevelParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUnprotectActionObjectLevelParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUnprotectActionObjectLevelParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnprotectActionObjectLevelParams(val *UnprotectActionObjectLevelParams) *NullableUnprotectActionObjectLevelParams {
	return &NullableUnprotectActionObjectLevelParams{value: val, isSet: true}
}

func (v NullableUnprotectActionObjectLevelParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnprotectActionObjectLevelParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


