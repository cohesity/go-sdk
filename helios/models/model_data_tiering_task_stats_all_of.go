/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// DataTieringTaskStatsAllOf struct for DataTieringTaskStatsAllOf
type DataTieringTaskStatsAllOf struct {
	// Specifies total entity count.
	EntityCount NullableInt64 `json:"entityCount,omitempty"`
	// Specifies changed entity count.
	ChangedEntityCount NullableInt64 `json:"changedEntityCount,omitempty"`
	// Specifies whether tiering goal has been met.
	IsTieringGoalMet NullableBool `json:"isTieringGoalMet,omitempty"`
	// Specifies total amount of data successfully tiered from the NAS source.
	TotalTieredBytes NullableInt64 `json:"totalTieredBytes,omitempty"`
}

// NewDataTieringTaskStatsAllOf instantiates a new DataTieringTaskStatsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataTieringTaskStatsAllOf() *DataTieringTaskStatsAllOf {
	this := DataTieringTaskStatsAllOf{}
	var isTieringGoalMet bool = false
	this.IsTieringGoalMet = *NewNullableBool(&isTieringGoalMet)
	return &this
}

// NewDataTieringTaskStatsAllOfWithDefaults instantiates a new DataTieringTaskStatsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataTieringTaskStatsAllOfWithDefaults() *DataTieringTaskStatsAllOf {
	this := DataTieringTaskStatsAllOf{}
	var isTieringGoalMet bool = false
	this.IsTieringGoalMet = *NewNullableBool(&isTieringGoalMet) // model_simple false
	return &this
}

// GetEntityCount returns the EntityCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataTieringTaskStatsAllOf) GetEntityCount() int64 {
	if o == nil || o.EntityCount.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EntityCount.Get()
}

// GetEntityCountOk returns a tuple with the EntityCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataTieringTaskStatsAllOf) GetEntityCountOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EntityCount.Get(), o.EntityCount.IsSet()
}

// HasEntityCount returns a boolean if a field has been set.
func (o *DataTieringTaskStatsAllOf) HasEntityCount() bool {
	if o != nil && o.EntityCount.IsSet() {
		return true
	}

	return false
}

// SetEntityCount gets a reference to the given NullableInt64 and assigns it to the EntityCount field.
func (o *DataTieringTaskStatsAllOf) SetEntityCount(v int64) {
	o.EntityCount.Set(&v)
}
// SetEntityCountNil sets the value for EntityCount to be an explicit nil
func (o *DataTieringTaskStatsAllOf) SetEntityCountNil() {
	o.EntityCount.Set(nil)
}

// UnsetEntityCount ensures that no value is present for EntityCount, not even an explicit nil
func (o *DataTieringTaskStatsAllOf) UnsetEntityCount() {
	o.EntityCount.Unset()
}

// GetChangedEntityCount returns the ChangedEntityCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataTieringTaskStatsAllOf) GetChangedEntityCount() int64 {
	if o == nil || o.ChangedEntityCount.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ChangedEntityCount.Get()
}

// GetChangedEntityCountOk returns a tuple with the ChangedEntityCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataTieringTaskStatsAllOf) GetChangedEntityCountOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ChangedEntityCount.Get(), o.ChangedEntityCount.IsSet()
}

// HasChangedEntityCount returns a boolean if a field has been set.
func (o *DataTieringTaskStatsAllOf) HasChangedEntityCount() bool {
	if o != nil && o.ChangedEntityCount.IsSet() {
		return true
	}

	return false
}

// SetChangedEntityCount gets a reference to the given NullableInt64 and assigns it to the ChangedEntityCount field.
func (o *DataTieringTaskStatsAllOf) SetChangedEntityCount(v int64) {
	o.ChangedEntityCount.Set(&v)
}
// SetChangedEntityCountNil sets the value for ChangedEntityCount to be an explicit nil
func (o *DataTieringTaskStatsAllOf) SetChangedEntityCountNil() {
	o.ChangedEntityCount.Set(nil)
}

// UnsetChangedEntityCount ensures that no value is present for ChangedEntityCount, not even an explicit nil
func (o *DataTieringTaskStatsAllOf) UnsetChangedEntityCount() {
	o.ChangedEntityCount.Unset()
}

// GetIsTieringGoalMet returns the IsTieringGoalMet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataTieringTaskStatsAllOf) GetIsTieringGoalMet() bool {
	if o == nil || o.IsTieringGoalMet.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsTieringGoalMet.Get()
}

// GetIsTieringGoalMetOk returns a tuple with the IsTieringGoalMet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataTieringTaskStatsAllOf) GetIsTieringGoalMetOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsTieringGoalMet.Get(), o.IsTieringGoalMet.IsSet()
}

// HasIsTieringGoalMet returns a boolean if a field has been set.
func (o *DataTieringTaskStatsAllOf) HasIsTieringGoalMet() bool {
	if o != nil && o.IsTieringGoalMet.IsSet() {
		return true
	}

	return false
}

// SetIsTieringGoalMet gets a reference to the given NullableBool and assigns it to the IsTieringGoalMet field.
func (o *DataTieringTaskStatsAllOf) SetIsTieringGoalMet(v bool) {
	o.IsTieringGoalMet.Set(&v)
}
// SetIsTieringGoalMetNil sets the value for IsTieringGoalMet to be an explicit nil
func (o *DataTieringTaskStatsAllOf) SetIsTieringGoalMetNil() {
	o.IsTieringGoalMet.Set(nil)
}

// UnsetIsTieringGoalMet ensures that no value is present for IsTieringGoalMet, not even an explicit nil
func (o *DataTieringTaskStatsAllOf) UnsetIsTieringGoalMet() {
	o.IsTieringGoalMet.Unset()
}

// GetTotalTieredBytes returns the TotalTieredBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataTieringTaskStatsAllOf) GetTotalTieredBytes() int64 {
	if o == nil || o.TotalTieredBytes.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalTieredBytes.Get()
}

// GetTotalTieredBytesOk returns a tuple with the TotalTieredBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataTieringTaskStatsAllOf) GetTotalTieredBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalTieredBytes.Get(), o.TotalTieredBytes.IsSet()
}

// HasTotalTieredBytes returns a boolean if a field has been set.
func (o *DataTieringTaskStatsAllOf) HasTotalTieredBytes() bool {
	if o != nil && o.TotalTieredBytes.IsSet() {
		return true
	}

	return false
}

// SetTotalTieredBytes gets a reference to the given NullableInt64 and assigns it to the TotalTieredBytes field.
func (o *DataTieringTaskStatsAllOf) SetTotalTieredBytes(v int64) {
	o.TotalTieredBytes.Set(&v)
}
// SetTotalTieredBytesNil sets the value for TotalTieredBytes to be an explicit nil
func (o *DataTieringTaskStatsAllOf) SetTotalTieredBytesNil() {
	o.TotalTieredBytes.Set(nil)
}

// UnsetTotalTieredBytes ensures that no value is present for TotalTieredBytes, not even an explicit nil
func (o *DataTieringTaskStatsAllOf) UnsetTotalTieredBytes() {
	o.TotalTieredBytes.Unset()
}

func (o DataTieringTaskStatsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntityCount.IsSet() {
		toSerialize["entityCount"] = o.EntityCount.Get()
	}
	if o.ChangedEntityCount.IsSet() {
		toSerialize["changedEntityCount"] = o.ChangedEntityCount.Get()
	}
	if o.IsTieringGoalMet.IsSet() {
		toSerialize["isTieringGoalMet"] = o.IsTieringGoalMet.Get()
	}
	if o.TotalTieredBytes.IsSet() {
		toSerialize["totalTieredBytes"] = o.TotalTieredBytes.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableDataTieringTaskStatsAllOf struct {
	value *DataTieringTaskStatsAllOf
	isSet bool
}

func (v NullableDataTieringTaskStatsAllOf) Get() *DataTieringTaskStatsAllOf {
	return v.value
}

func (v *NullableDataTieringTaskStatsAllOf) Set(val *DataTieringTaskStatsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDataTieringTaskStatsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDataTieringTaskStatsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataTieringTaskStatsAllOf(val *DataTieringTaskStatsAllOf) *NullableDataTieringTaskStatsAllOf {
	return &NullableDataTieringTaskStatsAllOf{value: val, isSet: true}
}

func (v NullableDataTieringTaskStatsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataTieringTaskStatsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


