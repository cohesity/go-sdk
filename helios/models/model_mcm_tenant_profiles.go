/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// McmTenantProfiles Specifies tenant profiles for a logged in user.
type McmTenantProfiles struct {
	// Specifies the Salesforce account ID of this account.
	SfAccountId NullableString `json:"sfAccountId,omitempty"`
	// Specifies the sid of the logged in user.
	UserSid NullableString `json:"userSid,omitempty"`
	// Specifies the list of clusters owned by this account id.
	Clusters []McmClusterIdentifier `json:"clusters,omitempty"`
	// Specifies the list of tenant profiles associated to this account if any.
	TenantProfiles []McmTenantProfile `json:"tenantProfiles,omitempty"`
}

// NewMcmTenantProfiles instantiates a new McmTenantProfiles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcmTenantProfiles() *McmTenantProfiles {
	this := McmTenantProfiles{}
	return &this
}

// NewMcmTenantProfilesWithDefaults instantiates a new McmTenantProfiles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcmTenantProfilesWithDefaults() *McmTenantProfiles {
	this := McmTenantProfiles{}
	return &this
}

// GetSfAccountId returns the SfAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantProfiles) GetSfAccountId() string {
	if o == nil || o.SfAccountId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SfAccountId.Get()
}

// GetSfAccountIdOk returns a tuple with the SfAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantProfiles) GetSfAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SfAccountId.Get(), o.SfAccountId.IsSet()
}

// HasSfAccountId returns a boolean if a field has been set.
func (o *McmTenantProfiles) HasSfAccountId() bool {
	if o != nil && o.SfAccountId.IsSet() {
		return true
	}

	return false
}

// SetSfAccountId gets a reference to the given NullableString and assigns it to the SfAccountId field.
func (o *McmTenantProfiles) SetSfAccountId(v string) {
	o.SfAccountId.Set(&v)
}
// SetSfAccountIdNil sets the value for SfAccountId to be an explicit nil
func (o *McmTenantProfiles) SetSfAccountIdNil() {
	o.SfAccountId.Set(nil)
}

// UnsetSfAccountId ensures that no value is present for SfAccountId, not even an explicit nil
func (o *McmTenantProfiles) UnsetSfAccountId() {
	o.SfAccountId.Unset()
}

// GetUserSid returns the UserSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantProfiles) GetUserSid() string {
	if o == nil || o.UserSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserSid.Get()
}

// GetUserSidOk returns a tuple with the UserSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantProfiles) GetUserSidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserSid.Get(), o.UserSid.IsSet()
}

// HasUserSid returns a boolean if a field has been set.
func (o *McmTenantProfiles) HasUserSid() bool {
	if o != nil && o.UserSid.IsSet() {
		return true
	}

	return false
}

// SetUserSid gets a reference to the given NullableString and assigns it to the UserSid field.
func (o *McmTenantProfiles) SetUserSid(v string) {
	o.UserSid.Set(&v)
}
// SetUserSidNil sets the value for UserSid to be an explicit nil
func (o *McmTenantProfiles) SetUserSidNil() {
	o.UserSid.Set(nil)
}

// UnsetUserSid ensures that no value is present for UserSid, not even an explicit nil
func (o *McmTenantProfiles) UnsetUserSid() {
	o.UserSid.Unset()
}

// GetClusters returns the Clusters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantProfiles) GetClusters() []McmClusterIdentifier {
	if o == nil  {
		var ret []McmClusterIdentifier
		return ret
	}
	return o.Clusters
}

// GetClustersOk returns a tuple with the Clusters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantProfiles) GetClustersOk() (*[]McmClusterIdentifier, bool) {
	if o == nil || o.Clusters == nil {
		return nil, false
	}
	return &o.Clusters, true
}

// HasClusters returns a boolean if a field has been set.
func (o *McmTenantProfiles) HasClusters() bool {
	if o != nil && o.Clusters != nil {
		return true
	}

	return false
}

// SetClusters gets a reference to the given []McmClusterIdentifier and assigns it to the Clusters field.
func (o *McmTenantProfiles) SetClusters(v []McmClusterIdentifier) {
	o.Clusters = v
}

// GetTenantProfiles returns the TenantProfiles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmTenantProfiles) GetTenantProfiles() []McmTenantProfile {
	if o == nil  {
		var ret []McmTenantProfile
		return ret
	}
	return o.TenantProfiles
}

// GetTenantProfilesOk returns a tuple with the TenantProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmTenantProfiles) GetTenantProfilesOk() (*[]McmTenantProfile, bool) {
	if o == nil || o.TenantProfiles == nil {
		return nil, false
	}
	return &o.TenantProfiles, true
}

// HasTenantProfiles returns a boolean if a field has been set.
func (o *McmTenantProfiles) HasTenantProfiles() bool {
	if o != nil && o.TenantProfiles != nil {
		return true
	}

	return false
}

// SetTenantProfiles gets a reference to the given []McmTenantProfile and assigns it to the TenantProfiles field.
func (o *McmTenantProfiles) SetTenantProfiles(v []McmTenantProfile) {
	o.TenantProfiles = v
}

func (o McmTenantProfiles) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SfAccountId.IsSet() {
		toSerialize["sfAccountId"] = o.SfAccountId.Get()
	}
	if o.UserSid.IsSet() {
		toSerialize["userSid"] = o.UserSid.Get()
	}
	if o.Clusters != nil {
		toSerialize["clusters"] = o.Clusters
	}
	if o.TenantProfiles != nil {
		toSerialize["tenantProfiles"] = o.TenantProfiles
	}
	return json.Marshal(toSerialize)
}

type NullableMcmTenantProfiles struct {
	value *McmTenantProfiles
	isSet bool
}

func (v NullableMcmTenantProfiles) Get() *McmTenantProfiles {
	return v.value
}

func (v *NullableMcmTenantProfiles) Set(val *McmTenantProfiles) {
	v.value = val
	v.isSet = true
}

func (v NullableMcmTenantProfiles) IsSet() bool {
	return v.isSet
}

func (v *NullableMcmTenantProfiles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcmTenantProfiles(val *McmTenantProfiles) *NullableMcmTenantProfiles {
	return &NullableMcmTenantProfiles{value: val, isSet: true}
}

func (v NullableMcmTenantProfiles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcmTenantProfiles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


