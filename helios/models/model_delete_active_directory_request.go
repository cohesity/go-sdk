/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// DeleteActiveDirectoryRequest Specifies the request to delete an Active Directory.
type DeleteActiveDirectoryRequest struct {
	// Specifies the params of a user with administrative privilege of this Active Directory. This field is mandatory if machine accounts are updated.
	ActiveDirectoryAdminParams NullableActiveDirectoryAdminParams `json:"activeDirectoryAdminParams"`
}

// NewDeleteActiveDirectoryRequest instantiates a new DeleteActiveDirectoryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteActiveDirectoryRequest(activeDirectoryAdminParams NullableActiveDirectoryAdminParams) *DeleteActiveDirectoryRequest {
	this := DeleteActiveDirectoryRequest{}
	this.ActiveDirectoryAdminParams = activeDirectoryAdminParams
	return &this
}

// NewDeleteActiveDirectoryRequestWithDefaults instantiates a new DeleteActiveDirectoryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteActiveDirectoryRequestWithDefaults() *DeleteActiveDirectoryRequest {
	this := DeleteActiveDirectoryRequest{}
	return &this
}

// GetActiveDirectoryAdminParams returns the ActiveDirectoryAdminParams field value
// If the value is explicit nil, the zero value for ActiveDirectoryAdminParams will be returned
func (o *DeleteActiveDirectoryRequest) GetActiveDirectoryAdminParams() ActiveDirectoryAdminParams {
	if o == nil || o.ActiveDirectoryAdminParams.Get() == nil {
		var ret ActiveDirectoryAdminParams
		return ret
	}

	return *o.ActiveDirectoryAdminParams.Get()
}

// GetActiveDirectoryAdminParamsOk returns a tuple with the ActiveDirectoryAdminParams field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeleteActiveDirectoryRequest) GetActiveDirectoryAdminParamsOk() (*ActiveDirectoryAdminParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ActiveDirectoryAdminParams.Get(), o.ActiveDirectoryAdminParams.IsSet()
}

// SetActiveDirectoryAdminParams sets field value
func (o *DeleteActiveDirectoryRequest) SetActiveDirectoryAdminParams(v ActiveDirectoryAdminParams) {
	o.ActiveDirectoryAdminParams.Set(&v)
}

func (o DeleteActiveDirectoryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["activeDirectoryAdminParams"] = o.ActiveDirectoryAdminParams.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteActiveDirectoryRequest struct {
	value *DeleteActiveDirectoryRequest
	isSet bool
}

func (v NullableDeleteActiveDirectoryRequest) Get() *DeleteActiveDirectoryRequest {
	return v.value
}

func (v *NullableDeleteActiveDirectoryRequest) Set(val *DeleteActiveDirectoryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteActiveDirectoryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteActiveDirectoryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteActiveDirectoryRequest(val *DeleteActiveDirectoryRequest) *NullableDeleteActiveDirectoryRequest {
	return &NullableDeleteActiveDirectoryRequest{value: val, isSet: true}
}

func (v NullableDeleteActiveDirectoryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteActiveDirectoryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


