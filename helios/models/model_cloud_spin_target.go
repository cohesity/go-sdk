/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CloudSpinTarget Specifies the details about Cloud Spin target where backup snapshots may be converted and stored.
type CloudSpinTarget struct {
	// Specifies the unique id of the cloud spin entity.
	Id NullableInt64 `json:"id,omitempty"`
	AwsParams *AwsCloudSpinParams `json:"awsParams,omitempty"`
	AzureParams *AzureCloudSpinParams `json:"azureParams,omitempty"`
	// Specifies the name of the already added cloud spin target.
	Name NullableString `json:"name,omitempty"`
}

// NewCloudSpinTarget instantiates a new CloudSpinTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudSpinTarget() *CloudSpinTarget {
	this := CloudSpinTarget{}
	return &this
}

// NewCloudSpinTargetWithDefaults instantiates a new CloudSpinTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudSpinTargetWithDefaults() *CloudSpinTarget {
	this := CloudSpinTarget{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudSpinTarget) GetId() int64 {
	if o == nil || o.Id.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudSpinTarget) GetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CloudSpinTarget) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt64 and assigns it to the Id field.
func (o *CloudSpinTarget) SetId(v int64) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CloudSpinTarget) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CloudSpinTarget) UnsetId() {
	o.Id.Unset()
}

// GetAwsParams returns the AwsParams field value if set, zero value otherwise.
func (o *CloudSpinTarget) GetAwsParams() AwsCloudSpinParams {
	if o == nil || o.AwsParams == nil {
		var ret AwsCloudSpinParams
		return ret
	}
	return *o.AwsParams
}

// GetAwsParamsOk returns a tuple with the AwsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudSpinTarget) GetAwsParamsOk() (*AwsCloudSpinParams, bool) {
	if o == nil || o.AwsParams == nil {
		return nil, false
	}
	return o.AwsParams, true
}

// HasAwsParams returns a boolean if a field has been set.
func (o *CloudSpinTarget) HasAwsParams() bool {
	if o != nil && o.AwsParams != nil {
		return true
	}

	return false
}

// SetAwsParams gets a reference to the given AwsCloudSpinParams and assigns it to the AwsParams field.
func (o *CloudSpinTarget) SetAwsParams(v AwsCloudSpinParams) {
	o.AwsParams = &v
}

// GetAzureParams returns the AzureParams field value if set, zero value otherwise.
func (o *CloudSpinTarget) GetAzureParams() AzureCloudSpinParams {
	if o == nil || o.AzureParams == nil {
		var ret AzureCloudSpinParams
		return ret
	}
	return *o.AzureParams
}

// GetAzureParamsOk returns a tuple with the AzureParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudSpinTarget) GetAzureParamsOk() (*AzureCloudSpinParams, bool) {
	if o == nil || o.AzureParams == nil {
		return nil, false
	}
	return o.AzureParams, true
}

// HasAzureParams returns a boolean if a field has been set.
func (o *CloudSpinTarget) HasAzureParams() bool {
	if o != nil && o.AzureParams != nil {
		return true
	}

	return false
}

// SetAzureParams gets a reference to the given AzureCloudSpinParams and assigns it to the AzureParams field.
func (o *CloudSpinTarget) SetAzureParams(v AzureCloudSpinParams) {
	o.AzureParams = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudSpinTarget) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudSpinTarget) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CloudSpinTarget) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CloudSpinTarget) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CloudSpinTarget) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CloudSpinTarget) UnsetName() {
	o.Name.Unset()
}

func (o CloudSpinTarget) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.AwsParams != nil {
		toSerialize["awsParams"] = o.AwsParams
	}
	if o.AzureParams != nil {
		toSerialize["azureParams"] = o.AzureParams
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCloudSpinTarget struct {
	value *CloudSpinTarget
	isSet bool
}

func (v NullableCloudSpinTarget) Get() *CloudSpinTarget {
	return v.value
}

func (v *NullableCloudSpinTarget) Set(val *CloudSpinTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudSpinTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudSpinTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudSpinTarget(val *CloudSpinTarget) *NullableCloudSpinTarget {
	return &NullableCloudSpinTarget{value: val, isSet: true}
}

func (v NullableCloudSpinTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudSpinTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


