/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// McmAgentInfo Specifies the information for agents related to the source.
type McmAgentInfo struct {
	// Specifies the ids of the agents related to the source.
	AgentID NullableInt64 `json:"agentID,omitempty"`
	// Specifies the hostname/ip address of the source.
	AgentDisplayName NullableString `json:"agentDisplayName,omitempty"`
}

// NewMcmAgentInfo instantiates a new McmAgentInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcmAgentInfo() *McmAgentInfo {
	this := McmAgentInfo{}
	return &this
}

// NewMcmAgentInfoWithDefaults instantiates a new McmAgentInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcmAgentInfoWithDefaults() *McmAgentInfo {
	this := McmAgentInfo{}
	return &this
}

// GetAgentID returns the AgentID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmAgentInfo) GetAgentID() int64 {
	if o == nil || o.AgentID.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AgentID.Get()
}

// GetAgentIDOk returns a tuple with the AgentID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmAgentInfo) GetAgentIDOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AgentID.Get(), o.AgentID.IsSet()
}

// HasAgentID returns a boolean if a field has been set.
func (o *McmAgentInfo) HasAgentID() bool {
	if o != nil && o.AgentID.IsSet() {
		return true
	}

	return false
}

// SetAgentID gets a reference to the given NullableInt64 and assigns it to the AgentID field.
func (o *McmAgentInfo) SetAgentID(v int64) {
	o.AgentID.Set(&v)
}
// SetAgentIDNil sets the value for AgentID to be an explicit nil
func (o *McmAgentInfo) SetAgentIDNil() {
	o.AgentID.Set(nil)
}

// UnsetAgentID ensures that no value is present for AgentID, not even an explicit nil
func (o *McmAgentInfo) UnsetAgentID() {
	o.AgentID.Unset()
}

// GetAgentDisplayName returns the AgentDisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmAgentInfo) GetAgentDisplayName() string {
	if o == nil || o.AgentDisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.AgentDisplayName.Get()
}

// GetAgentDisplayNameOk returns a tuple with the AgentDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmAgentInfo) GetAgentDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AgentDisplayName.Get(), o.AgentDisplayName.IsSet()
}

// HasAgentDisplayName returns a boolean if a field has been set.
func (o *McmAgentInfo) HasAgentDisplayName() bool {
	if o != nil && o.AgentDisplayName.IsSet() {
		return true
	}

	return false
}

// SetAgentDisplayName gets a reference to the given NullableString and assigns it to the AgentDisplayName field.
func (o *McmAgentInfo) SetAgentDisplayName(v string) {
	o.AgentDisplayName.Set(&v)
}
// SetAgentDisplayNameNil sets the value for AgentDisplayName to be an explicit nil
func (o *McmAgentInfo) SetAgentDisplayNameNil() {
	o.AgentDisplayName.Set(nil)
}

// UnsetAgentDisplayName ensures that no value is present for AgentDisplayName, not even an explicit nil
func (o *McmAgentInfo) UnsetAgentDisplayName() {
	o.AgentDisplayName.Unset()
}

func (o McmAgentInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AgentID.IsSet() {
		toSerialize["agentID"] = o.AgentID.Get()
	}
	if o.AgentDisplayName.IsSet() {
		toSerialize["agentDisplayName"] = o.AgentDisplayName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMcmAgentInfo struct {
	value *McmAgentInfo
	isSet bool
}

func (v NullableMcmAgentInfo) Get() *McmAgentInfo {
	return v.value
}

func (v *NullableMcmAgentInfo) Set(val *McmAgentInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMcmAgentInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMcmAgentInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcmAgentInfo(val *McmAgentInfo) *NullableMcmAgentInfo {
	return &NullableMcmAgentInfo{value: val, isSet: true}
}

func (v NullableMcmAgentInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcmAgentInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


