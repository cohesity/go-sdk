/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// HeliosAccounts Specifies a list of Accounts.
type HeliosAccounts struct {
	// Specifies a list of Helios Accounts.
	Accounts []HeliosAccount `json:"accounts,omitempty"`
}

// NewHeliosAccounts instantiates a new HeliosAccounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosAccounts() *HeliosAccounts {
	this := HeliosAccounts{}
	return &this
}

// NewHeliosAccountsWithDefaults instantiates a new HeliosAccounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosAccountsWithDefaults() *HeliosAccounts {
	this := HeliosAccounts{}
	return &this
}

// GetAccounts returns the Accounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosAccounts) GetAccounts() []HeliosAccount {
	if o == nil  {
		var ret []HeliosAccount
		return ret
	}
	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosAccounts) GetAccountsOk() (*[]HeliosAccount, bool) {
	if o == nil || o.Accounts == nil {
		return nil, false
	}
	return &o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *HeliosAccounts) HasAccounts() bool {
	if o != nil && o.Accounts != nil {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []HeliosAccount and assigns it to the Accounts field.
func (o *HeliosAccounts) SetAccounts(v []HeliosAccount) {
	o.Accounts = v
}

func (o HeliosAccounts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accounts != nil {
		toSerialize["accounts"] = o.Accounts
	}
	return json.Marshal(toSerialize)
}

type NullableHeliosAccounts struct {
	value *HeliosAccounts
	isSet bool
}

func (v NullableHeliosAccounts) Get() *HeliosAccounts {
	return v.value
}

func (v *NullableHeliosAccounts) Set(val *HeliosAccounts) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosAccounts) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosAccounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosAccounts(val *HeliosAccounts) *NullableHeliosAccounts {
	return &NullableHeliosAccounts{value: val, isSet: true}
}

func (v NullableHeliosAccounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosAccounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


