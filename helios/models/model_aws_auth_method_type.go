/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// AwsAuthMethodType AWS Authentication Method Type
type AwsAuthMethodType struct {
	// Specifies the AWS Authentication Method types.
	AwsAuthMethodType *string `json:"awsAuthMethodType,omitempty"`
}

// NewAwsAuthMethodType instantiates a new AwsAuthMethodType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsAuthMethodType() *AwsAuthMethodType {
	this := AwsAuthMethodType{}
	return &this
}

// NewAwsAuthMethodTypeWithDefaults instantiates a new AwsAuthMethodType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsAuthMethodTypeWithDefaults() *AwsAuthMethodType {
	this := AwsAuthMethodType{}
	return &this
}

// GetAwsAuthMethodType returns the AwsAuthMethodType field value if set, zero value otherwise.
func (o *AwsAuthMethodType) GetAwsAuthMethodType() string {
	if o == nil || o.AwsAuthMethodType == nil {
		var ret string
		return ret
	}
	return *o.AwsAuthMethodType
}

// GetAwsAuthMethodTypeOk returns a tuple with the AwsAuthMethodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsAuthMethodType) GetAwsAuthMethodTypeOk() (*string, bool) {
	if o == nil || o.AwsAuthMethodType == nil {
		return nil, false
	}
	return o.AwsAuthMethodType, true
}

// HasAwsAuthMethodType returns a boolean if a field has been set.
func (o *AwsAuthMethodType) HasAwsAuthMethodType() bool {
	if o != nil && o.AwsAuthMethodType != nil {
		return true
	}

	return false
}

// SetAwsAuthMethodType gets a reference to the given string and assigns it to the AwsAuthMethodType field.
func (o *AwsAuthMethodType) SetAwsAuthMethodType(v string) {
	o.AwsAuthMethodType = &v
}

func (o AwsAuthMethodType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AwsAuthMethodType != nil {
		toSerialize["awsAuthMethodType"] = o.AwsAuthMethodType
	}
	return json.Marshal(toSerialize)
}

type NullableAwsAuthMethodType struct {
	value *AwsAuthMethodType
	isSet bool
}

func (v NullableAwsAuthMethodType) Get() *AwsAuthMethodType {
	return v.value
}

func (v *NullableAwsAuthMethodType) Set(val *AwsAuthMethodType) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsAuthMethodType) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsAuthMethodType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsAuthMethodType(val *AwsAuthMethodType) *NullableAwsAuthMethodType {
	return &NullableAwsAuthMethodType{value: val, isSet: true}
}

func (v NullableAwsAuthMethodType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsAuthMethodType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


