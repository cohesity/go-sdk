/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// HadoopAuthType Enumeration of all the Hadoop Authentication types.
type HadoopAuthType struct {
	// Enumeration of all the Hadoop Authentication types.
	HadoopAuthType *string `json:"HadoopAuthType,omitempty"`
}

// NewHadoopAuthType instantiates a new HadoopAuthType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHadoopAuthType() *HadoopAuthType {
	this := HadoopAuthType{}
	return &this
}

// NewHadoopAuthTypeWithDefaults instantiates a new HadoopAuthType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHadoopAuthTypeWithDefaults() *HadoopAuthType {
	this := HadoopAuthType{}
	return &this
}

// GetHadoopAuthType returns the HadoopAuthType field value if set, zero value otherwise.
func (o *HadoopAuthType) GetHadoopAuthType() string {
	if o == nil || o.HadoopAuthType == nil {
		var ret string
		return ret
	}
	return *o.HadoopAuthType
}

// GetHadoopAuthTypeOk returns a tuple with the HadoopAuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HadoopAuthType) GetHadoopAuthTypeOk() (*string, bool) {
	if o == nil || o.HadoopAuthType == nil {
		return nil, false
	}
	return o.HadoopAuthType, true
}

// HasHadoopAuthType returns a boolean if a field has been set.
func (o *HadoopAuthType) HasHadoopAuthType() bool {
	if o != nil && o.HadoopAuthType != nil {
		return true
	}

	return false
}

// SetHadoopAuthType gets a reference to the given string and assigns it to the HadoopAuthType field.
func (o *HadoopAuthType) SetHadoopAuthType(v string) {
	o.HadoopAuthType = &v
}

func (o HadoopAuthType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HadoopAuthType != nil {
		toSerialize["HadoopAuthType"] = o.HadoopAuthType
	}
	return json.Marshal(toSerialize)
}

type NullableHadoopAuthType struct {
	value *HadoopAuthType
	isSet bool
}

func (v NullableHadoopAuthType) Get() *HadoopAuthType {
	return v.value
}

func (v *NullableHadoopAuthType) Set(val *HadoopAuthType) {
	v.value = val
	v.isSet = true
}

func (v NullableHadoopAuthType) IsSet() bool {
	return v.isSet
}

func (v *NullableHadoopAuthType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHadoopAuthType(val *HadoopAuthType) *NullableHadoopAuthType {
	return &NullableHadoopAuthType{value: val, isSet: true}
}

func (v NullableHadoopAuthType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHadoopAuthType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


