/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// RecoverVmwareChildSnapshotParamsAllOf struct for RecoverVmwareChildSnapshotParamsAllOf
type RecoverVmwareChildSnapshotParamsAllOf struct {
	// Specifies the info about instant recovery. This is only applicable for RecoverVm.
	InstantRecoveryInfo NullableRecoveryTaskInfo `json:"instantRecoveryInfo,omitempty"`
	// Specifies the info about datastore migration. This is only applicable for RecoverVm.
	DatastoreMigrationInfo NullableRecoveryTaskInfo `json:"datastoreMigrationInfo,omitempty"`
}

// NewRecoverVmwareChildSnapshotParamsAllOf instantiates a new RecoverVmwareChildSnapshotParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverVmwareChildSnapshotParamsAllOf() *RecoverVmwareChildSnapshotParamsAllOf {
	this := RecoverVmwareChildSnapshotParamsAllOf{}
	return &this
}

// NewRecoverVmwareChildSnapshotParamsAllOfWithDefaults instantiates a new RecoverVmwareChildSnapshotParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverVmwareChildSnapshotParamsAllOfWithDefaults() *RecoverVmwareChildSnapshotParamsAllOf {
	this := RecoverVmwareChildSnapshotParamsAllOf{}
	return &this
}

// GetInstantRecoveryInfo returns the InstantRecoveryInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverVmwareChildSnapshotParamsAllOf) GetInstantRecoveryInfo() RecoveryTaskInfo {
	if o == nil || o.InstantRecoveryInfo.Get() == nil {
		var ret RecoveryTaskInfo
		return ret
	}
	return *o.InstantRecoveryInfo.Get()
}

// GetInstantRecoveryInfoOk returns a tuple with the InstantRecoveryInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverVmwareChildSnapshotParamsAllOf) GetInstantRecoveryInfoOk() (*RecoveryTaskInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InstantRecoveryInfo.Get(), o.InstantRecoveryInfo.IsSet()
}

// HasInstantRecoveryInfo returns a boolean if a field has been set.
func (o *RecoverVmwareChildSnapshotParamsAllOf) HasInstantRecoveryInfo() bool {
	if o != nil && o.InstantRecoveryInfo.IsSet() {
		return true
	}

	return false
}

// SetInstantRecoveryInfo gets a reference to the given NullableRecoveryTaskInfo and assigns it to the InstantRecoveryInfo field.
func (o *RecoverVmwareChildSnapshotParamsAllOf) SetInstantRecoveryInfo(v RecoveryTaskInfo) {
	o.InstantRecoveryInfo.Set(&v)
}
// SetInstantRecoveryInfoNil sets the value for InstantRecoveryInfo to be an explicit nil
func (o *RecoverVmwareChildSnapshotParamsAllOf) SetInstantRecoveryInfoNil() {
	o.InstantRecoveryInfo.Set(nil)
}

// UnsetInstantRecoveryInfo ensures that no value is present for InstantRecoveryInfo, not even an explicit nil
func (o *RecoverVmwareChildSnapshotParamsAllOf) UnsetInstantRecoveryInfo() {
	o.InstantRecoveryInfo.Unset()
}

// GetDatastoreMigrationInfo returns the DatastoreMigrationInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverVmwareChildSnapshotParamsAllOf) GetDatastoreMigrationInfo() RecoveryTaskInfo {
	if o == nil || o.DatastoreMigrationInfo.Get() == nil {
		var ret RecoveryTaskInfo
		return ret
	}
	return *o.DatastoreMigrationInfo.Get()
}

// GetDatastoreMigrationInfoOk returns a tuple with the DatastoreMigrationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverVmwareChildSnapshotParamsAllOf) GetDatastoreMigrationInfoOk() (*RecoveryTaskInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DatastoreMigrationInfo.Get(), o.DatastoreMigrationInfo.IsSet()
}

// HasDatastoreMigrationInfo returns a boolean if a field has been set.
func (o *RecoverVmwareChildSnapshotParamsAllOf) HasDatastoreMigrationInfo() bool {
	if o != nil && o.DatastoreMigrationInfo.IsSet() {
		return true
	}

	return false
}

// SetDatastoreMigrationInfo gets a reference to the given NullableRecoveryTaskInfo and assigns it to the DatastoreMigrationInfo field.
func (o *RecoverVmwareChildSnapshotParamsAllOf) SetDatastoreMigrationInfo(v RecoveryTaskInfo) {
	o.DatastoreMigrationInfo.Set(&v)
}
// SetDatastoreMigrationInfoNil sets the value for DatastoreMigrationInfo to be an explicit nil
func (o *RecoverVmwareChildSnapshotParamsAllOf) SetDatastoreMigrationInfoNil() {
	o.DatastoreMigrationInfo.Set(nil)
}

// UnsetDatastoreMigrationInfo ensures that no value is present for DatastoreMigrationInfo, not even an explicit nil
func (o *RecoverVmwareChildSnapshotParamsAllOf) UnsetDatastoreMigrationInfo() {
	o.DatastoreMigrationInfo.Unset()
}

func (o RecoverVmwareChildSnapshotParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InstantRecoveryInfo.IsSet() {
		toSerialize["instantRecoveryInfo"] = o.InstantRecoveryInfo.Get()
	}
	if o.DatastoreMigrationInfo.IsSet() {
		toSerialize["datastoreMigrationInfo"] = o.DatastoreMigrationInfo.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverVmwareChildSnapshotParamsAllOf struct {
	value *RecoverVmwareChildSnapshotParamsAllOf
	isSet bool
}

func (v NullableRecoverVmwareChildSnapshotParamsAllOf) Get() *RecoverVmwareChildSnapshotParamsAllOf {
	return v.value
}

func (v *NullableRecoverVmwareChildSnapshotParamsAllOf) Set(val *RecoverVmwareChildSnapshotParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverVmwareChildSnapshotParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverVmwareChildSnapshotParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverVmwareChildSnapshotParamsAllOf(val *RecoverVmwareChildSnapshotParamsAllOf) *NullableRecoverVmwareChildSnapshotParamsAllOf {
	return &NullableRecoverVmwareChildSnapshotParamsAllOf{value: val, isSet: true}
}

func (v NullableRecoverVmwareChildSnapshotParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverVmwareChildSnapshotParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


