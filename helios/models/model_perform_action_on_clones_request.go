/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// PerformActionOnClonesRequest Specifies the request parameters to perform an action on multiple clones.
type PerformActionOnClonesRequest struct {
	// Specifies the action to be performed.
	Action NullableString `json:"action"`
	CleanupParams *CloneActionCleanupParams `json:"cleanupParams,omitempty"`
}

// NewPerformActionOnClonesRequest instantiates a new PerformActionOnClonesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPerformActionOnClonesRequest(action NullableString) *PerformActionOnClonesRequest {
	this := PerformActionOnClonesRequest{}
	this.Action = action
	return &this
}

// NewPerformActionOnClonesRequestWithDefaults instantiates a new PerformActionOnClonesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPerformActionOnClonesRequestWithDefaults() *PerformActionOnClonesRequest {
	this := PerformActionOnClonesRequest{}
	return &this
}

// GetAction returns the Action field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PerformActionOnClonesRequest) GetAction() string {
	if o == nil || o.Action.Get() == nil {
		var ret string
		return ret
	}

	return *o.Action.Get()
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformActionOnClonesRequest) GetActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Action.Get(), o.Action.IsSet()
}

// SetAction sets field value
func (o *PerformActionOnClonesRequest) SetAction(v string) {
	o.Action.Set(&v)
}

// GetCleanupParams returns the CleanupParams field value if set, zero value otherwise.
func (o *PerformActionOnClonesRequest) GetCleanupParams() CloneActionCleanupParams {
	if o == nil || o.CleanupParams == nil {
		var ret CloneActionCleanupParams
		return ret
	}
	return *o.CleanupParams
}

// GetCleanupParamsOk returns a tuple with the CleanupParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformActionOnClonesRequest) GetCleanupParamsOk() (*CloneActionCleanupParams, bool) {
	if o == nil || o.CleanupParams == nil {
		return nil, false
	}
	return o.CleanupParams, true
}

// HasCleanupParams returns a boolean if a field has been set.
func (o *PerformActionOnClonesRequest) HasCleanupParams() bool {
	if o != nil && o.CleanupParams != nil {
		return true
	}

	return false
}

// SetCleanupParams gets a reference to the given CloneActionCleanupParams and assigns it to the CleanupParams field.
func (o *PerformActionOnClonesRequest) SetCleanupParams(v CloneActionCleanupParams) {
	o.CleanupParams = &v
}

func (o PerformActionOnClonesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["action"] = o.Action.Get()
	}
	if o.CleanupParams != nil {
		toSerialize["cleanupParams"] = o.CleanupParams
	}
	return json.Marshal(toSerialize)
}

type NullablePerformActionOnClonesRequest struct {
	value *PerformActionOnClonesRequest
	isSet bool
}

func (v NullablePerformActionOnClonesRequest) Get() *PerformActionOnClonesRequest {
	return v.value
}

func (v *NullablePerformActionOnClonesRequest) Set(val *PerformActionOnClonesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePerformActionOnClonesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePerformActionOnClonesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePerformActionOnClonesRequest(val *PerformActionOnClonesRequest) *NullablePerformActionOnClonesRequest {
	return &NullablePerformActionOnClonesRequest{value: val, isSet: true}
}

func (v NullablePerformActionOnClonesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePerformActionOnClonesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


