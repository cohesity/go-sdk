/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// HeliosPoliciesResponseWithPagination Specifies the list of Policies.
type HeliosPoliciesResponseWithPagination struct {
	// Specifies a list of policies.
	Policies []HeliosPolicyResponse `json:"policies,omitempty"`
}

// NewHeliosPoliciesResponseWithPagination instantiates a new HeliosPoliciesResponseWithPagination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosPoliciesResponseWithPagination() *HeliosPoliciesResponseWithPagination {
	this := HeliosPoliciesResponseWithPagination{}
	return &this
}

// NewHeliosPoliciesResponseWithPaginationWithDefaults instantiates a new HeliosPoliciesResponseWithPagination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosPoliciesResponseWithPaginationWithDefaults() *HeliosPoliciesResponseWithPagination {
	this := HeliosPoliciesResponseWithPagination{}
	return &this
}

// GetPolicies returns the Policies field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosPoliciesResponseWithPagination) GetPolicies() []HeliosPolicyResponse {
	if o == nil  {
		var ret []HeliosPolicyResponse
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosPoliciesResponseWithPagination) GetPoliciesOk() (*[]HeliosPolicyResponse, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return &o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *HeliosPoliciesResponseWithPagination) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []HeliosPolicyResponse and assigns it to the Policies field.
func (o *HeliosPoliciesResponseWithPagination) SetPolicies(v []HeliosPolicyResponse) {
	o.Policies = v
}

func (o HeliosPoliciesResponseWithPagination) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableHeliosPoliciesResponseWithPagination struct {
	value *HeliosPoliciesResponseWithPagination
	isSet bool
}

func (v NullableHeliosPoliciesResponseWithPagination) Get() *HeliosPoliciesResponseWithPagination {
	return v.value
}

func (v *NullableHeliosPoliciesResponseWithPagination) Set(val *HeliosPoliciesResponseWithPagination) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosPoliciesResponseWithPagination) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosPoliciesResponseWithPagination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosPoliciesResponseWithPagination(val *HeliosPoliciesResponseWithPagination) *NullableHeliosPoliciesResponseWithPagination {
	return &NullableHeliosPoliciesResponseWithPagination{value: val, isSet: true}
}

func (v NullableHeliosPoliciesResponseWithPagination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosPoliciesResponseWithPagination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


