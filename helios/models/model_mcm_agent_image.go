/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// McmAgentImage Specifies the agent image information on Helios.
type McmAgentImage struct {
	// Specifies the type of the agent platform.
	Platform NullableString `json:"platform,omitempty"`
	// Specifies the agent information of platform subtypes.
	PlatformSubTypes *[]PlatformSubTypeAgentImageInfo `json:"PlatformSubTypes,omitempty"`
	// Specifies the URL for agent downlaod.
	DownloadURL NullableString `json:"downloadURL,omitempty"`
}

// NewMcmAgentImage instantiates a new McmAgentImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcmAgentImage() *McmAgentImage {
	this := McmAgentImage{}
	return &this
}

// NewMcmAgentImageWithDefaults instantiates a new McmAgentImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcmAgentImageWithDefaults() *McmAgentImage {
	this := McmAgentImage{}
	return &this
}

// GetPlatform returns the Platform field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmAgentImage) GetPlatform() string {
	if o == nil || o.Platform.Get() == nil {
		var ret string
		return ret
	}
	return *o.Platform.Get()
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmAgentImage) GetPlatformOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Platform.Get(), o.Platform.IsSet()
}

// HasPlatform returns a boolean if a field has been set.
func (o *McmAgentImage) HasPlatform() bool {
	if o != nil && o.Platform.IsSet() {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given NullableString and assigns it to the Platform field.
func (o *McmAgentImage) SetPlatform(v string) {
	o.Platform.Set(&v)
}
// SetPlatformNil sets the value for Platform to be an explicit nil
func (o *McmAgentImage) SetPlatformNil() {
	o.Platform.Set(nil)
}

// UnsetPlatform ensures that no value is present for Platform, not even an explicit nil
func (o *McmAgentImage) UnsetPlatform() {
	o.Platform.Unset()
}

// GetPlatformSubTypes returns the PlatformSubTypes field value if set, zero value otherwise.
func (o *McmAgentImage) GetPlatformSubTypes() []PlatformSubTypeAgentImageInfo {
	if o == nil || o.PlatformSubTypes == nil {
		var ret []PlatformSubTypeAgentImageInfo
		return ret
	}
	return *o.PlatformSubTypes
}

// GetPlatformSubTypesOk returns a tuple with the PlatformSubTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmAgentImage) GetPlatformSubTypesOk() (*[]PlatformSubTypeAgentImageInfo, bool) {
	if o == nil || o.PlatformSubTypes == nil {
		return nil, false
	}
	return o.PlatformSubTypes, true
}

// HasPlatformSubTypes returns a boolean if a field has been set.
func (o *McmAgentImage) HasPlatformSubTypes() bool {
	if o != nil && o.PlatformSubTypes != nil {
		return true
	}

	return false
}

// SetPlatformSubTypes gets a reference to the given []PlatformSubTypeAgentImageInfo and assigns it to the PlatformSubTypes field.
func (o *McmAgentImage) SetPlatformSubTypes(v []PlatformSubTypeAgentImageInfo) {
	o.PlatformSubTypes = &v
}

// GetDownloadURL returns the DownloadURL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmAgentImage) GetDownloadURL() string {
	if o == nil || o.DownloadURL.Get() == nil {
		var ret string
		return ret
	}
	return *o.DownloadURL.Get()
}

// GetDownloadURLOk returns a tuple with the DownloadURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmAgentImage) GetDownloadURLOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DownloadURL.Get(), o.DownloadURL.IsSet()
}

// HasDownloadURL returns a boolean if a field has been set.
func (o *McmAgentImage) HasDownloadURL() bool {
	if o != nil && o.DownloadURL.IsSet() {
		return true
	}

	return false
}

// SetDownloadURL gets a reference to the given NullableString and assigns it to the DownloadURL field.
func (o *McmAgentImage) SetDownloadURL(v string) {
	o.DownloadURL.Set(&v)
}
// SetDownloadURLNil sets the value for DownloadURL to be an explicit nil
func (o *McmAgentImage) SetDownloadURLNil() {
	o.DownloadURL.Set(nil)
}

// UnsetDownloadURL ensures that no value is present for DownloadURL, not even an explicit nil
func (o *McmAgentImage) UnsetDownloadURL() {
	o.DownloadURL.Unset()
}

func (o McmAgentImage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Platform.IsSet() {
		toSerialize["platform"] = o.Platform.Get()
	}
	if o.PlatformSubTypes != nil {
		toSerialize["PlatformSubTypes"] = o.PlatformSubTypes
	}
	if o.DownloadURL.IsSet() {
		toSerialize["downloadURL"] = o.DownloadURL.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMcmAgentImage struct {
	value *McmAgentImage
	isSet bool
}

func (v NullableMcmAgentImage) Get() *McmAgentImage {
	return v.value
}

func (v *NullableMcmAgentImage) Set(val *McmAgentImage) {
	v.value = val
	v.isSet = true
}

func (v NullableMcmAgentImage) IsSet() bool {
	return v.isSet
}

func (v *NullableMcmAgentImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcmAgentImage(val *McmAgentImage) *NullableMcmAgentImage {
	return &NullableMcmAgentImage{value: val, isSet: true}
}

func (v NullableMcmAgentImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcmAgentImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


