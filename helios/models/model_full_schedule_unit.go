/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// FullScheduleUnit Full Schedule Units
type FullScheduleUnit struct {
	// Specifies the full schedule unit (including ProtectOnce policy).
	FullScheduleUnit *string `json:"fullScheduleUnit,omitempty"`
}

// NewFullScheduleUnit instantiates a new FullScheduleUnit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFullScheduleUnit() *FullScheduleUnit {
	this := FullScheduleUnit{}
	return &this
}

// NewFullScheduleUnitWithDefaults instantiates a new FullScheduleUnit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFullScheduleUnitWithDefaults() *FullScheduleUnit {
	this := FullScheduleUnit{}
	return &this
}

// GetFullScheduleUnit returns the FullScheduleUnit field value if set, zero value otherwise.
func (o *FullScheduleUnit) GetFullScheduleUnit() string {
	if o == nil || o.FullScheduleUnit == nil {
		var ret string
		return ret
	}
	return *o.FullScheduleUnit
}

// GetFullScheduleUnitOk returns a tuple with the FullScheduleUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullScheduleUnit) GetFullScheduleUnitOk() (*string, bool) {
	if o == nil || o.FullScheduleUnit == nil {
		return nil, false
	}
	return o.FullScheduleUnit, true
}

// HasFullScheduleUnit returns a boolean if a field has been set.
func (o *FullScheduleUnit) HasFullScheduleUnit() bool {
	if o != nil && o.FullScheduleUnit != nil {
		return true
	}

	return false
}

// SetFullScheduleUnit gets a reference to the given string and assigns it to the FullScheduleUnit field.
func (o *FullScheduleUnit) SetFullScheduleUnit(v string) {
	o.FullScheduleUnit = &v
}

func (o FullScheduleUnit) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FullScheduleUnit != nil {
		toSerialize["fullScheduleUnit"] = o.FullScheduleUnit
	}
	return json.Marshal(toSerialize)
}

type NullableFullScheduleUnit struct {
	value *FullScheduleUnit
	isSet bool
}

func (v NullableFullScheduleUnit) Get() *FullScheduleUnit {
	return v.value
}

func (v *NullableFullScheduleUnit) Set(val *FullScheduleUnit) {
	v.value = val
	v.isSet = true
}

func (v NullableFullScheduleUnit) IsSet() bool {
	return v.isSet
}

func (v *NullableFullScheduleUnit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFullScheduleUnit(val *FullScheduleUnit) *NullableFullScheduleUnit {
	return &NullableFullScheduleUnit{value: val, isSet: true}
}

func (v NullableFullScheduleUnit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFullScheduleUnit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


