/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// TieringAwsExternalTargetParamsAllOf struct for TieringAwsExternalTargetParamsAllOf
type TieringAwsExternalTargetParamsAllOf struct {
	AwsS3StandardParams *AwsS3StandardParams `json:"awsS3StandardParams,omitempty"`
	AwsS3IntelligentParams *AwsS3IntelligentParams `json:"awsS3IntelligentParams,omitempty"`
}

// NewTieringAwsExternalTargetParamsAllOf instantiates a new TieringAwsExternalTargetParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTieringAwsExternalTargetParamsAllOf() *TieringAwsExternalTargetParamsAllOf {
	this := TieringAwsExternalTargetParamsAllOf{}
	return &this
}

// NewTieringAwsExternalTargetParamsAllOfWithDefaults instantiates a new TieringAwsExternalTargetParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTieringAwsExternalTargetParamsAllOfWithDefaults() *TieringAwsExternalTargetParamsAllOf {
	this := TieringAwsExternalTargetParamsAllOf{}
	return &this
}

// GetAwsS3StandardParams returns the AwsS3StandardParams field value if set, zero value otherwise.
func (o *TieringAwsExternalTargetParamsAllOf) GetAwsS3StandardParams() AwsS3StandardParams {
	if o == nil || o.AwsS3StandardParams == nil {
		var ret AwsS3StandardParams
		return ret
	}
	return *o.AwsS3StandardParams
}

// GetAwsS3StandardParamsOk returns a tuple with the AwsS3StandardParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TieringAwsExternalTargetParamsAllOf) GetAwsS3StandardParamsOk() (*AwsS3StandardParams, bool) {
	if o == nil || o.AwsS3StandardParams == nil {
		return nil, false
	}
	return o.AwsS3StandardParams, true
}

// HasAwsS3StandardParams returns a boolean if a field has been set.
func (o *TieringAwsExternalTargetParamsAllOf) HasAwsS3StandardParams() bool {
	if o != nil && o.AwsS3StandardParams != nil {
		return true
	}

	return false
}

// SetAwsS3StandardParams gets a reference to the given AwsS3StandardParams and assigns it to the AwsS3StandardParams field.
func (o *TieringAwsExternalTargetParamsAllOf) SetAwsS3StandardParams(v AwsS3StandardParams) {
	o.AwsS3StandardParams = &v
}

// GetAwsS3IntelligentParams returns the AwsS3IntelligentParams field value if set, zero value otherwise.
func (o *TieringAwsExternalTargetParamsAllOf) GetAwsS3IntelligentParams() AwsS3IntelligentParams {
	if o == nil || o.AwsS3IntelligentParams == nil {
		var ret AwsS3IntelligentParams
		return ret
	}
	return *o.AwsS3IntelligentParams
}

// GetAwsS3IntelligentParamsOk returns a tuple with the AwsS3IntelligentParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TieringAwsExternalTargetParamsAllOf) GetAwsS3IntelligentParamsOk() (*AwsS3IntelligentParams, bool) {
	if o == nil || o.AwsS3IntelligentParams == nil {
		return nil, false
	}
	return o.AwsS3IntelligentParams, true
}

// HasAwsS3IntelligentParams returns a boolean if a field has been set.
func (o *TieringAwsExternalTargetParamsAllOf) HasAwsS3IntelligentParams() bool {
	if o != nil && o.AwsS3IntelligentParams != nil {
		return true
	}

	return false
}

// SetAwsS3IntelligentParams gets a reference to the given AwsS3IntelligentParams and assigns it to the AwsS3IntelligentParams field.
func (o *TieringAwsExternalTargetParamsAllOf) SetAwsS3IntelligentParams(v AwsS3IntelligentParams) {
	o.AwsS3IntelligentParams = &v
}

func (o TieringAwsExternalTargetParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AwsS3StandardParams != nil {
		toSerialize["awsS3StandardParams"] = o.AwsS3StandardParams
	}
	if o.AwsS3IntelligentParams != nil {
		toSerialize["awsS3IntelligentParams"] = o.AwsS3IntelligentParams
	}
	return json.Marshal(toSerialize)
}

type NullableTieringAwsExternalTargetParamsAllOf struct {
	value *TieringAwsExternalTargetParamsAllOf
	isSet bool
}

func (v NullableTieringAwsExternalTargetParamsAllOf) Get() *TieringAwsExternalTargetParamsAllOf {
	return v.value
}

func (v *NullableTieringAwsExternalTargetParamsAllOf) Set(val *TieringAwsExternalTargetParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTieringAwsExternalTargetParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTieringAwsExternalTargetParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTieringAwsExternalTargetParamsAllOf(val *TieringAwsExternalTargetParamsAllOf) *NullableTieringAwsExternalTargetParamsAllOf {
	return &NullableTieringAwsExternalTargetParamsAllOf{value: val, isSet: true}
}

func (v NullableTieringAwsExternalTargetParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTieringAwsExternalTargetParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


