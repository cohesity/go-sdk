/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// McmObjectRecoverActivityParams Specifies the Object activity of a recovery.
type McmObjectRecoverActivityParams struct {
	// Specifies the id of the Recovery.
	Id NullableString `json:"id,omitempty"`
	// Specifies the name of the Recovery.
	Name NullableString `json:"name,omitempty"`
	// Specifies the start time of the Recovery in Unix timestamp epoch in microseconds.
	StartTimeUsecs NullableInt64 `json:"startTimeUsecs,omitempty"`
	// Specifies the end time of the Recovery in Unix timestamp epoch in microseconds. This field will be populated only after Recovery is finished.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	// Status of the Recovery. 'Running' indicates that the Recovery is still running. 'Canceled' indicates that the Recovery has been cancelled. 'Canceling' indicates that the Recovery is in the process of being cancelled. 'Failed' indicates that the Recovery has failed. 'Succeeded' indicates that the Recovery has finished successfully. 'SucceededWithWarning' indicates that the Recovery finished successfully, but there were some warning messages.
	Status NullableString `json:"status,omitempty"`
	// Progress monitor task id for Recovery.
	ProgressTaskId NullableString `json:"progressTaskId,omitempty"`
	// Specifies the recovery type.
	RecoveryType NullableString `json:"recoveryType,omitempty"`
}

// NewMcmObjectRecoverActivityParams instantiates a new McmObjectRecoverActivityParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcmObjectRecoverActivityParams() *McmObjectRecoverActivityParams {
	this := McmObjectRecoverActivityParams{}
	return &this
}

// NewMcmObjectRecoverActivityParamsWithDefaults instantiates a new McmObjectRecoverActivityParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcmObjectRecoverActivityParamsWithDefaults() *McmObjectRecoverActivityParams {
	this := McmObjectRecoverActivityParams{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmObjectRecoverActivityParams) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmObjectRecoverActivityParams) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *McmObjectRecoverActivityParams) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *McmObjectRecoverActivityParams) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *McmObjectRecoverActivityParams) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *McmObjectRecoverActivityParams) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmObjectRecoverActivityParams) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmObjectRecoverActivityParams) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *McmObjectRecoverActivityParams) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *McmObjectRecoverActivityParams) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *McmObjectRecoverActivityParams) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *McmObjectRecoverActivityParams) UnsetName() {
	o.Name.Unset()
}

// GetStartTimeUsecs returns the StartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmObjectRecoverActivityParams) GetStartTimeUsecs() int64 {
	if o == nil || o.StartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StartTimeUsecs.Get()
}

// GetStartTimeUsecsOk returns a tuple with the StartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmObjectRecoverActivityParams) GetStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartTimeUsecs.Get(), o.StartTimeUsecs.IsSet()
}

// HasStartTimeUsecs returns a boolean if a field has been set.
func (o *McmObjectRecoverActivityParams) HasStartTimeUsecs() bool {
	if o != nil && o.StartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the StartTimeUsecs field.
func (o *McmObjectRecoverActivityParams) SetStartTimeUsecs(v int64) {
	o.StartTimeUsecs.Set(&v)
}
// SetStartTimeUsecsNil sets the value for StartTimeUsecs to be an explicit nil
func (o *McmObjectRecoverActivityParams) SetStartTimeUsecsNil() {
	o.StartTimeUsecs.Set(nil)
}

// UnsetStartTimeUsecs ensures that no value is present for StartTimeUsecs, not even an explicit nil
func (o *McmObjectRecoverActivityParams) UnsetStartTimeUsecs() {
	o.StartTimeUsecs.Unset()
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmObjectRecoverActivityParams) GetEndTimeUsecs() int64 {
	if o == nil || o.EndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmObjectRecoverActivityParams) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *McmObjectRecoverActivityParams) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *McmObjectRecoverActivityParams) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *McmObjectRecoverActivityParams) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *McmObjectRecoverActivityParams) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmObjectRecoverActivityParams) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmObjectRecoverActivityParams) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *McmObjectRecoverActivityParams) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *McmObjectRecoverActivityParams) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *McmObjectRecoverActivityParams) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *McmObjectRecoverActivityParams) UnsetStatus() {
	o.Status.Unset()
}

// GetProgressTaskId returns the ProgressTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmObjectRecoverActivityParams) GetProgressTaskId() string {
	if o == nil || o.ProgressTaskId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProgressTaskId.Get()
}

// GetProgressTaskIdOk returns a tuple with the ProgressTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmObjectRecoverActivityParams) GetProgressTaskIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProgressTaskId.Get(), o.ProgressTaskId.IsSet()
}

// HasProgressTaskId returns a boolean if a field has been set.
func (o *McmObjectRecoverActivityParams) HasProgressTaskId() bool {
	if o != nil && o.ProgressTaskId.IsSet() {
		return true
	}

	return false
}

// SetProgressTaskId gets a reference to the given NullableString and assigns it to the ProgressTaskId field.
func (o *McmObjectRecoverActivityParams) SetProgressTaskId(v string) {
	o.ProgressTaskId.Set(&v)
}
// SetProgressTaskIdNil sets the value for ProgressTaskId to be an explicit nil
func (o *McmObjectRecoverActivityParams) SetProgressTaskIdNil() {
	o.ProgressTaskId.Set(nil)
}

// UnsetProgressTaskId ensures that no value is present for ProgressTaskId, not even an explicit nil
func (o *McmObjectRecoverActivityParams) UnsetProgressTaskId() {
	o.ProgressTaskId.Unset()
}

// GetRecoveryType returns the RecoveryType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmObjectRecoverActivityParams) GetRecoveryType() string {
	if o == nil || o.RecoveryType.Get() == nil {
		var ret string
		return ret
	}
	return *o.RecoveryType.Get()
}

// GetRecoveryTypeOk returns a tuple with the RecoveryType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmObjectRecoverActivityParams) GetRecoveryTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RecoveryType.Get(), o.RecoveryType.IsSet()
}

// HasRecoveryType returns a boolean if a field has been set.
func (o *McmObjectRecoverActivityParams) HasRecoveryType() bool {
	if o != nil && o.RecoveryType.IsSet() {
		return true
	}

	return false
}

// SetRecoveryType gets a reference to the given NullableString and assigns it to the RecoveryType field.
func (o *McmObjectRecoverActivityParams) SetRecoveryType(v string) {
	o.RecoveryType.Set(&v)
}
// SetRecoveryTypeNil sets the value for RecoveryType to be an explicit nil
func (o *McmObjectRecoverActivityParams) SetRecoveryTypeNil() {
	o.RecoveryType.Set(nil)
}

// UnsetRecoveryType ensures that no value is present for RecoveryType, not even an explicit nil
func (o *McmObjectRecoverActivityParams) UnsetRecoveryType() {
	o.RecoveryType.Unset()
}

func (o McmObjectRecoverActivityParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.StartTimeUsecs.IsSet() {
		toSerialize["startTimeUsecs"] = o.StartTimeUsecs.Get()
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.ProgressTaskId.IsSet() {
		toSerialize["progressTaskId"] = o.ProgressTaskId.Get()
	}
	if o.RecoveryType.IsSet() {
		toSerialize["recoveryType"] = o.RecoveryType.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMcmObjectRecoverActivityParams struct {
	value *McmObjectRecoverActivityParams
	isSet bool
}

func (v NullableMcmObjectRecoverActivityParams) Get() *McmObjectRecoverActivityParams {
	return v.value
}

func (v *NullableMcmObjectRecoverActivityParams) Set(val *McmObjectRecoverActivityParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMcmObjectRecoverActivityParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMcmObjectRecoverActivityParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcmObjectRecoverActivityParams(val *McmObjectRecoverActivityParams) *NullableMcmObjectRecoverActivityParams {
	return &NullableMcmObjectRecoverActivityParams{value: val, isSet: true}
}

func (v NullableMcmObjectRecoverActivityParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcmObjectRecoverActivityParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


