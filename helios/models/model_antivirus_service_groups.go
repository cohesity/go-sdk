/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// AntivirusServiceGroups Specifies a list of Antivirus Service groups.
type AntivirusServiceGroups struct {
	// Specifies the list of Antivirus Service groups.
	AntivirusServiceGroups []AntivirusServiceGroup `json:"antivirusServiceGroups,omitempty"`
}

// NewAntivirusServiceGroups instantiates a new AntivirusServiceGroups object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAntivirusServiceGroups() *AntivirusServiceGroups {
	this := AntivirusServiceGroups{}
	return &this
}

// NewAntivirusServiceGroupsWithDefaults instantiates a new AntivirusServiceGroups object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAntivirusServiceGroupsWithDefaults() *AntivirusServiceGroups {
	this := AntivirusServiceGroups{}
	return &this
}

// GetAntivirusServiceGroups returns the AntivirusServiceGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusServiceGroups) GetAntivirusServiceGroups() []AntivirusServiceGroup {
	if o == nil  {
		var ret []AntivirusServiceGroup
		return ret
	}
	return o.AntivirusServiceGroups
}

// GetAntivirusServiceGroupsOk returns a tuple with the AntivirusServiceGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusServiceGroups) GetAntivirusServiceGroupsOk() (*[]AntivirusServiceGroup, bool) {
	if o == nil || o.AntivirusServiceGroups == nil {
		return nil, false
	}
	return &o.AntivirusServiceGroups, true
}

// HasAntivirusServiceGroups returns a boolean if a field has been set.
func (o *AntivirusServiceGroups) HasAntivirusServiceGroups() bool {
	if o != nil && o.AntivirusServiceGroups != nil {
		return true
	}

	return false
}

// SetAntivirusServiceGroups gets a reference to the given []AntivirusServiceGroup and assigns it to the AntivirusServiceGroups field.
func (o *AntivirusServiceGroups) SetAntivirusServiceGroups(v []AntivirusServiceGroup) {
	o.AntivirusServiceGroups = v
}

func (o AntivirusServiceGroups) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AntivirusServiceGroups != nil {
		toSerialize["antivirusServiceGroups"] = o.AntivirusServiceGroups
	}
	return json.Marshal(toSerialize)
}

type NullableAntivirusServiceGroups struct {
	value *AntivirusServiceGroups
	isSet bool
}

func (v NullableAntivirusServiceGroups) Get() *AntivirusServiceGroups {
	return v.value
}

func (v *NullableAntivirusServiceGroups) Set(val *AntivirusServiceGroups) {
	v.value = val
	v.isSet = true
}

func (v NullableAntivirusServiceGroups) IsSet() bool {
	return v.isSet
}

func (v *NullableAntivirusServiceGroups) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAntivirusServiceGroups(val *AntivirusServiceGroups) *NullableAntivirusServiceGroups {
	return &NullableAntivirusServiceGroups{value: val, isSet: true}
}

func (v NullableAntivirusServiceGroups) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAntivirusServiceGroups) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


