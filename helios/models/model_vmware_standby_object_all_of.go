/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// VmwareStandbyObjectAllOf struct for VmwareStandbyObjectAllOf
type VmwareStandbyObjectAllOf struct {
	// Specifies the current status of the standby object protected using continuous data protection policy.
	CdpStandbyStatus NullableString `json:"CdpStandbyStatus,omitempty"`
	// Specifies the guest ID(OS) of the standby VM for the corresponding backup object.
	GuestId NullableString `json:"guestId,omitempty"`
	StandbyMOref *MOref `json:"standbyMOref,omitempty"`
	// Specifies the time till which the standby object has been hydrated for the corresponding backup object.
	StandbyTime NullableInt64 `json:"standbyTime,omitempty"`
}

// NewVmwareStandbyObjectAllOf instantiates a new VmwareStandbyObjectAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmwareStandbyObjectAllOf() *VmwareStandbyObjectAllOf {
	this := VmwareStandbyObjectAllOf{}
	return &this
}

// NewVmwareStandbyObjectAllOfWithDefaults instantiates a new VmwareStandbyObjectAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmwareStandbyObjectAllOfWithDefaults() *VmwareStandbyObjectAllOf {
	this := VmwareStandbyObjectAllOf{}
	return &this
}

// GetCdpStandbyStatus returns the CdpStandbyStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareStandbyObjectAllOf) GetCdpStandbyStatus() string {
	if o == nil || o.CdpStandbyStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.CdpStandbyStatus.Get()
}

// GetCdpStandbyStatusOk returns a tuple with the CdpStandbyStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareStandbyObjectAllOf) GetCdpStandbyStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CdpStandbyStatus.Get(), o.CdpStandbyStatus.IsSet()
}

// HasCdpStandbyStatus returns a boolean if a field has been set.
func (o *VmwareStandbyObjectAllOf) HasCdpStandbyStatus() bool {
	if o != nil && o.CdpStandbyStatus.IsSet() {
		return true
	}

	return false
}

// SetCdpStandbyStatus gets a reference to the given NullableString and assigns it to the CdpStandbyStatus field.
func (o *VmwareStandbyObjectAllOf) SetCdpStandbyStatus(v string) {
	o.CdpStandbyStatus.Set(&v)
}
// SetCdpStandbyStatusNil sets the value for CdpStandbyStatus to be an explicit nil
func (o *VmwareStandbyObjectAllOf) SetCdpStandbyStatusNil() {
	o.CdpStandbyStatus.Set(nil)
}

// UnsetCdpStandbyStatus ensures that no value is present for CdpStandbyStatus, not even an explicit nil
func (o *VmwareStandbyObjectAllOf) UnsetCdpStandbyStatus() {
	o.CdpStandbyStatus.Unset()
}

// GetGuestId returns the GuestId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareStandbyObjectAllOf) GetGuestId() string {
	if o == nil || o.GuestId.Get() == nil {
		var ret string
		return ret
	}
	return *o.GuestId.Get()
}

// GetGuestIdOk returns a tuple with the GuestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareStandbyObjectAllOf) GetGuestIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GuestId.Get(), o.GuestId.IsSet()
}

// HasGuestId returns a boolean if a field has been set.
func (o *VmwareStandbyObjectAllOf) HasGuestId() bool {
	if o != nil && o.GuestId.IsSet() {
		return true
	}

	return false
}

// SetGuestId gets a reference to the given NullableString and assigns it to the GuestId field.
func (o *VmwareStandbyObjectAllOf) SetGuestId(v string) {
	o.GuestId.Set(&v)
}
// SetGuestIdNil sets the value for GuestId to be an explicit nil
func (o *VmwareStandbyObjectAllOf) SetGuestIdNil() {
	o.GuestId.Set(nil)
}

// UnsetGuestId ensures that no value is present for GuestId, not even an explicit nil
func (o *VmwareStandbyObjectAllOf) UnsetGuestId() {
	o.GuestId.Unset()
}

// GetStandbyMOref returns the StandbyMOref field value if set, zero value otherwise.
func (o *VmwareStandbyObjectAllOf) GetStandbyMOref() MOref {
	if o == nil || o.StandbyMOref == nil {
		var ret MOref
		return ret
	}
	return *o.StandbyMOref
}

// GetStandbyMOrefOk returns a tuple with the StandbyMOref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmwareStandbyObjectAllOf) GetStandbyMOrefOk() (*MOref, bool) {
	if o == nil || o.StandbyMOref == nil {
		return nil, false
	}
	return o.StandbyMOref, true
}

// HasStandbyMOref returns a boolean if a field has been set.
func (o *VmwareStandbyObjectAllOf) HasStandbyMOref() bool {
	if o != nil && o.StandbyMOref != nil {
		return true
	}

	return false
}

// SetStandbyMOref gets a reference to the given MOref and assigns it to the StandbyMOref field.
func (o *VmwareStandbyObjectAllOf) SetStandbyMOref(v MOref) {
	o.StandbyMOref = &v
}

// GetStandbyTime returns the StandbyTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmwareStandbyObjectAllOf) GetStandbyTime() int64 {
	if o == nil || o.StandbyTime.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StandbyTime.Get()
}

// GetStandbyTimeOk returns a tuple with the StandbyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmwareStandbyObjectAllOf) GetStandbyTimeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StandbyTime.Get(), o.StandbyTime.IsSet()
}

// HasStandbyTime returns a boolean if a field has been set.
func (o *VmwareStandbyObjectAllOf) HasStandbyTime() bool {
	if o != nil && o.StandbyTime.IsSet() {
		return true
	}

	return false
}

// SetStandbyTime gets a reference to the given NullableInt64 and assigns it to the StandbyTime field.
func (o *VmwareStandbyObjectAllOf) SetStandbyTime(v int64) {
	o.StandbyTime.Set(&v)
}
// SetStandbyTimeNil sets the value for StandbyTime to be an explicit nil
func (o *VmwareStandbyObjectAllOf) SetStandbyTimeNil() {
	o.StandbyTime.Set(nil)
}

// UnsetStandbyTime ensures that no value is present for StandbyTime, not even an explicit nil
func (o *VmwareStandbyObjectAllOf) UnsetStandbyTime() {
	o.StandbyTime.Unset()
}

func (o VmwareStandbyObjectAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CdpStandbyStatus.IsSet() {
		toSerialize["CdpStandbyStatus"] = o.CdpStandbyStatus.Get()
	}
	if o.GuestId.IsSet() {
		toSerialize["guestId"] = o.GuestId.Get()
	}
	if o.StandbyMOref != nil {
		toSerialize["standbyMOref"] = o.StandbyMOref
	}
	if o.StandbyTime.IsSet() {
		toSerialize["standbyTime"] = o.StandbyTime.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableVmwareStandbyObjectAllOf struct {
	value *VmwareStandbyObjectAllOf
	isSet bool
}

func (v NullableVmwareStandbyObjectAllOf) Get() *VmwareStandbyObjectAllOf {
	return v.value
}

func (v *NullableVmwareStandbyObjectAllOf) Set(val *VmwareStandbyObjectAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableVmwareStandbyObjectAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableVmwareStandbyObjectAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmwareStandbyObjectAllOf(val *VmwareStandbyObjectAllOf) *NullableVmwareStandbyObjectAllOf {
	return &NullableVmwareStandbyObjectAllOf{value: val, isSet: true}
}

func (v NullableVmwareStandbyObjectAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmwareStandbyObjectAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


