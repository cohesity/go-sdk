/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// PhysicalObjectProtectionUpdateRequestParams Specifies the update parameters specific to Physical object protection.
type PhysicalObjectProtectionUpdateRequestParams struct {
	// Specifies the Physical Object Protection type.
	ObjectProtectionType NullableString `json:"objectProtectionType"`
	FileObjectProtectionTypeParams NullablePhysicalFileProtectionGroupParams `json:"fileObjectProtectionTypeParams,omitempty"`
	VolumeObjectProtectionTypeParams NullablePhysicalVolumeProtectionGroupParams `json:"volumeObjectProtectionTypeParams,omitempty"`
}

// NewPhysicalObjectProtectionUpdateRequestParams instantiates a new PhysicalObjectProtectionUpdateRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhysicalObjectProtectionUpdateRequestParams(objectProtectionType NullableString) *PhysicalObjectProtectionUpdateRequestParams {
	this := PhysicalObjectProtectionUpdateRequestParams{}
	this.ObjectProtectionType = objectProtectionType
	return &this
}

// NewPhysicalObjectProtectionUpdateRequestParamsWithDefaults instantiates a new PhysicalObjectProtectionUpdateRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhysicalObjectProtectionUpdateRequestParamsWithDefaults() *PhysicalObjectProtectionUpdateRequestParams {
	this := PhysicalObjectProtectionUpdateRequestParams{}
	return &this
}

// GetObjectProtectionType returns the ObjectProtectionType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PhysicalObjectProtectionUpdateRequestParams) GetObjectProtectionType() string {
	if o == nil || o.ObjectProtectionType.Get() == nil {
		var ret string
		return ret
	}

	return *o.ObjectProtectionType.Get()
}

// GetObjectProtectionTypeOk returns a tuple with the ObjectProtectionType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalObjectProtectionUpdateRequestParams) GetObjectProtectionTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ObjectProtectionType.Get(), o.ObjectProtectionType.IsSet()
}

// SetObjectProtectionType sets field value
func (o *PhysicalObjectProtectionUpdateRequestParams) SetObjectProtectionType(v string) {
	o.ObjectProtectionType.Set(&v)
}

// GetFileObjectProtectionTypeParams returns the FileObjectProtectionTypeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhysicalObjectProtectionUpdateRequestParams) GetFileObjectProtectionTypeParams() PhysicalFileProtectionGroupParams {
	if o == nil || o.FileObjectProtectionTypeParams.Get() == nil {
		var ret PhysicalFileProtectionGroupParams
		return ret
	}
	return *o.FileObjectProtectionTypeParams.Get()
}

// GetFileObjectProtectionTypeParamsOk returns a tuple with the FileObjectProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalObjectProtectionUpdateRequestParams) GetFileObjectProtectionTypeParamsOk() (*PhysicalFileProtectionGroupParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FileObjectProtectionTypeParams.Get(), o.FileObjectProtectionTypeParams.IsSet()
}

// HasFileObjectProtectionTypeParams returns a boolean if a field has been set.
func (o *PhysicalObjectProtectionUpdateRequestParams) HasFileObjectProtectionTypeParams() bool {
	if o != nil && o.FileObjectProtectionTypeParams.IsSet() {
		return true
	}

	return false
}

// SetFileObjectProtectionTypeParams gets a reference to the given NullablePhysicalFileProtectionGroupParams and assigns it to the FileObjectProtectionTypeParams field.
func (o *PhysicalObjectProtectionUpdateRequestParams) SetFileObjectProtectionTypeParams(v PhysicalFileProtectionGroupParams) {
	o.FileObjectProtectionTypeParams.Set(&v)
}
// SetFileObjectProtectionTypeParamsNil sets the value for FileObjectProtectionTypeParams to be an explicit nil
func (o *PhysicalObjectProtectionUpdateRequestParams) SetFileObjectProtectionTypeParamsNil() {
	o.FileObjectProtectionTypeParams.Set(nil)
}

// UnsetFileObjectProtectionTypeParams ensures that no value is present for FileObjectProtectionTypeParams, not even an explicit nil
func (o *PhysicalObjectProtectionUpdateRequestParams) UnsetFileObjectProtectionTypeParams() {
	o.FileObjectProtectionTypeParams.Unset()
}

// GetVolumeObjectProtectionTypeParams returns the VolumeObjectProtectionTypeParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhysicalObjectProtectionUpdateRequestParams) GetVolumeObjectProtectionTypeParams() PhysicalVolumeProtectionGroupParams {
	if o == nil || o.VolumeObjectProtectionTypeParams.Get() == nil {
		var ret PhysicalVolumeProtectionGroupParams
		return ret
	}
	return *o.VolumeObjectProtectionTypeParams.Get()
}

// GetVolumeObjectProtectionTypeParamsOk returns a tuple with the VolumeObjectProtectionTypeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalObjectProtectionUpdateRequestParams) GetVolumeObjectProtectionTypeParamsOk() (*PhysicalVolumeProtectionGroupParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VolumeObjectProtectionTypeParams.Get(), o.VolumeObjectProtectionTypeParams.IsSet()
}

// HasVolumeObjectProtectionTypeParams returns a boolean if a field has been set.
func (o *PhysicalObjectProtectionUpdateRequestParams) HasVolumeObjectProtectionTypeParams() bool {
	if o != nil && o.VolumeObjectProtectionTypeParams.IsSet() {
		return true
	}

	return false
}

// SetVolumeObjectProtectionTypeParams gets a reference to the given NullablePhysicalVolumeProtectionGroupParams and assigns it to the VolumeObjectProtectionTypeParams field.
func (o *PhysicalObjectProtectionUpdateRequestParams) SetVolumeObjectProtectionTypeParams(v PhysicalVolumeProtectionGroupParams) {
	o.VolumeObjectProtectionTypeParams.Set(&v)
}
// SetVolumeObjectProtectionTypeParamsNil sets the value for VolumeObjectProtectionTypeParams to be an explicit nil
func (o *PhysicalObjectProtectionUpdateRequestParams) SetVolumeObjectProtectionTypeParamsNil() {
	o.VolumeObjectProtectionTypeParams.Set(nil)
}

// UnsetVolumeObjectProtectionTypeParams ensures that no value is present for VolumeObjectProtectionTypeParams, not even an explicit nil
func (o *PhysicalObjectProtectionUpdateRequestParams) UnsetVolumeObjectProtectionTypeParams() {
	o.VolumeObjectProtectionTypeParams.Unset()
}

func (o PhysicalObjectProtectionUpdateRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["objectProtectionType"] = o.ObjectProtectionType.Get()
	}
	if o.FileObjectProtectionTypeParams.IsSet() {
		toSerialize["fileObjectProtectionTypeParams"] = o.FileObjectProtectionTypeParams.Get()
	}
	if o.VolumeObjectProtectionTypeParams.IsSet() {
		toSerialize["volumeObjectProtectionTypeParams"] = o.VolumeObjectProtectionTypeParams.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePhysicalObjectProtectionUpdateRequestParams struct {
	value *PhysicalObjectProtectionUpdateRequestParams
	isSet bool
}

func (v NullablePhysicalObjectProtectionUpdateRequestParams) Get() *PhysicalObjectProtectionUpdateRequestParams {
	return v.value
}

func (v *NullablePhysicalObjectProtectionUpdateRequestParams) Set(val *PhysicalObjectProtectionUpdateRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullablePhysicalObjectProtectionUpdateRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullablePhysicalObjectProtectionUpdateRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhysicalObjectProtectionUpdateRequestParams(val *PhysicalObjectProtectionUpdateRequestParams) *NullablePhysicalObjectProtectionUpdateRequestParams {
	return &NullablePhysicalObjectProtectionUpdateRequestParams{value: val, isSet: true}
}

func (v NullablePhysicalObjectProtectionUpdateRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhysicalObjectProtectionUpdateRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


