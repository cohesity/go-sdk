/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// McmLastRunEnvSpecificStatusStats Specifies the enviournment specific last run status stats.
type McmLastRunEnvSpecificStatusStats struct {
	// Specifies the environment type of object.
	Environment NullableString `json:"environment,omitempty"`
	// Specifies the aggregated status across all adapters for respective last run.
	AggregatedStats *[]McmLastRunStatusStats `json:"aggregatedStats,omitempty"`
}

// NewMcmLastRunEnvSpecificStatusStats instantiates a new McmLastRunEnvSpecificStatusStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcmLastRunEnvSpecificStatusStats() *McmLastRunEnvSpecificStatusStats {
	this := McmLastRunEnvSpecificStatusStats{}
	return &this
}

// NewMcmLastRunEnvSpecificStatusStatsWithDefaults instantiates a new McmLastRunEnvSpecificStatusStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcmLastRunEnvSpecificStatusStatsWithDefaults() *McmLastRunEnvSpecificStatusStats {
	this := McmLastRunEnvSpecificStatusStats{}
	return &this
}

// GetEnvironment returns the Environment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmLastRunEnvSpecificStatusStats) GetEnvironment() string {
	if o == nil || o.Environment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmLastRunEnvSpecificStatusStats) GetEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// HasEnvironment returns a boolean if a field has been set.
func (o *McmLastRunEnvSpecificStatusStats) HasEnvironment() bool {
	if o != nil && o.Environment.IsSet() {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given NullableString and assigns it to the Environment field.
func (o *McmLastRunEnvSpecificStatusStats) SetEnvironment(v string) {
	o.Environment.Set(&v)
}
// SetEnvironmentNil sets the value for Environment to be an explicit nil
func (o *McmLastRunEnvSpecificStatusStats) SetEnvironmentNil() {
	o.Environment.Set(nil)
}

// UnsetEnvironment ensures that no value is present for Environment, not even an explicit nil
func (o *McmLastRunEnvSpecificStatusStats) UnsetEnvironment() {
	o.Environment.Unset()
}

// GetAggregatedStats returns the AggregatedStats field value if set, zero value otherwise.
func (o *McmLastRunEnvSpecificStatusStats) GetAggregatedStats() []McmLastRunStatusStats {
	if o == nil || o.AggregatedStats == nil {
		var ret []McmLastRunStatusStats
		return ret
	}
	return *o.AggregatedStats
}

// GetAggregatedStatsOk returns a tuple with the AggregatedStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McmLastRunEnvSpecificStatusStats) GetAggregatedStatsOk() (*[]McmLastRunStatusStats, bool) {
	if o == nil || o.AggregatedStats == nil {
		return nil, false
	}
	return o.AggregatedStats, true
}

// HasAggregatedStats returns a boolean if a field has been set.
func (o *McmLastRunEnvSpecificStatusStats) HasAggregatedStats() bool {
	if o != nil && o.AggregatedStats != nil {
		return true
	}

	return false
}

// SetAggregatedStats gets a reference to the given []McmLastRunStatusStats and assigns it to the AggregatedStats field.
func (o *McmLastRunEnvSpecificStatusStats) SetAggregatedStats(v []McmLastRunStatusStats) {
	o.AggregatedStats = &v
}

func (o McmLastRunEnvSpecificStatusStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Environment.IsSet() {
		toSerialize["environment"] = o.Environment.Get()
	}
	if o.AggregatedStats != nil {
		toSerialize["aggregatedStats"] = o.AggregatedStats
	}
	return json.Marshal(toSerialize)
}

type NullableMcmLastRunEnvSpecificStatusStats struct {
	value *McmLastRunEnvSpecificStatusStats
	isSet bool
}

func (v NullableMcmLastRunEnvSpecificStatusStats) Get() *McmLastRunEnvSpecificStatusStats {
	return v.value
}

func (v *NullableMcmLastRunEnvSpecificStatusStats) Set(val *McmLastRunEnvSpecificStatusStats) {
	v.value = val
	v.isSet = true
}

func (v NullableMcmLastRunEnvSpecificStatusStats) IsSet() bool {
	return v.isSet
}

func (v *NullableMcmLastRunEnvSpecificStatusStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcmLastRunEnvSpecificStatusStats(val *McmLastRunEnvSpecificStatusStats) *NullableMcmLastRunEnvSpecificStatusStats {
	return &NullableMcmLastRunEnvSpecificStatusStats{value: val, isSet: true}
}

func (v NullableMcmLastRunEnvSpecificStatusStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcmLastRunEnvSpecificStatusStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


