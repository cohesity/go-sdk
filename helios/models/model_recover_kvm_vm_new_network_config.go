/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// RecoverKvmVmNewNetworkConfig Specifies the network config parameters to be applied for KVM VMs if recovering to a new source with a new network.
type RecoverKvmVmNewNetworkConfig struct {
	// Specifies the network port group (i.e, either a standard switch port group or a distributed port group) that will attached to the recovered Object. This parameter is mandatory if detach network is specified as false.
	NetworkPortGroup *RecoveryObjectIdentifier `json:"networkPortGroup,omitempty"`
	// Specifies VNic profile that will be attached to the restored object.
	VnicProfile *RecoveryObjectIdentifier `json:"vnicProfile,omitempty"`
}

// NewRecoverKvmVmNewNetworkConfig instantiates a new RecoverKvmVmNewNetworkConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverKvmVmNewNetworkConfig() *RecoverKvmVmNewNetworkConfig {
	this := RecoverKvmVmNewNetworkConfig{}
	return &this
}

// NewRecoverKvmVmNewNetworkConfigWithDefaults instantiates a new RecoverKvmVmNewNetworkConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverKvmVmNewNetworkConfigWithDefaults() *RecoverKvmVmNewNetworkConfig {
	this := RecoverKvmVmNewNetworkConfig{}
	return &this
}

// GetNetworkPortGroup returns the NetworkPortGroup field value if set, zero value otherwise.
func (o *RecoverKvmVmNewNetworkConfig) GetNetworkPortGroup() RecoveryObjectIdentifier {
	if o == nil || o.NetworkPortGroup == nil {
		var ret RecoveryObjectIdentifier
		return ret
	}
	return *o.NetworkPortGroup
}

// GetNetworkPortGroupOk returns a tuple with the NetworkPortGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverKvmVmNewNetworkConfig) GetNetworkPortGroupOk() (*RecoveryObjectIdentifier, bool) {
	if o == nil || o.NetworkPortGroup == nil {
		return nil, false
	}
	return o.NetworkPortGroup, true
}

// HasNetworkPortGroup returns a boolean if a field has been set.
func (o *RecoverKvmVmNewNetworkConfig) HasNetworkPortGroup() bool {
	if o != nil && o.NetworkPortGroup != nil {
		return true
	}

	return false
}

// SetNetworkPortGroup gets a reference to the given RecoveryObjectIdentifier and assigns it to the NetworkPortGroup field.
func (o *RecoverKvmVmNewNetworkConfig) SetNetworkPortGroup(v RecoveryObjectIdentifier) {
	o.NetworkPortGroup = &v
}

// GetVnicProfile returns the VnicProfile field value if set, zero value otherwise.
func (o *RecoverKvmVmNewNetworkConfig) GetVnicProfile() RecoveryObjectIdentifier {
	if o == nil || o.VnicProfile == nil {
		var ret RecoveryObjectIdentifier
		return ret
	}
	return *o.VnicProfile
}

// GetVnicProfileOk returns a tuple with the VnicProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverKvmVmNewNetworkConfig) GetVnicProfileOk() (*RecoveryObjectIdentifier, bool) {
	if o == nil || o.VnicProfile == nil {
		return nil, false
	}
	return o.VnicProfile, true
}

// HasVnicProfile returns a boolean if a field has been set.
func (o *RecoverKvmVmNewNetworkConfig) HasVnicProfile() bool {
	if o != nil && o.VnicProfile != nil {
		return true
	}

	return false
}

// SetVnicProfile gets a reference to the given RecoveryObjectIdentifier and assigns it to the VnicProfile field.
func (o *RecoverKvmVmNewNetworkConfig) SetVnicProfile(v RecoveryObjectIdentifier) {
	o.VnicProfile = &v
}

func (o RecoverKvmVmNewNetworkConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkPortGroup != nil {
		toSerialize["networkPortGroup"] = o.NetworkPortGroup
	}
	if o.VnicProfile != nil {
		toSerialize["vnicProfile"] = o.VnicProfile
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverKvmVmNewNetworkConfig struct {
	value *RecoverKvmVmNewNetworkConfig
	isSet bool
}

func (v NullableRecoverKvmVmNewNetworkConfig) Get() *RecoverKvmVmNewNetworkConfig {
	return v.value
}

func (v *NullableRecoverKvmVmNewNetworkConfig) Set(val *RecoverKvmVmNewNetworkConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverKvmVmNewNetworkConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverKvmVmNewNetworkConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverKvmVmNewNetworkConfig(val *RecoverKvmVmNewNetworkConfig) *NullableRecoverKvmVmNewNetworkConfig {
	return &NullableRecoverKvmVmNewNetworkConfig{value: val, isSet: true}
}

func (v NullableRecoverKvmVmNewNetworkConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverKvmVmNewNetworkConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


