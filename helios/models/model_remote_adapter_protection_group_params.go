/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// RemoteAdapterProtectionGroupParams Specifies the parameters which are specific to Remote Adapter related Protection Groups.
type RemoteAdapterProtectionGroupParams struct {
	// Specifies a list of hosts to protected in this protection group.
	Hosts []RemoteAdapterHost `json:"hosts"`
	// Specifies the id of the view where we put the script result data.
	ViewId NullableInt64 `json:"viewId"`
	RemoteViewParams *RemoteAdapterProtectionGroupReplicationParams `json:"remoteViewParams,omitempty"`
	IndexingPolicy *IndexingPolicy `json:"indexingPolicy,omitempty"`
	// Specifies whether or not to quiesce apps and the file system in order to take app consistent snapshots.
	AppConsistentSnapshot NullableBool `json:"appConsistentSnapshot,omitempty"`
}

// NewRemoteAdapterProtectionGroupParams instantiates a new RemoteAdapterProtectionGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoteAdapterProtectionGroupParams(hosts []RemoteAdapterHost, viewId NullableInt64) *RemoteAdapterProtectionGroupParams {
	this := RemoteAdapterProtectionGroupParams{}
	this.Hosts = hosts
	this.ViewId = viewId
	return &this
}

// NewRemoteAdapterProtectionGroupParamsWithDefaults instantiates a new RemoteAdapterProtectionGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoteAdapterProtectionGroupParamsWithDefaults() *RemoteAdapterProtectionGroupParams {
	this := RemoteAdapterProtectionGroupParams{}
	return &this
}

// GetHosts returns the Hosts field value
// If the value is explicit nil, the zero value for []RemoteAdapterHost will be returned
func (o *RemoteAdapterProtectionGroupParams) GetHosts() []RemoteAdapterHost {
	if o == nil {
		var ret []RemoteAdapterHost
		return ret
	}

	return o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RemoteAdapterProtectionGroupParams) GetHostsOk() (*[]RemoteAdapterHost, bool) {
	if o == nil || o.Hosts == nil {
		return nil, false
	}
	return &o.Hosts, true
}

// SetHosts sets field value
func (o *RemoteAdapterProtectionGroupParams) SetHosts(v []RemoteAdapterHost) {
	o.Hosts = v
}

// GetViewId returns the ViewId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *RemoteAdapterProtectionGroupParams) GetViewId() int64 {
	if o == nil || o.ViewId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.ViewId.Get()
}

// GetViewIdOk returns a tuple with the ViewId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RemoteAdapterProtectionGroupParams) GetViewIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewId.Get(), o.ViewId.IsSet()
}

// SetViewId sets field value
func (o *RemoteAdapterProtectionGroupParams) SetViewId(v int64) {
	o.ViewId.Set(&v)
}

// GetRemoteViewParams returns the RemoteViewParams field value if set, zero value otherwise.
func (o *RemoteAdapterProtectionGroupParams) GetRemoteViewParams() RemoteAdapterProtectionGroupReplicationParams {
	if o == nil || o.RemoteViewParams == nil {
		var ret RemoteAdapterProtectionGroupReplicationParams
		return ret
	}
	return *o.RemoteViewParams
}

// GetRemoteViewParamsOk returns a tuple with the RemoteViewParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteAdapterProtectionGroupParams) GetRemoteViewParamsOk() (*RemoteAdapterProtectionGroupReplicationParams, bool) {
	if o == nil || o.RemoteViewParams == nil {
		return nil, false
	}
	return o.RemoteViewParams, true
}

// HasRemoteViewParams returns a boolean if a field has been set.
func (o *RemoteAdapterProtectionGroupParams) HasRemoteViewParams() bool {
	if o != nil && o.RemoteViewParams != nil {
		return true
	}

	return false
}

// SetRemoteViewParams gets a reference to the given RemoteAdapterProtectionGroupReplicationParams and assigns it to the RemoteViewParams field.
func (o *RemoteAdapterProtectionGroupParams) SetRemoteViewParams(v RemoteAdapterProtectionGroupReplicationParams) {
	o.RemoteViewParams = &v
}

// GetIndexingPolicy returns the IndexingPolicy field value if set, zero value otherwise.
func (o *RemoteAdapterProtectionGroupParams) GetIndexingPolicy() IndexingPolicy {
	if o == nil || o.IndexingPolicy == nil {
		var ret IndexingPolicy
		return ret
	}
	return *o.IndexingPolicy
}

// GetIndexingPolicyOk returns a tuple with the IndexingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteAdapterProtectionGroupParams) GetIndexingPolicyOk() (*IndexingPolicy, bool) {
	if o == nil || o.IndexingPolicy == nil {
		return nil, false
	}
	return o.IndexingPolicy, true
}

// HasIndexingPolicy returns a boolean if a field has been set.
func (o *RemoteAdapterProtectionGroupParams) HasIndexingPolicy() bool {
	if o != nil && o.IndexingPolicy != nil {
		return true
	}

	return false
}

// SetIndexingPolicy gets a reference to the given IndexingPolicy and assigns it to the IndexingPolicy field.
func (o *RemoteAdapterProtectionGroupParams) SetIndexingPolicy(v IndexingPolicy) {
	o.IndexingPolicy = &v
}

// GetAppConsistentSnapshot returns the AppConsistentSnapshot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RemoteAdapterProtectionGroupParams) GetAppConsistentSnapshot() bool {
	if o == nil || o.AppConsistentSnapshot.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AppConsistentSnapshot.Get()
}

// GetAppConsistentSnapshotOk returns a tuple with the AppConsistentSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RemoteAdapterProtectionGroupParams) GetAppConsistentSnapshotOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AppConsistentSnapshot.Get(), o.AppConsistentSnapshot.IsSet()
}

// HasAppConsistentSnapshot returns a boolean if a field has been set.
func (o *RemoteAdapterProtectionGroupParams) HasAppConsistentSnapshot() bool {
	if o != nil && o.AppConsistentSnapshot.IsSet() {
		return true
	}

	return false
}

// SetAppConsistentSnapshot gets a reference to the given NullableBool and assigns it to the AppConsistentSnapshot field.
func (o *RemoteAdapterProtectionGroupParams) SetAppConsistentSnapshot(v bool) {
	o.AppConsistentSnapshot.Set(&v)
}
// SetAppConsistentSnapshotNil sets the value for AppConsistentSnapshot to be an explicit nil
func (o *RemoteAdapterProtectionGroupParams) SetAppConsistentSnapshotNil() {
	o.AppConsistentSnapshot.Set(nil)
}

// UnsetAppConsistentSnapshot ensures that no value is present for AppConsistentSnapshot, not even an explicit nil
func (o *RemoteAdapterProtectionGroupParams) UnsetAppConsistentSnapshot() {
	o.AppConsistentSnapshot.Unset()
}

func (o RemoteAdapterProtectionGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Hosts != nil {
		toSerialize["hosts"] = o.Hosts
	}
	if true {
		toSerialize["viewId"] = o.ViewId.Get()
	}
	if o.RemoteViewParams != nil {
		toSerialize["remoteViewParams"] = o.RemoteViewParams
	}
	if o.IndexingPolicy != nil {
		toSerialize["indexingPolicy"] = o.IndexingPolicy
	}
	if o.AppConsistentSnapshot.IsSet() {
		toSerialize["appConsistentSnapshot"] = o.AppConsistentSnapshot.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRemoteAdapterProtectionGroupParams struct {
	value *RemoteAdapterProtectionGroupParams
	isSet bool
}

func (v NullableRemoteAdapterProtectionGroupParams) Get() *RemoteAdapterProtectionGroupParams {
	return v.value
}

func (v *NullableRemoteAdapterProtectionGroupParams) Set(val *RemoteAdapterProtectionGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoteAdapterProtectionGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoteAdapterProtectionGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoteAdapterProtectionGroupParams(val *RemoteAdapterProtectionGroupParams) *NullableRemoteAdapterProtectionGroupParams {
	return &NullableRemoteAdapterProtectionGroupParams{value: val, isSet: true}
}

func (v NullableRemoteAdapterProtectionGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoteAdapterProtectionGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


