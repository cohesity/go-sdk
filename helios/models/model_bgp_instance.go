/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// BgpInstance BGP instance.
type BgpInstance struct {
	// Local AS.
	LocalAS NullableInt32 `json:"localAS,omitempty"`
	// List of bgp peer groups.
	Peers []BgpPeer `json:"peers,omitempty"`
	Timers *BgpTimers `json:"timers,omitempty"`
}

// NewBgpInstance instantiates a new BgpInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpInstance() *BgpInstance {
	this := BgpInstance{}
	return &this
}

// NewBgpInstanceWithDefaults instantiates a new BgpInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpInstanceWithDefaults() *BgpInstance {
	this := BgpInstance{}
	return &this
}

// GetLocalAS returns the LocalAS field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BgpInstance) GetLocalAS() int32 {
	if o == nil || o.LocalAS.Get() == nil {
		var ret int32
		return ret
	}
	return *o.LocalAS.Get()
}

// GetLocalASOk returns a tuple with the LocalAS field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BgpInstance) GetLocalASOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LocalAS.Get(), o.LocalAS.IsSet()
}

// HasLocalAS returns a boolean if a field has been set.
func (o *BgpInstance) HasLocalAS() bool {
	if o != nil && o.LocalAS.IsSet() {
		return true
	}

	return false
}

// SetLocalAS gets a reference to the given NullableInt32 and assigns it to the LocalAS field.
func (o *BgpInstance) SetLocalAS(v int32) {
	o.LocalAS.Set(&v)
}
// SetLocalASNil sets the value for LocalAS to be an explicit nil
func (o *BgpInstance) SetLocalASNil() {
	o.LocalAS.Set(nil)
}

// UnsetLocalAS ensures that no value is present for LocalAS, not even an explicit nil
func (o *BgpInstance) UnsetLocalAS() {
	o.LocalAS.Unset()
}

// GetPeers returns the Peers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BgpInstance) GetPeers() []BgpPeer {
	if o == nil  {
		var ret []BgpPeer
		return ret
	}
	return o.Peers
}

// GetPeersOk returns a tuple with the Peers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BgpInstance) GetPeersOk() (*[]BgpPeer, bool) {
	if o == nil || o.Peers == nil {
		return nil, false
	}
	return &o.Peers, true
}

// HasPeers returns a boolean if a field has been set.
func (o *BgpInstance) HasPeers() bool {
	if o != nil && o.Peers != nil {
		return true
	}

	return false
}

// SetPeers gets a reference to the given []BgpPeer and assigns it to the Peers field.
func (o *BgpInstance) SetPeers(v []BgpPeer) {
	o.Peers = v
}

// GetTimers returns the Timers field value if set, zero value otherwise.
func (o *BgpInstance) GetTimers() BgpTimers {
	if o == nil || o.Timers == nil {
		var ret BgpTimers
		return ret
	}
	return *o.Timers
}

// GetTimersOk returns a tuple with the Timers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInstance) GetTimersOk() (*BgpTimers, bool) {
	if o == nil || o.Timers == nil {
		return nil, false
	}
	return o.Timers, true
}

// HasTimers returns a boolean if a field has been set.
func (o *BgpInstance) HasTimers() bool {
	if o != nil && o.Timers != nil {
		return true
	}

	return false
}

// SetTimers gets a reference to the given BgpTimers and assigns it to the Timers field.
func (o *BgpInstance) SetTimers(v BgpTimers) {
	o.Timers = &v
}

func (o BgpInstance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LocalAS.IsSet() {
		toSerialize["localAS"] = o.LocalAS.Get()
	}
	if o.Peers != nil {
		toSerialize["peers"] = o.Peers
	}
	if o.Timers != nil {
		toSerialize["timers"] = o.Timers
	}
	return json.Marshal(toSerialize)
}

type NullableBgpInstance struct {
	value *BgpInstance
	isSet bool
}

func (v NullableBgpInstance) Get() *BgpInstance {
	return v.value
}

func (v *NullableBgpInstance) Set(val *BgpInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpInstance(val *BgpInstance) *NullableBgpInstance {
	return &NullableBgpInstance{value: val, isSet: true}
}

func (v NullableBgpInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


