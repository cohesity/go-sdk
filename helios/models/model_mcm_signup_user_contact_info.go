/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// McmSignupUserContactInfo Specifies the contact information of User signing up for MCM.
type McmSignupUserContactInfo struct {
	// Specifies the first name of the user.
	FirstName string `json:"firstName"`
	// Specifies the last name of the user.
	LastName string `json:"lastName"`
	// Specifies the user's email address.
	Email string `json:"email"`
	// Specifies the user's phone number.
	PhoneNumber NullableString `json:"phoneNumber,omitempty"`
	// Specifies the name of the Company to which the user belongs.
	CompanyName string `json:"companyName"`
	// Specifies the size of the company. For example, 1-500.
	CompanySize NullableString `json:"companySize,omitempty"`
	// Specifies the industry type of the company. For example IT.
	IndustryType NullableString `json:"industryType,omitempty"`
}

// NewMcmSignupUserContactInfo instantiates a new McmSignupUserContactInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcmSignupUserContactInfo(firstName string, lastName string, email string, companyName string) *McmSignupUserContactInfo {
	this := McmSignupUserContactInfo{}
	this.FirstName = firstName
	this.LastName = lastName
	this.Email = email
	this.CompanyName = companyName
	return &this
}

// NewMcmSignupUserContactInfoWithDefaults instantiates a new McmSignupUserContactInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcmSignupUserContactInfoWithDefaults() *McmSignupUserContactInfo {
	this := McmSignupUserContactInfo{}
	return &this
}

// GetFirstName returns the FirstName field value
func (o *McmSignupUserContactInfo) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *McmSignupUserContactInfo) GetFirstNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *McmSignupUserContactInfo) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *McmSignupUserContactInfo) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *McmSignupUserContactInfo) GetLastNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *McmSignupUserContactInfo) SetLastName(v string) {
	o.LastName = v
}

// GetEmail returns the Email field value
func (o *McmSignupUserContactInfo) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *McmSignupUserContactInfo) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *McmSignupUserContactInfo) SetEmail(v string) {
	o.Email = v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmSignupUserContactInfo) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber.Get()
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmSignupUserContactInfo) GetPhoneNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PhoneNumber.Get(), o.PhoneNumber.IsSet()
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *McmSignupUserContactInfo) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber.IsSet() {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given NullableString and assigns it to the PhoneNumber field.
func (o *McmSignupUserContactInfo) SetPhoneNumber(v string) {
	o.PhoneNumber.Set(&v)
}
// SetPhoneNumberNil sets the value for PhoneNumber to be an explicit nil
func (o *McmSignupUserContactInfo) SetPhoneNumberNil() {
	o.PhoneNumber.Set(nil)
}

// UnsetPhoneNumber ensures that no value is present for PhoneNumber, not even an explicit nil
func (o *McmSignupUserContactInfo) UnsetPhoneNumber() {
	o.PhoneNumber.Unset()
}

// GetCompanyName returns the CompanyName field value
func (o *McmSignupUserContactInfo) GetCompanyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value
// and a boolean to check if the value has been set.
func (o *McmSignupUserContactInfo) GetCompanyNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CompanyName, true
}

// SetCompanyName sets field value
func (o *McmSignupUserContactInfo) SetCompanyName(v string) {
	o.CompanyName = v
}

// GetCompanySize returns the CompanySize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmSignupUserContactInfo) GetCompanySize() string {
	if o == nil || o.CompanySize.Get() == nil {
		var ret string
		return ret
	}
	return *o.CompanySize.Get()
}

// GetCompanySizeOk returns a tuple with the CompanySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmSignupUserContactInfo) GetCompanySizeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CompanySize.Get(), o.CompanySize.IsSet()
}

// HasCompanySize returns a boolean if a field has been set.
func (o *McmSignupUserContactInfo) HasCompanySize() bool {
	if o != nil && o.CompanySize.IsSet() {
		return true
	}

	return false
}

// SetCompanySize gets a reference to the given NullableString and assigns it to the CompanySize field.
func (o *McmSignupUserContactInfo) SetCompanySize(v string) {
	o.CompanySize.Set(&v)
}
// SetCompanySizeNil sets the value for CompanySize to be an explicit nil
func (o *McmSignupUserContactInfo) SetCompanySizeNil() {
	o.CompanySize.Set(nil)
}

// UnsetCompanySize ensures that no value is present for CompanySize, not even an explicit nil
func (o *McmSignupUserContactInfo) UnsetCompanySize() {
	o.CompanySize.Unset()
}

// GetIndustryType returns the IndustryType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *McmSignupUserContactInfo) GetIndustryType() string {
	if o == nil || o.IndustryType.Get() == nil {
		var ret string
		return ret
	}
	return *o.IndustryType.Get()
}

// GetIndustryTypeOk returns a tuple with the IndustryType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McmSignupUserContactInfo) GetIndustryTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IndustryType.Get(), o.IndustryType.IsSet()
}

// HasIndustryType returns a boolean if a field has been set.
func (o *McmSignupUserContactInfo) HasIndustryType() bool {
	if o != nil && o.IndustryType.IsSet() {
		return true
	}

	return false
}

// SetIndustryType gets a reference to the given NullableString and assigns it to the IndustryType field.
func (o *McmSignupUserContactInfo) SetIndustryType(v string) {
	o.IndustryType.Set(&v)
}
// SetIndustryTypeNil sets the value for IndustryType to be an explicit nil
func (o *McmSignupUserContactInfo) SetIndustryTypeNil() {
	o.IndustryType.Set(nil)
}

// UnsetIndustryType ensures that no value is present for IndustryType, not even an explicit nil
func (o *McmSignupUserContactInfo) UnsetIndustryType() {
	o.IndustryType.Unset()
}

func (o McmSignupUserContactInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["firstName"] = o.FirstName
	}
	if true {
		toSerialize["lastName"] = o.LastName
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if o.PhoneNumber.IsSet() {
		toSerialize["phoneNumber"] = o.PhoneNumber.Get()
	}
	if true {
		toSerialize["companyName"] = o.CompanyName
	}
	if o.CompanySize.IsSet() {
		toSerialize["companySize"] = o.CompanySize.Get()
	}
	if o.IndustryType.IsSet() {
		toSerialize["industryType"] = o.IndustryType.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMcmSignupUserContactInfo struct {
	value *McmSignupUserContactInfo
	isSet bool
}

func (v NullableMcmSignupUserContactInfo) Get() *McmSignupUserContactInfo {
	return v.value
}

func (v *NullableMcmSignupUserContactInfo) Set(val *McmSignupUserContactInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMcmSignupUserContactInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMcmSignupUserContactInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcmSignupUserContactInfo(val *McmSignupUserContactInfo) *NullableMcmSignupUserContactInfo {
	return &NullableMcmSignupUserContactInfo{value: val, isSet: true}
}

func (v NullableMcmSignupUserContactInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcmSignupUserContactInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


