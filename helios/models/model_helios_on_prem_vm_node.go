/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// HeliosOnPremVMNode Params for a HeliosOnPremVM Node
type HeliosOnPremVMNode struct {
	// Specifies the IP address of the Node.
	NodeIp NullableString `json:"nodeIp"`
	// Specifies the ID of the Node.
	NodeId NullableInt64 `json:"nodeId,omitempty"`
}

// NewHeliosOnPremVMNode instantiates a new HeliosOnPremVMNode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosOnPremVMNode(nodeIp NullableString) *HeliosOnPremVMNode {
	this := HeliosOnPremVMNode{}
	this.NodeIp = nodeIp
	return &this
}

// NewHeliosOnPremVMNodeWithDefaults instantiates a new HeliosOnPremVMNode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosOnPremVMNodeWithDefaults() *HeliosOnPremVMNode {
	this := HeliosOnPremVMNode{}
	return &this
}

// GetNodeIp returns the NodeIp field value
// If the value is explicit nil, the zero value for string will be returned
func (o *HeliosOnPremVMNode) GetNodeIp() string {
	if o == nil || o.NodeIp.Get() == nil {
		var ret string
		return ret
	}

	return *o.NodeIp.Get()
}

// GetNodeIpOk returns a tuple with the NodeIp field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosOnPremVMNode) GetNodeIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NodeIp.Get(), o.NodeIp.IsSet()
}

// SetNodeIp sets field value
func (o *HeliosOnPremVMNode) SetNodeIp(v string) {
	o.NodeIp.Set(&v)
}

// GetNodeId returns the NodeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeliosOnPremVMNode) GetNodeId() int64 {
	if o == nil || o.NodeId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NodeId.Get()
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeliosOnPremVMNode) GetNodeIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NodeId.Get(), o.NodeId.IsSet()
}

// HasNodeId returns a boolean if a field has been set.
func (o *HeliosOnPremVMNode) HasNodeId() bool {
	if o != nil && o.NodeId.IsSet() {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given NullableInt64 and assigns it to the NodeId field.
func (o *HeliosOnPremVMNode) SetNodeId(v int64) {
	o.NodeId.Set(&v)
}
// SetNodeIdNil sets the value for NodeId to be an explicit nil
func (o *HeliosOnPremVMNode) SetNodeIdNil() {
	o.NodeId.Set(nil)
}

// UnsetNodeId ensures that no value is present for NodeId, not even an explicit nil
func (o *HeliosOnPremVMNode) UnsetNodeId() {
	o.NodeId.Unset()
}

func (o HeliosOnPremVMNode) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["nodeIp"] = o.NodeIp.Get()
	}
	if o.NodeId.IsSet() {
		toSerialize["nodeId"] = o.NodeId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableHeliosOnPremVMNode struct {
	value *HeliosOnPremVMNode
	isSet bool
}

func (v NullableHeliosOnPremVMNode) Get() *HeliosOnPremVMNode {
	return v.value
}

func (v *NullableHeliosOnPremVMNode) Set(val *HeliosOnPremVMNode) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosOnPremVMNode) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosOnPremVMNode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosOnPremVMNode(val *HeliosOnPremVMNode) *NullableHeliosOnPremVMNode {
	return &NullableHeliosOnPremVMNode{value: val, isSet: true}
}

func (v NullableHeliosOnPremVMNode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosOnPremVMNode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


