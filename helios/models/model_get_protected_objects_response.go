/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// GetProtectedObjectsResponse Specifies the protected objects response.
type GetProtectedObjectsResponse struct {
	// Specifies the protected object backup configuration and lastRun details if it has happned.
	Objects []ProtectedObjectInfo `json:"objects,omitempty"`
	PaginationInfo *PaginationInfo `json:"paginationInfo,omitempty"`
}

// NewGetProtectedObjectsResponse instantiates a new GetProtectedObjectsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProtectedObjectsResponse() *GetProtectedObjectsResponse {
	this := GetProtectedObjectsResponse{}
	return &this
}

// NewGetProtectedObjectsResponseWithDefaults instantiates a new GetProtectedObjectsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProtectedObjectsResponseWithDefaults() *GetProtectedObjectsResponse {
	this := GetProtectedObjectsResponse{}
	return &this
}

// GetObjects returns the Objects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetProtectedObjectsResponse) GetObjects() []ProtectedObjectInfo {
	if o == nil  {
		var ret []ProtectedObjectInfo
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetProtectedObjectsResponse) GetObjectsOk() (*[]ProtectedObjectInfo, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return &o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *GetProtectedObjectsResponse) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []ProtectedObjectInfo and assigns it to the Objects field.
func (o *GetProtectedObjectsResponse) SetObjects(v []ProtectedObjectInfo) {
	o.Objects = v
}

// GetPaginationInfo returns the PaginationInfo field value if set, zero value otherwise.
func (o *GetProtectedObjectsResponse) GetPaginationInfo() PaginationInfo {
	if o == nil || o.PaginationInfo == nil {
		var ret PaginationInfo
		return ret
	}
	return *o.PaginationInfo
}

// GetPaginationInfoOk returns a tuple with the PaginationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProtectedObjectsResponse) GetPaginationInfoOk() (*PaginationInfo, bool) {
	if o == nil || o.PaginationInfo == nil {
		return nil, false
	}
	return o.PaginationInfo, true
}

// HasPaginationInfo returns a boolean if a field has been set.
func (o *GetProtectedObjectsResponse) HasPaginationInfo() bool {
	if o != nil && o.PaginationInfo != nil {
		return true
	}

	return false
}

// SetPaginationInfo gets a reference to the given PaginationInfo and assigns it to the PaginationInfo field.
func (o *GetProtectedObjectsResponse) SetPaginationInfo(v PaginationInfo) {
	o.PaginationInfo = &v
}

func (o GetProtectedObjectsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if o.PaginationInfo != nil {
		toSerialize["paginationInfo"] = o.PaginationInfo
	}
	return json.Marshal(toSerialize)
}

type NullableGetProtectedObjectsResponse struct {
	value *GetProtectedObjectsResponse
	isSet bool
}

func (v NullableGetProtectedObjectsResponse) Get() *GetProtectedObjectsResponse {
	return v.value
}

func (v *NullableGetProtectedObjectsResponse) Set(val *GetProtectedObjectsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProtectedObjectsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProtectedObjectsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProtectedObjectsResponse(val *GetProtectedObjectsResponse) *NullableGetProtectedObjectsResponse {
	return &NullableGetProtectedObjectsResponse{value: val, isSet: true}
}

func (v NullableGetProtectedObjectsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProtectedObjectsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


