/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CreateClusterParams Specifies the parameters required to create cluster.
type CreateClusterParams struct {
	// Specifies the name of the new cluster.
	Name NullableString `json:"name"`
	// Specifies the type of the new cluster.
	Type NullableString `json:"type"`
	// Specifies whether or not to enable encryption. If encryption is enabled, all data on the Cluster will be encrypted. This can only be enabled at Cluster creation time and cannot be disabled later.
	EnableEncryption NullableBool `json:"enableEncryption"`
	NetworkConfig ClusterCreateNetworkConfig `json:"networkConfig"`
	ProxyServerConfig NullableClusterProxyServerConfig `json:"proxyServerConfig,omitempty"`
	PhysicalClusterParams *ClusterCreatePhysicalParams `json:"physicalClusterParams,omitempty"`
	VirtualClusterParams *ClusterCreateVirtualParams `json:"virtualClusterParams,omitempty"`
	CloudClusterParams NullableClusterCreateCloudParams `json:"cloudClusterParams,omitempty"`
	RigelClusterParams NullableClusterCreateRigelParams `json:"rigelClusterParams,omitempty"`
}

// NewCreateClusterParams instantiates a new CreateClusterParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateClusterParams(name NullableString, type_ NullableString, enableEncryption NullableBool, networkConfig ClusterCreateNetworkConfig) *CreateClusterParams {
	this := CreateClusterParams{}
	this.Name = name
	this.Type = type_
	this.EnableEncryption = enableEncryption
	this.NetworkConfig = networkConfig
	return &this
}

// NewCreateClusterParamsWithDefaults instantiates a new CreateClusterParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateClusterParamsWithDefaults() *CreateClusterParams {
	this := CreateClusterParams{}
	return &this
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateClusterParams) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterParams) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *CreateClusterParams) SetName(v string) {
	o.Name.Set(&v)
}

// GetType returns the Type field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateClusterParams) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}

	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterParams) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// SetType sets field value
func (o *CreateClusterParams) SetType(v string) {
	o.Type.Set(&v)
}

// GetEnableEncryption returns the EnableEncryption field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *CreateClusterParams) GetEnableEncryption() bool {
	if o == nil || o.EnableEncryption.Get() == nil {
		var ret bool
		return ret
	}

	return *o.EnableEncryption.Get()
}

// GetEnableEncryptionOk returns a tuple with the EnableEncryption field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterParams) GetEnableEncryptionOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EnableEncryption.Get(), o.EnableEncryption.IsSet()
}

// SetEnableEncryption sets field value
func (o *CreateClusterParams) SetEnableEncryption(v bool) {
	o.EnableEncryption.Set(&v)
}

// GetNetworkConfig returns the NetworkConfig field value
func (o *CreateClusterParams) GetNetworkConfig() ClusterCreateNetworkConfig {
	if o == nil {
		var ret ClusterCreateNetworkConfig
		return ret
	}

	return o.NetworkConfig
}

// GetNetworkConfigOk returns a tuple with the NetworkConfig field value
// and a boolean to check if the value has been set.
func (o *CreateClusterParams) GetNetworkConfigOk() (*ClusterCreateNetworkConfig, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetworkConfig, true
}

// SetNetworkConfig sets field value
func (o *CreateClusterParams) SetNetworkConfig(v ClusterCreateNetworkConfig) {
	o.NetworkConfig = v
}

// GetProxyServerConfig returns the ProxyServerConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterParams) GetProxyServerConfig() ClusterProxyServerConfig {
	if o == nil || o.ProxyServerConfig.Get() == nil {
		var ret ClusterProxyServerConfig
		return ret
	}
	return *o.ProxyServerConfig.Get()
}

// GetProxyServerConfigOk returns a tuple with the ProxyServerConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterParams) GetProxyServerConfigOk() (*ClusterProxyServerConfig, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProxyServerConfig.Get(), o.ProxyServerConfig.IsSet()
}

// HasProxyServerConfig returns a boolean if a field has been set.
func (o *CreateClusterParams) HasProxyServerConfig() bool {
	if o != nil && o.ProxyServerConfig.IsSet() {
		return true
	}

	return false
}

// SetProxyServerConfig gets a reference to the given NullableClusterProxyServerConfig and assigns it to the ProxyServerConfig field.
func (o *CreateClusterParams) SetProxyServerConfig(v ClusterProxyServerConfig) {
	o.ProxyServerConfig.Set(&v)
}
// SetProxyServerConfigNil sets the value for ProxyServerConfig to be an explicit nil
func (o *CreateClusterParams) SetProxyServerConfigNil() {
	o.ProxyServerConfig.Set(nil)
}

// UnsetProxyServerConfig ensures that no value is present for ProxyServerConfig, not even an explicit nil
func (o *CreateClusterParams) UnsetProxyServerConfig() {
	o.ProxyServerConfig.Unset()
}

// GetPhysicalClusterParams returns the PhysicalClusterParams field value if set, zero value otherwise.
func (o *CreateClusterParams) GetPhysicalClusterParams() ClusterCreatePhysicalParams {
	if o == nil || o.PhysicalClusterParams == nil {
		var ret ClusterCreatePhysicalParams
		return ret
	}
	return *o.PhysicalClusterParams
}

// GetPhysicalClusterParamsOk returns a tuple with the PhysicalClusterParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterParams) GetPhysicalClusterParamsOk() (*ClusterCreatePhysicalParams, bool) {
	if o == nil || o.PhysicalClusterParams == nil {
		return nil, false
	}
	return o.PhysicalClusterParams, true
}

// HasPhysicalClusterParams returns a boolean if a field has been set.
func (o *CreateClusterParams) HasPhysicalClusterParams() bool {
	if o != nil && o.PhysicalClusterParams != nil {
		return true
	}

	return false
}

// SetPhysicalClusterParams gets a reference to the given ClusterCreatePhysicalParams and assigns it to the PhysicalClusterParams field.
func (o *CreateClusterParams) SetPhysicalClusterParams(v ClusterCreatePhysicalParams) {
	o.PhysicalClusterParams = &v
}

// GetVirtualClusterParams returns the VirtualClusterParams field value if set, zero value otherwise.
func (o *CreateClusterParams) GetVirtualClusterParams() ClusterCreateVirtualParams {
	if o == nil || o.VirtualClusterParams == nil {
		var ret ClusterCreateVirtualParams
		return ret
	}
	return *o.VirtualClusterParams
}

// GetVirtualClusterParamsOk returns a tuple with the VirtualClusterParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterParams) GetVirtualClusterParamsOk() (*ClusterCreateVirtualParams, bool) {
	if o == nil || o.VirtualClusterParams == nil {
		return nil, false
	}
	return o.VirtualClusterParams, true
}

// HasVirtualClusterParams returns a boolean if a field has been set.
func (o *CreateClusterParams) HasVirtualClusterParams() bool {
	if o != nil && o.VirtualClusterParams != nil {
		return true
	}

	return false
}

// SetVirtualClusterParams gets a reference to the given ClusterCreateVirtualParams and assigns it to the VirtualClusterParams field.
func (o *CreateClusterParams) SetVirtualClusterParams(v ClusterCreateVirtualParams) {
	o.VirtualClusterParams = &v
}

// GetCloudClusterParams returns the CloudClusterParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterParams) GetCloudClusterParams() ClusterCreateCloudParams {
	if o == nil || o.CloudClusterParams.Get() == nil {
		var ret ClusterCreateCloudParams
		return ret
	}
	return *o.CloudClusterParams.Get()
}

// GetCloudClusterParamsOk returns a tuple with the CloudClusterParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterParams) GetCloudClusterParamsOk() (*ClusterCreateCloudParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CloudClusterParams.Get(), o.CloudClusterParams.IsSet()
}

// HasCloudClusterParams returns a boolean if a field has been set.
func (o *CreateClusterParams) HasCloudClusterParams() bool {
	if o != nil && o.CloudClusterParams.IsSet() {
		return true
	}

	return false
}

// SetCloudClusterParams gets a reference to the given NullableClusterCreateCloudParams and assigns it to the CloudClusterParams field.
func (o *CreateClusterParams) SetCloudClusterParams(v ClusterCreateCloudParams) {
	o.CloudClusterParams.Set(&v)
}
// SetCloudClusterParamsNil sets the value for CloudClusterParams to be an explicit nil
func (o *CreateClusterParams) SetCloudClusterParamsNil() {
	o.CloudClusterParams.Set(nil)
}

// UnsetCloudClusterParams ensures that no value is present for CloudClusterParams, not even an explicit nil
func (o *CreateClusterParams) UnsetCloudClusterParams() {
	o.CloudClusterParams.Unset()
}

// GetRigelClusterParams returns the RigelClusterParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateClusterParams) GetRigelClusterParams() ClusterCreateRigelParams {
	if o == nil || o.RigelClusterParams.Get() == nil {
		var ret ClusterCreateRigelParams
		return ret
	}
	return *o.RigelClusterParams.Get()
}

// GetRigelClusterParamsOk returns a tuple with the RigelClusterParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateClusterParams) GetRigelClusterParamsOk() (*ClusterCreateRigelParams, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RigelClusterParams.Get(), o.RigelClusterParams.IsSet()
}

// HasRigelClusterParams returns a boolean if a field has been set.
func (o *CreateClusterParams) HasRigelClusterParams() bool {
	if o != nil && o.RigelClusterParams.IsSet() {
		return true
	}

	return false
}

// SetRigelClusterParams gets a reference to the given NullableClusterCreateRigelParams and assigns it to the RigelClusterParams field.
func (o *CreateClusterParams) SetRigelClusterParams(v ClusterCreateRigelParams) {
	o.RigelClusterParams.Set(&v)
}
// SetRigelClusterParamsNil sets the value for RigelClusterParams to be an explicit nil
func (o *CreateClusterParams) SetRigelClusterParamsNil() {
	o.RigelClusterParams.Set(nil)
}

// UnsetRigelClusterParams ensures that no value is present for RigelClusterParams, not even an explicit nil
func (o *CreateClusterParams) UnsetRigelClusterParams() {
	o.RigelClusterParams.Unset()
}

func (o CreateClusterParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name.Get()
	}
	if true {
		toSerialize["type"] = o.Type.Get()
	}
	if true {
		toSerialize["enableEncryption"] = o.EnableEncryption.Get()
	}
	if true {
		toSerialize["networkConfig"] = o.NetworkConfig
	}
	if o.ProxyServerConfig.IsSet() {
		toSerialize["proxyServerConfig"] = o.ProxyServerConfig.Get()
	}
	if o.PhysicalClusterParams != nil {
		toSerialize["physicalClusterParams"] = o.PhysicalClusterParams
	}
	if o.VirtualClusterParams != nil {
		toSerialize["virtualClusterParams"] = o.VirtualClusterParams
	}
	if o.CloudClusterParams.IsSet() {
		toSerialize["cloudClusterParams"] = o.CloudClusterParams.Get()
	}
	if o.RigelClusterParams.IsSet() {
		toSerialize["rigelClusterParams"] = o.RigelClusterParams.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCreateClusterParams struct {
	value *CreateClusterParams
	isSet bool
}

func (v NullableCreateClusterParams) Get() *CreateClusterParams {
	return v.value
}

func (v *NullableCreateClusterParams) Set(val *CreateClusterParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateClusterParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateClusterParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateClusterParams(val *CreateClusterParams) *NullableCreateClusterParams {
	return &NullableCreateClusterParams{value: val, isSet: true}
}

func (v NullableCreateClusterParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateClusterParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


