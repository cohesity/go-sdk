/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// AuditLogsActions Specifies actions of audit logs.
type AuditLogsActions struct {
	// Specifies a list of audit logs actions.
	Actions []string `json:"actions,omitempty"`
}

// NewAuditLogsActions instantiates a new AuditLogsActions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogsActions() *AuditLogsActions {
	this := AuditLogsActions{}
	return &this
}

// NewAuditLogsActionsWithDefaults instantiates a new AuditLogsActions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogsActionsWithDefaults() *AuditLogsActions {
	this := AuditLogsActions{}
	return &this
}

// GetActions returns the Actions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuditLogsActions) GetActions() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuditLogsActions) GetActionsOk() (*[]string, bool) {
	if o == nil || o.Actions == nil {
		return nil, false
	}
	return &o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *AuditLogsActions) HasActions() bool {
	if o != nil && o.Actions != nil {
		return true
	}

	return false
}

// SetActions gets a reference to the given []string and assigns it to the Actions field.
func (o *AuditLogsActions) SetActions(v []string) {
	o.Actions = v
}

func (o AuditLogsActions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Actions != nil {
		toSerialize["actions"] = o.Actions
	}
	return json.Marshal(toSerialize)
}

type NullableAuditLogsActions struct {
	value *AuditLogsActions
	isSet bool
}

func (v NullableAuditLogsActions) Get() *AuditLogsActions {
	return v.value
}

func (v *NullableAuditLogsActions) Set(val *AuditLogsActions) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogsActions) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogsActions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogsActions(val *AuditLogsActions) *NullableAuditLogsActions {
	return &NullableAuditLogsActions{value: val, isSet: true}
}

func (v NullableAuditLogsActions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogsActions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


