/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// TenantConfig All configurations related to tenants for an account
type TenantConfig struct {
	// Specifies whether organizations is enabled for the account.
	OrganizationsEnabled NullableBool `json:"organizationsEnabled"`
}

// NewTenantConfig instantiates a new TenantConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantConfig(organizationsEnabled NullableBool) *TenantConfig {
	this := TenantConfig{}
	this.OrganizationsEnabled = organizationsEnabled
	return &this
}

// NewTenantConfigWithDefaults instantiates a new TenantConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantConfigWithDefaults() *TenantConfig {
	this := TenantConfig{}
	return &this
}

// GetOrganizationsEnabled returns the OrganizationsEnabled field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *TenantConfig) GetOrganizationsEnabled() bool {
	if o == nil || o.OrganizationsEnabled.Get() == nil {
		var ret bool
		return ret
	}

	return *o.OrganizationsEnabled.Get()
}

// GetOrganizationsEnabledOk returns a tuple with the OrganizationsEnabled field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantConfig) GetOrganizationsEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OrganizationsEnabled.Get(), o.OrganizationsEnabled.IsSet()
}

// SetOrganizationsEnabled sets field value
func (o *TenantConfig) SetOrganizationsEnabled(v bool) {
	o.OrganizationsEnabled.Set(&v)
}

func (o TenantConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["organizationsEnabled"] = o.OrganizationsEnabled.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTenantConfig struct {
	value *TenantConfig
	isSet bool
}

func (v NullableTenantConfig) Get() *TenantConfig {
	return v.value
}

func (v *NullableTenantConfig) Set(val *TenantConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantConfig(val *TenantConfig) *NullableTenantConfig {
	return &NullableTenantConfig{value: val, isSet: true}
}

func (v NullableTenantConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


