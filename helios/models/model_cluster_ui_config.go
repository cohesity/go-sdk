/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ClusterUiConfig Specifies the params to update UI config.
type ClusterUiConfig struct {
	// Specifies the customized UI config.
	UiConfig NullableString `json:"uiConfig"`
}

// NewClusterUiConfig instantiates a new ClusterUiConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterUiConfig(uiConfig NullableString) *ClusterUiConfig {
	this := ClusterUiConfig{}
	this.UiConfig = uiConfig
	return &this
}

// NewClusterUiConfigWithDefaults instantiates a new ClusterUiConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterUiConfigWithDefaults() *ClusterUiConfig {
	this := ClusterUiConfig{}
	return &this
}

// GetUiConfig returns the UiConfig field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ClusterUiConfig) GetUiConfig() string {
	if o == nil || o.UiConfig.Get() == nil {
		var ret string
		return ret
	}

	return *o.UiConfig.Get()
}

// GetUiConfigOk returns a tuple with the UiConfig field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterUiConfig) GetUiConfigOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UiConfig.Get(), o.UiConfig.IsSet()
}

// SetUiConfig sets field value
func (o *ClusterUiConfig) SetUiConfig(v string) {
	o.UiConfig.Set(&v)
}

func (o ClusterUiConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uiConfig"] = o.UiConfig.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableClusterUiConfig struct {
	value *ClusterUiConfig
	isSet bool
}

func (v NullableClusterUiConfig) Get() *ClusterUiConfig {
	return v.value
}

func (v *NullableClusterUiConfig) Set(val *ClusterUiConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterUiConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterUiConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterUiConfig(val *ClusterUiConfig) *NullableClusterUiConfig {
	return &NullableClusterUiConfig{value: val, isSet: true}
}

func (v NullableClusterUiConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterUiConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


