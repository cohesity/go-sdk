/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// AwsCommonObjectProtectionParams Specifies the parameters which are specific to AWS related Object Protection and common to different AWS protection types.
type AwsCommonObjectProtectionParams struct {
	// Specifies the AWS Protection Job type.
	ProtectionType *string `json:"protectionType,omitempty"`
}

// NewAwsCommonObjectProtectionParams instantiates a new AwsCommonObjectProtectionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsCommonObjectProtectionParams() *AwsCommonObjectProtectionParams {
	this := AwsCommonObjectProtectionParams{}
	return &this
}

// NewAwsCommonObjectProtectionParamsWithDefaults instantiates a new AwsCommonObjectProtectionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsCommonObjectProtectionParamsWithDefaults() *AwsCommonObjectProtectionParams {
	this := AwsCommonObjectProtectionParams{}
	return &this
}

// GetProtectionType returns the ProtectionType field value if set, zero value otherwise.
func (o *AwsCommonObjectProtectionParams) GetProtectionType() string {
	if o == nil || o.ProtectionType == nil {
		var ret string
		return ret
	}
	return *o.ProtectionType
}

// GetProtectionTypeOk returns a tuple with the ProtectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsCommonObjectProtectionParams) GetProtectionTypeOk() (*string, bool) {
	if o == nil || o.ProtectionType == nil {
		return nil, false
	}
	return o.ProtectionType, true
}

// HasProtectionType returns a boolean if a field has been set.
func (o *AwsCommonObjectProtectionParams) HasProtectionType() bool {
	if o != nil && o.ProtectionType != nil {
		return true
	}

	return false
}

// SetProtectionType gets a reference to the given string and assigns it to the ProtectionType field.
func (o *AwsCommonObjectProtectionParams) SetProtectionType(v string) {
	o.ProtectionType = &v
}

func (o AwsCommonObjectProtectionParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProtectionType != nil {
		toSerialize["protectionType"] = o.ProtectionType
	}
	return json.Marshal(toSerialize)
}

type NullableAwsCommonObjectProtectionParams struct {
	value *AwsCommonObjectProtectionParams
	isSet bool
}

func (v NullableAwsCommonObjectProtectionParams) Get() *AwsCommonObjectProtectionParams {
	return v.value
}

func (v *NullableAwsCommonObjectProtectionParams) Set(val *AwsCommonObjectProtectionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsCommonObjectProtectionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsCommonObjectProtectionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsCommonObjectProtectionParams(val *AwsCommonObjectProtectionParams) *NullableAwsCommonObjectProtectionParams {
	return &NullableAwsCommonObjectProtectionParams{value: val, isSet: true}
}

func (v NullableAwsCommonObjectProtectionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsCommonObjectProtectionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


