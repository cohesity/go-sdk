/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// RecoverAzureVmNewSourceConfig Specifies the new destination Source configuration where the VMs will be recovered.
type RecoverAzureVmNewSourceConfig struct {
	// Specifies the id of the parent source to recover the VMs.
	Source NullableRecoveryObjectIdentifier `json:"source"`
	// Specifies the Azure resource group.
	ResourceGroup NullableRecoveryObjectIdentifier `json:"resourceGroup"`
	// Specifies the storage account that will contain the storage container
	StorageAccount NullableRecoveryObjectIdentifier `json:"storageAccount"`
	// Specifies the storage container within the above storage account.
	StorageContainer NullableRecoveryObjectIdentifier `json:"storageContainer"`
	// Specifies the networking configuration to be applied to the recovered VMs.
	NetworkConfig NullableRecoverAzureVmNewSourceNetworkConfig `json:"networkConfig"`
	// Specifies id of the resource group for the selected storage account.
	StorageResourceGroup NullableRecoveryObjectIdentifier `json:"storageResourceGroup"`
	// Specifies the type of VM (e.g. small, medium, large) when cloning/restoring the VM in Azure.
	ComputeOption NullableRecoveryObjectIdentifier `json:"computeOption"`
	// Specifies the availability set.
	AvailabilitySet NullableRecoveryObjectIdentifier `json:"availabilitySet,omitempty"`
}

// NewRecoverAzureVmNewSourceConfig instantiates a new RecoverAzureVmNewSourceConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverAzureVmNewSourceConfig(source NullableRecoveryObjectIdentifier, resourceGroup NullableRecoveryObjectIdentifier, storageAccount NullableRecoveryObjectIdentifier, storageContainer NullableRecoveryObjectIdentifier, networkConfig NullableRecoverAzureVmNewSourceNetworkConfig, storageResourceGroup NullableRecoveryObjectIdentifier, computeOption NullableRecoveryObjectIdentifier) *RecoverAzureVmNewSourceConfig {
	this := RecoverAzureVmNewSourceConfig{}
	this.Source = source
	this.ResourceGroup = resourceGroup
	this.StorageAccount = storageAccount
	this.StorageContainer = storageContainer
	this.NetworkConfig = networkConfig
	this.StorageResourceGroup = storageResourceGroup
	this.ComputeOption = computeOption
	return &this
}

// NewRecoverAzureVmNewSourceConfigWithDefaults instantiates a new RecoverAzureVmNewSourceConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverAzureVmNewSourceConfigWithDefaults() *RecoverAzureVmNewSourceConfig {
	this := RecoverAzureVmNewSourceConfig{}
	return &this
}

// GetSource returns the Source field value
// If the value is explicit nil, the zero value for RecoveryObjectIdentifier will be returned
func (o *RecoverAzureVmNewSourceConfig) GetSource() RecoveryObjectIdentifier {
	if o == nil || o.Source.Get() == nil {
		var ret RecoveryObjectIdentifier
		return ret
	}

	return *o.Source.Get()
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAzureVmNewSourceConfig) GetSourceOk() (*RecoveryObjectIdentifier, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Source.Get(), o.Source.IsSet()
}

// SetSource sets field value
func (o *RecoverAzureVmNewSourceConfig) SetSource(v RecoveryObjectIdentifier) {
	o.Source.Set(&v)
}

// GetResourceGroup returns the ResourceGroup field value
// If the value is explicit nil, the zero value for RecoveryObjectIdentifier will be returned
func (o *RecoverAzureVmNewSourceConfig) GetResourceGroup() RecoveryObjectIdentifier {
	if o == nil || o.ResourceGroup.Get() == nil {
		var ret RecoveryObjectIdentifier
		return ret
	}

	return *o.ResourceGroup.Get()
}

// GetResourceGroupOk returns a tuple with the ResourceGroup field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAzureVmNewSourceConfig) GetResourceGroupOk() (*RecoveryObjectIdentifier, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ResourceGroup.Get(), o.ResourceGroup.IsSet()
}

// SetResourceGroup sets field value
func (o *RecoverAzureVmNewSourceConfig) SetResourceGroup(v RecoveryObjectIdentifier) {
	o.ResourceGroup.Set(&v)
}

// GetStorageAccount returns the StorageAccount field value
// If the value is explicit nil, the zero value for RecoveryObjectIdentifier will be returned
func (o *RecoverAzureVmNewSourceConfig) GetStorageAccount() RecoveryObjectIdentifier {
	if o == nil || o.StorageAccount.Get() == nil {
		var ret RecoveryObjectIdentifier
		return ret
	}

	return *o.StorageAccount.Get()
}

// GetStorageAccountOk returns a tuple with the StorageAccount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAzureVmNewSourceConfig) GetStorageAccountOk() (*RecoveryObjectIdentifier, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StorageAccount.Get(), o.StorageAccount.IsSet()
}

// SetStorageAccount sets field value
func (o *RecoverAzureVmNewSourceConfig) SetStorageAccount(v RecoveryObjectIdentifier) {
	o.StorageAccount.Set(&v)
}

// GetStorageContainer returns the StorageContainer field value
// If the value is explicit nil, the zero value for RecoveryObjectIdentifier will be returned
func (o *RecoverAzureVmNewSourceConfig) GetStorageContainer() RecoveryObjectIdentifier {
	if o == nil || o.StorageContainer.Get() == nil {
		var ret RecoveryObjectIdentifier
		return ret
	}

	return *o.StorageContainer.Get()
}

// GetStorageContainerOk returns a tuple with the StorageContainer field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAzureVmNewSourceConfig) GetStorageContainerOk() (*RecoveryObjectIdentifier, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StorageContainer.Get(), o.StorageContainer.IsSet()
}

// SetStorageContainer sets field value
func (o *RecoverAzureVmNewSourceConfig) SetStorageContainer(v RecoveryObjectIdentifier) {
	o.StorageContainer.Set(&v)
}

// GetNetworkConfig returns the NetworkConfig field value
// If the value is explicit nil, the zero value for RecoverAzureVmNewSourceNetworkConfig will be returned
func (o *RecoverAzureVmNewSourceConfig) GetNetworkConfig() RecoverAzureVmNewSourceNetworkConfig {
	if o == nil || o.NetworkConfig.Get() == nil {
		var ret RecoverAzureVmNewSourceNetworkConfig
		return ret
	}

	return *o.NetworkConfig.Get()
}

// GetNetworkConfigOk returns a tuple with the NetworkConfig field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAzureVmNewSourceConfig) GetNetworkConfigOk() (*RecoverAzureVmNewSourceNetworkConfig, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkConfig.Get(), o.NetworkConfig.IsSet()
}

// SetNetworkConfig sets field value
func (o *RecoverAzureVmNewSourceConfig) SetNetworkConfig(v RecoverAzureVmNewSourceNetworkConfig) {
	o.NetworkConfig.Set(&v)
}

// GetStorageResourceGroup returns the StorageResourceGroup field value
// If the value is explicit nil, the zero value for RecoveryObjectIdentifier will be returned
func (o *RecoverAzureVmNewSourceConfig) GetStorageResourceGroup() RecoveryObjectIdentifier {
	if o == nil || o.StorageResourceGroup.Get() == nil {
		var ret RecoveryObjectIdentifier
		return ret
	}

	return *o.StorageResourceGroup.Get()
}

// GetStorageResourceGroupOk returns a tuple with the StorageResourceGroup field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAzureVmNewSourceConfig) GetStorageResourceGroupOk() (*RecoveryObjectIdentifier, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StorageResourceGroup.Get(), o.StorageResourceGroup.IsSet()
}

// SetStorageResourceGroup sets field value
func (o *RecoverAzureVmNewSourceConfig) SetStorageResourceGroup(v RecoveryObjectIdentifier) {
	o.StorageResourceGroup.Set(&v)
}

// GetComputeOption returns the ComputeOption field value
// If the value is explicit nil, the zero value for RecoveryObjectIdentifier will be returned
func (o *RecoverAzureVmNewSourceConfig) GetComputeOption() RecoveryObjectIdentifier {
	if o == nil || o.ComputeOption.Get() == nil {
		var ret RecoveryObjectIdentifier
		return ret
	}

	return *o.ComputeOption.Get()
}

// GetComputeOptionOk returns a tuple with the ComputeOption field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAzureVmNewSourceConfig) GetComputeOptionOk() (*RecoveryObjectIdentifier, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ComputeOption.Get(), o.ComputeOption.IsSet()
}

// SetComputeOption sets field value
func (o *RecoverAzureVmNewSourceConfig) SetComputeOption(v RecoveryObjectIdentifier) {
	o.ComputeOption.Set(&v)
}

// GetAvailabilitySet returns the AvailabilitySet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverAzureVmNewSourceConfig) GetAvailabilitySet() RecoveryObjectIdentifier {
	if o == nil || o.AvailabilitySet.Get() == nil {
		var ret RecoveryObjectIdentifier
		return ret
	}
	return *o.AvailabilitySet.Get()
}

// GetAvailabilitySetOk returns a tuple with the AvailabilitySet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverAzureVmNewSourceConfig) GetAvailabilitySetOk() (*RecoveryObjectIdentifier, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AvailabilitySet.Get(), o.AvailabilitySet.IsSet()
}

// HasAvailabilitySet returns a boolean if a field has been set.
func (o *RecoverAzureVmNewSourceConfig) HasAvailabilitySet() bool {
	if o != nil && o.AvailabilitySet.IsSet() {
		return true
	}

	return false
}

// SetAvailabilitySet gets a reference to the given NullableRecoveryObjectIdentifier and assigns it to the AvailabilitySet field.
func (o *RecoverAzureVmNewSourceConfig) SetAvailabilitySet(v RecoveryObjectIdentifier) {
	o.AvailabilitySet.Set(&v)
}
// SetAvailabilitySetNil sets the value for AvailabilitySet to be an explicit nil
func (o *RecoverAzureVmNewSourceConfig) SetAvailabilitySetNil() {
	o.AvailabilitySet.Set(nil)
}

// UnsetAvailabilitySet ensures that no value is present for AvailabilitySet, not even an explicit nil
func (o *RecoverAzureVmNewSourceConfig) UnsetAvailabilitySet() {
	o.AvailabilitySet.Unset()
}

func (o RecoverAzureVmNewSourceConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["source"] = o.Source.Get()
	}
	if true {
		toSerialize["resourceGroup"] = o.ResourceGroup.Get()
	}
	if true {
		toSerialize["storageAccount"] = o.StorageAccount.Get()
	}
	if true {
		toSerialize["storageContainer"] = o.StorageContainer.Get()
	}
	if true {
		toSerialize["networkConfig"] = o.NetworkConfig.Get()
	}
	if true {
		toSerialize["storageResourceGroup"] = o.StorageResourceGroup.Get()
	}
	if true {
		toSerialize["computeOption"] = o.ComputeOption.Get()
	}
	if o.AvailabilitySet.IsSet() {
		toSerialize["availabilitySet"] = o.AvailabilitySet.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverAzureVmNewSourceConfig struct {
	value *RecoverAzureVmNewSourceConfig
	isSet bool
}

func (v NullableRecoverAzureVmNewSourceConfig) Get() *RecoverAzureVmNewSourceConfig {
	return v.value
}

func (v *NullableRecoverAzureVmNewSourceConfig) Set(val *RecoverAzureVmNewSourceConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverAzureVmNewSourceConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverAzureVmNewSourceConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverAzureVmNewSourceConfig(val *RecoverAzureVmNewSourceConfig) *NullableRecoverAzureVmNewSourceConfig {
	return &NullableRecoverAzureVmNewSourceConfig{value: val, isSet: true}
}

func (v NullableRecoverAzureVmNewSourceConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverAzureVmNewSourceConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


