/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// FleetNetworkParams Specifies various network params for the fleet.
type FleetNetworkParams struct {
	// Specifies vpc for the fleet.
	Vpc NullableString `json:"vpc"`
	// Specifies subnet for the fleet.
	Subnet NullableString `json:"subnet"`
}

// NewFleetNetworkParams instantiates a new FleetNetworkParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetNetworkParams(vpc NullableString, subnet NullableString) *FleetNetworkParams {
	this := FleetNetworkParams{}
	this.Vpc = vpc
	this.Subnet = subnet
	return &this
}

// NewFleetNetworkParamsWithDefaults instantiates a new FleetNetworkParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetNetworkParamsWithDefaults() *FleetNetworkParams {
	this := FleetNetworkParams{}
	return &this
}

// GetVpc returns the Vpc field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FleetNetworkParams) GetVpc() string {
	if o == nil || o.Vpc.Get() == nil {
		var ret string
		return ret
	}

	return *o.Vpc.Get()
}

// GetVpcOk returns a tuple with the Vpc field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FleetNetworkParams) GetVpcOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Vpc.Get(), o.Vpc.IsSet()
}

// SetVpc sets field value
func (o *FleetNetworkParams) SetVpc(v string) {
	o.Vpc.Set(&v)
}

// GetSubnet returns the Subnet field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FleetNetworkParams) GetSubnet() string {
	if o == nil || o.Subnet.Get() == nil {
		var ret string
		return ret
	}

	return *o.Subnet.Get()
}

// GetSubnetOk returns a tuple with the Subnet field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FleetNetworkParams) GetSubnetOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Subnet.Get(), o.Subnet.IsSet()
}

// SetSubnet sets field value
func (o *FleetNetworkParams) SetSubnet(v string) {
	o.Subnet.Set(&v)
}

func (o FleetNetworkParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["vpc"] = o.Vpc.Get()
	}
	if true {
		toSerialize["subnet"] = o.Subnet.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableFleetNetworkParams struct {
	value *FleetNetworkParams
	isSet bool
}

func (v NullableFleetNetworkParams) Get() *FleetNetworkParams {
	return v.value
}

func (v *NullableFleetNetworkParams) Set(val *FleetNetworkParams) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetNetworkParams) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetNetworkParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetNetworkParams(val *FleetNetworkParams) *NullableFleetNetworkParams {
	return &NullableFleetNetworkParams{value: val, isSet: true}
}

func (v NullableFleetNetworkParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetNetworkParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


