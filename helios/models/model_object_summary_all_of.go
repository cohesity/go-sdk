/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// ObjectSummaryAllOf struct for ObjectSummaryAllOf
type ObjectSummaryAllOf struct {
	// Specifies the hash identifier of the object.
	ObjectHash NullableString `json:"objectHash,omitempty"`
	// Specifies the type of the object.
	ObjectType NullableString `json:"objectType,omitempty"`
	// Specifies the logical size of object in bytes.
	LogicalSizeBytes NullableInt64 `json:"logicalSizeBytes,omitempty"`
	// Specifies the uuid which is a unique identifier of the object.
	Uuid NullableString `json:"uuid,omitempty"`
	// Specifies the global id which is a unique identifier of the object.
	GlobalId NullableString `json:"globalId,omitempty"`
	// Specifies the protection type of the object if any.
	ProtectionType NullableString `json:"protectionType,omitempty"`
	// Specifies the operating system type of the object.
	OsType NullableString `json:"osType,omitempty"`
	VCenterSummary *ObjectTypeVCenterParams `json:"vCenterSummary,omitempty"`
	SharepointSiteSummary *SharepointObjectParams `json:"sharepointSiteSummary,omitempty"`
}

// NewObjectSummaryAllOf instantiates a new ObjectSummaryAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectSummaryAllOf() *ObjectSummaryAllOf {
	this := ObjectSummaryAllOf{}
	return &this
}

// NewObjectSummaryAllOfWithDefaults instantiates a new ObjectSummaryAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectSummaryAllOfWithDefaults() *ObjectSummaryAllOf {
	this := ObjectSummaryAllOf{}
	return &this
}

// GetObjectHash returns the ObjectHash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSummaryAllOf) GetObjectHash() string {
	if o == nil || o.ObjectHash.Get() == nil {
		var ret string
		return ret
	}
	return *o.ObjectHash.Get()
}

// GetObjectHashOk returns a tuple with the ObjectHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSummaryAllOf) GetObjectHashOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ObjectHash.Get(), o.ObjectHash.IsSet()
}

// HasObjectHash returns a boolean if a field has been set.
func (o *ObjectSummaryAllOf) HasObjectHash() bool {
	if o != nil && o.ObjectHash.IsSet() {
		return true
	}

	return false
}

// SetObjectHash gets a reference to the given NullableString and assigns it to the ObjectHash field.
func (o *ObjectSummaryAllOf) SetObjectHash(v string) {
	o.ObjectHash.Set(&v)
}
// SetObjectHashNil sets the value for ObjectHash to be an explicit nil
func (o *ObjectSummaryAllOf) SetObjectHashNil() {
	o.ObjectHash.Set(nil)
}

// UnsetObjectHash ensures that no value is present for ObjectHash, not even an explicit nil
func (o *ObjectSummaryAllOf) UnsetObjectHash() {
	o.ObjectHash.Unset()
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSummaryAllOf) GetObjectType() string {
	if o == nil || o.ObjectType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ObjectType.Get()
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSummaryAllOf) GetObjectTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ObjectType.Get(), o.ObjectType.IsSet()
}

// HasObjectType returns a boolean if a field has been set.
func (o *ObjectSummaryAllOf) HasObjectType() bool {
	if o != nil && o.ObjectType.IsSet() {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given NullableString and assigns it to the ObjectType field.
func (o *ObjectSummaryAllOf) SetObjectType(v string) {
	o.ObjectType.Set(&v)
}
// SetObjectTypeNil sets the value for ObjectType to be an explicit nil
func (o *ObjectSummaryAllOf) SetObjectTypeNil() {
	o.ObjectType.Set(nil)
}

// UnsetObjectType ensures that no value is present for ObjectType, not even an explicit nil
func (o *ObjectSummaryAllOf) UnsetObjectType() {
	o.ObjectType.Unset()
}

// GetLogicalSizeBytes returns the LogicalSizeBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSummaryAllOf) GetLogicalSizeBytes() int64 {
	if o == nil || o.LogicalSizeBytes.Get() == nil {
		var ret int64
		return ret
	}
	return *o.LogicalSizeBytes.Get()
}

// GetLogicalSizeBytesOk returns a tuple with the LogicalSizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSummaryAllOf) GetLogicalSizeBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LogicalSizeBytes.Get(), o.LogicalSizeBytes.IsSet()
}

// HasLogicalSizeBytes returns a boolean if a field has been set.
func (o *ObjectSummaryAllOf) HasLogicalSizeBytes() bool {
	if o != nil && o.LogicalSizeBytes.IsSet() {
		return true
	}

	return false
}

// SetLogicalSizeBytes gets a reference to the given NullableInt64 and assigns it to the LogicalSizeBytes field.
func (o *ObjectSummaryAllOf) SetLogicalSizeBytes(v int64) {
	o.LogicalSizeBytes.Set(&v)
}
// SetLogicalSizeBytesNil sets the value for LogicalSizeBytes to be an explicit nil
func (o *ObjectSummaryAllOf) SetLogicalSizeBytesNil() {
	o.LogicalSizeBytes.Set(nil)
}

// UnsetLogicalSizeBytes ensures that no value is present for LogicalSizeBytes, not even an explicit nil
func (o *ObjectSummaryAllOf) UnsetLogicalSizeBytes() {
	o.LogicalSizeBytes.Unset()
}

// GetUuid returns the Uuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSummaryAllOf) GetUuid() string {
	if o == nil || o.Uuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uuid.Get()
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSummaryAllOf) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Uuid.Get(), o.Uuid.IsSet()
}

// HasUuid returns a boolean if a field has been set.
func (o *ObjectSummaryAllOf) HasUuid() bool {
	if o != nil && o.Uuid.IsSet() {
		return true
	}

	return false
}

// SetUuid gets a reference to the given NullableString and assigns it to the Uuid field.
func (o *ObjectSummaryAllOf) SetUuid(v string) {
	o.Uuid.Set(&v)
}
// SetUuidNil sets the value for Uuid to be an explicit nil
func (o *ObjectSummaryAllOf) SetUuidNil() {
	o.Uuid.Set(nil)
}

// UnsetUuid ensures that no value is present for Uuid, not even an explicit nil
func (o *ObjectSummaryAllOf) UnsetUuid() {
	o.Uuid.Unset()
}

// GetGlobalId returns the GlobalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSummaryAllOf) GetGlobalId() string {
	if o == nil || o.GlobalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.GlobalId.Get()
}

// GetGlobalIdOk returns a tuple with the GlobalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSummaryAllOf) GetGlobalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GlobalId.Get(), o.GlobalId.IsSet()
}

// HasGlobalId returns a boolean if a field has been set.
func (o *ObjectSummaryAllOf) HasGlobalId() bool {
	if o != nil && o.GlobalId.IsSet() {
		return true
	}

	return false
}

// SetGlobalId gets a reference to the given NullableString and assigns it to the GlobalId field.
func (o *ObjectSummaryAllOf) SetGlobalId(v string) {
	o.GlobalId.Set(&v)
}
// SetGlobalIdNil sets the value for GlobalId to be an explicit nil
func (o *ObjectSummaryAllOf) SetGlobalIdNil() {
	o.GlobalId.Set(nil)
}

// UnsetGlobalId ensures that no value is present for GlobalId, not even an explicit nil
func (o *ObjectSummaryAllOf) UnsetGlobalId() {
	o.GlobalId.Unset()
}

// GetProtectionType returns the ProtectionType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSummaryAllOf) GetProtectionType() string {
	if o == nil || o.ProtectionType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProtectionType.Get()
}

// GetProtectionTypeOk returns a tuple with the ProtectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSummaryAllOf) GetProtectionTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionType.Get(), o.ProtectionType.IsSet()
}

// HasProtectionType returns a boolean if a field has been set.
func (o *ObjectSummaryAllOf) HasProtectionType() bool {
	if o != nil && o.ProtectionType.IsSet() {
		return true
	}

	return false
}

// SetProtectionType gets a reference to the given NullableString and assigns it to the ProtectionType field.
func (o *ObjectSummaryAllOf) SetProtectionType(v string) {
	o.ProtectionType.Set(&v)
}
// SetProtectionTypeNil sets the value for ProtectionType to be an explicit nil
func (o *ObjectSummaryAllOf) SetProtectionTypeNil() {
	o.ProtectionType.Set(nil)
}

// UnsetProtectionType ensures that no value is present for ProtectionType, not even an explicit nil
func (o *ObjectSummaryAllOf) UnsetProtectionType() {
	o.ProtectionType.Unset()
}

// GetOsType returns the OsType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjectSummaryAllOf) GetOsType() string {
	if o == nil || o.OsType.Get() == nil {
		var ret string
		return ret
	}
	return *o.OsType.Get()
}

// GetOsTypeOk returns a tuple with the OsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjectSummaryAllOf) GetOsTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OsType.Get(), o.OsType.IsSet()
}

// HasOsType returns a boolean if a field has been set.
func (o *ObjectSummaryAllOf) HasOsType() bool {
	if o != nil && o.OsType.IsSet() {
		return true
	}

	return false
}

// SetOsType gets a reference to the given NullableString and assigns it to the OsType field.
func (o *ObjectSummaryAllOf) SetOsType(v string) {
	o.OsType.Set(&v)
}
// SetOsTypeNil sets the value for OsType to be an explicit nil
func (o *ObjectSummaryAllOf) SetOsTypeNil() {
	o.OsType.Set(nil)
}

// UnsetOsType ensures that no value is present for OsType, not even an explicit nil
func (o *ObjectSummaryAllOf) UnsetOsType() {
	o.OsType.Unset()
}

// GetVCenterSummary returns the VCenterSummary field value if set, zero value otherwise.
func (o *ObjectSummaryAllOf) GetVCenterSummary() ObjectTypeVCenterParams {
	if o == nil || o.VCenterSummary == nil {
		var ret ObjectTypeVCenterParams
		return ret
	}
	return *o.VCenterSummary
}

// GetVCenterSummaryOk returns a tuple with the VCenterSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectSummaryAllOf) GetVCenterSummaryOk() (*ObjectTypeVCenterParams, bool) {
	if o == nil || o.VCenterSummary == nil {
		return nil, false
	}
	return o.VCenterSummary, true
}

// HasVCenterSummary returns a boolean if a field has been set.
func (o *ObjectSummaryAllOf) HasVCenterSummary() bool {
	if o != nil && o.VCenterSummary != nil {
		return true
	}

	return false
}

// SetVCenterSummary gets a reference to the given ObjectTypeVCenterParams and assigns it to the VCenterSummary field.
func (o *ObjectSummaryAllOf) SetVCenterSummary(v ObjectTypeVCenterParams) {
	o.VCenterSummary = &v
}

// GetSharepointSiteSummary returns the SharepointSiteSummary field value if set, zero value otherwise.
func (o *ObjectSummaryAllOf) GetSharepointSiteSummary() SharepointObjectParams {
	if o == nil || o.SharepointSiteSummary == nil {
		var ret SharepointObjectParams
		return ret
	}
	return *o.SharepointSiteSummary
}

// GetSharepointSiteSummaryOk returns a tuple with the SharepointSiteSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectSummaryAllOf) GetSharepointSiteSummaryOk() (*SharepointObjectParams, bool) {
	if o == nil || o.SharepointSiteSummary == nil {
		return nil, false
	}
	return o.SharepointSiteSummary, true
}

// HasSharepointSiteSummary returns a boolean if a field has been set.
func (o *ObjectSummaryAllOf) HasSharepointSiteSummary() bool {
	if o != nil && o.SharepointSiteSummary != nil {
		return true
	}

	return false
}

// SetSharepointSiteSummary gets a reference to the given SharepointObjectParams and assigns it to the SharepointSiteSummary field.
func (o *ObjectSummaryAllOf) SetSharepointSiteSummary(v SharepointObjectParams) {
	o.SharepointSiteSummary = &v
}

func (o ObjectSummaryAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ObjectHash.IsSet() {
		toSerialize["objectHash"] = o.ObjectHash.Get()
	}
	if o.ObjectType.IsSet() {
		toSerialize["objectType"] = o.ObjectType.Get()
	}
	if o.LogicalSizeBytes.IsSet() {
		toSerialize["logicalSizeBytes"] = o.LogicalSizeBytes.Get()
	}
	if o.Uuid.IsSet() {
		toSerialize["uuid"] = o.Uuid.Get()
	}
	if o.GlobalId.IsSet() {
		toSerialize["globalId"] = o.GlobalId.Get()
	}
	if o.ProtectionType.IsSet() {
		toSerialize["protectionType"] = o.ProtectionType.Get()
	}
	if o.OsType.IsSet() {
		toSerialize["osType"] = o.OsType.Get()
	}
	if o.VCenterSummary != nil {
		toSerialize["vCenterSummary"] = o.VCenterSummary
	}
	if o.SharepointSiteSummary != nil {
		toSerialize["sharepointSiteSummary"] = o.SharepointSiteSummary
	}
	return json.Marshal(toSerialize)
}

type NullableObjectSummaryAllOf struct {
	value *ObjectSummaryAllOf
	isSet bool
}

func (v NullableObjectSummaryAllOf) Get() *ObjectSummaryAllOf {
	return v.value
}

func (v *NullableObjectSummaryAllOf) Set(val *ObjectSummaryAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectSummaryAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectSummaryAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectSummaryAllOf(val *ObjectSummaryAllOf) *NullableObjectSummaryAllOf {
	return &NullableObjectSummaryAllOf{value: val, isSet: true}
}

func (v NullableObjectSummaryAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectSummaryAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


