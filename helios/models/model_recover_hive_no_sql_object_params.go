/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// RecoverHiveNoSqlObjectParams Specifies the fully qualified object name and other attributes of each object to be recovered.
type RecoverHiveNoSqlObjectParams struct {
	// Specifies the fully qualified name of the object to be restored.
	ObjectName NullableString `json:"objectName"`
}

// NewRecoverHiveNoSqlObjectParams instantiates a new RecoverHiveNoSqlObjectParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverHiveNoSqlObjectParams(objectName NullableString) *RecoverHiveNoSqlObjectParams {
	this := RecoverHiveNoSqlObjectParams{}
	this.ObjectName = objectName
	return &this
}

// NewRecoverHiveNoSqlObjectParamsWithDefaults instantiates a new RecoverHiveNoSqlObjectParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverHiveNoSqlObjectParamsWithDefaults() *RecoverHiveNoSqlObjectParams {
	this := RecoverHiveNoSqlObjectParams{}
	return &this
}

// GetObjectName returns the ObjectName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RecoverHiveNoSqlObjectParams) GetObjectName() string {
	if o == nil || o.ObjectName.Get() == nil {
		var ret string
		return ret
	}

	return *o.ObjectName.Get()
}

// GetObjectNameOk returns a tuple with the ObjectName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverHiveNoSqlObjectParams) GetObjectNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ObjectName.Get(), o.ObjectName.IsSet()
}

// SetObjectName sets field value
func (o *RecoverHiveNoSqlObjectParams) SetObjectName(v string) {
	o.ObjectName.Set(&v)
}

func (o RecoverHiveNoSqlObjectParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["objectName"] = o.ObjectName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverHiveNoSqlObjectParams struct {
	value *RecoverHiveNoSqlObjectParams
	isSet bool
}

func (v NullableRecoverHiveNoSqlObjectParams) Get() *RecoverHiveNoSqlObjectParams {
	return v.value
}

func (v *NullableRecoverHiveNoSqlObjectParams) Set(val *RecoverHiveNoSqlObjectParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverHiveNoSqlObjectParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverHiveNoSqlObjectParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverHiveNoSqlObjectParams(val *RecoverHiveNoSqlObjectParams) *NullableRecoverHiveNoSqlObjectParams {
	return &NullableRecoverHiveNoSqlObjectParams{value: val, isSet: true}
}

func (v NullableRecoverHiveNoSqlObjectParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverHiveNoSqlObjectParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


