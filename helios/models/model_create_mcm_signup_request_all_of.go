/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CreateMcmSignupRequestAllOf struct for CreateMcmSignupRequestAllOf
type CreateMcmSignupRequestAllOf struct {
	// Specifies whether the User agrees to Terms and conditions for using Cohesity MCM services which are specified at <url>
	AcceptTerms bool `json:"acceptTerms"`
}

// NewCreateMcmSignupRequestAllOf instantiates a new CreateMcmSignupRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMcmSignupRequestAllOf(acceptTerms bool) *CreateMcmSignupRequestAllOf {
	this := CreateMcmSignupRequestAllOf{}
	this.AcceptTerms = acceptTerms
	return &this
}

// NewCreateMcmSignupRequestAllOfWithDefaults instantiates a new CreateMcmSignupRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMcmSignupRequestAllOfWithDefaults() *CreateMcmSignupRequestAllOf {
	this := CreateMcmSignupRequestAllOf{}
	return &this
}

// GetAcceptTerms returns the AcceptTerms field value
func (o *CreateMcmSignupRequestAllOf) GetAcceptTerms() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AcceptTerms
}

// GetAcceptTermsOk returns a tuple with the AcceptTerms field value
// and a boolean to check if the value has been set.
func (o *CreateMcmSignupRequestAllOf) GetAcceptTermsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AcceptTerms, true
}

// SetAcceptTerms sets field value
func (o *CreateMcmSignupRequestAllOf) SetAcceptTerms(v bool) {
	o.AcceptTerms = v
}

func (o CreateMcmSignupRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["acceptTerms"] = o.AcceptTerms
	}
	return json.Marshal(toSerialize)
}

type NullableCreateMcmSignupRequestAllOf struct {
	value *CreateMcmSignupRequestAllOf
	isSet bool
}

func (v NullableCreateMcmSignupRequestAllOf) Get() *CreateMcmSignupRequestAllOf {
	return v.value
}

func (v *NullableCreateMcmSignupRequestAllOf) Set(val *CreateMcmSignupRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMcmSignupRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMcmSignupRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMcmSignupRequestAllOf(val *CreateMcmSignupRequestAllOf) *NullableCreateMcmSignupRequestAllOf {
	return &NullableCreateMcmSignupRequestAllOf{value: val, isSet: true}
}

func (v NullableCreateMcmSignupRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMcmSignupRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


