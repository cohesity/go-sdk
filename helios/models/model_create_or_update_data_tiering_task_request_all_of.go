/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CreateOrUpdateDataTieringTaskRequestAllOf struct for CreateOrUpdateDataTieringTaskRequestAllOf
type CreateOrUpdateDataTieringTaskRequestAllOf struct {
	DowntieringPolicy *DowntieringPolicy `json:"downtieringPolicy,omitempty"`
	UptieringPolicy *UptieringPolicy `json:"uptieringPolicy,omitempty"`
}

// NewCreateOrUpdateDataTieringTaskRequestAllOf instantiates a new CreateOrUpdateDataTieringTaskRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateDataTieringTaskRequestAllOf() *CreateOrUpdateDataTieringTaskRequestAllOf {
	this := CreateOrUpdateDataTieringTaskRequestAllOf{}
	return &this
}

// NewCreateOrUpdateDataTieringTaskRequestAllOfWithDefaults instantiates a new CreateOrUpdateDataTieringTaskRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateDataTieringTaskRequestAllOfWithDefaults() *CreateOrUpdateDataTieringTaskRequestAllOf {
	this := CreateOrUpdateDataTieringTaskRequestAllOf{}
	return &this
}

// GetDowntieringPolicy returns the DowntieringPolicy field value if set, zero value otherwise.
func (o *CreateOrUpdateDataTieringTaskRequestAllOf) GetDowntieringPolicy() DowntieringPolicy {
	if o == nil || o.DowntieringPolicy == nil {
		var ret DowntieringPolicy
		return ret
	}
	return *o.DowntieringPolicy
}

// GetDowntieringPolicyOk returns a tuple with the DowntieringPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDataTieringTaskRequestAllOf) GetDowntieringPolicyOk() (*DowntieringPolicy, bool) {
	if o == nil || o.DowntieringPolicy == nil {
		return nil, false
	}
	return o.DowntieringPolicy, true
}

// HasDowntieringPolicy returns a boolean if a field has been set.
func (o *CreateOrUpdateDataTieringTaskRequestAllOf) HasDowntieringPolicy() bool {
	if o != nil && o.DowntieringPolicy != nil {
		return true
	}

	return false
}

// SetDowntieringPolicy gets a reference to the given DowntieringPolicy and assigns it to the DowntieringPolicy field.
func (o *CreateOrUpdateDataTieringTaskRequestAllOf) SetDowntieringPolicy(v DowntieringPolicy) {
	o.DowntieringPolicy = &v
}

// GetUptieringPolicy returns the UptieringPolicy field value if set, zero value otherwise.
func (o *CreateOrUpdateDataTieringTaskRequestAllOf) GetUptieringPolicy() UptieringPolicy {
	if o == nil || o.UptieringPolicy == nil {
		var ret UptieringPolicy
		return ret
	}
	return *o.UptieringPolicy
}

// GetUptieringPolicyOk returns a tuple with the UptieringPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateDataTieringTaskRequestAllOf) GetUptieringPolicyOk() (*UptieringPolicy, bool) {
	if o == nil || o.UptieringPolicy == nil {
		return nil, false
	}
	return o.UptieringPolicy, true
}

// HasUptieringPolicy returns a boolean if a field has been set.
func (o *CreateOrUpdateDataTieringTaskRequestAllOf) HasUptieringPolicy() bool {
	if o != nil && o.UptieringPolicy != nil {
		return true
	}

	return false
}

// SetUptieringPolicy gets a reference to the given UptieringPolicy and assigns it to the UptieringPolicy field.
func (o *CreateOrUpdateDataTieringTaskRequestAllOf) SetUptieringPolicy(v UptieringPolicy) {
	o.UptieringPolicy = &v
}

func (o CreateOrUpdateDataTieringTaskRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DowntieringPolicy != nil {
		toSerialize["downtieringPolicy"] = o.DowntieringPolicy
	}
	if o.UptieringPolicy != nil {
		toSerialize["uptieringPolicy"] = o.UptieringPolicy
	}
	return json.Marshal(toSerialize)
}

type NullableCreateOrUpdateDataTieringTaskRequestAllOf struct {
	value *CreateOrUpdateDataTieringTaskRequestAllOf
	isSet bool
}

func (v NullableCreateOrUpdateDataTieringTaskRequestAllOf) Get() *CreateOrUpdateDataTieringTaskRequestAllOf {
	return v.value
}

func (v *NullableCreateOrUpdateDataTieringTaskRequestAllOf) Set(val *CreateOrUpdateDataTieringTaskRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateDataTieringTaskRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateDataTieringTaskRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateDataTieringTaskRequestAllOf(val *CreateOrUpdateDataTieringTaskRequestAllOf) *NullableCreateOrUpdateDataTieringTaskRequestAllOf {
	return &NullableCreateOrUpdateDataTieringTaskRequestAllOf{value: val, isSet: true}
}

func (v NullableCreateOrUpdateDataTieringTaskRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateDataTieringTaskRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


