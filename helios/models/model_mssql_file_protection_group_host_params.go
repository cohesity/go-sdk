/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// MSSQLFileProtectionGroupHostParams Specifies the host specific parameters for a host container in this protection group. Objects specified here should only be MSSQL root containers and will not be protected unless they are also specified in the 'objects' list. This list is just for specifying source level settings.
type MSSQLFileProtectionGroupHostParams struct {
	// Specifies the id of the host container on which databases are hosted.
	HostId NullableInt64 `json:"hostId"`
	// Specifies the name of the host container on which databases are hosted.
	HostName NullableString `json:"hostName,omitempty"`
	// Specifies whether or not to disable source side deduplication on this source. The default behavior is false unless the user has set 'performSourceSideDeduplication' to true.
	DisableSourceSideDeduplication NullableBool `json:"disableSourceSideDeduplication,omitempty"`
}

// NewMSSQLFileProtectionGroupHostParams instantiates a new MSSQLFileProtectionGroupHostParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMSSQLFileProtectionGroupHostParams(hostId NullableInt64) *MSSQLFileProtectionGroupHostParams {
	this := MSSQLFileProtectionGroupHostParams{}
	this.HostId = hostId
	return &this
}

// NewMSSQLFileProtectionGroupHostParamsWithDefaults instantiates a new MSSQLFileProtectionGroupHostParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMSSQLFileProtectionGroupHostParamsWithDefaults() *MSSQLFileProtectionGroupHostParams {
	this := MSSQLFileProtectionGroupHostParams{}
	return &this
}

// GetHostId returns the HostId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *MSSQLFileProtectionGroupHostParams) GetHostId() int64 {
	if o == nil || o.HostId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.HostId.Get()
}

// GetHostIdOk returns a tuple with the HostId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MSSQLFileProtectionGroupHostParams) GetHostIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HostId.Get(), o.HostId.IsSet()
}

// SetHostId sets field value
func (o *MSSQLFileProtectionGroupHostParams) SetHostId(v int64) {
	o.HostId.Set(&v)
}

// GetHostName returns the HostName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MSSQLFileProtectionGroupHostParams) GetHostName() string {
	if o == nil || o.HostName.Get() == nil {
		var ret string
		return ret
	}
	return *o.HostName.Get()
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MSSQLFileProtectionGroupHostParams) GetHostNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HostName.Get(), o.HostName.IsSet()
}

// HasHostName returns a boolean if a field has been set.
func (o *MSSQLFileProtectionGroupHostParams) HasHostName() bool {
	if o != nil && o.HostName.IsSet() {
		return true
	}

	return false
}

// SetHostName gets a reference to the given NullableString and assigns it to the HostName field.
func (o *MSSQLFileProtectionGroupHostParams) SetHostName(v string) {
	o.HostName.Set(&v)
}
// SetHostNameNil sets the value for HostName to be an explicit nil
func (o *MSSQLFileProtectionGroupHostParams) SetHostNameNil() {
	o.HostName.Set(nil)
}

// UnsetHostName ensures that no value is present for HostName, not even an explicit nil
func (o *MSSQLFileProtectionGroupHostParams) UnsetHostName() {
	o.HostName.Unset()
}

// GetDisableSourceSideDeduplication returns the DisableSourceSideDeduplication field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MSSQLFileProtectionGroupHostParams) GetDisableSourceSideDeduplication() bool {
	if o == nil || o.DisableSourceSideDeduplication.Get() == nil {
		var ret bool
		return ret
	}
	return *o.DisableSourceSideDeduplication.Get()
}

// GetDisableSourceSideDeduplicationOk returns a tuple with the DisableSourceSideDeduplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MSSQLFileProtectionGroupHostParams) GetDisableSourceSideDeduplicationOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisableSourceSideDeduplication.Get(), o.DisableSourceSideDeduplication.IsSet()
}

// HasDisableSourceSideDeduplication returns a boolean if a field has been set.
func (o *MSSQLFileProtectionGroupHostParams) HasDisableSourceSideDeduplication() bool {
	if o != nil && o.DisableSourceSideDeduplication.IsSet() {
		return true
	}

	return false
}

// SetDisableSourceSideDeduplication gets a reference to the given NullableBool and assigns it to the DisableSourceSideDeduplication field.
func (o *MSSQLFileProtectionGroupHostParams) SetDisableSourceSideDeduplication(v bool) {
	o.DisableSourceSideDeduplication.Set(&v)
}
// SetDisableSourceSideDeduplicationNil sets the value for DisableSourceSideDeduplication to be an explicit nil
func (o *MSSQLFileProtectionGroupHostParams) SetDisableSourceSideDeduplicationNil() {
	o.DisableSourceSideDeduplication.Set(nil)
}

// UnsetDisableSourceSideDeduplication ensures that no value is present for DisableSourceSideDeduplication, not even an explicit nil
func (o *MSSQLFileProtectionGroupHostParams) UnsetDisableSourceSideDeduplication() {
	o.DisableSourceSideDeduplication.Unset()
}

func (o MSSQLFileProtectionGroupHostParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["hostId"] = o.HostId.Get()
	}
	if o.HostName.IsSet() {
		toSerialize["hostName"] = o.HostName.Get()
	}
	if o.DisableSourceSideDeduplication.IsSet() {
		toSerialize["disableSourceSideDeduplication"] = o.DisableSourceSideDeduplication.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMSSQLFileProtectionGroupHostParams struct {
	value *MSSQLFileProtectionGroupHostParams
	isSet bool
}

func (v NullableMSSQLFileProtectionGroupHostParams) Get() *MSSQLFileProtectionGroupHostParams {
	return v.value
}

func (v *NullableMSSQLFileProtectionGroupHostParams) Set(val *MSSQLFileProtectionGroupHostParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMSSQLFileProtectionGroupHostParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMSSQLFileProtectionGroupHostParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMSSQLFileProtectionGroupHostParams(val *MSSQLFileProtectionGroupHostParams) *NullableMSSQLFileProtectionGroupHostParams {
	return &NullableMSSQLFileProtectionGroupHostParams{value: val, isSet: true}
}

func (v NullableMSSQLFileProtectionGroupHostParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMSSQLFileProtectionGroupHostParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


