/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// HeliosAwsResponse Specifies a AWS registration response.
type HeliosAwsResponse struct {
	// Specifies the product code returned from Marketplace.
	ProductCode *string `json:"productCode,omitempty"`
	// Specifies the product code returned from Marketplace.
	CustomerId *string `json:"customerId,omitempty"`
}

// NewHeliosAwsResponse instantiates a new HeliosAwsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeliosAwsResponse() *HeliosAwsResponse {
	this := HeliosAwsResponse{}
	return &this
}

// NewHeliosAwsResponseWithDefaults instantiates a new HeliosAwsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeliosAwsResponseWithDefaults() *HeliosAwsResponse {
	this := HeliosAwsResponse{}
	return &this
}

// GetProductCode returns the ProductCode field value if set, zero value otherwise.
func (o *HeliosAwsResponse) GetProductCode() string {
	if o == nil || o.ProductCode == nil {
		var ret string
		return ret
	}
	return *o.ProductCode
}

// GetProductCodeOk returns a tuple with the ProductCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosAwsResponse) GetProductCodeOk() (*string, bool) {
	if o == nil || o.ProductCode == nil {
		return nil, false
	}
	return o.ProductCode, true
}

// HasProductCode returns a boolean if a field has been set.
func (o *HeliosAwsResponse) HasProductCode() bool {
	if o != nil && o.ProductCode != nil {
		return true
	}

	return false
}

// SetProductCode gets a reference to the given string and assigns it to the ProductCode field.
func (o *HeliosAwsResponse) SetProductCode(v string) {
	o.ProductCode = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *HeliosAwsResponse) GetCustomerId() string {
	if o == nil || o.CustomerId == nil {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeliosAwsResponse) GetCustomerIdOk() (*string, bool) {
	if o == nil || o.CustomerId == nil {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *HeliosAwsResponse) HasCustomerId() bool {
	if o != nil && o.CustomerId != nil {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *HeliosAwsResponse) SetCustomerId(v string) {
	o.CustomerId = &v
}

func (o HeliosAwsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProductCode != nil {
		toSerialize["productCode"] = o.ProductCode
	}
	if o.CustomerId != nil {
		toSerialize["customerId"] = o.CustomerId
	}
	return json.Marshal(toSerialize)
}

type NullableHeliosAwsResponse struct {
	value *HeliosAwsResponse
	isSet bool
}

func (v NullableHeliosAwsResponse) Get() *HeliosAwsResponse {
	return v.value
}

func (v *NullableHeliosAwsResponse) Set(val *HeliosAwsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHeliosAwsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHeliosAwsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeliosAwsResponse(val *HeliosAwsResponse) *NullableHeliosAwsResponse {
	return &NullableHeliosAwsResponse{value: val, isSet: true}
}

func (v NullableHeliosAwsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeliosAwsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


