/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// MongodbParams Specifies the recovery options specific to MongoDB environment.
type MongodbParams struct {
	// Specifies the type of recover action to be performed.
	RecoveryAction string `json:"recoveryAction"`
	RecoverMongodbParams RecoverMongodbParams `json:"recoverMongodbParams"`
}

// NewMongodbParams instantiates a new MongodbParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMongodbParams(recoveryAction string, recoverMongodbParams RecoverMongodbParams) *MongodbParams {
	this := MongodbParams{}
	this.RecoveryAction = recoveryAction
	this.RecoverMongodbParams = recoverMongodbParams
	return &this
}

// NewMongodbParamsWithDefaults instantiates a new MongodbParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMongodbParamsWithDefaults() *MongodbParams {
	this := MongodbParams{}
	return &this
}

// GetRecoveryAction returns the RecoveryAction field value
func (o *MongodbParams) GetRecoveryAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecoveryAction
}

// GetRecoveryActionOk returns a tuple with the RecoveryAction field value
// and a boolean to check if the value has been set.
func (o *MongodbParams) GetRecoveryActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RecoveryAction, true
}

// SetRecoveryAction sets field value
func (o *MongodbParams) SetRecoveryAction(v string) {
	o.RecoveryAction = v
}

// GetRecoverMongodbParams returns the RecoverMongodbParams field value
func (o *MongodbParams) GetRecoverMongodbParams() RecoverMongodbParams {
	if o == nil {
		var ret RecoverMongodbParams
		return ret
	}

	return o.RecoverMongodbParams
}

// GetRecoverMongodbParamsOk returns a tuple with the RecoverMongodbParams field value
// and a boolean to check if the value has been set.
func (o *MongodbParams) GetRecoverMongodbParamsOk() (*RecoverMongodbParams, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RecoverMongodbParams, true
}

// SetRecoverMongodbParams sets field value
func (o *MongodbParams) SetRecoverMongodbParams(v RecoverMongodbParams) {
	o.RecoverMongodbParams = v
}

func (o MongodbParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["recoveryAction"] = o.RecoveryAction
	}
	if true {
		toSerialize["recoverMongodbParams"] = o.RecoverMongodbParams
	}
	return json.Marshal(toSerialize)
}

type NullableMongodbParams struct {
	value *MongodbParams
	isSet bool
}

func (v NullableMongodbParams) Get() *MongodbParams {
	return v.value
}

func (v *NullableMongodbParams) Set(val *MongodbParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMongodbParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMongodbParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMongodbParams(val *MongodbParams) *NullableMongodbParams {
	return &NullableMongodbParams{value: val, isSet: true}
}

func (v NullableMongodbParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMongodbParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


