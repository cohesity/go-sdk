/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// HbaseSourceRegistrationParamsAllOf struct for HbaseSourceRegistrationParamsAllOf
type HbaseSourceRegistrationParamsAllOf struct {
	// IP or hostname of any host from which the HBase configuration file hbase-site.xml can be read.
	Host string `json:"host"`
	// The directory containing the hbase-site.xml.
	ConfigurationDirectory string `json:"configurationDirectory"`
	SshPasswordCredentials NullableHbaseSourceRegistrationParamsAllOfSshPasswordCredentials `json:"sshPasswordCredentials,omitempty"`
	SshPrivateKeyCredentials NullableHbaseSourceRegistrationParamsAllOfSshPrivateKeyCredentials `json:"sshPrivateKeyCredentials,omitempty"`
	// Protection Source registration id of the HDFS on which this HBase is running.
	HdfsSourceRegistrationID int64 `json:"hdfsSourceRegistrationID"`
	// The kerberos principal to be used to connect to this Hbase source.
	KerberosPrincipal NullableString `json:"kerberosPrincipal,omitempty"`
}

// NewHbaseSourceRegistrationParamsAllOf instantiates a new HbaseSourceRegistrationParamsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHbaseSourceRegistrationParamsAllOf(host string, configurationDirectory string, hdfsSourceRegistrationID int64) *HbaseSourceRegistrationParamsAllOf {
	this := HbaseSourceRegistrationParamsAllOf{}
	this.Host = host
	this.ConfigurationDirectory = configurationDirectory
	this.HdfsSourceRegistrationID = hdfsSourceRegistrationID
	return &this
}

// NewHbaseSourceRegistrationParamsAllOfWithDefaults instantiates a new HbaseSourceRegistrationParamsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHbaseSourceRegistrationParamsAllOfWithDefaults() *HbaseSourceRegistrationParamsAllOf {
	this := HbaseSourceRegistrationParamsAllOf{}
	return &this
}

// GetHost returns the Host field value
func (o *HbaseSourceRegistrationParamsAllOf) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *HbaseSourceRegistrationParamsAllOf) GetHostOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *HbaseSourceRegistrationParamsAllOf) SetHost(v string) {
	o.Host = v
}

// GetConfigurationDirectory returns the ConfigurationDirectory field value
func (o *HbaseSourceRegistrationParamsAllOf) GetConfigurationDirectory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConfigurationDirectory
}

// GetConfigurationDirectoryOk returns a tuple with the ConfigurationDirectory field value
// and a boolean to check if the value has been set.
func (o *HbaseSourceRegistrationParamsAllOf) GetConfigurationDirectoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConfigurationDirectory, true
}

// SetConfigurationDirectory sets field value
func (o *HbaseSourceRegistrationParamsAllOf) SetConfigurationDirectory(v string) {
	o.ConfigurationDirectory = v
}

// GetSshPasswordCredentials returns the SshPasswordCredentials field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HbaseSourceRegistrationParamsAllOf) GetSshPasswordCredentials() HbaseSourceRegistrationParamsAllOfSshPasswordCredentials {
	if o == nil || o.SshPasswordCredentials.Get() == nil {
		var ret HbaseSourceRegistrationParamsAllOfSshPasswordCredentials
		return ret
	}
	return *o.SshPasswordCredentials.Get()
}

// GetSshPasswordCredentialsOk returns a tuple with the SshPasswordCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HbaseSourceRegistrationParamsAllOf) GetSshPasswordCredentialsOk() (*HbaseSourceRegistrationParamsAllOfSshPasswordCredentials, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SshPasswordCredentials.Get(), o.SshPasswordCredentials.IsSet()
}

// HasSshPasswordCredentials returns a boolean if a field has been set.
func (o *HbaseSourceRegistrationParamsAllOf) HasSshPasswordCredentials() bool {
	if o != nil && o.SshPasswordCredentials.IsSet() {
		return true
	}

	return false
}

// SetSshPasswordCredentials gets a reference to the given NullableHbaseSourceRegistrationParamsAllOfSshPasswordCredentials and assigns it to the SshPasswordCredentials field.
func (o *HbaseSourceRegistrationParamsAllOf) SetSshPasswordCredentials(v HbaseSourceRegistrationParamsAllOfSshPasswordCredentials) {
	o.SshPasswordCredentials.Set(&v)
}
// SetSshPasswordCredentialsNil sets the value for SshPasswordCredentials to be an explicit nil
func (o *HbaseSourceRegistrationParamsAllOf) SetSshPasswordCredentialsNil() {
	o.SshPasswordCredentials.Set(nil)
}

// UnsetSshPasswordCredentials ensures that no value is present for SshPasswordCredentials, not even an explicit nil
func (o *HbaseSourceRegistrationParamsAllOf) UnsetSshPasswordCredentials() {
	o.SshPasswordCredentials.Unset()
}

// GetSshPrivateKeyCredentials returns the SshPrivateKeyCredentials field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HbaseSourceRegistrationParamsAllOf) GetSshPrivateKeyCredentials() HbaseSourceRegistrationParamsAllOfSshPrivateKeyCredentials {
	if o == nil || o.SshPrivateKeyCredentials.Get() == nil {
		var ret HbaseSourceRegistrationParamsAllOfSshPrivateKeyCredentials
		return ret
	}
	return *o.SshPrivateKeyCredentials.Get()
}

// GetSshPrivateKeyCredentialsOk returns a tuple with the SshPrivateKeyCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HbaseSourceRegistrationParamsAllOf) GetSshPrivateKeyCredentialsOk() (*HbaseSourceRegistrationParamsAllOfSshPrivateKeyCredentials, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SshPrivateKeyCredentials.Get(), o.SshPrivateKeyCredentials.IsSet()
}

// HasSshPrivateKeyCredentials returns a boolean if a field has been set.
func (o *HbaseSourceRegistrationParamsAllOf) HasSshPrivateKeyCredentials() bool {
	if o != nil && o.SshPrivateKeyCredentials.IsSet() {
		return true
	}

	return false
}

// SetSshPrivateKeyCredentials gets a reference to the given NullableHbaseSourceRegistrationParamsAllOfSshPrivateKeyCredentials and assigns it to the SshPrivateKeyCredentials field.
func (o *HbaseSourceRegistrationParamsAllOf) SetSshPrivateKeyCredentials(v HbaseSourceRegistrationParamsAllOfSshPrivateKeyCredentials) {
	o.SshPrivateKeyCredentials.Set(&v)
}
// SetSshPrivateKeyCredentialsNil sets the value for SshPrivateKeyCredentials to be an explicit nil
func (o *HbaseSourceRegistrationParamsAllOf) SetSshPrivateKeyCredentialsNil() {
	o.SshPrivateKeyCredentials.Set(nil)
}

// UnsetSshPrivateKeyCredentials ensures that no value is present for SshPrivateKeyCredentials, not even an explicit nil
func (o *HbaseSourceRegistrationParamsAllOf) UnsetSshPrivateKeyCredentials() {
	o.SshPrivateKeyCredentials.Unset()
}

// GetHdfsSourceRegistrationID returns the HdfsSourceRegistrationID field value
func (o *HbaseSourceRegistrationParamsAllOf) GetHdfsSourceRegistrationID() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.HdfsSourceRegistrationID
}

// GetHdfsSourceRegistrationIDOk returns a tuple with the HdfsSourceRegistrationID field value
// and a boolean to check if the value has been set.
func (o *HbaseSourceRegistrationParamsAllOf) GetHdfsSourceRegistrationIDOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HdfsSourceRegistrationID, true
}

// SetHdfsSourceRegistrationID sets field value
func (o *HbaseSourceRegistrationParamsAllOf) SetHdfsSourceRegistrationID(v int64) {
	o.HdfsSourceRegistrationID = v
}

// GetKerberosPrincipal returns the KerberosPrincipal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HbaseSourceRegistrationParamsAllOf) GetKerberosPrincipal() string {
	if o == nil || o.KerberosPrincipal.Get() == nil {
		var ret string
		return ret
	}
	return *o.KerberosPrincipal.Get()
}

// GetKerberosPrincipalOk returns a tuple with the KerberosPrincipal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HbaseSourceRegistrationParamsAllOf) GetKerberosPrincipalOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.KerberosPrincipal.Get(), o.KerberosPrincipal.IsSet()
}

// HasKerberosPrincipal returns a boolean if a field has been set.
func (o *HbaseSourceRegistrationParamsAllOf) HasKerberosPrincipal() bool {
	if o != nil && o.KerberosPrincipal.IsSet() {
		return true
	}

	return false
}

// SetKerberosPrincipal gets a reference to the given NullableString and assigns it to the KerberosPrincipal field.
func (o *HbaseSourceRegistrationParamsAllOf) SetKerberosPrincipal(v string) {
	o.KerberosPrincipal.Set(&v)
}
// SetKerberosPrincipalNil sets the value for KerberosPrincipal to be an explicit nil
func (o *HbaseSourceRegistrationParamsAllOf) SetKerberosPrincipalNil() {
	o.KerberosPrincipal.Set(nil)
}

// UnsetKerberosPrincipal ensures that no value is present for KerberosPrincipal, not even an explicit nil
func (o *HbaseSourceRegistrationParamsAllOf) UnsetKerberosPrincipal() {
	o.KerberosPrincipal.Unset()
}

func (o HbaseSourceRegistrationParamsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["host"] = o.Host
	}
	if true {
		toSerialize["configurationDirectory"] = o.ConfigurationDirectory
	}
	if o.SshPasswordCredentials.IsSet() {
		toSerialize["sshPasswordCredentials"] = o.SshPasswordCredentials.Get()
	}
	if o.SshPrivateKeyCredentials.IsSet() {
		toSerialize["sshPrivateKeyCredentials"] = o.SshPrivateKeyCredentials.Get()
	}
	if true {
		toSerialize["hdfsSourceRegistrationID"] = o.HdfsSourceRegistrationID
	}
	if o.KerberosPrincipal.IsSet() {
		toSerialize["kerberosPrincipal"] = o.KerberosPrincipal.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableHbaseSourceRegistrationParamsAllOf struct {
	value *HbaseSourceRegistrationParamsAllOf
	isSet bool
}

func (v NullableHbaseSourceRegistrationParamsAllOf) Get() *HbaseSourceRegistrationParamsAllOf {
	return v.value
}

func (v *NullableHbaseSourceRegistrationParamsAllOf) Set(val *HbaseSourceRegistrationParamsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableHbaseSourceRegistrationParamsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableHbaseSourceRegistrationParamsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHbaseSourceRegistrationParamsAllOf(val *HbaseSourceRegistrationParamsAllOf) *NullableHbaseSourceRegistrationParamsAllOf {
	return &NullableHbaseSourceRegistrationParamsAllOf{value: val, isSet: true}
}

func (v NullableHbaseSourceRegistrationParamsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHbaseSourceRegistrationParamsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


