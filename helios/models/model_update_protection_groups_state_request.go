/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// UpdateProtectionGroupsStateRequest Specifies the parameters to perform an action of list of Protection Groups.
type UpdateProtectionGroupsStateRequest struct {
	// Specifies the action to be performed on all the specfied Protection Groups. 'kActivate' specifies that Protection Group should be activated. 'kDeactivate' sepcifies that Protection Group should be deactivated. 'kPause' specifies that Protection Group should be paused. 'kResume' specifies that Protection Group should be resumed.
	Action NullableString `json:"action"`
	// Specifies a list of Protection Group ids for which the state should change.
	Ids []string `json:"ids"`
}

// NewUpdateProtectionGroupsStateRequest instantiates a new UpdateProtectionGroupsStateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProtectionGroupsStateRequest(action NullableString, ids []string) *UpdateProtectionGroupsStateRequest {
	this := UpdateProtectionGroupsStateRequest{}
	this.Action = action
	this.Ids = ids
	return &this
}

// NewUpdateProtectionGroupsStateRequestWithDefaults instantiates a new UpdateProtectionGroupsStateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProtectionGroupsStateRequestWithDefaults() *UpdateProtectionGroupsStateRequest {
	this := UpdateProtectionGroupsStateRequest{}
	return &this
}

// GetAction returns the Action field value
// If the value is explicit nil, the zero value for string will be returned
func (o *UpdateProtectionGroupsStateRequest) GetAction() string {
	if o == nil || o.Action.Get() == nil {
		var ret string
		return ret
	}

	return *o.Action.Get()
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionGroupsStateRequest) GetActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Action.Get(), o.Action.IsSet()
}

// SetAction sets field value
func (o *UpdateProtectionGroupsStateRequest) SetAction(v string) {
	o.Action.Set(&v)
}

// GetIds returns the Ids field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *UpdateProtectionGroupsStateRequest) GetIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionGroupsStateRequest) GetIdsOk() (*[]string, bool) {
	if o == nil || o.Ids == nil {
		return nil, false
	}
	return &o.Ids, true
}

// SetIds sets field value
func (o *UpdateProtectionGroupsStateRequest) SetIds(v []string) {
	o.Ids = v
}

func (o UpdateProtectionGroupsStateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["action"] = o.Action.Get()
	}
	if o.Ids != nil {
		toSerialize["ids"] = o.Ids
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateProtectionGroupsStateRequest struct {
	value *UpdateProtectionGroupsStateRequest
	isSet bool
}

func (v NullableUpdateProtectionGroupsStateRequest) Get() *UpdateProtectionGroupsStateRequest {
	return v.value
}

func (v *NullableUpdateProtectionGroupsStateRequest) Set(val *UpdateProtectionGroupsStateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProtectionGroupsStateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProtectionGroupsStateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProtectionGroupsStateRequest(val *UpdateProtectionGroupsStateRequest) *NullableUpdateProtectionGroupsStateRequest {
	return &NullableUpdateProtectionGroupsStateRequest{value: val, isSet: true}
}

func (v NullableUpdateProtectionGroupsStateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProtectionGroupsStateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


