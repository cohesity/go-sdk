/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// IndexingCloudConfig Config required for indexing in DMaaS.
type IndexingCloudConfig struct {
	// Tenant ID to which this config belongs.
	TenantId NullableString `json:"tenantId"`
	// Name of the cloud region.
	Region NullableString `json:"region"`
	EsConfig ESConfigForIndexing `json:"esConfig"`
	S3Config S3ConfigForIndexing `json:"s3Config"`
}

// NewIndexingCloudConfig instantiates a new IndexingCloudConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndexingCloudConfig(tenantId NullableString, region NullableString, esConfig ESConfigForIndexing, s3Config S3ConfigForIndexing) *IndexingCloudConfig {
	this := IndexingCloudConfig{}
	this.TenantId = tenantId
	this.Region = region
	this.EsConfig = esConfig
	this.S3Config = s3Config
	return &this
}

// NewIndexingCloudConfigWithDefaults instantiates a new IndexingCloudConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndexingCloudConfigWithDefaults() *IndexingCloudConfig {
	this := IndexingCloudConfig{}
	return &this
}

// GetTenantId returns the TenantId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *IndexingCloudConfig) GetTenantId() string {
	if o == nil || o.TenantId.Get() == nil {
		var ret string
		return ret
	}

	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexingCloudConfig) GetTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// SetTenantId sets field value
func (o *IndexingCloudConfig) SetTenantId(v string) {
	o.TenantId.Set(&v)
}

// GetRegion returns the Region field value
// If the value is explicit nil, the zero value for string will be returned
func (o *IndexingCloudConfig) GetRegion() string {
	if o == nil || o.Region.Get() == nil {
		var ret string
		return ret
	}

	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexingCloudConfig) GetRegionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// SetRegion sets field value
func (o *IndexingCloudConfig) SetRegion(v string) {
	o.Region.Set(&v)
}

// GetEsConfig returns the EsConfig field value
func (o *IndexingCloudConfig) GetEsConfig() ESConfigForIndexing {
	if o == nil {
		var ret ESConfigForIndexing
		return ret
	}

	return o.EsConfig
}

// GetEsConfigOk returns a tuple with the EsConfig field value
// and a boolean to check if the value has been set.
func (o *IndexingCloudConfig) GetEsConfigOk() (*ESConfigForIndexing, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EsConfig, true
}

// SetEsConfig sets field value
func (o *IndexingCloudConfig) SetEsConfig(v ESConfigForIndexing) {
	o.EsConfig = v
}

// GetS3Config returns the S3Config field value
func (o *IndexingCloudConfig) GetS3Config() S3ConfigForIndexing {
	if o == nil {
		var ret S3ConfigForIndexing
		return ret
	}

	return o.S3Config
}

// GetS3ConfigOk returns a tuple with the S3Config field value
// and a boolean to check if the value has been set.
func (o *IndexingCloudConfig) GetS3ConfigOk() (*S3ConfigForIndexing, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.S3Config, true
}

// SetS3Config sets field value
func (o *IndexingCloudConfig) SetS3Config(v S3ConfigForIndexing) {
	o.S3Config = v
}

func (o IndexingCloudConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if true {
		toSerialize["region"] = o.Region.Get()
	}
	if true {
		toSerialize["esConfig"] = o.EsConfig
	}
	if true {
		toSerialize["s3Config"] = o.S3Config
	}
	return json.Marshal(toSerialize)
}

type NullableIndexingCloudConfig struct {
	value *IndexingCloudConfig
	isSet bool
}

func (v NullableIndexingCloudConfig) Get() *IndexingCloudConfig {
	return v.value
}

func (v *NullableIndexingCloudConfig) Set(val *IndexingCloudConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableIndexingCloudConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableIndexingCloudConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndexingCloudConfig(val *IndexingCloudConfig) *NullableIndexingCloudConfig {
	return &NullableIndexingCloudConfig{value: val, isSet: true}
}

func (v NullableIndexingCloudConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndexingCloudConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


