/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CommonRecoveryResponseParams Specifies the common response parameters to create a Recovery
type CommonRecoveryResponseParams struct {
	// Specifies the id of the Recovery.
	Id NullableString `json:"id,omitempty"`
	// Specifies the name of the Recovery.
	Name NullableString `json:"name,omitempty"`
	// Specifies the start time of the Recovery in Unix timestamp epoch in microseconds.
	StartTimeUsecs NullableInt64 `json:"startTimeUsecs,omitempty"`
	// Specifies the end time of the Recovery in Unix timestamp epoch in microseconds. This field will be populated only after Recovery is finished.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	// Status of the Recovery. 'Running' indicates that the Recovery is still running. 'Canceled' indicates that the Recovery has been cancelled. 'Canceling' indicates that the Recovery is in the process of being cancelled. 'Failed' indicates that the Recovery has failed. 'Succeeded' indicates that the Recovery has finished successfully. 'SucceededWithWarning' indicates that the Recovery finished successfully, but there were some warning messages.
	Status NullableString `json:"status,omitempty"`
	// Progress monitor task id for Recovery.
	ProgressTaskId NullableString `json:"progressTaskId,omitempty"`
	// Specifies the type of snapshot environment for which the Recovery was performed.
	SnapshotEnvironment *string `json:"snapshotEnvironment,omitempty"`
	// Specifies the type of recover action.
	RecoveryAction *string `json:"recoveryAction,omitempty"`
	// Specifies the list of tenants that have permissions for this recovery.
	Permissions []Tenant `json:"permissions,omitempty"`
	CreationInfo *CreationInfo `json:"creationInfo,omitempty"`
	// Specifies whether it's possible to tear down the objects created by the recovery.
	CanTearDown NullableBool `json:"canTearDown,omitempty"`
	// Specifies the status of the tear down operation. This is only set when the canTearDown is set to true. 'DestroyScheduled' indicates that the tear down is ready to schedule. 'Destroying' indicates that the tear down is still running. 'Destroyed' indicates that the tear down succeeded. 'DestroyError' indicates that the tear down failed.
	TearDownStatus NullableString `json:"tearDownStatus,omitempty"`
	// Specifies the error message about the tear down operation if it fails.
	TearDownMessage NullableString `json:"tearDownMessage,omitempty"`
	// Specifies messages about the recovery.
	Messages []string `json:"messages,omitempty"`
	// Specifies whether the current recovery operation has created child recoveries. This is currently used in SQL recovery where multiple child recoveries can be tracked under a common/parent recovery.
	IsParentRecovery NullableBool `json:"isParentRecovery,omitempty"`
	// If current recovery is child recovery triggered by another parent recovery operation, then this field willt specify the id of the parent recovery.
	ParentRecoveryId NullableString `json:"parentRecoveryId,omitempty"`
}

// NewCommonRecoveryResponseParams instantiates a new CommonRecoveryResponseParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonRecoveryResponseParams() *CommonRecoveryResponseParams {
	this := CommonRecoveryResponseParams{}
	return &this
}

// NewCommonRecoveryResponseParamsWithDefaults instantiates a new CommonRecoveryResponseParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonRecoveryResponseParamsWithDefaults() *CommonRecoveryResponseParams {
	this := CommonRecoveryResponseParams{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonRecoveryResponseParams) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoveryResponseParams) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CommonRecoveryResponseParams) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *CommonRecoveryResponseParams) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CommonRecoveryResponseParams) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CommonRecoveryResponseParams) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonRecoveryResponseParams) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoveryResponseParams) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CommonRecoveryResponseParams) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CommonRecoveryResponseParams) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CommonRecoveryResponseParams) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CommonRecoveryResponseParams) UnsetName() {
	o.Name.Unset()
}

// GetStartTimeUsecs returns the StartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonRecoveryResponseParams) GetStartTimeUsecs() int64 {
	if o == nil || o.StartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StartTimeUsecs.Get()
}

// GetStartTimeUsecsOk returns a tuple with the StartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoveryResponseParams) GetStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartTimeUsecs.Get(), o.StartTimeUsecs.IsSet()
}

// HasStartTimeUsecs returns a boolean if a field has been set.
func (o *CommonRecoveryResponseParams) HasStartTimeUsecs() bool {
	if o != nil && o.StartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the StartTimeUsecs field.
func (o *CommonRecoveryResponseParams) SetStartTimeUsecs(v int64) {
	o.StartTimeUsecs.Set(&v)
}
// SetStartTimeUsecsNil sets the value for StartTimeUsecs to be an explicit nil
func (o *CommonRecoveryResponseParams) SetStartTimeUsecsNil() {
	o.StartTimeUsecs.Set(nil)
}

// UnsetStartTimeUsecs ensures that no value is present for StartTimeUsecs, not even an explicit nil
func (o *CommonRecoveryResponseParams) UnsetStartTimeUsecs() {
	o.StartTimeUsecs.Unset()
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonRecoveryResponseParams) GetEndTimeUsecs() int64 {
	if o == nil || o.EndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoveryResponseParams) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *CommonRecoveryResponseParams) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *CommonRecoveryResponseParams) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *CommonRecoveryResponseParams) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *CommonRecoveryResponseParams) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonRecoveryResponseParams) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoveryResponseParams) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *CommonRecoveryResponseParams) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *CommonRecoveryResponseParams) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *CommonRecoveryResponseParams) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *CommonRecoveryResponseParams) UnsetStatus() {
	o.Status.Unset()
}

// GetProgressTaskId returns the ProgressTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonRecoveryResponseParams) GetProgressTaskId() string {
	if o == nil || o.ProgressTaskId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProgressTaskId.Get()
}

// GetProgressTaskIdOk returns a tuple with the ProgressTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoveryResponseParams) GetProgressTaskIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProgressTaskId.Get(), o.ProgressTaskId.IsSet()
}

// HasProgressTaskId returns a boolean if a field has been set.
func (o *CommonRecoveryResponseParams) HasProgressTaskId() bool {
	if o != nil && o.ProgressTaskId.IsSet() {
		return true
	}

	return false
}

// SetProgressTaskId gets a reference to the given NullableString and assigns it to the ProgressTaskId field.
func (o *CommonRecoveryResponseParams) SetProgressTaskId(v string) {
	o.ProgressTaskId.Set(&v)
}
// SetProgressTaskIdNil sets the value for ProgressTaskId to be an explicit nil
func (o *CommonRecoveryResponseParams) SetProgressTaskIdNil() {
	o.ProgressTaskId.Set(nil)
}

// UnsetProgressTaskId ensures that no value is present for ProgressTaskId, not even an explicit nil
func (o *CommonRecoveryResponseParams) UnsetProgressTaskId() {
	o.ProgressTaskId.Unset()
}

// GetSnapshotEnvironment returns the SnapshotEnvironment field value if set, zero value otherwise.
func (o *CommonRecoveryResponseParams) GetSnapshotEnvironment() string {
	if o == nil || o.SnapshotEnvironment == nil {
		var ret string
		return ret
	}
	return *o.SnapshotEnvironment
}

// GetSnapshotEnvironmentOk returns a tuple with the SnapshotEnvironment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonRecoveryResponseParams) GetSnapshotEnvironmentOk() (*string, bool) {
	if o == nil || o.SnapshotEnvironment == nil {
		return nil, false
	}
	return o.SnapshotEnvironment, true
}

// HasSnapshotEnvironment returns a boolean if a field has been set.
func (o *CommonRecoveryResponseParams) HasSnapshotEnvironment() bool {
	if o != nil && o.SnapshotEnvironment != nil {
		return true
	}

	return false
}

// SetSnapshotEnvironment gets a reference to the given string and assigns it to the SnapshotEnvironment field.
func (o *CommonRecoveryResponseParams) SetSnapshotEnvironment(v string) {
	o.SnapshotEnvironment = &v
}

// GetRecoveryAction returns the RecoveryAction field value if set, zero value otherwise.
func (o *CommonRecoveryResponseParams) GetRecoveryAction() string {
	if o == nil || o.RecoveryAction == nil {
		var ret string
		return ret
	}
	return *o.RecoveryAction
}

// GetRecoveryActionOk returns a tuple with the RecoveryAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonRecoveryResponseParams) GetRecoveryActionOk() (*string, bool) {
	if o == nil || o.RecoveryAction == nil {
		return nil, false
	}
	return o.RecoveryAction, true
}

// HasRecoveryAction returns a boolean if a field has been set.
func (o *CommonRecoveryResponseParams) HasRecoveryAction() bool {
	if o != nil && o.RecoveryAction != nil {
		return true
	}

	return false
}

// SetRecoveryAction gets a reference to the given string and assigns it to the RecoveryAction field.
func (o *CommonRecoveryResponseParams) SetRecoveryAction(v string) {
	o.RecoveryAction = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonRecoveryResponseParams) GetPermissions() []Tenant {
	if o == nil  {
		var ret []Tenant
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoveryResponseParams) GetPermissionsOk() (*[]Tenant, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return &o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *CommonRecoveryResponseParams) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []Tenant and assigns it to the Permissions field.
func (o *CommonRecoveryResponseParams) SetPermissions(v []Tenant) {
	o.Permissions = v
}

// GetCreationInfo returns the CreationInfo field value if set, zero value otherwise.
func (o *CommonRecoveryResponseParams) GetCreationInfo() CreationInfo {
	if o == nil || o.CreationInfo == nil {
		var ret CreationInfo
		return ret
	}
	return *o.CreationInfo
}

// GetCreationInfoOk returns a tuple with the CreationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonRecoveryResponseParams) GetCreationInfoOk() (*CreationInfo, bool) {
	if o == nil || o.CreationInfo == nil {
		return nil, false
	}
	return o.CreationInfo, true
}

// HasCreationInfo returns a boolean if a field has been set.
func (o *CommonRecoveryResponseParams) HasCreationInfo() bool {
	if o != nil && o.CreationInfo != nil {
		return true
	}

	return false
}

// SetCreationInfo gets a reference to the given CreationInfo and assigns it to the CreationInfo field.
func (o *CommonRecoveryResponseParams) SetCreationInfo(v CreationInfo) {
	o.CreationInfo = &v
}

// GetCanTearDown returns the CanTearDown field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonRecoveryResponseParams) GetCanTearDown() bool {
	if o == nil || o.CanTearDown.Get() == nil {
		var ret bool
		return ret
	}
	return *o.CanTearDown.Get()
}

// GetCanTearDownOk returns a tuple with the CanTearDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoveryResponseParams) GetCanTearDownOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CanTearDown.Get(), o.CanTearDown.IsSet()
}

// HasCanTearDown returns a boolean if a field has been set.
func (o *CommonRecoveryResponseParams) HasCanTearDown() bool {
	if o != nil && o.CanTearDown.IsSet() {
		return true
	}

	return false
}

// SetCanTearDown gets a reference to the given NullableBool and assigns it to the CanTearDown field.
func (o *CommonRecoveryResponseParams) SetCanTearDown(v bool) {
	o.CanTearDown.Set(&v)
}
// SetCanTearDownNil sets the value for CanTearDown to be an explicit nil
func (o *CommonRecoveryResponseParams) SetCanTearDownNil() {
	o.CanTearDown.Set(nil)
}

// UnsetCanTearDown ensures that no value is present for CanTearDown, not even an explicit nil
func (o *CommonRecoveryResponseParams) UnsetCanTearDown() {
	o.CanTearDown.Unset()
}

// GetTearDownStatus returns the TearDownStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonRecoveryResponseParams) GetTearDownStatus() string {
	if o == nil || o.TearDownStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.TearDownStatus.Get()
}

// GetTearDownStatusOk returns a tuple with the TearDownStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoveryResponseParams) GetTearDownStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TearDownStatus.Get(), o.TearDownStatus.IsSet()
}

// HasTearDownStatus returns a boolean if a field has been set.
func (o *CommonRecoveryResponseParams) HasTearDownStatus() bool {
	if o != nil && o.TearDownStatus.IsSet() {
		return true
	}

	return false
}

// SetTearDownStatus gets a reference to the given NullableString and assigns it to the TearDownStatus field.
func (o *CommonRecoveryResponseParams) SetTearDownStatus(v string) {
	o.TearDownStatus.Set(&v)
}
// SetTearDownStatusNil sets the value for TearDownStatus to be an explicit nil
func (o *CommonRecoveryResponseParams) SetTearDownStatusNil() {
	o.TearDownStatus.Set(nil)
}

// UnsetTearDownStatus ensures that no value is present for TearDownStatus, not even an explicit nil
func (o *CommonRecoveryResponseParams) UnsetTearDownStatus() {
	o.TearDownStatus.Unset()
}

// GetTearDownMessage returns the TearDownMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonRecoveryResponseParams) GetTearDownMessage() string {
	if o == nil || o.TearDownMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.TearDownMessage.Get()
}

// GetTearDownMessageOk returns a tuple with the TearDownMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoveryResponseParams) GetTearDownMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TearDownMessage.Get(), o.TearDownMessage.IsSet()
}

// HasTearDownMessage returns a boolean if a field has been set.
func (o *CommonRecoveryResponseParams) HasTearDownMessage() bool {
	if o != nil && o.TearDownMessage.IsSet() {
		return true
	}

	return false
}

// SetTearDownMessage gets a reference to the given NullableString and assigns it to the TearDownMessage field.
func (o *CommonRecoveryResponseParams) SetTearDownMessage(v string) {
	o.TearDownMessage.Set(&v)
}
// SetTearDownMessageNil sets the value for TearDownMessage to be an explicit nil
func (o *CommonRecoveryResponseParams) SetTearDownMessageNil() {
	o.TearDownMessage.Set(nil)
}

// UnsetTearDownMessage ensures that no value is present for TearDownMessage, not even an explicit nil
func (o *CommonRecoveryResponseParams) UnsetTearDownMessage() {
	o.TearDownMessage.Unset()
}

// GetMessages returns the Messages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonRecoveryResponseParams) GetMessages() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoveryResponseParams) GetMessagesOk() (*[]string, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return &o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *CommonRecoveryResponseParams) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []string and assigns it to the Messages field.
func (o *CommonRecoveryResponseParams) SetMessages(v []string) {
	o.Messages = v
}

// GetIsParentRecovery returns the IsParentRecovery field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonRecoveryResponseParams) GetIsParentRecovery() bool {
	if o == nil || o.IsParentRecovery.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsParentRecovery.Get()
}

// GetIsParentRecoveryOk returns a tuple with the IsParentRecovery field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoveryResponseParams) GetIsParentRecoveryOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsParentRecovery.Get(), o.IsParentRecovery.IsSet()
}

// HasIsParentRecovery returns a boolean if a field has been set.
func (o *CommonRecoveryResponseParams) HasIsParentRecovery() bool {
	if o != nil && o.IsParentRecovery.IsSet() {
		return true
	}

	return false
}

// SetIsParentRecovery gets a reference to the given NullableBool and assigns it to the IsParentRecovery field.
func (o *CommonRecoveryResponseParams) SetIsParentRecovery(v bool) {
	o.IsParentRecovery.Set(&v)
}
// SetIsParentRecoveryNil sets the value for IsParentRecovery to be an explicit nil
func (o *CommonRecoveryResponseParams) SetIsParentRecoveryNil() {
	o.IsParentRecovery.Set(nil)
}

// UnsetIsParentRecovery ensures that no value is present for IsParentRecovery, not even an explicit nil
func (o *CommonRecoveryResponseParams) UnsetIsParentRecovery() {
	o.IsParentRecovery.Unset()
}

// GetParentRecoveryId returns the ParentRecoveryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommonRecoveryResponseParams) GetParentRecoveryId() string {
	if o == nil || o.ParentRecoveryId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ParentRecoveryId.Get()
}

// GetParentRecoveryIdOk returns a tuple with the ParentRecoveryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonRecoveryResponseParams) GetParentRecoveryIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ParentRecoveryId.Get(), o.ParentRecoveryId.IsSet()
}

// HasParentRecoveryId returns a boolean if a field has been set.
func (o *CommonRecoveryResponseParams) HasParentRecoveryId() bool {
	if o != nil && o.ParentRecoveryId.IsSet() {
		return true
	}

	return false
}

// SetParentRecoveryId gets a reference to the given NullableString and assigns it to the ParentRecoveryId field.
func (o *CommonRecoveryResponseParams) SetParentRecoveryId(v string) {
	o.ParentRecoveryId.Set(&v)
}
// SetParentRecoveryIdNil sets the value for ParentRecoveryId to be an explicit nil
func (o *CommonRecoveryResponseParams) SetParentRecoveryIdNil() {
	o.ParentRecoveryId.Set(nil)
}

// UnsetParentRecoveryId ensures that no value is present for ParentRecoveryId, not even an explicit nil
func (o *CommonRecoveryResponseParams) UnsetParentRecoveryId() {
	o.ParentRecoveryId.Unset()
}

func (o CommonRecoveryResponseParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.StartTimeUsecs.IsSet() {
		toSerialize["startTimeUsecs"] = o.StartTimeUsecs.Get()
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.ProgressTaskId.IsSet() {
		toSerialize["progressTaskId"] = o.ProgressTaskId.Get()
	}
	if o.SnapshotEnvironment != nil {
		toSerialize["snapshotEnvironment"] = o.SnapshotEnvironment
	}
	if o.RecoveryAction != nil {
		toSerialize["recoveryAction"] = o.RecoveryAction
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.CreationInfo != nil {
		toSerialize["creationInfo"] = o.CreationInfo
	}
	if o.CanTearDown.IsSet() {
		toSerialize["canTearDown"] = o.CanTearDown.Get()
	}
	if o.TearDownStatus.IsSet() {
		toSerialize["tearDownStatus"] = o.TearDownStatus.Get()
	}
	if o.TearDownMessage.IsSet() {
		toSerialize["tearDownMessage"] = o.TearDownMessage.Get()
	}
	if o.Messages != nil {
		toSerialize["messages"] = o.Messages
	}
	if o.IsParentRecovery.IsSet() {
		toSerialize["isParentRecovery"] = o.IsParentRecovery.Get()
	}
	if o.ParentRecoveryId.IsSet() {
		toSerialize["parentRecoveryId"] = o.ParentRecoveryId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCommonRecoveryResponseParams struct {
	value *CommonRecoveryResponseParams
	isSet bool
}

func (v NullableCommonRecoveryResponseParams) Get() *CommonRecoveryResponseParams {
	return v.value
}

func (v *NullableCommonRecoveryResponseParams) Set(val *CommonRecoveryResponseParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonRecoveryResponseParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonRecoveryResponseParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonRecoveryResponseParams(val *CommonRecoveryResponseParams) *NullableCommonRecoveryResponseParams {
	return &NullableCommonRecoveryResponseParams{value: val, isSet: true}
}

func (v NullableCommonRecoveryResponseParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonRecoveryResponseParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


