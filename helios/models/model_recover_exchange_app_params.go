/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// RecoverExchangeAppParams Specifies the parameters to recover Sql databases.
type RecoverExchangeAppParams struct {
	// Specifies the environment of the recovery target. The corresponding params below must be filled out.
	TargetEnvironment string `json:"targetEnvironment"`
	// Specifies the params for recovering to an Exchange host.
	ExchangeTargetParams NullableExchangeTargetParamsForRecoverExchangeApp `json:"exchangeTargetParams,omitempty"`
}

// NewRecoverExchangeAppParams instantiates a new RecoverExchangeAppParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverExchangeAppParams(targetEnvironment string) *RecoverExchangeAppParams {
	this := RecoverExchangeAppParams{}
	this.TargetEnvironment = targetEnvironment
	return &this
}

// NewRecoverExchangeAppParamsWithDefaults instantiates a new RecoverExchangeAppParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverExchangeAppParamsWithDefaults() *RecoverExchangeAppParams {
	this := RecoverExchangeAppParams{}
	return &this
}

// GetTargetEnvironment returns the TargetEnvironment field value
func (o *RecoverExchangeAppParams) GetTargetEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetEnvironment
}

// GetTargetEnvironmentOk returns a tuple with the TargetEnvironment field value
// and a boolean to check if the value has been set.
func (o *RecoverExchangeAppParams) GetTargetEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TargetEnvironment, true
}

// SetTargetEnvironment sets field value
func (o *RecoverExchangeAppParams) SetTargetEnvironment(v string) {
	o.TargetEnvironment = v
}

// GetExchangeTargetParams returns the ExchangeTargetParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverExchangeAppParams) GetExchangeTargetParams() ExchangeTargetParamsForRecoverExchangeApp {
	if o == nil || o.ExchangeTargetParams.Get() == nil {
		var ret ExchangeTargetParamsForRecoverExchangeApp
		return ret
	}
	return *o.ExchangeTargetParams.Get()
}

// GetExchangeTargetParamsOk returns a tuple with the ExchangeTargetParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverExchangeAppParams) GetExchangeTargetParamsOk() (*ExchangeTargetParamsForRecoverExchangeApp, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExchangeTargetParams.Get(), o.ExchangeTargetParams.IsSet()
}

// HasExchangeTargetParams returns a boolean if a field has been set.
func (o *RecoverExchangeAppParams) HasExchangeTargetParams() bool {
	if o != nil && o.ExchangeTargetParams.IsSet() {
		return true
	}

	return false
}

// SetExchangeTargetParams gets a reference to the given NullableExchangeTargetParamsForRecoverExchangeApp and assigns it to the ExchangeTargetParams field.
func (o *RecoverExchangeAppParams) SetExchangeTargetParams(v ExchangeTargetParamsForRecoverExchangeApp) {
	o.ExchangeTargetParams.Set(&v)
}
// SetExchangeTargetParamsNil sets the value for ExchangeTargetParams to be an explicit nil
func (o *RecoverExchangeAppParams) SetExchangeTargetParamsNil() {
	o.ExchangeTargetParams.Set(nil)
}

// UnsetExchangeTargetParams ensures that no value is present for ExchangeTargetParams, not even an explicit nil
func (o *RecoverExchangeAppParams) UnsetExchangeTargetParams() {
	o.ExchangeTargetParams.Unset()
}

func (o RecoverExchangeAppParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["targetEnvironment"] = o.TargetEnvironment
	}
	if o.ExchangeTargetParams.IsSet() {
		toSerialize["exchangeTargetParams"] = o.ExchangeTargetParams.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverExchangeAppParams struct {
	value *RecoverExchangeAppParams
	isSet bool
}

func (v NullableRecoverExchangeAppParams) Get() *RecoverExchangeAppParams {
	return v.value
}

func (v *NullableRecoverExchangeAppParams) Set(val *RecoverExchangeAppParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverExchangeAppParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverExchangeAppParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverExchangeAppParams(val *RecoverExchangeAppParams) *NullableRecoverExchangeAppParams {
	return &NullableRecoverExchangeAppParams{value: val, isSet: true}
}

func (v NullableRecoverExchangeAppParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverExchangeAppParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


