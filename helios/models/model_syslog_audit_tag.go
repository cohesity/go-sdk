/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// SyslogAuditTag Cohesity audit tag name.
type SyslogAuditTag struct {
	// Cluster audit tagging name.
	ClusterAudit NullableString `json:"clusterAudit,omitempty"`
	// Filer audit tagging name.
	FilerAudit NullableString `json:"filerAudit,omitempty"`
	// Data protection events audit tagging name.
	DataProtectionEventsAudit NullableString `json:"dataProtectionEventsAudit,omitempty"`
	// Alert audit tagging name.
	AlertAudit NullableString `json:"alertAudit,omitempty"`
}

// NewSyslogAuditTag instantiates a new SyslogAuditTag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyslogAuditTag() *SyslogAuditTag {
	this := SyslogAuditTag{}
	return &this
}

// NewSyslogAuditTagWithDefaults instantiates a new SyslogAuditTag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyslogAuditTagWithDefaults() *SyslogAuditTag {
	this := SyslogAuditTag{}
	return &this
}

// GetClusterAudit returns the ClusterAudit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SyslogAuditTag) GetClusterAudit() string {
	if o == nil || o.ClusterAudit.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClusterAudit.Get()
}

// GetClusterAuditOk returns a tuple with the ClusterAudit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SyslogAuditTag) GetClusterAuditOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterAudit.Get(), o.ClusterAudit.IsSet()
}

// HasClusterAudit returns a boolean if a field has been set.
func (o *SyslogAuditTag) HasClusterAudit() bool {
	if o != nil && o.ClusterAudit.IsSet() {
		return true
	}

	return false
}

// SetClusterAudit gets a reference to the given NullableString and assigns it to the ClusterAudit field.
func (o *SyslogAuditTag) SetClusterAudit(v string) {
	o.ClusterAudit.Set(&v)
}
// SetClusterAuditNil sets the value for ClusterAudit to be an explicit nil
func (o *SyslogAuditTag) SetClusterAuditNil() {
	o.ClusterAudit.Set(nil)
}

// UnsetClusterAudit ensures that no value is present for ClusterAudit, not even an explicit nil
func (o *SyslogAuditTag) UnsetClusterAudit() {
	o.ClusterAudit.Unset()
}

// GetFilerAudit returns the FilerAudit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SyslogAuditTag) GetFilerAudit() string {
	if o == nil || o.FilerAudit.Get() == nil {
		var ret string
		return ret
	}
	return *o.FilerAudit.Get()
}

// GetFilerAuditOk returns a tuple with the FilerAudit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SyslogAuditTag) GetFilerAuditOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FilerAudit.Get(), o.FilerAudit.IsSet()
}

// HasFilerAudit returns a boolean if a field has been set.
func (o *SyslogAuditTag) HasFilerAudit() bool {
	if o != nil && o.FilerAudit.IsSet() {
		return true
	}

	return false
}

// SetFilerAudit gets a reference to the given NullableString and assigns it to the FilerAudit field.
func (o *SyslogAuditTag) SetFilerAudit(v string) {
	o.FilerAudit.Set(&v)
}
// SetFilerAuditNil sets the value for FilerAudit to be an explicit nil
func (o *SyslogAuditTag) SetFilerAuditNil() {
	o.FilerAudit.Set(nil)
}

// UnsetFilerAudit ensures that no value is present for FilerAudit, not even an explicit nil
func (o *SyslogAuditTag) UnsetFilerAudit() {
	o.FilerAudit.Unset()
}

// GetDataProtectionEventsAudit returns the DataProtectionEventsAudit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SyslogAuditTag) GetDataProtectionEventsAudit() string {
	if o == nil || o.DataProtectionEventsAudit.Get() == nil {
		var ret string
		return ret
	}
	return *o.DataProtectionEventsAudit.Get()
}

// GetDataProtectionEventsAuditOk returns a tuple with the DataProtectionEventsAudit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SyslogAuditTag) GetDataProtectionEventsAuditOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DataProtectionEventsAudit.Get(), o.DataProtectionEventsAudit.IsSet()
}

// HasDataProtectionEventsAudit returns a boolean if a field has been set.
func (o *SyslogAuditTag) HasDataProtectionEventsAudit() bool {
	if o != nil && o.DataProtectionEventsAudit.IsSet() {
		return true
	}

	return false
}

// SetDataProtectionEventsAudit gets a reference to the given NullableString and assigns it to the DataProtectionEventsAudit field.
func (o *SyslogAuditTag) SetDataProtectionEventsAudit(v string) {
	o.DataProtectionEventsAudit.Set(&v)
}
// SetDataProtectionEventsAuditNil sets the value for DataProtectionEventsAudit to be an explicit nil
func (o *SyslogAuditTag) SetDataProtectionEventsAuditNil() {
	o.DataProtectionEventsAudit.Set(nil)
}

// UnsetDataProtectionEventsAudit ensures that no value is present for DataProtectionEventsAudit, not even an explicit nil
func (o *SyslogAuditTag) UnsetDataProtectionEventsAudit() {
	o.DataProtectionEventsAudit.Unset()
}

// GetAlertAudit returns the AlertAudit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SyslogAuditTag) GetAlertAudit() string {
	if o == nil || o.AlertAudit.Get() == nil {
		var ret string
		return ret
	}
	return *o.AlertAudit.Get()
}

// GetAlertAuditOk returns a tuple with the AlertAudit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SyslogAuditTag) GetAlertAuditOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AlertAudit.Get(), o.AlertAudit.IsSet()
}

// HasAlertAudit returns a boolean if a field has been set.
func (o *SyslogAuditTag) HasAlertAudit() bool {
	if o != nil && o.AlertAudit.IsSet() {
		return true
	}

	return false
}

// SetAlertAudit gets a reference to the given NullableString and assigns it to the AlertAudit field.
func (o *SyslogAuditTag) SetAlertAudit(v string) {
	o.AlertAudit.Set(&v)
}
// SetAlertAuditNil sets the value for AlertAudit to be an explicit nil
func (o *SyslogAuditTag) SetAlertAuditNil() {
	o.AlertAudit.Set(nil)
}

// UnsetAlertAudit ensures that no value is present for AlertAudit, not even an explicit nil
func (o *SyslogAuditTag) UnsetAlertAudit() {
	o.AlertAudit.Unset()
}

func (o SyslogAuditTag) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterAudit.IsSet() {
		toSerialize["clusterAudit"] = o.ClusterAudit.Get()
	}
	if o.FilerAudit.IsSet() {
		toSerialize["filerAudit"] = o.FilerAudit.Get()
	}
	if o.DataProtectionEventsAudit.IsSet() {
		toSerialize["dataProtectionEventsAudit"] = o.DataProtectionEventsAudit.Get()
	}
	if o.AlertAudit.IsSet() {
		toSerialize["alertAudit"] = o.AlertAudit.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSyslogAuditTag struct {
	value *SyslogAuditTag
	isSet bool
}

func (v NullableSyslogAuditTag) Get() *SyslogAuditTag {
	return v.value
}

func (v *NullableSyslogAuditTag) Set(val *SyslogAuditTag) {
	v.value = val
	v.isSet = true
}

func (v NullableSyslogAuditTag) IsSet() bool {
	return v.isSet
}

func (v *NullableSyslogAuditTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyslogAuditTag(val *SyslogAuditTag) *NullableSyslogAuditTag {
	return &NullableSyslogAuditTag{value: val, isSet: true}
}

func (v NullableSyslogAuditTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyslogAuditTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


