/*
 * Cohesity REST API
 *
 * Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package helios
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/helios/utils"
)

var _ = NullableBool{}

// CreateTenantParamsOthers struct for CreateTenantParamsOthers
type CreateTenantParamsOthers struct {
	// Name of the Tenant.
	Name NullableString `json:"name"`
	// This suffix is used by cohesity to generate the actual tenant Id by appending the parent's tenant id to it.
	TenantIdSuffix NullableString `json:"tenantIdSuffix"`
	// Description about the tenant
	Description NullableString `json:"description,omitempty"`
	Network *TenantNetwork `json:"network,omitempty"`
}

// NewCreateTenantParamsOthers instantiates a new CreateTenantParamsOthers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTenantParamsOthers(name NullableString, tenantIdSuffix NullableString) *CreateTenantParamsOthers {
	this := CreateTenantParamsOthers{}
	this.Name = name
	this.TenantIdSuffix = tenantIdSuffix
	return &this
}

// NewCreateTenantParamsOthersWithDefaults instantiates a new CreateTenantParamsOthers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTenantParamsOthersWithDefaults() *CreateTenantParamsOthers {
	this := CreateTenantParamsOthers{}
	return &this
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateTenantParamsOthers) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTenantParamsOthers) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *CreateTenantParamsOthers) SetName(v string) {
	o.Name.Set(&v)
}

// GetTenantIdSuffix returns the TenantIdSuffix field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateTenantParamsOthers) GetTenantIdSuffix() string {
	if o == nil || o.TenantIdSuffix.Get() == nil {
		var ret string
		return ret
	}

	return *o.TenantIdSuffix.Get()
}

// GetTenantIdSuffixOk returns a tuple with the TenantIdSuffix field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTenantParamsOthers) GetTenantIdSuffixOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TenantIdSuffix.Get(), o.TenantIdSuffix.IsSet()
}

// SetTenantIdSuffix sets field value
func (o *CreateTenantParamsOthers) SetTenantIdSuffix(v string) {
	o.TenantIdSuffix.Set(&v)
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTenantParamsOthers) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTenantParamsOthers) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateTenantParamsOthers) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateTenantParamsOthers) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateTenantParamsOthers) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateTenantParamsOthers) UnsetDescription() {
	o.Description.Unset()
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *CreateTenantParamsOthers) GetNetwork() TenantNetwork {
	if o == nil || o.Network == nil {
		var ret TenantNetwork
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTenantParamsOthers) GetNetworkOk() (*TenantNetwork, bool) {
	if o == nil || o.Network == nil {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *CreateTenantParamsOthers) HasNetwork() bool {
	if o != nil && o.Network != nil {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given TenantNetwork and assigns it to the Network field.
func (o *CreateTenantParamsOthers) SetNetwork(v TenantNetwork) {
	o.Network = &v
}

func (o CreateTenantParamsOthers) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name.Get()
	}
	if true {
		toSerialize["tenantIdSuffix"] = o.TenantIdSuffix.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Network != nil {
		toSerialize["network"] = o.Network
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTenantParamsOthers struct {
	value *CreateTenantParamsOthers
	isSet bool
}

func (v NullableCreateTenantParamsOthers) Get() *CreateTenantParamsOthers {
	return v.value
}

func (v *NullableCreateTenantParamsOthers) Set(val *CreateTenantParamsOthers) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTenantParamsOthers) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTenantParamsOthers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTenantParamsOthers(val *CreateTenantParamsOthers) *NullableCreateTenantParamsOthers {
	return &NullableCreateTenantParamsOthers{value: val, isSet: true}
}

func (v NullableCreateTenantParamsOthers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTenantParamsOthers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


