/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// DeployVMsToAzureParams Contains Azure specific information needed to identify various resources when converting and deploying a VM to Azure.
type DeployVMsToAzureParams struct {
	AzureManagedDiskParams *AzureManagedDiskParams `json:"azureManagedDiskParams,omitempty"`
	ComputeOptions *EntityProto `json:"computeOptions,omitempty"`
	NetworkResourceGroup *EntityProto `json:"networkResourceGroup,omitempty"`
	NetworkSecurityGroup *EntityProto `json:"networkSecurityGroup,omitempty"`
	ResourceGroup *EntityProto `json:"resourceGroup,omitempty"`
	StorageAccount *EntityProto `json:"storageAccount,omitempty"`
	StorageContainer *EntityProto `json:"storageContainer,omitempty"`
	StorageKey *EntityProto `json:"storageKey,omitempty"`
	StorageResourceGroup *EntityProto `json:"storageResourceGroup,omitempty"`
	Subnet *EntityProto `json:"subnet,omitempty"`
	TempVmResourceGroup *EntityProto `json:"tempVmResourceGroup,omitempty"`
	TempVmStorageAccount *EntityProto `json:"tempVmStorageAccount,omitempty"`
	TempVmStorageContainer *EntityProto `json:"tempVmStorageContainer,omitempty"`
	TempVmSubnet *EntityProto `json:"tempVmSubnet,omitempty"`
	TempVmVirtualNetwork *EntityProto `json:"tempVmVirtualNetwork,omitempty"`
	VirtualNetwork *EntityProto `json:"virtualNetwork,omitempty"`
}

// NewDeployVMsToAzureParams instantiates a new DeployVMsToAzureParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployVMsToAzureParams() *DeployVMsToAzureParams {
	this := DeployVMsToAzureParams{}
	return &this
}

// NewDeployVMsToAzureParamsWithDefaults instantiates a new DeployVMsToAzureParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployVMsToAzureParamsWithDefaults() *DeployVMsToAzureParams {
	this := DeployVMsToAzureParams{}
	return &this
}

// GetAzureManagedDiskParams returns the AzureManagedDiskParams field value if set, zero value otherwise.
func (o *DeployVMsToAzureParams) GetAzureManagedDiskParams() AzureManagedDiskParams {
	if o == nil || o.AzureManagedDiskParams == nil {
		var ret AzureManagedDiskParams
		return ret
	}
	return *o.AzureManagedDiskParams
}

// GetAzureManagedDiskParamsOk returns a tuple with the AzureManagedDiskParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAzureParams) GetAzureManagedDiskParamsOk() (*AzureManagedDiskParams, bool) {
	if o == nil || o.AzureManagedDiskParams == nil {
		return nil, false
	}
	return o.AzureManagedDiskParams, true
}

// HasAzureManagedDiskParams returns a boolean if a field has been set.
func (o *DeployVMsToAzureParams) HasAzureManagedDiskParams() bool {
	if o != nil && o.AzureManagedDiskParams != nil {
		return true
	}

	return false
}

// SetAzureManagedDiskParams gets a reference to the given AzureManagedDiskParams and assigns it to the AzureManagedDiskParams field.
func (o *DeployVMsToAzureParams) SetAzureManagedDiskParams(v AzureManagedDiskParams) {
	o.AzureManagedDiskParams = &v
}

// GetComputeOptions returns the ComputeOptions field value if set, zero value otherwise.
func (o *DeployVMsToAzureParams) GetComputeOptions() EntityProto {
	if o == nil || o.ComputeOptions == nil {
		var ret EntityProto
		return ret
	}
	return *o.ComputeOptions
}

// GetComputeOptionsOk returns a tuple with the ComputeOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAzureParams) GetComputeOptionsOk() (*EntityProto, bool) {
	if o == nil || o.ComputeOptions == nil {
		return nil, false
	}
	return o.ComputeOptions, true
}

// HasComputeOptions returns a boolean if a field has been set.
func (o *DeployVMsToAzureParams) HasComputeOptions() bool {
	if o != nil && o.ComputeOptions != nil {
		return true
	}

	return false
}

// SetComputeOptions gets a reference to the given EntityProto and assigns it to the ComputeOptions field.
func (o *DeployVMsToAzureParams) SetComputeOptions(v EntityProto) {
	o.ComputeOptions = &v
}

// GetNetworkResourceGroup returns the NetworkResourceGroup field value if set, zero value otherwise.
func (o *DeployVMsToAzureParams) GetNetworkResourceGroup() EntityProto {
	if o == nil || o.NetworkResourceGroup == nil {
		var ret EntityProto
		return ret
	}
	return *o.NetworkResourceGroup
}

// GetNetworkResourceGroupOk returns a tuple with the NetworkResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAzureParams) GetNetworkResourceGroupOk() (*EntityProto, bool) {
	if o == nil || o.NetworkResourceGroup == nil {
		return nil, false
	}
	return o.NetworkResourceGroup, true
}

// HasNetworkResourceGroup returns a boolean if a field has been set.
func (o *DeployVMsToAzureParams) HasNetworkResourceGroup() bool {
	if o != nil && o.NetworkResourceGroup != nil {
		return true
	}

	return false
}

// SetNetworkResourceGroup gets a reference to the given EntityProto and assigns it to the NetworkResourceGroup field.
func (o *DeployVMsToAzureParams) SetNetworkResourceGroup(v EntityProto) {
	o.NetworkResourceGroup = &v
}

// GetNetworkSecurityGroup returns the NetworkSecurityGroup field value if set, zero value otherwise.
func (o *DeployVMsToAzureParams) GetNetworkSecurityGroup() EntityProto {
	if o == nil || o.NetworkSecurityGroup == nil {
		var ret EntityProto
		return ret
	}
	return *o.NetworkSecurityGroup
}

// GetNetworkSecurityGroupOk returns a tuple with the NetworkSecurityGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAzureParams) GetNetworkSecurityGroupOk() (*EntityProto, bool) {
	if o == nil || o.NetworkSecurityGroup == nil {
		return nil, false
	}
	return o.NetworkSecurityGroup, true
}

// HasNetworkSecurityGroup returns a boolean if a field has been set.
func (o *DeployVMsToAzureParams) HasNetworkSecurityGroup() bool {
	if o != nil && o.NetworkSecurityGroup != nil {
		return true
	}

	return false
}

// SetNetworkSecurityGroup gets a reference to the given EntityProto and assigns it to the NetworkSecurityGroup field.
func (o *DeployVMsToAzureParams) SetNetworkSecurityGroup(v EntityProto) {
	o.NetworkSecurityGroup = &v
}

// GetResourceGroup returns the ResourceGroup field value if set, zero value otherwise.
func (o *DeployVMsToAzureParams) GetResourceGroup() EntityProto {
	if o == nil || o.ResourceGroup == nil {
		var ret EntityProto
		return ret
	}
	return *o.ResourceGroup
}

// GetResourceGroupOk returns a tuple with the ResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAzureParams) GetResourceGroupOk() (*EntityProto, bool) {
	if o == nil || o.ResourceGroup == nil {
		return nil, false
	}
	return o.ResourceGroup, true
}

// HasResourceGroup returns a boolean if a field has been set.
func (o *DeployVMsToAzureParams) HasResourceGroup() bool {
	if o != nil && o.ResourceGroup != nil {
		return true
	}

	return false
}

// SetResourceGroup gets a reference to the given EntityProto and assigns it to the ResourceGroup field.
func (o *DeployVMsToAzureParams) SetResourceGroup(v EntityProto) {
	o.ResourceGroup = &v
}

// GetStorageAccount returns the StorageAccount field value if set, zero value otherwise.
func (o *DeployVMsToAzureParams) GetStorageAccount() EntityProto {
	if o == nil || o.StorageAccount == nil {
		var ret EntityProto
		return ret
	}
	return *o.StorageAccount
}

// GetStorageAccountOk returns a tuple with the StorageAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAzureParams) GetStorageAccountOk() (*EntityProto, bool) {
	if o == nil || o.StorageAccount == nil {
		return nil, false
	}
	return o.StorageAccount, true
}

// HasStorageAccount returns a boolean if a field has been set.
func (o *DeployVMsToAzureParams) HasStorageAccount() bool {
	if o != nil && o.StorageAccount != nil {
		return true
	}

	return false
}

// SetStorageAccount gets a reference to the given EntityProto and assigns it to the StorageAccount field.
func (o *DeployVMsToAzureParams) SetStorageAccount(v EntityProto) {
	o.StorageAccount = &v
}

// GetStorageContainer returns the StorageContainer field value if set, zero value otherwise.
func (o *DeployVMsToAzureParams) GetStorageContainer() EntityProto {
	if o == nil || o.StorageContainer == nil {
		var ret EntityProto
		return ret
	}
	return *o.StorageContainer
}

// GetStorageContainerOk returns a tuple with the StorageContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAzureParams) GetStorageContainerOk() (*EntityProto, bool) {
	if o == nil || o.StorageContainer == nil {
		return nil, false
	}
	return o.StorageContainer, true
}

// HasStorageContainer returns a boolean if a field has been set.
func (o *DeployVMsToAzureParams) HasStorageContainer() bool {
	if o != nil && o.StorageContainer != nil {
		return true
	}

	return false
}

// SetStorageContainer gets a reference to the given EntityProto and assigns it to the StorageContainer field.
func (o *DeployVMsToAzureParams) SetStorageContainer(v EntityProto) {
	o.StorageContainer = &v
}

// GetStorageKey returns the StorageKey field value if set, zero value otherwise.
func (o *DeployVMsToAzureParams) GetStorageKey() EntityProto {
	if o == nil || o.StorageKey == nil {
		var ret EntityProto
		return ret
	}
	return *o.StorageKey
}

// GetStorageKeyOk returns a tuple with the StorageKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAzureParams) GetStorageKeyOk() (*EntityProto, bool) {
	if o == nil || o.StorageKey == nil {
		return nil, false
	}
	return o.StorageKey, true
}

// HasStorageKey returns a boolean if a field has been set.
func (o *DeployVMsToAzureParams) HasStorageKey() bool {
	if o != nil && o.StorageKey != nil {
		return true
	}

	return false
}

// SetStorageKey gets a reference to the given EntityProto and assigns it to the StorageKey field.
func (o *DeployVMsToAzureParams) SetStorageKey(v EntityProto) {
	o.StorageKey = &v
}

// GetStorageResourceGroup returns the StorageResourceGroup field value if set, zero value otherwise.
func (o *DeployVMsToAzureParams) GetStorageResourceGroup() EntityProto {
	if o == nil || o.StorageResourceGroup == nil {
		var ret EntityProto
		return ret
	}
	return *o.StorageResourceGroup
}

// GetStorageResourceGroupOk returns a tuple with the StorageResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAzureParams) GetStorageResourceGroupOk() (*EntityProto, bool) {
	if o == nil || o.StorageResourceGroup == nil {
		return nil, false
	}
	return o.StorageResourceGroup, true
}

// HasStorageResourceGroup returns a boolean if a field has been set.
func (o *DeployVMsToAzureParams) HasStorageResourceGroup() bool {
	if o != nil && o.StorageResourceGroup != nil {
		return true
	}

	return false
}

// SetStorageResourceGroup gets a reference to the given EntityProto and assigns it to the StorageResourceGroup field.
func (o *DeployVMsToAzureParams) SetStorageResourceGroup(v EntityProto) {
	o.StorageResourceGroup = &v
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *DeployVMsToAzureParams) GetSubnet() EntityProto {
	if o == nil || o.Subnet == nil {
		var ret EntityProto
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAzureParams) GetSubnetOk() (*EntityProto, bool) {
	if o == nil || o.Subnet == nil {
		return nil, false
	}
	return o.Subnet, true
}

// HasSubnet returns a boolean if a field has been set.
func (o *DeployVMsToAzureParams) HasSubnet() bool {
	if o != nil && o.Subnet != nil {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given EntityProto and assigns it to the Subnet field.
func (o *DeployVMsToAzureParams) SetSubnet(v EntityProto) {
	o.Subnet = &v
}

// GetTempVmResourceGroup returns the TempVmResourceGroup field value if set, zero value otherwise.
func (o *DeployVMsToAzureParams) GetTempVmResourceGroup() EntityProto {
	if o == nil || o.TempVmResourceGroup == nil {
		var ret EntityProto
		return ret
	}
	return *o.TempVmResourceGroup
}

// GetTempVmResourceGroupOk returns a tuple with the TempVmResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAzureParams) GetTempVmResourceGroupOk() (*EntityProto, bool) {
	if o == nil || o.TempVmResourceGroup == nil {
		return nil, false
	}
	return o.TempVmResourceGroup, true
}

// HasTempVmResourceGroup returns a boolean if a field has been set.
func (o *DeployVMsToAzureParams) HasTempVmResourceGroup() bool {
	if o != nil && o.TempVmResourceGroup != nil {
		return true
	}

	return false
}

// SetTempVmResourceGroup gets a reference to the given EntityProto and assigns it to the TempVmResourceGroup field.
func (o *DeployVMsToAzureParams) SetTempVmResourceGroup(v EntityProto) {
	o.TempVmResourceGroup = &v
}

// GetTempVmStorageAccount returns the TempVmStorageAccount field value if set, zero value otherwise.
func (o *DeployVMsToAzureParams) GetTempVmStorageAccount() EntityProto {
	if o == nil || o.TempVmStorageAccount == nil {
		var ret EntityProto
		return ret
	}
	return *o.TempVmStorageAccount
}

// GetTempVmStorageAccountOk returns a tuple with the TempVmStorageAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAzureParams) GetTempVmStorageAccountOk() (*EntityProto, bool) {
	if o == nil || o.TempVmStorageAccount == nil {
		return nil, false
	}
	return o.TempVmStorageAccount, true
}

// HasTempVmStorageAccount returns a boolean if a field has been set.
func (o *DeployVMsToAzureParams) HasTempVmStorageAccount() bool {
	if o != nil && o.TempVmStorageAccount != nil {
		return true
	}

	return false
}

// SetTempVmStorageAccount gets a reference to the given EntityProto and assigns it to the TempVmStorageAccount field.
func (o *DeployVMsToAzureParams) SetTempVmStorageAccount(v EntityProto) {
	o.TempVmStorageAccount = &v
}

// GetTempVmStorageContainer returns the TempVmStorageContainer field value if set, zero value otherwise.
func (o *DeployVMsToAzureParams) GetTempVmStorageContainer() EntityProto {
	if o == nil || o.TempVmStorageContainer == nil {
		var ret EntityProto
		return ret
	}
	return *o.TempVmStorageContainer
}

// GetTempVmStorageContainerOk returns a tuple with the TempVmStorageContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAzureParams) GetTempVmStorageContainerOk() (*EntityProto, bool) {
	if o == nil || o.TempVmStorageContainer == nil {
		return nil, false
	}
	return o.TempVmStorageContainer, true
}

// HasTempVmStorageContainer returns a boolean if a field has been set.
func (o *DeployVMsToAzureParams) HasTempVmStorageContainer() bool {
	if o != nil && o.TempVmStorageContainer != nil {
		return true
	}

	return false
}

// SetTempVmStorageContainer gets a reference to the given EntityProto and assigns it to the TempVmStorageContainer field.
func (o *DeployVMsToAzureParams) SetTempVmStorageContainer(v EntityProto) {
	o.TempVmStorageContainer = &v
}

// GetTempVmSubnet returns the TempVmSubnet field value if set, zero value otherwise.
func (o *DeployVMsToAzureParams) GetTempVmSubnet() EntityProto {
	if o == nil || o.TempVmSubnet == nil {
		var ret EntityProto
		return ret
	}
	return *o.TempVmSubnet
}

// GetTempVmSubnetOk returns a tuple with the TempVmSubnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAzureParams) GetTempVmSubnetOk() (*EntityProto, bool) {
	if o == nil || o.TempVmSubnet == nil {
		return nil, false
	}
	return o.TempVmSubnet, true
}

// HasTempVmSubnet returns a boolean if a field has been set.
func (o *DeployVMsToAzureParams) HasTempVmSubnet() bool {
	if o != nil && o.TempVmSubnet != nil {
		return true
	}

	return false
}

// SetTempVmSubnet gets a reference to the given EntityProto and assigns it to the TempVmSubnet field.
func (o *DeployVMsToAzureParams) SetTempVmSubnet(v EntityProto) {
	o.TempVmSubnet = &v
}

// GetTempVmVirtualNetwork returns the TempVmVirtualNetwork field value if set, zero value otherwise.
func (o *DeployVMsToAzureParams) GetTempVmVirtualNetwork() EntityProto {
	if o == nil || o.TempVmVirtualNetwork == nil {
		var ret EntityProto
		return ret
	}
	return *o.TempVmVirtualNetwork
}

// GetTempVmVirtualNetworkOk returns a tuple with the TempVmVirtualNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAzureParams) GetTempVmVirtualNetworkOk() (*EntityProto, bool) {
	if o == nil || o.TempVmVirtualNetwork == nil {
		return nil, false
	}
	return o.TempVmVirtualNetwork, true
}

// HasTempVmVirtualNetwork returns a boolean if a field has been set.
func (o *DeployVMsToAzureParams) HasTempVmVirtualNetwork() bool {
	if o != nil && o.TempVmVirtualNetwork != nil {
		return true
	}

	return false
}

// SetTempVmVirtualNetwork gets a reference to the given EntityProto and assigns it to the TempVmVirtualNetwork field.
func (o *DeployVMsToAzureParams) SetTempVmVirtualNetwork(v EntityProto) {
	o.TempVmVirtualNetwork = &v
}

// GetVirtualNetwork returns the VirtualNetwork field value if set, zero value otherwise.
func (o *DeployVMsToAzureParams) GetVirtualNetwork() EntityProto {
	if o == nil || o.VirtualNetwork == nil {
		var ret EntityProto
		return ret
	}
	return *o.VirtualNetwork
}

// GetVirtualNetworkOk returns a tuple with the VirtualNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAzureParams) GetVirtualNetworkOk() (*EntityProto, bool) {
	if o == nil || o.VirtualNetwork == nil {
		return nil, false
	}
	return o.VirtualNetwork, true
}

// HasVirtualNetwork returns a boolean if a field has been set.
func (o *DeployVMsToAzureParams) HasVirtualNetwork() bool {
	if o != nil && o.VirtualNetwork != nil {
		return true
	}

	return false
}

// SetVirtualNetwork gets a reference to the given EntityProto and assigns it to the VirtualNetwork field.
func (o *DeployVMsToAzureParams) SetVirtualNetwork(v EntityProto) {
	o.VirtualNetwork = &v
}

func (o DeployVMsToAzureParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AzureManagedDiskParams != nil {
		toSerialize["azureManagedDiskParams"] = o.AzureManagedDiskParams
	}
	if o.ComputeOptions != nil {
		toSerialize["computeOptions"] = o.ComputeOptions
	}
	if o.NetworkResourceGroup != nil {
		toSerialize["networkResourceGroup"] = o.NetworkResourceGroup
	}
	if o.NetworkSecurityGroup != nil {
		toSerialize["networkSecurityGroup"] = o.NetworkSecurityGroup
	}
	if o.ResourceGroup != nil {
		toSerialize["resourceGroup"] = o.ResourceGroup
	}
	if o.StorageAccount != nil {
		toSerialize["storageAccount"] = o.StorageAccount
	}
	if o.StorageContainer != nil {
		toSerialize["storageContainer"] = o.StorageContainer
	}
	if o.StorageKey != nil {
		toSerialize["storageKey"] = o.StorageKey
	}
	if o.StorageResourceGroup != nil {
		toSerialize["storageResourceGroup"] = o.StorageResourceGroup
	}
	if o.Subnet != nil {
		toSerialize["subnet"] = o.Subnet
	}
	if o.TempVmResourceGroup != nil {
		toSerialize["tempVmResourceGroup"] = o.TempVmResourceGroup
	}
	if o.TempVmStorageAccount != nil {
		toSerialize["tempVmStorageAccount"] = o.TempVmStorageAccount
	}
	if o.TempVmStorageContainer != nil {
		toSerialize["tempVmStorageContainer"] = o.TempVmStorageContainer
	}
	if o.TempVmSubnet != nil {
		toSerialize["tempVmSubnet"] = o.TempVmSubnet
	}
	if o.TempVmVirtualNetwork != nil {
		toSerialize["tempVmVirtualNetwork"] = o.TempVmVirtualNetwork
	}
	if o.VirtualNetwork != nil {
		toSerialize["virtualNetwork"] = o.VirtualNetwork
	}
	return json.Marshal(toSerialize)
}

type NullableDeployVMsToAzureParams struct {
	value *DeployVMsToAzureParams
	isSet bool
}

func (v NullableDeployVMsToAzureParams) Get() *DeployVMsToAzureParams {
	return v.value
}

func (v *NullableDeployVMsToAzureParams) Set(val *DeployVMsToAzureParams) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployVMsToAzureParams) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployVMsToAzureParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployVMsToAzureParams(val *DeployVMsToAzureParams) *NullableDeployVMsToAzureParams {
	return &NullableDeployVMsToAzureParams{value: val, isSet: true}
}

func (v NullableDeployVMsToAzureParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployVMsToAzureParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


