/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// OutlookMailbox Specifies the Outlook mailbox with restore details to support full or partial recovery.
type OutlookMailbox struct {
	MailboxObject *RestoreObjectDetails `json:"mailboxObject,omitempty"`
	// Specifies the list of folders to be restored incase user wishes not to restore entire mailbox.
	OutlookFolderList []OutlookFolder `json:"outlookFolderList,omitempty"`
	// Specifies whether the entire mailbox is to be restored.
	RestoreEntireMailbox NullableBool `json:"restoreEntireMailbox,omitempty"`
}

// NewOutlookMailbox instantiates a new OutlookMailbox object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutlookMailbox() *OutlookMailbox {
	this := OutlookMailbox{}
	return &this
}

// NewOutlookMailboxWithDefaults instantiates a new OutlookMailbox object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutlookMailboxWithDefaults() *OutlookMailbox {
	this := OutlookMailbox{}
	return &this
}

// GetMailboxObject returns the MailboxObject field value if set, zero value otherwise.
func (o *OutlookMailbox) GetMailboxObject() RestoreObjectDetails {
	if o == nil || o.MailboxObject == nil {
		var ret RestoreObjectDetails
		return ret
	}
	return *o.MailboxObject
}

// GetMailboxObjectOk returns a tuple with the MailboxObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutlookMailbox) GetMailboxObjectOk() (*RestoreObjectDetails, bool) {
	if o == nil || o.MailboxObject == nil {
		return nil, false
	}
	return o.MailboxObject, true
}

// HasMailboxObject returns a boolean if a field has been set.
func (o *OutlookMailbox) HasMailboxObject() bool {
	if o != nil && o.MailboxObject != nil {
		return true
	}

	return false
}

// SetMailboxObject gets a reference to the given RestoreObjectDetails and assigns it to the MailboxObject field.
func (o *OutlookMailbox) SetMailboxObject(v RestoreObjectDetails) {
	o.MailboxObject = &v
}

// GetOutlookFolderList returns the OutlookFolderList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutlookMailbox) GetOutlookFolderList() []OutlookFolder {
	if o == nil  {
		var ret []OutlookFolder
		return ret
	}
	return o.OutlookFolderList
}

// GetOutlookFolderListOk returns a tuple with the OutlookFolderList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutlookMailbox) GetOutlookFolderListOk() (*[]OutlookFolder, bool) {
	if o == nil || o.OutlookFolderList == nil {
		return nil, false
	}
	return &o.OutlookFolderList, true
}

// HasOutlookFolderList returns a boolean if a field has been set.
func (o *OutlookMailbox) HasOutlookFolderList() bool {
	if o != nil && o.OutlookFolderList != nil {
		return true
	}

	return false
}

// SetOutlookFolderList gets a reference to the given []OutlookFolder and assigns it to the OutlookFolderList field.
func (o *OutlookMailbox) SetOutlookFolderList(v []OutlookFolder) {
	o.OutlookFolderList = v
}

// GetRestoreEntireMailbox returns the RestoreEntireMailbox field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutlookMailbox) GetRestoreEntireMailbox() bool {
	if o == nil || o.RestoreEntireMailbox.Get() == nil {
		var ret bool
		return ret
	}
	return *o.RestoreEntireMailbox.Get()
}

// GetRestoreEntireMailboxOk returns a tuple with the RestoreEntireMailbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutlookMailbox) GetRestoreEntireMailboxOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RestoreEntireMailbox.Get(), o.RestoreEntireMailbox.IsSet()
}

// HasRestoreEntireMailbox returns a boolean if a field has been set.
func (o *OutlookMailbox) HasRestoreEntireMailbox() bool {
	if o != nil && o.RestoreEntireMailbox.IsSet() {
		return true
	}

	return false
}

// SetRestoreEntireMailbox gets a reference to the given NullableBool and assigns it to the RestoreEntireMailbox field.
func (o *OutlookMailbox) SetRestoreEntireMailbox(v bool) {
	o.RestoreEntireMailbox.Set(&v)
}
// SetRestoreEntireMailboxNil sets the value for RestoreEntireMailbox to be an explicit nil
func (o *OutlookMailbox) SetRestoreEntireMailboxNil() {
	o.RestoreEntireMailbox.Set(nil)
}

// UnsetRestoreEntireMailbox ensures that no value is present for RestoreEntireMailbox, not even an explicit nil
func (o *OutlookMailbox) UnsetRestoreEntireMailbox() {
	o.RestoreEntireMailbox.Unset()
}

func (o OutlookMailbox) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MailboxObject != nil {
		toSerialize["mailboxObject"] = o.MailboxObject
	}
	if o.OutlookFolderList != nil {
		toSerialize["outlookFolderList"] = o.OutlookFolderList
	}
	if o.RestoreEntireMailbox.IsSet() {
		toSerialize["restoreEntireMailbox"] = o.RestoreEntireMailbox.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOutlookMailbox struct {
	value *OutlookMailbox
	isSet bool
}

func (v NullableOutlookMailbox) Get() *OutlookMailbox {
	return v.value
}

func (v *NullableOutlookMailbox) Set(val *OutlookMailbox) {
	v.value = val
	v.isSet = true
}

func (v NullableOutlookMailbox) IsSet() bool {
	return v.isSet
}

func (v *NullableOutlookMailbox) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutlookMailbox(val *OutlookMailbox) *NullableOutlookMailbox {
	return &NullableOutlookMailbox{value: val, isSet: true}
}

func (v NullableOutlookMailbox) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutlookMailbox) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


