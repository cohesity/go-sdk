/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// CreateRemoteVaultSearchJobParameters Specifies settings required to create a search of a remote Vault for data that has been archived from other Clusters.
type CreateRemoteVaultSearchJobParameters struct {
	// Filter by specifying a Cluster name prefix string. Only Clusters with names that start with this prefix string are returned in the search result. If not set, all Clusters archiving data to the Vault are returned in the search results.
	ClusterMatchString NullableString `json:"clusterMatchString,omitempty"`
	// Array of Encryption Keys.  Specifies an optional list of encryption keys that may be needed to search and restore data that was archived to a remote Vault. Archived data cannot be searched or restored without the corresponding encryption key used by the original Cluster to archive the data. Encryption keys can be uploaded using the REST API public/remoteVaults/encryptionKeys operation. If the key is already uploaded, this field does not need to be specified.
	EncryptionKeys []VaultEncryptionKey `json:"encryptionKeys,omitempty"`
	// Filter by a end time specified as a Unix epoch Timestamp (in microseconds). Only Job Runs that completed before the specified end time are included in the search results.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	// Filter by specifying a Protection Job name prefix string. Only Protection Jobs with names that start with this prefix string are returned in the search result. If not set, all Protection Jobs archiving data to the Vault are returned in the search results.
	JobMatchString NullableString `json:"jobMatchString,omitempty"`
	// Specifies the search Job name.
	SearchJobName NullableString `json:"searchJobName"`
	// Filter by a start time specified as a Unix epoch Timestamp (in microseconds). Only Job Runs that started after the specified time are included in the search results.
	StartTimeUsecs NullableInt64 `json:"startTimeUsecs,omitempty"`
	// Specifies the id of the Vault to search. This id was assigned by the local Cohesity Cluster when Vault was registered as an External Target.
	VaultId NullableInt64 `json:"vaultId"`
}

// NewCreateRemoteVaultSearchJobParameters instantiates a new CreateRemoteVaultSearchJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRemoteVaultSearchJobParameters(searchJobName NullableString, vaultId NullableInt64) *CreateRemoteVaultSearchJobParameters {
	this := CreateRemoteVaultSearchJobParameters{}
	this.SearchJobName = searchJobName
	this.VaultId = vaultId
	return &this
}

// NewCreateRemoteVaultSearchJobParametersWithDefaults instantiates a new CreateRemoteVaultSearchJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRemoteVaultSearchJobParametersWithDefaults() *CreateRemoteVaultSearchJobParameters {
	this := CreateRemoteVaultSearchJobParameters{}
	return &this
}

// GetClusterMatchString returns the ClusterMatchString field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateRemoteVaultSearchJobParameters) GetClusterMatchString() string {
	if o == nil || o.ClusterMatchString.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClusterMatchString.Get()
}

// GetClusterMatchStringOk returns a tuple with the ClusterMatchString field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRemoteVaultSearchJobParameters) GetClusterMatchStringOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterMatchString.Get(), o.ClusterMatchString.IsSet()
}

// HasClusterMatchString returns a boolean if a field has been set.
func (o *CreateRemoteVaultSearchJobParameters) HasClusterMatchString() bool {
	if o != nil && o.ClusterMatchString.IsSet() {
		return true
	}

	return false
}

// SetClusterMatchString gets a reference to the given NullableString and assigns it to the ClusterMatchString field.
func (o *CreateRemoteVaultSearchJobParameters) SetClusterMatchString(v string) {
	o.ClusterMatchString.Set(&v)
}
// SetClusterMatchStringNil sets the value for ClusterMatchString to be an explicit nil
func (o *CreateRemoteVaultSearchJobParameters) SetClusterMatchStringNil() {
	o.ClusterMatchString.Set(nil)
}

// UnsetClusterMatchString ensures that no value is present for ClusterMatchString, not even an explicit nil
func (o *CreateRemoteVaultSearchJobParameters) UnsetClusterMatchString() {
	o.ClusterMatchString.Unset()
}

// GetEncryptionKeys returns the EncryptionKeys field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateRemoteVaultSearchJobParameters) GetEncryptionKeys() []VaultEncryptionKey {
	if o == nil  {
		var ret []VaultEncryptionKey
		return ret
	}
	return o.EncryptionKeys
}

// GetEncryptionKeysOk returns a tuple with the EncryptionKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRemoteVaultSearchJobParameters) GetEncryptionKeysOk() (*[]VaultEncryptionKey, bool) {
	if o == nil || o.EncryptionKeys == nil {
		return nil, false
	}
	return &o.EncryptionKeys, true
}

// HasEncryptionKeys returns a boolean if a field has been set.
func (o *CreateRemoteVaultSearchJobParameters) HasEncryptionKeys() bool {
	if o != nil && o.EncryptionKeys != nil {
		return true
	}

	return false
}

// SetEncryptionKeys gets a reference to the given []VaultEncryptionKey and assigns it to the EncryptionKeys field.
func (o *CreateRemoteVaultSearchJobParameters) SetEncryptionKeys(v []VaultEncryptionKey) {
	o.EncryptionKeys = v
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateRemoteVaultSearchJobParameters) GetEndTimeUsecs() int64 {
	if o == nil || o.EndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRemoteVaultSearchJobParameters) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *CreateRemoteVaultSearchJobParameters) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *CreateRemoteVaultSearchJobParameters) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *CreateRemoteVaultSearchJobParameters) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *CreateRemoteVaultSearchJobParameters) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetJobMatchString returns the JobMatchString field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateRemoteVaultSearchJobParameters) GetJobMatchString() string {
	if o == nil || o.JobMatchString.Get() == nil {
		var ret string
		return ret
	}
	return *o.JobMatchString.Get()
}

// GetJobMatchStringOk returns a tuple with the JobMatchString field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRemoteVaultSearchJobParameters) GetJobMatchStringOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobMatchString.Get(), o.JobMatchString.IsSet()
}

// HasJobMatchString returns a boolean if a field has been set.
func (o *CreateRemoteVaultSearchJobParameters) HasJobMatchString() bool {
	if o != nil && o.JobMatchString.IsSet() {
		return true
	}

	return false
}

// SetJobMatchString gets a reference to the given NullableString and assigns it to the JobMatchString field.
func (o *CreateRemoteVaultSearchJobParameters) SetJobMatchString(v string) {
	o.JobMatchString.Set(&v)
}
// SetJobMatchStringNil sets the value for JobMatchString to be an explicit nil
func (o *CreateRemoteVaultSearchJobParameters) SetJobMatchStringNil() {
	o.JobMatchString.Set(nil)
}

// UnsetJobMatchString ensures that no value is present for JobMatchString, not even an explicit nil
func (o *CreateRemoteVaultSearchJobParameters) UnsetJobMatchString() {
	o.JobMatchString.Unset()
}

// GetSearchJobName returns the SearchJobName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateRemoteVaultSearchJobParameters) GetSearchJobName() string {
	if o == nil || o.SearchJobName.Get() == nil {
		var ret string
		return ret
	}

	return *o.SearchJobName.Get()
}

// GetSearchJobNameOk returns a tuple with the SearchJobName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRemoteVaultSearchJobParameters) GetSearchJobNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SearchJobName.Get(), o.SearchJobName.IsSet()
}

// SetSearchJobName sets field value
func (o *CreateRemoteVaultSearchJobParameters) SetSearchJobName(v string) {
	o.SearchJobName.Set(&v)
}

// GetStartTimeUsecs returns the StartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateRemoteVaultSearchJobParameters) GetStartTimeUsecs() int64 {
	if o == nil || o.StartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StartTimeUsecs.Get()
}

// GetStartTimeUsecsOk returns a tuple with the StartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRemoteVaultSearchJobParameters) GetStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartTimeUsecs.Get(), o.StartTimeUsecs.IsSet()
}

// HasStartTimeUsecs returns a boolean if a field has been set.
func (o *CreateRemoteVaultSearchJobParameters) HasStartTimeUsecs() bool {
	if o != nil && o.StartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the StartTimeUsecs field.
func (o *CreateRemoteVaultSearchJobParameters) SetStartTimeUsecs(v int64) {
	o.StartTimeUsecs.Set(&v)
}
// SetStartTimeUsecsNil sets the value for StartTimeUsecs to be an explicit nil
func (o *CreateRemoteVaultSearchJobParameters) SetStartTimeUsecsNil() {
	o.StartTimeUsecs.Set(nil)
}

// UnsetStartTimeUsecs ensures that no value is present for StartTimeUsecs, not even an explicit nil
func (o *CreateRemoteVaultSearchJobParameters) UnsetStartTimeUsecs() {
	o.StartTimeUsecs.Unset()
}

// GetVaultId returns the VaultId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *CreateRemoteVaultSearchJobParameters) GetVaultId() int64 {
	if o == nil || o.VaultId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.VaultId.Get()
}

// GetVaultIdOk returns a tuple with the VaultId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRemoteVaultSearchJobParameters) GetVaultIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VaultId.Get(), o.VaultId.IsSet()
}

// SetVaultId sets field value
func (o *CreateRemoteVaultSearchJobParameters) SetVaultId(v int64) {
	o.VaultId.Set(&v)
}

func (o CreateRemoteVaultSearchJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterMatchString.IsSet() {
		toSerialize["clusterMatchString"] = o.ClusterMatchString.Get()
	}
	if o.EncryptionKeys != nil {
		toSerialize["encryptionKeys"] = o.EncryptionKeys
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.JobMatchString.IsSet() {
		toSerialize["jobMatchString"] = o.JobMatchString.Get()
	}
	if true {
		toSerialize["searchJobName"] = o.SearchJobName.Get()
	}
	if o.StartTimeUsecs.IsSet() {
		toSerialize["startTimeUsecs"] = o.StartTimeUsecs.Get()
	}
	if true {
		toSerialize["vaultId"] = o.VaultId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCreateRemoteVaultSearchJobParameters struct {
	value *CreateRemoteVaultSearchJobParameters
	isSet bool
}

func (v NullableCreateRemoteVaultSearchJobParameters) Get() *CreateRemoteVaultSearchJobParameters {
	return v.value
}

func (v *NullableCreateRemoteVaultSearchJobParameters) Set(val *CreateRemoteVaultSearchJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRemoteVaultSearchJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRemoteVaultSearchJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRemoteVaultSearchJobParameters(val *CreateRemoteVaultSearchJobParameters) *NullableCreateRemoteVaultSearchJobParameters {
	return &NullableCreateRemoteVaultSearchJobParameters{value: val, isSet: true}
}

func (v NullableCreateRemoteVaultSearchJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRemoteVaultSearchJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


