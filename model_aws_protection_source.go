/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// AwsProtectionSource Specifies a Protection Source in AWS environment.
type AwsProtectionSource struct {
	// Specifies Access key of the AWS account.
	AccessKey NullableString `json:"accessKey,omitempty"`
	// Specifies Amazon Resource Name (owner ID) of the IAM user, act as an unique identifier of as AWS entity.
	AmazonResourceName NullableString `json:"amazonResourceName,omitempty"`
	// Specifies the authentication method to be used for API calls. Specifies the authentication method to be used for API calls. 'kUseIAMUser' indicates a user based authentication. 'kUseIAMRole' indicates a role based authentication, used only for AWS CE.
	AuthMethod NullableString `json:"authMethod,omitempty"`
	AwsFleetParams *AwsFleetParams `json:"awsFleetParams,omitempty"`
	// Specifies the entity type such as 'kIAMUser' if the environment is kAWS. Specifies the type of an AWS source entity. 'kIAMUser' indicates a unique user within an AWS account. 'kRegion' indicates a geographical region in the global infrastructure. 'kAvailabilityZone' indicates an availability zone within a region. 'kEC2Instance' indicates a Virtual Machine running in AWS environment. 'kVPC' indicates a virtual private cloud (VPC) network within AWS. 'kSubnet' indicates a subnet inside the VPC. 'kNetworkSecurityGroup' represents a network security group. 'kInstanceType' represents various machine types. 'kKeyPair' represents a pair of public and private key used to login into a Virtual Machine. 'kTag' represents a tag attached to EC2 instance. 'kRDSOptionGroup' represents a RDS option group for configuring database features. 'kRDSParameterGroup' represents a RDS parameter group. 'kRDSInstance' represents a RDS DB instance. 'kRDSSubnet' represents a RDS subnet. 'kRDSTag' represents a tag attached to RDS instance.
	AwsType NullableString `json:"awsType,omitempty"`
	ClusterNetworkInfo *FleetNetworkParams `json:"clusterNetworkInfo,omitempty"`
	// Specifies DB engine version info of the entity. This is populated only for RDSInstance, RDSOptionGroup and RDSParameterGroup entity types.
	DbEngineId NullableString `json:"dbEngineId,omitempty"`
	// Specifies the OS type of the Protection Source of type 'kVirtualMachine' such as 'kWindows' or 'kLinux'. overrideDescription: true 'kLinux' indicates the Linux operating system. 'kWindows' indicates the Microsoft Windows operating system. 'kAix' indicates the IBM AIX operating system. 'kSolaris' indicates the Oracle Solaris operating system. 'kSapHana' indicates the Sap Hana database system developed by SAP SE. 'kOther' indicates the other types of operating system.
	HostType NullableString `json:"hostType,omitempty"`
	// Specifies the IAM role which will be used to access the security credentials required for API calls.
	IamRoleArn NullableString `json:"iamRoleArn,omitempty"`
	// Specifies the IP address of the entity of type 'kVirtualMachine'.
	IpAddresses NullableString `json:"ipAddresses,omitempty"`
	// Specifies the name of the Object set by the Cloud Provider. If the provider did not set a name for the object, this field is not set.
	Name NullableString `json:"name,omitempty"`
	// Specifies the owner id of the resource in AWS environment. With type, name and ownerId gives a globally unique identity to the AWS entity.
	OwnerId NullableString `json:"ownerId,omitempty"`
	// Specifies the Protection Source id of the registered Physical Host. If the cloud entity is protected using a Physical Agent, it must be registered as a physical host.
	PhysicalSourceId NullableInt64 `json:"physicalSourceId,omitempty"`
	// Specifies the region Id of the entity if the entity is an EC2 instance.
	RegionId NullableString `json:"regionId,omitempty"`
	// Specifies the unique Id of the resource given by the cloud provider.
	ResourceId NullableString `json:"resourceId,omitempty"`
	// Specifies the id of the \"convert and deploy\" restore task that created the entity in the cloud.  It is required to support the DR-to-cloud usecase where we replicate an on-prem entity to a cluster running in cloud, bring it up using \"convert and deploy\" mechanism, protect it using a cloud job that uses physical adapter, and convert it back to the on-prem format before replication.  Before replicating, we need to update the backup task state of the backed up entity using the on-prem entity and on-prem entity's parent. The id is used to lookup the restore entity that contains details about the on-prem entity.  It is set at the time of refreshing the cloud entity hierarchy if all the following conditions are met: Name of the current entity matches with name of any cloud entity deployed using the \"convert and deploy\" restore task. Restore entity associated with the above matched cloud entity has 'failed_over' flag set to true in its cloud extension.
	RestoreTaskId NullableInt64 `json:"restoreTaskId,omitempty"`
	// Specifies Secret Access key of the AWS account.
	SecretAccessKey NullableString `json:"secretAccessKey,omitempty"`
	// Specifies the subscription type of AWS such as 'kAWSCommercial' or 'kAWSGovCloud'. Specifies the subscription type of an AWS source entity. 'kAWSCommercial' indicates a standard AWS subscription. 'kAWSGovCloud' indicates a govt AWS subscription.
	SubscriptionType NullableString `json:"subscriptionType,omitempty"`
	// Specifies the list of AWS tag attributes.
	TagAttributes []TagAttribute `json:"tagAttributes,omitempty"`
	// Specifies the type of an AWS Protection Source Object such as 'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc. Specifies the type of an AWS source entity. 'kIAMUser' indicates a unique user within an AWS account. 'kRegion' indicates a geographical region in the global infrastructure. 'kAvailabilityZone' indicates an availability zone within a region. 'kEC2Instance' indicates a Virtual Machine running in AWS environment. 'kVPC' indicates a virtual private cloud (VPC) network within AWS. 'kSubnet' indicates a subnet inside the VPC. 'kNetworkSecurityGroup' represents a network security group. 'kInstanceType' represents various machine types. 'kKeyPair' represents a pair of public and private key used to login into a Virtual Machine. 'kTag' represents a tag attached to EC2 instance. 'kRDSOptionGroup' represents a RDS option group for configuring database features. 'kRDSParameterGroup' represents a RDS parameter group. 'kRDSInstance' represents a RDS DB instance. 'kRDSSubnet' represents a RDS subnet. 'kRDSTag' represents a tag attached to RDS instance.
	Type NullableString `json:"type,omitempty"`
	// Specifies the account id derived from the ARN of the user.
	UserAccountId NullableString `json:"userAccountId,omitempty"`
	// Specifies the Amazon Resource Name (ARN) of the user.
	UserResourceName NullableString `json:"userResourceName,omitempty"`
}

// NewAwsProtectionSource instantiates a new AwsProtectionSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsProtectionSource() *AwsProtectionSource {
	this := AwsProtectionSource{}
	return &this
}

// NewAwsProtectionSourceWithDefaults instantiates a new AwsProtectionSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsProtectionSourceWithDefaults() *AwsProtectionSource {
	this := AwsProtectionSource{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetAccessKey() string {
	if o == nil || o.AccessKey.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccessKey.Get()
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetAccessKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccessKey.Get(), o.AccessKey.IsSet()
}

// HasAccessKey returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasAccessKey() bool {
	if o != nil && o.AccessKey.IsSet() {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given NullableString and assigns it to the AccessKey field.
func (o *AwsProtectionSource) SetAccessKey(v string) {
	o.AccessKey.Set(&v)
}
// SetAccessKeyNil sets the value for AccessKey to be an explicit nil
func (o *AwsProtectionSource) SetAccessKeyNil() {
	o.AccessKey.Set(nil)
}

// UnsetAccessKey ensures that no value is present for AccessKey, not even an explicit nil
func (o *AwsProtectionSource) UnsetAccessKey() {
	o.AccessKey.Unset()
}

// GetAmazonResourceName returns the AmazonResourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetAmazonResourceName() string {
	if o == nil || o.AmazonResourceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.AmazonResourceName.Get()
}

// GetAmazonResourceNameOk returns a tuple with the AmazonResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetAmazonResourceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AmazonResourceName.Get(), o.AmazonResourceName.IsSet()
}

// HasAmazonResourceName returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasAmazonResourceName() bool {
	if o != nil && o.AmazonResourceName.IsSet() {
		return true
	}

	return false
}

// SetAmazonResourceName gets a reference to the given NullableString and assigns it to the AmazonResourceName field.
func (o *AwsProtectionSource) SetAmazonResourceName(v string) {
	o.AmazonResourceName.Set(&v)
}
// SetAmazonResourceNameNil sets the value for AmazonResourceName to be an explicit nil
func (o *AwsProtectionSource) SetAmazonResourceNameNil() {
	o.AmazonResourceName.Set(nil)
}

// UnsetAmazonResourceName ensures that no value is present for AmazonResourceName, not even an explicit nil
func (o *AwsProtectionSource) UnsetAmazonResourceName() {
	o.AmazonResourceName.Unset()
}

// GetAuthMethod returns the AuthMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetAuthMethod() string {
	if o == nil || o.AuthMethod.Get() == nil {
		var ret string
		return ret
	}
	return *o.AuthMethod.Get()
}

// GetAuthMethodOk returns a tuple with the AuthMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetAuthMethodOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AuthMethod.Get(), o.AuthMethod.IsSet()
}

// HasAuthMethod returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasAuthMethod() bool {
	if o != nil && o.AuthMethod.IsSet() {
		return true
	}

	return false
}

// SetAuthMethod gets a reference to the given NullableString and assigns it to the AuthMethod field.
func (o *AwsProtectionSource) SetAuthMethod(v string) {
	o.AuthMethod.Set(&v)
}
// SetAuthMethodNil sets the value for AuthMethod to be an explicit nil
func (o *AwsProtectionSource) SetAuthMethodNil() {
	o.AuthMethod.Set(nil)
}

// UnsetAuthMethod ensures that no value is present for AuthMethod, not even an explicit nil
func (o *AwsProtectionSource) UnsetAuthMethod() {
	o.AuthMethod.Unset()
}

// GetAwsFleetParams returns the AwsFleetParams field value if set, zero value otherwise.
func (o *AwsProtectionSource) GetAwsFleetParams() AwsFleetParams {
	if o == nil || o.AwsFleetParams == nil {
		var ret AwsFleetParams
		return ret
	}
	return *o.AwsFleetParams
}

// GetAwsFleetParamsOk returns a tuple with the AwsFleetParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProtectionSource) GetAwsFleetParamsOk() (*AwsFleetParams, bool) {
	if o == nil || o.AwsFleetParams == nil {
		return nil, false
	}
	return o.AwsFleetParams, true
}

// HasAwsFleetParams returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasAwsFleetParams() bool {
	if o != nil && o.AwsFleetParams != nil {
		return true
	}

	return false
}

// SetAwsFleetParams gets a reference to the given AwsFleetParams and assigns it to the AwsFleetParams field.
func (o *AwsProtectionSource) SetAwsFleetParams(v AwsFleetParams) {
	o.AwsFleetParams = &v
}

// GetAwsType returns the AwsType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetAwsType() string {
	if o == nil || o.AwsType.Get() == nil {
		var ret string
		return ret
	}
	return *o.AwsType.Get()
}

// GetAwsTypeOk returns a tuple with the AwsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetAwsTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AwsType.Get(), o.AwsType.IsSet()
}

// HasAwsType returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasAwsType() bool {
	if o != nil && o.AwsType.IsSet() {
		return true
	}

	return false
}

// SetAwsType gets a reference to the given NullableString and assigns it to the AwsType field.
func (o *AwsProtectionSource) SetAwsType(v string) {
	o.AwsType.Set(&v)
}
// SetAwsTypeNil sets the value for AwsType to be an explicit nil
func (o *AwsProtectionSource) SetAwsTypeNil() {
	o.AwsType.Set(nil)
}

// UnsetAwsType ensures that no value is present for AwsType, not even an explicit nil
func (o *AwsProtectionSource) UnsetAwsType() {
	o.AwsType.Unset()
}

// GetClusterNetworkInfo returns the ClusterNetworkInfo field value if set, zero value otherwise.
func (o *AwsProtectionSource) GetClusterNetworkInfo() FleetNetworkParams {
	if o == nil || o.ClusterNetworkInfo == nil {
		var ret FleetNetworkParams
		return ret
	}
	return *o.ClusterNetworkInfo
}

// GetClusterNetworkInfoOk returns a tuple with the ClusterNetworkInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProtectionSource) GetClusterNetworkInfoOk() (*FleetNetworkParams, bool) {
	if o == nil || o.ClusterNetworkInfo == nil {
		return nil, false
	}
	return o.ClusterNetworkInfo, true
}

// HasClusterNetworkInfo returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasClusterNetworkInfo() bool {
	if o != nil && o.ClusterNetworkInfo != nil {
		return true
	}

	return false
}

// SetClusterNetworkInfo gets a reference to the given FleetNetworkParams and assigns it to the ClusterNetworkInfo field.
func (o *AwsProtectionSource) SetClusterNetworkInfo(v FleetNetworkParams) {
	o.ClusterNetworkInfo = &v
}

// GetDbEngineId returns the DbEngineId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetDbEngineId() string {
	if o == nil || o.DbEngineId.Get() == nil {
		var ret string
		return ret
	}
	return *o.DbEngineId.Get()
}

// GetDbEngineIdOk returns a tuple with the DbEngineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetDbEngineIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DbEngineId.Get(), o.DbEngineId.IsSet()
}

// HasDbEngineId returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasDbEngineId() bool {
	if o != nil && o.DbEngineId.IsSet() {
		return true
	}

	return false
}

// SetDbEngineId gets a reference to the given NullableString and assigns it to the DbEngineId field.
func (o *AwsProtectionSource) SetDbEngineId(v string) {
	o.DbEngineId.Set(&v)
}
// SetDbEngineIdNil sets the value for DbEngineId to be an explicit nil
func (o *AwsProtectionSource) SetDbEngineIdNil() {
	o.DbEngineId.Set(nil)
}

// UnsetDbEngineId ensures that no value is present for DbEngineId, not even an explicit nil
func (o *AwsProtectionSource) UnsetDbEngineId() {
	o.DbEngineId.Unset()
}

// GetHostType returns the HostType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetHostType() string {
	if o == nil || o.HostType.Get() == nil {
		var ret string
		return ret
	}
	return *o.HostType.Get()
}

// GetHostTypeOk returns a tuple with the HostType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetHostTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HostType.Get(), o.HostType.IsSet()
}

// HasHostType returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasHostType() bool {
	if o != nil && o.HostType.IsSet() {
		return true
	}

	return false
}

// SetHostType gets a reference to the given NullableString and assigns it to the HostType field.
func (o *AwsProtectionSource) SetHostType(v string) {
	o.HostType.Set(&v)
}
// SetHostTypeNil sets the value for HostType to be an explicit nil
func (o *AwsProtectionSource) SetHostTypeNil() {
	o.HostType.Set(nil)
}

// UnsetHostType ensures that no value is present for HostType, not even an explicit nil
func (o *AwsProtectionSource) UnsetHostType() {
	o.HostType.Unset()
}

// GetIamRoleArn returns the IamRoleArn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetIamRoleArn() string {
	if o == nil || o.IamRoleArn.Get() == nil {
		var ret string
		return ret
	}
	return *o.IamRoleArn.Get()
}

// GetIamRoleArnOk returns a tuple with the IamRoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetIamRoleArnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IamRoleArn.Get(), o.IamRoleArn.IsSet()
}

// HasIamRoleArn returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasIamRoleArn() bool {
	if o != nil && o.IamRoleArn.IsSet() {
		return true
	}

	return false
}

// SetIamRoleArn gets a reference to the given NullableString and assigns it to the IamRoleArn field.
func (o *AwsProtectionSource) SetIamRoleArn(v string) {
	o.IamRoleArn.Set(&v)
}
// SetIamRoleArnNil sets the value for IamRoleArn to be an explicit nil
func (o *AwsProtectionSource) SetIamRoleArnNil() {
	o.IamRoleArn.Set(nil)
}

// UnsetIamRoleArn ensures that no value is present for IamRoleArn, not even an explicit nil
func (o *AwsProtectionSource) UnsetIamRoleArn() {
	o.IamRoleArn.Unset()
}

// GetIpAddresses returns the IpAddresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetIpAddresses() string {
	if o == nil || o.IpAddresses.Get() == nil {
		var ret string
		return ret
	}
	return *o.IpAddresses.Get()
}

// GetIpAddressesOk returns a tuple with the IpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetIpAddressesOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IpAddresses.Get(), o.IpAddresses.IsSet()
}

// HasIpAddresses returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasIpAddresses() bool {
	if o != nil && o.IpAddresses.IsSet() {
		return true
	}

	return false
}

// SetIpAddresses gets a reference to the given NullableString and assigns it to the IpAddresses field.
func (o *AwsProtectionSource) SetIpAddresses(v string) {
	o.IpAddresses.Set(&v)
}
// SetIpAddressesNil sets the value for IpAddresses to be an explicit nil
func (o *AwsProtectionSource) SetIpAddressesNil() {
	o.IpAddresses.Set(nil)
}

// UnsetIpAddresses ensures that no value is present for IpAddresses, not even an explicit nil
func (o *AwsProtectionSource) UnsetIpAddresses() {
	o.IpAddresses.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AwsProtectionSource) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *AwsProtectionSource) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AwsProtectionSource) UnsetName() {
	o.Name.Unset()
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetOwnerId() string {
	if o == nil || o.OwnerId.Get() == nil {
		var ret string
		return ret
	}
	return *o.OwnerId.Get()
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetOwnerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OwnerId.Get(), o.OwnerId.IsSet()
}

// HasOwnerId returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasOwnerId() bool {
	if o != nil && o.OwnerId.IsSet() {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given NullableString and assigns it to the OwnerId field.
func (o *AwsProtectionSource) SetOwnerId(v string) {
	o.OwnerId.Set(&v)
}
// SetOwnerIdNil sets the value for OwnerId to be an explicit nil
func (o *AwsProtectionSource) SetOwnerIdNil() {
	o.OwnerId.Set(nil)
}

// UnsetOwnerId ensures that no value is present for OwnerId, not even an explicit nil
func (o *AwsProtectionSource) UnsetOwnerId() {
	o.OwnerId.Unset()
}

// GetPhysicalSourceId returns the PhysicalSourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetPhysicalSourceId() int64 {
	if o == nil || o.PhysicalSourceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.PhysicalSourceId.Get()
}

// GetPhysicalSourceIdOk returns a tuple with the PhysicalSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetPhysicalSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PhysicalSourceId.Get(), o.PhysicalSourceId.IsSet()
}

// HasPhysicalSourceId returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasPhysicalSourceId() bool {
	if o != nil && o.PhysicalSourceId.IsSet() {
		return true
	}

	return false
}

// SetPhysicalSourceId gets a reference to the given NullableInt64 and assigns it to the PhysicalSourceId field.
func (o *AwsProtectionSource) SetPhysicalSourceId(v int64) {
	o.PhysicalSourceId.Set(&v)
}
// SetPhysicalSourceIdNil sets the value for PhysicalSourceId to be an explicit nil
func (o *AwsProtectionSource) SetPhysicalSourceIdNil() {
	o.PhysicalSourceId.Set(nil)
}

// UnsetPhysicalSourceId ensures that no value is present for PhysicalSourceId, not even an explicit nil
func (o *AwsProtectionSource) UnsetPhysicalSourceId() {
	o.PhysicalSourceId.Unset()
}

// GetRegionId returns the RegionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetRegionId() string {
	if o == nil || o.RegionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.RegionId.Get()
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetRegionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RegionId.Get(), o.RegionId.IsSet()
}

// HasRegionId returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasRegionId() bool {
	if o != nil && o.RegionId.IsSet() {
		return true
	}

	return false
}

// SetRegionId gets a reference to the given NullableString and assigns it to the RegionId field.
func (o *AwsProtectionSource) SetRegionId(v string) {
	o.RegionId.Set(&v)
}
// SetRegionIdNil sets the value for RegionId to be an explicit nil
func (o *AwsProtectionSource) SetRegionIdNil() {
	o.RegionId.Set(nil)
}

// UnsetRegionId ensures that no value is present for RegionId, not even an explicit nil
func (o *AwsProtectionSource) UnsetRegionId() {
	o.RegionId.Unset()
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetResourceId() string {
	if o == nil || o.ResourceId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ResourceId.Get()
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetResourceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ResourceId.Get(), o.ResourceId.IsSet()
}

// HasResourceId returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasResourceId() bool {
	if o != nil && o.ResourceId.IsSet() {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given NullableString and assigns it to the ResourceId field.
func (o *AwsProtectionSource) SetResourceId(v string) {
	o.ResourceId.Set(&v)
}
// SetResourceIdNil sets the value for ResourceId to be an explicit nil
func (o *AwsProtectionSource) SetResourceIdNil() {
	o.ResourceId.Set(nil)
}

// UnsetResourceId ensures that no value is present for ResourceId, not even an explicit nil
func (o *AwsProtectionSource) UnsetResourceId() {
	o.ResourceId.Unset()
}

// GetRestoreTaskId returns the RestoreTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetRestoreTaskId() int64 {
	if o == nil || o.RestoreTaskId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RestoreTaskId.Get()
}

// GetRestoreTaskIdOk returns a tuple with the RestoreTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetRestoreTaskIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RestoreTaskId.Get(), o.RestoreTaskId.IsSet()
}

// HasRestoreTaskId returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasRestoreTaskId() bool {
	if o != nil && o.RestoreTaskId.IsSet() {
		return true
	}

	return false
}

// SetRestoreTaskId gets a reference to the given NullableInt64 and assigns it to the RestoreTaskId field.
func (o *AwsProtectionSource) SetRestoreTaskId(v int64) {
	o.RestoreTaskId.Set(&v)
}
// SetRestoreTaskIdNil sets the value for RestoreTaskId to be an explicit nil
func (o *AwsProtectionSource) SetRestoreTaskIdNil() {
	o.RestoreTaskId.Set(nil)
}

// UnsetRestoreTaskId ensures that no value is present for RestoreTaskId, not even an explicit nil
func (o *AwsProtectionSource) UnsetRestoreTaskId() {
	o.RestoreTaskId.Unset()
}

// GetSecretAccessKey returns the SecretAccessKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetSecretAccessKey() string {
	if o == nil || o.SecretAccessKey.Get() == nil {
		var ret string
		return ret
	}
	return *o.SecretAccessKey.Get()
}

// GetSecretAccessKeyOk returns a tuple with the SecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetSecretAccessKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SecretAccessKey.Get(), o.SecretAccessKey.IsSet()
}

// HasSecretAccessKey returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasSecretAccessKey() bool {
	if o != nil && o.SecretAccessKey.IsSet() {
		return true
	}

	return false
}

// SetSecretAccessKey gets a reference to the given NullableString and assigns it to the SecretAccessKey field.
func (o *AwsProtectionSource) SetSecretAccessKey(v string) {
	o.SecretAccessKey.Set(&v)
}
// SetSecretAccessKeyNil sets the value for SecretAccessKey to be an explicit nil
func (o *AwsProtectionSource) SetSecretAccessKeyNil() {
	o.SecretAccessKey.Set(nil)
}

// UnsetSecretAccessKey ensures that no value is present for SecretAccessKey, not even an explicit nil
func (o *AwsProtectionSource) UnsetSecretAccessKey() {
	o.SecretAccessKey.Unset()
}

// GetSubscriptionType returns the SubscriptionType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetSubscriptionType() string {
	if o == nil || o.SubscriptionType.Get() == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionType.Get()
}

// GetSubscriptionTypeOk returns a tuple with the SubscriptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetSubscriptionTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubscriptionType.Get(), o.SubscriptionType.IsSet()
}

// HasSubscriptionType returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasSubscriptionType() bool {
	if o != nil && o.SubscriptionType.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionType gets a reference to the given NullableString and assigns it to the SubscriptionType field.
func (o *AwsProtectionSource) SetSubscriptionType(v string) {
	o.SubscriptionType.Set(&v)
}
// SetSubscriptionTypeNil sets the value for SubscriptionType to be an explicit nil
func (o *AwsProtectionSource) SetSubscriptionTypeNil() {
	o.SubscriptionType.Set(nil)
}

// UnsetSubscriptionType ensures that no value is present for SubscriptionType, not even an explicit nil
func (o *AwsProtectionSource) UnsetSubscriptionType() {
	o.SubscriptionType.Unset()
}

// GetTagAttributes returns the TagAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetTagAttributes() []TagAttribute {
	if o == nil  {
		var ret []TagAttribute
		return ret
	}
	return o.TagAttributes
}

// GetTagAttributesOk returns a tuple with the TagAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetTagAttributesOk() (*[]TagAttribute, bool) {
	if o == nil || o.TagAttributes == nil {
		return nil, false
	}
	return &o.TagAttributes, true
}

// HasTagAttributes returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasTagAttributes() bool {
	if o != nil && o.TagAttributes != nil {
		return true
	}

	return false
}

// SetTagAttributes gets a reference to the given []TagAttribute and assigns it to the TagAttributes field.
func (o *AwsProtectionSource) SetTagAttributes(v []TagAttribute) {
	o.TagAttributes = v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *AwsProtectionSource) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *AwsProtectionSource) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *AwsProtectionSource) UnsetType() {
	o.Type.Unset()
}

// GetUserAccountId returns the UserAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetUserAccountId() string {
	if o == nil || o.UserAccountId.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserAccountId.Get()
}

// GetUserAccountIdOk returns a tuple with the UserAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetUserAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserAccountId.Get(), o.UserAccountId.IsSet()
}

// HasUserAccountId returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasUserAccountId() bool {
	if o != nil && o.UserAccountId.IsSet() {
		return true
	}

	return false
}

// SetUserAccountId gets a reference to the given NullableString and assigns it to the UserAccountId field.
func (o *AwsProtectionSource) SetUserAccountId(v string) {
	o.UserAccountId.Set(&v)
}
// SetUserAccountIdNil sets the value for UserAccountId to be an explicit nil
func (o *AwsProtectionSource) SetUserAccountIdNil() {
	o.UserAccountId.Set(nil)
}

// UnsetUserAccountId ensures that no value is present for UserAccountId, not even an explicit nil
func (o *AwsProtectionSource) UnsetUserAccountId() {
	o.UserAccountId.Unset()
}

// GetUserResourceName returns the UserResourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsProtectionSource) GetUserResourceName() string {
	if o == nil || o.UserResourceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserResourceName.Get()
}

// GetUserResourceNameOk returns a tuple with the UserResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsProtectionSource) GetUserResourceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserResourceName.Get(), o.UserResourceName.IsSet()
}

// HasUserResourceName returns a boolean if a field has been set.
func (o *AwsProtectionSource) HasUserResourceName() bool {
	if o != nil && o.UserResourceName.IsSet() {
		return true
	}

	return false
}

// SetUserResourceName gets a reference to the given NullableString and assigns it to the UserResourceName field.
func (o *AwsProtectionSource) SetUserResourceName(v string) {
	o.UserResourceName.Set(&v)
}
// SetUserResourceNameNil sets the value for UserResourceName to be an explicit nil
func (o *AwsProtectionSource) SetUserResourceNameNil() {
	o.UserResourceName.Set(nil)
}

// UnsetUserResourceName ensures that no value is present for UserResourceName, not even an explicit nil
func (o *AwsProtectionSource) UnsetUserResourceName() {
	o.UserResourceName.Unset()
}

func (o AwsProtectionSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKey.IsSet() {
		toSerialize["accessKey"] = o.AccessKey.Get()
	}
	if o.AmazonResourceName.IsSet() {
		toSerialize["amazonResourceName"] = o.AmazonResourceName.Get()
	}
	if o.AuthMethod.IsSet() {
		toSerialize["authMethod"] = o.AuthMethod.Get()
	}
	if o.AwsFleetParams != nil {
		toSerialize["awsFleetParams"] = o.AwsFleetParams
	}
	if o.AwsType.IsSet() {
		toSerialize["awsType"] = o.AwsType.Get()
	}
	if o.ClusterNetworkInfo != nil {
		toSerialize["clusterNetworkInfo"] = o.ClusterNetworkInfo
	}
	if o.DbEngineId.IsSet() {
		toSerialize["dbEngineId"] = o.DbEngineId.Get()
	}
	if o.HostType.IsSet() {
		toSerialize["hostType"] = o.HostType.Get()
	}
	if o.IamRoleArn.IsSet() {
		toSerialize["iamRoleArn"] = o.IamRoleArn.Get()
	}
	if o.IpAddresses.IsSet() {
		toSerialize["ipAddresses"] = o.IpAddresses.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.OwnerId.IsSet() {
		toSerialize["ownerId"] = o.OwnerId.Get()
	}
	if o.PhysicalSourceId.IsSet() {
		toSerialize["physicalSourceId"] = o.PhysicalSourceId.Get()
	}
	if o.RegionId.IsSet() {
		toSerialize["regionId"] = o.RegionId.Get()
	}
	if o.ResourceId.IsSet() {
		toSerialize["resourceId"] = o.ResourceId.Get()
	}
	if o.RestoreTaskId.IsSet() {
		toSerialize["restoreTaskId"] = o.RestoreTaskId.Get()
	}
	if o.SecretAccessKey.IsSet() {
		toSerialize["secretAccessKey"] = o.SecretAccessKey.Get()
	}
	if o.SubscriptionType.IsSet() {
		toSerialize["subscriptionType"] = o.SubscriptionType.Get()
	}
	if o.TagAttributes != nil {
		toSerialize["tagAttributes"] = o.TagAttributes
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.UserAccountId.IsSet() {
		toSerialize["userAccountId"] = o.UserAccountId.Get()
	}
	if o.UserResourceName.IsSet() {
		toSerialize["userResourceName"] = o.UserResourceName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAwsProtectionSource struct {
	value *AwsProtectionSource
	isSet bool
}

func (v NullableAwsProtectionSource) Get() *AwsProtectionSource {
	return v.value
}

func (v *NullableAwsProtectionSource) Set(val *AwsProtectionSource) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsProtectionSource) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsProtectionSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsProtectionSource(val *AwsProtectionSource) *NullableAwsProtectionSource {
	return &NullableAwsProtectionSource{value: val, isSet: true}
}

func (v NullableAwsProtectionSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsProtectionSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


