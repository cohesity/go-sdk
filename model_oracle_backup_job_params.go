/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// OracleBackupJobParams Message to capture any additional backup params specific to Oracle.
type OracleBackupJobParams struct {
	// Indicates whether the mountpoints created while backing up Oracle DBs should be persisted. If this is set to 'false' all Oracle views mounted to the hosts will be unmounted at the end. Note: This parameter is for the entire Job. For overriding persistence of mountpoints for a subset of Oracle hosts within the job, refer OracleSourceParams.
	PersistMountpoints NullableBool `json:"persistMountpoints,omitempty"`
	VlanParams *VlanParams `json:"vlanParams,omitempty"`
}

// NewOracleBackupJobParams instantiates a new OracleBackupJobParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOracleBackupJobParams() *OracleBackupJobParams {
	this := OracleBackupJobParams{}
	return &this
}

// NewOracleBackupJobParamsWithDefaults instantiates a new OracleBackupJobParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOracleBackupJobParamsWithDefaults() *OracleBackupJobParams {
	this := OracleBackupJobParams{}
	return &this
}

// GetPersistMountpoints returns the PersistMountpoints field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OracleBackupJobParams) GetPersistMountpoints() bool {
	if o == nil || o.PersistMountpoints.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PersistMountpoints.Get()
}

// GetPersistMountpointsOk returns a tuple with the PersistMountpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OracleBackupJobParams) GetPersistMountpointsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PersistMountpoints.Get(), o.PersistMountpoints.IsSet()
}

// HasPersistMountpoints returns a boolean if a field has been set.
func (o *OracleBackupJobParams) HasPersistMountpoints() bool {
	if o != nil && o.PersistMountpoints.IsSet() {
		return true
	}

	return false
}

// SetPersistMountpoints gets a reference to the given NullableBool and assigns it to the PersistMountpoints field.
func (o *OracleBackupJobParams) SetPersistMountpoints(v bool) {
	o.PersistMountpoints.Set(&v)
}
// SetPersistMountpointsNil sets the value for PersistMountpoints to be an explicit nil
func (o *OracleBackupJobParams) SetPersistMountpointsNil() {
	o.PersistMountpoints.Set(nil)
}

// UnsetPersistMountpoints ensures that no value is present for PersistMountpoints, not even an explicit nil
func (o *OracleBackupJobParams) UnsetPersistMountpoints() {
	o.PersistMountpoints.Unset()
}

// GetVlanParams returns the VlanParams field value if set, zero value otherwise.
func (o *OracleBackupJobParams) GetVlanParams() VlanParams {
	if o == nil || o.VlanParams == nil {
		var ret VlanParams
		return ret
	}
	return *o.VlanParams
}

// GetVlanParamsOk returns a tuple with the VlanParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleBackupJobParams) GetVlanParamsOk() (*VlanParams, bool) {
	if o == nil || o.VlanParams == nil {
		return nil, false
	}
	return o.VlanParams, true
}

// HasVlanParams returns a boolean if a field has been set.
func (o *OracleBackupJobParams) HasVlanParams() bool {
	if o != nil && o.VlanParams != nil {
		return true
	}

	return false
}

// SetVlanParams gets a reference to the given VlanParams and assigns it to the VlanParams field.
func (o *OracleBackupJobParams) SetVlanParams(v VlanParams) {
	o.VlanParams = &v
}

func (o OracleBackupJobParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PersistMountpoints.IsSet() {
		toSerialize["persistMountpoints"] = o.PersistMountpoints.Get()
	}
	if o.VlanParams != nil {
		toSerialize["vlanParams"] = o.VlanParams
	}
	return json.Marshal(toSerialize)
}

type NullableOracleBackupJobParams struct {
	value *OracleBackupJobParams
	isSet bool
}

func (v NullableOracleBackupJobParams) Get() *OracleBackupJobParams {
	return v.value
}

func (v *NullableOracleBackupJobParams) Set(val *OracleBackupJobParams) {
	v.value = val
	v.isSet = true
}

func (v NullableOracleBackupJobParams) IsSet() bool {
	return v.isSet
}

func (v *NullableOracleBackupJobParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOracleBackupJobParams(val *OracleBackupJobParams) *NullableOracleBackupJobParams {
	return &NullableOracleBackupJobParams{value: val, isSet: true}
}

func (v NullableOracleBackupJobParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOracleBackupJobParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


