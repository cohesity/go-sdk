/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// RestoreOneDriveParamsDriveOwnerDrive struct for RestoreOneDriveParamsDriveOwnerDrive
type RestoreOneDriveParamsDriveOwnerDrive struct {
	// Specify if the entire drive is to be restored. This field should be false if restore_item_vec size > 0.
	IsEntireDriveRequired NullableBool `json:"isEntireDriveRequired,omitempty"`
	// Id of the drive whose items are being restored.
	RestoreDriveId NullableString `json:"restoreDriveId,omitempty"`
	// List of drive paths that need to be restored.
	RestoreItemVec []RestoreOneDriveParamsDriveItem `json:"restoreItemVec,omitempty"`
}

// NewRestoreOneDriveParamsDriveOwnerDrive instantiates a new RestoreOneDriveParamsDriveOwnerDrive object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreOneDriveParamsDriveOwnerDrive() *RestoreOneDriveParamsDriveOwnerDrive {
	this := RestoreOneDriveParamsDriveOwnerDrive{}
	return &this
}

// NewRestoreOneDriveParamsDriveOwnerDriveWithDefaults instantiates a new RestoreOneDriveParamsDriveOwnerDrive object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreOneDriveParamsDriveOwnerDriveWithDefaults() *RestoreOneDriveParamsDriveOwnerDrive {
	this := RestoreOneDriveParamsDriveOwnerDrive{}
	return &this
}

// GetIsEntireDriveRequired returns the IsEntireDriveRequired field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreOneDriveParamsDriveOwnerDrive) GetIsEntireDriveRequired() bool {
	if o == nil || o.IsEntireDriveRequired.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsEntireDriveRequired.Get()
}

// GetIsEntireDriveRequiredOk returns a tuple with the IsEntireDriveRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreOneDriveParamsDriveOwnerDrive) GetIsEntireDriveRequiredOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsEntireDriveRequired.Get(), o.IsEntireDriveRequired.IsSet()
}

// HasIsEntireDriveRequired returns a boolean if a field has been set.
func (o *RestoreOneDriveParamsDriveOwnerDrive) HasIsEntireDriveRequired() bool {
	if o != nil && o.IsEntireDriveRequired.IsSet() {
		return true
	}

	return false
}

// SetIsEntireDriveRequired gets a reference to the given NullableBool and assigns it to the IsEntireDriveRequired field.
func (o *RestoreOneDriveParamsDriveOwnerDrive) SetIsEntireDriveRequired(v bool) {
	o.IsEntireDriveRequired.Set(&v)
}
// SetIsEntireDriveRequiredNil sets the value for IsEntireDriveRequired to be an explicit nil
func (o *RestoreOneDriveParamsDriveOwnerDrive) SetIsEntireDriveRequiredNil() {
	o.IsEntireDriveRequired.Set(nil)
}

// UnsetIsEntireDriveRequired ensures that no value is present for IsEntireDriveRequired, not even an explicit nil
func (o *RestoreOneDriveParamsDriveOwnerDrive) UnsetIsEntireDriveRequired() {
	o.IsEntireDriveRequired.Unset()
}

// GetRestoreDriveId returns the RestoreDriveId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreOneDriveParamsDriveOwnerDrive) GetRestoreDriveId() string {
	if o == nil || o.RestoreDriveId.Get() == nil {
		var ret string
		return ret
	}
	return *o.RestoreDriveId.Get()
}

// GetRestoreDriveIdOk returns a tuple with the RestoreDriveId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreOneDriveParamsDriveOwnerDrive) GetRestoreDriveIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RestoreDriveId.Get(), o.RestoreDriveId.IsSet()
}

// HasRestoreDriveId returns a boolean if a field has been set.
func (o *RestoreOneDriveParamsDriveOwnerDrive) HasRestoreDriveId() bool {
	if o != nil && o.RestoreDriveId.IsSet() {
		return true
	}

	return false
}

// SetRestoreDriveId gets a reference to the given NullableString and assigns it to the RestoreDriveId field.
func (o *RestoreOneDriveParamsDriveOwnerDrive) SetRestoreDriveId(v string) {
	o.RestoreDriveId.Set(&v)
}
// SetRestoreDriveIdNil sets the value for RestoreDriveId to be an explicit nil
func (o *RestoreOneDriveParamsDriveOwnerDrive) SetRestoreDriveIdNil() {
	o.RestoreDriveId.Set(nil)
}

// UnsetRestoreDriveId ensures that no value is present for RestoreDriveId, not even an explicit nil
func (o *RestoreOneDriveParamsDriveOwnerDrive) UnsetRestoreDriveId() {
	o.RestoreDriveId.Unset()
}

// GetRestoreItemVec returns the RestoreItemVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreOneDriveParamsDriveOwnerDrive) GetRestoreItemVec() []RestoreOneDriveParamsDriveItem {
	if o == nil  {
		var ret []RestoreOneDriveParamsDriveItem
		return ret
	}
	return o.RestoreItemVec
}

// GetRestoreItemVecOk returns a tuple with the RestoreItemVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreOneDriveParamsDriveOwnerDrive) GetRestoreItemVecOk() (*[]RestoreOneDriveParamsDriveItem, bool) {
	if o == nil || o.RestoreItemVec == nil {
		return nil, false
	}
	return &o.RestoreItemVec, true
}

// HasRestoreItemVec returns a boolean if a field has been set.
func (o *RestoreOneDriveParamsDriveOwnerDrive) HasRestoreItemVec() bool {
	if o != nil && o.RestoreItemVec != nil {
		return true
	}

	return false
}

// SetRestoreItemVec gets a reference to the given []RestoreOneDriveParamsDriveItem and assigns it to the RestoreItemVec field.
func (o *RestoreOneDriveParamsDriveOwnerDrive) SetRestoreItemVec(v []RestoreOneDriveParamsDriveItem) {
	o.RestoreItemVec = v
}

func (o RestoreOneDriveParamsDriveOwnerDrive) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsEntireDriveRequired.IsSet() {
		toSerialize["isEntireDriveRequired"] = o.IsEntireDriveRequired.Get()
	}
	if o.RestoreDriveId.IsSet() {
		toSerialize["restoreDriveId"] = o.RestoreDriveId.Get()
	}
	if o.RestoreItemVec != nil {
		toSerialize["restoreItemVec"] = o.RestoreItemVec
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreOneDriveParamsDriveOwnerDrive struct {
	value *RestoreOneDriveParamsDriveOwnerDrive
	isSet bool
}

func (v NullableRestoreOneDriveParamsDriveOwnerDrive) Get() *RestoreOneDriveParamsDriveOwnerDrive {
	return v.value
}

func (v *NullableRestoreOneDriveParamsDriveOwnerDrive) Set(val *RestoreOneDriveParamsDriveOwnerDrive) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreOneDriveParamsDriveOwnerDrive) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreOneDriveParamsDriveOwnerDrive) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreOneDriveParamsDriveOwnerDrive(val *RestoreOneDriveParamsDriveOwnerDrive) *NullableRestoreOneDriveParamsDriveOwnerDrive {
	return &NullableRestoreOneDriveParamsDriveOwnerDrive{value: val, isSet: true}
}

func (v NullableRestoreOneDriveParamsDriveOwnerDrive) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreOneDriveParamsDriveOwnerDrive) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


