/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// LaunchAppInstance Specifies app instance parameters.
type LaunchAppInstance struct {
	// Specifies the app Id.
	AppUid NullableInt64 `json:"appUid,omitempty"`
	// Specifies the app version.
	AppVersion NullableInt64 `json:"appVersion,omitempty"`
	// Specifies unique identifier generated by the client to let the backend distinguish retries of the creation of the app instance.
	CreationUid NullableString `json:"creationUid,omitempty"`
	// Specifies user configured description for the app instance.
	Description NullableString `json:"description,omitempty"`
	Settings *AppInstanceSettings `json:"settings,omitempty"`
}

// NewLaunchAppInstance instantiates a new LaunchAppInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLaunchAppInstance() *LaunchAppInstance {
	this := LaunchAppInstance{}
	return &this
}

// NewLaunchAppInstanceWithDefaults instantiates a new LaunchAppInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLaunchAppInstanceWithDefaults() *LaunchAppInstance {
	this := LaunchAppInstance{}
	return &this
}

// GetAppUid returns the AppUid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LaunchAppInstance) GetAppUid() int64 {
	if o == nil || o.AppUid.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AppUid.Get()
}

// GetAppUidOk returns a tuple with the AppUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LaunchAppInstance) GetAppUidOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AppUid.Get(), o.AppUid.IsSet()
}

// HasAppUid returns a boolean if a field has been set.
func (o *LaunchAppInstance) HasAppUid() bool {
	if o != nil && o.AppUid.IsSet() {
		return true
	}

	return false
}

// SetAppUid gets a reference to the given NullableInt64 and assigns it to the AppUid field.
func (o *LaunchAppInstance) SetAppUid(v int64) {
	o.AppUid.Set(&v)
}
// SetAppUidNil sets the value for AppUid to be an explicit nil
func (o *LaunchAppInstance) SetAppUidNil() {
	o.AppUid.Set(nil)
}

// UnsetAppUid ensures that no value is present for AppUid, not even an explicit nil
func (o *LaunchAppInstance) UnsetAppUid() {
	o.AppUid.Unset()
}

// GetAppVersion returns the AppVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LaunchAppInstance) GetAppVersion() int64 {
	if o == nil || o.AppVersion.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AppVersion.Get()
}

// GetAppVersionOk returns a tuple with the AppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LaunchAppInstance) GetAppVersionOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AppVersion.Get(), o.AppVersion.IsSet()
}

// HasAppVersion returns a boolean if a field has been set.
func (o *LaunchAppInstance) HasAppVersion() bool {
	if o != nil && o.AppVersion.IsSet() {
		return true
	}

	return false
}

// SetAppVersion gets a reference to the given NullableInt64 and assigns it to the AppVersion field.
func (o *LaunchAppInstance) SetAppVersion(v int64) {
	o.AppVersion.Set(&v)
}
// SetAppVersionNil sets the value for AppVersion to be an explicit nil
func (o *LaunchAppInstance) SetAppVersionNil() {
	o.AppVersion.Set(nil)
}

// UnsetAppVersion ensures that no value is present for AppVersion, not even an explicit nil
func (o *LaunchAppInstance) UnsetAppVersion() {
	o.AppVersion.Unset()
}

// GetCreationUid returns the CreationUid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LaunchAppInstance) GetCreationUid() string {
	if o == nil || o.CreationUid.Get() == nil {
		var ret string
		return ret
	}
	return *o.CreationUid.Get()
}

// GetCreationUidOk returns a tuple with the CreationUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LaunchAppInstance) GetCreationUidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreationUid.Get(), o.CreationUid.IsSet()
}

// HasCreationUid returns a boolean if a field has been set.
func (o *LaunchAppInstance) HasCreationUid() bool {
	if o != nil && o.CreationUid.IsSet() {
		return true
	}

	return false
}

// SetCreationUid gets a reference to the given NullableString and assigns it to the CreationUid field.
func (o *LaunchAppInstance) SetCreationUid(v string) {
	o.CreationUid.Set(&v)
}
// SetCreationUidNil sets the value for CreationUid to be an explicit nil
func (o *LaunchAppInstance) SetCreationUidNil() {
	o.CreationUid.Set(nil)
}

// UnsetCreationUid ensures that no value is present for CreationUid, not even an explicit nil
func (o *LaunchAppInstance) UnsetCreationUid() {
	o.CreationUid.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LaunchAppInstance) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LaunchAppInstance) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *LaunchAppInstance) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *LaunchAppInstance) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *LaunchAppInstance) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *LaunchAppInstance) UnsetDescription() {
	o.Description.Unset()
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *LaunchAppInstance) GetSettings() AppInstanceSettings {
	if o == nil || o.Settings == nil {
		var ret AppInstanceSettings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchAppInstance) GetSettingsOk() (*AppInstanceSettings, bool) {
	if o == nil || o.Settings == nil {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *LaunchAppInstance) HasSettings() bool {
	if o != nil && o.Settings != nil {
		return true
	}

	return false
}

// SetSettings gets a reference to the given AppInstanceSettings and assigns it to the Settings field.
func (o *LaunchAppInstance) SetSettings(v AppInstanceSettings) {
	o.Settings = &v
}

func (o LaunchAppInstance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppUid.IsSet() {
		toSerialize["appUid"] = o.AppUid.Get()
	}
	if o.AppVersion.IsSet() {
		toSerialize["appVersion"] = o.AppVersion.Get()
	}
	if o.CreationUid.IsSet() {
		toSerialize["creationUid"] = o.CreationUid.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Settings != nil {
		toSerialize["settings"] = o.Settings
	}
	return json.Marshal(toSerialize)
}

type NullableLaunchAppInstance struct {
	value *LaunchAppInstance
	isSet bool
}

func (v NullableLaunchAppInstance) Get() *LaunchAppInstance {
	return v.value
}

func (v *NullableLaunchAppInstance) Set(val *LaunchAppInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableLaunchAppInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableLaunchAppInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLaunchAppInstance(val *LaunchAppInstance) *NullableLaunchAppInstance {
	return &NullableLaunchAppInstance{value: val, isSet: true}
}

func (v NullableLaunchAppInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLaunchAppInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


