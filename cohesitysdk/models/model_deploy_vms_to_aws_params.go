/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// DeployVMsToAWSParams Contains AWS specific information needed to identify various resources when converting and deploying a VM to AWS.
type DeployVMsToAWSParams struct {
	InstanceType *EntityProto `json:"instanceType,omitempty"`
	KeyPairName *EntityProto `json:"keyPairName,omitempty"`
	// Names of the network security groups within the above VPC. At least one entry should be present.
	NetworkSecurityGroups []EntityProto `json:"networkSecurityGroups,omitempty"`
	ProxyVmSubnet *EntityProto `json:"proxyVmSubnet,omitempty"`
	ProxyVmVpc *EntityProto `json:"proxyVmVpc,omitempty"`
	RdsParams *DeployDBInstancesToRDSParams `json:"rdsParams,omitempty"`
	Region *EntityProto `json:"region,omitempty"`
	Subnet *EntityProto `json:"subnet,omitempty"`
	Vpc *EntityProto `json:"vpc,omitempty"`
}

// NewDeployVMsToAWSParams instantiates a new DeployVMsToAWSParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployVMsToAWSParams() *DeployVMsToAWSParams {
	this := DeployVMsToAWSParams{}
	return &this
}

// NewDeployVMsToAWSParamsWithDefaults instantiates a new DeployVMsToAWSParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployVMsToAWSParamsWithDefaults() *DeployVMsToAWSParams {
	this := DeployVMsToAWSParams{}
	return &this
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *DeployVMsToAWSParams) GetInstanceType() EntityProto {
	if o == nil || o.InstanceType == nil {
		var ret EntityProto
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAWSParams) GetInstanceTypeOk() (*EntityProto, bool) {
	if o == nil || o.InstanceType == nil {
		return nil, false
	}
	return o.InstanceType, true
}

// HasInstanceType returns a boolean if a field has been set.
func (o *DeployVMsToAWSParams) HasInstanceType() bool {
	if o != nil && o.InstanceType != nil {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given EntityProto and assigns it to the InstanceType field.
func (o *DeployVMsToAWSParams) SetInstanceType(v EntityProto) {
	o.InstanceType = &v
}

// GetKeyPairName returns the KeyPairName field value if set, zero value otherwise.
func (o *DeployVMsToAWSParams) GetKeyPairName() EntityProto {
	if o == nil || o.KeyPairName == nil {
		var ret EntityProto
		return ret
	}
	return *o.KeyPairName
}

// GetKeyPairNameOk returns a tuple with the KeyPairName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAWSParams) GetKeyPairNameOk() (*EntityProto, bool) {
	if o == nil || o.KeyPairName == nil {
		return nil, false
	}
	return o.KeyPairName, true
}

// HasKeyPairName returns a boolean if a field has been set.
func (o *DeployVMsToAWSParams) HasKeyPairName() bool {
	if o != nil && o.KeyPairName != nil {
		return true
	}

	return false
}

// SetKeyPairName gets a reference to the given EntityProto and assigns it to the KeyPairName field.
func (o *DeployVMsToAWSParams) SetKeyPairName(v EntityProto) {
	o.KeyPairName = &v
}

// GetNetworkSecurityGroups returns the NetworkSecurityGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeployVMsToAWSParams) GetNetworkSecurityGroups() []EntityProto {
	if o == nil  {
		var ret []EntityProto
		return ret
	}
	return o.NetworkSecurityGroups
}

// GetNetworkSecurityGroupsOk returns a tuple with the NetworkSecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeployVMsToAWSParams) GetNetworkSecurityGroupsOk() (*[]EntityProto, bool) {
	if o == nil || o.NetworkSecurityGroups == nil {
		return nil, false
	}
	return &o.NetworkSecurityGroups, true
}

// HasNetworkSecurityGroups returns a boolean if a field has been set.
func (o *DeployVMsToAWSParams) HasNetworkSecurityGroups() bool {
	if o != nil && o.NetworkSecurityGroups != nil {
		return true
	}

	return false
}

// SetNetworkSecurityGroups gets a reference to the given []EntityProto and assigns it to the NetworkSecurityGroups field.
func (o *DeployVMsToAWSParams) SetNetworkSecurityGroups(v []EntityProto) {
	o.NetworkSecurityGroups = v
}

// GetProxyVmSubnet returns the ProxyVmSubnet field value if set, zero value otherwise.
func (o *DeployVMsToAWSParams) GetProxyVmSubnet() EntityProto {
	if o == nil || o.ProxyVmSubnet == nil {
		var ret EntityProto
		return ret
	}
	return *o.ProxyVmSubnet
}

// GetProxyVmSubnetOk returns a tuple with the ProxyVmSubnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAWSParams) GetProxyVmSubnetOk() (*EntityProto, bool) {
	if o == nil || o.ProxyVmSubnet == nil {
		return nil, false
	}
	return o.ProxyVmSubnet, true
}

// HasProxyVmSubnet returns a boolean if a field has been set.
func (o *DeployVMsToAWSParams) HasProxyVmSubnet() bool {
	if o != nil && o.ProxyVmSubnet != nil {
		return true
	}

	return false
}

// SetProxyVmSubnet gets a reference to the given EntityProto and assigns it to the ProxyVmSubnet field.
func (o *DeployVMsToAWSParams) SetProxyVmSubnet(v EntityProto) {
	o.ProxyVmSubnet = &v
}

// GetProxyVmVpc returns the ProxyVmVpc field value if set, zero value otherwise.
func (o *DeployVMsToAWSParams) GetProxyVmVpc() EntityProto {
	if o == nil || o.ProxyVmVpc == nil {
		var ret EntityProto
		return ret
	}
	return *o.ProxyVmVpc
}

// GetProxyVmVpcOk returns a tuple with the ProxyVmVpc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAWSParams) GetProxyVmVpcOk() (*EntityProto, bool) {
	if o == nil || o.ProxyVmVpc == nil {
		return nil, false
	}
	return o.ProxyVmVpc, true
}

// HasProxyVmVpc returns a boolean if a field has been set.
func (o *DeployVMsToAWSParams) HasProxyVmVpc() bool {
	if o != nil && o.ProxyVmVpc != nil {
		return true
	}

	return false
}

// SetProxyVmVpc gets a reference to the given EntityProto and assigns it to the ProxyVmVpc field.
func (o *DeployVMsToAWSParams) SetProxyVmVpc(v EntityProto) {
	o.ProxyVmVpc = &v
}

// GetRdsParams returns the RdsParams field value if set, zero value otherwise.
func (o *DeployVMsToAWSParams) GetRdsParams() DeployDBInstancesToRDSParams {
	if o == nil || o.RdsParams == nil {
		var ret DeployDBInstancesToRDSParams
		return ret
	}
	return *o.RdsParams
}

// GetRdsParamsOk returns a tuple with the RdsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAWSParams) GetRdsParamsOk() (*DeployDBInstancesToRDSParams, bool) {
	if o == nil || o.RdsParams == nil {
		return nil, false
	}
	return o.RdsParams, true
}

// HasRdsParams returns a boolean if a field has been set.
func (o *DeployVMsToAWSParams) HasRdsParams() bool {
	if o != nil && o.RdsParams != nil {
		return true
	}

	return false
}

// SetRdsParams gets a reference to the given DeployDBInstancesToRDSParams and assigns it to the RdsParams field.
func (o *DeployVMsToAWSParams) SetRdsParams(v DeployDBInstancesToRDSParams) {
	o.RdsParams = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *DeployVMsToAWSParams) GetRegion() EntityProto {
	if o == nil || o.Region == nil {
		var ret EntityProto
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAWSParams) GetRegionOk() (*EntityProto, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *DeployVMsToAWSParams) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given EntityProto and assigns it to the Region field.
func (o *DeployVMsToAWSParams) SetRegion(v EntityProto) {
	o.Region = &v
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *DeployVMsToAWSParams) GetSubnet() EntityProto {
	if o == nil || o.Subnet == nil {
		var ret EntityProto
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAWSParams) GetSubnetOk() (*EntityProto, bool) {
	if o == nil || o.Subnet == nil {
		return nil, false
	}
	return o.Subnet, true
}

// HasSubnet returns a boolean if a field has been set.
func (o *DeployVMsToAWSParams) HasSubnet() bool {
	if o != nil && o.Subnet != nil {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given EntityProto and assigns it to the Subnet field.
func (o *DeployVMsToAWSParams) SetSubnet(v EntityProto) {
	o.Subnet = &v
}

// GetVpc returns the Vpc field value if set, zero value otherwise.
func (o *DeployVMsToAWSParams) GetVpc() EntityProto {
	if o == nil || o.Vpc == nil {
		var ret EntityProto
		return ret
	}
	return *o.Vpc
}

// GetVpcOk returns a tuple with the Vpc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToAWSParams) GetVpcOk() (*EntityProto, bool) {
	if o == nil || o.Vpc == nil {
		return nil, false
	}
	return o.Vpc, true
}

// HasVpc returns a boolean if a field has been set.
func (o *DeployVMsToAWSParams) HasVpc() bool {
	if o != nil && o.Vpc != nil {
		return true
	}

	return false
}

// SetVpc gets a reference to the given EntityProto and assigns it to the Vpc field.
func (o *DeployVMsToAWSParams) SetVpc(v EntityProto) {
	o.Vpc = &v
}

func (o DeployVMsToAWSParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InstanceType != nil {
		toSerialize["instanceType"] = o.InstanceType
	}
	if o.KeyPairName != nil {
		toSerialize["keyPairName"] = o.KeyPairName
	}
	if o.NetworkSecurityGroups != nil {
		toSerialize["networkSecurityGroups"] = o.NetworkSecurityGroups
	}
	if o.ProxyVmSubnet != nil {
		toSerialize["proxyVmSubnet"] = o.ProxyVmSubnet
	}
	if o.ProxyVmVpc != nil {
		toSerialize["proxyVmVpc"] = o.ProxyVmVpc
	}
	if o.RdsParams != nil {
		toSerialize["rdsParams"] = o.RdsParams
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.Subnet != nil {
		toSerialize["subnet"] = o.Subnet
	}
	if o.Vpc != nil {
		toSerialize["vpc"] = o.Vpc
	}
	return json.Marshal(toSerialize)
}

type NullableDeployVMsToAWSParams struct {
	value *DeployVMsToAWSParams
	isSet bool
}

func (v NullableDeployVMsToAWSParams) Get() *DeployVMsToAWSParams {
	return v.value
}

func (v *NullableDeployVMsToAWSParams) Set(val *DeployVMsToAWSParams) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployVMsToAWSParams) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployVMsToAWSParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployVMsToAWSParams(val *DeployVMsToAWSParams) *NullableDeployVMsToAWSParams {
	return &NullableDeployVMsToAWSParams{value: val, isSet: true}
}

func (v NullableDeployVMsToAWSParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployVMsToAWSParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


