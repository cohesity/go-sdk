/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// NtpSettingsConfig struct for NtpSettingsConfig
type NtpSettingsConfig struct {
	// Flag to specify if the NTP servers are on internal network or not.
	NtpServersInternal NullableBool `json:"ntpServersInternal,omitempty"`
}

// NewNtpSettingsConfig instantiates a new NtpSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNtpSettingsConfig() *NtpSettingsConfig {
	this := NtpSettingsConfig{}
	return &this
}

// NewNtpSettingsConfigWithDefaults instantiates a new NtpSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNtpSettingsConfigWithDefaults() *NtpSettingsConfig {
	this := NtpSettingsConfig{}
	return &this
}

// GetNtpServersInternal returns the NtpServersInternal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NtpSettingsConfig) GetNtpServersInternal() bool {
	if o == nil || o.NtpServersInternal.Get() == nil {
		var ret bool
		return ret
	}
	return *o.NtpServersInternal.Get()
}

// GetNtpServersInternalOk returns a tuple with the NtpServersInternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NtpSettingsConfig) GetNtpServersInternalOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NtpServersInternal.Get(), o.NtpServersInternal.IsSet()
}

// HasNtpServersInternal returns a boolean if a field has been set.
func (o *NtpSettingsConfig) HasNtpServersInternal() bool {
	if o != nil && o.NtpServersInternal.IsSet() {
		return true
	}

	return false
}

// SetNtpServersInternal gets a reference to the given NullableBool and assigns it to the NtpServersInternal field.
func (o *NtpSettingsConfig) SetNtpServersInternal(v bool) {
	o.NtpServersInternal.Set(&v)
}
// SetNtpServersInternalNil sets the value for NtpServersInternal to be an explicit nil
func (o *NtpSettingsConfig) SetNtpServersInternalNil() {
	o.NtpServersInternal.Set(nil)
}

// UnsetNtpServersInternal ensures that no value is present for NtpServersInternal, not even an explicit nil
func (o *NtpSettingsConfig) UnsetNtpServersInternal() {
	o.NtpServersInternal.Unset()
}

func (o NtpSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NtpServersInternal.IsSet() {
		toSerialize["ntpServersInternal"] = o.NtpServersInternal.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableNtpSettingsConfig struct {
	value *NtpSettingsConfig
	isSet bool
}

func (v NullableNtpSettingsConfig) Get() *NtpSettingsConfig {
	return v.value
}

func (v *NullableNtpSettingsConfig) Set(val *NtpSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableNtpSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableNtpSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNtpSettingsConfig(val *NtpSettingsConfig) *NullableNtpSettingsConfig {
	return &NullableNtpSettingsConfig{value: val, isSet: true}
}

func (v NullableNtpSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNtpSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


