/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// SnapshotManagerParams struct for SnapshotManagerParams
type SnapshotManagerParams struct {
	AwsSnapshotManagerParams *AWSSnapshotManagerParams `json:"awsSnapshotManagerParams,omitempty"`
}

// NewSnapshotManagerParams instantiates a new SnapshotManagerParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotManagerParams() *SnapshotManagerParams {
	this := SnapshotManagerParams{}
	return &this
}

// NewSnapshotManagerParamsWithDefaults instantiates a new SnapshotManagerParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotManagerParamsWithDefaults() *SnapshotManagerParams {
	this := SnapshotManagerParams{}
	return &this
}

// GetAwsSnapshotManagerParams returns the AwsSnapshotManagerParams field value if set, zero value otherwise.
func (o *SnapshotManagerParams) GetAwsSnapshotManagerParams() AWSSnapshotManagerParams {
	if o == nil || o.AwsSnapshotManagerParams == nil {
		var ret AWSSnapshotManagerParams
		return ret
	}
	return *o.AwsSnapshotManagerParams
}

// GetAwsSnapshotManagerParamsOk returns a tuple with the AwsSnapshotManagerParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotManagerParams) GetAwsSnapshotManagerParamsOk() (*AWSSnapshotManagerParams, bool) {
	if o == nil || o.AwsSnapshotManagerParams == nil {
		return nil, false
	}
	return o.AwsSnapshotManagerParams, true
}

// HasAwsSnapshotManagerParams returns a boolean if a field has been set.
func (o *SnapshotManagerParams) HasAwsSnapshotManagerParams() bool {
	if o != nil && o.AwsSnapshotManagerParams != nil {
		return true
	}

	return false
}

// SetAwsSnapshotManagerParams gets a reference to the given AWSSnapshotManagerParams and assigns it to the AwsSnapshotManagerParams field.
func (o *SnapshotManagerParams) SetAwsSnapshotManagerParams(v AWSSnapshotManagerParams) {
	o.AwsSnapshotManagerParams = &v
}

func (o SnapshotManagerParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AwsSnapshotManagerParams != nil {
		toSerialize["awsSnapshotManagerParams"] = o.AwsSnapshotManagerParams
	}
	return json.Marshal(toSerialize)
}

type NullableSnapshotManagerParams struct {
	value *SnapshotManagerParams
	isSet bool
}

func (v NullableSnapshotManagerParams) Get() *SnapshotManagerParams {
	return v.value
}

func (v *NullableSnapshotManagerParams) Set(val *SnapshotManagerParams) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotManagerParams) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotManagerParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotManagerParams(val *SnapshotManagerParams) *NullableSnapshotManagerParams {
	return &NullableSnapshotManagerParams{value: val, isSet: true}
}

func (v NullableSnapshotManagerParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotManagerParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


