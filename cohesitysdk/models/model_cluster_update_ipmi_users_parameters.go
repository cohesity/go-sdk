/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ClusterUpdateIpmiUsersParameters Specifies the cluster level IPMI user credentials and/or Node level IPMI user credentials.
type ClusterUpdateIpmiUsersParameters struct {
	// Cluster level IPMI User name.
	ClusterIpmiUser NullableString `json:"clusterIpmiUser,omitempty"`
	// Cluster level IPMI Password.
	IpmiPassword NullableString `json:"ipmiPassword,omitempty"`
	// Node level IPMI User config.
	NodeIpmiUsers []NodeIpmiUser `json:"nodeIpmiUsers,omitempty"`
}

// NewClusterUpdateIpmiUsersParameters instantiates a new ClusterUpdateIpmiUsersParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterUpdateIpmiUsersParameters() *ClusterUpdateIpmiUsersParameters {
	this := ClusterUpdateIpmiUsersParameters{}
	return &this
}

// NewClusterUpdateIpmiUsersParametersWithDefaults instantiates a new ClusterUpdateIpmiUsersParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterUpdateIpmiUsersParametersWithDefaults() *ClusterUpdateIpmiUsersParameters {
	this := ClusterUpdateIpmiUsersParameters{}
	return &this
}

// GetClusterIpmiUser returns the ClusterIpmiUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterUpdateIpmiUsersParameters) GetClusterIpmiUser() string {
	if o == nil || o.ClusterIpmiUser.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClusterIpmiUser.Get()
}

// GetClusterIpmiUserOk returns a tuple with the ClusterIpmiUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterUpdateIpmiUsersParameters) GetClusterIpmiUserOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterIpmiUser.Get(), o.ClusterIpmiUser.IsSet()
}

// HasClusterIpmiUser returns a boolean if a field has been set.
func (o *ClusterUpdateIpmiUsersParameters) HasClusterIpmiUser() bool {
	if o != nil && o.ClusterIpmiUser.IsSet() {
		return true
	}

	return false
}

// SetClusterIpmiUser gets a reference to the given NullableString and assigns it to the ClusterIpmiUser field.
func (o *ClusterUpdateIpmiUsersParameters) SetClusterIpmiUser(v string) {
	o.ClusterIpmiUser.Set(&v)
}
// SetClusterIpmiUserNil sets the value for ClusterIpmiUser to be an explicit nil
func (o *ClusterUpdateIpmiUsersParameters) SetClusterIpmiUserNil() {
	o.ClusterIpmiUser.Set(nil)
}

// UnsetClusterIpmiUser ensures that no value is present for ClusterIpmiUser, not even an explicit nil
func (o *ClusterUpdateIpmiUsersParameters) UnsetClusterIpmiUser() {
	o.ClusterIpmiUser.Unset()
}

// GetIpmiPassword returns the IpmiPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterUpdateIpmiUsersParameters) GetIpmiPassword() string {
	if o == nil || o.IpmiPassword.Get() == nil {
		var ret string
		return ret
	}
	return *o.IpmiPassword.Get()
}

// GetIpmiPasswordOk returns a tuple with the IpmiPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterUpdateIpmiUsersParameters) GetIpmiPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IpmiPassword.Get(), o.IpmiPassword.IsSet()
}

// HasIpmiPassword returns a boolean if a field has been set.
func (o *ClusterUpdateIpmiUsersParameters) HasIpmiPassword() bool {
	if o != nil && o.IpmiPassword.IsSet() {
		return true
	}

	return false
}

// SetIpmiPassword gets a reference to the given NullableString and assigns it to the IpmiPassword field.
func (o *ClusterUpdateIpmiUsersParameters) SetIpmiPassword(v string) {
	o.IpmiPassword.Set(&v)
}
// SetIpmiPasswordNil sets the value for IpmiPassword to be an explicit nil
func (o *ClusterUpdateIpmiUsersParameters) SetIpmiPasswordNil() {
	o.IpmiPassword.Set(nil)
}

// UnsetIpmiPassword ensures that no value is present for IpmiPassword, not even an explicit nil
func (o *ClusterUpdateIpmiUsersParameters) UnsetIpmiPassword() {
	o.IpmiPassword.Unset()
}

// GetNodeIpmiUsers returns the NodeIpmiUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterUpdateIpmiUsersParameters) GetNodeIpmiUsers() []NodeIpmiUser {
	if o == nil  {
		var ret []NodeIpmiUser
		return ret
	}
	return o.NodeIpmiUsers
}

// GetNodeIpmiUsersOk returns a tuple with the NodeIpmiUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterUpdateIpmiUsersParameters) GetNodeIpmiUsersOk() (*[]NodeIpmiUser, bool) {
	if o == nil || o.NodeIpmiUsers == nil {
		return nil, false
	}
	return &o.NodeIpmiUsers, true
}

// HasNodeIpmiUsers returns a boolean if a field has been set.
func (o *ClusterUpdateIpmiUsersParameters) HasNodeIpmiUsers() bool {
	if o != nil && o.NodeIpmiUsers != nil {
		return true
	}

	return false
}

// SetNodeIpmiUsers gets a reference to the given []NodeIpmiUser and assigns it to the NodeIpmiUsers field.
func (o *ClusterUpdateIpmiUsersParameters) SetNodeIpmiUsers(v []NodeIpmiUser) {
	o.NodeIpmiUsers = v
}

func (o ClusterUpdateIpmiUsersParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterIpmiUser.IsSet() {
		toSerialize["clusterIpmiUser"] = o.ClusterIpmiUser.Get()
	}
	if o.IpmiPassword.IsSet() {
		toSerialize["ipmiPassword"] = o.IpmiPassword.Get()
	}
	if o.NodeIpmiUsers != nil {
		toSerialize["nodeIpmiUsers"] = o.NodeIpmiUsers
	}
	return json.Marshal(toSerialize)
}

type NullableClusterUpdateIpmiUsersParameters struct {
	value *ClusterUpdateIpmiUsersParameters
	isSet bool
}

func (v NullableClusterUpdateIpmiUsersParameters) Get() *ClusterUpdateIpmiUsersParameters {
	return v.value
}

func (v *NullableClusterUpdateIpmiUsersParameters) Set(val *ClusterUpdateIpmiUsersParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterUpdateIpmiUsersParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterUpdateIpmiUsersParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterUpdateIpmiUsersParameters(val *ClusterUpdateIpmiUsersParameters) *NullableClusterUpdateIpmiUsersParameters {
	return &NullableClusterUpdateIpmiUsersParameters{value: val, isSet: true}
}

func (v NullableClusterUpdateIpmiUsersParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterUpdateIpmiUsersParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


