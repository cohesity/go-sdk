/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ProtectionSourceResponse Specifies the information about the individual object from search api response.
type ProtectionSourceResponse struct {
	// Specifies the list of Protection Jobs that protect the object.
	Jobs []ProtectionJobSummary `json:"jobs,omitempty"`
	// Specifies the logical size of Protection Source in bytes.
	LogicalSizeInBytes NullableInt64 `json:"logicalSizeInBytes,omitempty"`
	ParentSource *ProtectionSource `json:"parentSource,omitempty"`
	// Specifies the list of universal ids of the Protection Source.
	ProtectionSourceUidList []ProtectionSourceUid `json:"protectionSourceUidList,omitempty"`
	Source *ProtectionSource `json:"source,omitempty"`
	// Specifies the unique id of the Protection Source.
	Uuid NullableString `json:"uuid,omitempty"`
}

// NewProtectionSourceResponse instantiates a new ProtectionSourceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionSourceResponse() *ProtectionSourceResponse {
	this := ProtectionSourceResponse{}
	return &this
}

// NewProtectionSourceResponseWithDefaults instantiates a new ProtectionSourceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionSourceResponseWithDefaults() *ProtectionSourceResponse {
	this := ProtectionSourceResponse{}
	return &this
}

// GetJobs returns the Jobs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourceResponse) GetJobs() []ProtectionJobSummary {
	if o == nil  {
		var ret []ProtectionJobSummary
		return ret
	}
	return o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourceResponse) GetJobsOk() (*[]ProtectionJobSummary, bool) {
	if o == nil || o.Jobs == nil {
		return nil, false
	}
	return &o.Jobs, true
}

// HasJobs returns a boolean if a field has been set.
func (o *ProtectionSourceResponse) HasJobs() bool {
	if o != nil && o.Jobs != nil {
		return true
	}

	return false
}

// SetJobs gets a reference to the given []ProtectionJobSummary and assigns it to the Jobs field.
func (o *ProtectionSourceResponse) SetJobs(v []ProtectionJobSummary) {
	o.Jobs = v
}

// GetLogicalSizeInBytes returns the LogicalSizeInBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourceResponse) GetLogicalSizeInBytes() int64 {
	if o == nil || o.LogicalSizeInBytes.Get() == nil {
		var ret int64
		return ret
	}
	return *o.LogicalSizeInBytes.Get()
}

// GetLogicalSizeInBytesOk returns a tuple with the LogicalSizeInBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourceResponse) GetLogicalSizeInBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LogicalSizeInBytes.Get(), o.LogicalSizeInBytes.IsSet()
}

// HasLogicalSizeInBytes returns a boolean if a field has been set.
func (o *ProtectionSourceResponse) HasLogicalSizeInBytes() bool {
	if o != nil && o.LogicalSizeInBytes.IsSet() {
		return true
	}

	return false
}

// SetLogicalSizeInBytes gets a reference to the given NullableInt64 and assigns it to the LogicalSizeInBytes field.
func (o *ProtectionSourceResponse) SetLogicalSizeInBytes(v int64) {
	o.LogicalSizeInBytes.Set(&v)
}
// SetLogicalSizeInBytesNil sets the value for LogicalSizeInBytes to be an explicit nil
func (o *ProtectionSourceResponse) SetLogicalSizeInBytesNil() {
	o.LogicalSizeInBytes.Set(nil)
}

// UnsetLogicalSizeInBytes ensures that no value is present for LogicalSizeInBytes, not even an explicit nil
func (o *ProtectionSourceResponse) UnsetLogicalSizeInBytes() {
	o.LogicalSizeInBytes.Unset()
}

// GetParentSource returns the ParentSource field value if set, zero value otherwise.
func (o *ProtectionSourceResponse) GetParentSource() ProtectionSource {
	if o == nil || o.ParentSource == nil {
		var ret ProtectionSource
		return ret
	}
	return *o.ParentSource
}

// GetParentSourceOk returns a tuple with the ParentSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionSourceResponse) GetParentSourceOk() (*ProtectionSource, bool) {
	if o == nil || o.ParentSource == nil {
		return nil, false
	}
	return o.ParentSource, true
}

// HasParentSource returns a boolean if a field has been set.
func (o *ProtectionSourceResponse) HasParentSource() bool {
	if o != nil && o.ParentSource != nil {
		return true
	}

	return false
}

// SetParentSource gets a reference to the given ProtectionSource and assigns it to the ParentSource field.
func (o *ProtectionSourceResponse) SetParentSource(v ProtectionSource) {
	o.ParentSource = &v
}

// GetProtectionSourceUidList returns the ProtectionSourceUidList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourceResponse) GetProtectionSourceUidList() []ProtectionSourceUid {
	if o == nil  {
		var ret []ProtectionSourceUid
		return ret
	}
	return o.ProtectionSourceUidList
}

// GetProtectionSourceUidListOk returns a tuple with the ProtectionSourceUidList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourceResponse) GetProtectionSourceUidListOk() (*[]ProtectionSourceUid, bool) {
	if o == nil || o.ProtectionSourceUidList == nil {
		return nil, false
	}
	return &o.ProtectionSourceUidList, true
}

// HasProtectionSourceUidList returns a boolean if a field has been set.
func (o *ProtectionSourceResponse) HasProtectionSourceUidList() bool {
	if o != nil && o.ProtectionSourceUidList != nil {
		return true
	}

	return false
}

// SetProtectionSourceUidList gets a reference to the given []ProtectionSourceUid and assigns it to the ProtectionSourceUidList field.
func (o *ProtectionSourceResponse) SetProtectionSourceUidList(v []ProtectionSourceUid) {
	o.ProtectionSourceUidList = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ProtectionSourceResponse) GetSource() ProtectionSource {
	if o == nil || o.Source == nil {
		var ret ProtectionSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionSourceResponse) GetSourceOk() (*ProtectionSource, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *ProtectionSourceResponse) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given ProtectionSource and assigns it to the Source field.
func (o *ProtectionSourceResponse) SetSource(v ProtectionSource) {
	o.Source = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourceResponse) GetUuid() string {
	if o == nil || o.Uuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uuid.Get()
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourceResponse) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Uuid.Get(), o.Uuid.IsSet()
}

// HasUuid returns a boolean if a field has been set.
func (o *ProtectionSourceResponse) HasUuid() bool {
	if o != nil && o.Uuid.IsSet() {
		return true
	}

	return false
}

// SetUuid gets a reference to the given NullableString and assigns it to the Uuid field.
func (o *ProtectionSourceResponse) SetUuid(v string) {
	o.Uuid.Set(&v)
}
// SetUuidNil sets the value for Uuid to be an explicit nil
func (o *ProtectionSourceResponse) SetUuidNil() {
	o.Uuid.Set(nil)
}

// UnsetUuid ensures that no value is present for Uuid, not even an explicit nil
func (o *ProtectionSourceResponse) UnsetUuid() {
	o.Uuid.Unset()
}

func (o ProtectionSourceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Jobs != nil {
		toSerialize["jobs"] = o.Jobs
	}
	if o.LogicalSizeInBytes.IsSet() {
		toSerialize["logicalSizeInBytes"] = o.LogicalSizeInBytes.Get()
	}
	if o.ParentSource != nil {
		toSerialize["parentSource"] = o.ParentSource
	}
	if o.ProtectionSourceUidList != nil {
		toSerialize["protectionSourceUidList"] = o.ProtectionSourceUidList
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.Uuid.IsSet() {
		toSerialize["uuid"] = o.Uuid.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProtectionSourceResponse struct {
	value *ProtectionSourceResponse
	isSet bool
}

func (v NullableProtectionSourceResponse) Get() *ProtectionSourceResponse {
	return v.value
}

func (v *NullableProtectionSourceResponse) Set(val *ProtectionSourceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionSourceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionSourceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionSourceResponse(val *ProtectionSourceResponse) *NullableProtectionSourceResponse {
	return &NullableProtectionSourceResponse{value: val, isSet: true}
}

func (v NullableProtectionSourceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionSourceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


