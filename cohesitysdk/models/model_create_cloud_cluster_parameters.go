/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// CreateCloudClusterParameters Specifies the parameters needed for creation of a new Cluster.
type CreateCloudClusterParameters struct {
	// Specifies the name of the new Cluster.
	ClusterName NullableString `json:"clusterName"`
	EncryptionConfig *EncryptionConfiguration `json:"encryptionConfig,omitempty"`
	// Specifies IP preference.
	IpPreference NullableInt32 `json:"ipPreference,omitempty"`
	// Specifies the metadata fault tolerance.
	MetadataFaultTolerance NullableInt32 `json:"metadataFaultTolerance,omitempty"`
	NetworkConfig CloudNetworkConfiguration `json:"networkConfig"`
	// Specifies the configuration for the nodes in the new cluster.
	NodeIps []string `json:"nodeIps"`
}

// NewCreateCloudClusterParameters instantiates a new CreateCloudClusterParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCloudClusterParameters(clusterName NullableString, networkConfig CloudNetworkConfiguration, nodeIps []string) *CreateCloudClusterParameters {
	this := CreateCloudClusterParameters{}
	this.ClusterName = clusterName
	this.NetworkConfig = networkConfig
	this.NodeIps = nodeIps
	return &this
}

// NewCreateCloudClusterParametersWithDefaults instantiates a new CreateCloudClusterParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCloudClusterParametersWithDefaults() *CreateCloudClusterParameters {
	this := CreateCloudClusterParameters{}
	return &this
}

// GetClusterName returns the ClusterName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateCloudClusterParameters) GetClusterName() string {
	if o == nil || o.ClusterName.Get() == nil {
		var ret string
		return ret
	}

	return *o.ClusterName.Get()
}

// GetClusterNameOk returns a tuple with the ClusterName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCloudClusterParameters) GetClusterNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterName.Get(), o.ClusterName.IsSet()
}

// SetClusterName sets field value
func (o *CreateCloudClusterParameters) SetClusterName(v string) {
	o.ClusterName.Set(&v)
}

// GetEncryptionConfig returns the EncryptionConfig field value if set, zero value otherwise.
func (o *CreateCloudClusterParameters) GetEncryptionConfig() EncryptionConfiguration {
	if o == nil || o.EncryptionConfig == nil {
		var ret EncryptionConfiguration
		return ret
	}
	return *o.EncryptionConfig
}

// GetEncryptionConfigOk returns a tuple with the EncryptionConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCloudClusterParameters) GetEncryptionConfigOk() (*EncryptionConfiguration, bool) {
	if o == nil || o.EncryptionConfig == nil {
		return nil, false
	}
	return o.EncryptionConfig, true
}

// HasEncryptionConfig returns a boolean if a field has been set.
func (o *CreateCloudClusterParameters) HasEncryptionConfig() bool {
	if o != nil && o.EncryptionConfig != nil {
		return true
	}

	return false
}

// SetEncryptionConfig gets a reference to the given EncryptionConfiguration and assigns it to the EncryptionConfig field.
func (o *CreateCloudClusterParameters) SetEncryptionConfig(v EncryptionConfiguration) {
	o.EncryptionConfig = &v
}

// GetIpPreference returns the IpPreference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCloudClusterParameters) GetIpPreference() int32 {
	if o == nil || o.IpPreference.Get() == nil {
		var ret int32
		return ret
	}
	return *o.IpPreference.Get()
}

// GetIpPreferenceOk returns a tuple with the IpPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCloudClusterParameters) GetIpPreferenceOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IpPreference.Get(), o.IpPreference.IsSet()
}

// HasIpPreference returns a boolean if a field has been set.
func (o *CreateCloudClusterParameters) HasIpPreference() bool {
	if o != nil && o.IpPreference.IsSet() {
		return true
	}

	return false
}

// SetIpPreference gets a reference to the given NullableInt32 and assigns it to the IpPreference field.
func (o *CreateCloudClusterParameters) SetIpPreference(v int32) {
	o.IpPreference.Set(&v)
}
// SetIpPreferenceNil sets the value for IpPreference to be an explicit nil
func (o *CreateCloudClusterParameters) SetIpPreferenceNil() {
	o.IpPreference.Set(nil)
}

// UnsetIpPreference ensures that no value is present for IpPreference, not even an explicit nil
func (o *CreateCloudClusterParameters) UnsetIpPreference() {
	o.IpPreference.Unset()
}

// GetMetadataFaultTolerance returns the MetadataFaultTolerance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCloudClusterParameters) GetMetadataFaultTolerance() int32 {
	if o == nil || o.MetadataFaultTolerance.Get() == nil {
		var ret int32
		return ret
	}
	return *o.MetadataFaultTolerance.Get()
}

// GetMetadataFaultToleranceOk returns a tuple with the MetadataFaultTolerance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCloudClusterParameters) GetMetadataFaultToleranceOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MetadataFaultTolerance.Get(), o.MetadataFaultTolerance.IsSet()
}

// HasMetadataFaultTolerance returns a boolean if a field has been set.
func (o *CreateCloudClusterParameters) HasMetadataFaultTolerance() bool {
	if o != nil && o.MetadataFaultTolerance.IsSet() {
		return true
	}

	return false
}

// SetMetadataFaultTolerance gets a reference to the given NullableInt32 and assigns it to the MetadataFaultTolerance field.
func (o *CreateCloudClusterParameters) SetMetadataFaultTolerance(v int32) {
	o.MetadataFaultTolerance.Set(&v)
}
// SetMetadataFaultToleranceNil sets the value for MetadataFaultTolerance to be an explicit nil
func (o *CreateCloudClusterParameters) SetMetadataFaultToleranceNil() {
	o.MetadataFaultTolerance.Set(nil)
}

// UnsetMetadataFaultTolerance ensures that no value is present for MetadataFaultTolerance, not even an explicit nil
func (o *CreateCloudClusterParameters) UnsetMetadataFaultTolerance() {
	o.MetadataFaultTolerance.Unset()
}

// GetNetworkConfig returns the NetworkConfig field value
func (o *CreateCloudClusterParameters) GetNetworkConfig() CloudNetworkConfiguration {
	if o == nil {
		var ret CloudNetworkConfiguration
		return ret
	}

	return o.NetworkConfig
}

// GetNetworkConfigOk returns a tuple with the NetworkConfig field value
// and a boolean to check if the value has been set.
func (o *CreateCloudClusterParameters) GetNetworkConfigOk() (*CloudNetworkConfiguration, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetworkConfig, true
}

// SetNetworkConfig sets field value
func (o *CreateCloudClusterParameters) SetNetworkConfig(v CloudNetworkConfiguration) {
	o.NetworkConfig = v
}

// GetNodeIps returns the NodeIps field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *CreateCloudClusterParameters) GetNodeIps() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.NodeIps
}

// GetNodeIpsOk returns a tuple with the NodeIps field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCloudClusterParameters) GetNodeIpsOk() (*[]string, bool) {
	if o == nil || o.NodeIps == nil {
		return nil, false
	}
	return &o.NodeIps, true
}

// SetNodeIps sets field value
func (o *CreateCloudClusterParameters) SetNodeIps(v []string) {
	o.NodeIps = v
}

func (o CreateCloudClusterParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["clusterName"] = o.ClusterName.Get()
	}
	if o.EncryptionConfig != nil {
		toSerialize["encryptionConfig"] = o.EncryptionConfig
	}
	if o.IpPreference.IsSet() {
		toSerialize["ipPreference"] = o.IpPreference.Get()
	}
	if o.MetadataFaultTolerance.IsSet() {
		toSerialize["metadataFaultTolerance"] = o.MetadataFaultTolerance.Get()
	}
	if true {
		toSerialize["networkConfig"] = o.NetworkConfig
	}
	if o.NodeIps != nil {
		toSerialize["nodeIps"] = o.NodeIps
	}
	return json.Marshal(toSerialize)
}

type NullableCreateCloudClusterParameters struct {
	value *CreateCloudClusterParameters
	isSet bool
}

func (v NullableCreateCloudClusterParameters) Get() *CreateCloudClusterParameters {
	return v.value
}

func (v *NullableCreateCloudClusterParameters) Set(val *CreateCloudClusterParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCloudClusterParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCloudClusterParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCloudClusterParameters(val *CreateCloudClusterParameters) *NullableCreateCloudClusterParameters {
	return &NullableCreateCloudClusterParameters{value: val, isSet: true}
}

func (v NullableCreateCloudClusterParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCloudClusterParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


