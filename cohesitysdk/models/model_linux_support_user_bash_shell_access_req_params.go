/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// LinuxSupportUserBashShellAccessReqParams struct for LinuxSupportUserBashShellAccessReqParams
type LinuxSupportUserBashShellAccessReqParams struct {
	// If RegenerateToken is set to true, the token would be regenerated and the new token will be returned.
	RegenerateToken NullableBool `json:"regenerateToken,omitempty"`
}

// NewLinuxSupportUserBashShellAccessReqParams instantiates a new LinuxSupportUserBashShellAccessReqParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinuxSupportUserBashShellAccessReqParams() *LinuxSupportUserBashShellAccessReqParams {
	this := LinuxSupportUserBashShellAccessReqParams{}
	return &this
}

// NewLinuxSupportUserBashShellAccessReqParamsWithDefaults instantiates a new LinuxSupportUserBashShellAccessReqParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinuxSupportUserBashShellAccessReqParamsWithDefaults() *LinuxSupportUserBashShellAccessReqParams {
	this := LinuxSupportUserBashShellAccessReqParams{}
	return &this
}

// GetRegenerateToken returns the RegenerateToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LinuxSupportUserBashShellAccessReqParams) GetRegenerateToken() bool {
	if o == nil || o.RegenerateToken.Get() == nil {
		var ret bool
		return ret
	}
	return *o.RegenerateToken.Get()
}

// GetRegenerateTokenOk returns a tuple with the RegenerateToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinuxSupportUserBashShellAccessReqParams) GetRegenerateTokenOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RegenerateToken.Get(), o.RegenerateToken.IsSet()
}

// HasRegenerateToken returns a boolean if a field has been set.
func (o *LinuxSupportUserBashShellAccessReqParams) HasRegenerateToken() bool {
	if o != nil && o.RegenerateToken.IsSet() {
		return true
	}

	return false
}

// SetRegenerateToken gets a reference to the given NullableBool and assigns it to the RegenerateToken field.
func (o *LinuxSupportUserBashShellAccessReqParams) SetRegenerateToken(v bool) {
	o.RegenerateToken.Set(&v)
}
// SetRegenerateTokenNil sets the value for RegenerateToken to be an explicit nil
func (o *LinuxSupportUserBashShellAccessReqParams) SetRegenerateTokenNil() {
	o.RegenerateToken.Set(nil)
}

// UnsetRegenerateToken ensures that no value is present for RegenerateToken, not even an explicit nil
func (o *LinuxSupportUserBashShellAccessReqParams) UnsetRegenerateToken() {
	o.RegenerateToken.Unset()
}

func (o LinuxSupportUserBashShellAccessReqParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RegenerateToken.IsSet() {
		toSerialize["regenerateToken"] = o.RegenerateToken.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableLinuxSupportUserBashShellAccessReqParams struct {
	value *LinuxSupportUserBashShellAccessReqParams
	isSet bool
}

func (v NullableLinuxSupportUserBashShellAccessReqParams) Get() *LinuxSupportUserBashShellAccessReqParams {
	return v.value
}

func (v *NullableLinuxSupportUserBashShellAccessReqParams) Set(val *LinuxSupportUserBashShellAccessReqParams) {
	v.value = val
	v.isSet = true
}

func (v NullableLinuxSupportUserBashShellAccessReqParams) IsSet() bool {
	return v.isSet
}

func (v *NullableLinuxSupportUserBashShellAccessReqParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinuxSupportUserBashShellAccessReqParams(val *LinuxSupportUserBashShellAccessReqParams) *NullableLinuxSupportUserBashShellAccessReqParams {
	return &NullableLinuxSupportUserBashShellAccessReqParams{value: val, isSet: true}
}

func (v NullableLinuxSupportUserBashShellAccessReqParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinuxSupportUserBashShellAccessReqParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


