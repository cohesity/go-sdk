/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// InputSpecFileTimeFilter File time filter to filter files based on their last change time. All files whose change time is in the range [change_time_range_start_secs, change_time_range_end_secs) will be processed. Both values are time duration in seconds w.r.t. to current time and not absolute points in time.
type InputSpecFileTimeFilter struct {
	// End of file's change time range.
	ChangeTimeRangeEndSecs NullableInt64 `json:"changeTimeRangeEndSecs,omitempty"`
	// Start of file's change time range.
	ChangeTimeRangeStartSecs NullableInt64 `json:"changeTimeRangeStartSecs,omitempty"`
}

// NewInputSpecFileTimeFilter instantiates a new InputSpecFileTimeFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputSpecFileTimeFilter() *InputSpecFileTimeFilter {
	this := InputSpecFileTimeFilter{}
	return &this
}

// NewInputSpecFileTimeFilterWithDefaults instantiates a new InputSpecFileTimeFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputSpecFileTimeFilterWithDefaults() *InputSpecFileTimeFilter {
	this := InputSpecFileTimeFilter{}
	return &this
}

// GetChangeTimeRangeEndSecs returns the ChangeTimeRangeEndSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InputSpecFileTimeFilter) GetChangeTimeRangeEndSecs() int64 {
	if o == nil || o.ChangeTimeRangeEndSecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ChangeTimeRangeEndSecs.Get()
}

// GetChangeTimeRangeEndSecsOk returns a tuple with the ChangeTimeRangeEndSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InputSpecFileTimeFilter) GetChangeTimeRangeEndSecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ChangeTimeRangeEndSecs.Get(), o.ChangeTimeRangeEndSecs.IsSet()
}

// HasChangeTimeRangeEndSecs returns a boolean if a field has been set.
func (o *InputSpecFileTimeFilter) HasChangeTimeRangeEndSecs() bool {
	if o != nil && o.ChangeTimeRangeEndSecs.IsSet() {
		return true
	}

	return false
}

// SetChangeTimeRangeEndSecs gets a reference to the given NullableInt64 and assigns it to the ChangeTimeRangeEndSecs field.
func (o *InputSpecFileTimeFilter) SetChangeTimeRangeEndSecs(v int64) {
	o.ChangeTimeRangeEndSecs.Set(&v)
}
// SetChangeTimeRangeEndSecsNil sets the value for ChangeTimeRangeEndSecs to be an explicit nil
func (o *InputSpecFileTimeFilter) SetChangeTimeRangeEndSecsNil() {
	o.ChangeTimeRangeEndSecs.Set(nil)
}

// UnsetChangeTimeRangeEndSecs ensures that no value is present for ChangeTimeRangeEndSecs, not even an explicit nil
func (o *InputSpecFileTimeFilter) UnsetChangeTimeRangeEndSecs() {
	o.ChangeTimeRangeEndSecs.Unset()
}

// GetChangeTimeRangeStartSecs returns the ChangeTimeRangeStartSecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InputSpecFileTimeFilter) GetChangeTimeRangeStartSecs() int64 {
	if o == nil || o.ChangeTimeRangeStartSecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ChangeTimeRangeStartSecs.Get()
}

// GetChangeTimeRangeStartSecsOk returns a tuple with the ChangeTimeRangeStartSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InputSpecFileTimeFilter) GetChangeTimeRangeStartSecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ChangeTimeRangeStartSecs.Get(), o.ChangeTimeRangeStartSecs.IsSet()
}

// HasChangeTimeRangeStartSecs returns a boolean if a field has been set.
func (o *InputSpecFileTimeFilter) HasChangeTimeRangeStartSecs() bool {
	if o != nil && o.ChangeTimeRangeStartSecs.IsSet() {
		return true
	}

	return false
}

// SetChangeTimeRangeStartSecs gets a reference to the given NullableInt64 and assigns it to the ChangeTimeRangeStartSecs field.
func (o *InputSpecFileTimeFilter) SetChangeTimeRangeStartSecs(v int64) {
	o.ChangeTimeRangeStartSecs.Set(&v)
}
// SetChangeTimeRangeStartSecsNil sets the value for ChangeTimeRangeStartSecs to be an explicit nil
func (o *InputSpecFileTimeFilter) SetChangeTimeRangeStartSecsNil() {
	o.ChangeTimeRangeStartSecs.Set(nil)
}

// UnsetChangeTimeRangeStartSecs ensures that no value is present for ChangeTimeRangeStartSecs, not even an explicit nil
func (o *InputSpecFileTimeFilter) UnsetChangeTimeRangeStartSecs() {
	o.ChangeTimeRangeStartSecs.Unset()
}

func (o InputSpecFileTimeFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChangeTimeRangeEndSecs.IsSet() {
		toSerialize["changeTimeRangeEndSecs"] = o.ChangeTimeRangeEndSecs.Get()
	}
	if o.ChangeTimeRangeStartSecs.IsSet() {
		toSerialize["changeTimeRangeStartSecs"] = o.ChangeTimeRangeStartSecs.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableInputSpecFileTimeFilter struct {
	value *InputSpecFileTimeFilter
	isSet bool
}

func (v NullableInputSpecFileTimeFilter) Get() *InputSpecFileTimeFilter {
	return v.value
}

func (v *NullableInputSpecFileTimeFilter) Set(val *InputSpecFileTimeFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableInputSpecFileTimeFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableInputSpecFileTimeFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputSpecFileTimeFilter(val *InputSpecFileTimeFilter) *NullableInputSpecFileTimeFilter {
	return &NullableInputSpecFileTimeFilter{value: val, isSet: true}
}

func (v NullableInputSpecFileTimeFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputSpecFileTimeFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


