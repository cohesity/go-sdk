/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ApplicationRestoreParameters Specifies the information regarding the application restore parameters.
type ApplicationRestoreParameters struct {
	// Specifies the Environment of the Application server to restore like 'kSQL','kAD',or 'kExchange'. Supported environment types such as 'kView', 'kSQL', 'kVMware', etc. NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter. 'kVMware' indicates the VMware Protection Source environment. 'kHyperV' indicates the HyperV Protection Source environment. 'kSQL' indicates the SQL Protection Source environment. 'kView' indicates the View Protection Source environment. 'kPuppeteer' indicates the Cohesity's Remote Adapter. 'kPhysical' indicates the physical Protection Source environment. 'kPure' indicates the Pure Storage Protection Source environment. 'Nimble' indicates the Nimble Storage Protection Source environment. 'kAzure' indicates the Microsoft's Azure Protection Source environment. 'kNetapp' indicates the Netapp Protection Source environment. 'kAgent' indicates the Agent Protection Source environment. 'kGenericNas' indicates the Generic Network Attached Storage Protection Source environment. 'kAcropolis' indicates the Acropolis Protection Source environment. 'kPhsicalFiles' indicates the Physical Files Protection Source environment. 'kIsilon' indicates the Dell EMC's Isilon Protection Source environment. 'kGPFS' indicates IBM's GPFS Protection Source environment. 'kKVM' indicates the KVM Protection Source environment. 'kAWS' indicates the AWS Protection Source environment. 'kExchange' indicates the Exchange Protection Source environment. 'kHyperVVSS' indicates the HyperV VSS Protection Source environment. 'kOracle' indicates the Oracle Protection Source environment. 'kGCP' indicates the Google Cloud Platform Protection Source environment. 'kFlashBlade' indicates the Flash Blade Protection Source environment. 'kAWSNative' indicates the AWS Native Protection Source environment. 'kO365' indicates the Office 365 Protection Source environment. 'kO365Outlook' indicates Office 365 outlook Protection Source environment. 'kHyperFlex' indicates the Hyper Flex Protection Source environment. 'kGCPNative' indicates the GCP Native Protection Source environment. 'kAzureNative' indicates the Azure Native Protection Source environment. 'kKubernetes' indicates a Kubernetes Protection Source environment. 'kElastifile' indicates Elastifile Protection Source environment. 'kAD' indicates Active Directory Protection Source environment. 'kRDSSnapshotManager' indicates AWS RDS Protection Source environment. 'kCassandra' indicates Cassandra Protection Source environment. 'kMongoDB' indicates MongoDB Protection Source environment. 'kCouchbase' indicates Couchbase Protection Source environment. 'kHdfs' indicates Hdfs Protection Source environment. 'kHive' indicates Hive Protection Source environment. 'kHBase' indicates HBase Protection Source environment.
	ApplicationEnvironment NullableString `json:"applicationEnvironment,omitempty"`
	// Specifies the Application Server objects whose data should be restored.
	ApplicationRestoreObjects []ApplicationRestoreObject `json:"applicationRestoreObjects,omitempty"`
	HostingProtectionSource *RestoreObjectDetails `json:"hostingProtectionSource,omitempty"`
	// Specifies the list of hosting protection source and Application restore objects tuple.
	ProtectionSourceAndApplicationObjects []ProtectionSourceAndApplicationRestoreObjects `json:"protectionSourceAndApplicationObjects,omitempty"`
}

// NewApplicationRestoreParameters instantiates a new ApplicationRestoreParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationRestoreParameters() *ApplicationRestoreParameters {
	this := ApplicationRestoreParameters{}
	return &this
}

// NewApplicationRestoreParametersWithDefaults instantiates a new ApplicationRestoreParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationRestoreParametersWithDefaults() *ApplicationRestoreParameters {
	this := ApplicationRestoreParameters{}
	return &this
}

// GetApplicationEnvironment returns the ApplicationEnvironment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationRestoreParameters) GetApplicationEnvironment() string {
	if o == nil || o.ApplicationEnvironment.Get() == nil {
		var ret string
		return ret
	}
	return *o.ApplicationEnvironment.Get()
}

// GetApplicationEnvironmentOk returns a tuple with the ApplicationEnvironment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationRestoreParameters) GetApplicationEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ApplicationEnvironment.Get(), o.ApplicationEnvironment.IsSet()
}

// HasApplicationEnvironment returns a boolean if a field has been set.
func (o *ApplicationRestoreParameters) HasApplicationEnvironment() bool {
	if o != nil && o.ApplicationEnvironment.IsSet() {
		return true
	}

	return false
}

// SetApplicationEnvironment gets a reference to the given NullableString and assigns it to the ApplicationEnvironment field.
func (o *ApplicationRestoreParameters) SetApplicationEnvironment(v string) {
	o.ApplicationEnvironment.Set(&v)
}
// SetApplicationEnvironmentNil sets the value for ApplicationEnvironment to be an explicit nil
func (o *ApplicationRestoreParameters) SetApplicationEnvironmentNil() {
	o.ApplicationEnvironment.Set(nil)
}

// UnsetApplicationEnvironment ensures that no value is present for ApplicationEnvironment, not even an explicit nil
func (o *ApplicationRestoreParameters) UnsetApplicationEnvironment() {
	o.ApplicationEnvironment.Unset()
}

// GetApplicationRestoreObjects returns the ApplicationRestoreObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationRestoreParameters) GetApplicationRestoreObjects() []ApplicationRestoreObject {
	if o == nil  {
		var ret []ApplicationRestoreObject
		return ret
	}
	return o.ApplicationRestoreObjects
}

// GetApplicationRestoreObjectsOk returns a tuple with the ApplicationRestoreObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationRestoreParameters) GetApplicationRestoreObjectsOk() (*[]ApplicationRestoreObject, bool) {
	if o == nil || o.ApplicationRestoreObjects == nil {
		return nil, false
	}
	return &o.ApplicationRestoreObjects, true
}

// HasApplicationRestoreObjects returns a boolean if a field has been set.
func (o *ApplicationRestoreParameters) HasApplicationRestoreObjects() bool {
	if o != nil && o.ApplicationRestoreObjects != nil {
		return true
	}

	return false
}

// SetApplicationRestoreObjects gets a reference to the given []ApplicationRestoreObject and assigns it to the ApplicationRestoreObjects field.
func (o *ApplicationRestoreParameters) SetApplicationRestoreObjects(v []ApplicationRestoreObject) {
	o.ApplicationRestoreObjects = v
}

// GetHostingProtectionSource returns the HostingProtectionSource field value if set, zero value otherwise.
func (o *ApplicationRestoreParameters) GetHostingProtectionSource() RestoreObjectDetails {
	if o == nil || o.HostingProtectionSource == nil {
		var ret RestoreObjectDetails
		return ret
	}
	return *o.HostingProtectionSource
}

// GetHostingProtectionSourceOk returns a tuple with the HostingProtectionSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationRestoreParameters) GetHostingProtectionSourceOk() (*RestoreObjectDetails, bool) {
	if o == nil || o.HostingProtectionSource == nil {
		return nil, false
	}
	return o.HostingProtectionSource, true
}

// HasHostingProtectionSource returns a boolean if a field has been set.
func (o *ApplicationRestoreParameters) HasHostingProtectionSource() bool {
	if o != nil && o.HostingProtectionSource != nil {
		return true
	}

	return false
}

// SetHostingProtectionSource gets a reference to the given RestoreObjectDetails and assigns it to the HostingProtectionSource field.
func (o *ApplicationRestoreParameters) SetHostingProtectionSource(v RestoreObjectDetails) {
	o.HostingProtectionSource = &v
}

// GetProtectionSourceAndApplicationObjects returns the ProtectionSourceAndApplicationObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationRestoreParameters) GetProtectionSourceAndApplicationObjects() []ProtectionSourceAndApplicationRestoreObjects {
	if o == nil  {
		var ret []ProtectionSourceAndApplicationRestoreObjects
		return ret
	}
	return o.ProtectionSourceAndApplicationObjects
}

// GetProtectionSourceAndApplicationObjectsOk returns a tuple with the ProtectionSourceAndApplicationObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationRestoreParameters) GetProtectionSourceAndApplicationObjectsOk() (*[]ProtectionSourceAndApplicationRestoreObjects, bool) {
	if o == nil || o.ProtectionSourceAndApplicationObjects == nil {
		return nil, false
	}
	return &o.ProtectionSourceAndApplicationObjects, true
}

// HasProtectionSourceAndApplicationObjects returns a boolean if a field has been set.
func (o *ApplicationRestoreParameters) HasProtectionSourceAndApplicationObjects() bool {
	if o != nil && o.ProtectionSourceAndApplicationObjects != nil {
		return true
	}

	return false
}

// SetProtectionSourceAndApplicationObjects gets a reference to the given []ProtectionSourceAndApplicationRestoreObjects and assigns it to the ProtectionSourceAndApplicationObjects field.
func (o *ApplicationRestoreParameters) SetProtectionSourceAndApplicationObjects(v []ProtectionSourceAndApplicationRestoreObjects) {
	o.ProtectionSourceAndApplicationObjects = v
}

func (o ApplicationRestoreParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationEnvironment.IsSet() {
		toSerialize["applicationEnvironment"] = o.ApplicationEnvironment.Get()
	}
	if o.ApplicationRestoreObjects != nil {
		toSerialize["applicationRestoreObjects"] = o.ApplicationRestoreObjects
	}
	if o.HostingProtectionSource != nil {
		toSerialize["hostingProtectionSource"] = o.HostingProtectionSource
	}
	if o.ProtectionSourceAndApplicationObjects != nil {
		toSerialize["protectionSourceAndApplicationObjects"] = o.ProtectionSourceAndApplicationObjects
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationRestoreParameters struct {
	value *ApplicationRestoreParameters
	isSet bool
}

func (v NullableApplicationRestoreParameters) Get() *ApplicationRestoreParameters {
	return v.value
}

func (v *NullableApplicationRestoreParameters) Set(val *ApplicationRestoreParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationRestoreParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationRestoreParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationRestoreParameters(val *ApplicationRestoreParameters) *NullableApplicationRestoreParameters {
	return &NullableApplicationRestoreParameters{value: val, isSet: true}
}

func (v NullableApplicationRestoreParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationRestoreParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


