/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ProtectionSourcesSummaryStats Specifies Job Run (Snapshot) summary statistics about the specified leaf Protection Source Object (such as a VM).
type ProtectionSourcesSummaryStats struct {
	// Specifies the start time of the first failed Job Run protecting this Protection Source Object. The time is specified as a Unix epoch Timestamp (in microseconds).
	FirstFailedRunTimeUsecs NullableInt64 `json:"firstFailedRunTimeUsecs,omitempty"`
	// Specifies the start time of the first successful Job Run protecting this Protection Source Object. The time is specified as a Unix epoch Timestamp (in microseconds).
	FirstSuccessfulRunTimeUsecs NullableInt64 `json:"firstSuccessfulRunTimeUsecs,omitempty"`
	// Specifies the start time of the last failed Job Run protecting this Protection Source Object. The time is specified as a Unix epoch Timestamp (in microseconds).
	LastFailedRunTimeUsecs NullableInt64 `json:"lastFailedRunTimeUsecs,omitempty"`
	// Specifies the end time of the last Job Run protecting this Protection Source Object. The time is specified as a Unix epoch Timestamp (in microseconds).
	LastRunEndTimeUsecs NullableInt64 `json:"lastRunEndTimeUsecs,omitempty"`
	// Specifies the error message associated with last run, if the last run has failed.
	LastRunErrorMsg NullableString `json:"lastRunErrorMsg,omitempty"`
	// Specifies the start time of the last Job Run protecting this Protection Source Object. The time is specified as a Unix epoch Timestamp (in microseconds).
	LastRunStartTimeUsecs NullableInt64 `json:"lastRunStartTimeUsecs,omitempty"`
	// Specifies the Job Run status of the last Job Run protecting this Protection Source Object. 'kSuccess' indicates that the Job Run was successful. 'kRunning' indicates that the Job Run is currently running. 'kWarning' indicates that the Job Run was successful but warnings were issued. 'kCancelled' indicates that the Job Run was canceled. 'kError' indicates the Job Run encountered an error and did not run to completion.
	LastRunStatus NullableString `json:"lastRunStatus,omitempty"`
	// Specifies the Job Run type of the last Job Run protecting this Protection Source Object. 'kRegular' indicates an incremental (CBT) backup. Incremental backups utilizing CBT (if supported) are captured of the target protection objects. The first run of a kRegular schedule captures all the blocks. 'kFull' indicates a full (no CBT) backup. A complete backup (all blocks) of the target protection objects are always captured and Change Block Tracking (CBT) is not utilized. 'kLog' indicates a Database Log backup. Capture the database transaction logs to allow rolling back to a specific point in time. 'kSystem' indicates system volume backup. It produces an image for bare metal recovery.
	LastRunType NullableString `json:"lastRunType,omitempty"`
	// Specifies the start time of the last successful Job Run protecting this Protection Source Object. The time is specified as a Unix epoch Timestamp (in microseconds).
	LastSuccessfulRunTimeUsecs NullableInt64 `json:"lastSuccessfulRunTimeUsecs,omitempty"`
	// Specifies the total number of bytes read while protecting this Protection Source Object.
	NumDataReadBytes NullableInt64 `json:"numDataReadBytes,omitempty"`
	// Specifies the total number of errors reported during Job Runs of this Protection Source Object.
	NumErrors NullableInt32 `json:"numErrors,omitempty"`
	// Specifies the total logical bytes protected for this Protection Source Object. The logical size is when the data is fully hydrated or expanded.
	NumLogicalBytesProtected NullableInt64 `json:"numLogicalBytesProtected,omitempty"`
	// Specifies the total number of Snapshots that are backing up this Protection Source Object.
	NumSnapshots NullableInt32 `json:"numSnapshots,omitempty"`
	// Specifies the total number of successful Job Runs protecting this Protection Source Object.
	NumSuccessRuns NullableInt32 `json:"numSuccessRuns,omitempty"`
	// Specifies the total number of warnings reported during Job Runs of this Protection Source Object.
	NumWarnings NullableInt32 `json:"numWarnings,omitempty"`
	// Specifies the leaf Protection Source Object (such as VM). Snapshot summary statistics are reported for this Protection Source Object.
	ProtectionSource NullableProtectionSource `json:"protectionSource,omitempty"`
	// Specifies the name of the Registered Source that is the top level parent of the specified Protection Source Object.
	RegisteredSource NullableString `json:"registeredSource,omitempty"`
	// Specifies basic information about tenants having access to the protection job.
	Tenants []TenantInfo `json:"tenants,omitempty"`
}

// NewProtectionSourcesSummaryStats instantiates a new ProtectionSourcesSummaryStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionSourcesSummaryStats() *ProtectionSourcesSummaryStats {
	this := ProtectionSourcesSummaryStats{}
	return &this
}

// NewProtectionSourcesSummaryStatsWithDefaults instantiates a new ProtectionSourcesSummaryStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionSourcesSummaryStatsWithDefaults() *ProtectionSourcesSummaryStats {
	this := ProtectionSourcesSummaryStats{}
	return &this
}

// GetFirstFailedRunTimeUsecs returns the FirstFailedRunTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetFirstFailedRunTimeUsecs() int64 {
	if o == nil || o.FirstFailedRunTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.FirstFailedRunTimeUsecs.Get()
}

// GetFirstFailedRunTimeUsecsOk returns a tuple with the FirstFailedRunTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetFirstFailedRunTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FirstFailedRunTimeUsecs.Get(), o.FirstFailedRunTimeUsecs.IsSet()
}

// HasFirstFailedRunTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasFirstFailedRunTimeUsecs() bool {
	if o != nil && o.FirstFailedRunTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetFirstFailedRunTimeUsecs gets a reference to the given NullableInt64 and assigns it to the FirstFailedRunTimeUsecs field.
func (o *ProtectionSourcesSummaryStats) SetFirstFailedRunTimeUsecs(v int64) {
	o.FirstFailedRunTimeUsecs.Set(&v)
}
// SetFirstFailedRunTimeUsecsNil sets the value for FirstFailedRunTimeUsecs to be an explicit nil
func (o *ProtectionSourcesSummaryStats) SetFirstFailedRunTimeUsecsNil() {
	o.FirstFailedRunTimeUsecs.Set(nil)
}

// UnsetFirstFailedRunTimeUsecs ensures that no value is present for FirstFailedRunTimeUsecs, not even an explicit nil
func (o *ProtectionSourcesSummaryStats) UnsetFirstFailedRunTimeUsecs() {
	o.FirstFailedRunTimeUsecs.Unset()
}

// GetFirstSuccessfulRunTimeUsecs returns the FirstSuccessfulRunTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetFirstSuccessfulRunTimeUsecs() int64 {
	if o == nil || o.FirstSuccessfulRunTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.FirstSuccessfulRunTimeUsecs.Get()
}

// GetFirstSuccessfulRunTimeUsecsOk returns a tuple with the FirstSuccessfulRunTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetFirstSuccessfulRunTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FirstSuccessfulRunTimeUsecs.Get(), o.FirstSuccessfulRunTimeUsecs.IsSet()
}

// HasFirstSuccessfulRunTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasFirstSuccessfulRunTimeUsecs() bool {
	if o != nil && o.FirstSuccessfulRunTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetFirstSuccessfulRunTimeUsecs gets a reference to the given NullableInt64 and assigns it to the FirstSuccessfulRunTimeUsecs field.
func (o *ProtectionSourcesSummaryStats) SetFirstSuccessfulRunTimeUsecs(v int64) {
	o.FirstSuccessfulRunTimeUsecs.Set(&v)
}
// SetFirstSuccessfulRunTimeUsecsNil sets the value for FirstSuccessfulRunTimeUsecs to be an explicit nil
func (o *ProtectionSourcesSummaryStats) SetFirstSuccessfulRunTimeUsecsNil() {
	o.FirstSuccessfulRunTimeUsecs.Set(nil)
}

// UnsetFirstSuccessfulRunTimeUsecs ensures that no value is present for FirstSuccessfulRunTimeUsecs, not even an explicit nil
func (o *ProtectionSourcesSummaryStats) UnsetFirstSuccessfulRunTimeUsecs() {
	o.FirstSuccessfulRunTimeUsecs.Unset()
}

// GetLastFailedRunTimeUsecs returns the LastFailedRunTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetLastFailedRunTimeUsecs() int64 {
	if o == nil || o.LastFailedRunTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.LastFailedRunTimeUsecs.Get()
}

// GetLastFailedRunTimeUsecsOk returns a tuple with the LastFailedRunTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetLastFailedRunTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastFailedRunTimeUsecs.Get(), o.LastFailedRunTimeUsecs.IsSet()
}

// HasLastFailedRunTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasLastFailedRunTimeUsecs() bool {
	if o != nil && o.LastFailedRunTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetLastFailedRunTimeUsecs gets a reference to the given NullableInt64 and assigns it to the LastFailedRunTimeUsecs field.
func (o *ProtectionSourcesSummaryStats) SetLastFailedRunTimeUsecs(v int64) {
	o.LastFailedRunTimeUsecs.Set(&v)
}
// SetLastFailedRunTimeUsecsNil sets the value for LastFailedRunTimeUsecs to be an explicit nil
func (o *ProtectionSourcesSummaryStats) SetLastFailedRunTimeUsecsNil() {
	o.LastFailedRunTimeUsecs.Set(nil)
}

// UnsetLastFailedRunTimeUsecs ensures that no value is present for LastFailedRunTimeUsecs, not even an explicit nil
func (o *ProtectionSourcesSummaryStats) UnsetLastFailedRunTimeUsecs() {
	o.LastFailedRunTimeUsecs.Unset()
}

// GetLastRunEndTimeUsecs returns the LastRunEndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetLastRunEndTimeUsecs() int64 {
	if o == nil || o.LastRunEndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.LastRunEndTimeUsecs.Get()
}

// GetLastRunEndTimeUsecsOk returns a tuple with the LastRunEndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetLastRunEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastRunEndTimeUsecs.Get(), o.LastRunEndTimeUsecs.IsSet()
}

// HasLastRunEndTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasLastRunEndTimeUsecs() bool {
	if o != nil && o.LastRunEndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetLastRunEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the LastRunEndTimeUsecs field.
func (o *ProtectionSourcesSummaryStats) SetLastRunEndTimeUsecs(v int64) {
	o.LastRunEndTimeUsecs.Set(&v)
}
// SetLastRunEndTimeUsecsNil sets the value for LastRunEndTimeUsecs to be an explicit nil
func (o *ProtectionSourcesSummaryStats) SetLastRunEndTimeUsecsNil() {
	o.LastRunEndTimeUsecs.Set(nil)
}

// UnsetLastRunEndTimeUsecs ensures that no value is present for LastRunEndTimeUsecs, not even an explicit nil
func (o *ProtectionSourcesSummaryStats) UnsetLastRunEndTimeUsecs() {
	o.LastRunEndTimeUsecs.Unset()
}

// GetLastRunErrorMsg returns the LastRunErrorMsg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetLastRunErrorMsg() string {
	if o == nil || o.LastRunErrorMsg.Get() == nil {
		var ret string
		return ret
	}
	return *o.LastRunErrorMsg.Get()
}

// GetLastRunErrorMsgOk returns a tuple with the LastRunErrorMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetLastRunErrorMsgOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastRunErrorMsg.Get(), o.LastRunErrorMsg.IsSet()
}

// HasLastRunErrorMsg returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasLastRunErrorMsg() bool {
	if o != nil && o.LastRunErrorMsg.IsSet() {
		return true
	}

	return false
}

// SetLastRunErrorMsg gets a reference to the given NullableString and assigns it to the LastRunErrorMsg field.
func (o *ProtectionSourcesSummaryStats) SetLastRunErrorMsg(v string) {
	o.LastRunErrorMsg.Set(&v)
}
// SetLastRunErrorMsgNil sets the value for LastRunErrorMsg to be an explicit nil
func (o *ProtectionSourcesSummaryStats) SetLastRunErrorMsgNil() {
	o.LastRunErrorMsg.Set(nil)
}

// UnsetLastRunErrorMsg ensures that no value is present for LastRunErrorMsg, not even an explicit nil
func (o *ProtectionSourcesSummaryStats) UnsetLastRunErrorMsg() {
	o.LastRunErrorMsg.Unset()
}

// GetLastRunStartTimeUsecs returns the LastRunStartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetLastRunStartTimeUsecs() int64 {
	if o == nil || o.LastRunStartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.LastRunStartTimeUsecs.Get()
}

// GetLastRunStartTimeUsecsOk returns a tuple with the LastRunStartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetLastRunStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastRunStartTimeUsecs.Get(), o.LastRunStartTimeUsecs.IsSet()
}

// HasLastRunStartTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasLastRunStartTimeUsecs() bool {
	if o != nil && o.LastRunStartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetLastRunStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the LastRunStartTimeUsecs field.
func (o *ProtectionSourcesSummaryStats) SetLastRunStartTimeUsecs(v int64) {
	o.LastRunStartTimeUsecs.Set(&v)
}
// SetLastRunStartTimeUsecsNil sets the value for LastRunStartTimeUsecs to be an explicit nil
func (o *ProtectionSourcesSummaryStats) SetLastRunStartTimeUsecsNil() {
	o.LastRunStartTimeUsecs.Set(nil)
}

// UnsetLastRunStartTimeUsecs ensures that no value is present for LastRunStartTimeUsecs, not even an explicit nil
func (o *ProtectionSourcesSummaryStats) UnsetLastRunStartTimeUsecs() {
	o.LastRunStartTimeUsecs.Unset()
}

// GetLastRunStatus returns the LastRunStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetLastRunStatus() string {
	if o == nil || o.LastRunStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.LastRunStatus.Get()
}

// GetLastRunStatusOk returns a tuple with the LastRunStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetLastRunStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastRunStatus.Get(), o.LastRunStatus.IsSet()
}

// HasLastRunStatus returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasLastRunStatus() bool {
	if o != nil && o.LastRunStatus.IsSet() {
		return true
	}

	return false
}

// SetLastRunStatus gets a reference to the given NullableString and assigns it to the LastRunStatus field.
func (o *ProtectionSourcesSummaryStats) SetLastRunStatus(v string) {
	o.LastRunStatus.Set(&v)
}
// SetLastRunStatusNil sets the value for LastRunStatus to be an explicit nil
func (o *ProtectionSourcesSummaryStats) SetLastRunStatusNil() {
	o.LastRunStatus.Set(nil)
}

// UnsetLastRunStatus ensures that no value is present for LastRunStatus, not even an explicit nil
func (o *ProtectionSourcesSummaryStats) UnsetLastRunStatus() {
	o.LastRunStatus.Unset()
}

// GetLastRunType returns the LastRunType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetLastRunType() string {
	if o == nil || o.LastRunType.Get() == nil {
		var ret string
		return ret
	}
	return *o.LastRunType.Get()
}

// GetLastRunTypeOk returns a tuple with the LastRunType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetLastRunTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastRunType.Get(), o.LastRunType.IsSet()
}

// HasLastRunType returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasLastRunType() bool {
	if o != nil && o.LastRunType.IsSet() {
		return true
	}

	return false
}

// SetLastRunType gets a reference to the given NullableString and assigns it to the LastRunType field.
func (o *ProtectionSourcesSummaryStats) SetLastRunType(v string) {
	o.LastRunType.Set(&v)
}
// SetLastRunTypeNil sets the value for LastRunType to be an explicit nil
func (o *ProtectionSourcesSummaryStats) SetLastRunTypeNil() {
	o.LastRunType.Set(nil)
}

// UnsetLastRunType ensures that no value is present for LastRunType, not even an explicit nil
func (o *ProtectionSourcesSummaryStats) UnsetLastRunType() {
	o.LastRunType.Unset()
}

// GetLastSuccessfulRunTimeUsecs returns the LastSuccessfulRunTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetLastSuccessfulRunTimeUsecs() int64 {
	if o == nil || o.LastSuccessfulRunTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.LastSuccessfulRunTimeUsecs.Get()
}

// GetLastSuccessfulRunTimeUsecsOk returns a tuple with the LastSuccessfulRunTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetLastSuccessfulRunTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastSuccessfulRunTimeUsecs.Get(), o.LastSuccessfulRunTimeUsecs.IsSet()
}

// HasLastSuccessfulRunTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasLastSuccessfulRunTimeUsecs() bool {
	if o != nil && o.LastSuccessfulRunTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetLastSuccessfulRunTimeUsecs gets a reference to the given NullableInt64 and assigns it to the LastSuccessfulRunTimeUsecs field.
func (o *ProtectionSourcesSummaryStats) SetLastSuccessfulRunTimeUsecs(v int64) {
	o.LastSuccessfulRunTimeUsecs.Set(&v)
}
// SetLastSuccessfulRunTimeUsecsNil sets the value for LastSuccessfulRunTimeUsecs to be an explicit nil
func (o *ProtectionSourcesSummaryStats) SetLastSuccessfulRunTimeUsecsNil() {
	o.LastSuccessfulRunTimeUsecs.Set(nil)
}

// UnsetLastSuccessfulRunTimeUsecs ensures that no value is present for LastSuccessfulRunTimeUsecs, not even an explicit nil
func (o *ProtectionSourcesSummaryStats) UnsetLastSuccessfulRunTimeUsecs() {
	o.LastSuccessfulRunTimeUsecs.Unset()
}

// GetNumDataReadBytes returns the NumDataReadBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetNumDataReadBytes() int64 {
	if o == nil || o.NumDataReadBytes.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumDataReadBytes.Get()
}

// GetNumDataReadBytesOk returns a tuple with the NumDataReadBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetNumDataReadBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumDataReadBytes.Get(), o.NumDataReadBytes.IsSet()
}

// HasNumDataReadBytes returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasNumDataReadBytes() bool {
	if o != nil && o.NumDataReadBytes.IsSet() {
		return true
	}

	return false
}

// SetNumDataReadBytes gets a reference to the given NullableInt64 and assigns it to the NumDataReadBytes field.
func (o *ProtectionSourcesSummaryStats) SetNumDataReadBytes(v int64) {
	o.NumDataReadBytes.Set(&v)
}
// SetNumDataReadBytesNil sets the value for NumDataReadBytes to be an explicit nil
func (o *ProtectionSourcesSummaryStats) SetNumDataReadBytesNil() {
	o.NumDataReadBytes.Set(nil)
}

// UnsetNumDataReadBytes ensures that no value is present for NumDataReadBytes, not even an explicit nil
func (o *ProtectionSourcesSummaryStats) UnsetNumDataReadBytes() {
	o.NumDataReadBytes.Unset()
}

// GetNumErrors returns the NumErrors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetNumErrors() int32 {
	if o == nil || o.NumErrors.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NumErrors.Get()
}

// GetNumErrorsOk returns a tuple with the NumErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetNumErrorsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumErrors.Get(), o.NumErrors.IsSet()
}

// HasNumErrors returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasNumErrors() bool {
	if o != nil && o.NumErrors.IsSet() {
		return true
	}

	return false
}

// SetNumErrors gets a reference to the given NullableInt32 and assigns it to the NumErrors field.
func (o *ProtectionSourcesSummaryStats) SetNumErrors(v int32) {
	o.NumErrors.Set(&v)
}
// SetNumErrorsNil sets the value for NumErrors to be an explicit nil
func (o *ProtectionSourcesSummaryStats) SetNumErrorsNil() {
	o.NumErrors.Set(nil)
}

// UnsetNumErrors ensures that no value is present for NumErrors, not even an explicit nil
func (o *ProtectionSourcesSummaryStats) UnsetNumErrors() {
	o.NumErrors.Unset()
}

// GetNumLogicalBytesProtected returns the NumLogicalBytesProtected field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetNumLogicalBytesProtected() int64 {
	if o == nil || o.NumLogicalBytesProtected.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumLogicalBytesProtected.Get()
}

// GetNumLogicalBytesProtectedOk returns a tuple with the NumLogicalBytesProtected field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetNumLogicalBytesProtectedOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumLogicalBytesProtected.Get(), o.NumLogicalBytesProtected.IsSet()
}

// HasNumLogicalBytesProtected returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasNumLogicalBytesProtected() bool {
	if o != nil && o.NumLogicalBytesProtected.IsSet() {
		return true
	}

	return false
}

// SetNumLogicalBytesProtected gets a reference to the given NullableInt64 and assigns it to the NumLogicalBytesProtected field.
func (o *ProtectionSourcesSummaryStats) SetNumLogicalBytesProtected(v int64) {
	o.NumLogicalBytesProtected.Set(&v)
}
// SetNumLogicalBytesProtectedNil sets the value for NumLogicalBytesProtected to be an explicit nil
func (o *ProtectionSourcesSummaryStats) SetNumLogicalBytesProtectedNil() {
	o.NumLogicalBytesProtected.Set(nil)
}

// UnsetNumLogicalBytesProtected ensures that no value is present for NumLogicalBytesProtected, not even an explicit nil
func (o *ProtectionSourcesSummaryStats) UnsetNumLogicalBytesProtected() {
	o.NumLogicalBytesProtected.Unset()
}

// GetNumSnapshots returns the NumSnapshots field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetNumSnapshots() int32 {
	if o == nil || o.NumSnapshots.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NumSnapshots.Get()
}

// GetNumSnapshotsOk returns a tuple with the NumSnapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetNumSnapshotsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumSnapshots.Get(), o.NumSnapshots.IsSet()
}

// HasNumSnapshots returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasNumSnapshots() bool {
	if o != nil && o.NumSnapshots.IsSet() {
		return true
	}

	return false
}

// SetNumSnapshots gets a reference to the given NullableInt32 and assigns it to the NumSnapshots field.
func (o *ProtectionSourcesSummaryStats) SetNumSnapshots(v int32) {
	o.NumSnapshots.Set(&v)
}
// SetNumSnapshotsNil sets the value for NumSnapshots to be an explicit nil
func (o *ProtectionSourcesSummaryStats) SetNumSnapshotsNil() {
	o.NumSnapshots.Set(nil)
}

// UnsetNumSnapshots ensures that no value is present for NumSnapshots, not even an explicit nil
func (o *ProtectionSourcesSummaryStats) UnsetNumSnapshots() {
	o.NumSnapshots.Unset()
}

// GetNumSuccessRuns returns the NumSuccessRuns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetNumSuccessRuns() int32 {
	if o == nil || o.NumSuccessRuns.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NumSuccessRuns.Get()
}

// GetNumSuccessRunsOk returns a tuple with the NumSuccessRuns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetNumSuccessRunsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumSuccessRuns.Get(), o.NumSuccessRuns.IsSet()
}

// HasNumSuccessRuns returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasNumSuccessRuns() bool {
	if o != nil && o.NumSuccessRuns.IsSet() {
		return true
	}

	return false
}

// SetNumSuccessRuns gets a reference to the given NullableInt32 and assigns it to the NumSuccessRuns field.
func (o *ProtectionSourcesSummaryStats) SetNumSuccessRuns(v int32) {
	o.NumSuccessRuns.Set(&v)
}
// SetNumSuccessRunsNil sets the value for NumSuccessRuns to be an explicit nil
func (o *ProtectionSourcesSummaryStats) SetNumSuccessRunsNil() {
	o.NumSuccessRuns.Set(nil)
}

// UnsetNumSuccessRuns ensures that no value is present for NumSuccessRuns, not even an explicit nil
func (o *ProtectionSourcesSummaryStats) UnsetNumSuccessRuns() {
	o.NumSuccessRuns.Unset()
}

// GetNumWarnings returns the NumWarnings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetNumWarnings() int32 {
	if o == nil || o.NumWarnings.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NumWarnings.Get()
}

// GetNumWarningsOk returns a tuple with the NumWarnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetNumWarningsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumWarnings.Get(), o.NumWarnings.IsSet()
}

// HasNumWarnings returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasNumWarnings() bool {
	if o != nil && o.NumWarnings.IsSet() {
		return true
	}

	return false
}

// SetNumWarnings gets a reference to the given NullableInt32 and assigns it to the NumWarnings field.
func (o *ProtectionSourcesSummaryStats) SetNumWarnings(v int32) {
	o.NumWarnings.Set(&v)
}
// SetNumWarningsNil sets the value for NumWarnings to be an explicit nil
func (o *ProtectionSourcesSummaryStats) SetNumWarningsNil() {
	o.NumWarnings.Set(nil)
}

// UnsetNumWarnings ensures that no value is present for NumWarnings, not even an explicit nil
func (o *ProtectionSourcesSummaryStats) UnsetNumWarnings() {
	o.NumWarnings.Unset()
}

// GetProtectionSource returns the ProtectionSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetProtectionSource() ProtectionSource {
	if o == nil || o.ProtectionSource.Get() == nil {
		var ret ProtectionSource
		return ret
	}
	return *o.ProtectionSource.Get()
}

// GetProtectionSourceOk returns a tuple with the ProtectionSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetProtectionSourceOk() (*ProtectionSource, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionSource.Get(), o.ProtectionSource.IsSet()
}

// HasProtectionSource returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasProtectionSource() bool {
	if o != nil && o.ProtectionSource.IsSet() {
		return true
	}

	return false
}

// SetProtectionSource gets a reference to the given NullableProtectionSource and assigns it to the ProtectionSource field.
func (o *ProtectionSourcesSummaryStats) SetProtectionSource(v ProtectionSource) {
	o.ProtectionSource.Set(&v)
}
// SetProtectionSourceNil sets the value for ProtectionSource to be an explicit nil
func (o *ProtectionSourcesSummaryStats) SetProtectionSourceNil() {
	o.ProtectionSource.Set(nil)
}

// UnsetProtectionSource ensures that no value is present for ProtectionSource, not even an explicit nil
func (o *ProtectionSourcesSummaryStats) UnsetProtectionSource() {
	o.ProtectionSource.Unset()
}

// GetRegisteredSource returns the RegisteredSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetRegisteredSource() string {
	if o == nil || o.RegisteredSource.Get() == nil {
		var ret string
		return ret
	}
	return *o.RegisteredSource.Get()
}

// GetRegisteredSourceOk returns a tuple with the RegisteredSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetRegisteredSourceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RegisteredSource.Get(), o.RegisteredSource.IsSet()
}

// HasRegisteredSource returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasRegisteredSource() bool {
	if o != nil && o.RegisteredSource.IsSet() {
		return true
	}

	return false
}

// SetRegisteredSource gets a reference to the given NullableString and assigns it to the RegisteredSource field.
func (o *ProtectionSourcesSummaryStats) SetRegisteredSource(v string) {
	o.RegisteredSource.Set(&v)
}
// SetRegisteredSourceNil sets the value for RegisteredSource to be an explicit nil
func (o *ProtectionSourcesSummaryStats) SetRegisteredSourceNil() {
	o.RegisteredSource.Set(nil)
}

// UnsetRegisteredSource ensures that no value is present for RegisteredSource, not even an explicit nil
func (o *ProtectionSourcesSummaryStats) UnsetRegisteredSource() {
	o.RegisteredSource.Unset()
}

// GetTenants returns the Tenants field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionSourcesSummaryStats) GetTenants() []TenantInfo {
	if o == nil  {
		var ret []TenantInfo
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionSourcesSummaryStats) GetTenantsOk() (*[]TenantInfo, bool) {
	if o == nil || o.Tenants == nil {
		return nil, false
	}
	return &o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *ProtectionSourcesSummaryStats) HasTenants() bool {
	if o != nil && o.Tenants != nil {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []TenantInfo and assigns it to the Tenants field.
func (o *ProtectionSourcesSummaryStats) SetTenants(v []TenantInfo) {
	o.Tenants = v
}

func (o ProtectionSourcesSummaryStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FirstFailedRunTimeUsecs.IsSet() {
		toSerialize["firstFailedRunTimeUsecs"] = o.FirstFailedRunTimeUsecs.Get()
	}
	if o.FirstSuccessfulRunTimeUsecs.IsSet() {
		toSerialize["firstSuccessfulRunTimeUsecs"] = o.FirstSuccessfulRunTimeUsecs.Get()
	}
	if o.LastFailedRunTimeUsecs.IsSet() {
		toSerialize["lastFailedRunTimeUsecs"] = o.LastFailedRunTimeUsecs.Get()
	}
	if o.LastRunEndTimeUsecs.IsSet() {
		toSerialize["lastRunEndTimeUsecs"] = o.LastRunEndTimeUsecs.Get()
	}
	if o.LastRunErrorMsg.IsSet() {
		toSerialize["lastRunErrorMsg"] = o.LastRunErrorMsg.Get()
	}
	if o.LastRunStartTimeUsecs.IsSet() {
		toSerialize["lastRunStartTimeUsecs"] = o.LastRunStartTimeUsecs.Get()
	}
	if o.LastRunStatus.IsSet() {
		toSerialize["lastRunStatus"] = o.LastRunStatus.Get()
	}
	if o.LastRunType.IsSet() {
		toSerialize["lastRunType"] = o.LastRunType.Get()
	}
	if o.LastSuccessfulRunTimeUsecs.IsSet() {
		toSerialize["lastSuccessfulRunTimeUsecs"] = o.LastSuccessfulRunTimeUsecs.Get()
	}
	if o.NumDataReadBytes.IsSet() {
		toSerialize["numDataReadBytes"] = o.NumDataReadBytes.Get()
	}
	if o.NumErrors.IsSet() {
		toSerialize["numErrors"] = o.NumErrors.Get()
	}
	if o.NumLogicalBytesProtected.IsSet() {
		toSerialize["numLogicalBytesProtected"] = o.NumLogicalBytesProtected.Get()
	}
	if o.NumSnapshots.IsSet() {
		toSerialize["numSnapshots"] = o.NumSnapshots.Get()
	}
	if o.NumSuccessRuns.IsSet() {
		toSerialize["numSuccessRuns"] = o.NumSuccessRuns.Get()
	}
	if o.NumWarnings.IsSet() {
		toSerialize["numWarnings"] = o.NumWarnings.Get()
	}
	if o.ProtectionSource.IsSet() {
		toSerialize["protectionSource"] = o.ProtectionSource.Get()
	}
	if o.RegisteredSource.IsSet() {
		toSerialize["registeredSource"] = o.RegisteredSource.Get()
	}
	if o.Tenants != nil {
		toSerialize["tenants"] = o.Tenants
	}
	return json.Marshal(toSerialize)
}

type NullableProtectionSourcesSummaryStats struct {
	value *ProtectionSourcesSummaryStats
	isSet bool
}

func (v NullableProtectionSourcesSummaryStats) Get() *ProtectionSourcesSummaryStats {
	return v.value
}

func (v *NullableProtectionSourcesSummaryStats) Set(val *ProtectionSourcesSummaryStats) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionSourcesSummaryStats) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionSourcesSummaryStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionSourcesSummaryStats(val *ProtectionSourcesSummaryStats) *NullableProtectionSourcesSummaryStats {
	return &NullableProtectionSourcesSummaryStats{value: val, isSet: true}
}

func (v NullableProtectionSourcesSummaryStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionSourcesSummaryStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


