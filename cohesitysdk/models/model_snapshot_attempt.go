/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// SnapshotAttempt Specifies information about a single snapshot.
type SnapshotAttempt struct {
	// Specifies the number of the attempts made by the Job Run to capture a snapshot of the object. For example, if an snapshot is successfully captured after three attempts, this field equals 3.
	AttemptNumber NullableInt64 `json:"attemptNumber,omitempty"`
	// Specifies the id of the Job Run that captured the snapshot.
	JobRunId NullableInt64 `json:"jobRunId,omitempty"`
	// Specifies the time when the Job Run starts capturing a snapshot. Specified as a Unix epoch Timestamp (in microseconds).
	StartedTimeUsecs NullableInt64 `json:"startedTimeUsecs,omitempty"`
}

// NewSnapshotAttempt instantiates a new SnapshotAttempt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotAttempt() *SnapshotAttempt {
	this := SnapshotAttempt{}
	return &this
}

// NewSnapshotAttemptWithDefaults instantiates a new SnapshotAttempt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotAttemptWithDefaults() *SnapshotAttempt {
	this := SnapshotAttempt{}
	return &this
}

// GetAttemptNumber returns the AttemptNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotAttempt) GetAttemptNumber() int64 {
	if o == nil || o.AttemptNumber.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AttemptNumber.Get()
}

// GetAttemptNumberOk returns a tuple with the AttemptNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotAttempt) GetAttemptNumberOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AttemptNumber.Get(), o.AttemptNumber.IsSet()
}

// HasAttemptNumber returns a boolean if a field has been set.
func (o *SnapshotAttempt) HasAttemptNumber() bool {
	if o != nil && o.AttemptNumber.IsSet() {
		return true
	}

	return false
}

// SetAttemptNumber gets a reference to the given NullableInt64 and assigns it to the AttemptNumber field.
func (o *SnapshotAttempt) SetAttemptNumber(v int64) {
	o.AttemptNumber.Set(&v)
}
// SetAttemptNumberNil sets the value for AttemptNumber to be an explicit nil
func (o *SnapshotAttempt) SetAttemptNumberNil() {
	o.AttemptNumber.Set(nil)
}

// UnsetAttemptNumber ensures that no value is present for AttemptNumber, not even an explicit nil
func (o *SnapshotAttempt) UnsetAttemptNumber() {
	o.AttemptNumber.Unset()
}

// GetJobRunId returns the JobRunId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotAttempt) GetJobRunId() int64 {
	if o == nil || o.JobRunId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.JobRunId.Get()
}

// GetJobRunIdOk returns a tuple with the JobRunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotAttempt) GetJobRunIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobRunId.Get(), o.JobRunId.IsSet()
}

// HasJobRunId returns a boolean if a field has been set.
func (o *SnapshotAttempt) HasJobRunId() bool {
	if o != nil && o.JobRunId.IsSet() {
		return true
	}

	return false
}

// SetJobRunId gets a reference to the given NullableInt64 and assigns it to the JobRunId field.
func (o *SnapshotAttempt) SetJobRunId(v int64) {
	o.JobRunId.Set(&v)
}
// SetJobRunIdNil sets the value for JobRunId to be an explicit nil
func (o *SnapshotAttempt) SetJobRunIdNil() {
	o.JobRunId.Set(nil)
}

// UnsetJobRunId ensures that no value is present for JobRunId, not even an explicit nil
func (o *SnapshotAttempt) UnsetJobRunId() {
	o.JobRunId.Unset()
}

// GetStartedTimeUsecs returns the StartedTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotAttempt) GetStartedTimeUsecs() int64 {
	if o == nil || o.StartedTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StartedTimeUsecs.Get()
}

// GetStartedTimeUsecsOk returns a tuple with the StartedTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotAttempt) GetStartedTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartedTimeUsecs.Get(), o.StartedTimeUsecs.IsSet()
}

// HasStartedTimeUsecs returns a boolean if a field has been set.
func (o *SnapshotAttempt) HasStartedTimeUsecs() bool {
	if o != nil && o.StartedTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetStartedTimeUsecs gets a reference to the given NullableInt64 and assigns it to the StartedTimeUsecs field.
func (o *SnapshotAttempt) SetStartedTimeUsecs(v int64) {
	o.StartedTimeUsecs.Set(&v)
}
// SetStartedTimeUsecsNil sets the value for StartedTimeUsecs to be an explicit nil
func (o *SnapshotAttempt) SetStartedTimeUsecsNil() {
	o.StartedTimeUsecs.Set(nil)
}

// UnsetStartedTimeUsecs ensures that no value is present for StartedTimeUsecs, not even an explicit nil
func (o *SnapshotAttempt) UnsetStartedTimeUsecs() {
	o.StartedTimeUsecs.Unset()
}

func (o SnapshotAttempt) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AttemptNumber.IsSet() {
		toSerialize["attemptNumber"] = o.AttemptNumber.Get()
	}
	if o.JobRunId.IsSet() {
		toSerialize["jobRunId"] = o.JobRunId.Get()
	}
	if o.StartedTimeUsecs.IsSet() {
		toSerialize["startedTimeUsecs"] = o.StartedTimeUsecs.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSnapshotAttempt struct {
	value *SnapshotAttempt
	isSet bool
}

func (v NullableSnapshotAttempt) Get() *SnapshotAttempt {
	return v.value
}

func (v *NullableSnapshotAttempt) Set(val *SnapshotAttempt) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotAttempt) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotAttempt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotAttempt(val *SnapshotAttempt) *NullableSnapshotAttempt {
	return &NullableSnapshotAttempt{value: val, isSet: true}
}

func (v NullableSnapshotAttempt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotAttempt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


