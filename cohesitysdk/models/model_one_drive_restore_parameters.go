/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// OneDriveRestoreParameters Specifies information needed for recovering Drive(s) & Drive items.
type OneDriveRestoreParameters struct {
	// Specifies the list of Drive owners which are to be restored along with the details of their drives.
	DriveOwnerList []OneDriveOwner `json:"driveOwnerList,omitempty"`
	// Specifies whether the objects are to be restored to the original drive.
	RestoreToOriginalDrive NullableBool `json:"restoreToOriginalDrive,omitempty"`
	// Specifies the Drive Id of the target user where the OneDrive items are to be recovered.
	TargetDriveId NullableString `json:"targetDriveId,omitempty"`
	// Specifies the target folder path within the drive where recovery has to be done.
	TargetFolderPath NullableString `json:"targetFolderPath,omitempty"`
	TargetUser *ProtectionSource `json:"targetUser,omitempty"`
}

// NewOneDriveRestoreParameters instantiates a new OneDriveRestoreParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOneDriveRestoreParameters() *OneDriveRestoreParameters {
	this := OneDriveRestoreParameters{}
	return &this
}

// NewOneDriveRestoreParametersWithDefaults instantiates a new OneDriveRestoreParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOneDriveRestoreParametersWithDefaults() *OneDriveRestoreParameters {
	this := OneDriveRestoreParameters{}
	return &this
}

// GetDriveOwnerList returns the DriveOwnerList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OneDriveRestoreParameters) GetDriveOwnerList() []OneDriveOwner {
	if o == nil  {
		var ret []OneDriveOwner
		return ret
	}
	return o.DriveOwnerList
}

// GetDriveOwnerListOk returns a tuple with the DriveOwnerList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OneDriveRestoreParameters) GetDriveOwnerListOk() (*[]OneDriveOwner, bool) {
	if o == nil || o.DriveOwnerList == nil {
		return nil, false
	}
	return &o.DriveOwnerList, true
}

// HasDriveOwnerList returns a boolean if a field has been set.
func (o *OneDriveRestoreParameters) HasDriveOwnerList() bool {
	if o != nil && o.DriveOwnerList != nil {
		return true
	}

	return false
}

// SetDriveOwnerList gets a reference to the given []OneDriveOwner and assigns it to the DriveOwnerList field.
func (o *OneDriveRestoreParameters) SetDriveOwnerList(v []OneDriveOwner) {
	o.DriveOwnerList = v
}

// GetRestoreToOriginalDrive returns the RestoreToOriginalDrive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OneDriveRestoreParameters) GetRestoreToOriginalDrive() bool {
	if o == nil || o.RestoreToOriginalDrive.Get() == nil {
		var ret bool
		return ret
	}
	return *o.RestoreToOriginalDrive.Get()
}

// GetRestoreToOriginalDriveOk returns a tuple with the RestoreToOriginalDrive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OneDriveRestoreParameters) GetRestoreToOriginalDriveOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RestoreToOriginalDrive.Get(), o.RestoreToOriginalDrive.IsSet()
}

// HasRestoreToOriginalDrive returns a boolean if a field has been set.
func (o *OneDriveRestoreParameters) HasRestoreToOriginalDrive() bool {
	if o != nil && o.RestoreToOriginalDrive.IsSet() {
		return true
	}

	return false
}

// SetRestoreToOriginalDrive gets a reference to the given NullableBool and assigns it to the RestoreToOriginalDrive field.
func (o *OneDriveRestoreParameters) SetRestoreToOriginalDrive(v bool) {
	o.RestoreToOriginalDrive.Set(&v)
}
// SetRestoreToOriginalDriveNil sets the value for RestoreToOriginalDrive to be an explicit nil
func (o *OneDriveRestoreParameters) SetRestoreToOriginalDriveNil() {
	o.RestoreToOriginalDrive.Set(nil)
}

// UnsetRestoreToOriginalDrive ensures that no value is present for RestoreToOriginalDrive, not even an explicit nil
func (o *OneDriveRestoreParameters) UnsetRestoreToOriginalDrive() {
	o.RestoreToOriginalDrive.Unset()
}

// GetTargetDriveId returns the TargetDriveId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OneDriveRestoreParameters) GetTargetDriveId() string {
	if o == nil || o.TargetDriveId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TargetDriveId.Get()
}

// GetTargetDriveIdOk returns a tuple with the TargetDriveId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OneDriveRestoreParameters) GetTargetDriveIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetDriveId.Get(), o.TargetDriveId.IsSet()
}

// HasTargetDriveId returns a boolean if a field has been set.
func (o *OneDriveRestoreParameters) HasTargetDriveId() bool {
	if o != nil && o.TargetDriveId.IsSet() {
		return true
	}

	return false
}

// SetTargetDriveId gets a reference to the given NullableString and assigns it to the TargetDriveId field.
func (o *OneDriveRestoreParameters) SetTargetDriveId(v string) {
	o.TargetDriveId.Set(&v)
}
// SetTargetDriveIdNil sets the value for TargetDriveId to be an explicit nil
func (o *OneDriveRestoreParameters) SetTargetDriveIdNil() {
	o.TargetDriveId.Set(nil)
}

// UnsetTargetDriveId ensures that no value is present for TargetDriveId, not even an explicit nil
func (o *OneDriveRestoreParameters) UnsetTargetDriveId() {
	o.TargetDriveId.Unset()
}

// GetTargetFolderPath returns the TargetFolderPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OneDriveRestoreParameters) GetTargetFolderPath() string {
	if o == nil || o.TargetFolderPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.TargetFolderPath.Get()
}

// GetTargetFolderPathOk returns a tuple with the TargetFolderPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OneDriveRestoreParameters) GetTargetFolderPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetFolderPath.Get(), o.TargetFolderPath.IsSet()
}

// HasTargetFolderPath returns a boolean if a field has been set.
func (o *OneDriveRestoreParameters) HasTargetFolderPath() bool {
	if o != nil && o.TargetFolderPath.IsSet() {
		return true
	}

	return false
}

// SetTargetFolderPath gets a reference to the given NullableString and assigns it to the TargetFolderPath field.
func (o *OneDriveRestoreParameters) SetTargetFolderPath(v string) {
	o.TargetFolderPath.Set(&v)
}
// SetTargetFolderPathNil sets the value for TargetFolderPath to be an explicit nil
func (o *OneDriveRestoreParameters) SetTargetFolderPathNil() {
	o.TargetFolderPath.Set(nil)
}

// UnsetTargetFolderPath ensures that no value is present for TargetFolderPath, not even an explicit nil
func (o *OneDriveRestoreParameters) UnsetTargetFolderPath() {
	o.TargetFolderPath.Unset()
}

// GetTargetUser returns the TargetUser field value if set, zero value otherwise.
func (o *OneDriveRestoreParameters) GetTargetUser() ProtectionSource {
	if o == nil || o.TargetUser == nil {
		var ret ProtectionSource
		return ret
	}
	return *o.TargetUser
}

// GetTargetUserOk returns a tuple with the TargetUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OneDriveRestoreParameters) GetTargetUserOk() (*ProtectionSource, bool) {
	if o == nil || o.TargetUser == nil {
		return nil, false
	}
	return o.TargetUser, true
}

// HasTargetUser returns a boolean if a field has been set.
func (o *OneDriveRestoreParameters) HasTargetUser() bool {
	if o != nil && o.TargetUser != nil {
		return true
	}

	return false
}

// SetTargetUser gets a reference to the given ProtectionSource and assigns it to the TargetUser field.
func (o *OneDriveRestoreParameters) SetTargetUser(v ProtectionSource) {
	o.TargetUser = &v
}

func (o OneDriveRestoreParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DriveOwnerList != nil {
		toSerialize["driveOwnerList"] = o.DriveOwnerList
	}
	if o.RestoreToOriginalDrive.IsSet() {
		toSerialize["restoreToOriginalDrive"] = o.RestoreToOriginalDrive.Get()
	}
	if o.TargetDriveId.IsSet() {
		toSerialize["targetDriveId"] = o.TargetDriveId.Get()
	}
	if o.TargetFolderPath.IsSet() {
		toSerialize["targetFolderPath"] = o.TargetFolderPath.Get()
	}
	if o.TargetUser != nil {
		toSerialize["targetUser"] = o.TargetUser
	}
	return json.Marshal(toSerialize)
}

type NullableOneDriveRestoreParameters struct {
	value *OneDriveRestoreParameters
	isSet bool
}

func (v NullableOneDriveRestoreParameters) Get() *OneDriveRestoreParameters {
	return v.value
}

func (v *NullableOneDriveRestoreParameters) Set(val *OneDriveRestoreParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableOneDriveRestoreParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableOneDriveRestoreParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOneDriveRestoreParameters(val *OneDriveRestoreParameters) *NullableOneDriveRestoreParameters {
	return &NullableOneDriveRestoreParameters{value: val, isSet: true}
}

func (v NullableOneDriveRestoreParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOneDriveRestoreParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


