/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// PhysicalSnapshotParams This message contains params that controls the snapshot process for a physical host.
type PhysicalSnapshotParams struct {
	// Whether fetching and storing of snapshot metadata was disabled.
	FetchSnapshotMetadataDisabled NullableBool `json:"fetchSnapshotMetadataDisabled,omitempty"`
	// Whether notify backup complete step was disabled.
	NotifyBackupCompleteDisabled NullableBool `json:"notifyBackupCompleteDisabled,omitempty"`
	// If copy_only_backup option is requrested at the time of the snapshot.
	VssCopyOnlyBackup NullableBool `json:"vssCopyOnlyBackup,omitempty"`
	// List of VSS writers that were excluded.
	VssExcludedWriters []string `json:"vssExcludedWriters,omitempty"`
}

// NewPhysicalSnapshotParams instantiates a new PhysicalSnapshotParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhysicalSnapshotParams() *PhysicalSnapshotParams {
	this := PhysicalSnapshotParams{}
	return &this
}

// NewPhysicalSnapshotParamsWithDefaults instantiates a new PhysicalSnapshotParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhysicalSnapshotParamsWithDefaults() *PhysicalSnapshotParams {
	this := PhysicalSnapshotParams{}
	return &this
}

// GetFetchSnapshotMetadataDisabled returns the FetchSnapshotMetadataDisabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhysicalSnapshotParams) GetFetchSnapshotMetadataDisabled() bool {
	if o == nil || o.FetchSnapshotMetadataDisabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.FetchSnapshotMetadataDisabled.Get()
}

// GetFetchSnapshotMetadataDisabledOk returns a tuple with the FetchSnapshotMetadataDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalSnapshotParams) GetFetchSnapshotMetadataDisabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FetchSnapshotMetadataDisabled.Get(), o.FetchSnapshotMetadataDisabled.IsSet()
}

// HasFetchSnapshotMetadataDisabled returns a boolean if a field has been set.
func (o *PhysicalSnapshotParams) HasFetchSnapshotMetadataDisabled() bool {
	if o != nil && o.FetchSnapshotMetadataDisabled.IsSet() {
		return true
	}

	return false
}

// SetFetchSnapshotMetadataDisabled gets a reference to the given NullableBool and assigns it to the FetchSnapshotMetadataDisabled field.
func (o *PhysicalSnapshotParams) SetFetchSnapshotMetadataDisabled(v bool) {
	o.FetchSnapshotMetadataDisabled.Set(&v)
}
// SetFetchSnapshotMetadataDisabledNil sets the value for FetchSnapshotMetadataDisabled to be an explicit nil
func (o *PhysicalSnapshotParams) SetFetchSnapshotMetadataDisabledNil() {
	o.FetchSnapshotMetadataDisabled.Set(nil)
}

// UnsetFetchSnapshotMetadataDisabled ensures that no value is present for FetchSnapshotMetadataDisabled, not even an explicit nil
func (o *PhysicalSnapshotParams) UnsetFetchSnapshotMetadataDisabled() {
	o.FetchSnapshotMetadataDisabled.Unset()
}

// GetNotifyBackupCompleteDisabled returns the NotifyBackupCompleteDisabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhysicalSnapshotParams) GetNotifyBackupCompleteDisabled() bool {
	if o == nil || o.NotifyBackupCompleteDisabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.NotifyBackupCompleteDisabled.Get()
}

// GetNotifyBackupCompleteDisabledOk returns a tuple with the NotifyBackupCompleteDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalSnapshotParams) GetNotifyBackupCompleteDisabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NotifyBackupCompleteDisabled.Get(), o.NotifyBackupCompleteDisabled.IsSet()
}

// HasNotifyBackupCompleteDisabled returns a boolean if a field has been set.
func (o *PhysicalSnapshotParams) HasNotifyBackupCompleteDisabled() bool {
	if o != nil && o.NotifyBackupCompleteDisabled.IsSet() {
		return true
	}

	return false
}

// SetNotifyBackupCompleteDisabled gets a reference to the given NullableBool and assigns it to the NotifyBackupCompleteDisabled field.
func (o *PhysicalSnapshotParams) SetNotifyBackupCompleteDisabled(v bool) {
	o.NotifyBackupCompleteDisabled.Set(&v)
}
// SetNotifyBackupCompleteDisabledNil sets the value for NotifyBackupCompleteDisabled to be an explicit nil
func (o *PhysicalSnapshotParams) SetNotifyBackupCompleteDisabledNil() {
	o.NotifyBackupCompleteDisabled.Set(nil)
}

// UnsetNotifyBackupCompleteDisabled ensures that no value is present for NotifyBackupCompleteDisabled, not even an explicit nil
func (o *PhysicalSnapshotParams) UnsetNotifyBackupCompleteDisabled() {
	o.NotifyBackupCompleteDisabled.Unset()
}

// GetVssCopyOnlyBackup returns the VssCopyOnlyBackup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhysicalSnapshotParams) GetVssCopyOnlyBackup() bool {
	if o == nil || o.VssCopyOnlyBackup.Get() == nil {
		var ret bool
		return ret
	}
	return *o.VssCopyOnlyBackup.Get()
}

// GetVssCopyOnlyBackupOk returns a tuple with the VssCopyOnlyBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalSnapshotParams) GetVssCopyOnlyBackupOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VssCopyOnlyBackup.Get(), o.VssCopyOnlyBackup.IsSet()
}

// HasVssCopyOnlyBackup returns a boolean if a field has been set.
func (o *PhysicalSnapshotParams) HasVssCopyOnlyBackup() bool {
	if o != nil && o.VssCopyOnlyBackup.IsSet() {
		return true
	}

	return false
}

// SetVssCopyOnlyBackup gets a reference to the given NullableBool and assigns it to the VssCopyOnlyBackup field.
func (o *PhysicalSnapshotParams) SetVssCopyOnlyBackup(v bool) {
	o.VssCopyOnlyBackup.Set(&v)
}
// SetVssCopyOnlyBackupNil sets the value for VssCopyOnlyBackup to be an explicit nil
func (o *PhysicalSnapshotParams) SetVssCopyOnlyBackupNil() {
	o.VssCopyOnlyBackup.Set(nil)
}

// UnsetVssCopyOnlyBackup ensures that no value is present for VssCopyOnlyBackup, not even an explicit nil
func (o *PhysicalSnapshotParams) UnsetVssCopyOnlyBackup() {
	o.VssCopyOnlyBackup.Unset()
}

// GetVssExcludedWriters returns the VssExcludedWriters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhysicalSnapshotParams) GetVssExcludedWriters() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.VssExcludedWriters
}

// GetVssExcludedWritersOk returns a tuple with the VssExcludedWriters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalSnapshotParams) GetVssExcludedWritersOk() (*[]string, bool) {
	if o == nil || o.VssExcludedWriters == nil {
		return nil, false
	}
	return &o.VssExcludedWriters, true
}

// HasVssExcludedWriters returns a boolean if a field has been set.
func (o *PhysicalSnapshotParams) HasVssExcludedWriters() bool {
	if o != nil && o.VssExcludedWriters != nil {
		return true
	}

	return false
}

// SetVssExcludedWriters gets a reference to the given []string and assigns it to the VssExcludedWriters field.
func (o *PhysicalSnapshotParams) SetVssExcludedWriters(v []string) {
	o.VssExcludedWriters = v
}

func (o PhysicalSnapshotParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FetchSnapshotMetadataDisabled.IsSet() {
		toSerialize["fetchSnapshotMetadataDisabled"] = o.FetchSnapshotMetadataDisabled.Get()
	}
	if o.NotifyBackupCompleteDisabled.IsSet() {
		toSerialize["notifyBackupCompleteDisabled"] = o.NotifyBackupCompleteDisabled.Get()
	}
	if o.VssCopyOnlyBackup.IsSet() {
		toSerialize["vssCopyOnlyBackup"] = o.VssCopyOnlyBackup.Get()
	}
	if o.VssExcludedWriters != nil {
		toSerialize["vssExcludedWriters"] = o.VssExcludedWriters
	}
	return json.Marshal(toSerialize)
}

type NullablePhysicalSnapshotParams struct {
	value *PhysicalSnapshotParams
	isSet bool
}

func (v NullablePhysicalSnapshotParams) Get() *PhysicalSnapshotParams {
	return v.value
}

func (v *NullablePhysicalSnapshotParams) Set(val *PhysicalSnapshotParams) {
	v.value = val
	v.isSet = true
}

func (v NullablePhysicalSnapshotParams) IsSet() bool {
	return v.isSet
}

func (v *NullablePhysicalSnapshotParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhysicalSnapshotParams(val *PhysicalSnapshotParams) *NullablePhysicalSnapshotParams {
	return &NullablePhysicalSnapshotParams{value: val, isSet: true}
}

func (v NullablePhysicalSnapshotParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhysicalSnapshotParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


