/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// DestroyClonedTaskStateProto struct for DestroyClonedTaskStateProto
type DestroyClonedTaskStateProto struct {
	// Denotes the target for action executor(Bridge/Bridge_Proxy) on which task on slave should execute actions.
	ActionExecutorTargetType NullableInt32 `json:"actionExecutorTargetType,omitempty"`
	// The name of the clone task.
	CloneTaskName NullableString `json:"cloneTaskName,omitempty"`
	DatastoreEntity *EntityProto `json:"datastoreEntity,omitempty"`
	DeployVmsToCloudTaskState *DeployVMsToCloudTaskStateProto `json:"deployVmsToCloudTaskState,omitempty"`
	DestroyCloneAppTaskInfo *DestroyCloneAppTaskInfoProto `json:"destroyCloneAppTaskInfo,omitempty"`
	DestroyCloneVmTaskInfo *DestroyClonedVMTaskInfoProto `json:"destroyCloneVmTaskInfo,omitempty"`
	DestroyMountVolumesTaskInfo *DestroyMountVolumesTaskInfoProto `json:"destroyMountVolumesTaskInfo,omitempty"`
	// If the destroy clone task has finished, this field contains the end time of the task.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	Error *ErrorProto `json:"error,omitempty"`
	FolderEntity *EntityProto `json:"folderEntity,omitempty"`
	// flag used to perform force delete, ignore error on delete steps
	ForceDelete NullableBool `json:"forceDelete,omitempty"`
	// The full external view name where cloned objects are placed.
	FullViewName NullableString `json:"fullViewName,omitempty"`
	ParentSourceConnectionParams *ConnectorParams `json:"parentSourceConnectionParams,omitempty"`
	// The id of the task that triggered the destroy task. This will be used by refresh task to mark the destroy task as internal sub-task.
	ParentTaskId NullableInt64 `json:"parentTaskId,omitempty"`
	// The unique id of the task that performed the clone operation.
	PerformCloneTaskId NullableInt64 `json:"performCloneTaskId,omitempty"`
	// The type of the restore/clone operation that is being destroyed.
	RestoreType NullableInt32 `json:"restoreType,omitempty"`
	// Constituent id (and the gandalf session id) where this task has been scheduled. If -1, the task is not running at any slave. It's possible that the task was previously scheduled, but is now being re-scheduled.
	ScheduledConstituentId NullableInt64 `json:"scheduledConstituentId,omitempty"`
	ScheduledGandalfSessionId NullableInt64 `json:"scheduledGandalfSessionId,omitempty"`
	// The start time of this destroy clone task.
	StartTimeUsecs NullableInt64 `json:"startTimeUsecs,omitempty"`
	// Status of the destroy clone task.
	Status NullableInt32 `json:"status,omitempty"`
	// A globally unique id of this destroy clone task.
	TaskId NullableInt64 `json:"taskId,omitempty"`
	// The type of environment that is being operated on.
	Type NullableInt32 `json:"type,omitempty"`
	// The user who requested this destroy clone task.
	User NullableString `json:"user,omitempty"`
	UserInfo *UserInformation `json:"userInfo,omitempty"`
	VcdConfig *RestoredObjectVCDConfigProto `json:"vcdConfig,omitempty"`
	// The view box id to which 'view_name' belongs to.
	ViewBoxId NullableInt64 `json:"viewBoxId,omitempty"`
	// The view name as provided by the user for the clone operation.
	ViewNameDEPRECATED NullableString `json:"viewName_DEPRECATED,omitempty"`
}

// NewDestroyClonedTaskStateProto instantiates a new DestroyClonedTaskStateProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDestroyClonedTaskStateProto() *DestroyClonedTaskStateProto {
	this := DestroyClonedTaskStateProto{}
	return &this
}

// NewDestroyClonedTaskStateProtoWithDefaults instantiates a new DestroyClonedTaskStateProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDestroyClonedTaskStateProtoWithDefaults() *DestroyClonedTaskStateProto {
	this := DestroyClonedTaskStateProto{}
	return &this
}

// GetActionExecutorTargetType returns the ActionExecutorTargetType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedTaskStateProto) GetActionExecutorTargetType() int32 {
	if o == nil || o.ActionExecutorTargetType.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ActionExecutorTargetType.Get()
}

// GetActionExecutorTargetTypeOk returns a tuple with the ActionExecutorTargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedTaskStateProto) GetActionExecutorTargetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ActionExecutorTargetType.Get(), o.ActionExecutorTargetType.IsSet()
}

// HasActionExecutorTargetType returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasActionExecutorTargetType() bool {
	if o != nil && o.ActionExecutorTargetType.IsSet() {
		return true
	}

	return false
}

// SetActionExecutorTargetType gets a reference to the given NullableInt32 and assigns it to the ActionExecutorTargetType field.
func (o *DestroyClonedTaskStateProto) SetActionExecutorTargetType(v int32) {
	o.ActionExecutorTargetType.Set(&v)
}
// SetActionExecutorTargetTypeNil sets the value for ActionExecutorTargetType to be an explicit nil
func (o *DestroyClonedTaskStateProto) SetActionExecutorTargetTypeNil() {
	o.ActionExecutorTargetType.Set(nil)
}

// UnsetActionExecutorTargetType ensures that no value is present for ActionExecutorTargetType, not even an explicit nil
func (o *DestroyClonedTaskStateProto) UnsetActionExecutorTargetType() {
	o.ActionExecutorTargetType.Unset()
}

// GetCloneTaskName returns the CloneTaskName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedTaskStateProto) GetCloneTaskName() string {
	if o == nil || o.CloneTaskName.Get() == nil {
		var ret string
		return ret
	}
	return *o.CloneTaskName.Get()
}

// GetCloneTaskNameOk returns a tuple with the CloneTaskName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedTaskStateProto) GetCloneTaskNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CloneTaskName.Get(), o.CloneTaskName.IsSet()
}

// HasCloneTaskName returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasCloneTaskName() bool {
	if o != nil && o.CloneTaskName.IsSet() {
		return true
	}

	return false
}

// SetCloneTaskName gets a reference to the given NullableString and assigns it to the CloneTaskName field.
func (o *DestroyClonedTaskStateProto) SetCloneTaskName(v string) {
	o.CloneTaskName.Set(&v)
}
// SetCloneTaskNameNil sets the value for CloneTaskName to be an explicit nil
func (o *DestroyClonedTaskStateProto) SetCloneTaskNameNil() {
	o.CloneTaskName.Set(nil)
}

// UnsetCloneTaskName ensures that no value is present for CloneTaskName, not even an explicit nil
func (o *DestroyClonedTaskStateProto) UnsetCloneTaskName() {
	o.CloneTaskName.Unset()
}

// GetDatastoreEntity returns the DatastoreEntity field value if set, zero value otherwise.
func (o *DestroyClonedTaskStateProto) GetDatastoreEntity() EntityProto {
	if o == nil || o.DatastoreEntity == nil {
		var ret EntityProto
		return ret
	}
	return *o.DatastoreEntity
}

// GetDatastoreEntityOk returns a tuple with the DatastoreEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestroyClonedTaskStateProto) GetDatastoreEntityOk() (*EntityProto, bool) {
	if o == nil || o.DatastoreEntity == nil {
		return nil, false
	}
	return o.DatastoreEntity, true
}

// HasDatastoreEntity returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasDatastoreEntity() bool {
	if o != nil && o.DatastoreEntity != nil {
		return true
	}

	return false
}

// SetDatastoreEntity gets a reference to the given EntityProto and assigns it to the DatastoreEntity field.
func (o *DestroyClonedTaskStateProto) SetDatastoreEntity(v EntityProto) {
	o.DatastoreEntity = &v
}

// GetDeployVmsToCloudTaskState returns the DeployVmsToCloudTaskState field value if set, zero value otherwise.
func (o *DestroyClonedTaskStateProto) GetDeployVmsToCloudTaskState() DeployVMsToCloudTaskStateProto {
	if o == nil || o.DeployVmsToCloudTaskState == nil {
		var ret DeployVMsToCloudTaskStateProto
		return ret
	}
	return *o.DeployVmsToCloudTaskState
}

// GetDeployVmsToCloudTaskStateOk returns a tuple with the DeployVmsToCloudTaskState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestroyClonedTaskStateProto) GetDeployVmsToCloudTaskStateOk() (*DeployVMsToCloudTaskStateProto, bool) {
	if o == nil || o.DeployVmsToCloudTaskState == nil {
		return nil, false
	}
	return o.DeployVmsToCloudTaskState, true
}

// HasDeployVmsToCloudTaskState returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasDeployVmsToCloudTaskState() bool {
	if o != nil && o.DeployVmsToCloudTaskState != nil {
		return true
	}

	return false
}

// SetDeployVmsToCloudTaskState gets a reference to the given DeployVMsToCloudTaskStateProto and assigns it to the DeployVmsToCloudTaskState field.
func (o *DestroyClonedTaskStateProto) SetDeployVmsToCloudTaskState(v DeployVMsToCloudTaskStateProto) {
	o.DeployVmsToCloudTaskState = &v
}

// GetDestroyCloneAppTaskInfo returns the DestroyCloneAppTaskInfo field value if set, zero value otherwise.
func (o *DestroyClonedTaskStateProto) GetDestroyCloneAppTaskInfo() DestroyCloneAppTaskInfoProto {
	if o == nil || o.DestroyCloneAppTaskInfo == nil {
		var ret DestroyCloneAppTaskInfoProto
		return ret
	}
	return *o.DestroyCloneAppTaskInfo
}

// GetDestroyCloneAppTaskInfoOk returns a tuple with the DestroyCloneAppTaskInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestroyClonedTaskStateProto) GetDestroyCloneAppTaskInfoOk() (*DestroyCloneAppTaskInfoProto, bool) {
	if o == nil || o.DestroyCloneAppTaskInfo == nil {
		return nil, false
	}
	return o.DestroyCloneAppTaskInfo, true
}

// HasDestroyCloneAppTaskInfo returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasDestroyCloneAppTaskInfo() bool {
	if o != nil && o.DestroyCloneAppTaskInfo != nil {
		return true
	}

	return false
}

// SetDestroyCloneAppTaskInfo gets a reference to the given DestroyCloneAppTaskInfoProto and assigns it to the DestroyCloneAppTaskInfo field.
func (o *DestroyClonedTaskStateProto) SetDestroyCloneAppTaskInfo(v DestroyCloneAppTaskInfoProto) {
	o.DestroyCloneAppTaskInfo = &v
}

// GetDestroyCloneVmTaskInfo returns the DestroyCloneVmTaskInfo field value if set, zero value otherwise.
func (o *DestroyClonedTaskStateProto) GetDestroyCloneVmTaskInfo() DestroyClonedVMTaskInfoProto {
	if o == nil || o.DestroyCloneVmTaskInfo == nil {
		var ret DestroyClonedVMTaskInfoProto
		return ret
	}
	return *o.DestroyCloneVmTaskInfo
}

// GetDestroyCloneVmTaskInfoOk returns a tuple with the DestroyCloneVmTaskInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestroyClonedTaskStateProto) GetDestroyCloneVmTaskInfoOk() (*DestroyClonedVMTaskInfoProto, bool) {
	if o == nil || o.DestroyCloneVmTaskInfo == nil {
		return nil, false
	}
	return o.DestroyCloneVmTaskInfo, true
}

// HasDestroyCloneVmTaskInfo returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasDestroyCloneVmTaskInfo() bool {
	if o != nil && o.DestroyCloneVmTaskInfo != nil {
		return true
	}

	return false
}

// SetDestroyCloneVmTaskInfo gets a reference to the given DestroyClonedVMTaskInfoProto and assigns it to the DestroyCloneVmTaskInfo field.
func (o *DestroyClonedTaskStateProto) SetDestroyCloneVmTaskInfo(v DestroyClonedVMTaskInfoProto) {
	o.DestroyCloneVmTaskInfo = &v
}

// GetDestroyMountVolumesTaskInfo returns the DestroyMountVolumesTaskInfo field value if set, zero value otherwise.
func (o *DestroyClonedTaskStateProto) GetDestroyMountVolumesTaskInfo() DestroyMountVolumesTaskInfoProto {
	if o == nil || o.DestroyMountVolumesTaskInfo == nil {
		var ret DestroyMountVolumesTaskInfoProto
		return ret
	}
	return *o.DestroyMountVolumesTaskInfo
}

// GetDestroyMountVolumesTaskInfoOk returns a tuple with the DestroyMountVolumesTaskInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestroyClonedTaskStateProto) GetDestroyMountVolumesTaskInfoOk() (*DestroyMountVolumesTaskInfoProto, bool) {
	if o == nil || o.DestroyMountVolumesTaskInfo == nil {
		return nil, false
	}
	return o.DestroyMountVolumesTaskInfo, true
}

// HasDestroyMountVolumesTaskInfo returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasDestroyMountVolumesTaskInfo() bool {
	if o != nil && o.DestroyMountVolumesTaskInfo != nil {
		return true
	}

	return false
}

// SetDestroyMountVolumesTaskInfo gets a reference to the given DestroyMountVolumesTaskInfoProto and assigns it to the DestroyMountVolumesTaskInfo field.
func (o *DestroyClonedTaskStateProto) SetDestroyMountVolumesTaskInfo(v DestroyMountVolumesTaskInfoProto) {
	o.DestroyMountVolumesTaskInfo = &v
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedTaskStateProto) GetEndTimeUsecs() int64 {
	if o == nil || o.EndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedTaskStateProto) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *DestroyClonedTaskStateProto) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *DestroyClonedTaskStateProto) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *DestroyClonedTaskStateProto) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *DestroyClonedTaskStateProto) GetError() ErrorProto {
	if o == nil || o.Error == nil {
		var ret ErrorProto
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestroyClonedTaskStateProto) GetErrorOk() (*ErrorProto, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given ErrorProto and assigns it to the Error field.
func (o *DestroyClonedTaskStateProto) SetError(v ErrorProto) {
	o.Error = &v
}

// GetFolderEntity returns the FolderEntity field value if set, zero value otherwise.
func (o *DestroyClonedTaskStateProto) GetFolderEntity() EntityProto {
	if o == nil || o.FolderEntity == nil {
		var ret EntityProto
		return ret
	}
	return *o.FolderEntity
}

// GetFolderEntityOk returns a tuple with the FolderEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestroyClonedTaskStateProto) GetFolderEntityOk() (*EntityProto, bool) {
	if o == nil || o.FolderEntity == nil {
		return nil, false
	}
	return o.FolderEntity, true
}

// HasFolderEntity returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasFolderEntity() bool {
	if o != nil && o.FolderEntity != nil {
		return true
	}

	return false
}

// SetFolderEntity gets a reference to the given EntityProto and assigns it to the FolderEntity field.
func (o *DestroyClonedTaskStateProto) SetFolderEntity(v EntityProto) {
	o.FolderEntity = &v
}

// GetForceDelete returns the ForceDelete field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedTaskStateProto) GetForceDelete() bool {
	if o == nil || o.ForceDelete.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ForceDelete.Get()
}

// GetForceDeleteOk returns a tuple with the ForceDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedTaskStateProto) GetForceDeleteOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ForceDelete.Get(), o.ForceDelete.IsSet()
}

// HasForceDelete returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasForceDelete() bool {
	if o != nil && o.ForceDelete.IsSet() {
		return true
	}

	return false
}

// SetForceDelete gets a reference to the given NullableBool and assigns it to the ForceDelete field.
func (o *DestroyClonedTaskStateProto) SetForceDelete(v bool) {
	o.ForceDelete.Set(&v)
}
// SetForceDeleteNil sets the value for ForceDelete to be an explicit nil
func (o *DestroyClonedTaskStateProto) SetForceDeleteNil() {
	o.ForceDelete.Set(nil)
}

// UnsetForceDelete ensures that no value is present for ForceDelete, not even an explicit nil
func (o *DestroyClonedTaskStateProto) UnsetForceDelete() {
	o.ForceDelete.Unset()
}

// GetFullViewName returns the FullViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedTaskStateProto) GetFullViewName() string {
	if o == nil || o.FullViewName.Get() == nil {
		var ret string
		return ret
	}
	return *o.FullViewName.Get()
}

// GetFullViewNameOk returns a tuple with the FullViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedTaskStateProto) GetFullViewNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FullViewName.Get(), o.FullViewName.IsSet()
}

// HasFullViewName returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasFullViewName() bool {
	if o != nil && o.FullViewName.IsSet() {
		return true
	}

	return false
}

// SetFullViewName gets a reference to the given NullableString and assigns it to the FullViewName field.
func (o *DestroyClonedTaskStateProto) SetFullViewName(v string) {
	o.FullViewName.Set(&v)
}
// SetFullViewNameNil sets the value for FullViewName to be an explicit nil
func (o *DestroyClonedTaskStateProto) SetFullViewNameNil() {
	o.FullViewName.Set(nil)
}

// UnsetFullViewName ensures that no value is present for FullViewName, not even an explicit nil
func (o *DestroyClonedTaskStateProto) UnsetFullViewName() {
	o.FullViewName.Unset()
}

// GetParentSourceConnectionParams returns the ParentSourceConnectionParams field value if set, zero value otherwise.
func (o *DestroyClonedTaskStateProto) GetParentSourceConnectionParams() ConnectorParams {
	if o == nil || o.ParentSourceConnectionParams == nil {
		var ret ConnectorParams
		return ret
	}
	return *o.ParentSourceConnectionParams
}

// GetParentSourceConnectionParamsOk returns a tuple with the ParentSourceConnectionParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestroyClonedTaskStateProto) GetParentSourceConnectionParamsOk() (*ConnectorParams, bool) {
	if o == nil || o.ParentSourceConnectionParams == nil {
		return nil, false
	}
	return o.ParentSourceConnectionParams, true
}

// HasParentSourceConnectionParams returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasParentSourceConnectionParams() bool {
	if o != nil && o.ParentSourceConnectionParams != nil {
		return true
	}

	return false
}

// SetParentSourceConnectionParams gets a reference to the given ConnectorParams and assigns it to the ParentSourceConnectionParams field.
func (o *DestroyClonedTaskStateProto) SetParentSourceConnectionParams(v ConnectorParams) {
	o.ParentSourceConnectionParams = &v
}

// GetParentTaskId returns the ParentTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedTaskStateProto) GetParentTaskId() int64 {
	if o == nil || o.ParentTaskId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ParentTaskId.Get()
}

// GetParentTaskIdOk returns a tuple with the ParentTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedTaskStateProto) GetParentTaskIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ParentTaskId.Get(), o.ParentTaskId.IsSet()
}

// HasParentTaskId returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasParentTaskId() bool {
	if o != nil && o.ParentTaskId.IsSet() {
		return true
	}

	return false
}

// SetParentTaskId gets a reference to the given NullableInt64 and assigns it to the ParentTaskId field.
func (o *DestroyClonedTaskStateProto) SetParentTaskId(v int64) {
	o.ParentTaskId.Set(&v)
}
// SetParentTaskIdNil sets the value for ParentTaskId to be an explicit nil
func (o *DestroyClonedTaskStateProto) SetParentTaskIdNil() {
	o.ParentTaskId.Set(nil)
}

// UnsetParentTaskId ensures that no value is present for ParentTaskId, not even an explicit nil
func (o *DestroyClonedTaskStateProto) UnsetParentTaskId() {
	o.ParentTaskId.Unset()
}

// GetPerformCloneTaskId returns the PerformCloneTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedTaskStateProto) GetPerformCloneTaskId() int64 {
	if o == nil || o.PerformCloneTaskId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.PerformCloneTaskId.Get()
}

// GetPerformCloneTaskIdOk returns a tuple with the PerformCloneTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedTaskStateProto) GetPerformCloneTaskIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PerformCloneTaskId.Get(), o.PerformCloneTaskId.IsSet()
}

// HasPerformCloneTaskId returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasPerformCloneTaskId() bool {
	if o != nil && o.PerformCloneTaskId.IsSet() {
		return true
	}

	return false
}

// SetPerformCloneTaskId gets a reference to the given NullableInt64 and assigns it to the PerformCloneTaskId field.
func (o *DestroyClonedTaskStateProto) SetPerformCloneTaskId(v int64) {
	o.PerformCloneTaskId.Set(&v)
}
// SetPerformCloneTaskIdNil sets the value for PerformCloneTaskId to be an explicit nil
func (o *DestroyClonedTaskStateProto) SetPerformCloneTaskIdNil() {
	o.PerformCloneTaskId.Set(nil)
}

// UnsetPerformCloneTaskId ensures that no value is present for PerformCloneTaskId, not even an explicit nil
func (o *DestroyClonedTaskStateProto) UnsetPerformCloneTaskId() {
	o.PerformCloneTaskId.Unset()
}

// GetRestoreType returns the RestoreType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedTaskStateProto) GetRestoreType() int32 {
	if o == nil || o.RestoreType.Get() == nil {
		var ret int32
		return ret
	}
	return *o.RestoreType.Get()
}

// GetRestoreTypeOk returns a tuple with the RestoreType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedTaskStateProto) GetRestoreTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RestoreType.Get(), o.RestoreType.IsSet()
}

// HasRestoreType returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasRestoreType() bool {
	if o != nil && o.RestoreType.IsSet() {
		return true
	}

	return false
}

// SetRestoreType gets a reference to the given NullableInt32 and assigns it to the RestoreType field.
func (o *DestroyClonedTaskStateProto) SetRestoreType(v int32) {
	o.RestoreType.Set(&v)
}
// SetRestoreTypeNil sets the value for RestoreType to be an explicit nil
func (o *DestroyClonedTaskStateProto) SetRestoreTypeNil() {
	o.RestoreType.Set(nil)
}

// UnsetRestoreType ensures that no value is present for RestoreType, not even an explicit nil
func (o *DestroyClonedTaskStateProto) UnsetRestoreType() {
	o.RestoreType.Unset()
}

// GetScheduledConstituentId returns the ScheduledConstituentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedTaskStateProto) GetScheduledConstituentId() int64 {
	if o == nil || o.ScheduledConstituentId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ScheduledConstituentId.Get()
}

// GetScheduledConstituentIdOk returns a tuple with the ScheduledConstituentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedTaskStateProto) GetScheduledConstituentIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ScheduledConstituentId.Get(), o.ScheduledConstituentId.IsSet()
}

// HasScheduledConstituentId returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasScheduledConstituentId() bool {
	if o != nil && o.ScheduledConstituentId.IsSet() {
		return true
	}

	return false
}

// SetScheduledConstituentId gets a reference to the given NullableInt64 and assigns it to the ScheduledConstituentId field.
func (o *DestroyClonedTaskStateProto) SetScheduledConstituentId(v int64) {
	o.ScheduledConstituentId.Set(&v)
}
// SetScheduledConstituentIdNil sets the value for ScheduledConstituentId to be an explicit nil
func (o *DestroyClonedTaskStateProto) SetScheduledConstituentIdNil() {
	o.ScheduledConstituentId.Set(nil)
}

// UnsetScheduledConstituentId ensures that no value is present for ScheduledConstituentId, not even an explicit nil
func (o *DestroyClonedTaskStateProto) UnsetScheduledConstituentId() {
	o.ScheduledConstituentId.Unset()
}

// GetScheduledGandalfSessionId returns the ScheduledGandalfSessionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedTaskStateProto) GetScheduledGandalfSessionId() int64 {
	if o == nil || o.ScheduledGandalfSessionId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ScheduledGandalfSessionId.Get()
}

// GetScheduledGandalfSessionIdOk returns a tuple with the ScheduledGandalfSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedTaskStateProto) GetScheduledGandalfSessionIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ScheduledGandalfSessionId.Get(), o.ScheduledGandalfSessionId.IsSet()
}

// HasScheduledGandalfSessionId returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasScheduledGandalfSessionId() bool {
	if o != nil && o.ScheduledGandalfSessionId.IsSet() {
		return true
	}

	return false
}

// SetScheduledGandalfSessionId gets a reference to the given NullableInt64 and assigns it to the ScheduledGandalfSessionId field.
func (o *DestroyClonedTaskStateProto) SetScheduledGandalfSessionId(v int64) {
	o.ScheduledGandalfSessionId.Set(&v)
}
// SetScheduledGandalfSessionIdNil sets the value for ScheduledGandalfSessionId to be an explicit nil
func (o *DestroyClonedTaskStateProto) SetScheduledGandalfSessionIdNil() {
	o.ScheduledGandalfSessionId.Set(nil)
}

// UnsetScheduledGandalfSessionId ensures that no value is present for ScheduledGandalfSessionId, not even an explicit nil
func (o *DestroyClonedTaskStateProto) UnsetScheduledGandalfSessionId() {
	o.ScheduledGandalfSessionId.Unset()
}

// GetStartTimeUsecs returns the StartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedTaskStateProto) GetStartTimeUsecs() int64 {
	if o == nil || o.StartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StartTimeUsecs.Get()
}

// GetStartTimeUsecsOk returns a tuple with the StartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedTaskStateProto) GetStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartTimeUsecs.Get(), o.StartTimeUsecs.IsSet()
}

// HasStartTimeUsecs returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasStartTimeUsecs() bool {
	if o != nil && o.StartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the StartTimeUsecs field.
func (o *DestroyClonedTaskStateProto) SetStartTimeUsecs(v int64) {
	o.StartTimeUsecs.Set(&v)
}
// SetStartTimeUsecsNil sets the value for StartTimeUsecs to be an explicit nil
func (o *DestroyClonedTaskStateProto) SetStartTimeUsecsNil() {
	o.StartTimeUsecs.Set(nil)
}

// UnsetStartTimeUsecs ensures that no value is present for StartTimeUsecs, not even an explicit nil
func (o *DestroyClonedTaskStateProto) UnsetStartTimeUsecs() {
	o.StartTimeUsecs.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedTaskStateProto) GetStatus() int32 {
	if o == nil || o.Status.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedTaskStateProto) GetStatusOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableInt32 and assigns it to the Status field.
func (o *DestroyClonedTaskStateProto) SetStatus(v int32) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *DestroyClonedTaskStateProto) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *DestroyClonedTaskStateProto) UnsetStatus() {
	o.Status.Unset()
}

// GetTaskId returns the TaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedTaskStateProto) GetTaskId() int64 {
	if o == nil || o.TaskId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TaskId.Get()
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedTaskStateProto) GetTaskIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TaskId.Get(), o.TaskId.IsSet()
}

// HasTaskId returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasTaskId() bool {
	if o != nil && o.TaskId.IsSet() {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given NullableInt64 and assigns it to the TaskId field.
func (o *DestroyClonedTaskStateProto) SetTaskId(v int64) {
	o.TaskId.Set(&v)
}
// SetTaskIdNil sets the value for TaskId to be an explicit nil
func (o *DestroyClonedTaskStateProto) SetTaskIdNil() {
	o.TaskId.Set(nil)
}

// UnsetTaskId ensures that no value is present for TaskId, not even an explicit nil
func (o *DestroyClonedTaskStateProto) UnsetTaskId() {
	o.TaskId.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedTaskStateProto) GetType() int32 {
	if o == nil || o.Type.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedTaskStateProto) GetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableInt32 and assigns it to the Type field.
func (o *DestroyClonedTaskStateProto) SetType(v int32) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *DestroyClonedTaskStateProto) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *DestroyClonedTaskStateProto) UnsetType() {
	o.Type.Unset()
}

// GetUser returns the User field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedTaskStateProto) GetUser() string {
	if o == nil || o.User.Get() == nil {
		var ret string
		return ret
	}
	return *o.User.Get()
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedTaskStateProto) GetUserOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.User.Get(), o.User.IsSet()
}

// HasUser returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasUser() bool {
	if o != nil && o.User.IsSet() {
		return true
	}

	return false
}

// SetUser gets a reference to the given NullableString and assigns it to the User field.
func (o *DestroyClonedTaskStateProto) SetUser(v string) {
	o.User.Set(&v)
}
// SetUserNil sets the value for User to be an explicit nil
func (o *DestroyClonedTaskStateProto) SetUserNil() {
	o.User.Set(nil)
}

// UnsetUser ensures that no value is present for User, not even an explicit nil
func (o *DestroyClonedTaskStateProto) UnsetUser() {
	o.User.Unset()
}

// GetUserInfo returns the UserInfo field value if set, zero value otherwise.
func (o *DestroyClonedTaskStateProto) GetUserInfo() UserInformation {
	if o == nil || o.UserInfo == nil {
		var ret UserInformation
		return ret
	}
	return *o.UserInfo
}

// GetUserInfoOk returns a tuple with the UserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestroyClonedTaskStateProto) GetUserInfoOk() (*UserInformation, bool) {
	if o == nil || o.UserInfo == nil {
		return nil, false
	}
	return o.UserInfo, true
}

// HasUserInfo returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasUserInfo() bool {
	if o != nil && o.UserInfo != nil {
		return true
	}

	return false
}

// SetUserInfo gets a reference to the given UserInformation and assigns it to the UserInfo field.
func (o *DestroyClonedTaskStateProto) SetUserInfo(v UserInformation) {
	o.UserInfo = &v
}

// GetVcdConfig returns the VcdConfig field value if set, zero value otherwise.
func (o *DestroyClonedTaskStateProto) GetVcdConfig() RestoredObjectVCDConfigProto {
	if o == nil || o.VcdConfig == nil {
		var ret RestoredObjectVCDConfigProto
		return ret
	}
	return *o.VcdConfig
}

// GetVcdConfigOk returns a tuple with the VcdConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestroyClonedTaskStateProto) GetVcdConfigOk() (*RestoredObjectVCDConfigProto, bool) {
	if o == nil || o.VcdConfig == nil {
		return nil, false
	}
	return o.VcdConfig, true
}

// HasVcdConfig returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasVcdConfig() bool {
	if o != nil && o.VcdConfig != nil {
		return true
	}

	return false
}

// SetVcdConfig gets a reference to the given RestoredObjectVCDConfigProto and assigns it to the VcdConfig field.
func (o *DestroyClonedTaskStateProto) SetVcdConfig(v RestoredObjectVCDConfigProto) {
	o.VcdConfig = &v
}

// GetViewBoxId returns the ViewBoxId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedTaskStateProto) GetViewBoxId() int64 {
	if o == nil || o.ViewBoxId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ViewBoxId.Get()
}

// GetViewBoxIdOk returns a tuple with the ViewBoxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedTaskStateProto) GetViewBoxIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewBoxId.Get(), o.ViewBoxId.IsSet()
}

// HasViewBoxId returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasViewBoxId() bool {
	if o != nil && o.ViewBoxId.IsSet() {
		return true
	}

	return false
}

// SetViewBoxId gets a reference to the given NullableInt64 and assigns it to the ViewBoxId field.
func (o *DestroyClonedTaskStateProto) SetViewBoxId(v int64) {
	o.ViewBoxId.Set(&v)
}
// SetViewBoxIdNil sets the value for ViewBoxId to be an explicit nil
func (o *DestroyClonedTaskStateProto) SetViewBoxIdNil() {
	o.ViewBoxId.Set(nil)
}

// UnsetViewBoxId ensures that no value is present for ViewBoxId, not even an explicit nil
func (o *DestroyClonedTaskStateProto) UnsetViewBoxId() {
	o.ViewBoxId.Unset()
}

// GetViewNameDEPRECATED returns the ViewNameDEPRECATED field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestroyClonedTaskStateProto) GetViewNameDEPRECATED() string {
	if o == nil || o.ViewNameDEPRECATED.Get() == nil {
		var ret string
		return ret
	}
	return *o.ViewNameDEPRECATED.Get()
}

// GetViewNameDEPRECATEDOk returns a tuple with the ViewNameDEPRECATED field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestroyClonedTaskStateProto) GetViewNameDEPRECATEDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewNameDEPRECATED.Get(), o.ViewNameDEPRECATED.IsSet()
}

// HasViewNameDEPRECATED returns a boolean if a field has been set.
func (o *DestroyClonedTaskStateProto) HasViewNameDEPRECATED() bool {
	if o != nil && o.ViewNameDEPRECATED.IsSet() {
		return true
	}

	return false
}

// SetViewNameDEPRECATED gets a reference to the given NullableString and assigns it to the ViewNameDEPRECATED field.
func (o *DestroyClonedTaskStateProto) SetViewNameDEPRECATED(v string) {
	o.ViewNameDEPRECATED.Set(&v)
}
// SetViewNameDEPRECATEDNil sets the value for ViewNameDEPRECATED to be an explicit nil
func (o *DestroyClonedTaskStateProto) SetViewNameDEPRECATEDNil() {
	o.ViewNameDEPRECATED.Set(nil)
}

// UnsetViewNameDEPRECATED ensures that no value is present for ViewNameDEPRECATED, not even an explicit nil
func (o *DestroyClonedTaskStateProto) UnsetViewNameDEPRECATED() {
	o.ViewNameDEPRECATED.Unset()
}

func (o DestroyClonedTaskStateProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActionExecutorTargetType.IsSet() {
		toSerialize["actionExecutorTargetType"] = o.ActionExecutorTargetType.Get()
	}
	if o.CloneTaskName.IsSet() {
		toSerialize["cloneTaskName"] = o.CloneTaskName.Get()
	}
	if o.DatastoreEntity != nil {
		toSerialize["datastoreEntity"] = o.DatastoreEntity
	}
	if o.DeployVmsToCloudTaskState != nil {
		toSerialize["deployVmsToCloudTaskState"] = o.DeployVmsToCloudTaskState
	}
	if o.DestroyCloneAppTaskInfo != nil {
		toSerialize["destroyCloneAppTaskInfo"] = o.DestroyCloneAppTaskInfo
	}
	if o.DestroyCloneVmTaskInfo != nil {
		toSerialize["destroyCloneVmTaskInfo"] = o.DestroyCloneVmTaskInfo
	}
	if o.DestroyMountVolumesTaskInfo != nil {
		toSerialize["destroyMountVolumesTaskInfo"] = o.DestroyMountVolumesTaskInfo
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.FolderEntity != nil {
		toSerialize["folderEntity"] = o.FolderEntity
	}
	if o.ForceDelete.IsSet() {
		toSerialize["forceDelete"] = o.ForceDelete.Get()
	}
	if o.FullViewName.IsSet() {
		toSerialize["fullViewName"] = o.FullViewName.Get()
	}
	if o.ParentSourceConnectionParams != nil {
		toSerialize["parentSourceConnectionParams"] = o.ParentSourceConnectionParams
	}
	if o.ParentTaskId.IsSet() {
		toSerialize["parentTaskId"] = o.ParentTaskId.Get()
	}
	if o.PerformCloneTaskId.IsSet() {
		toSerialize["performCloneTaskId"] = o.PerformCloneTaskId.Get()
	}
	if o.RestoreType.IsSet() {
		toSerialize["restoreType"] = o.RestoreType.Get()
	}
	if o.ScheduledConstituentId.IsSet() {
		toSerialize["scheduledConstituentId"] = o.ScheduledConstituentId.Get()
	}
	if o.ScheduledGandalfSessionId.IsSet() {
		toSerialize["scheduledGandalfSessionId"] = o.ScheduledGandalfSessionId.Get()
	}
	if o.StartTimeUsecs.IsSet() {
		toSerialize["startTimeUsecs"] = o.StartTimeUsecs.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.TaskId.IsSet() {
		toSerialize["taskId"] = o.TaskId.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.User.IsSet() {
		toSerialize["user"] = o.User.Get()
	}
	if o.UserInfo != nil {
		toSerialize["userInfo"] = o.UserInfo
	}
	if o.VcdConfig != nil {
		toSerialize["vcdConfig"] = o.VcdConfig
	}
	if o.ViewBoxId.IsSet() {
		toSerialize["viewBoxId"] = o.ViewBoxId.Get()
	}
	if o.ViewNameDEPRECATED.IsSet() {
		toSerialize["viewName_DEPRECATED"] = o.ViewNameDEPRECATED.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableDestroyClonedTaskStateProto struct {
	value *DestroyClonedTaskStateProto
	isSet bool
}

func (v NullableDestroyClonedTaskStateProto) Get() *DestroyClonedTaskStateProto {
	return v.value
}

func (v *NullableDestroyClonedTaskStateProto) Set(val *DestroyClonedTaskStateProto) {
	v.value = val
	v.isSet = true
}

func (v NullableDestroyClonedTaskStateProto) IsSet() bool {
	return v.isSet
}

func (v *NullableDestroyClonedTaskStateProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDestroyClonedTaskStateProto(val *DestroyClonedTaskStateProto) *NullableDestroyClonedTaskStateProto {
	return &NullableDestroyClonedTaskStateProto{value: val, isSet: true}
}

func (v NullableDestroyClonedTaskStateProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDestroyClonedTaskStateProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


