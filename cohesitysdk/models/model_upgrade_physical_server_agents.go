/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// UpgradePhysicalServerAgents Specifies a request to upgrade the Cohesity agents on one or more Physical Servers registered on the Cohesity Cluster.
type UpgradePhysicalServerAgents struct {
	// Array of Agent Ids.  Specifies a list of agentIds associated with the Physical Servers to upgrade with the agent release currently available from the Cohesity Cluster.
	AgentIds []int64 `json:"agentIds"`
}

// NewUpgradePhysicalServerAgents instantiates a new UpgradePhysicalServerAgents object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpgradePhysicalServerAgents(agentIds []int64) *UpgradePhysicalServerAgents {
	this := UpgradePhysicalServerAgents{}
	this.AgentIds = agentIds
	return &this
}

// NewUpgradePhysicalServerAgentsWithDefaults instantiates a new UpgradePhysicalServerAgents object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpgradePhysicalServerAgentsWithDefaults() *UpgradePhysicalServerAgents {
	this := UpgradePhysicalServerAgents{}
	return &this
}

// GetAgentIds returns the AgentIds field value
// If the value is explicit nil, the zero value for []int64 will be returned
func (o *UpgradePhysicalServerAgents) GetAgentIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.AgentIds
}

// GetAgentIdsOk returns a tuple with the AgentIds field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpgradePhysicalServerAgents) GetAgentIdsOk() (*[]int64, bool) {
	if o == nil || o.AgentIds == nil {
		return nil, false
	}
	return &o.AgentIds, true
}

// SetAgentIds sets field value
func (o *UpgradePhysicalServerAgents) SetAgentIds(v []int64) {
	o.AgentIds = v
}

func (o UpgradePhysicalServerAgents) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AgentIds != nil {
		toSerialize["agentIds"] = o.AgentIds
	}
	return json.Marshal(toSerialize)
}

type NullableUpgradePhysicalServerAgents struct {
	value *UpgradePhysicalServerAgents
	isSet bool
}

func (v NullableUpgradePhysicalServerAgents) Get() *UpgradePhysicalServerAgents {
	return v.value
}

func (v *NullableUpgradePhysicalServerAgents) Set(val *UpgradePhysicalServerAgents) {
	v.value = val
	v.isSet = true
}

func (v NullableUpgradePhysicalServerAgents) IsSet() bool {
	return v.isSet
}

func (v *NullableUpgradePhysicalServerAgents) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpgradePhysicalServerAgents(val *UpgradePhysicalServerAgents) *NullableUpgradePhysicalServerAgents {
	return &NullableUpgradePhysicalServerAgents{value: val, isSet: true}
}

func (v NullableUpgradePhysicalServerAgents) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpgradePhysicalServerAgents) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


