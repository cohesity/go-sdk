/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// GpfsProtectionSource Specifies a Protection Source in GPFS environment.
type GpfsProtectionSource struct {
	Cluster *GpfsCluster `json:"cluster,omitempty"`
	Fileset *GpfsFileset `json:"fileset,omitempty"`
	Filesystem *GpfsFilesystem `json:"filesystem,omitempty"`
	// Specifies a unique name of the Protection Source.
	Name NullableString `json:"name,omitempty"`
	// Specifies the type of the entity in an GPFS file system like 'kCluster', 'kFilesystem', or, 'kFileset'. 'kCluster' indicates an GPFS Cluster. 'kFilesystem' indicates a top level filesystem on GPFS cluster. 'kFileset' indicates a fileset within a filesystem.
	Type NullableString `json:"type,omitempty"`
}

// NewGpfsProtectionSource instantiates a new GpfsProtectionSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGpfsProtectionSource() *GpfsProtectionSource {
	this := GpfsProtectionSource{}
	return &this
}

// NewGpfsProtectionSourceWithDefaults instantiates a new GpfsProtectionSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGpfsProtectionSourceWithDefaults() *GpfsProtectionSource {
	this := GpfsProtectionSource{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *GpfsProtectionSource) GetCluster() GpfsCluster {
	if o == nil || o.Cluster == nil {
		var ret GpfsCluster
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpfsProtectionSource) GetClusterOk() (*GpfsCluster, bool) {
	if o == nil || o.Cluster == nil {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *GpfsProtectionSource) HasCluster() bool {
	if o != nil && o.Cluster != nil {
		return true
	}

	return false
}

// SetCluster gets a reference to the given GpfsCluster and assigns it to the Cluster field.
func (o *GpfsProtectionSource) SetCluster(v GpfsCluster) {
	o.Cluster = &v
}

// GetFileset returns the Fileset field value if set, zero value otherwise.
func (o *GpfsProtectionSource) GetFileset() GpfsFileset {
	if o == nil || o.Fileset == nil {
		var ret GpfsFileset
		return ret
	}
	return *o.Fileset
}

// GetFilesetOk returns a tuple with the Fileset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpfsProtectionSource) GetFilesetOk() (*GpfsFileset, bool) {
	if o == nil || o.Fileset == nil {
		return nil, false
	}
	return o.Fileset, true
}

// HasFileset returns a boolean if a field has been set.
func (o *GpfsProtectionSource) HasFileset() bool {
	if o != nil && o.Fileset != nil {
		return true
	}

	return false
}

// SetFileset gets a reference to the given GpfsFileset and assigns it to the Fileset field.
func (o *GpfsProtectionSource) SetFileset(v GpfsFileset) {
	o.Fileset = &v
}

// GetFilesystem returns the Filesystem field value if set, zero value otherwise.
func (o *GpfsProtectionSource) GetFilesystem() GpfsFilesystem {
	if o == nil || o.Filesystem == nil {
		var ret GpfsFilesystem
		return ret
	}
	return *o.Filesystem
}

// GetFilesystemOk returns a tuple with the Filesystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpfsProtectionSource) GetFilesystemOk() (*GpfsFilesystem, bool) {
	if o == nil || o.Filesystem == nil {
		return nil, false
	}
	return o.Filesystem, true
}

// HasFilesystem returns a boolean if a field has been set.
func (o *GpfsProtectionSource) HasFilesystem() bool {
	if o != nil && o.Filesystem != nil {
		return true
	}

	return false
}

// SetFilesystem gets a reference to the given GpfsFilesystem and assigns it to the Filesystem field.
func (o *GpfsProtectionSource) SetFilesystem(v GpfsFilesystem) {
	o.Filesystem = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GpfsProtectionSource) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GpfsProtectionSource) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *GpfsProtectionSource) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *GpfsProtectionSource) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *GpfsProtectionSource) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *GpfsProtectionSource) UnsetName() {
	o.Name.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GpfsProtectionSource) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GpfsProtectionSource) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *GpfsProtectionSource) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *GpfsProtectionSource) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *GpfsProtectionSource) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *GpfsProtectionSource) UnsetType() {
	o.Type.Unset()
}

func (o GpfsProtectionSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cluster != nil {
		toSerialize["cluster"] = o.Cluster
	}
	if o.Fileset != nil {
		toSerialize["fileset"] = o.Fileset
	}
	if o.Filesystem != nil {
		toSerialize["filesystem"] = o.Filesystem
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGpfsProtectionSource struct {
	value *GpfsProtectionSource
	isSet bool
}

func (v NullableGpfsProtectionSource) Get() *GpfsProtectionSource {
	return v.value
}

func (v *NullableGpfsProtectionSource) Set(val *GpfsProtectionSource) {
	v.value = val
	v.isSet = true
}

func (v NullableGpfsProtectionSource) IsSet() bool {
	return v.isSet
}

func (v *NullableGpfsProtectionSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGpfsProtectionSource(val *GpfsProtectionSource) *NullableGpfsProtectionSource {
	return &NullableGpfsProtectionSource{value: val, isSet: true}
}

func (v NullableGpfsProtectionSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGpfsProtectionSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


