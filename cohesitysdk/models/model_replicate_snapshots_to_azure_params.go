/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ReplicateSnapshotsToAzureParams This is populated for Azure snapshot manager replication.
type ReplicateSnapshotsToAzureParams struct {
	ResourceGroup *EntityProto `json:"resourceGroup,omitempty"`
	StorageAccount *EntityProto `json:"storageAccount,omitempty"`
	StorageContainer *EntityProto `json:"storageContainer,omitempty"`
	StorageResourceGroup *EntityProto `json:"storageResourceGroup,omitempty"`
}

// NewReplicateSnapshotsToAzureParams instantiates a new ReplicateSnapshotsToAzureParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicateSnapshotsToAzureParams() *ReplicateSnapshotsToAzureParams {
	this := ReplicateSnapshotsToAzureParams{}
	return &this
}

// NewReplicateSnapshotsToAzureParamsWithDefaults instantiates a new ReplicateSnapshotsToAzureParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicateSnapshotsToAzureParamsWithDefaults() *ReplicateSnapshotsToAzureParams {
	this := ReplicateSnapshotsToAzureParams{}
	return &this
}

// GetResourceGroup returns the ResourceGroup field value if set, zero value otherwise.
func (o *ReplicateSnapshotsToAzureParams) GetResourceGroup() EntityProto {
	if o == nil || o.ResourceGroup == nil {
		var ret EntityProto
		return ret
	}
	return *o.ResourceGroup
}

// GetResourceGroupOk returns a tuple with the ResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicateSnapshotsToAzureParams) GetResourceGroupOk() (*EntityProto, bool) {
	if o == nil || o.ResourceGroup == nil {
		return nil, false
	}
	return o.ResourceGroup, true
}

// HasResourceGroup returns a boolean if a field has been set.
func (o *ReplicateSnapshotsToAzureParams) HasResourceGroup() bool {
	if o != nil && o.ResourceGroup != nil {
		return true
	}

	return false
}

// SetResourceGroup gets a reference to the given EntityProto and assigns it to the ResourceGroup field.
func (o *ReplicateSnapshotsToAzureParams) SetResourceGroup(v EntityProto) {
	o.ResourceGroup = &v
}

// GetStorageAccount returns the StorageAccount field value if set, zero value otherwise.
func (o *ReplicateSnapshotsToAzureParams) GetStorageAccount() EntityProto {
	if o == nil || o.StorageAccount == nil {
		var ret EntityProto
		return ret
	}
	return *o.StorageAccount
}

// GetStorageAccountOk returns a tuple with the StorageAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicateSnapshotsToAzureParams) GetStorageAccountOk() (*EntityProto, bool) {
	if o == nil || o.StorageAccount == nil {
		return nil, false
	}
	return o.StorageAccount, true
}

// HasStorageAccount returns a boolean if a field has been set.
func (o *ReplicateSnapshotsToAzureParams) HasStorageAccount() bool {
	if o != nil && o.StorageAccount != nil {
		return true
	}

	return false
}

// SetStorageAccount gets a reference to the given EntityProto and assigns it to the StorageAccount field.
func (o *ReplicateSnapshotsToAzureParams) SetStorageAccount(v EntityProto) {
	o.StorageAccount = &v
}

// GetStorageContainer returns the StorageContainer field value if set, zero value otherwise.
func (o *ReplicateSnapshotsToAzureParams) GetStorageContainer() EntityProto {
	if o == nil || o.StorageContainer == nil {
		var ret EntityProto
		return ret
	}
	return *o.StorageContainer
}

// GetStorageContainerOk returns a tuple with the StorageContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicateSnapshotsToAzureParams) GetStorageContainerOk() (*EntityProto, bool) {
	if o == nil || o.StorageContainer == nil {
		return nil, false
	}
	return o.StorageContainer, true
}

// HasStorageContainer returns a boolean if a field has been set.
func (o *ReplicateSnapshotsToAzureParams) HasStorageContainer() bool {
	if o != nil && o.StorageContainer != nil {
		return true
	}

	return false
}

// SetStorageContainer gets a reference to the given EntityProto and assigns it to the StorageContainer field.
func (o *ReplicateSnapshotsToAzureParams) SetStorageContainer(v EntityProto) {
	o.StorageContainer = &v
}

// GetStorageResourceGroup returns the StorageResourceGroup field value if set, zero value otherwise.
func (o *ReplicateSnapshotsToAzureParams) GetStorageResourceGroup() EntityProto {
	if o == nil || o.StorageResourceGroup == nil {
		var ret EntityProto
		return ret
	}
	return *o.StorageResourceGroup
}

// GetStorageResourceGroupOk returns a tuple with the StorageResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicateSnapshotsToAzureParams) GetStorageResourceGroupOk() (*EntityProto, bool) {
	if o == nil || o.StorageResourceGroup == nil {
		return nil, false
	}
	return o.StorageResourceGroup, true
}

// HasStorageResourceGroup returns a boolean if a field has been set.
func (o *ReplicateSnapshotsToAzureParams) HasStorageResourceGroup() bool {
	if o != nil && o.StorageResourceGroup != nil {
		return true
	}

	return false
}

// SetStorageResourceGroup gets a reference to the given EntityProto and assigns it to the StorageResourceGroup field.
func (o *ReplicateSnapshotsToAzureParams) SetStorageResourceGroup(v EntityProto) {
	o.StorageResourceGroup = &v
}

func (o ReplicateSnapshotsToAzureParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourceGroup != nil {
		toSerialize["resourceGroup"] = o.ResourceGroup
	}
	if o.StorageAccount != nil {
		toSerialize["storageAccount"] = o.StorageAccount
	}
	if o.StorageContainer != nil {
		toSerialize["storageContainer"] = o.StorageContainer
	}
	if o.StorageResourceGroup != nil {
		toSerialize["storageResourceGroup"] = o.StorageResourceGroup
	}
	return json.Marshal(toSerialize)
}

type NullableReplicateSnapshotsToAzureParams struct {
	value *ReplicateSnapshotsToAzureParams
	isSet bool
}

func (v NullableReplicateSnapshotsToAzureParams) Get() *ReplicateSnapshotsToAzureParams {
	return v.value
}

func (v *NullableReplicateSnapshotsToAzureParams) Set(val *ReplicateSnapshotsToAzureParams) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicateSnapshotsToAzureParams) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicateSnapshotsToAzureParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicateSnapshotsToAzureParams(val *ReplicateSnapshotsToAzureParams) *NullableReplicateSnapshotsToAzureParams {
	return &NullableReplicateSnapshotsToAzureParams{value: val, isSet: true}
}

func (v NullableReplicateSnapshotsToAzureParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicateSnapshotsToAzureParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


