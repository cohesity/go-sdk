/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// PowerStateConfigProto struct for PowerStateConfigProto
type PowerStateConfigProto struct {
	PowerOn NullableBool `json:"powerOn,omitempty"`
}

// NewPowerStateConfigProto instantiates a new PowerStateConfigProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPowerStateConfigProto() *PowerStateConfigProto {
	this := PowerStateConfigProto{}
	return &this
}

// NewPowerStateConfigProtoWithDefaults instantiates a new PowerStateConfigProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPowerStateConfigProtoWithDefaults() *PowerStateConfigProto {
	this := PowerStateConfigProto{}
	return &this
}

// GetPowerOn returns the PowerOn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PowerStateConfigProto) GetPowerOn() bool {
	if o == nil || o.PowerOn.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PowerOn.Get()
}

// GetPowerOnOk returns a tuple with the PowerOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PowerStateConfigProto) GetPowerOnOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PowerOn.Get(), o.PowerOn.IsSet()
}

// HasPowerOn returns a boolean if a field has been set.
func (o *PowerStateConfigProto) HasPowerOn() bool {
	if o != nil && o.PowerOn.IsSet() {
		return true
	}

	return false
}

// SetPowerOn gets a reference to the given NullableBool and assigns it to the PowerOn field.
func (o *PowerStateConfigProto) SetPowerOn(v bool) {
	o.PowerOn.Set(&v)
}
// SetPowerOnNil sets the value for PowerOn to be an explicit nil
func (o *PowerStateConfigProto) SetPowerOnNil() {
	o.PowerOn.Set(nil)
}

// UnsetPowerOn ensures that no value is present for PowerOn, not even an explicit nil
func (o *PowerStateConfigProto) UnsetPowerOn() {
	o.PowerOn.Unset()
}

func (o PowerStateConfigProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PowerOn.IsSet() {
		toSerialize["powerOn"] = o.PowerOn.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePowerStateConfigProto struct {
	value *PowerStateConfigProto
	isSet bool
}

func (v NullablePowerStateConfigProto) Get() *PowerStateConfigProto {
	return v.value
}

func (v *NullablePowerStateConfigProto) Set(val *PowerStateConfigProto) {
	v.value = val
	v.isSet = true
}

func (v NullablePowerStateConfigProto) IsSet() bool {
	return v.isSet
}

func (v *NullablePowerStateConfigProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePowerStateConfigProto(val *PowerStateConfigProto) *NullablePowerStateConfigProto {
	return &NullablePowerStateConfigProto{value: val, isSet: true}
}

func (v NullablePowerStateConfigProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePowerStateConfigProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


