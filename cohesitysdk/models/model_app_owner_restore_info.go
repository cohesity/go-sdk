/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// AppOwnerRestoreInfo struct for AppOwnerRestoreInfo
type AppOwnerRestoreInfo struct {
	OwnerObject *RestoreObject `json:"ownerObject,omitempty"`
	OwnerRestoreParams *RestoreObjectParams `json:"ownerRestoreParams,omitempty"`
	// If this is set to true, then the owner object needs to be restored. The restore options that follow only apply if this field is set to true. If this field is not set, then the application objects will be restored to the original owner from where they were backed up.
	PerformRestore NullableBool `json:"performRestore,omitempty"`
}

// NewAppOwnerRestoreInfo instantiates a new AppOwnerRestoreInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppOwnerRestoreInfo() *AppOwnerRestoreInfo {
	this := AppOwnerRestoreInfo{}
	return &this
}

// NewAppOwnerRestoreInfoWithDefaults instantiates a new AppOwnerRestoreInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppOwnerRestoreInfoWithDefaults() *AppOwnerRestoreInfo {
	this := AppOwnerRestoreInfo{}
	return &this
}

// GetOwnerObject returns the OwnerObject field value if set, zero value otherwise.
func (o *AppOwnerRestoreInfo) GetOwnerObject() RestoreObject {
	if o == nil || o.OwnerObject == nil {
		var ret RestoreObject
		return ret
	}
	return *o.OwnerObject
}

// GetOwnerObjectOk returns a tuple with the OwnerObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppOwnerRestoreInfo) GetOwnerObjectOk() (*RestoreObject, bool) {
	if o == nil || o.OwnerObject == nil {
		return nil, false
	}
	return o.OwnerObject, true
}

// HasOwnerObject returns a boolean if a field has been set.
func (o *AppOwnerRestoreInfo) HasOwnerObject() bool {
	if o != nil && o.OwnerObject != nil {
		return true
	}

	return false
}

// SetOwnerObject gets a reference to the given RestoreObject and assigns it to the OwnerObject field.
func (o *AppOwnerRestoreInfo) SetOwnerObject(v RestoreObject) {
	o.OwnerObject = &v
}

// GetOwnerRestoreParams returns the OwnerRestoreParams field value if set, zero value otherwise.
func (o *AppOwnerRestoreInfo) GetOwnerRestoreParams() RestoreObjectParams {
	if o == nil || o.OwnerRestoreParams == nil {
		var ret RestoreObjectParams
		return ret
	}
	return *o.OwnerRestoreParams
}

// GetOwnerRestoreParamsOk returns a tuple with the OwnerRestoreParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppOwnerRestoreInfo) GetOwnerRestoreParamsOk() (*RestoreObjectParams, bool) {
	if o == nil || o.OwnerRestoreParams == nil {
		return nil, false
	}
	return o.OwnerRestoreParams, true
}

// HasOwnerRestoreParams returns a boolean if a field has been set.
func (o *AppOwnerRestoreInfo) HasOwnerRestoreParams() bool {
	if o != nil && o.OwnerRestoreParams != nil {
		return true
	}

	return false
}

// SetOwnerRestoreParams gets a reference to the given RestoreObjectParams and assigns it to the OwnerRestoreParams field.
func (o *AppOwnerRestoreInfo) SetOwnerRestoreParams(v RestoreObjectParams) {
	o.OwnerRestoreParams = &v
}

// GetPerformRestore returns the PerformRestore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppOwnerRestoreInfo) GetPerformRestore() bool {
	if o == nil || o.PerformRestore.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PerformRestore.Get()
}

// GetPerformRestoreOk returns a tuple with the PerformRestore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppOwnerRestoreInfo) GetPerformRestoreOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PerformRestore.Get(), o.PerformRestore.IsSet()
}

// HasPerformRestore returns a boolean if a field has been set.
func (o *AppOwnerRestoreInfo) HasPerformRestore() bool {
	if o != nil && o.PerformRestore.IsSet() {
		return true
	}

	return false
}

// SetPerformRestore gets a reference to the given NullableBool and assigns it to the PerformRestore field.
func (o *AppOwnerRestoreInfo) SetPerformRestore(v bool) {
	o.PerformRestore.Set(&v)
}
// SetPerformRestoreNil sets the value for PerformRestore to be an explicit nil
func (o *AppOwnerRestoreInfo) SetPerformRestoreNil() {
	o.PerformRestore.Set(nil)
}

// UnsetPerformRestore ensures that no value is present for PerformRestore, not even an explicit nil
func (o *AppOwnerRestoreInfo) UnsetPerformRestore() {
	o.PerformRestore.Unset()
}

func (o AppOwnerRestoreInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OwnerObject != nil {
		toSerialize["ownerObject"] = o.OwnerObject
	}
	if o.OwnerRestoreParams != nil {
		toSerialize["ownerRestoreParams"] = o.OwnerRestoreParams
	}
	if o.PerformRestore.IsSet() {
		toSerialize["performRestore"] = o.PerformRestore.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAppOwnerRestoreInfo struct {
	value *AppOwnerRestoreInfo
	isSet bool
}

func (v NullableAppOwnerRestoreInfo) Get() *AppOwnerRestoreInfo {
	return v.value
}

func (v *NullableAppOwnerRestoreInfo) Set(val *AppOwnerRestoreInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAppOwnerRestoreInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAppOwnerRestoreInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppOwnerRestoreInfo(val *AppOwnerRestoreInfo) *NullableAppOwnerRestoreInfo {
	return &NullableAppOwnerRestoreInfo{value: val, isSet: true}
}

func (v NullableAppOwnerRestoreInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppOwnerRestoreInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


