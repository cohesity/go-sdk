/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ProtectionJob Provides details about a Protection Job.
type ProtectionJob struct {
	// If this field is set to true, then the backup for the objects will be performed using dedicated storage area network (SAN) instead of LAN or managment network.
	LeverageSanTransport NullableBool `json:"LeverageSanTransport,omitempty"`
	// If true, the Cohesity Cluster aborts any currently executing Job Runs of this Protection Job when a blackout period specified for this Job starts, even if the Job Run started before the blackout period began. If false, a Job Run continues to execute, if the Job Run started before the blackout period starts.
	AbortInBlackoutPeriod NullableBool `json:"abortInBlackoutPeriod,omitempty"`
	AlertingConfig *AlertingConfig `json:"alertingConfig,omitempty"`
	// Array of Job Events.  During Job Runs, the following Job Events are generated: 1) Job succeeds 2) Job fails 3) Job violates the SLA These Job Events can cause Alerts to be generated. 'kSuccess' means the Protection Job succeeded. 'kFailure' means the Protection Job failed. 'kSlaViolation' means the Protection Job took longer than the time period specified in the SLA.
	AlertingPolicy []string `json:"alertingPolicy,omitempty"`
	CloudParameters *CloudParameters `json:"cloudParameters,omitempty"`
	// Whether to continue backing up on quiesce failure.
	ContinueOnQuiesceFailure NullableBool `json:"continueOnQuiesceFailure,omitempty"`
	// Specifies whether to create a remote view name to use for view overwrite.
	CreateRemoteView NullableBool `json:"createRemoteView,omitempty"`
	// Specifies the time when the Protection Job was created.
	CreationTimeUsecs NullableInt64 `json:"creationTimeUsecs,omitempty"`
	DataMigrationPolicy *DataMigrationPolicy `json:"dataMigrationPolicy,omitempty"`
	// List of source ids for which source side dedup is disabled from the backup job.
	DedupDisabledSourceIds []int64 `json:"dedupDisabledSourceIds,omitempty"`
	// Specifies a text description about the Protection Job.
	Description NullableString `json:"description,omitempty"`
	// Specifies the epoch time (in microseconds) after which the Protection Job becomes dormant.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	// Specifies the environment type (such as kVMware or kSQL) of the Protection Source this Job is protecting. Supported environment types such as 'kView', 'kSQL', 'kVMware', etc. NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter. 'kVMware' indicates the VMware Protection Source environment. 'kHyperV' indicates the HyperV Protection Source environment. 'kSQL' indicates the SQL Protection Source environment. 'kView' indicates the View Protection Source environment. 'kPuppeteer' indicates the Cohesity's Remote Adapter. 'kPhysical' indicates the physical Protection Source environment. 'kPure' indicates the Pure Storage Protection Source environment. 'Nimble' indicates the Nimble Storage Protection Source environment. 'kAzure' indicates the Microsoft's Azure Protection Source environment. 'kNetapp' indicates the Netapp Protection Source environment. 'kAgent' indicates the Agent Protection Source environment. 'kGenericNas' indicates the Generic Network Attached Storage Protection Source environment. 'kAcropolis' indicates the Acropolis Protection Source environment. 'kPhsicalFiles' indicates the Physical Files Protection Source environment. 'kIsilon' indicates the Dell EMC's Isilon Protection Source environment. 'kGPFS' indicates IBM's GPFS Protection Source environment. 'kKVM' indicates the KVM Protection Source environment. 'kAWS' indicates the AWS Protection Source environment. 'kExchange' indicates the Exchange Protection Source environment. 'kHyperVVSS' indicates the HyperV VSS Protection Source environment. 'kOracle' indicates the Oracle Protection Source environment. 'kGCP' indicates the Google Cloud Platform Protection Source environment. 'kFlashBlade' indicates the Flash Blade Protection Source environment. 'kAWSNative' indicates the AWS Native Protection Source environment. 'kO365' indicates the Office 365 Protection Source environment. 'kO365Outlook' indicates Office 365 outlook Protection Source environment. 'kHyperFlex' indicates the Hyper Flex Protection Source environment. 'kGCPNative' indicates the GCP Native Protection Source environment. 'kAzureNative' indicates the Azure Native Protection Source environment. 'kKubernetes' indicates a Kubernetes Protection Source environment. 'kElastifile' indicates Elastifile Protection Source environment. 'kAD' indicates Active Directory Protection Source environment. 'kRDSSnapshotManager' indicates AWS RDS Protection Source environment. 'kCassandra' indicates Cassandra Protection Source environment. 'kMongoDB' indicates MongoDB Protection Source environment. 'kCouchbase' indicates Couchbase Protection Source environment. 'kHdfs' indicates Hdfs Protection Source environment. 'kHive' indicates Hive Protection Source environment. 'kHBase' indicates HBase Protection Source environment.
	Environment NullableString `json:"environment,omitempty"`
	EnvironmentParameters *EnvironmentTypeJobParameters `json:"environmentParameters,omitempty"`
	// Array of Excluded Source Objects.  List of Object ids from a Protection Source that should not be protected and are excluded from being backed up by the Protection Job. Leaf and non-leaf Objects may be in this list and an Object in this list must have an ancestor in the sourceId list.
	ExcludeSourceIds []int64 `json:"excludeSourceIds,omitempty"`
	// Array of Arrays of VM Tag Ids that Specify VMs to Exclude.  Optionally specify a list of VMs to exclude from protecting by listing Protection Source ids of VM Tags in this two dimensional array. Using this two dimensional array of Tag ids, the Cluster generates a list of VMs to exclude from protecting, which are derived from intersections of the inner arrays and union of the outer array, as shown by the following example. For example a Datacenter is selected to be protected but you want to exclude all the 'Former Employees' VMs in the East and West but keep all the VMs for 'Former Employees' in the South which are also stored in this Datacenter, by specifying the following tag id array: [ [1000, 2221], [1000, 3031] ], where 1000 is the 'Former Employee' VM Tag id, 2221 is the 'East' VM Tag id and 3031 is the 'West' VM Tag id. The first inner array [1000, 2221] produces a list of VMs that are both tagged with 'Former Employees' and 'East' (an intersection). The second inner array [1000, 3031] produces a list of VMs that are both tagged with 'Former Employees' and 'West' (an intersection). The outer array combines the list of VMs from the two inner arrays. The list of resulting VMs are excluded from being protected this Job.
	ExcludeVmTagIds [][]int64 `json:"excludeVmTagIds,omitempty"`
	// If specified, this setting is number of minutes that a Job Run of a Full (no CBT) backup schedule is expected to complete, which is known as a Service-Level Agreement (SLA). A SLA violation is reported when the run time of a Job Run exceeds the SLA time period specified for this backup schedule.
	FullProtectionSlaTimeMins NullableInt64 `json:"fullProtectionSlaTimeMins,omitempty"`
	// Specifies the time of day to start the Full Protection Schedule. This is optional and only applicable if the Protection Policy defines a monthly or a daily Full (no CBT) Protection Schedule. Default value is 02:00 AM. deprecated: true
	FullProtectionStartTime NullableTimeOfDay `json:"fullProtectionStartTime,omitempty"`
	// Specifies an id for the Protection Job.
	Id NullableInt64 `json:"id,omitempty"`
	// If specified, this setting is number of minutes that a Job Run of a CBT-based backup schedule is expected to complete, which is known as a Service-Level Agreement (SLA). A SLA violation is reported when the run time of a Job Run exceeds the SLA time period specified for this backup schedule.
	IncrementalProtectionSlaTimeMins NullableInt64 `json:"incrementalProtectionSlaTimeMins,omitempty"`
	// Specifies the time of day to start the CBT-based Protection Schedule. This is optional and only applicable if the Protection Policy defines a monthly or a daily CBT-based Protection Schedule. Default value is 02:00 AM. deprecated: true
	IncrementalProtectionStartTime NullableTimeOfDay `json:"incrementalProtectionStartTime,omitempty"`
	IndexingPolicy *IndexingPolicy `json:"indexingPolicy,omitempty"`
	// Indicates if the current state of the Protection Job is Active or Inactive. When you create a Protection Job on a Primary Cluster with a replication schedule, the Cohesity Cluster creates an Inactive copy of the Job on the Remote Cluster. In addition, when an Active and running Job is deactivated, the Job becomes Inactive.
	IsActive NullableBool `json:"isActive,omitempty"`
	// Equals 'true' if the Protection Job was deleted but some Snapshots are still associated with this Job. If 'true', no new Job Runs are started by this Protection Job.
	IsDeleted NullableBool `json:"isDeleted,omitempty"`
	// Specifies if this is a direct archive backup job.
	IsDirectArchiveEnabled NullableBool `json:"isDirectArchiveEnabled,omitempty"`
	// Specifies if native format should be used for archiving, applicable for only direct archive jobs.
	IsNativeFormat NullableBool `json:"isNativeFormat,omitempty"`
	// Indicates if the Protection Job is paused, which means that no new Job Runs are started but any existing Job Runs continue to execute.
	IsPaused NullableBool `json:"isPaused,omitempty"`
	LastRun *ProtectionRunInstance `json:"lastRun,omitempty"`
	// Specifies whether to leverage the storage array based snapshots for this backup job. To leverage storage snapshots, the storage array has to be registered as a source. If storage based snapshots can not be taken, job will fallback to the default backup method.
	LeverageStorageSnapshots NullableBool `json:"leverageStorageSnapshots,omitempty"`
	// Specifies whether to leverage Hyperflex as the storage snapshot array
	LeverageStorageSnapshotsForHyperflex NullableBool `json:"leverageStorageSnapshotsForHyperflex,omitempty"`
	// Specifies Information about missing entities.
	MissingEntities []ProtectionSource `json:"missingEntities,omitempty"`
	// Specifies the last time this Job was updated.
	ModificationTimeUsecs NullableInt64 `json:"modificationTimeUsecs,omitempty"`
	// Specifies the last Cohesity user who updated this Job.
	ModifiedByUser NullableString `json:"modifiedByUser,omitempty"`
	// Specifies the name of the Protection Job.
	Name NullableString `json:"name"`
	// Specifies the id of the registered Protection Source that is the parent of the Objects that may be protected by this Job. For example when a vCenter Server is registered on a Cohesity Cluster, the Cohesity Cluster assigns a unique id to this field that represents the vCenter Server.
	ParentSourceId NullableInt64 `json:"parentSourceId,omitempty"`
	// Specifies whether source side dedupe should be performed or not.
	PerformSourceSideDedup NullableBool `json:"performSourceSideDedup,omitempty"`
	// Specifies the epoch time (in milliseconds) when the associated Policy was last applied to this Job. This is used to determine if the Policy has changed since it was last applied to this Job.
	PolicyAppliedTimeMsecs NullableInt64 `json:"policyAppliedTimeMsecs,omitempty"`
	// Specifies the unique id of the Protection Policy associated with the Protection Job. The Policy provides retry settings, Protection Schedules, Priority, SLA, etc. The Job defines the Storage Domain (View Box), the Objects to Protect (if applicable), Start Time, Indexing settings, etc.
	PolicyId NullableString `json:"policyId"`
	// Specifies the script associated with the backup job. This field must be specified for 'kPhysical' jobs. This script will be executed post backup run.
	PostBackupScript NullableBackupScript `json:"postBackupScript,omitempty"`
	// Specifies the script associated with the backup job. This field must be specified for 'kPhysical' jobs. This script will be executed pre backup run. The 'remoteScript' field will be used for remote adapter jobs and 'preBackupScript' field will be used for 'kPhysical' jobs.
	PreBackupScript NullableBackupScript `json:"preBackupScript,omitempty"`
	// Specifies the priority of execution for a Protection Job. Cohesity supports concurrent backups but if the number of Jobs exceeds the ability to process Jobs, the specified priority determines the execution Job priority. This field also specifies the replication priority. 'kLow' indicates lowest execution priority for a Protection job. 'kMedium' indicates medium execution priority for a Protection job. 'kHigh' indicates highest execution priority for a Protection job.
	Priority NullableString `json:"priority,omitempty"`
	// Specifies the QoS policy type to use for this Protection Job. 'kBackupHDD' indicates the Cohesity Cluster writes data directly to the HDD tier for this Protection Job. This is the recommended setting. 'kBackupSSD' indicates the Cohesity Cluster writes data directly to the SSD tier for this Protection Job. Only specify this policy if you need fast ingest speed for a small number of Protection Jobs.
	QosType NullableString `json:"qosType,omitempty"`
	// Indicates if the App-Consistent option is enabled for this Job. If the option is enabled, the Cohesity Cluster quiesces the file system and applications before taking Application-Consistent Snapshots. VMware Tools must be installed on the guest Operating System.
	Quiesce NullableBool `json:"quiesce,omitempty"`
	// For a Remote Adapter 'kPuppeteer' Job, this field specifies the settings about the remote script that will be executed by this Job. Only specify this field for Remote Adapter 'kPuppeteer' Jobs.
	RemoteScript NullableRemoteJobScript `json:"remoteScript,omitempty"`
	// Specifies the remote view name to use for view overwrite.
	RemoteViewName NullableString `json:"remoteViewName,omitempty"`
	// Array of Protected Source Objects.  Specifies the list of Object ids from the Protection Source to protect (or back up) by the Protection Job. An Object in this list may be descendant of another Object in this list. For example a Datacenter could be selected but its child Host excluded. However, a child VM under the Host could be explicitly selected to be protected. Both the Datacenter and the VM are listed.
	SourceIds []int64 `json:"sourceIds,omitempty"`
	// Array of Special Source Parameters.  Specifies additional settings that can apply to a subset of the Sources listed in the Protection Job. For example, you can specify a list of files and folders to protect instead of protecting the entire Physical Server. If this field's setting conflicts with environmentParameters, then this setting will be used. Specific volume selections must be passed in here to take effect.
	SourceSpecialParameters []SourceSpecialParameter `json:"sourceSpecialParameters"`
	// Specifies the time of day to start the Protection Schedule. This is optional and only applicable if the Protection Policy defines a monthly or a daily Protection Schedule. Default value is 02:00 AM.
	StartTime NullableTimeOfDay `json:"startTime,omitempty"`
	SummaryStats *ProtectionJobSummaryStats `json:"summaryStats,omitempty"`
	// Specifies the unique id of the tenant.
	TenantId NullableString `json:"tenantId,omitempty"`
	// Specifies the timezone to use when calculating time for this Protection Job such as the Job start time. Specify the timezone in the following format: \"Area/Location\", for example: \"America/New_York\".
	Timezone NullableString `json:"timezone,omitempty"`
	// Specifies a global Protection Job id that is unique across Cohesity Clusters.
	Uid NullableUniversalId `json:"uid,omitempty"`
	// Tags associated with the job. User can specify tags/keywords that can indexed by Yoda and can be later searched in UI. For example, user can create a 'kPuppeteer' job to backup Oracle DB for 'payroll' department. User can specify following tags: 'payroll', 'Oracle_DB'.
	UserSpecifiedTags []string `json:"userSpecifiedTags,omitempty"`
	// Specifies the Storage Domain (View Box) id where this Job writes data.
	ViewBoxId NullableInt64 `json:"viewBoxId"`
	// For a Remote Adapter 'kPuppeteer' Job or a 'kView' Job, this field specifies a View name that should be protected. Specify this field when creating a Protection Job for the first time for a View. If this field is specified, ParentSourceId, SourceIds, and ExcludeSourceIds should not be specified.
	ViewName NullableString `json:"viewName,omitempty"`
	// Array of Arrays of VMs Tags Ids that Specify VMs to Protect.  Optionally specify a list of VMs to protect by listing Protection Source ids of VM Tags in this two dimensional array. Using this two dimensional array of Tag ids, the Cluster generates a list of VMs to protect which are derived from intersections of the inner arrays and union of the outer array, as shown by the following example. To protect only 'Eng' VMs in the East and all the VMs in the West, specify the following tag id array: [ [1101, 2221], [3031] ], where 1101 is the 'Eng' VM Tag id, 2221 is the 'East' VM Tag id and 3031 is the 'West' VM Tag id. The inner array [1101, 2221] produces a list of VMs that are both tagged with 'Eng' and 'East' (an intersection). The outer array combines the list from the inner array with list of VMs tagged with 'West' (a union). The list of resulting VMs are protected by this Job.
	VmTagIds [][]int64 `json:"vmTagIds,omitempty"`
}

// NewProtectionJob instantiates a new ProtectionJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionJob(name NullableString, policyId NullableString, sourceSpecialParameters []SourceSpecialParameter, viewBoxId NullableInt64) *ProtectionJob {
	this := ProtectionJob{}
	this.Name = name
	this.PolicyId = policyId
	this.SourceSpecialParameters = sourceSpecialParameters
	this.ViewBoxId = viewBoxId
	return &this
}

// NewProtectionJobWithDefaults instantiates a new ProtectionJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionJobWithDefaults() *ProtectionJob {
	this := ProtectionJob{}
	return &this
}

// GetLeverageSanTransport returns the LeverageSanTransport field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetLeverageSanTransport() bool {
	if o == nil || o.LeverageSanTransport.Get() == nil {
		var ret bool
		return ret
	}
	return *o.LeverageSanTransport.Get()
}

// GetLeverageSanTransportOk returns a tuple with the LeverageSanTransport field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetLeverageSanTransportOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LeverageSanTransport.Get(), o.LeverageSanTransport.IsSet()
}

// HasLeverageSanTransport returns a boolean if a field has been set.
func (o *ProtectionJob) HasLeverageSanTransport() bool {
	if o != nil && o.LeverageSanTransport.IsSet() {
		return true
	}

	return false
}

// SetLeverageSanTransport gets a reference to the given NullableBool and assigns it to the LeverageSanTransport field.
func (o *ProtectionJob) SetLeverageSanTransport(v bool) {
	o.LeverageSanTransport.Set(&v)
}
// SetLeverageSanTransportNil sets the value for LeverageSanTransport to be an explicit nil
func (o *ProtectionJob) SetLeverageSanTransportNil() {
	o.LeverageSanTransport.Set(nil)
}

// UnsetLeverageSanTransport ensures that no value is present for LeverageSanTransport, not even an explicit nil
func (o *ProtectionJob) UnsetLeverageSanTransport() {
	o.LeverageSanTransport.Unset()
}

// GetAbortInBlackoutPeriod returns the AbortInBlackoutPeriod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetAbortInBlackoutPeriod() bool {
	if o == nil || o.AbortInBlackoutPeriod.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AbortInBlackoutPeriod.Get()
}

// GetAbortInBlackoutPeriodOk returns a tuple with the AbortInBlackoutPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetAbortInBlackoutPeriodOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AbortInBlackoutPeriod.Get(), o.AbortInBlackoutPeriod.IsSet()
}

// HasAbortInBlackoutPeriod returns a boolean if a field has been set.
func (o *ProtectionJob) HasAbortInBlackoutPeriod() bool {
	if o != nil && o.AbortInBlackoutPeriod.IsSet() {
		return true
	}

	return false
}

// SetAbortInBlackoutPeriod gets a reference to the given NullableBool and assigns it to the AbortInBlackoutPeriod field.
func (o *ProtectionJob) SetAbortInBlackoutPeriod(v bool) {
	o.AbortInBlackoutPeriod.Set(&v)
}
// SetAbortInBlackoutPeriodNil sets the value for AbortInBlackoutPeriod to be an explicit nil
func (o *ProtectionJob) SetAbortInBlackoutPeriodNil() {
	o.AbortInBlackoutPeriod.Set(nil)
}

// UnsetAbortInBlackoutPeriod ensures that no value is present for AbortInBlackoutPeriod, not even an explicit nil
func (o *ProtectionJob) UnsetAbortInBlackoutPeriod() {
	o.AbortInBlackoutPeriod.Unset()
}

// GetAlertingConfig returns the AlertingConfig field value if set, zero value otherwise.
func (o *ProtectionJob) GetAlertingConfig() AlertingConfig {
	if o == nil || o.AlertingConfig == nil {
		var ret AlertingConfig
		return ret
	}
	return *o.AlertingConfig
}

// GetAlertingConfigOk returns a tuple with the AlertingConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionJob) GetAlertingConfigOk() (*AlertingConfig, bool) {
	if o == nil || o.AlertingConfig == nil {
		return nil, false
	}
	return o.AlertingConfig, true
}

// HasAlertingConfig returns a boolean if a field has been set.
func (o *ProtectionJob) HasAlertingConfig() bool {
	if o != nil && o.AlertingConfig != nil {
		return true
	}

	return false
}

// SetAlertingConfig gets a reference to the given AlertingConfig and assigns it to the AlertingConfig field.
func (o *ProtectionJob) SetAlertingConfig(v AlertingConfig) {
	o.AlertingConfig = &v
}

// GetAlertingPolicy returns the AlertingPolicy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetAlertingPolicy() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.AlertingPolicy
}

// GetAlertingPolicyOk returns a tuple with the AlertingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetAlertingPolicyOk() (*[]string, bool) {
	if o == nil || o.AlertingPolicy == nil {
		return nil, false
	}
	return &o.AlertingPolicy, true
}

// HasAlertingPolicy returns a boolean if a field has been set.
func (o *ProtectionJob) HasAlertingPolicy() bool {
	if o != nil && o.AlertingPolicy != nil {
		return true
	}

	return false
}

// SetAlertingPolicy gets a reference to the given []string and assigns it to the AlertingPolicy field.
func (o *ProtectionJob) SetAlertingPolicy(v []string) {
	o.AlertingPolicy = v
}

// GetCloudParameters returns the CloudParameters field value if set, zero value otherwise.
func (o *ProtectionJob) GetCloudParameters() CloudParameters {
	if o == nil || o.CloudParameters == nil {
		var ret CloudParameters
		return ret
	}
	return *o.CloudParameters
}

// GetCloudParametersOk returns a tuple with the CloudParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionJob) GetCloudParametersOk() (*CloudParameters, bool) {
	if o == nil || o.CloudParameters == nil {
		return nil, false
	}
	return o.CloudParameters, true
}

// HasCloudParameters returns a boolean if a field has been set.
func (o *ProtectionJob) HasCloudParameters() bool {
	if o != nil && o.CloudParameters != nil {
		return true
	}

	return false
}

// SetCloudParameters gets a reference to the given CloudParameters and assigns it to the CloudParameters field.
func (o *ProtectionJob) SetCloudParameters(v CloudParameters) {
	o.CloudParameters = &v
}

// GetContinueOnQuiesceFailure returns the ContinueOnQuiesceFailure field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetContinueOnQuiesceFailure() bool {
	if o == nil || o.ContinueOnQuiesceFailure.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ContinueOnQuiesceFailure.Get()
}

// GetContinueOnQuiesceFailureOk returns a tuple with the ContinueOnQuiesceFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetContinueOnQuiesceFailureOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ContinueOnQuiesceFailure.Get(), o.ContinueOnQuiesceFailure.IsSet()
}

// HasContinueOnQuiesceFailure returns a boolean if a field has been set.
func (o *ProtectionJob) HasContinueOnQuiesceFailure() bool {
	if o != nil && o.ContinueOnQuiesceFailure.IsSet() {
		return true
	}

	return false
}

// SetContinueOnQuiesceFailure gets a reference to the given NullableBool and assigns it to the ContinueOnQuiesceFailure field.
func (o *ProtectionJob) SetContinueOnQuiesceFailure(v bool) {
	o.ContinueOnQuiesceFailure.Set(&v)
}
// SetContinueOnQuiesceFailureNil sets the value for ContinueOnQuiesceFailure to be an explicit nil
func (o *ProtectionJob) SetContinueOnQuiesceFailureNil() {
	o.ContinueOnQuiesceFailure.Set(nil)
}

// UnsetContinueOnQuiesceFailure ensures that no value is present for ContinueOnQuiesceFailure, not even an explicit nil
func (o *ProtectionJob) UnsetContinueOnQuiesceFailure() {
	o.ContinueOnQuiesceFailure.Unset()
}

// GetCreateRemoteView returns the CreateRemoteView field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetCreateRemoteView() bool {
	if o == nil || o.CreateRemoteView.Get() == nil {
		var ret bool
		return ret
	}
	return *o.CreateRemoteView.Get()
}

// GetCreateRemoteViewOk returns a tuple with the CreateRemoteView field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetCreateRemoteViewOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreateRemoteView.Get(), o.CreateRemoteView.IsSet()
}

// HasCreateRemoteView returns a boolean if a field has been set.
func (o *ProtectionJob) HasCreateRemoteView() bool {
	if o != nil && o.CreateRemoteView.IsSet() {
		return true
	}

	return false
}

// SetCreateRemoteView gets a reference to the given NullableBool and assigns it to the CreateRemoteView field.
func (o *ProtectionJob) SetCreateRemoteView(v bool) {
	o.CreateRemoteView.Set(&v)
}
// SetCreateRemoteViewNil sets the value for CreateRemoteView to be an explicit nil
func (o *ProtectionJob) SetCreateRemoteViewNil() {
	o.CreateRemoteView.Set(nil)
}

// UnsetCreateRemoteView ensures that no value is present for CreateRemoteView, not even an explicit nil
func (o *ProtectionJob) UnsetCreateRemoteView() {
	o.CreateRemoteView.Unset()
}

// GetCreationTimeUsecs returns the CreationTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetCreationTimeUsecs() int64 {
	if o == nil || o.CreationTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.CreationTimeUsecs.Get()
}

// GetCreationTimeUsecsOk returns a tuple with the CreationTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetCreationTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreationTimeUsecs.Get(), o.CreationTimeUsecs.IsSet()
}

// HasCreationTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionJob) HasCreationTimeUsecs() bool {
	if o != nil && o.CreationTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetCreationTimeUsecs gets a reference to the given NullableInt64 and assigns it to the CreationTimeUsecs field.
func (o *ProtectionJob) SetCreationTimeUsecs(v int64) {
	o.CreationTimeUsecs.Set(&v)
}
// SetCreationTimeUsecsNil sets the value for CreationTimeUsecs to be an explicit nil
func (o *ProtectionJob) SetCreationTimeUsecsNil() {
	o.CreationTimeUsecs.Set(nil)
}

// UnsetCreationTimeUsecs ensures that no value is present for CreationTimeUsecs, not even an explicit nil
func (o *ProtectionJob) UnsetCreationTimeUsecs() {
	o.CreationTimeUsecs.Unset()
}

// GetDataMigrationPolicy returns the DataMigrationPolicy field value if set, zero value otherwise.
func (o *ProtectionJob) GetDataMigrationPolicy() DataMigrationPolicy {
	if o == nil || o.DataMigrationPolicy == nil {
		var ret DataMigrationPolicy
		return ret
	}
	return *o.DataMigrationPolicy
}

// GetDataMigrationPolicyOk returns a tuple with the DataMigrationPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionJob) GetDataMigrationPolicyOk() (*DataMigrationPolicy, bool) {
	if o == nil || o.DataMigrationPolicy == nil {
		return nil, false
	}
	return o.DataMigrationPolicy, true
}

// HasDataMigrationPolicy returns a boolean if a field has been set.
func (o *ProtectionJob) HasDataMigrationPolicy() bool {
	if o != nil && o.DataMigrationPolicy != nil {
		return true
	}

	return false
}

// SetDataMigrationPolicy gets a reference to the given DataMigrationPolicy and assigns it to the DataMigrationPolicy field.
func (o *ProtectionJob) SetDataMigrationPolicy(v DataMigrationPolicy) {
	o.DataMigrationPolicy = &v
}

// GetDedupDisabledSourceIds returns the DedupDisabledSourceIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetDedupDisabledSourceIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.DedupDisabledSourceIds
}

// GetDedupDisabledSourceIdsOk returns a tuple with the DedupDisabledSourceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetDedupDisabledSourceIdsOk() (*[]int64, bool) {
	if o == nil || o.DedupDisabledSourceIds == nil {
		return nil, false
	}
	return &o.DedupDisabledSourceIds, true
}

// HasDedupDisabledSourceIds returns a boolean if a field has been set.
func (o *ProtectionJob) HasDedupDisabledSourceIds() bool {
	if o != nil && o.DedupDisabledSourceIds != nil {
		return true
	}

	return false
}

// SetDedupDisabledSourceIds gets a reference to the given []int64 and assigns it to the DedupDisabledSourceIds field.
func (o *ProtectionJob) SetDedupDisabledSourceIds(v []int64) {
	o.DedupDisabledSourceIds = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ProtectionJob) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ProtectionJob) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ProtectionJob) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ProtectionJob) UnsetDescription() {
	o.Description.Unset()
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetEndTimeUsecs() int64 {
	if o == nil || o.EndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionJob) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *ProtectionJob) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *ProtectionJob) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *ProtectionJob) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetEnvironment returns the Environment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetEnvironment() string {
	if o == nil || o.Environment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// HasEnvironment returns a boolean if a field has been set.
func (o *ProtectionJob) HasEnvironment() bool {
	if o != nil && o.Environment.IsSet() {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given NullableString and assigns it to the Environment field.
func (o *ProtectionJob) SetEnvironment(v string) {
	o.Environment.Set(&v)
}
// SetEnvironmentNil sets the value for Environment to be an explicit nil
func (o *ProtectionJob) SetEnvironmentNil() {
	o.Environment.Set(nil)
}

// UnsetEnvironment ensures that no value is present for Environment, not even an explicit nil
func (o *ProtectionJob) UnsetEnvironment() {
	o.Environment.Unset()
}

// GetEnvironmentParameters returns the EnvironmentParameters field value if set, zero value otherwise.
func (o *ProtectionJob) GetEnvironmentParameters() EnvironmentTypeJobParameters {
	if o == nil || o.EnvironmentParameters == nil {
		var ret EnvironmentTypeJobParameters
		return ret
	}
	return *o.EnvironmentParameters
}

// GetEnvironmentParametersOk returns a tuple with the EnvironmentParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionJob) GetEnvironmentParametersOk() (*EnvironmentTypeJobParameters, bool) {
	if o == nil || o.EnvironmentParameters == nil {
		return nil, false
	}
	return o.EnvironmentParameters, true
}

// HasEnvironmentParameters returns a boolean if a field has been set.
func (o *ProtectionJob) HasEnvironmentParameters() bool {
	if o != nil && o.EnvironmentParameters != nil {
		return true
	}

	return false
}

// SetEnvironmentParameters gets a reference to the given EnvironmentTypeJobParameters and assigns it to the EnvironmentParameters field.
func (o *ProtectionJob) SetEnvironmentParameters(v EnvironmentTypeJobParameters) {
	o.EnvironmentParameters = &v
}

// GetExcludeSourceIds returns the ExcludeSourceIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetExcludeSourceIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.ExcludeSourceIds
}

// GetExcludeSourceIdsOk returns a tuple with the ExcludeSourceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetExcludeSourceIdsOk() (*[]int64, bool) {
	if o == nil || o.ExcludeSourceIds == nil {
		return nil, false
	}
	return &o.ExcludeSourceIds, true
}

// HasExcludeSourceIds returns a boolean if a field has been set.
func (o *ProtectionJob) HasExcludeSourceIds() bool {
	if o != nil && o.ExcludeSourceIds != nil {
		return true
	}

	return false
}

// SetExcludeSourceIds gets a reference to the given []int64 and assigns it to the ExcludeSourceIds field.
func (o *ProtectionJob) SetExcludeSourceIds(v []int64) {
	o.ExcludeSourceIds = v
}

// GetExcludeVmTagIds returns the ExcludeVmTagIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetExcludeVmTagIds() [][]int64 {
	if o == nil  {
		var ret [][]int64
		return ret
	}
	return o.ExcludeVmTagIds
}

// GetExcludeVmTagIdsOk returns a tuple with the ExcludeVmTagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetExcludeVmTagIdsOk() (*[][]int64, bool) {
	if o == nil || o.ExcludeVmTagIds == nil {
		return nil, false
	}
	return &o.ExcludeVmTagIds, true
}

// HasExcludeVmTagIds returns a boolean if a field has been set.
func (o *ProtectionJob) HasExcludeVmTagIds() bool {
	if o != nil && o.ExcludeVmTagIds != nil {
		return true
	}

	return false
}

// SetExcludeVmTagIds gets a reference to the given [][]int64 and assigns it to the ExcludeVmTagIds field.
func (o *ProtectionJob) SetExcludeVmTagIds(v [][]int64) {
	o.ExcludeVmTagIds = v
}

// GetFullProtectionSlaTimeMins returns the FullProtectionSlaTimeMins field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetFullProtectionSlaTimeMins() int64 {
	if o == nil || o.FullProtectionSlaTimeMins.Get() == nil {
		var ret int64
		return ret
	}
	return *o.FullProtectionSlaTimeMins.Get()
}

// GetFullProtectionSlaTimeMinsOk returns a tuple with the FullProtectionSlaTimeMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetFullProtectionSlaTimeMinsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FullProtectionSlaTimeMins.Get(), o.FullProtectionSlaTimeMins.IsSet()
}

// HasFullProtectionSlaTimeMins returns a boolean if a field has been set.
func (o *ProtectionJob) HasFullProtectionSlaTimeMins() bool {
	if o != nil && o.FullProtectionSlaTimeMins.IsSet() {
		return true
	}

	return false
}

// SetFullProtectionSlaTimeMins gets a reference to the given NullableInt64 and assigns it to the FullProtectionSlaTimeMins field.
func (o *ProtectionJob) SetFullProtectionSlaTimeMins(v int64) {
	o.FullProtectionSlaTimeMins.Set(&v)
}
// SetFullProtectionSlaTimeMinsNil sets the value for FullProtectionSlaTimeMins to be an explicit nil
func (o *ProtectionJob) SetFullProtectionSlaTimeMinsNil() {
	o.FullProtectionSlaTimeMins.Set(nil)
}

// UnsetFullProtectionSlaTimeMins ensures that no value is present for FullProtectionSlaTimeMins, not even an explicit nil
func (o *ProtectionJob) UnsetFullProtectionSlaTimeMins() {
	o.FullProtectionSlaTimeMins.Unset()
}

// GetFullProtectionStartTime returns the FullProtectionStartTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetFullProtectionStartTime() TimeOfDay {
	if o == nil || o.FullProtectionStartTime.Get() == nil {
		var ret TimeOfDay
		return ret
	}
	return *o.FullProtectionStartTime.Get()
}

// GetFullProtectionStartTimeOk returns a tuple with the FullProtectionStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetFullProtectionStartTimeOk() (*TimeOfDay, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FullProtectionStartTime.Get(), o.FullProtectionStartTime.IsSet()
}

// HasFullProtectionStartTime returns a boolean if a field has been set.
func (o *ProtectionJob) HasFullProtectionStartTime() bool {
	if o != nil && o.FullProtectionStartTime.IsSet() {
		return true
	}

	return false
}

// SetFullProtectionStartTime gets a reference to the given NullableTimeOfDay and assigns it to the FullProtectionStartTime field.
func (o *ProtectionJob) SetFullProtectionStartTime(v TimeOfDay) {
	o.FullProtectionStartTime.Set(&v)
}
// SetFullProtectionStartTimeNil sets the value for FullProtectionStartTime to be an explicit nil
func (o *ProtectionJob) SetFullProtectionStartTimeNil() {
	o.FullProtectionStartTime.Set(nil)
}

// UnsetFullProtectionStartTime ensures that no value is present for FullProtectionStartTime, not even an explicit nil
func (o *ProtectionJob) UnsetFullProtectionStartTime() {
	o.FullProtectionStartTime.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetId() int64 {
	if o == nil || o.Id.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ProtectionJob) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt64 and assigns it to the Id field.
func (o *ProtectionJob) SetId(v int64) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ProtectionJob) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ProtectionJob) UnsetId() {
	o.Id.Unset()
}

// GetIncrementalProtectionSlaTimeMins returns the IncrementalProtectionSlaTimeMins field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetIncrementalProtectionSlaTimeMins() int64 {
	if o == nil || o.IncrementalProtectionSlaTimeMins.Get() == nil {
		var ret int64
		return ret
	}
	return *o.IncrementalProtectionSlaTimeMins.Get()
}

// GetIncrementalProtectionSlaTimeMinsOk returns a tuple with the IncrementalProtectionSlaTimeMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetIncrementalProtectionSlaTimeMinsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IncrementalProtectionSlaTimeMins.Get(), o.IncrementalProtectionSlaTimeMins.IsSet()
}

// HasIncrementalProtectionSlaTimeMins returns a boolean if a field has been set.
func (o *ProtectionJob) HasIncrementalProtectionSlaTimeMins() bool {
	if o != nil && o.IncrementalProtectionSlaTimeMins.IsSet() {
		return true
	}

	return false
}

// SetIncrementalProtectionSlaTimeMins gets a reference to the given NullableInt64 and assigns it to the IncrementalProtectionSlaTimeMins field.
func (o *ProtectionJob) SetIncrementalProtectionSlaTimeMins(v int64) {
	o.IncrementalProtectionSlaTimeMins.Set(&v)
}
// SetIncrementalProtectionSlaTimeMinsNil sets the value for IncrementalProtectionSlaTimeMins to be an explicit nil
func (o *ProtectionJob) SetIncrementalProtectionSlaTimeMinsNil() {
	o.IncrementalProtectionSlaTimeMins.Set(nil)
}

// UnsetIncrementalProtectionSlaTimeMins ensures that no value is present for IncrementalProtectionSlaTimeMins, not even an explicit nil
func (o *ProtectionJob) UnsetIncrementalProtectionSlaTimeMins() {
	o.IncrementalProtectionSlaTimeMins.Unset()
}

// GetIncrementalProtectionStartTime returns the IncrementalProtectionStartTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetIncrementalProtectionStartTime() TimeOfDay {
	if o == nil || o.IncrementalProtectionStartTime.Get() == nil {
		var ret TimeOfDay
		return ret
	}
	return *o.IncrementalProtectionStartTime.Get()
}

// GetIncrementalProtectionStartTimeOk returns a tuple with the IncrementalProtectionStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetIncrementalProtectionStartTimeOk() (*TimeOfDay, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IncrementalProtectionStartTime.Get(), o.IncrementalProtectionStartTime.IsSet()
}

// HasIncrementalProtectionStartTime returns a boolean if a field has been set.
func (o *ProtectionJob) HasIncrementalProtectionStartTime() bool {
	if o != nil && o.IncrementalProtectionStartTime.IsSet() {
		return true
	}

	return false
}

// SetIncrementalProtectionStartTime gets a reference to the given NullableTimeOfDay and assigns it to the IncrementalProtectionStartTime field.
func (o *ProtectionJob) SetIncrementalProtectionStartTime(v TimeOfDay) {
	o.IncrementalProtectionStartTime.Set(&v)
}
// SetIncrementalProtectionStartTimeNil sets the value for IncrementalProtectionStartTime to be an explicit nil
func (o *ProtectionJob) SetIncrementalProtectionStartTimeNil() {
	o.IncrementalProtectionStartTime.Set(nil)
}

// UnsetIncrementalProtectionStartTime ensures that no value is present for IncrementalProtectionStartTime, not even an explicit nil
func (o *ProtectionJob) UnsetIncrementalProtectionStartTime() {
	o.IncrementalProtectionStartTime.Unset()
}

// GetIndexingPolicy returns the IndexingPolicy field value if set, zero value otherwise.
func (o *ProtectionJob) GetIndexingPolicy() IndexingPolicy {
	if o == nil || o.IndexingPolicy == nil {
		var ret IndexingPolicy
		return ret
	}
	return *o.IndexingPolicy
}

// GetIndexingPolicyOk returns a tuple with the IndexingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionJob) GetIndexingPolicyOk() (*IndexingPolicy, bool) {
	if o == nil || o.IndexingPolicy == nil {
		return nil, false
	}
	return o.IndexingPolicy, true
}

// HasIndexingPolicy returns a boolean if a field has been set.
func (o *ProtectionJob) HasIndexingPolicy() bool {
	if o != nil && o.IndexingPolicy != nil {
		return true
	}

	return false
}

// SetIndexingPolicy gets a reference to the given IndexingPolicy and assigns it to the IndexingPolicy field.
func (o *ProtectionJob) SetIndexingPolicy(v IndexingPolicy) {
	o.IndexingPolicy = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetIsActive() bool {
	if o == nil || o.IsActive.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsActive.Get()
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetIsActiveOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsActive.Get(), o.IsActive.IsSet()
}

// HasIsActive returns a boolean if a field has been set.
func (o *ProtectionJob) HasIsActive() bool {
	if o != nil && o.IsActive.IsSet() {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given NullableBool and assigns it to the IsActive field.
func (o *ProtectionJob) SetIsActive(v bool) {
	o.IsActive.Set(&v)
}
// SetIsActiveNil sets the value for IsActive to be an explicit nil
func (o *ProtectionJob) SetIsActiveNil() {
	o.IsActive.Set(nil)
}

// UnsetIsActive ensures that no value is present for IsActive, not even an explicit nil
func (o *ProtectionJob) UnsetIsActive() {
	o.IsActive.Unset()
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetIsDeleted() bool {
	if o == nil || o.IsDeleted.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsDeleted.Get()
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetIsDeletedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsDeleted.Get(), o.IsDeleted.IsSet()
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *ProtectionJob) HasIsDeleted() bool {
	if o != nil && o.IsDeleted.IsSet() {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given NullableBool and assigns it to the IsDeleted field.
func (o *ProtectionJob) SetIsDeleted(v bool) {
	o.IsDeleted.Set(&v)
}
// SetIsDeletedNil sets the value for IsDeleted to be an explicit nil
func (o *ProtectionJob) SetIsDeletedNil() {
	o.IsDeleted.Set(nil)
}

// UnsetIsDeleted ensures that no value is present for IsDeleted, not even an explicit nil
func (o *ProtectionJob) UnsetIsDeleted() {
	o.IsDeleted.Unset()
}

// GetIsDirectArchiveEnabled returns the IsDirectArchiveEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetIsDirectArchiveEnabled() bool {
	if o == nil || o.IsDirectArchiveEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsDirectArchiveEnabled.Get()
}

// GetIsDirectArchiveEnabledOk returns a tuple with the IsDirectArchiveEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetIsDirectArchiveEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsDirectArchiveEnabled.Get(), o.IsDirectArchiveEnabled.IsSet()
}

// HasIsDirectArchiveEnabled returns a boolean if a field has been set.
func (o *ProtectionJob) HasIsDirectArchiveEnabled() bool {
	if o != nil && o.IsDirectArchiveEnabled.IsSet() {
		return true
	}

	return false
}

// SetIsDirectArchiveEnabled gets a reference to the given NullableBool and assigns it to the IsDirectArchiveEnabled field.
func (o *ProtectionJob) SetIsDirectArchiveEnabled(v bool) {
	o.IsDirectArchiveEnabled.Set(&v)
}
// SetIsDirectArchiveEnabledNil sets the value for IsDirectArchiveEnabled to be an explicit nil
func (o *ProtectionJob) SetIsDirectArchiveEnabledNil() {
	o.IsDirectArchiveEnabled.Set(nil)
}

// UnsetIsDirectArchiveEnabled ensures that no value is present for IsDirectArchiveEnabled, not even an explicit nil
func (o *ProtectionJob) UnsetIsDirectArchiveEnabled() {
	o.IsDirectArchiveEnabled.Unset()
}

// GetIsNativeFormat returns the IsNativeFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetIsNativeFormat() bool {
	if o == nil || o.IsNativeFormat.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsNativeFormat.Get()
}

// GetIsNativeFormatOk returns a tuple with the IsNativeFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetIsNativeFormatOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsNativeFormat.Get(), o.IsNativeFormat.IsSet()
}

// HasIsNativeFormat returns a boolean if a field has been set.
func (o *ProtectionJob) HasIsNativeFormat() bool {
	if o != nil && o.IsNativeFormat.IsSet() {
		return true
	}

	return false
}

// SetIsNativeFormat gets a reference to the given NullableBool and assigns it to the IsNativeFormat field.
func (o *ProtectionJob) SetIsNativeFormat(v bool) {
	o.IsNativeFormat.Set(&v)
}
// SetIsNativeFormatNil sets the value for IsNativeFormat to be an explicit nil
func (o *ProtectionJob) SetIsNativeFormatNil() {
	o.IsNativeFormat.Set(nil)
}

// UnsetIsNativeFormat ensures that no value is present for IsNativeFormat, not even an explicit nil
func (o *ProtectionJob) UnsetIsNativeFormat() {
	o.IsNativeFormat.Unset()
}

// GetIsPaused returns the IsPaused field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetIsPaused() bool {
	if o == nil || o.IsPaused.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsPaused.Get()
}

// GetIsPausedOk returns a tuple with the IsPaused field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetIsPausedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsPaused.Get(), o.IsPaused.IsSet()
}

// HasIsPaused returns a boolean if a field has been set.
func (o *ProtectionJob) HasIsPaused() bool {
	if o != nil && o.IsPaused.IsSet() {
		return true
	}

	return false
}

// SetIsPaused gets a reference to the given NullableBool and assigns it to the IsPaused field.
func (o *ProtectionJob) SetIsPaused(v bool) {
	o.IsPaused.Set(&v)
}
// SetIsPausedNil sets the value for IsPaused to be an explicit nil
func (o *ProtectionJob) SetIsPausedNil() {
	o.IsPaused.Set(nil)
}

// UnsetIsPaused ensures that no value is present for IsPaused, not even an explicit nil
func (o *ProtectionJob) UnsetIsPaused() {
	o.IsPaused.Unset()
}

// GetLastRun returns the LastRun field value if set, zero value otherwise.
func (o *ProtectionJob) GetLastRun() ProtectionRunInstance {
	if o == nil || o.LastRun == nil {
		var ret ProtectionRunInstance
		return ret
	}
	return *o.LastRun
}

// GetLastRunOk returns a tuple with the LastRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionJob) GetLastRunOk() (*ProtectionRunInstance, bool) {
	if o == nil || o.LastRun == nil {
		return nil, false
	}
	return o.LastRun, true
}

// HasLastRun returns a boolean if a field has been set.
func (o *ProtectionJob) HasLastRun() bool {
	if o != nil && o.LastRun != nil {
		return true
	}

	return false
}

// SetLastRun gets a reference to the given ProtectionRunInstance and assigns it to the LastRun field.
func (o *ProtectionJob) SetLastRun(v ProtectionRunInstance) {
	o.LastRun = &v
}

// GetLeverageStorageSnapshots returns the LeverageStorageSnapshots field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetLeverageStorageSnapshots() bool {
	if o == nil || o.LeverageStorageSnapshots.Get() == nil {
		var ret bool
		return ret
	}
	return *o.LeverageStorageSnapshots.Get()
}

// GetLeverageStorageSnapshotsOk returns a tuple with the LeverageStorageSnapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetLeverageStorageSnapshotsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LeverageStorageSnapshots.Get(), o.LeverageStorageSnapshots.IsSet()
}

// HasLeverageStorageSnapshots returns a boolean if a field has been set.
func (o *ProtectionJob) HasLeverageStorageSnapshots() bool {
	if o != nil && o.LeverageStorageSnapshots.IsSet() {
		return true
	}

	return false
}

// SetLeverageStorageSnapshots gets a reference to the given NullableBool and assigns it to the LeverageStorageSnapshots field.
func (o *ProtectionJob) SetLeverageStorageSnapshots(v bool) {
	o.LeverageStorageSnapshots.Set(&v)
}
// SetLeverageStorageSnapshotsNil sets the value for LeverageStorageSnapshots to be an explicit nil
func (o *ProtectionJob) SetLeverageStorageSnapshotsNil() {
	o.LeverageStorageSnapshots.Set(nil)
}

// UnsetLeverageStorageSnapshots ensures that no value is present for LeverageStorageSnapshots, not even an explicit nil
func (o *ProtectionJob) UnsetLeverageStorageSnapshots() {
	o.LeverageStorageSnapshots.Unset()
}

// GetLeverageStorageSnapshotsForHyperflex returns the LeverageStorageSnapshotsForHyperflex field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetLeverageStorageSnapshotsForHyperflex() bool {
	if o == nil || o.LeverageStorageSnapshotsForHyperflex.Get() == nil {
		var ret bool
		return ret
	}
	return *o.LeverageStorageSnapshotsForHyperflex.Get()
}

// GetLeverageStorageSnapshotsForHyperflexOk returns a tuple with the LeverageStorageSnapshotsForHyperflex field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetLeverageStorageSnapshotsForHyperflexOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LeverageStorageSnapshotsForHyperflex.Get(), o.LeverageStorageSnapshotsForHyperflex.IsSet()
}

// HasLeverageStorageSnapshotsForHyperflex returns a boolean if a field has been set.
func (o *ProtectionJob) HasLeverageStorageSnapshotsForHyperflex() bool {
	if o != nil && o.LeverageStorageSnapshotsForHyperflex.IsSet() {
		return true
	}

	return false
}

// SetLeverageStorageSnapshotsForHyperflex gets a reference to the given NullableBool and assigns it to the LeverageStorageSnapshotsForHyperflex field.
func (o *ProtectionJob) SetLeverageStorageSnapshotsForHyperflex(v bool) {
	o.LeverageStorageSnapshotsForHyperflex.Set(&v)
}
// SetLeverageStorageSnapshotsForHyperflexNil sets the value for LeverageStorageSnapshotsForHyperflex to be an explicit nil
func (o *ProtectionJob) SetLeverageStorageSnapshotsForHyperflexNil() {
	o.LeverageStorageSnapshotsForHyperflex.Set(nil)
}

// UnsetLeverageStorageSnapshotsForHyperflex ensures that no value is present for LeverageStorageSnapshotsForHyperflex, not even an explicit nil
func (o *ProtectionJob) UnsetLeverageStorageSnapshotsForHyperflex() {
	o.LeverageStorageSnapshotsForHyperflex.Unset()
}

// GetMissingEntities returns the MissingEntities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetMissingEntities() []ProtectionSource {
	if o == nil  {
		var ret []ProtectionSource
		return ret
	}
	return o.MissingEntities
}

// GetMissingEntitiesOk returns a tuple with the MissingEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetMissingEntitiesOk() (*[]ProtectionSource, bool) {
	if o == nil || o.MissingEntities == nil {
		return nil, false
	}
	return &o.MissingEntities, true
}

// HasMissingEntities returns a boolean if a field has been set.
func (o *ProtectionJob) HasMissingEntities() bool {
	if o != nil && o.MissingEntities != nil {
		return true
	}

	return false
}

// SetMissingEntities gets a reference to the given []ProtectionSource and assigns it to the MissingEntities field.
func (o *ProtectionJob) SetMissingEntities(v []ProtectionSource) {
	o.MissingEntities = v
}

// GetModificationTimeUsecs returns the ModificationTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetModificationTimeUsecs() int64 {
	if o == nil || o.ModificationTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ModificationTimeUsecs.Get()
}

// GetModificationTimeUsecsOk returns a tuple with the ModificationTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetModificationTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ModificationTimeUsecs.Get(), o.ModificationTimeUsecs.IsSet()
}

// HasModificationTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionJob) HasModificationTimeUsecs() bool {
	if o != nil && o.ModificationTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetModificationTimeUsecs gets a reference to the given NullableInt64 and assigns it to the ModificationTimeUsecs field.
func (o *ProtectionJob) SetModificationTimeUsecs(v int64) {
	o.ModificationTimeUsecs.Set(&v)
}
// SetModificationTimeUsecsNil sets the value for ModificationTimeUsecs to be an explicit nil
func (o *ProtectionJob) SetModificationTimeUsecsNil() {
	o.ModificationTimeUsecs.Set(nil)
}

// UnsetModificationTimeUsecs ensures that no value is present for ModificationTimeUsecs, not even an explicit nil
func (o *ProtectionJob) UnsetModificationTimeUsecs() {
	o.ModificationTimeUsecs.Unset()
}

// GetModifiedByUser returns the ModifiedByUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetModifiedByUser() string {
	if o == nil || o.ModifiedByUser.Get() == nil {
		var ret string
		return ret
	}
	return *o.ModifiedByUser.Get()
}

// GetModifiedByUserOk returns a tuple with the ModifiedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetModifiedByUserOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ModifiedByUser.Get(), o.ModifiedByUser.IsSet()
}

// HasModifiedByUser returns a boolean if a field has been set.
func (o *ProtectionJob) HasModifiedByUser() bool {
	if o != nil && o.ModifiedByUser.IsSet() {
		return true
	}

	return false
}

// SetModifiedByUser gets a reference to the given NullableString and assigns it to the ModifiedByUser field.
func (o *ProtectionJob) SetModifiedByUser(v string) {
	o.ModifiedByUser.Set(&v)
}
// SetModifiedByUserNil sets the value for ModifiedByUser to be an explicit nil
func (o *ProtectionJob) SetModifiedByUserNil() {
	o.ModifiedByUser.Set(nil)
}

// UnsetModifiedByUser ensures that no value is present for ModifiedByUser, not even an explicit nil
func (o *ProtectionJob) UnsetModifiedByUser() {
	o.ModifiedByUser.Unset()
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProtectionJob) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *ProtectionJob) SetName(v string) {
	o.Name.Set(&v)
}

// GetParentSourceId returns the ParentSourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetParentSourceId() int64 {
	if o == nil || o.ParentSourceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ParentSourceId.Get()
}

// GetParentSourceIdOk returns a tuple with the ParentSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetParentSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ParentSourceId.Get(), o.ParentSourceId.IsSet()
}

// HasParentSourceId returns a boolean if a field has been set.
func (o *ProtectionJob) HasParentSourceId() bool {
	if o != nil && o.ParentSourceId.IsSet() {
		return true
	}

	return false
}

// SetParentSourceId gets a reference to the given NullableInt64 and assigns it to the ParentSourceId field.
func (o *ProtectionJob) SetParentSourceId(v int64) {
	o.ParentSourceId.Set(&v)
}
// SetParentSourceIdNil sets the value for ParentSourceId to be an explicit nil
func (o *ProtectionJob) SetParentSourceIdNil() {
	o.ParentSourceId.Set(nil)
}

// UnsetParentSourceId ensures that no value is present for ParentSourceId, not even an explicit nil
func (o *ProtectionJob) UnsetParentSourceId() {
	o.ParentSourceId.Unset()
}

// GetPerformSourceSideDedup returns the PerformSourceSideDedup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetPerformSourceSideDedup() bool {
	if o == nil || o.PerformSourceSideDedup.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PerformSourceSideDedup.Get()
}

// GetPerformSourceSideDedupOk returns a tuple with the PerformSourceSideDedup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetPerformSourceSideDedupOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PerformSourceSideDedup.Get(), o.PerformSourceSideDedup.IsSet()
}

// HasPerformSourceSideDedup returns a boolean if a field has been set.
func (o *ProtectionJob) HasPerformSourceSideDedup() bool {
	if o != nil && o.PerformSourceSideDedup.IsSet() {
		return true
	}

	return false
}

// SetPerformSourceSideDedup gets a reference to the given NullableBool and assigns it to the PerformSourceSideDedup field.
func (o *ProtectionJob) SetPerformSourceSideDedup(v bool) {
	o.PerformSourceSideDedup.Set(&v)
}
// SetPerformSourceSideDedupNil sets the value for PerformSourceSideDedup to be an explicit nil
func (o *ProtectionJob) SetPerformSourceSideDedupNil() {
	o.PerformSourceSideDedup.Set(nil)
}

// UnsetPerformSourceSideDedup ensures that no value is present for PerformSourceSideDedup, not even an explicit nil
func (o *ProtectionJob) UnsetPerformSourceSideDedup() {
	o.PerformSourceSideDedup.Unset()
}

// GetPolicyAppliedTimeMsecs returns the PolicyAppliedTimeMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetPolicyAppliedTimeMsecs() int64 {
	if o == nil || o.PolicyAppliedTimeMsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.PolicyAppliedTimeMsecs.Get()
}

// GetPolicyAppliedTimeMsecsOk returns a tuple with the PolicyAppliedTimeMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetPolicyAppliedTimeMsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PolicyAppliedTimeMsecs.Get(), o.PolicyAppliedTimeMsecs.IsSet()
}

// HasPolicyAppliedTimeMsecs returns a boolean if a field has been set.
func (o *ProtectionJob) HasPolicyAppliedTimeMsecs() bool {
	if o != nil && o.PolicyAppliedTimeMsecs.IsSet() {
		return true
	}

	return false
}

// SetPolicyAppliedTimeMsecs gets a reference to the given NullableInt64 and assigns it to the PolicyAppliedTimeMsecs field.
func (o *ProtectionJob) SetPolicyAppliedTimeMsecs(v int64) {
	o.PolicyAppliedTimeMsecs.Set(&v)
}
// SetPolicyAppliedTimeMsecsNil sets the value for PolicyAppliedTimeMsecs to be an explicit nil
func (o *ProtectionJob) SetPolicyAppliedTimeMsecsNil() {
	o.PolicyAppliedTimeMsecs.Set(nil)
}

// UnsetPolicyAppliedTimeMsecs ensures that no value is present for PolicyAppliedTimeMsecs, not even an explicit nil
func (o *ProtectionJob) UnsetPolicyAppliedTimeMsecs() {
	o.PolicyAppliedTimeMsecs.Unset()
}

// GetPolicyId returns the PolicyId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProtectionJob) GetPolicyId() string {
	if o == nil || o.PolicyId.Get() == nil {
		var ret string
		return ret
	}

	return *o.PolicyId.Get()
}

// GetPolicyIdOk returns a tuple with the PolicyId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetPolicyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PolicyId.Get(), o.PolicyId.IsSet()
}

// SetPolicyId sets field value
func (o *ProtectionJob) SetPolicyId(v string) {
	o.PolicyId.Set(&v)
}

// GetPostBackupScript returns the PostBackupScript field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetPostBackupScript() BackupScript {
	if o == nil || o.PostBackupScript.Get() == nil {
		var ret BackupScript
		return ret
	}
	return *o.PostBackupScript.Get()
}

// GetPostBackupScriptOk returns a tuple with the PostBackupScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetPostBackupScriptOk() (*BackupScript, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PostBackupScript.Get(), o.PostBackupScript.IsSet()
}

// HasPostBackupScript returns a boolean if a field has been set.
func (o *ProtectionJob) HasPostBackupScript() bool {
	if o != nil && o.PostBackupScript.IsSet() {
		return true
	}

	return false
}

// SetPostBackupScript gets a reference to the given NullableBackupScript and assigns it to the PostBackupScript field.
func (o *ProtectionJob) SetPostBackupScript(v BackupScript) {
	o.PostBackupScript.Set(&v)
}
// SetPostBackupScriptNil sets the value for PostBackupScript to be an explicit nil
func (o *ProtectionJob) SetPostBackupScriptNil() {
	o.PostBackupScript.Set(nil)
}

// UnsetPostBackupScript ensures that no value is present for PostBackupScript, not even an explicit nil
func (o *ProtectionJob) UnsetPostBackupScript() {
	o.PostBackupScript.Unset()
}

// GetPreBackupScript returns the PreBackupScript field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetPreBackupScript() BackupScript {
	if o == nil || o.PreBackupScript.Get() == nil {
		var ret BackupScript
		return ret
	}
	return *o.PreBackupScript.Get()
}

// GetPreBackupScriptOk returns a tuple with the PreBackupScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetPreBackupScriptOk() (*BackupScript, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PreBackupScript.Get(), o.PreBackupScript.IsSet()
}

// HasPreBackupScript returns a boolean if a field has been set.
func (o *ProtectionJob) HasPreBackupScript() bool {
	if o != nil && o.PreBackupScript.IsSet() {
		return true
	}

	return false
}

// SetPreBackupScript gets a reference to the given NullableBackupScript and assigns it to the PreBackupScript field.
func (o *ProtectionJob) SetPreBackupScript(v BackupScript) {
	o.PreBackupScript.Set(&v)
}
// SetPreBackupScriptNil sets the value for PreBackupScript to be an explicit nil
func (o *ProtectionJob) SetPreBackupScriptNil() {
	o.PreBackupScript.Set(nil)
}

// UnsetPreBackupScript ensures that no value is present for PreBackupScript, not even an explicit nil
func (o *ProtectionJob) UnsetPreBackupScript() {
	o.PreBackupScript.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetPriority() string {
	if o == nil || o.Priority.Get() == nil {
		var ret string
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetPriorityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *ProtectionJob) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableString and assigns it to the Priority field.
func (o *ProtectionJob) SetPriority(v string) {
	o.Priority.Set(&v)
}
// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *ProtectionJob) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *ProtectionJob) UnsetPriority() {
	o.Priority.Unset()
}

// GetQosType returns the QosType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetQosType() string {
	if o == nil || o.QosType.Get() == nil {
		var ret string
		return ret
	}
	return *o.QosType.Get()
}

// GetQosTypeOk returns a tuple with the QosType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetQosTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.QosType.Get(), o.QosType.IsSet()
}

// HasQosType returns a boolean if a field has been set.
func (o *ProtectionJob) HasQosType() bool {
	if o != nil && o.QosType.IsSet() {
		return true
	}

	return false
}

// SetQosType gets a reference to the given NullableString and assigns it to the QosType field.
func (o *ProtectionJob) SetQosType(v string) {
	o.QosType.Set(&v)
}
// SetQosTypeNil sets the value for QosType to be an explicit nil
func (o *ProtectionJob) SetQosTypeNil() {
	o.QosType.Set(nil)
}

// UnsetQosType ensures that no value is present for QosType, not even an explicit nil
func (o *ProtectionJob) UnsetQosType() {
	o.QosType.Unset()
}

// GetQuiesce returns the Quiesce field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetQuiesce() bool {
	if o == nil || o.Quiesce.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Quiesce.Get()
}

// GetQuiesceOk returns a tuple with the Quiesce field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetQuiesceOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Quiesce.Get(), o.Quiesce.IsSet()
}

// HasQuiesce returns a boolean if a field has been set.
func (o *ProtectionJob) HasQuiesce() bool {
	if o != nil && o.Quiesce.IsSet() {
		return true
	}

	return false
}

// SetQuiesce gets a reference to the given NullableBool and assigns it to the Quiesce field.
func (o *ProtectionJob) SetQuiesce(v bool) {
	o.Quiesce.Set(&v)
}
// SetQuiesceNil sets the value for Quiesce to be an explicit nil
func (o *ProtectionJob) SetQuiesceNil() {
	o.Quiesce.Set(nil)
}

// UnsetQuiesce ensures that no value is present for Quiesce, not even an explicit nil
func (o *ProtectionJob) UnsetQuiesce() {
	o.Quiesce.Unset()
}

// GetRemoteScript returns the RemoteScript field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetRemoteScript() RemoteJobScript {
	if o == nil || o.RemoteScript.Get() == nil {
		var ret RemoteJobScript
		return ret
	}
	return *o.RemoteScript.Get()
}

// GetRemoteScriptOk returns a tuple with the RemoteScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetRemoteScriptOk() (*RemoteJobScript, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RemoteScript.Get(), o.RemoteScript.IsSet()
}

// HasRemoteScript returns a boolean if a field has been set.
func (o *ProtectionJob) HasRemoteScript() bool {
	if o != nil && o.RemoteScript.IsSet() {
		return true
	}

	return false
}

// SetRemoteScript gets a reference to the given NullableRemoteJobScript and assigns it to the RemoteScript field.
func (o *ProtectionJob) SetRemoteScript(v RemoteJobScript) {
	o.RemoteScript.Set(&v)
}
// SetRemoteScriptNil sets the value for RemoteScript to be an explicit nil
func (o *ProtectionJob) SetRemoteScriptNil() {
	o.RemoteScript.Set(nil)
}

// UnsetRemoteScript ensures that no value is present for RemoteScript, not even an explicit nil
func (o *ProtectionJob) UnsetRemoteScript() {
	o.RemoteScript.Unset()
}

// GetRemoteViewName returns the RemoteViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetRemoteViewName() string {
	if o == nil || o.RemoteViewName.Get() == nil {
		var ret string
		return ret
	}
	return *o.RemoteViewName.Get()
}

// GetRemoteViewNameOk returns a tuple with the RemoteViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetRemoteViewNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RemoteViewName.Get(), o.RemoteViewName.IsSet()
}

// HasRemoteViewName returns a boolean if a field has been set.
func (o *ProtectionJob) HasRemoteViewName() bool {
	if o != nil && o.RemoteViewName.IsSet() {
		return true
	}

	return false
}

// SetRemoteViewName gets a reference to the given NullableString and assigns it to the RemoteViewName field.
func (o *ProtectionJob) SetRemoteViewName(v string) {
	o.RemoteViewName.Set(&v)
}
// SetRemoteViewNameNil sets the value for RemoteViewName to be an explicit nil
func (o *ProtectionJob) SetRemoteViewNameNil() {
	o.RemoteViewName.Set(nil)
}

// UnsetRemoteViewName ensures that no value is present for RemoteViewName, not even an explicit nil
func (o *ProtectionJob) UnsetRemoteViewName() {
	o.RemoteViewName.Unset()
}

// GetSourceIds returns the SourceIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetSourceIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.SourceIds
}

// GetSourceIdsOk returns a tuple with the SourceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetSourceIdsOk() (*[]int64, bool) {
	if o == nil || o.SourceIds == nil {
		return nil, false
	}
	return &o.SourceIds, true
}

// HasSourceIds returns a boolean if a field has been set.
func (o *ProtectionJob) HasSourceIds() bool {
	if o != nil && o.SourceIds != nil {
		return true
	}

	return false
}

// SetSourceIds gets a reference to the given []int64 and assigns it to the SourceIds field.
func (o *ProtectionJob) SetSourceIds(v []int64) {
	o.SourceIds = v
}

// GetSourceSpecialParameters returns the SourceSpecialParameters field value
// If the value is explicit nil, the zero value for []SourceSpecialParameter will be returned
func (o *ProtectionJob) GetSourceSpecialParameters() []SourceSpecialParameter {
	if o == nil {
		var ret []SourceSpecialParameter
		return ret
	}

	return o.SourceSpecialParameters
}

// GetSourceSpecialParametersOk returns a tuple with the SourceSpecialParameters field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetSourceSpecialParametersOk() (*[]SourceSpecialParameter, bool) {
	if o == nil || o.SourceSpecialParameters == nil {
		return nil, false
	}
	return &o.SourceSpecialParameters, true
}

// SetSourceSpecialParameters sets field value
func (o *ProtectionJob) SetSourceSpecialParameters(v []SourceSpecialParameter) {
	o.SourceSpecialParameters = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetStartTime() TimeOfDay {
	if o == nil || o.StartTime.Get() == nil {
		var ret TimeOfDay
		return ret
	}
	return *o.StartTime.Get()
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetStartTimeOk() (*TimeOfDay, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartTime.Get(), o.StartTime.IsSet()
}

// HasStartTime returns a boolean if a field has been set.
func (o *ProtectionJob) HasStartTime() bool {
	if o != nil && o.StartTime.IsSet() {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given NullableTimeOfDay and assigns it to the StartTime field.
func (o *ProtectionJob) SetStartTime(v TimeOfDay) {
	o.StartTime.Set(&v)
}
// SetStartTimeNil sets the value for StartTime to be an explicit nil
func (o *ProtectionJob) SetStartTimeNil() {
	o.StartTime.Set(nil)
}

// UnsetStartTime ensures that no value is present for StartTime, not even an explicit nil
func (o *ProtectionJob) UnsetStartTime() {
	o.StartTime.Unset()
}

// GetSummaryStats returns the SummaryStats field value if set, zero value otherwise.
func (o *ProtectionJob) GetSummaryStats() ProtectionJobSummaryStats {
	if o == nil || o.SummaryStats == nil {
		var ret ProtectionJobSummaryStats
		return ret
	}
	return *o.SummaryStats
}

// GetSummaryStatsOk returns a tuple with the SummaryStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionJob) GetSummaryStatsOk() (*ProtectionJobSummaryStats, bool) {
	if o == nil || o.SummaryStats == nil {
		return nil, false
	}
	return o.SummaryStats, true
}

// HasSummaryStats returns a boolean if a field has been set.
func (o *ProtectionJob) HasSummaryStats() bool {
	if o != nil && o.SummaryStats != nil {
		return true
	}

	return false
}

// SetSummaryStats gets a reference to the given ProtectionJobSummaryStats and assigns it to the SummaryStats field.
func (o *ProtectionJob) SetSummaryStats(v ProtectionJobSummaryStats) {
	o.SummaryStats = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetTenantId() string {
	if o == nil || o.TenantId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *ProtectionJob) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *ProtectionJob) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *ProtectionJob) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *ProtectionJob) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetTimezone returns the Timezone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetTimezone() string {
	if o == nil || o.Timezone.Get() == nil {
		var ret string
		return ret
	}
	return *o.Timezone.Get()
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetTimezoneOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Timezone.Get(), o.Timezone.IsSet()
}

// HasTimezone returns a boolean if a field has been set.
func (o *ProtectionJob) HasTimezone() bool {
	if o != nil && o.Timezone.IsSet() {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given NullableString and assigns it to the Timezone field.
func (o *ProtectionJob) SetTimezone(v string) {
	o.Timezone.Set(&v)
}
// SetTimezoneNil sets the value for Timezone to be an explicit nil
func (o *ProtectionJob) SetTimezoneNil() {
	o.Timezone.Set(nil)
}

// UnsetTimezone ensures that no value is present for Timezone, not even an explicit nil
func (o *ProtectionJob) UnsetTimezone() {
	o.Timezone.Unset()
}

// GetUid returns the Uid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetUid() UniversalId {
	if o == nil || o.Uid.Get() == nil {
		var ret UniversalId
		return ret
	}
	return *o.Uid.Get()
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetUidOk() (*UniversalId, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Uid.Get(), o.Uid.IsSet()
}

// HasUid returns a boolean if a field has been set.
func (o *ProtectionJob) HasUid() bool {
	if o != nil && o.Uid.IsSet() {
		return true
	}

	return false
}

// SetUid gets a reference to the given NullableUniversalId and assigns it to the Uid field.
func (o *ProtectionJob) SetUid(v UniversalId) {
	o.Uid.Set(&v)
}
// SetUidNil sets the value for Uid to be an explicit nil
func (o *ProtectionJob) SetUidNil() {
	o.Uid.Set(nil)
}

// UnsetUid ensures that no value is present for Uid, not even an explicit nil
func (o *ProtectionJob) UnsetUid() {
	o.Uid.Unset()
}

// GetUserSpecifiedTags returns the UserSpecifiedTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetUserSpecifiedTags() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.UserSpecifiedTags
}

// GetUserSpecifiedTagsOk returns a tuple with the UserSpecifiedTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetUserSpecifiedTagsOk() (*[]string, bool) {
	if o == nil || o.UserSpecifiedTags == nil {
		return nil, false
	}
	return &o.UserSpecifiedTags, true
}

// HasUserSpecifiedTags returns a boolean if a field has been set.
func (o *ProtectionJob) HasUserSpecifiedTags() bool {
	if o != nil && o.UserSpecifiedTags != nil {
		return true
	}

	return false
}

// SetUserSpecifiedTags gets a reference to the given []string and assigns it to the UserSpecifiedTags field.
func (o *ProtectionJob) SetUserSpecifiedTags(v []string) {
	o.UserSpecifiedTags = v
}

// GetViewBoxId returns the ViewBoxId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *ProtectionJob) GetViewBoxId() int64 {
	if o == nil || o.ViewBoxId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.ViewBoxId.Get()
}

// GetViewBoxIdOk returns a tuple with the ViewBoxId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetViewBoxIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewBoxId.Get(), o.ViewBoxId.IsSet()
}

// SetViewBoxId sets field value
func (o *ProtectionJob) SetViewBoxId(v int64) {
	o.ViewBoxId.Set(&v)
}

// GetViewName returns the ViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetViewName() string {
	if o == nil || o.ViewName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ViewName.Get()
}

// GetViewNameOk returns a tuple with the ViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetViewNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewName.Get(), o.ViewName.IsSet()
}

// HasViewName returns a boolean if a field has been set.
func (o *ProtectionJob) HasViewName() bool {
	if o != nil && o.ViewName.IsSet() {
		return true
	}

	return false
}

// SetViewName gets a reference to the given NullableString and assigns it to the ViewName field.
func (o *ProtectionJob) SetViewName(v string) {
	o.ViewName.Set(&v)
}
// SetViewNameNil sets the value for ViewName to be an explicit nil
func (o *ProtectionJob) SetViewNameNil() {
	o.ViewName.Set(nil)
}

// UnsetViewName ensures that no value is present for ViewName, not even an explicit nil
func (o *ProtectionJob) UnsetViewName() {
	o.ViewName.Unset()
}

// GetVmTagIds returns the VmTagIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJob) GetVmTagIds() [][]int64 {
	if o == nil  {
		var ret [][]int64
		return ret
	}
	return o.VmTagIds
}

// GetVmTagIdsOk returns a tuple with the VmTagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJob) GetVmTagIdsOk() (*[][]int64, bool) {
	if o == nil || o.VmTagIds == nil {
		return nil, false
	}
	return &o.VmTagIds, true
}

// HasVmTagIds returns a boolean if a field has been set.
func (o *ProtectionJob) HasVmTagIds() bool {
	if o != nil && o.VmTagIds != nil {
		return true
	}

	return false
}

// SetVmTagIds gets a reference to the given [][]int64 and assigns it to the VmTagIds field.
func (o *ProtectionJob) SetVmTagIds(v [][]int64) {
	o.VmTagIds = v
}

func (o ProtectionJob) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LeverageSanTransport.IsSet() {
		toSerialize["LeverageSanTransport"] = o.LeverageSanTransport.Get()
	}
	if o.AbortInBlackoutPeriod.IsSet() {
		toSerialize["abortInBlackoutPeriod"] = o.AbortInBlackoutPeriod.Get()
	}
	if o.AlertingConfig != nil {
		toSerialize["alertingConfig"] = o.AlertingConfig
	}
	if o.AlertingPolicy != nil {
		toSerialize["alertingPolicy"] = o.AlertingPolicy
	}
	if o.CloudParameters != nil {
		toSerialize["cloudParameters"] = o.CloudParameters
	}
	if o.ContinueOnQuiesceFailure.IsSet() {
		toSerialize["continueOnQuiesceFailure"] = o.ContinueOnQuiesceFailure.Get()
	}
	if o.CreateRemoteView.IsSet() {
		toSerialize["createRemoteView"] = o.CreateRemoteView.Get()
	}
	if o.CreationTimeUsecs.IsSet() {
		toSerialize["creationTimeUsecs"] = o.CreationTimeUsecs.Get()
	}
	if o.DataMigrationPolicy != nil {
		toSerialize["dataMigrationPolicy"] = o.DataMigrationPolicy
	}
	if o.DedupDisabledSourceIds != nil {
		toSerialize["dedupDisabledSourceIds"] = o.DedupDisabledSourceIds
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.Environment.IsSet() {
		toSerialize["environment"] = o.Environment.Get()
	}
	if o.EnvironmentParameters != nil {
		toSerialize["environmentParameters"] = o.EnvironmentParameters
	}
	if o.ExcludeSourceIds != nil {
		toSerialize["excludeSourceIds"] = o.ExcludeSourceIds
	}
	if o.ExcludeVmTagIds != nil {
		toSerialize["excludeVmTagIds"] = o.ExcludeVmTagIds
	}
	if o.FullProtectionSlaTimeMins.IsSet() {
		toSerialize["fullProtectionSlaTimeMins"] = o.FullProtectionSlaTimeMins.Get()
	}
	if o.FullProtectionStartTime.IsSet() {
		toSerialize["fullProtectionStartTime"] = o.FullProtectionStartTime.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.IncrementalProtectionSlaTimeMins.IsSet() {
		toSerialize["incrementalProtectionSlaTimeMins"] = o.IncrementalProtectionSlaTimeMins.Get()
	}
	if o.IncrementalProtectionStartTime.IsSet() {
		toSerialize["incrementalProtectionStartTime"] = o.IncrementalProtectionStartTime.Get()
	}
	if o.IndexingPolicy != nil {
		toSerialize["indexingPolicy"] = o.IndexingPolicy
	}
	if o.IsActive.IsSet() {
		toSerialize["isActive"] = o.IsActive.Get()
	}
	if o.IsDeleted.IsSet() {
		toSerialize["isDeleted"] = o.IsDeleted.Get()
	}
	if o.IsDirectArchiveEnabled.IsSet() {
		toSerialize["isDirectArchiveEnabled"] = o.IsDirectArchiveEnabled.Get()
	}
	if o.IsNativeFormat.IsSet() {
		toSerialize["isNativeFormat"] = o.IsNativeFormat.Get()
	}
	if o.IsPaused.IsSet() {
		toSerialize["isPaused"] = o.IsPaused.Get()
	}
	if o.LastRun != nil {
		toSerialize["lastRun"] = o.LastRun
	}
	if o.LeverageStorageSnapshots.IsSet() {
		toSerialize["leverageStorageSnapshots"] = o.LeverageStorageSnapshots.Get()
	}
	if o.LeverageStorageSnapshotsForHyperflex.IsSet() {
		toSerialize["leverageStorageSnapshotsForHyperflex"] = o.LeverageStorageSnapshotsForHyperflex.Get()
	}
	if o.MissingEntities != nil {
		toSerialize["missingEntities"] = o.MissingEntities
	}
	if o.ModificationTimeUsecs.IsSet() {
		toSerialize["modificationTimeUsecs"] = o.ModificationTimeUsecs.Get()
	}
	if o.ModifiedByUser.IsSet() {
		toSerialize["modifiedByUser"] = o.ModifiedByUser.Get()
	}
	if true {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ParentSourceId.IsSet() {
		toSerialize["parentSourceId"] = o.ParentSourceId.Get()
	}
	if o.PerformSourceSideDedup.IsSet() {
		toSerialize["performSourceSideDedup"] = o.PerformSourceSideDedup.Get()
	}
	if o.PolicyAppliedTimeMsecs.IsSet() {
		toSerialize["policyAppliedTimeMsecs"] = o.PolicyAppliedTimeMsecs.Get()
	}
	if true {
		toSerialize["policyId"] = o.PolicyId.Get()
	}
	if o.PostBackupScript.IsSet() {
		toSerialize["postBackupScript"] = o.PostBackupScript.Get()
	}
	if o.PreBackupScript.IsSet() {
		toSerialize["preBackupScript"] = o.PreBackupScript.Get()
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	if o.QosType.IsSet() {
		toSerialize["qosType"] = o.QosType.Get()
	}
	if o.Quiesce.IsSet() {
		toSerialize["quiesce"] = o.Quiesce.Get()
	}
	if o.RemoteScript.IsSet() {
		toSerialize["remoteScript"] = o.RemoteScript.Get()
	}
	if o.RemoteViewName.IsSet() {
		toSerialize["remoteViewName"] = o.RemoteViewName.Get()
	}
	if o.SourceIds != nil {
		toSerialize["sourceIds"] = o.SourceIds
	}
	if o.SourceSpecialParameters != nil {
		toSerialize["sourceSpecialParameters"] = o.SourceSpecialParameters
	}
	if o.StartTime.IsSet() {
		toSerialize["startTime"] = o.StartTime.Get()
	}
	if o.SummaryStats != nil {
		toSerialize["summaryStats"] = o.SummaryStats
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.Timezone.IsSet() {
		toSerialize["timezone"] = o.Timezone.Get()
	}
	if o.Uid.IsSet() {
		toSerialize["uid"] = o.Uid.Get()
	}
	if o.UserSpecifiedTags != nil {
		toSerialize["userSpecifiedTags"] = o.UserSpecifiedTags
	}
	if true {
		toSerialize["viewBoxId"] = o.ViewBoxId.Get()
	}
	if o.ViewName.IsSet() {
		toSerialize["viewName"] = o.ViewName.Get()
	}
	if o.VmTagIds != nil {
		toSerialize["vmTagIds"] = o.VmTagIds
	}
	return json.Marshal(toSerialize)
}

type NullableProtectionJob struct {
	value *ProtectionJob
	isSet bool
}

func (v NullableProtectionJob) Get() *ProtectionJob {
	return v.value
}

func (v *NullableProtectionJob) Set(val *ProtectionJob) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionJob) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionJob(val *ProtectionJob) *NullableProtectionJob {
	return &NullableProtectionJob{value: val, isSet: true}
}

func (v NullableProtectionJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


