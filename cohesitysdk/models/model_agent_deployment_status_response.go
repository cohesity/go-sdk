/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// AgentDeploymentStatusResponse Specifies the overview of the agent deployment status.
type AgentDeploymentStatusResponse struct {
	// Specifies the compact version of Cohesity agent. For example, 6.0.1.
	CompactVersion NullableString `json:"compactVersion,omitempty"`
	// Specifies the health status of the Cohesity agent. Specifies the status of the agent running on a physical source. 'kUnknown' indicates the Agent is not known. No attempt to connect to the Agent has occurred. 'kUnreachable' indicates the Agent is not reachable. 'kHealthy' indicates the Agent is healthy. 'kDegraded' indicates the Agent is running but in a degraded state.
	HealthStatus NullableString `json:"healthStatus,omitempty"`
	// Specifies the IP of the host on which the agent is installed.
	HostIp NullableString `json:"hostIp,omitempty"`
	// Specifies the host type on which the agent is installed. 'kLinux' indicates the Linux operating system. 'kWindows' indicates the Microsoft Windows operating system. 'kAix' indicates the IBM AIX operating system. 'kSolaris' indicates the Oracle Solaris operating system. 'kSapHana' indicates the Sap Hana database system developed by SAP SE. 'kOther' indicates the other types of operating system.
	HostOsType NullableString `json:"hostOsType,omitempty"`
	// Specifies the status of the last upgrade attempt. Specifies the status of the upgrade of the agent on a physical server. 'kIdle' indicates there is no agent upgrade in progress. 'kAccepted' indicates the Agent upgrade is accepted. 'kStarted' indicates the Agent upgrade is in progress. 'kFinished' indicates the Agent upgrade is completed.
	LastUpgradeStatus NullableString `json:"lastUpgradeStatus,omitempty"`
	// Specifies the upgradability of the agent running on the server. Specifies the upgradability of the agent running on the physical server. 'kUpgradable' indicates the Agent can be upgraded to the agent software version on the cluster. 'kCurrent' indicates the Agent is running the latest version. 'kUnknown' indicates the Agent's version is not known. 'kNonUpgradableInvalidVersion' indicates the Agent's version is invalid. 'kNonUpgradableAgentIsNewer' indicates the Agent's version is newer than the agent software version the cluster. 'kNonUpgradableAgentIsOld' indicates the Agent's version is too old that does not support upgrades.
	Upgradability NullableString `json:"upgradability,omitempty"`
	// Specifies detailed message about the agent upgrade failure. This field is not set for successful upgrade.
	UpgradeStatusMessage NullableString `json:"upgradeStatusMessage,omitempty"`
	// Specifies the Cohesity software version of the agent. For example: 6.0.1-release-YYYYMMDD_<hash>
	Version NullableString `json:"version,omitempty"`
}

// NewAgentDeploymentStatusResponse instantiates a new AgentDeploymentStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentDeploymentStatusResponse() *AgentDeploymentStatusResponse {
	this := AgentDeploymentStatusResponse{}
	return &this
}

// NewAgentDeploymentStatusResponseWithDefaults instantiates a new AgentDeploymentStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentDeploymentStatusResponseWithDefaults() *AgentDeploymentStatusResponse {
	this := AgentDeploymentStatusResponse{}
	return &this
}

// GetCompactVersion returns the CompactVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentDeploymentStatusResponse) GetCompactVersion() string {
	if o == nil || o.CompactVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.CompactVersion.Get()
}

// GetCompactVersionOk returns a tuple with the CompactVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentDeploymentStatusResponse) GetCompactVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CompactVersion.Get(), o.CompactVersion.IsSet()
}

// HasCompactVersion returns a boolean if a field has been set.
func (o *AgentDeploymentStatusResponse) HasCompactVersion() bool {
	if o != nil && o.CompactVersion.IsSet() {
		return true
	}

	return false
}

// SetCompactVersion gets a reference to the given NullableString and assigns it to the CompactVersion field.
func (o *AgentDeploymentStatusResponse) SetCompactVersion(v string) {
	o.CompactVersion.Set(&v)
}
// SetCompactVersionNil sets the value for CompactVersion to be an explicit nil
func (o *AgentDeploymentStatusResponse) SetCompactVersionNil() {
	o.CompactVersion.Set(nil)
}

// UnsetCompactVersion ensures that no value is present for CompactVersion, not even an explicit nil
func (o *AgentDeploymentStatusResponse) UnsetCompactVersion() {
	o.CompactVersion.Unset()
}

// GetHealthStatus returns the HealthStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentDeploymentStatusResponse) GetHealthStatus() string {
	if o == nil || o.HealthStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.HealthStatus.Get()
}

// GetHealthStatusOk returns a tuple with the HealthStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentDeploymentStatusResponse) GetHealthStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HealthStatus.Get(), o.HealthStatus.IsSet()
}

// HasHealthStatus returns a boolean if a field has been set.
func (o *AgentDeploymentStatusResponse) HasHealthStatus() bool {
	if o != nil && o.HealthStatus.IsSet() {
		return true
	}

	return false
}

// SetHealthStatus gets a reference to the given NullableString and assigns it to the HealthStatus field.
func (o *AgentDeploymentStatusResponse) SetHealthStatus(v string) {
	o.HealthStatus.Set(&v)
}
// SetHealthStatusNil sets the value for HealthStatus to be an explicit nil
func (o *AgentDeploymentStatusResponse) SetHealthStatusNil() {
	o.HealthStatus.Set(nil)
}

// UnsetHealthStatus ensures that no value is present for HealthStatus, not even an explicit nil
func (o *AgentDeploymentStatusResponse) UnsetHealthStatus() {
	o.HealthStatus.Unset()
}

// GetHostIp returns the HostIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentDeploymentStatusResponse) GetHostIp() string {
	if o == nil || o.HostIp.Get() == nil {
		var ret string
		return ret
	}
	return *o.HostIp.Get()
}

// GetHostIpOk returns a tuple with the HostIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentDeploymentStatusResponse) GetHostIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HostIp.Get(), o.HostIp.IsSet()
}

// HasHostIp returns a boolean if a field has been set.
func (o *AgentDeploymentStatusResponse) HasHostIp() bool {
	if o != nil && o.HostIp.IsSet() {
		return true
	}

	return false
}

// SetHostIp gets a reference to the given NullableString and assigns it to the HostIp field.
func (o *AgentDeploymentStatusResponse) SetHostIp(v string) {
	o.HostIp.Set(&v)
}
// SetHostIpNil sets the value for HostIp to be an explicit nil
func (o *AgentDeploymentStatusResponse) SetHostIpNil() {
	o.HostIp.Set(nil)
}

// UnsetHostIp ensures that no value is present for HostIp, not even an explicit nil
func (o *AgentDeploymentStatusResponse) UnsetHostIp() {
	o.HostIp.Unset()
}

// GetHostOsType returns the HostOsType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentDeploymentStatusResponse) GetHostOsType() string {
	if o == nil || o.HostOsType.Get() == nil {
		var ret string
		return ret
	}
	return *o.HostOsType.Get()
}

// GetHostOsTypeOk returns a tuple with the HostOsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentDeploymentStatusResponse) GetHostOsTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HostOsType.Get(), o.HostOsType.IsSet()
}

// HasHostOsType returns a boolean if a field has been set.
func (o *AgentDeploymentStatusResponse) HasHostOsType() bool {
	if o != nil && o.HostOsType.IsSet() {
		return true
	}

	return false
}

// SetHostOsType gets a reference to the given NullableString and assigns it to the HostOsType field.
func (o *AgentDeploymentStatusResponse) SetHostOsType(v string) {
	o.HostOsType.Set(&v)
}
// SetHostOsTypeNil sets the value for HostOsType to be an explicit nil
func (o *AgentDeploymentStatusResponse) SetHostOsTypeNil() {
	o.HostOsType.Set(nil)
}

// UnsetHostOsType ensures that no value is present for HostOsType, not even an explicit nil
func (o *AgentDeploymentStatusResponse) UnsetHostOsType() {
	o.HostOsType.Unset()
}

// GetLastUpgradeStatus returns the LastUpgradeStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentDeploymentStatusResponse) GetLastUpgradeStatus() string {
	if o == nil || o.LastUpgradeStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.LastUpgradeStatus.Get()
}

// GetLastUpgradeStatusOk returns a tuple with the LastUpgradeStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentDeploymentStatusResponse) GetLastUpgradeStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastUpgradeStatus.Get(), o.LastUpgradeStatus.IsSet()
}

// HasLastUpgradeStatus returns a boolean if a field has been set.
func (o *AgentDeploymentStatusResponse) HasLastUpgradeStatus() bool {
	if o != nil && o.LastUpgradeStatus.IsSet() {
		return true
	}

	return false
}

// SetLastUpgradeStatus gets a reference to the given NullableString and assigns it to the LastUpgradeStatus field.
func (o *AgentDeploymentStatusResponse) SetLastUpgradeStatus(v string) {
	o.LastUpgradeStatus.Set(&v)
}
// SetLastUpgradeStatusNil sets the value for LastUpgradeStatus to be an explicit nil
func (o *AgentDeploymentStatusResponse) SetLastUpgradeStatusNil() {
	o.LastUpgradeStatus.Set(nil)
}

// UnsetLastUpgradeStatus ensures that no value is present for LastUpgradeStatus, not even an explicit nil
func (o *AgentDeploymentStatusResponse) UnsetLastUpgradeStatus() {
	o.LastUpgradeStatus.Unset()
}

// GetUpgradability returns the Upgradability field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentDeploymentStatusResponse) GetUpgradability() string {
	if o == nil || o.Upgradability.Get() == nil {
		var ret string
		return ret
	}
	return *o.Upgradability.Get()
}

// GetUpgradabilityOk returns a tuple with the Upgradability field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentDeploymentStatusResponse) GetUpgradabilityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Upgradability.Get(), o.Upgradability.IsSet()
}

// HasUpgradability returns a boolean if a field has been set.
func (o *AgentDeploymentStatusResponse) HasUpgradability() bool {
	if o != nil && o.Upgradability.IsSet() {
		return true
	}

	return false
}

// SetUpgradability gets a reference to the given NullableString and assigns it to the Upgradability field.
func (o *AgentDeploymentStatusResponse) SetUpgradability(v string) {
	o.Upgradability.Set(&v)
}
// SetUpgradabilityNil sets the value for Upgradability to be an explicit nil
func (o *AgentDeploymentStatusResponse) SetUpgradabilityNil() {
	o.Upgradability.Set(nil)
}

// UnsetUpgradability ensures that no value is present for Upgradability, not even an explicit nil
func (o *AgentDeploymentStatusResponse) UnsetUpgradability() {
	o.Upgradability.Unset()
}

// GetUpgradeStatusMessage returns the UpgradeStatusMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentDeploymentStatusResponse) GetUpgradeStatusMessage() string {
	if o == nil || o.UpgradeStatusMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.UpgradeStatusMessage.Get()
}

// GetUpgradeStatusMessageOk returns a tuple with the UpgradeStatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentDeploymentStatusResponse) GetUpgradeStatusMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpgradeStatusMessage.Get(), o.UpgradeStatusMessage.IsSet()
}

// HasUpgradeStatusMessage returns a boolean if a field has been set.
func (o *AgentDeploymentStatusResponse) HasUpgradeStatusMessage() bool {
	if o != nil && o.UpgradeStatusMessage.IsSet() {
		return true
	}

	return false
}

// SetUpgradeStatusMessage gets a reference to the given NullableString and assigns it to the UpgradeStatusMessage field.
func (o *AgentDeploymentStatusResponse) SetUpgradeStatusMessage(v string) {
	o.UpgradeStatusMessage.Set(&v)
}
// SetUpgradeStatusMessageNil sets the value for UpgradeStatusMessage to be an explicit nil
func (o *AgentDeploymentStatusResponse) SetUpgradeStatusMessageNil() {
	o.UpgradeStatusMessage.Set(nil)
}

// UnsetUpgradeStatusMessage ensures that no value is present for UpgradeStatusMessage, not even an explicit nil
func (o *AgentDeploymentStatusResponse) UnsetUpgradeStatusMessage() {
	o.UpgradeStatusMessage.Unset()
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentDeploymentStatusResponse) GetVersion() string {
	if o == nil || o.Version.Get() == nil {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentDeploymentStatusResponse) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *AgentDeploymentStatusResponse) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *AgentDeploymentStatusResponse) SetVersion(v string) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *AgentDeploymentStatusResponse) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *AgentDeploymentStatusResponse) UnsetVersion() {
	o.Version.Unset()
}

func (o AgentDeploymentStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CompactVersion.IsSet() {
		toSerialize["compactVersion"] = o.CompactVersion.Get()
	}
	if o.HealthStatus.IsSet() {
		toSerialize["healthStatus"] = o.HealthStatus.Get()
	}
	if o.HostIp.IsSet() {
		toSerialize["hostIp"] = o.HostIp.Get()
	}
	if o.HostOsType.IsSet() {
		toSerialize["hostOsType"] = o.HostOsType.Get()
	}
	if o.LastUpgradeStatus.IsSet() {
		toSerialize["lastUpgradeStatus"] = o.LastUpgradeStatus.Get()
	}
	if o.Upgradability.IsSet() {
		toSerialize["upgradability"] = o.Upgradability.Get()
	}
	if o.UpgradeStatusMessage.IsSet() {
		toSerialize["upgradeStatusMessage"] = o.UpgradeStatusMessage.Get()
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAgentDeploymentStatusResponse struct {
	value *AgentDeploymentStatusResponse
	isSet bool
}

func (v NullableAgentDeploymentStatusResponse) Get() *AgentDeploymentStatusResponse {
	return v.value
}

func (v *NullableAgentDeploymentStatusResponse) Set(val *AgentDeploymentStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentDeploymentStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentDeploymentStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentDeploymentStatusResponse(val *AgentDeploymentStatusResponse) *NullableAgentDeploymentStatusResponse {
	return &NullableAgentDeploymentStatusResponse{value: val, isSet: true}
}

func (v NullableAgentDeploymentStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentDeploymentStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


