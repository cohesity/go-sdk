/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ClusterAuditLog Specifies information about a single Cluster audit log. When an action (such as pausing a Protection Job) occurs, an audit log is generated that provides details about the action.
type ClusterAuditLog struct {
	// Specifies the action that caused the log to be generated.
	Action NullableString `json:"action,omitempty"`
	// Specifies the information of the cluster.
	ClusterInfo NullableString `json:"clusterInfo,omitempty"`
	// Specifies more information about the action.
	Details NullableString `json:"details,omitempty"`
	// Specifies the domain of the user who caused the action that generated the log.
	Domain NullableString `json:"domain,omitempty"`
	// Specifies the id of the entity (object) that the action is invoked on.
	EntityId NullableString `json:"entityId,omitempty"`
	// Specifies the entity (object) name that the action is invoked on. For example, if a Job called BackupEng is paused, this field returns BackupEng.
	EntityName NullableString `json:"entityName,omitempty"`
	// Specifies the type of the entity (object) that the action is invoked on. For example, if a Job called BackupEng is paused, this field returns 'Protection Job'.
	EntityType NullableString `json:"entityType,omitempty"`
	// Specifies the time when the log was generated. The time is specified using a human readable timestamp.
	HumanTimestamp NullableString `json:"humanTimestamp,omitempty"`
	// Specifies if the log was generated during impersonation.
	Impersonation NullableBool `json:"impersonation,omitempty"`
	// Specifies the IP address of the user making this action.
	Ip NullableString `json:"ip,omitempty"`
	// Specifies the record after the action is invoked.
	NewRecord NullableString `json:"newRecord,omitempty"`
	OriginalTenant *Tenant `json:"originalTenant,omitempty"`
	// Specifies the record before the action is invoked.
	PreviousRecord NullableString `json:"previousRecord,omitempty"`
	Tenant *Tenant `json:"tenant,omitempty"`
	// Specifies the time when the log was generated. The time is specified using a Unix epoch Timestamp (in microseconds).
	TimestampUsecs NullableInt64 `json:"timestampUsecs,omitempty"`
	// Specifies the user who caused the action that generated the log.
	UserName NullableString `json:"userName,omitempty"`
}

// NewClusterAuditLog instantiates a new ClusterAuditLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterAuditLog() *ClusterAuditLog {
	this := ClusterAuditLog{}
	return &this
}

// NewClusterAuditLogWithDefaults instantiates a new ClusterAuditLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterAuditLogWithDefaults() *ClusterAuditLog {
	this := ClusterAuditLog{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAuditLog) GetAction() string {
	if o == nil || o.Action.Get() == nil {
		var ret string
		return ret
	}
	return *o.Action.Get()
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAuditLog) GetActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Action.Get(), o.Action.IsSet()
}

// HasAction returns a boolean if a field has been set.
func (o *ClusterAuditLog) HasAction() bool {
	if o != nil && o.Action.IsSet() {
		return true
	}

	return false
}

// SetAction gets a reference to the given NullableString and assigns it to the Action field.
func (o *ClusterAuditLog) SetAction(v string) {
	o.Action.Set(&v)
}
// SetActionNil sets the value for Action to be an explicit nil
func (o *ClusterAuditLog) SetActionNil() {
	o.Action.Set(nil)
}

// UnsetAction ensures that no value is present for Action, not even an explicit nil
func (o *ClusterAuditLog) UnsetAction() {
	o.Action.Unset()
}

// GetClusterInfo returns the ClusterInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAuditLog) GetClusterInfo() string {
	if o == nil || o.ClusterInfo.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClusterInfo.Get()
}

// GetClusterInfoOk returns a tuple with the ClusterInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAuditLog) GetClusterInfoOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterInfo.Get(), o.ClusterInfo.IsSet()
}

// HasClusterInfo returns a boolean if a field has been set.
func (o *ClusterAuditLog) HasClusterInfo() bool {
	if o != nil && o.ClusterInfo.IsSet() {
		return true
	}

	return false
}

// SetClusterInfo gets a reference to the given NullableString and assigns it to the ClusterInfo field.
func (o *ClusterAuditLog) SetClusterInfo(v string) {
	o.ClusterInfo.Set(&v)
}
// SetClusterInfoNil sets the value for ClusterInfo to be an explicit nil
func (o *ClusterAuditLog) SetClusterInfoNil() {
	o.ClusterInfo.Set(nil)
}

// UnsetClusterInfo ensures that no value is present for ClusterInfo, not even an explicit nil
func (o *ClusterAuditLog) UnsetClusterInfo() {
	o.ClusterInfo.Unset()
}

// GetDetails returns the Details field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAuditLog) GetDetails() string {
	if o == nil || o.Details.Get() == nil {
		var ret string
		return ret
	}
	return *o.Details.Get()
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAuditLog) GetDetailsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Details.Get(), o.Details.IsSet()
}

// HasDetails returns a boolean if a field has been set.
func (o *ClusterAuditLog) HasDetails() bool {
	if o != nil && o.Details.IsSet() {
		return true
	}

	return false
}

// SetDetails gets a reference to the given NullableString and assigns it to the Details field.
func (o *ClusterAuditLog) SetDetails(v string) {
	o.Details.Set(&v)
}
// SetDetailsNil sets the value for Details to be an explicit nil
func (o *ClusterAuditLog) SetDetailsNil() {
	o.Details.Set(nil)
}

// UnsetDetails ensures that no value is present for Details, not even an explicit nil
func (o *ClusterAuditLog) UnsetDetails() {
	o.Details.Unset()
}

// GetDomain returns the Domain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAuditLog) GetDomain() string {
	if o == nil || o.Domain.Get() == nil {
		var ret string
		return ret
	}
	return *o.Domain.Get()
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAuditLog) GetDomainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Domain.Get(), o.Domain.IsSet()
}

// HasDomain returns a boolean if a field has been set.
func (o *ClusterAuditLog) HasDomain() bool {
	if o != nil && o.Domain.IsSet() {
		return true
	}

	return false
}

// SetDomain gets a reference to the given NullableString and assigns it to the Domain field.
func (o *ClusterAuditLog) SetDomain(v string) {
	o.Domain.Set(&v)
}
// SetDomainNil sets the value for Domain to be an explicit nil
func (o *ClusterAuditLog) SetDomainNil() {
	o.Domain.Set(nil)
}

// UnsetDomain ensures that no value is present for Domain, not even an explicit nil
func (o *ClusterAuditLog) UnsetDomain() {
	o.Domain.Unset()
}

// GetEntityId returns the EntityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAuditLog) GetEntityId() string {
	if o == nil || o.EntityId.Get() == nil {
		var ret string
		return ret
	}
	return *o.EntityId.Get()
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAuditLog) GetEntityIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EntityId.Get(), o.EntityId.IsSet()
}

// HasEntityId returns a boolean if a field has been set.
func (o *ClusterAuditLog) HasEntityId() bool {
	if o != nil && o.EntityId.IsSet() {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given NullableString and assigns it to the EntityId field.
func (o *ClusterAuditLog) SetEntityId(v string) {
	o.EntityId.Set(&v)
}
// SetEntityIdNil sets the value for EntityId to be an explicit nil
func (o *ClusterAuditLog) SetEntityIdNil() {
	o.EntityId.Set(nil)
}

// UnsetEntityId ensures that no value is present for EntityId, not even an explicit nil
func (o *ClusterAuditLog) UnsetEntityId() {
	o.EntityId.Unset()
}

// GetEntityName returns the EntityName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAuditLog) GetEntityName() string {
	if o == nil || o.EntityName.Get() == nil {
		var ret string
		return ret
	}
	return *o.EntityName.Get()
}

// GetEntityNameOk returns a tuple with the EntityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAuditLog) GetEntityNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EntityName.Get(), o.EntityName.IsSet()
}

// HasEntityName returns a boolean if a field has been set.
func (o *ClusterAuditLog) HasEntityName() bool {
	if o != nil && o.EntityName.IsSet() {
		return true
	}

	return false
}

// SetEntityName gets a reference to the given NullableString and assigns it to the EntityName field.
func (o *ClusterAuditLog) SetEntityName(v string) {
	o.EntityName.Set(&v)
}
// SetEntityNameNil sets the value for EntityName to be an explicit nil
func (o *ClusterAuditLog) SetEntityNameNil() {
	o.EntityName.Set(nil)
}

// UnsetEntityName ensures that no value is present for EntityName, not even an explicit nil
func (o *ClusterAuditLog) UnsetEntityName() {
	o.EntityName.Unset()
}

// GetEntityType returns the EntityType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAuditLog) GetEntityType() string {
	if o == nil || o.EntityType.Get() == nil {
		var ret string
		return ret
	}
	return *o.EntityType.Get()
}

// GetEntityTypeOk returns a tuple with the EntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAuditLog) GetEntityTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EntityType.Get(), o.EntityType.IsSet()
}

// HasEntityType returns a boolean if a field has been set.
func (o *ClusterAuditLog) HasEntityType() bool {
	if o != nil && o.EntityType.IsSet() {
		return true
	}

	return false
}

// SetEntityType gets a reference to the given NullableString and assigns it to the EntityType field.
func (o *ClusterAuditLog) SetEntityType(v string) {
	o.EntityType.Set(&v)
}
// SetEntityTypeNil sets the value for EntityType to be an explicit nil
func (o *ClusterAuditLog) SetEntityTypeNil() {
	o.EntityType.Set(nil)
}

// UnsetEntityType ensures that no value is present for EntityType, not even an explicit nil
func (o *ClusterAuditLog) UnsetEntityType() {
	o.EntityType.Unset()
}

// GetHumanTimestamp returns the HumanTimestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAuditLog) GetHumanTimestamp() string {
	if o == nil || o.HumanTimestamp.Get() == nil {
		var ret string
		return ret
	}
	return *o.HumanTimestamp.Get()
}

// GetHumanTimestampOk returns a tuple with the HumanTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAuditLog) GetHumanTimestampOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HumanTimestamp.Get(), o.HumanTimestamp.IsSet()
}

// HasHumanTimestamp returns a boolean if a field has been set.
func (o *ClusterAuditLog) HasHumanTimestamp() bool {
	if o != nil && o.HumanTimestamp.IsSet() {
		return true
	}

	return false
}

// SetHumanTimestamp gets a reference to the given NullableString and assigns it to the HumanTimestamp field.
func (o *ClusterAuditLog) SetHumanTimestamp(v string) {
	o.HumanTimestamp.Set(&v)
}
// SetHumanTimestampNil sets the value for HumanTimestamp to be an explicit nil
func (o *ClusterAuditLog) SetHumanTimestampNil() {
	o.HumanTimestamp.Set(nil)
}

// UnsetHumanTimestamp ensures that no value is present for HumanTimestamp, not even an explicit nil
func (o *ClusterAuditLog) UnsetHumanTimestamp() {
	o.HumanTimestamp.Unset()
}

// GetImpersonation returns the Impersonation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAuditLog) GetImpersonation() bool {
	if o == nil || o.Impersonation.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Impersonation.Get()
}

// GetImpersonationOk returns a tuple with the Impersonation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAuditLog) GetImpersonationOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Impersonation.Get(), o.Impersonation.IsSet()
}

// HasImpersonation returns a boolean if a field has been set.
func (o *ClusterAuditLog) HasImpersonation() bool {
	if o != nil && o.Impersonation.IsSet() {
		return true
	}

	return false
}

// SetImpersonation gets a reference to the given NullableBool and assigns it to the Impersonation field.
func (o *ClusterAuditLog) SetImpersonation(v bool) {
	o.Impersonation.Set(&v)
}
// SetImpersonationNil sets the value for Impersonation to be an explicit nil
func (o *ClusterAuditLog) SetImpersonationNil() {
	o.Impersonation.Set(nil)
}

// UnsetImpersonation ensures that no value is present for Impersonation, not even an explicit nil
func (o *ClusterAuditLog) UnsetImpersonation() {
	o.Impersonation.Unset()
}

// GetIp returns the Ip field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAuditLog) GetIp() string {
	if o == nil || o.Ip.Get() == nil {
		var ret string
		return ret
	}
	return *o.Ip.Get()
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAuditLog) GetIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Ip.Get(), o.Ip.IsSet()
}

// HasIp returns a boolean if a field has been set.
func (o *ClusterAuditLog) HasIp() bool {
	if o != nil && o.Ip.IsSet() {
		return true
	}

	return false
}

// SetIp gets a reference to the given NullableString and assigns it to the Ip field.
func (o *ClusterAuditLog) SetIp(v string) {
	o.Ip.Set(&v)
}
// SetIpNil sets the value for Ip to be an explicit nil
func (o *ClusterAuditLog) SetIpNil() {
	o.Ip.Set(nil)
}

// UnsetIp ensures that no value is present for Ip, not even an explicit nil
func (o *ClusterAuditLog) UnsetIp() {
	o.Ip.Unset()
}

// GetNewRecord returns the NewRecord field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAuditLog) GetNewRecord() string {
	if o == nil || o.NewRecord.Get() == nil {
		var ret string
		return ret
	}
	return *o.NewRecord.Get()
}

// GetNewRecordOk returns a tuple with the NewRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAuditLog) GetNewRecordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NewRecord.Get(), o.NewRecord.IsSet()
}

// HasNewRecord returns a boolean if a field has been set.
func (o *ClusterAuditLog) HasNewRecord() bool {
	if o != nil && o.NewRecord.IsSet() {
		return true
	}

	return false
}

// SetNewRecord gets a reference to the given NullableString and assigns it to the NewRecord field.
func (o *ClusterAuditLog) SetNewRecord(v string) {
	o.NewRecord.Set(&v)
}
// SetNewRecordNil sets the value for NewRecord to be an explicit nil
func (o *ClusterAuditLog) SetNewRecordNil() {
	o.NewRecord.Set(nil)
}

// UnsetNewRecord ensures that no value is present for NewRecord, not even an explicit nil
func (o *ClusterAuditLog) UnsetNewRecord() {
	o.NewRecord.Unset()
}

// GetOriginalTenant returns the OriginalTenant field value if set, zero value otherwise.
func (o *ClusterAuditLog) GetOriginalTenant() Tenant {
	if o == nil || o.OriginalTenant == nil {
		var ret Tenant
		return ret
	}
	return *o.OriginalTenant
}

// GetOriginalTenantOk returns a tuple with the OriginalTenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAuditLog) GetOriginalTenantOk() (*Tenant, bool) {
	if o == nil || o.OriginalTenant == nil {
		return nil, false
	}
	return o.OriginalTenant, true
}

// HasOriginalTenant returns a boolean if a field has been set.
func (o *ClusterAuditLog) HasOriginalTenant() bool {
	if o != nil && o.OriginalTenant != nil {
		return true
	}

	return false
}

// SetOriginalTenant gets a reference to the given Tenant and assigns it to the OriginalTenant field.
func (o *ClusterAuditLog) SetOriginalTenant(v Tenant) {
	o.OriginalTenant = &v
}

// GetPreviousRecord returns the PreviousRecord field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAuditLog) GetPreviousRecord() string {
	if o == nil || o.PreviousRecord.Get() == nil {
		var ret string
		return ret
	}
	return *o.PreviousRecord.Get()
}

// GetPreviousRecordOk returns a tuple with the PreviousRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAuditLog) GetPreviousRecordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PreviousRecord.Get(), o.PreviousRecord.IsSet()
}

// HasPreviousRecord returns a boolean if a field has been set.
func (o *ClusterAuditLog) HasPreviousRecord() bool {
	if o != nil && o.PreviousRecord.IsSet() {
		return true
	}

	return false
}

// SetPreviousRecord gets a reference to the given NullableString and assigns it to the PreviousRecord field.
func (o *ClusterAuditLog) SetPreviousRecord(v string) {
	o.PreviousRecord.Set(&v)
}
// SetPreviousRecordNil sets the value for PreviousRecord to be an explicit nil
func (o *ClusterAuditLog) SetPreviousRecordNil() {
	o.PreviousRecord.Set(nil)
}

// UnsetPreviousRecord ensures that no value is present for PreviousRecord, not even an explicit nil
func (o *ClusterAuditLog) UnsetPreviousRecord() {
	o.PreviousRecord.Unset()
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *ClusterAuditLog) GetTenant() Tenant {
	if o == nil || o.Tenant == nil {
		var ret Tenant
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAuditLog) GetTenantOk() (*Tenant, bool) {
	if o == nil || o.Tenant == nil {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *ClusterAuditLog) HasTenant() bool {
	if o != nil && o.Tenant != nil {
		return true
	}

	return false
}

// SetTenant gets a reference to the given Tenant and assigns it to the Tenant field.
func (o *ClusterAuditLog) SetTenant(v Tenant) {
	o.Tenant = &v
}

// GetTimestampUsecs returns the TimestampUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAuditLog) GetTimestampUsecs() int64 {
	if o == nil || o.TimestampUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TimestampUsecs.Get()
}

// GetTimestampUsecsOk returns a tuple with the TimestampUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAuditLog) GetTimestampUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TimestampUsecs.Get(), o.TimestampUsecs.IsSet()
}

// HasTimestampUsecs returns a boolean if a field has been set.
func (o *ClusterAuditLog) HasTimestampUsecs() bool {
	if o != nil && o.TimestampUsecs.IsSet() {
		return true
	}

	return false
}

// SetTimestampUsecs gets a reference to the given NullableInt64 and assigns it to the TimestampUsecs field.
func (o *ClusterAuditLog) SetTimestampUsecs(v int64) {
	o.TimestampUsecs.Set(&v)
}
// SetTimestampUsecsNil sets the value for TimestampUsecs to be an explicit nil
func (o *ClusterAuditLog) SetTimestampUsecsNil() {
	o.TimestampUsecs.Set(nil)
}

// UnsetTimestampUsecs ensures that no value is present for TimestampUsecs, not even an explicit nil
func (o *ClusterAuditLog) UnsetTimestampUsecs() {
	o.TimestampUsecs.Unset()
}

// GetUserName returns the UserName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterAuditLog) GetUserName() string {
	if o == nil || o.UserName.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserName.Get()
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterAuditLog) GetUserNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserName.Get(), o.UserName.IsSet()
}

// HasUserName returns a boolean if a field has been set.
func (o *ClusterAuditLog) HasUserName() bool {
	if o != nil && o.UserName.IsSet() {
		return true
	}

	return false
}

// SetUserName gets a reference to the given NullableString and assigns it to the UserName field.
func (o *ClusterAuditLog) SetUserName(v string) {
	o.UserName.Set(&v)
}
// SetUserNameNil sets the value for UserName to be an explicit nil
func (o *ClusterAuditLog) SetUserNameNil() {
	o.UserName.Set(nil)
}

// UnsetUserName ensures that no value is present for UserName, not even an explicit nil
func (o *ClusterAuditLog) UnsetUserName() {
	o.UserName.Unset()
}

func (o ClusterAuditLog) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action.IsSet() {
		toSerialize["action"] = o.Action.Get()
	}
	if o.ClusterInfo.IsSet() {
		toSerialize["clusterInfo"] = o.ClusterInfo.Get()
	}
	if o.Details.IsSet() {
		toSerialize["details"] = o.Details.Get()
	}
	if o.Domain.IsSet() {
		toSerialize["domain"] = o.Domain.Get()
	}
	if o.EntityId.IsSet() {
		toSerialize["entityId"] = o.EntityId.Get()
	}
	if o.EntityName.IsSet() {
		toSerialize["entityName"] = o.EntityName.Get()
	}
	if o.EntityType.IsSet() {
		toSerialize["entityType"] = o.EntityType.Get()
	}
	if o.HumanTimestamp.IsSet() {
		toSerialize["humanTimestamp"] = o.HumanTimestamp.Get()
	}
	if o.Impersonation.IsSet() {
		toSerialize["impersonation"] = o.Impersonation.Get()
	}
	if o.Ip.IsSet() {
		toSerialize["ip"] = o.Ip.Get()
	}
	if o.NewRecord.IsSet() {
		toSerialize["newRecord"] = o.NewRecord.Get()
	}
	if o.OriginalTenant != nil {
		toSerialize["originalTenant"] = o.OriginalTenant
	}
	if o.PreviousRecord.IsSet() {
		toSerialize["previousRecord"] = o.PreviousRecord.Get()
	}
	if o.Tenant != nil {
		toSerialize["tenant"] = o.Tenant
	}
	if o.TimestampUsecs.IsSet() {
		toSerialize["timestampUsecs"] = o.TimestampUsecs.Get()
	}
	if o.UserName.IsSet() {
		toSerialize["userName"] = o.UserName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableClusterAuditLog struct {
	value *ClusterAuditLog
	isSet bool
}

func (v NullableClusterAuditLog) Get() *ClusterAuditLog {
	return v.value
}

func (v *NullableClusterAuditLog) Set(val *ClusterAuditLog) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterAuditLog) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterAuditLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterAuditLog(val *ClusterAuditLog) *NullableClusterAuditLog {
	return &NullableClusterAuditLog{value: val, isSet: true}
}

func (v NullableClusterAuditLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterAuditLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


