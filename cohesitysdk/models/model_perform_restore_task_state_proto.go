/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// PerformRestoreTaskStateProto struct for PerformRestoreTaskStateProto
type PerformRestoreTaskStateProto struct {
	// Denotes the target for action executor(Bridge / BridgeProxy) on which task on slave should execute actions.
	ActionExecutorTargetType NullableInt32 `json:"actionExecutorTargetType,omitempty"`
	Base *RestoreTaskStateBaseProto `json:"base,omitempty"`
	// This is set if the clone operation has created any objects on the primary environment and teardown operation is possible. UI will disable the teardown button only if this is not set or set to false. NOTE: This won't be reset if the teardown operation subsequently completes as teardown state is managed separately.
	CanTeardown NullableBool `json:"canTeardown,omitempty"`
	// The path of the progress monitor for the task that is responsible for creating the CDP hydrated view.
	CdpRestoreProgressMonitorTaskPath NullableString `json:"cdpRestoreProgressMonitorTaskPath,omitempty"`
	CdpRestoreTask *PerformRestoreTaskStateProto `json:"cdpRestoreTask,omitempty"`
	// The id of the task that will create the CDP hydrated view.
	CdpRestoreTaskId NullableInt64 `json:"cdpRestoreTaskId,omitempty"`
	// The temporary view where the hydrated disks of the CDP restores are kept.
	CdpRestoreViewName NullableString `json:"cdpRestoreViewName,omitempty"`
	// The id of the child clone task triggered by refresh op.
	ChildCloneTaskId NullableInt64 `json:"childCloneTaskId,omitempty"`
	// The following fields are used by clone refresh op. These will be present only in case of refresh task op.  The id of the child destroy clone task triggered by refresh op.
	ChildDestroyTaskId NullableInt64 `json:"childDestroyTaskId,omitempty"`
	CloneAppViewInfo *CloneAppViewInfoProto `json:"cloneAppViewInfo,omitempty"`
	CloudDeployInfo *CloudDeployInfoProto `json:"cloudDeployInfo,omitempty"`
	// Whether to continue with the restore operation if restore of any object fails.
	ContinueRestoreOnError NullableBool `json:"continueRestoreOnError,omitempty"`
	// True iff the target view needs to be created.
	CreateView NullableBool `json:"createView,omitempty"`
	// Please refer to comments for the field CreateRestoreTaskArg.datastore_entity_vec for more details.
	DatastoreEntityVec []EntityProto `json:"datastoreEntityVec,omitempty"`
	DeployVmsToCloudTaskState *DeployVMsToCloudTaskStateProto `json:"deployVmsToCloudTaskState,omitempty"`
	FolderEntity *EntityProto `json:"folderEntity,omitempty"`
	// The full view name (internal or external). This is composed of an optional Cohesity specific prefix and the user provided view name.
	FullViewName NullableString `json:"fullViewName,omitempty"`
	// This is set to true if the vm-config.xml need to be copied in the target view/folder.
	IncludeVmConfig NullableBool `json:"includeVmConfig,omitempty"`
	MountVolumesTaskState *MountVolumesTaskStateProto `json:"mountVolumesTaskState,omitempty"`
	NosqlConnectParams *NoSqlConnectParams `json:"nosqlConnectParams,omitempty"`
	NosqlRecoverJobParams *NoSqlRecoverJobParams `json:"nosqlRecoverJobParams,omitempty"`
	// An optional name to give to the restored object.
	ObjectNameDEPRECATED NullableString `json:"objectName_DEPRECATED,omitempty"`
	// Information on the exact set of objects being restored (along with snapshots they are being recovered from). Even if the user wanted to restore an entire job from the latest snapshot, this will have individual objects and the exact snapshot they are being restored from. If specified, this can only have leaf-level entities.
	Objects []RestoreObject `json:"objects,omitempty"`
	// Vector containing the relative task path of progress monitors of the objects in the above field 'objects' to be restored. There is one to one correspondence between elements in 'objects' and 'objects_progress_monitor_task_paths'.  Please note that this field will be set only after progress monitor is created for this restore task.
	ObjectsProgressMonitorTaskPaths []string `json:"objectsProgressMonitorTaskPaths,omitempty"`
	// If this a child restore task, this field will contain the id of the parent restore job that spawned this task.  List of env and action type for which this field is applicable are: Acropolis: kRecoverVMs.
	ParentRestoreJobId NullableInt64 `json:"parentRestoreJobId,omitempty"`
	// The id of the parent restore task if this is a restore sub-task.  List of environments that use this field: kSQL : Used for multi-stage SQL restore that supports a hot-standy.  This will also be used by refresh op to mark the new clone as internal sub-task.
	ParentRestoreTaskId NullableInt64 `json:"parentRestoreTaskId,omitempty"`
	PathPrefixDEPRECATED NullableString `json:"pathPrefix_DEPRECATED,omitempty"`
	// If enabled, magneto physical file restore will be enabled via job framework
	PhysicalFlrParallelRestore NullableBool `json:"physicalFlrParallelRestore,omitempty"`
	// If enabled, magneto physical file restore will be enabled via job framework
	PhysicalFlrUseNewLockingMethod NullableBool `json:"physicalFlrUseNewLockingMethod,omitempty"`
	PowerStateConfig *PowerStateConfigProto `json:"powerStateConfig,omitempty"`
	// This field is currently used by HyperV and VMWare.
	PreserveTags NullableBool `json:"preserveTags,omitempty"`
	// Root path of a Pulse task tracking the progress of the restore task.
	ProgressMonitorTaskPath NullableString `json:"progressMonitorTaskPath,omitempty"`
	RecoverDisksTaskState *RecoverDisksTaskStateProto `json:"recoverDisksTaskState,omitempty"`
	RecoverVolumesTaskState *RecoverVolumesTaskStateProto `json:"recoverVolumesTaskState,omitempty"`
	// The task id of a related restore task. For example, a SQL restore operation may involve restoring a VM first and then restoring SQL databases after that. So the corresponding VM restore and SQL database restore tasks will be related, and they will each have their 'related_restore_task_id' set to the id of the other task.
	RelatedRestoreTaskId NullableInt64 `json:"relatedRestoreTaskId,omitempty"`
	RenameRestoredObjectParam *RenameObjectParamProto `json:"renameRestoredObjectParam,omitempty"`
	RenameRestoredVappParam *RenameObjectParamProto `json:"renameRestoredVappParam,omitempty"`
	ResourcePoolEntity *EntityProto `json:"resourcePoolEntity,omitempty"`
	RestoreAcropolisVmsParams *RestoreAcropolisVMsParams `json:"restoreAcropolisVmsParams,omitempty"`
	RestoreAppTaskState *RestoreAppTaskStateProto `json:"restoreAppTaskState,omitempty"`
	RestoreFilesTaskState *RestoreFilesTaskStateProto `json:"restoreFilesTaskState,omitempty"`
	RestoreHypervVmParams *RestoreHyperVVMParams `json:"restoreHypervVmParams,omitempty"`
	RestoreInfo *RestoreInfoProto `json:"restoreInfo,omitempty"`
	RestoreKubernetesNamespacesParams *RestoreKubernetesNamespacesParams `json:"restoreKubernetesNamespacesParams,omitempty"`
	RestoreKvmVmsParams *RestoreKVMVMsParams `json:"restoreKvmVmsParams,omitempty"`
	RestoreOneDriveParams *RestoreOneDriveParams `json:"restoreOneDriveParams,omitempty"`
	RestoreOutlookParams *RestoreOutlookParams `json:"restoreOutlookParams,omitempty"`
	RestoreParentSource *EntityProto `json:"restoreParentSource,omitempty"`
	RestorePublicFoldersParams *RestoreO365PublicFoldersParams `json:"restorePublicFoldersParams,omitempty"`
	RestoreSiteParams *RestoreSiteParams `json:"restoreSiteParams,omitempty"`
	// Inside Magneto, these are represented as regular restore tasks with their own PerformRestoreTaskStateProto. Each restore sub-task will have its parent_restore_task_id field set.  List of environments that use this field: kSQL : Used for multi-stage SQL restore that supports a hot-standy.
	RestoreSubTaskVec []int64 `json:"restoreSubTaskVec,omitempty"`
	// Whether the restore task is purged. During WAL recovery, purged restore tasks are ignored.
	RestoreTaskPurged NullableBool `json:"restoreTaskPurged,omitempty"`
	RestoreViewDatastoreEntity *EntityProto `json:"restoreViewDatastoreEntity,omitempty"`
	RestoreVmwareVmParams *RestoreVMwareVMParams `json:"restoreVmwareVmParams,omitempty"`
	RestoredObjectsNetworkConfig *RestoredObjectNetworkConfigProto `json:"restoredObjectsNetworkConfig,omitempty"`
	// Whether restore is being performed to a different parent source.
	RestoredToDifferentSource NullableBool `json:"restoredToDifferentSource,omitempty"`
	// The path of the progress monitor for the task that is responsible for retrieving the objects from the archive.
	RetrieveArchiveProgressMonitorTaskPath NullableString `json:"retrieveArchiveProgressMonitorTaskPath,omitempty"`
	// The stub view created by Icebox corresponding to the archive. The stub view is used to selectively retrieve files and folders.
	RetrieveArchiveStubViewName NullableString `json:"retrieveArchiveStubViewName,omitempty"`
	// The uid of the tasks that will retrieve the objects from the archive. Typically we only retrieve one snapshot for an enity but for point in time restores for SQL/Oracle database, we may need to retrieve multiple snapshots typically one full, and few logs. Hence we may need multiple uids to start retrieval task.
	RetrieveArchiveTaskUidVec []UniversalIdProto `json:"retrieveArchiveTaskUidVec,omitempty"`
	// Proto that contains all the information about the retrieve archive task. Typically we only retrieve one snapshot for an enity but for point in time restores for SQL/Oracle database, we may need to retrieve multiple snapshots typically one full, and few logs. As we may start the multiple retrieval tasks, we need vector of RetrieveArchiveTaskStateProto for storing information of retrieved archive tasks.
	RetrieveArchiveTaskVec []RetrieveArchiveTaskStateProto `json:"retrieveArchiveTaskVec,omitempty"`
	// The temporary view where the entities that have been retrieved from an archive have been placed in by Icebox.
	RetrieveArchiveViewName NullableString `json:"retrieveArchiveViewName,omitempty"`
	// In case of restore job with multi-vm multi-datastore this field denotes the specific datastore index in datastore_entity_vec to be selected for the task. Not going for specific datastore allocation in datastore_entity_vec so that we have required information in case of extensibility for task level retries with different datastore
	SelectedDatastoreIdx NullableInt64 `json:"selectedDatastoreIdx,omitempty"`
	// Relative directory inside the stub view that corresponds with the archive.
	StubViewRelativeDirName NullableString `json:"stubViewRelativeDirName,omitempty"`
	VaultRestoreParams *VaultParamsRestoreParams `json:"vaultRestoreParams,omitempty"`
	VcdConfig *RestoredObjectVCDConfigProto `json:"vcdConfig,omitempty"`
	// This field is applicable for VCD type recovery. It defines the compatible datastores for recovery to alternate location. This field is inferred using the storage profile in restore_vmware_vm_params below.
	VcdStorageProfileDatastoreMorefVec []string `json:"vcdStorageProfileDatastoreMorefVec,omitempty"`
	// The view box id to which 'view_name' belongs to. In case the restore task corresponds to a backup job, this view box corresponds to the view box of the backup job.
	ViewBoxId NullableInt64 `json:"viewBoxId,omitempty"`
	// The view name as provided by the user for this restore operation.
	ViewNameDEPRECATED NullableString `json:"viewName_DEPRECATED,omitempty"`
	ViewParams *ViewParams `json:"viewParams,omitempty"`
	// Information regarding volumes that are required for the restore task. This is populated for restore files and mount virtual disk ops.
	VolumeInfoVec []VolumeInfo `json:"volumeInfoVec,omitempty"`
}

// NewPerformRestoreTaskStateProto instantiates a new PerformRestoreTaskStateProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPerformRestoreTaskStateProto() *PerformRestoreTaskStateProto {
	this := PerformRestoreTaskStateProto{}
	return &this
}

// NewPerformRestoreTaskStateProtoWithDefaults instantiates a new PerformRestoreTaskStateProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPerformRestoreTaskStateProtoWithDefaults() *PerformRestoreTaskStateProto {
	this := PerformRestoreTaskStateProto{}
	return &this
}

// GetActionExecutorTargetType returns the ActionExecutorTargetType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetActionExecutorTargetType() int32 {
	if o == nil || o.ActionExecutorTargetType.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ActionExecutorTargetType.Get()
}

// GetActionExecutorTargetTypeOk returns a tuple with the ActionExecutorTargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetActionExecutorTargetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ActionExecutorTargetType.Get(), o.ActionExecutorTargetType.IsSet()
}

// HasActionExecutorTargetType returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasActionExecutorTargetType() bool {
	if o != nil && o.ActionExecutorTargetType.IsSet() {
		return true
	}

	return false
}

// SetActionExecutorTargetType gets a reference to the given NullableInt32 and assigns it to the ActionExecutorTargetType field.
func (o *PerformRestoreTaskStateProto) SetActionExecutorTargetType(v int32) {
	o.ActionExecutorTargetType.Set(&v)
}
// SetActionExecutorTargetTypeNil sets the value for ActionExecutorTargetType to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetActionExecutorTargetTypeNil() {
	o.ActionExecutorTargetType.Set(nil)
}

// UnsetActionExecutorTargetType ensures that no value is present for ActionExecutorTargetType, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetActionExecutorTargetType() {
	o.ActionExecutorTargetType.Unset()
}

// GetBase returns the Base field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetBase() RestoreTaskStateBaseProto {
	if o == nil || o.Base == nil {
		var ret RestoreTaskStateBaseProto
		return ret
	}
	return *o.Base
}

// GetBaseOk returns a tuple with the Base field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetBaseOk() (*RestoreTaskStateBaseProto, bool) {
	if o == nil || o.Base == nil {
		return nil, false
	}
	return o.Base, true
}

// HasBase returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasBase() bool {
	if o != nil && o.Base != nil {
		return true
	}

	return false
}

// SetBase gets a reference to the given RestoreTaskStateBaseProto and assigns it to the Base field.
func (o *PerformRestoreTaskStateProto) SetBase(v RestoreTaskStateBaseProto) {
	o.Base = &v
}

// GetCanTeardown returns the CanTeardown field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetCanTeardown() bool {
	if o == nil || o.CanTeardown.Get() == nil {
		var ret bool
		return ret
	}
	return *o.CanTeardown.Get()
}

// GetCanTeardownOk returns a tuple with the CanTeardown field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetCanTeardownOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CanTeardown.Get(), o.CanTeardown.IsSet()
}

// HasCanTeardown returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasCanTeardown() bool {
	if o != nil && o.CanTeardown.IsSet() {
		return true
	}

	return false
}

// SetCanTeardown gets a reference to the given NullableBool and assigns it to the CanTeardown field.
func (o *PerformRestoreTaskStateProto) SetCanTeardown(v bool) {
	o.CanTeardown.Set(&v)
}
// SetCanTeardownNil sets the value for CanTeardown to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetCanTeardownNil() {
	o.CanTeardown.Set(nil)
}

// UnsetCanTeardown ensures that no value is present for CanTeardown, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetCanTeardown() {
	o.CanTeardown.Unset()
}

// GetCdpRestoreProgressMonitorTaskPath returns the CdpRestoreProgressMonitorTaskPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetCdpRestoreProgressMonitorTaskPath() string {
	if o == nil || o.CdpRestoreProgressMonitorTaskPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.CdpRestoreProgressMonitorTaskPath.Get()
}

// GetCdpRestoreProgressMonitorTaskPathOk returns a tuple with the CdpRestoreProgressMonitorTaskPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetCdpRestoreProgressMonitorTaskPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CdpRestoreProgressMonitorTaskPath.Get(), o.CdpRestoreProgressMonitorTaskPath.IsSet()
}

// HasCdpRestoreProgressMonitorTaskPath returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasCdpRestoreProgressMonitorTaskPath() bool {
	if o != nil && o.CdpRestoreProgressMonitorTaskPath.IsSet() {
		return true
	}

	return false
}

// SetCdpRestoreProgressMonitorTaskPath gets a reference to the given NullableString and assigns it to the CdpRestoreProgressMonitorTaskPath field.
func (o *PerformRestoreTaskStateProto) SetCdpRestoreProgressMonitorTaskPath(v string) {
	o.CdpRestoreProgressMonitorTaskPath.Set(&v)
}
// SetCdpRestoreProgressMonitorTaskPathNil sets the value for CdpRestoreProgressMonitorTaskPath to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetCdpRestoreProgressMonitorTaskPathNil() {
	o.CdpRestoreProgressMonitorTaskPath.Set(nil)
}

// UnsetCdpRestoreProgressMonitorTaskPath ensures that no value is present for CdpRestoreProgressMonitorTaskPath, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetCdpRestoreProgressMonitorTaskPath() {
	o.CdpRestoreProgressMonitorTaskPath.Unset()
}

// GetCdpRestoreTask returns the CdpRestoreTask field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetCdpRestoreTask() PerformRestoreTaskStateProto {
	if o == nil || o.CdpRestoreTask == nil {
		var ret PerformRestoreTaskStateProto
		return ret
	}
	return *o.CdpRestoreTask
}

// GetCdpRestoreTaskOk returns a tuple with the CdpRestoreTask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetCdpRestoreTaskOk() (*PerformRestoreTaskStateProto, bool) {
	if o == nil || o.CdpRestoreTask == nil {
		return nil, false
	}
	return o.CdpRestoreTask, true
}

// HasCdpRestoreTask returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasCdpRestoreTask() bool {
	if o != nil && o.CdpRestoreTask != nil {
		return true
	}

	return false
}

// SetCdpRestoreTask gets a reference to the given PerformRestoreTaskStateProto and assigns it to the CdpRestoreTask field.
func (o *PerformRestoreTaskStateProto) SetCdpRestoreTask(v PerformRestoreTaskStateProto) {
	o.CdpRestoreTask = &v
}

// GetCdpRestoreTaskId returns the CdpRestoreTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetCdpRestoreTaskId() int64 {
	if o == nil || o.CdpRestoreTaskId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.CdpRestoreTaskId.Get()
}

// GetCdpRestoreTaskIdOk returns a tuple with the CdpRestoreTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetCdpRestoreTaskIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CdpRestoreTaskId.Get(), o.CdpRestoreTaskId.IsSet()
}

// HasCdpRestoreTaskId returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasCdpRestoreTaskId() bool {
	if o != nil && o.CdpRestoreTaskId.IsSet() {
		return true
	}

	return false
}

// SetCdpRestoreTaskId gets a reference to the given NullableInt64 and assigns it to the CdpRestoreTaskId field.
func (o *PerformRestoreTaskStateProto) SetCdpRestoreTaskId(v int64) {
	o.CdpRestoreTaskId.Set(&v)
}
// SetCdpRestoreTaskIdNil sets the value for CdpRestoreTaskId to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetCdpRestoreTaskIdNil() {
	o.CdpRestoreTaskId.Set(nil)
}

// UnsetCdpRestoreTaskId ensures that no value is present for CdpRestoreTaskId, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetCdpRestoreTaskId() {
	o.CdpRestoreTaskId.Unset()
}

// GetCdpRestoreViewName returns the CdpRestoreViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetCdpRestoreViewName() string {
	if o == nil || o.CdpRestoreViewName.Get() == nil {
		var ret string
		return ret
	}
	return *o.CdpRestoreViewName.Get()
}

// GetCdpRestoreViewNameOk returns a tuple with the CdpRestoreViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetCdpRestoreViewNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CdpRestoreViewName.Get(), o.CdpRestoreViewName.IsSet()
}

// HasCdpRestoreViewName returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasCdpRestoreViewName() bool {
	if o != nil && o.CdpRestoreViewName.IsSet() {
		return true
	}

	return false
}

// SetCdpRestoreViewName gets a reference to the given NullableString and assigns it to the CdpRestoreViewName field.
func (o *PerformRestoreTaskStateProto) SetCdpRestoreViewName(v string) {
	o.CdpRestoreViewName.Set(&v)
}
// SetCdpRestoreViewNameNil sets the value for CdpRestoreViewName to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetCdpRestoreViewNameNil() {
	o.CdpRestoreViewName.Set(nil)
}

// UnsetCdpRestoreViewName ensures that no value is present for CdpRestoreViewName, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetCdpRestoreViewName() {
	o.CdpRestoreViewName.Unset()
}

// GetChildCloneTaskId returns the ChildCloneTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetChildCloneTaskId() int64 {
	if o == nil || o.ChildCloneTaskId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ChildCloneTaskId.Get()
}

// GetChildCloneTaskIdOk returns a tuple with the ChildCloneTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetChildCloneTaskIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ChildCloneTaskId.Get(), o.ChildCloneTaskId.IsSet()
}

// HasChildCloneTaskId returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasChildCloneTaskId() bool {
	if o != nil && o.ChildCloneTaskId.IsSet() {
		return true
	}

	return false
}

// SetChildCloneTaskId gets a reference to the given NullableInt64 and assigns it to the ChildCloneTaskId field.
func (o *PerformRestoreTaskStateProto) SetChildCloneTaskId(v int64) {
	o.ChildCloneTaskId.Set(&v)
}
// SetChildCloneTaskIdNil sets the value for ChildCloneTaskId to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetChildCloneTaskIdNil() {
	o.ChildCloneTaskId.Set(nil)
}

// UnsetChildCloneTaskId ensures that no value is present for ChildCloneTaskId, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetChildCloneTaskId() {
	o.ChildCloneTaskId.Unset()
}

// GetChildDestroyTaskId returns the ChildDestroyTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetChildDestroyTaskId() int64 {
	if o == nil || o.ChildDestroyTaskId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ChildDestroyTaskId.Get()
}

// GetChildDestroyTaskIdOk returns a tuple with the ChildDestroyTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetChildDestroyTaskIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ChildDestroyTaskId.Get(), o.ChildDestroyTaskId.IsSet()
}

// HasChildDestroyTaskId returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasChildDestroyTaskId() bool {
	if o != nil && o.ChildDestroyTaskId.IsSet() {
		return true
	}

	return false
}

// SetChildDestroyTaskId gets a reference to the given NullableInt64 and assigns it to the ChildDestroyTaskId field.
func (o *PerformRestoreTaskStateProto) SetChildDestroyTaskId(v int64) {
	o.ChildDestroyTaskId.Set(&v)
}
// SetChildDestroyTaskIdNil sets the value for ChildDestroyTaskId to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetChildDestroyTaskIdNil() {
	o.ChildDestroyTaskId.Set(nil)
}

// UnsetChildDestroyTaskId ensures that no value is present for ChildDestroyTaskId, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetChildDestroyTaskId() {
	o.ChildDestroyTaskId.Unset()
}

// GetCloneAppViewInfo returns the CloneAppViewInfo field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetCloneAppViewInfo() CloneAppViewInfoProto {
	if o == nil || o.CloneAppViewInfo == nil {
		var ret CloneAppViewInfoProto
		return ret
	}
	return *o.CloneAppViewInfo
}

// GetCloneAppViewInfoOk returns a tuple with the CloneAppViewInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetCloneAppViewInfoOk() (*CloneAppViewInfoProto, bool) {
	if o == nil || o.CloneAppViewInfo == nil {
		return nil, false
	}
	return o.CloneAppViewInfo, true
}

// HasCloneAppViewInfo returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasCloneAppViewInfo() bool {
	if o != nil && o.CloneAppViewInfo != nil {
		return true
	}

	return false
}

// SetCloneAppViewInfo gets a reference to the given CloneAppViewInfoProto and assigns it to the CloneAppViewInfo field.
func (o *PerformRestoreTaskStateProto) SetCloneAppViewInfo(v CloneAppViewInfoProto) {
	o.CloneAppViewInfo = &v
}

// GetCloudDeployInfo returns the CloudDeployInfo field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetCloudDeployInfo() CloudDeployInfoProto {
	if o == nil || o.CloudDeployInfo == nil {
		var ret CloudDeployInfoProto
		return ret
	}
	return *o.CloudDeployInfo
}

// GetCloudDeployInfoOk returns a tuple with the CloudDeployInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetCloudDeployInfoOk() (*CloudDeployInfoProto, bool) {
	if o == nil || o.CloudDeployInfo == nil {
		return nil, false
	}
	return o.CloudDeployInfo, true
}

// HasCloudDeployInfo returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasCloudDeployInfo() bool {
	if o != nil && o.CloudDeployInfo != nil {
		return true
	}

	return false
}

// SetCloudDeployInfo gets a reference to the given CloudDeployInfoProto and assigns it to the CloudDeployInfo field.
func (o *PerformRestoreTaskStateProto) SetCloudDeployInfo(v CloudDeployInfoProto) {
	o.CloudDeployInfo = &v
}

// GetContinueRestoreOnError returns the ContinueRestoreOnError field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetContinueRestoreOnError() bool {
	if o == nil || o.ContinueRestoreOnError.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ContinueRestoreOnError.Get()
}

// GetContinueRestoreOnErrorOk returns a tuple with the ContinueRestoreOnError field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetContinueRestoreOnErrorOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ContinueRestoreOnError.Get(), o.ContinueRestoreOnError.IsSet()
}

// HasContinueRestoreOnError returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasContinueRestoreOnError() bool {
	if o != nil && o.ContinueRestoreOnError.IsSet() {
		return true
	}

	return false
}

// SetContinueRestoreOnError gets a reference to the given NullableBool and assigns it to the ContinueRestoreOnError field.
func (o *PerformRestoreTaskStateProto) SetContinueRestoreOnError(v bool) {
	o.ContinueRestoreOnError.Set(&v)
}
// SetContinueRestoreOnErrorNil sets the value for ContinueRestoreOnError to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetContinueRestoreOnErrorNil() {
	o.ContinueRestoreOnError.Set(nil)
}

// UnsetContinueRestoreOnError ensures that no value is present for ContinueRestoreOnError, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetContinueRestoreOnError() {
	o.ContinueRestoreOnError.Unset()
}

// GetCreateView returns the CreateView field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetCreateView() bool {
	if o == nil || o.CreateView.Get() == nil {
		var ret bool
		return ret
	}
	return *o.CreateView.Get()
}

// GetCreateViewOk returns a tuple with the CreateView field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetCreateViewOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreateView.Get(), o.CreateView.IsSet()
}

// HasCreateView returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasCreateView() bool {
	if o != nil && o.CreateView.IsSet() {
		return true
	}

	return false
}

// SetCreateView gets a reference to the given NullableBool and assigns it to the CreateView field.
func (o *PerformRestoreTaskStateProto) SetCreateView(v bool) {
	o.CreateView.Set(&v)
}
// SetCreateViewNil sets the value for CreateView to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetCreateViewNil() {
	o.CreateView.Set(nil)
}

// UnsetCreateView ensures that no value is present for CreateView, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetCreateView() {
	o.CreateView.Unset()
}

// GetDatastoreEntityVec returns the DatastoreEntityVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetDatastoreEntityVec() []EntityProto {
	if o == nil  {
		var ret []EntityProto
		return ret
	}
	return o.DatastoreEntityVec
}

// GetDatastoreEntityVecOk returns a tuple with the DatastoreEntityVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetDatastoreEntityVecOk() (*[]EntityProto, bool) {
	if o == nil || o.DatastoreEntityVec == nil {
		return nil, false
	}
	return &o.DatastoreEntityVec, true
}

// HasDatastoreEntityVec returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasDatastoreEntityVec() bool {
	if o != nil && o.DatastoreEntityVec != nil {
		return true
	}

	return false
}

// SetDatastoreEntityVec gets a reference to the given []EntityProto and assigns it to the DatastoreEntityVec field.
func (o *PerformRestoreTaskStateProto) SetDatastoreEntityVec(v []EntityProto) {
	o.DatastoreEntityVec = v
}

// GetDeployVmsToCloudTaskState returns the DeployVmsToCloudTaskState field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetDeployVmsToCloudTaskState() DeployVMsToCloudTaskStateProto {
	if o == nil || o.DeployVmsToCloudTaskState == nil {
		var ret DeployVMsToCloudTaskStateProto
		return ret
	}
	return *o.DeployVmsToCloudTaskState
}

// GetDeployVmsToCloudTaskStateOk returns a tuple with the DeployVmsToCloudTaskState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetDeployVmsToCloudTaskStateOk() (*DeployVMsToCloudTaskStateProto, bool) {
	if o == nil || o.DeployVmsToCloudTaskState == nil {
		return nil, false
	}
	return o.DeployVmsToCloudTaskState, true
}

// HasDeployVmsToCloudTaskState returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasDeployVmsToCloudTaskState() bool {
	if o != nil && o.DeployVmsToCloudTaskState != nil {
		return true
	}

	return false
}

// SetDeployVmsToCloudTaskState gets a reference to the given DeployVMsToCloudTaskStateProto and assigns it to the DeployVmsToCloudTaskState field.
func (o *PerformRestoreTaskStateProto) SetDeployVmsToCloudTaskState(v DeployVMsToCloudTaskStateProto) {
	o.DeployVmsToCloudTaskState = &v
}

// GetFolderEntity returns the FolderEntity field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetFolderEntity() EntityProto {
	if o == nil || o.FolderEntity == nil {
		var ret EntityProto
		return ret
	}
	return *o.FolderEntity
}

// GetFolderEntityOk returns a tuple with the FolderEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetFolderEntityOk() (*EntityProto, bool) {
	if o == nil || o.FolderEntity == nil {
		return nil, false
	}
	return o.FolderEntity, true
}

// HasFolderEntity returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasFolderEntity() bool {
	if o != nil && o.FolderEntity != nil {
		return true
	}

	return false
}

// SetFolderEntity gets a reference to the given EntityProto and assigns it to the FolderEntity field.
func (o *PerformRestoreTaskStateProto) SetFolderEntity(v EntityProto) {
	o.FolderEntity = &v
}

// GetFullViewName returns the FullViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetFullViewName() string {
	if o == nil || o.FullViewName.Get() == nil {
		var ret string
		return ret
	}
	return *o.FullViewName.Get()
}

// GetFullViewNameOk returns a tuple with the FullViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetFullViewNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FullViewName.Get(), o.FullViewName.IsSet()
}

// HasFullViewName returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasFullViewName() bool {
	if o != nil && o.FullViewName.IsSet() {
		return true
	}

	return false
}

// SetFullViewName gets a reference to the given NullableString and assigns it to the FullViewName field.
func (o *PerformRestoreTaskStateProto) SetFullViewName(v string) {
	o.FullViewName.Set(&v)
}
// SetFullViewNameNil sets the value for FullViewName to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetFullViewNameNil() {
	o.FullViewName.Set(nil)
}

// UnsetFullViewName ensures that no value is present for FullViewName, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetFullViewName() {
	o.FullViewName.Unset()
}

// GetIncludeVmConfig returns the IncludeVmConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetIncludeVmConfig() bool {
	if o == nil || o.IncludeVmConfig.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IncludeVmConfig.Get()
}

// GetIncludeVmConfigOk returns a tuple with the IncludeVmConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetIncludeVmConfigOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IncludeVmConfig.Get(), o.IncludeVmConfig.IsSet()
}

// HasIncludeVmConfig returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasIncludeVmConfig() bool {
	if o != nil && o.IncludeVmConfig.IsSet() {
		return true
	}

	return false
}

// SetIncludeVmConfig gets a reference to the given NullableBool and assigns it to the IncludeVmConfig field.
func (o *PerformRestoreTaskStateProto) SetIncludeVmConfig(v bool) {
	o.IncludeVmConfig.Set(&v)
}
// SetIncludeVmConfigNil sets the value for IncludeVmConfig to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetIncludeVmConfigNil() {
	o.IncludeVmConfig.Set(nil)
}

// UnsetIncludeVmConfig ensures that no value is present for IncludeVmConfig, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetIncludeVmConfig() {
	o.IncludeVmConfig.Unset()
}

// GetMountVolumesTaskState returns the MountVolumesTaskState field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetMountVolumesTaskState() MountVolumesTaskStateProto {
	if o == nil || o.MountVolumesTaskState == nil {
		var ret MountVolumesTaskStateProto
		return ret
	}
	return *o.MountVolumesTaskState
}

// GetMountVolumesTaskStateOk returns a tuple with the MountVolumesTaskState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetMountVolumesTaskStateOk() (*MountVolumesTaskStateProto, bool) {
	if o == nil || o.MountVolumesTaskState == nil {
		return nil, false
	}
	return o.MountVolumesTaskState, true
}

// HasMountVolumesTaskState returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasMountVolumesTaskState() bool {
	if o != nil && o.MountVolumesTaskState != nil {
		return true
	}

	return false
}

// SetMountVolumesTaskState gets a reference to the given MountVolumesTaskStateProto and assigns it to the MountVolumesTaskState field.
func (o *PerformRestoreTaskStateProto) SetMountVolumesTaskState(v MountVolumesTaskStateProto) {
	o.MountVolumesTaskState = &v
}

// GetNosqlConnectParams returns the NosqlConnectParams field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetNosqlConnectParams() NoSqlConnectParams {
	if o == nil || o.NosqlConnectParams == nil {
		var ret NoSqlConnectParams
		return ret
	}
	return *o.NosqlConnectParams
}

// GetNosqlConnectParamsOk returns a tuple with the NosqlConnectParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetNosqlConnectParamsOk() (*NoSqlConnectParams, bool) {
	if o == nil || o.NosqlConnectParams == nil {
		return nil, false
	}
	return o.NosqlConnectParams, true
}

// HasNosqlConnectParams returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasNosqlConnectParams() bool {
	if o != nil && o.NosqlConnectParams != nil {
		return true
	}

	return false
}

// SetNosqlConnectParams gets a reference to the given NoSqlConnectParams and assigns it to the NosqlConnectParams field.
func (o *PerformRestoreTaskStateProto) SetNosqlConnectParams(v NoSqlConnectParams) {
	o.NosqlConnectParams = &v
}

// GetNosqlRecoverJobParams returns the NosqlRecoverJobParams field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetNosqlRecoverJobParams() NoSqlRecoverJobParams {
	if o == nil || o.NosqlRecoverJobParams == nil {
		var ret NoSqlRecoverJobParams
		return ret
	}
	return *o.NosqlRecoverJobParams
}

// GetNosqlRecoverJobParamsOk returns a tuple with the NosqlRecoverJobParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetNosqlRecoverJobParamsOk() (*NoSqlRecoverJobParams, bool) {
	if o == nil || o.NosqlRecoverJobParams == nil {
		return nil, false
	}
	return o.NosqlRecoverJobParams, true
}

// HasNosqlRecoverJobParams returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasNosqlRecoverJobParams() bool {
	if o != nil && o.NosqlRecoverJobParams != nil {
		return true
	}

	return false
}

// SetNosqlRecoverJobParams gets a reference to the given NoSqlRecoverJobParams and assigns it to the NosqlRecoverJobParams field.
func (o *PerformRestoreTaskStateProto) SetNosqlRecoverJobParams(v NoSqlRecoverJobParams) {
	o.NosqlRecoverJobParams = &v
}

// GetObjectNameDEPRECATED returns the ObjectNameDEPRECATED field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetObjectNameDEPRECATED() string {
	if o == nil || o.ObjectNameDEPRECATED.Get() == nil {
		var ret string
		return ret
	}
	return *o.ObjectNameDEPRECATED.Get()
}

// GetObjectNameDEPRECATEDOk returns a tuple with the ObjectNameDEPRECATED field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetObjectNameDEPRECATEDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ObjectNameDEPRECATED.Get(), o.ObjectNameDEPRECATED.IsSet()
}

// HasObjectNameDEPRECATED returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasObjectNameDEPRECATED() bool {
	if o != nil && o.ObjectNameDEPRECATED.IsSet() {
		return true
	}

	return false
}

// SetObjectNameDEPRECATED gets a reference to the given NullableString and assigns it to the ObjectNameDEPRECATED field.
func (o *PerformRestoreTaskStateProto) SetObjectNameDEPRECATED(v string) {
	o.ObjectNameDEPRECATED.Set(&v)
}
// SetObjectNameDEPRECATEDNil sets the value for ObjectNameDEPRECATED to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetObjectNameDEPRECATEDNil() {
	o.ObjectNameDEPRECATED.Set(nil)
}

// UnsetObjectNameDEPRECATED ensures that no value is present for ObjectNameDEPRECATED, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetObjectNameDEPRECATED() {
	o.ObjectNameDEPRECATED.Unset()
}

// GetObjects returns the Objects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetObjects() []RestoreObject {
	if o == nil  {
		var ret []RestoreObject
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetObjectsOk() (*[]RestoreObject, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return &o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []RestoreObject and assigns it to the Objects field.
func (o *PerformRestoreTaskStateProto) SetObjects(v []RestoreObject) {
	o.Objects = v
}

// GetObjectsProgressMonitorTaskPaths returns the ObjectsProgressMonitorTaskPaths field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetObjectsProgressMonitorTaskPaths() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.ObjectsProgressMonitorTaskPaths
}

// GetObjectsProgressMonitorTaskPathsOk returns a tuple with the ObjectsProgressMonitorTaskPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetObjectsProgressMonitorTaskPathsOk() (*[]string, bool) {
	if o == nil || o.ObjectsProgressMonitorTaskPaths == nil {
		return nil, false
	}
	return &o.ObjectsProgressMonitorTaskPaths, true
}

// HasObjectsProgressMonitorTaskPaths returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasObjectsProgressMonitorTaskPaths() bool {
	if o != nil && o.ObjectsProgressMonitorTaskPaths != nil {
		return true
	}

	return false
}

// SetObjectsProgressMonitorTaskPaths gets a reference to the given []string and assigns it to the ObjectsProgressMonitorTaskPaths field.
func (o *PerformRestoreTaskStateProto) SetObjectsProgressMonitorTaskPaths(v []string) {
	o.ObjectsProgressMonitorTaskPaths = v
}

// GetParentRestoreJobId returns the ParentRestoreJobId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetParentRestoreJobId() int64 {
	if o == nil || o.ParentRestoreJobId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ParentRestoreJobId.Get()
}

// GetParentRestoreJobIdOk returns a tuple with the ParentRestoreJobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetParentRestoreJobIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ParentRestoreJobId.Get(), o.ParentRestoreJobId.IsSet()
}

// HasParentRestoreJobId returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasParentRestoreJobId() bool {
	if o != nil && o.ParentRestoreJobId.IsSet() {
		return true
	}

	return false
}

// SetParentRestoreJobId gets a reference to the given NullableInt64 and assigns it to the ParentRestoreJobId field.
func (o *PerformRestoreTaskStateProto) SetParentRestoreJobId(v int64) {
	o.ParentRestoreJobId.Set(&v)
}
// SetParentRestoreJobIdNil sets the value for ParentRestoreJobId to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetParentRestoreJobIdNil() {
	o.ParentRestoreJobId.Set(nil)
}

// UnsetParentRestoreJobId ensures that no value is present for ParentRestoreJobId, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetParentRestoreJobId() {
	o.ParentRestoreJobId.Unset()
}

// GetParentRestoreTaskId returns the ParentRestoreTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetParentRestoreTaskId() int64 {
	if o == nil || o.ParentRestoreTaskId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ParentRestoreTaskId.Get()
}

// GetParentRestoreTaskIdOk returns a tuple with the ParentRestoreTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetParentRestoreTaskIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ParentRestoreTaskId.Get(), o.ParentRestoreTaskId.IsSet()
}

// HasParentRestoreTaskId returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasParentRestoreTaskId() bool {
	if o != nil && o.ParentRestoreTaskId.IsSet() {
		return true
	}

	return false
}

// SetParentRestoreTaskId gets a reference to the given NullableInt64 and assigns it to the ParentRestoreTaskId field.
func (o *PerformRestoreTaskStateProto) SetParentRestoreTaskId(v int64) {
	o.ParentRestoreTaskId.Set(&v)
}
// SetParentRestoreTaskIdNil sets the value for ParentRestoreTaskId to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetParentRestoreTaskIdNil() {
	o.ParentRestoreTaskId.Set(nil)
}

// UnsetParentRestoreTaskId ensures that no value is present for ParentRestoreTaskId, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetParentRestoreTaskId() {
	o.ParentRestoreTaskId.Unset()
}

// GetPathPrefixDEPRECATED returns the PathPrefixDEPRECATED field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetPathPrefixDEPRECATED() string {
	if o == nil || o.PathPrefixDEPRECATED.Get() == nil {
		var ret string
		return ret
	}
	return *o.PathPrefixDEPRECATED.Get()
}

// GetPathPrefixDEPRECATEDOk returns a tuple with the PathPrefixDEPRECATED field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetPathPrefixDEPRECATEDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PathPrefixDEPRECATED.Get(), o.PathPrefixDEPRECATED.IsSet()
}

// HasPathPrefixDEPRECATED returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasPathPrefixDEPRECATED() bool {
	if o != nil && o.PathPrefixDEPRECATED.IsSet() {
		return true
	}

	return false
}

// SetPathPrefixDEPRECATED gets a reference to the given NullableString and assigns it to the PathPrefixDEPRECATED field.
func (o *PerformRestoreTaskStateProto) SetPathPrefixDEPRECATED(v string) {
	o.PathPrefixDEPRECATED.Set(&v)
}
// SetPathPrefixDEPRECATEDNil sets the value for PathPrefixDEPRECATED to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetPathPrefixDEPRECATEDNil() {
	o.PathPrefixDEPRECATED.Set(nil)
}

// UnsetPathPrefixDEPRECATED ensures that no value is present for PathPrefixDEPRECATED, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetPathPrefixDEPRECATED() {
	o.PathPrefixDEPRECATED.Unset()
}

// GetPhysicalFlrParallelRestore returns the PhysicalFlrParallelRestore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetPhysicalFlrParallelRestore() bool {
	if o == nil || o.PhysicalFlrParallelRestore.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PhysicalFlrParallelRestore.Get()
}

// GetPhysicalFlrParallelRestoreOk returns a tuple with the PhysicalFlrParallelRestore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetPhysicalFlrParallelRestoreOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PhysicalFlrParallelRestore.Get(), o.PhysicalFlrParallelRestore.IsSet()
}

// HasPhysicalFlrParallelRestore returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasPhysicalFlrParallelRestore() bool {
	if o != nil && o.PhysicalFlrParallelRestore.IsSet() {
		return true
	}

	return false
}

// SetPhysicalFlrParallelRestore gets a reference to the given NullableBool and assigns it to the PhysicalFlrParallelRestore field.
func (o *PerformRestoreTaskStateProto) SetPhysicalFlrParallelRestore(v bool) {
	o.PhysicalFlrParallelRestore.Set(&v)
}
// SetPhysicalFlrParallelRestoreNil sets the value for PhysicalFlrParallelRestore to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetPhysicalFlrParallelRestoreNil() {
	o.PhysicalFlrParallelRestore.Set(nil)
}

// UnsetPhysicalFlrParallelRestore ensures that no value is present for PhysicalFlrParallelRestore, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetPhysicalFlrParallelRestore() {
	o.PhysicalFlrParallelRestore.Unset()
}

// GetPhysicalFlrUseNewLockingMethod returns the PhysicalFlrUseNewLockingMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetPhysicalFlrUseNewLockingMethod() bool {
	if o == nil || o.PhysicalFlrUseNewLockingMethod.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PhysicalFlrUseNewLockingMethod.Get()
}

// GetPhysicalFlrUseNewLockingMethodOk returns a tuple with the PhysicalFlrUseNewLockingMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetPhysicalFlrUseNewLockingMethodOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PhysicalFlrUseNewLockingMethod.Get(), o.PhysicalFlrUseNewLockingMethod.IsSet()
}

// HasPhysicalFlrUseNewLockingMethod returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasPhysicalFlrUseNewLockingMethod() bool {
	if o != nil && o.PhysicalFlrUseNewLockingMethod.IsSet() {
		return true
	}

	return false
}

// SetPhysicalFlrUseNewLockingMethod gets a reference to the given NullableBool and assigns it to the PhysicalFlrUseNewLockingMethod field.
func (o *PerformRestoreTaskStateProto) SetPhysicalFlrUseNewLockingMethod(v bool) {
	o.PhysicalFlrUseNewLockingMethod.Set(&v)
}
// SetPhysicalFlrUseNewLockingMethodNil sets the value for PhysicalFlrUseNewLockingMethod to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetPhysicalFlrUseNewLockingMethodNil() {
	o.PhysicalFlrUseNewLockingMethod.Set(nil)
}

// UnsetPhysicalFlrUseNewLockingMethod ensures that no value is present for PhysicalFlrUseNewLockingMethod, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetPhysicalFlrUseNewLockingMethod() {
	o.PhysicalFlrUseNewLockingMethod.Unset()
}

// GetPowerStateConfig returns the PowerStateConfig field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetPowerStateConfig() PowerStateConfigProto {
	if o == nil || o.PowerStateConfig == nil {
		var ret PowerStateConfigProto
		return ret
	}
	return *o.PowerStateConfig
}

// GetPowerStateConfigOk returns a tuple with the PowerStateConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetPowerStateConfigOk() (*PowerStateConfigProto, bool) {
	if o == nil || o.PowerStateConfig == nil {
		return nil, false
	}
	return o.PowerStateConfig, true
}

// HasPowerStateConfig returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasPowerStateConfig() bool {
	if o != nil && o.PowerStateConfig != nil {
		return true
	}

	return false
}

// SetPowerStateConfig gets a reference to the given PowerStateConfigProto and assigns it to the PowerStateConfig field.
func (o *PerformRestoreTaskStateProto) SetPowerStateConfig(v PowerStateConfigProto) {
	o.PowerStateConfig = &v
}

// GetPreserveTags returns the PreserveTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetPreserveTags() bool {
	if o == nil || o.PreserveTags.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PreserveTags.Get()
}

// GetPreserveTagsOk returns a tuple with the PreserveTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetPreserveTagsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PreserveTags.Get(), o.PreserveTags.IsSet()
}

// HasPreserveTags returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasPreserveTags() bool {
	if o != nil && o.PreserveTags.IsSet() {
		return true
	}

	return false
}

// SetPreserveTags gets a reference to the given NullableBool and assigns it to the PreserveTags field.
func (o *PerformRestoreTaskStateProto) SetPreserveTags(v bool) {
	o.PreserveTags.Set(&v)
}
// SetPreserveTagsNil sets the value for PreserveTags to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetPreserveTagsNil() {
	o.PreserveTags.Set(nil)
}

// UnsetPreserveTags ensures that no value is present for PreserveTags, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetPreserveTags() {
	o.PreserveTags.Unset()
}

// GetProgressMonitorTaskPath returns the ProgressMonitorTaskPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetProgressMonitorTaskPath() string {
	if o == nil || o.ProgressMonitorTaskPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProgressMonitorTaskPath.Get()
}

// GetProgressMonitorTaskPathOk returns a tuple with the ProgressMonitorTaskPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetProgressMonitorTaskPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProgressMonitorTaskPath.Get(), o.ProgressMonitorTaskPath.IsSet()
}

// HasProgressMonitorTaskPath returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasProgressMonitorTaskPath() bool {
	if o != nil && o.ProgressMonitorTaskPath.IsSet() {
		return true
	}

	return false
}

// SetProgressMonitorTaskPath gets a reference to the given NullableString and assigns it to the ProgressMonitorTaskPath field.
func (o *PerformRestoreTaskStateProto) SetProgressMonitorTaskPath(v string) {
	o.ProgressMonitorTaskPath.Set(&v)
}
// SetProgressMonitorTaskPathNil sets the value for ProgressMonitorTaskPath to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetProgressMonitorTaskPathNil() {
	o.ProgressMonitorTaskPath.Set(nil)
}

// UnsetProgressMonitorTaskPath ensures that no value is present for ProgressMonitorTaskPath, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetProgressMonitorTaskPath() {
	o.ProgressMonitorTaskPath.Unset()
}

// GetRecoverDisksTaskState returns the RecoverDisksTaskState field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRecoverDisksTaskState() RecoverDisksTaskStateProto {
	if o == nil || o.RecoverDisksTaskState == nil {
		var ret RecoverDisksTaskStateProto
		return ret
	}
	return *o.RecoverDisksTaskState
}

// GetRecoverDisksTaskStateOk returns a tuple with the RecoverDisksTaskState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRecoverDisksTaskStateOk() (*RecoverDisksTaskStateProto, bool) {
	if o == nil || o.RecoverDisksTaskState == nil {
		return nil, false
	}
	return o.RecoverDisksTaskState, true
}

// HasRecoverDisksTaskState returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRecoverDisksTaskState() bool {
	if o != nil && o.RecoverDisksTaskState != nil {
		return true
	}

	return false
}

// SetRecoverDisksTaskState gets a reference to the given RecoverDisksTaskStateProto and assigns it to the RecoverDisksTaskState field.
func (o *PerformRestoreTaskStateProto) SetRecoverDisksTaskState(v RecoverDisksTaskStateProto) {
	o.RecoverDisksTaskState = &v
}

// GetRecoverVolumesTaskState returns the RecoverVolumesTaskState field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRecoverVolumesTaskState() RecoverVolumesTaskStateProto {
	if o == nil || o.RecoverVolumesTaskState == nil {
		var ret RecoverVolumesTaskStateProto
		return ret
	}
	return *o.RecoverVolumesTaskState
}

// GetRecoverVolumesTaskStateOk returns a tuple with the RecoverVolumesTaskState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRecoverVolumesTaskStateOk() (*RecoverVolumesTaskStateProto, bool) {
	if o == nil || o.RecoverVolumesTaskState == nil {
		return nil, false
	}
	return o.RecoverVolumesTaskState, true
}

// HasRecoverVolumesTaskState returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRecoverVolumesTaskState() bool {
	if o != nil && o.RecoverVolumesTaskState != nil {
		return true
	}

	return false
}

// SetRecoverVolumesTaskState gets a reference to the given RecoverVolumesTaskStateProto and assigns it to the RecoverVolumesTaskState field.
func (o *PerformRestoreTaskStateProto) SetRecoverVolumesTaskState(v RecoverVolumesTaskStateProto) {
	o.RecoverVolumesTaskState = &v
}

// GetRelatedRestoreTaskId returns the RelatedRestoreTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetRelatedRestoreTaskId() int64 {
	if o == nil || o.RelatedRestoreTaskId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RelatedRestoreTaskId.Get()
}

// GetRelatedRestoreTaskIdOk returns a tuple with the RelatedRestoreTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetRelatedRestoreTaskIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RelatedRestoreTaskId.Get(), o.RelatedRestoreTaskId.IsSet()
}

// HasRelatedRestoreTaskId returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRelatedRestoreTaskId() bool {
	if o != nil && o.RelatedRestoreTaskId.IsSet() {
		return true
	}

	return false
}

// SetRelatedRestoreTaskId gets a reference to the given NullableInt64 and assigns it to the RelatedRestoreTaskId field.
func (o *PerformRestoreTaskStateProto) SetRelatedRestoreTaskId(v int64) {
	o.RelatedRestoreTaskId.Set(&v)
}
// SetRelatedRestoreTaskIdNil sets the value for RelatedRestoreTaskId to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetRelatedRestoreTaskIdNil() {
	o.RelatedRestoreTaskId.Set(nil)
}

// UnsetRelatedRestoreTaskId ensures that no value is present for RelatedRestoreTaskId, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetRelatedRestoreTaskId() {
	o.RelatedRestoreTaskId.Unset()
}

// GetRenameRestoredObjectParam returns the RenameRestoredObjectParam field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRenameRestoredObjectParam() RenameObjectParamProto {
	if o == nil || o.RenameRestoredObjectParam == nil {
		var ret RenameObjectParamProto
		return ret
	}
	return *o.RenameRestoredObjectParam
}

// GetRenameRestoredObjectParamOk returns a tuple with the RenameRestoredObjectParam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRenameRestoredObjectParamOk() (*RenameObjectParamProto, bool) {
	if o == nil || o.RenameRestoredObjectParam == nil {
		return nil, false
	}
	return o.RenameRestoredObjectParam, true
}

// HasRenameRestoredObjectParam returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRenameRestoredObjectParam() bool {
	if o != nil && o.RenameRestoredObjectParam != nil {
		return true
	}

	return false
}

// SetRenameRestoredObjectParam gets a reference to the given RenameObjectParamProto and assigns it to the RenameRestoredObjectParam field.
func (o *PerformRestoreTaskStateProto) SetRenameRestoredObjectParam(v RenameObjectParamProto) {
	o.RenameRestoredObjectParam = &v
}

// GetRenameRestoredVappParam returns the RenameRestoredVappParam field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRenameRestoredVappParam() RenameObjectParamProto {
	if o == nil || o.RenameRestoredVappParam == nil {
		var ret RenameObjectParamProto
		return ret
	}
	return *o.RenameRestoredVappParam
}

// GetRenameRestoredVappParamOk returns a tuple with the RenameRestoredVappParam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRenameRestoredVappParamOk() (*RenameObjectParamProto, bool) {
	if o == nil || o.RenameRestoredVappParam == nil {
		return nil, false
	}
	return o.RenameRestoredVappParam, true
}

// HasRenameRestoredVappParam returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRenameRestoredVappParam() bool {
	if o != nil && o.RenameRestoredVappParam != nil {
		return true
	}

	return false
}

// SetRenameRestoredVappParam gets a reference to the given RenameObjectParamProto and assigns it to the RenameRestoredVappParam field.
func (o *PerformRestoreTaskStateProto) SetRenameRestoredVappParam(v RenameObjectParamProto) {
	o.RenameRestoredVappParam = &v
}

// GetResourcePoolEntity returns the ResourcePoolEntity field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetResourcePoolEntity() EntityProto {
	if o == nil || o.ResourcePoolEntity == nil {
		var ret EntityProto
		return ret
	}
	return *o.ResourcePoolEntity
}

// GetResourcePoolEntityOk returns a tuple with the ResourcePoolEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetResourcePoolEntityOk() (*EntityProto, bool) {
	if o == nil || o.ResourcePoolEntity == nil {
		return nil, false
	}
	return o.ResourcePoolEntity, true
}

// HasResourcePoolEntity returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasResourcePoolEntity() bool {
	if o != nil && o.ResourcePoolEntity != nil {
		return true
	}

	return false
}

// SetResourcePoolEntity gets a reference to the given EntityProto and assigns it to the ResourcePoolEntity field.
func (o *PerformRestoreTaskStateProto) SetResourcePoolEntity(v EntityProto) {
	o.ResourcePoolEntity = &v
}

// GetRestoreAcropolisVmsParams returns the RestoreAcropolisVmsParams field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRestoreAcropolisVmsParams() RestoreAcropolisVMsParams {
	if o == nil || o.RestoreAcropolisVmsParams == nil {
		var ret RestoreAcropolisVMsParams
		return ret
	}
	return *o.RestoreAcropolisVmsParams
}

// GetRestoreAcropolisVmsParamsOk returns a tuple with the RestoreAcropolisVmsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRestoreAcropolisVmsParamsOk() (*RestoreAcropolisVMsParams, bool) {
	if o == nil || o.RestoreAcropolisVmsParams == nil {
		return nil, false
	}
	return o.RestoreAcropolisVmsParams, true
}

// HasRestoreAcropolisVmsParams returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestoreAcropolisVmsParams() bool {
	if o != nil && o.RestoreAcropolisVmsParams != nil {
		return true
	}

	return false
}

// SetRestoreAcropolisVmsParams gets a reference to the given RestoreAcropolisVMsParams and assigns it to the RestoreAcropolisVmsParams field.
func (o *PerformRestoreTaskStateProto) SetRestoreAcropolisVmsParams(v RestoreAcropolisVMsParams) {
	o.RestoreAcropolisVmsParams = &v
}

// GetRestoreAppTaskState returns the RestoreAppTaskState field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRestoreAppTaskState() RestoreAppTaskStateProto {
	if o == nil || o.RestoreAppTaskState == nil {
		var ret RestoreAppTaskStateProto
		return ret
	}
	return *o.RestoreAppTaskState
}

// GetRestoreAppTaskStateOk returns a tuple with the RestoreAppTaskState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRestoreAppTaskStateOk() (*RestoreAppTaskStateProto, bool) {
	if o == nil || o.RestoreAppTaskState == nil {
		return nil, false
	}
	return o.RestoreAppTaskState, true
}

// HasRestoreAppTaskState returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestoreAppTaskState() bool {
	if o != nil && o.RestoreAppTaskState != nil {
		return true
	}

	return false
}

// SetRestoreAppTaskState gets a reference to the given RestoreAppTaskStateProto and assigns it to the RestoreAppTaskState field.
func (o *PerformRestoreTaskStateProto) SetRestoreAppTaskState(v RestoreAppTaskStateProto) {
	o.RestoreAppTaskState = &v
}

// GetRestoreFilesTaskState returns the RestoreFilesTaskState field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRestoreFilesTaskState() RestoreFilesTaskStateProto {
	if o == nil || o.RestoreFilesTaskState == nil {
		var ret RestoreFilesTaskStateProto
		return ret
	}
	return *o.RestoreFilesTaskState
}

// GetRestoreFilesTaskStateOk returns a tuple with the RestoreFilesTaskState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRestoreFilesTaskStateOk() (*RestoreFilesTaskStateProto, bool) {
	if o == nil || o.RestoreFilesTaskState == nil {
		return nil, false
	}
	return o.RestoreFilesTaskState, true
}

// HasRestoreFilesTaskState returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestoreFilesTaskState() bool {
	if o != nil && o.RestoreFilesTaskState != nil {
		return true
	}

	return false
}

// SetRestoreFilesTaskState gets a reference to the given RestoreFilesTaskStateProto and assigns it to the RestoreFilesTaskState field.
func (o *PerformRestoreTaskStateProto) SetRestoreFilesTaskState(v RestoreFilesTaskStateProto) {
	o.RestoreFilesTaskState = &v
}

// GetRestoreHypervVmParams returns the RestoreHypervVmParams field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRestoreHypervVmParams() RestoreHyperVVMParams {
	if o == nil || o.RestoreHypervVmParams == nil {
		var ret RestoreHyperVVMParams
		return ret
	}
	return *o.RestoreHypervVmParams
}

// GetRestoreHypervVmParamsOk returns a tuple with the RestoreHypervVmParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRestoreHypervVmParamsOk() (*RestoreHyperVVMParams, bool) {
	if o == nil || o.RestoreHypervVmParams == nil {
		return nil, false
	}
	return o.RestoreHypervVmParams, true
}

// HasRestoreHypervVmParams returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestoreHypervVmParams() bool {
	if o != nil && o.RestoreHypervVmParams != nil {
		return true
	}

	return false
}

// SetRestoreHypervVmParams gets a reference to the given RestoreHyperVVMParams and assigns it to the RestoreHypervVmParams field.
func (o *PerformRestoreTaskStateProto) SetRestoreHypervVmParams(v RestoreHyperVVMParams) {
	o.RestoreHypervVmParams = &v
}

// GetRestoreInfo returns the RestoreInfo field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRestoreInfo() RestoreInfoProto {
	if o == nil || o.RestoreInfo == nil {
		var ret RestoreInfoProto
		return ret
	}
	return *o.RestoreInfo
}

// GetRestoreInfoOk returns a tuple with the RestoreInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRestoreInfoOk() (*RestoreInfoProto, bool) {
	if o == nil || o.RestoreInfo == nil {
		return nil, false
	}
	return o.RestoreInfo, true
}

// HasRestoreInfo returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestoreInfo() bool {
	if o != nil && o.RestoreInfo != nil {
		return true
	}

	return false
}

// SetRestoreInfo gets a reference to the given RestoreInfoProto and assigns it to the RestoreInfo field.
func (o *PerformRestoreTaskStateProto) SetRestoreInfo(v RestoreInfoProto) {
	o.RestoreInfo = &v
}

// GetRestoreKubernetesNamespacesParams returns the RestoreKubernetesNamespacesParams field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRestoreKubernetesNamespacesParams() RestoreKubernetesNamespacesParams {
	if o == nil || o.RestoreKubernetesNamespacesParams == nil {
		var ret RestoreKubernetesNamespacesParams
		return ret
	}
	return *o.RestoreKubernetesNamespacesParams
}

// GetRestoreKubernetesNamespacesParamsOk returns a tuple with the RestoreKubernetesNamespacesParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRestoreKubernetesNamespacesParamsOk() (*RestoreKubernetesNamespacesParams, bool) {
	if o == nil || o.RestoreKubernetesNamespacesParams == nil {
		return nil, false
	}
	return o.RestoreKubernetesNamespacesParams, true
}

// HasRestoreKubernetesNamespacesParams returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestoreKubernetesNamespacesParams() bool {
	if o != nil && o.RestoreKubernetesNamespacesParams != nil {
		return true
	}

	return false
}

// SetRestoreKubernetesNamespacesParams gets a reference to the given RestoreKubernetesNamespacesParams and assigns it to the RestoreKubernetesNamespacesParams field.
func (o *PerformRestoreTaskStateProto) SetRestoreKubernetesNamespacesParams(v RestoreKubernetesNamespacesParams) {
	o.RestoreKubernetesNamespacesParams = &v
}

// GetRestoreKvmVmsParams returns the RestoreKvmVmsParams field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRestoreKvmVmsParams() RestoreKVMVMsParams {
	if o == nil || o.RestoreKvmVmsParams == nil {
		var ret RestoreKVMVMsParams
		return ret
	}
	return *o.RestoreKvmVmsParams
}

// GetRestoreKvmVmsParamsOk returns a tuple with the RestoreKvmVmsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRestoreKvmVmsParamsOk() (*RestoreKVMVMsParams, bool) {
	if o == nil || o.RestoreKvmVmsParams == nil {
		return nil, false
	}
	return o.RestoreKvmVmsParams, true
}

// HasRestoreKvmVmsParams returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestoreKvmVmsParams() bool {
	if o != nil && o.RestoreKvmVmsParams != nil {
		return true
	}

	return false
}

// SetRestoreKvmVmsParams gets a reference to the given RestoreKVMVMsParams and assigns it to the RestoreKvmVmsParams field.
func (o *PerformRestoreTaskStateProto) SetRestoreKvmVmsParams(v RestoreKVMVMsParams) {
	o.RestoreKvmVmsParams = &v
}

// GetRestoreOneDriveParams returns the RestoreOneDriveParams field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRestoreOneDriveParams() RestoreOneDriveParams {
	if o == nil || o.RestoreOneDriveParams == nil {
		var ret RestoreOneDriveParams
		return ret
	}
	return *o.RestoreOneDriveParams
}

// GetRestoreOneDriveParamsOk returns a tuple with the RestoreOneDriveParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRestoreOneDriveParamsOk() (*RestoreOneDriveParams, bool) {
	if o == nil || o.RestoreOneDriveParams == nil {
		return nil, false
	}
	return o.RestoreOneDriveParams, true
}

// HasRestoreOneDriveParams returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestoreOneDriveParams() bool {
	if o != nil && o.RestoreOneDriveParams != nil {
		return true
	}

	return false
}

// SetRestoreOneDriveParams gets a reference to the given RestoreOneDriveParams and assigns it to the RestoreOneDriveParams field.
func (o *PerformRestoreTaskStateProto) SetRestoreOneDriveParams(v RestoreOneDriveParams) {
	o.RestoreOneDriveParams = &v
}

// GetRestoreOutlookParams returns the RestoreOutlookParams field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRestoreOutlookParams() RestoreOutlookParams {
	if o == nil || o.RestoreOutlookParams == nil {
		var ret RestoreOutlookParams
		return ret
	}
	return *o.RestoreOutlookParams
}

// GetRestoreOutlookParamsOk returns a tuple with the RestoreOutlookParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRestoreOutlookParamsOk() (*RestoreOutlookParams, bool) {
	if o == nil || o.RestoreOutlookParams == nil {
		return nil, false
	}
	return o.RestoreOutlookParams, true
}

// HasRestoreOutlookParams returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestoreOutlookParams() bool {
	if o != nil && o.RestoreOutlookParams != nil {
		return true
	}

	return false
}

// SetRestoreOutlookParams gets a reference to the given RestoreOutlookParams and assigns it to the RestoreOutlookParams field.
func (o *PerformRestoreTaskStateProto) SetRestoreOutlookParams(v RestoreOutlookParams) {
	o.RestoreOutlookParams = &v
}

// GetRestoreParentSource returns the RestoreParentSource field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRestoreParentSource() EntityProto {
	if o == nil || o.RestoreParentSource == nil {
		var ret EntityProto
		return ret
	}
	return *o.RestoreParentSource
}

// GetRestoreParentSourceOk returns a tuple with the RestoreParentSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRestoreParentSourceOk() (*EntityProto, bool) {
	if o == nil || o.RestoreParentSource == nil {
		return nil, false
	}
	return o.RestoreParentSource, true
}

// HasRestoreParentSource returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestoreParentSource() bool {
	if o != nil && o.RestoreParentSource != nil {
		return true
	}

	return false
}

// SetRestoreParentSource gets a reference to the given EntityProto and assigns it to the RestoreParentSource field.
func (o *PerformRestoreTaskStateProto) SetRestoreParentSource(v EntityProto) {
	o.RestoreParentSource = &v
}

// GetRestorePublicFoldersParams returns the RestorePublicFoldersParams field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRestorePublicFoldersParams() RestoreO365PublicFoldersParams {
	if o == nil || o.RestorePublicFoldersParams == nil {
		var ret RestoreO365PublicFoldersParams
		return ret
	}
	return *o.RestorePublicFoldersParams
}

// GetRestorePublicFoldersParamsOk returns a tuple with the RestorePublicFoldersParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRestorePublicFoldersParamsOk() (*RestoreO365PublicFoldersParams, bool) {
	if o == nil || o.RestorePublicFoldersParams == nil {
		return nil, false
	}
	return o.RestorePublicFoldersParams, true
}

// HasRestorePublicFoldersParams returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestorePublicFoldersParams() bool {
	if o != nil && o.RestorePublicFoldersParams != nil {
		return true
	}

	return false
}

// SetRestorePublicFoldersParams gets a reference to the given RestoreO365PublicFoldersParams and assigns it to the RestorePublicFoldersParams field.
func (o *PerformRestoreTaskStateProto) SetRestorePublicFoldersParams(v RestoreO365PublicFoldersParams) {
	o.RestorePublicFoldersParams = &v
}

// GetRestoreSiteParams returns the RestoreSiteParams field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRestoreSiteParams() RestoreSiteParams {
	if o == nil || o.RestoreSiteParams == nil {
		var ret RestoreSiteParams
		return ret
	}
	return *o.RestoreSiteParams
}

// GetRestoreSiteParamsOk returns a tuple with the RestoreSiteParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRestoreSiteParamsOk() (*RestoreSiteParams, bool) {
	if o == nil || o.RestoreSiteParams == nil {
		return nil, false
	}
	return o.RestoreSiteParams, true
}

// HasRestoreSiteParams returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestoreSiteParams() bool {
	if o != nil && o.RestoreSiteParams != nil {
		return true
	}

	return false
}

// SetRestoreSiteParams gets a reference to the given RestoreSiteParams and assigns it to the RestoreSiteParams field.
func (o *PerformRestoreTaskStateProto) SetRestoreSiteParams(v RestoreSiteParams) {
	o.RestoreSiteParams = &v
}

// GetRestoreSubTaskVec returns the RestoreSubTaskVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetRestoreSubTaskVec() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.RestoreSubTaskVec
}

// GetRestoreSubTaskVecOk returns a tuple with the RestoreSubTaskVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetRestoreSubTaskVecOk() (*[]int64, bool) {
	if o == nil || o.RestoreSubTaskVec == nil {
		return nil, false
	}
	return &o.RestoreSubTaskVec, true
}

// HasRestoreSubTaskVec returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestoreSubTaskVec() bool {
	if o != nil && o.RestoreSubTaskVec != nil {
		return true
	}

	return false
}

// SetRestoreSubTaskVec gets a reference to the given []int64 and assigns it to the RestoreSubTaskVec field.
func (o *PerformRestoreTaskStateProto) SetRestoreSubTaskVec(v []int64) {
	o.RestoreSubTaskVec = v
}

// GetRestoreTaskPurged returns the RestoreTaskPurged field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetRestoreTaskPurged() bool {
	if o == nil || o.RestoreTaskPurged.Get() == nil {
		var ret bool
		return ret
	}
	return *o.RestoreTaskPurged.Get()
}

// GetRestoreTaskPurgedOk returns a tuple with the RestoreTaskPurged field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetRestoreTaskPurgedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RestoreTaskPurged.Get(), o.RestoreTaskPurged.IsSet()
}

// HasRestoreTaskPurged returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestoreTaskPurged() bool {
	if o != nil && o.RestoreTaskPurged.IsSet() {
		return true
	}

	return false
}

// SetRestoreTaskPurged gets a reference to the given NullableBool and assigns it to the RestoreTaskPurged field.
func (o *PerformRestoreTaskStateProto) SetRestoreTaskPurged(v bool) {
	o.RestoreTaskPurged.Set(&v)
}
// SetRestoreTaskPurgedNil sets the value for RestoreTaskPurged to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetRestoreTaskPurgedNil() {
	o.RestoreTaskPurged.Set(nil)
}

// UnsetRestoreTaskPurged ensures that no value is present for RestoreTaskPurged, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetRestoreTaskPurged() {
	o.RestoreTaskPurged.Unset()
}

// GetRestoreViewDatastoreEntity returns the RestoreViewDatastoreEntity field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRestoreViewDatastoreEntity() EntityProto {
	if o == nil || o.RestoreViewDatastoreEntity == nil {
		var ret EntityProto
		return ret
	}
	return *o.RestoreViewDatastoreEntity
}

// GetRestoreViewDatastoreEntityOk returns a tuple with the RestoreViewDatastoreEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRestoreViewDatastoreEntityOk() (*EntityProto, bool) {
	if o == nil || o.RestoreViewDatastoreEntity == nil {
		return nil, false
	}
	return o.RestoreViewDatastoreEntity, true
}

// HasRestoreViewDatastoreEntity returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestoreViewDatastoreEntity() bool {
	if o != nil && o.RestoreViewDatastoreEntity != nil {
		return true
	}

	return false
}

// SetRestoreViewDatastoreEntity gets a reference to the given EntityProto and assigns it to the RestoreViewDatastoreEntity field.
func (o *PerformRestoreTaskStateProto) SetRestoreViewDatastoreEntity(v EntityProto) {
	o.RestoreViewDatastoreEntity = &v
}

// GetRestoreVmwareVmParams returns the RestoreVmwareVmParams field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRestoreVmwareVmParams() RestoreVMwareVMParams {
	if o == nil || o.RestoreVmwareVmParams == nil {
		var ret RestoreVMwareVMParams
		return ret
	}
	return *o.RestoreVmwareVmParams
}

// GetRestoreVmwareVmParamsOk returns a tuple with the RestoreVmwareVmParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRestoreVmwareVmParamsOk() (*RestoreVMwareVMParams, bool) {
	if o == nil || o.RestoreVmwareVmParams == nil {
		return nil, false
	}
	return o.RestoreVmwareVmParams, true
}

// HasRestoreVmwareVmParams returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestoreVmwareVmParams() bool {
	if o != nil && o.RestoreVmwareVmParams != nil {
		return true
	}

	return false
}

// SetRestoreVmwareVmParams gets a reference to the given RestoreVMwareVMParams and assigns it to the RestoreVmwareVmParams field.
func (o *PerformRestoreTaskStateProto) SetRestoreVmwareVmParams(v RestoreVMwareVMParams) {
	o.RestoreVmwareVmParams = &v
}

// GetRestoredObjectsNetworkConfig returns the RestoredObjectsNetworkConfig field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetRestoredObjectsNetworkConfig() RestoredObjectNetworkConfigProto {
	if o == nil || o.RestoredObjectsNetworkConfig == nil {
		var ret RestoredObjectNetworkConfigProto
		return ret
	}
	return *o.RestoredObjectsNetworkConfig
}

// GetRestoredObjectsNetworkConfigOk returns a tuple with the RestoredObjectsNetworkConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetRestoredObjectsNetworkConfigOk() (*RestoredObjectNetworkConfigProto, bool) {
	if o == nil || o.RestoredObjectsNetworkConfig == nil {
		return nil, false
	}
	return o.RestoredObjectsNetworkConfig, true
}

// HasRestoredObjectsNetworkConfig returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestoredObjectsNetworkConfig() bool {
	if o != nil && o.RestoredObjectsNetworkConfig != nil {
		return true
	}

	return false
}

// SetRestoredObjectsNetworkConfig gets a reference to the given RestoredObjectNetworkConfigProto and assigns it to the RestoredObjectsNetworkConfig field.
func (o *PerformRestoreTaskStateProto) SetRestoredObjectsNetworkConfig(v RestoredObjectNetworkConfigProto) {
	o.RestoredObjectsNetworkConfig = &v
}

// GetRestoredToDifferentSource returns the RestoredToDifferentSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetRestoredToDifferentSource() bool {
	if o == nil || o.RestoredToDifferentSource.Get() == nil {
		var ret bool
		return ret
	}
	return *o.RestoredToDifferentSource.Get()
}

// GetRestoredToDifferentSourceOk returns a tuple with the RestoredToDifferentSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetRestoredToDifferentSourceOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RestoredToDifferentSource.Get(), o.RestoredToDifferentSource.IsSet()
}

// HasRestoredToDifferentSource returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRestoredToDifferentSource() bool {
	if o != nil && o.RestoredToDifferentSource.IsSet() {
		return true
	}

	return false
}

// SetRestoredToDifferentSource gets a reference to the given NullableBool and assigns it to the RestoredToDifferentSource field.
func (o *PerformRestoreTaskStateProto) SetRestoredToDifferentSource(v bool) {
	o.RestoredToDifferentSource.Set(&v)
}
// SetRestoredToDifferentSourceNil sets the value for RestoredToDifferentSource to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetRestoredToDifferentSourceNil() {
	o.RestoredToDifferentSource.Set(nil)
}

// UnsetRestoredToDifferentSource ensures that no value is present for RestoredToDifferentSource, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetRestoredToDifferentSource() {
	o.RestoredToDifferentSource.Unset()
}

// GetRetrieveArchiveProgressMonitorTaskPath returns the RetrieveArchiveProgressMonitorTaskPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetRetrieveArchiveProgressMonitorTaskPath() string {
	if o == nil || o.RetrieveArchiveProgressMonitorTaskPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.RetrieveArchiveProgressMonitorTaskPath.Get()
}

// GetRetrieveArchiveProgressMonitorTaskPathOk returns a tuple with the RetrieveArchiveProgressMonitorTaskPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetRetrieveArchiveProgressMonitorTaskPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RetrieveArchiveProgressMonitorTaskPath.Get(), o.RetrieveArchiveProgressMonitorTaskPath.IsSet()
}

// HasRetrieveArchiveProgressMonitorTaskPath returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRetrieveArchiveProgressMonitorTaskPath() bool {
	if o != nil && o.RetrieveArchiveProgressMonitorTaskPath.IsSet() {
		return true
	}

	return false
}

// SetRetrieveArchiveProgressMonitorTaskPath gets a reference to the given NullableString and assigns it to the RetrieveArchiveProgressMonitorTaskPath field.
func (o *PerformRestoreTaskStateProto) SetRetrieveArchiveProgressMonitorTaskPath(v string) {
	o.RetrieveArchiveProgressMonitorTaskPath.Set(&v)
}
// SetRetrieveArchiveProgressMonitorTaskPathNil sets the value for RetrieveArchiveProgressMonitorTaskPath to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetRetrieveArchiveProgressMonitorTaskPathNil() {
	o.RetrieveArchiveProgressMonitorTaskPath.Set(nil)
}

// UnsetRetrieveArchiveProgressMonitorTaskPath ensures that no value is present for RetrieveArchiveProgressMonitorTaskPath, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetRetrieveArchiveProgressMonitorTaskPath() {
	o.RetrieveArchiveProgressMonitorTaskPath.Unset()
}

// GetRetrieveArchiveStubViewName returns the RetrieveArchiveStubViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetRetrieveArchiveStubViewName() string {
	if o == nil || o.RetrieveArchiveStubViewName.Get() == nil {
		var ret string
		return ret
	}
	return *o.RetrieveArchiveStubViewName.Get()
}

// GetRetrieveArchiveStubViewNameOk returns a tuple with the RetrieveArchiveStubViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetRetrieveArchiveStubViewNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RetrieveArchiveStubViewName.Get(), o.RetrieveArchiveStubViewName.IsSet()
}

// HasRetrieveArchiveStubViewName returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRetrieveArchiveStubViewName() bool {
	if o != nil && o.RetrieveArchiveStubViewName.IsSet() {
		return true
	}

	return false
}

// SetRetrieveArchiveStubViewName gets a reference to the given NullableString and assigns it to the RetrieveArchiveStubViewName field.
func (o *PerformRestoreTaskStateProto) SetRetrieveArchiveStubViewName(v string) {
	o.RetrieveArchiveStubViewName.Set(&v)
}
// SetRetrieveArchiveStubViewNameNil sets the value for RetrieveArchiveStubViewName to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetRetrieveArchiveStubViewNameNil() {
	o.RetrieveArchiveStubViewName.Set(nil)
}

// UnsetRetrieveArchiveStubViewName ensures that no value is present for RetrieveArchiveStubViewName, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetRetrieveArchiveStubViewName() {
	o.RetrieveArchiveStubViewName.Unset()
}

// GetRetrieveArchiveTaskUidVec returns the RetrieveArchiveTaskUidVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetRetrieveArchiveTaskUidVec() []UniversalIdProto {
	if o == nil  {
		var ret []UniversalIdProto
		return ret
	}
	return o.RetrieveArchiveTaskUidVec
}

// GetRetrieveArchiveTaskUidVecOk returns a tuple with the RetrieveArchiveTaskUidVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetRetrieveArchiveTaskUidVecOk() (*[]UniversalIdProto, bool) {
	if o == nil || o.RetrieveArchiveTaskUidVec == nil {
		return nil, false
	}
	return &o.RetrieveArchiveTaskUidVec, true
}

// HasRetrieveArchiveTaskUidVec returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRetrieveArchiveTaskUidVec() bool {
	if o != nil && o.RetrieveArchiveTaskUidVec != nil {
		return true
	}

	return false
}

// SetRetrieveArchiveTaskUidVec gets a reference to the given []UniversalIdProto and assigns it to the RetrieveArchiveTaskUidVec field.
func (o *PerformRestoreTaskStateProto) SetRetrieveArchiveTaskUidVec(v []UniversalIdProto) {
	o.RetrieveArchiveTaskUidVec = v
}

// GetRetrieveArchiveTaskVec returns the RetrieveArchiveTaskVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetRetrieveArchiveTaskVec() []RetrieveArchiveTaskStateProto {
	if o == nil  {
		var ret []RetrieveArchiveTaskStateProto
		return ret
	}
	return o.RetrieveArchiveTaskVec
}

// GetRetrieveArchiveTaskVecOk returns a tuple with the RetrieveArchiveTaskVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetRetrieveArchiveTaskVecOk() (*[]RetrieveArchiveTaskStateProto, bool) {
	if o == nil || o.RetrieveArchiveTaskVec == nil {
		return nil, false
	}
	return &o.RetrieveArchiveTaskVec, true
}

// HasRetrieveArchiveTaskVec returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRetrieveArchiveTaskVec() bool {
	if o != nil && o.RetrieveArchiveTaskVec != nil {
		return true
	}

	return false
}

// SetRetrieveArchiveTaskVec gets a reference to the given []RetrieveArchiveTaskStateProto and assigns it to the RetrieveArchiveTaskVec field.
func (o *PerformRestoreTaskStateProto) SetRetrieveArchiveTaskVec(v []RetrieveArchiveTaskStateProto) {
	o.RetrieveArchiveTaskVec = v
}

// GetRetrieveArchiveViewName returns the RetrieveArchiveViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetRetrieveArchiveViewName() string {
	if o == nil || o.RetrieveArchiveViewName.Get() == nil {
		var ret string
		return ret
	}
	return *o.RetrieveArchiveViewName.Get()
}

// GetRetrieveArchiveViewNameOk returns a tuple with the RetrieveArchiveViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetRetrieveArchiveViewNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RetrieveArchiveViewName.Get(), o.RetrieveArchiveViewName.IsSet()
}

// HasRetrieveArchiveViewName returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasRetrieveArchiveViewName() bool {
	if o != nil && o.RetrieveArchiveViewName.IsSet() {
		return true
	}

	return false
}

// SetRetrieveArchiveViewName gets a reference to the given NullableString and assigns it to the RetrieveArchiveViewName field.
func (o *PerformRestoreTaskStateProto) SetRetrieveArchiveViewName(v string) {
	o.RetrieveArchiveViewName.Set(&v)
}
// SetRetrieveArchiveViewNameNil sets the value for RetrieveArchiveViewName to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetRetrieveArchiveViewNameNil() {
	o.RetrieveArchiveViewName.Set(nil)
}

// UnsetRetrieveArchiveViewName ensures that no value is present for RetrieveArchiveViewName, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetRetrieveArchiveViewName() {
	o.RetrieveArchiveViewName.Unset()
}

// GetSelectedDatastoreIdx returns the SelectedDatastoreIdx field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetSelectedDatastoreIdx() int64 {
	if o == nil || o.SelectedDatastoreIdx.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SelectedDatastoreIdx.Get()
}

// GetSelectedDatastoreIdxOk returns a tuple with the SelectedDatastoreIdx field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetSelectedDatastoreIdxOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SelectedDatastoreIdx.Get(), o.SelectedDatastoreIdx.IsSet()
}

// HasSelectedDatastoreIdx returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasSelectedDatastoreIdx() bool {
	if o != nil && o.SelectedDatastoreIdx.IsSet() {
		return true
	}

	return false
}

// SetSelectedDatastoreIdx gets a reference to the given NullableInt64 and assigns it to the SelectedDatastoreIdx field.
func (o *PerformRestoreTaskStateProto) SetSelectedDatastoreIdx(v int64) {
	o.SelectedDatastoreIdx.Set(&v)
}
// SetSelectedDatastoreIdxNil sets the value for SelectedDatastoreIdx to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetSelectedDatastoreIdxNil() {
	o.SelectedDatastoreIdx.Set(nil)
}

// UnsetSelectedDatastoreIdx ensures that no value is present for SelectedDatastoreIdx, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetSelectedDatastoreIdx() {
	o.SelectedDatastoreIdx.Unset()
}

// GetStubViewRelativeDirName returns the StubViewRelativeDirName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetStubViewRelativeDirName() string {
	if o == nil || o.StubViewRelativeDirName.Get() == nil {
		var ret string
		return ret
	}
	return *o.StubViewRelativeDirName.Get()
}

// GetStubViewRelativeDirNameOk returns a tuple with the StubViewRelativeDirName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetStubViewRelativeDirNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StubViewRelativeDirName.Get(), o.StubViewRelativeDirName.IsSet()
}

// HasStubViewRelativeDirName returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasStubViewRelativeDirName() bool {
	if o != nil && o.StubViewRelativeDirName.IsSet() {
		return true
	}

	return false
}

// SetStubViewRelativeDirName gets a reference to the given NullableString and assigns it to the StubViewRelativeDirName field.
func (o *PerformRestoreTaskStateProto) SetStubViewRelativeDirName(v string) {
	o.StubViewRelativeDirName.Set(&v)
}
// SetStubViewRelativeDirNameNil sets the value for StubViewRelativeDirName to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetStubViewRelativeDirNameNil() {
	o.StubViewRelativeDirName.Set(nil)
}

// UnsetStubViewRelativeDirName ensures that no value is present for StubViewRelativeDirName, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetStubViewRelativeDirName() {
	o.StubViewRelativeDirName.Unset()
}

// GetVaultRestoreParams returns the VaultRestoreParams field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetVaultRestoreParams() VaultParamsRestoreParams {
	if o == nil || o.VaultRestoreParams == nil {
		var ret VaultParamsRestoreParams
		return ret
	}
	return *o.VaultRestoreParams
}

// GetVaultRestoreParamsOk returns a tuple with the VaultRestoreParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetVaultRestoreParamsOk() (*VaultParamsRestoreParams, bool) {
	if o == nil || o.VaultRestoreParams == nil {
		return nil, false
	}
	return o.VaultRestoreParams, true
}

// HasVaultRestoreParams returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasVaultRestoreParams() bool {
	if o != nil && o.VaultRestoreParams != nil {
		return true
	}

	return false
}

// SetVaultRestoreParams gets a reference to the given VaultParamsRestoreParams and assigns it to the VaultRestoreParams field.
func (o *PerformRestoreTaskStateProto) SetVaultRestoreParams(v VaultParamsRestoreParams) {
	o.VaultRestoreParams = &v
}

// GetVcdConfig returns the VcdConfig field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetVcdConfig() RestoredObjectVCDConfigProto {
	if o == nil || o.VcdConfig == nil {
		var ret RestoredObjectVCDConfigProto
		return ret
	}
	return *o.VcdConfig
}

// GetVcdConfigOk returns a tuple with the VcdConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetVcdConfigOk() (*RestoredObjectVCDConfigProto, bool) {
	if o == nil || o.VcdConfig == nil {
		return nil, false
	}
	return o.VcdConfig, true
}

// HasVcdConfig returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasVcdConfig() bool {
	if o != nil && o.VcdConfig != nil {
		return true
	}

	return false
}

// SetVcdConfig gets a reference to the given RestoredObjectVCDConfigProto and assigns it to the VcdConfig field.
func (o *PerformRestoreTaskStateProto) SetVcdConfig(v RestoredObjectVCDConfigProto) {
	o.VcdConfig = &v
}

// GetVcdStorageProfileDatastoreMorefVec returns the VcdStorageProfileDatastoreMorefVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetVcdStorageProfileDatastoreMorefVec() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.VcdStorageProfileDatastoreMorefVec
}

// GetVcdStorageProfileDatastoreMorefVecOk returns a tuple with the VcdStorageProfileDatastoreMorefVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetVcdStorageProfileDatastoreMorefVecOk() (*[]string, bool) {
	if o == nil || o.VcdStorageProfileDatastoreMorefVec == nil {
		return nil, false
	}
	return &o.VcdStorageProfileDatastoreMorefVec, true
}

// HasVcdStorageProfileDatastoreMorefVec returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasVcdStorageProfileDatastoreMorefVec() bool {
	if o != nil && o.VcdStorageProfileDatastoreMorefVec != nil {
		return true
	}

	return false
}

// SetVcdStorageProfileDatastoreMorefVec gets a reference to the given []string and assigns it to the VcdStorageProfileDatastoreMorefVec field.
func (o *PerformRestoreTaskStateProto) SetVcdStorageProfileDatastoreMorefVec(v []string) {
	o.VcdStorageProfileDatastoreMorefVec = v
}

// GetViewBoxId returns the ViewBoxId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetViewBoxId() int64 {
	if o == nil || o.ViewBoxId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ViewBoxId.Get()
}

// GetViewBoxIdOk returns a tuple with the ViewBoxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetViewBoxIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewBoxId.Get(), o.ViewBoxId.IsSet()
}

// HasViewBoxId returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasViewBoxId() bool {
	if o != nil && o.ViewBoxId.IsSet() {
		return true
	}

	return false
}

// SetViewBoxId gets a reference to the given NullableInt64 and assigns it to the ViewBoxId field.
func (o *PerformRestoreTaskStateProto) SetViewBoxId(v int64) {
	o.ViewBoxId.Set(&v)
}
// SetViewBoxIdNil sets the value for ViewBoxId to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetViewBoxIdNil() {
	o.ViewBoxId.Set(nil)
}

// UnsetViewBoxId ensures that no value is present for ViewBoxId, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetViewBoxId() {
	o.ViewBoxId.Unset()
}

// GetViewNameDEPRECATED returns the ViewNameDEPRECATED field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetViewNameDEPRECATED() string {
	if o == nil || o.ViewNameDEPRECATED.Get() == nil {
		var ret string
		return ret
	}
	return *o.ViewNameDEPRECATED.Get()
}

// GetViewNameDEPRECATEDOk returns a tuple with the ViewNameDEPRECATED field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetViewNameDEPRECATEDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewNameDEPRECATED.Get(), o.ViewNameDEPRECATED.IsSet()
}

// HasViewNameDEPRECATED returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasViewNameDEPRECATED() bool {
	if o != nil && o.ViewNameDEPRECATED.IsSet() {
		return true
	}

	return false
}

// SetViewNameDEPRECATED gets a reference to the given NullableString and assigns it to the ViewNameDEPRECATED field.
func (o *PerformRestoreTaskStateProto) SetViewNameDEPRECATED(v string) {
	o.ViewNameDEPRECATED.Set(&v)
}
// SetViewNameDEPRECATEDNil sets the value for ViewNameDEPRECATED to be an explicit nil
func (o *PerformRestoreTaskStateProto) SetViewNameDEPRECATEDNil() {
	o.ViewNameDEPRECATED.Set(nil)
}

// UnsetViewNameDEPRECATED ensures that no value is present for ViewNameDEPRECATED, not even an explicit nil
func (o *PerformRestoreTaskStateProto) UnsetViewNameDEPRECATED() {
	o.ViewNameDEPRECATED.Unset()
}

// GetViewParams returns the ViewParams field value if set, zero value otherwise.
func (o *PerformRestoreTaskStateProto) GetViewParams() ViewParams {
	if o == nil || o.ViewParams == nil {
		var ret ViewParams
		return ret
	}
	return *o.ViewParams
}

// GetViewParamsOk returns a tuple with the ViewParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformRestoreTaskStateProto) GetViewParamsOk() (*ViewParams, bool) {
	if o == nil || o.ViewParams == nil {
		return nil, false
	}
	return o.ViewParams, true
}

// HasViewParams returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasViewParams() bool {
	if o != nil && o.ViewParams != nil {
		return true
	}

	return false
}

// SetViewParams gets a reference to the given ViewParams and assigns it to the ViewParams field.
func (o *PerformRestoreTaskStateProto) SetViewParams(v ViewParams) {
	o.ViewParams = &v
}

// GetVolumeInfoVec returns the VolumeInfoVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerformRestoreTaskStateProto) GetVolumeInfoVec() []VolumeInfo {
	if o == nil  {
		var ret []VolumeInfo
		return ret
	}
	return o.VolumeInfoVec
}

// GetVolumeInfoVecOk returns a tuple with the VolumeInfoVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerformRestoreTaskStateProto) GetVolumeInfoVecOk() (*[]VolumeInfo, bool) {
	if o == nil || o.VolumeInfoVec == nil {
		return nil, false
	}
	return &o.VolumeInfoVec, true
}

// HasVolumeInfoVec returns a boolean if a field has been set.
func (o *PerformRestoreTaskStateProto) HasVolumeInfoVec() bool {
	if o != nil && o.VolumeInfoVec != nil {
		return true
	}

	return false
}

// SetVolumeInfoVec gets a reference to the given []VolumeInfo and assigns it to the VolumeInfoVec field.
func (o *PerformRestoreTaskStateProto) SetVolumeInfoVec(v []VolumeInfo) {
	o.VolumeInfoVec = v
}

func (o PerformRestoreTaskStateProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActionExecutorTargetType.IsSet() {
		toSerialize["actionExecutorTargetType"] = o.ActionExecutorTargetType.Get()
	}
	if o.Base != nil {
		toSerialize["base"] = o.Base
	}
	if o.CanTeardown.IsSet() {
		toSerialize["canTeardown"] = o.CanTeardown.Get()
	}
	if o.CdpRestoreProgressMonitorTaskPath.IsSet() {
		toSerialize["cdpRestoreProgressMonitorTaskPath"] = o.CdpRestoreProgressMonitorTaskPath.Get()
	}
	if o.CdpRestoreTask != nil {
		toSerialize["cdpRestoreTask"] = o.CdpRestoreTask
	}
	if o.CdpRestoreTaskId.IsSet() {
		toSerialize["cdpRestoreTaskId"] = o.CdpRestoreTaskId.Get()
	}
	if o.CdpRestoreViewName.IsSet() {
		toSerialize["cdpRestoreViewName"] = o.CdpRestoreViewName.Get()
	}
	if o.ChildCloneTaskId.IsSet() {
		toSerialize["childCloneTaskId"] = o.ChildCloneTaskId.Get()
	}
	if o.ChildDestroyTaskId.IsSet() {
		toSerialize["childDestroyTaskId"] = o.ChildDestroyTaskId.Get()
	}
	if o.CloneAppViewInfo != nil {
		toSerialize["cloneAppViewInfo"] = o.CloneAppViewInfo
	}
	if o.CloudDeployInfo != nil {
		toSerialize["cloudDeployInfo"] = o.CloudDeployInfo
	}
	if o.ContinueRestoreOnError.IsSet() {
		toSerialize["continueRestoreOnError"] = o.ContinueRestoreOnError.Get()
	}
	if o.CreateView.IsSet() {
		toSerialize["createView"] = o.CreateView.Get()
	}
	if o.DatastoreEntityVec != nil {
		toSerialize["datastoreEntityVec"] = o.DatastoreEntityVec
	}
	if o.DeployVmsToCloudTaskState != nil {
		toSerialize["deployVmsToCloudTaskState"] = o.DeployVmsToCloudTaskState
	}
	if o.FolderEntity != nil {
		toSerialize["folderEntity"] = o.FolderEntity
	}
	if o.FullViewName.IsSet() {
		toSerialize["fullViewName"] = o.FullViewName.Get()
	}
	if o.IncludeVmConfig.IsSet() {
		toSerialize["includeVmConfig"] = o.IncludeVmConfig.Get()
	}
	if o.MountVolumesTaskState != nil {
		toSerialize["mountVolumesTaskState"] = o.MountVolumesTaskState
	}
	if o.NosqlConnectParams != nil {
		toSerialize["nosqlConnectParams"] = o.NosqlConnectParams
	}
	if o.NosqlRecoverJobParams != nil {
		toSerialize["nosqlRecoverJobParams"] = o.NosqlRecoverJobParams
	}
	if o.ObjectNameDEPRECATED.IsSet() {
		toSerialize["objectName_DEPRECATED"] = o.ObjectNameDEPRECATED.Get()
	}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if o.ObjectsProgressMonitorTaskPaths != nil {
		toSerialize["objectsProgressMonitorTaskPaths"] = o.ObjectsProgressMonitorTaskPaths
	}
	if o.ParentRestoreJobId.IsSet() {
		toSerialize["parentRestoreJobId"] = o.ParentRestoreJobId.Get()
	}
	if o.ParentRestoreTaskId.IsSet() {
		toSerialize["parentRestoreTaskId"] = o.ParentRestoreTaskId.Get()
	}
	if o.PathPrefixDEPRECATED.IsSet() {
		toSerialize["pathPrefix_DEPRECATED"] = o.PathPrefixDEPRECATED.Get()
	}
	if o.PhysicalFlrParallelRestore.IsSet() {
		toSerialize["physicalFlrParallelRestore"] = o.PhysicalFlrParallelRestore.Get()
	}
	if o.PhysicalFlrUseNewLockingMethod.IsSet() {
		toSerialize["physicalFlrUseNewLockingMethod"] = o.PhysicalFlrUseNewLockingMethod.Get()
	}
	if o.PowerStateConfig != nil {
		toSerialize["powerStateConfig"] = o.PowerStateConfig
	}
	if o.PreserveTags.IsSet() {
		toSerialize["preserveTags"] = o.PreserveTags.Get()
	}
	if o.ProgressMonitorTaskPath.IsSet() {
		toSerialize["progressMonitorTaskPath"] = o.ProgressMonitorTaskPath.Get()
	}
	if o.RecoverDisksTaskState != nil {
		toSerialize["recoverDisksTaskState"] = o.RecoverDisksTaskState
	}
	if o.RecoverVolumesTaskState != nil {
		toSerialize["recoverVolumesTaskState"] = o.RecoverVolumesTaskState
	}
	if o.RelatedRestoreTaskId.IsSet() {
		toSerialize["relatedRestoreTaskId"] = o.RelatedRestoreTaskId.Get()
	}
	if o.RenameRestoredObjectParam != nil {
		toSerialize["renameRestoredObjectParam"] = o.RenameRestoredObjectParam
	}
	if o.RenameRestoredVappParam != nil {
		toSerialize["renameRestoredVappParam"] = o.RenameRestoredVappParam
	}
	if o.ResourcePoolEntity != nil {
		toSerialize["resourcePoolEntity"] = o.ResourcePoolEntity
	}
	if o.RestoreAcropolisVmsParams != nil {
		toSerialize["restoreAcropolisVmsParams"] = o.RestoreAcropolisVmsParams
	}
	if o.RestoreAppTaskState != nil {
		toSerialize["restoreAppTaskState"] = o.RestoreAppTaskState
	}
	if o.RestoreFilesTaskState != nil {
		toSerialize["restoreFilesTaskState"] = o.RestoreFilesTaskState
	}
	if o.RestoreHypervVmParams != nil {
		toSerialize["restoreHypervVmParams"] = o.RestoreHypervVmParams
	}
	if o.RestoreInfo != nil {
		toSerialize["restoreInfo"] = o.RestoreInfo
	}
	if o.RestoreKubernetesNamespacesParams != nil {
		toSerialize["restoreKubernetesNamespacesParams"] = o.RestoreKubernetesNamespacesParams
	}
	if o.RestoreKvmVmsParams != nil {
		toSerialize["restoreKvmVmsParams"] = o.RestoreKvmVmsParams
	}
	if o.RestoreOneDriveParams != nil {
		toSerialize["restoreOneDriveParams"] = o.RestoreOneDriveParams
	}
	if o.RestoreOutlookParams != nil {
		toSerialize["restoreOutlookParams"] = o.RestoreOutlookParams
	}
	if o.RestoreParentSource != nil {
		toSerialize["restoreParentSource"] = o.RestoreParentSource
	}
	if o.RestorePublicFoldersParams != nil {
		toSerialize["restorePublicFoldersParams"] = o.RestorePublicFoldersParams
	}
	if o.RestoreSiteParams != nil {
		toSerialize["restoreSiteParams"] = o.RestoreSiteParams
	}
	if o.RestoreSubTaskVec != nil {
		toSerialize["restoreSubTaskVec"] = o.RestoreSubTaskVec
	}
	if o.RestoreTaskPurged.IsSet() {
		toSerialize["restoreTaskPurged"] = o.RestoreTaskPurged.Get()
	}
	if o.RestoreViewDatastoreEntity != nil {
		toSerialize["restoreViewDatastoreEntity"] = o.RestoreViewDatastoreEntity
	}
	if o.RestoreVmwareVmParams != nil {
		toSerialize["restoreVmwareVmParams"] = o.RestoreVmwareVmParams
	}
	if o.RestoredObjectsNetworkConfig != nil {
		toSerialize["restoredObjectsNetworkConfig"] = o.RestoredObjectsNetworkConfig
	}
	if o.RestoredToDifferentSource.IsSet() {
		toSerialize["restoredToDifferentSource"] = o.RestoredToDifferentSource.Get()
	}
	if o.RetrieveArchiveProgressMonitorTaskPath.IsSet() {
		toSerialize["retrieveArchiveProgressMonitorTaskPath"] = o.RetrieveArchiveProgressMonitorTaskPath.Get()
	}
	if o.RetrieveArchiveStubViewName.IsSet() {
		toSerialize["retrieveArchiveStubViewName"] = o.RetrieveArchiveStubViewName.Get()
	}
	if o.RetrieveArchiveTaskUidVec != nil {
		toSerialize["retrieveArchiveTaskUidVec"] = o.RetrieveArchiveTaskUidVec
	}
	if o.RetrieveArchiveTaskVec != nil {
		toSerialize["retrieveArchiveTaskVec"] = o.RetrieveArchiveTaskVec
	}
	if o.RetrieveArchiveViewName.IsSet() {
		toSerialize["retrieveArchiveViewName"] = o.RetrieveArchiveViewName.Get()
	}
	if o.SelectedDatastoreIdx.IsSet() {
		toSerialize["selectedDatastoreIdx"] = o.SelectedDatastoreIdx.Get()
	}
	if o.StubViewRelativeDirName.IsSet() {
		toSerialize["stubViewRelativeDirName"] = o.StubViewRelativeDirName.Get()
	}
	if o.VaultRestoreParams != nil {
		toSerialize["vaultRestoreParams"] = o.VaultRestoreParams
	}
	if o.VcdConfig != nil {
		toSerialize["vcdConfig"] = o.VcdConfig
	}
	if o.VcdStorageProfileDatastoreMorefVec != nil {
		toSerialize["vcdStorageProfileDatastoreMorefVec"] = o.VcdStorageProfileDatastoreMorefVec
	}
	if o.ViewBoxId.IsSet() {
		toSerialize["viewBoxId"] = o.ViewBoxId.Get()
	}
	if o.ViewNameDEPRECATED.IsSet() {
		toSerialize["viewName_DEPRECATED"] = o.ViewNameDEPRECATED.Get()
	}
	if o.ViewParams != nil {
		toSerialize["viewParams"] = o.ViewParams
	}
	if o.VolumeInfoVec != nil {
		toSerialize["volumeInfoVec"] = o.VolumeInfoVec
	}
	return json.Marshal(toSerialize)
}

type NullablePerformRestoreTaskStateProto struct {
	value *PerformRestoreTaskStateProto
	isSet bool
}

func (v NullablePerformRestoreTaskStateProto) Get() *PerformRestoreTaskStateProto {
	return v.value
}

func (v *NullablePerformRestoreTaskStateProto) Set(val *PerformRestoreTaskStateProto) {
	v.value = val
	v.isSet = true
}

func (v NullablePerformRestoreTaskStateProto) IsSet() bool {
	return v.isSet
}

func (v *NullablePerformRestoreTaskStateProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePerformRestoreTaskStateProto(val *PerformRestoreTaskStateProto) *NullablePerformRestoreTaskStateProto {
	return &NullablePerformRestoreTaskStateProto{value: val, isSet: true}
}

func (v NullablePerformRestoreTaskStateProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePerformRestoreTaskStateProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


