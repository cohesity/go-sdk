/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// AntivirusScanConfig Specifies the antivirus scan config settings for this View.
type AntivirusScanConfig struct {
	// Specifies whether block access to the file when antivirus scan fails.
	BlockAccessOnScanFailure NullableBool `json:"blockAccessOnScanFailure,omitempty"`
	// Specifies whether the antivirus service is enabled or not.
	IsEnabled NullableBool `json:"isEnabled,omitempty"`
	// Specifies maximum file size that will be sent to antivirus server for scanning. if greater than zero, the file size that exceeds this size would be skipped from virus scan.
	MaximumScanFileSize NullableInt64 `json:"maximumScanFileSize,omitempty"`
	ScanFilter *FileExtensionFilter `json:"scanFilter,omitempty"`
	// Specifies whether to scan a file when it is opened.
	ScanOnAccess NullableBool `json:"scanOnAccess,omitempty"`
	// Specifies whether to scan a file when it is closed after modify.
	ScanOnClose NullableBool `json:"scanOnClose,omitempty"`
	// Specifies the maximum amount of time that a scan can take before timing out.
	ScanTimeoutUsecs NullableInt32 `json:"scanTimeoutUsecs,omitempty"`
}

// NewAntivirusScanConfig instantiates a new AntivirusScanConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAntivirusScanConfig() *AntivirusScanConfig {
	this := AntivirusScanConfig{}
	return &this
}

// NewAntivirusScanConfigWithDefaults instantiates a new AntivirusScanConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAntivirusScanConfigWithDefaults() *AntivirusScanConfig {
	this := AntivirusScanConfig{}
	return &this
}

// GetBlockAccessOnScanFailure returns the BlockAccessOnScanFailure field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusScanConfig) GetBlockAccessOnScanFailure() bool {
	if o == nil || o.BlockAccessOnScanFailure.Get() == nil {
		var ret bool
		return ret
	}
	return *o.BlockAccessOnScanFailure.Get()
}

// GetBlockAccessOnScanFailureOk returns a tuple with the BlockAccessOnScanFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusScanConfig) GetBlockAccessOnScanFailureOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BlockAccessOnScanFailure.Get(), o.BlockAccessOnScanFailure.IsSet()
}

// HasBlockAccessOnScanFailure returns a boolean if a field has been set.
func (o *AntivirusScanConfig) HasBlockAccessOnScanFailure() bool {
	if o != nil && o.BlockAccessOnScanFailure.IsSet() {
		return true
	}

	return false
}

// SetBlockAccessOnScanFailure gets a reference to the given NullableBool and assigns it to the BlockAccessOnScanFailure field.
func (o *AntivirusScanConfig) SetBlockAccessOnScanFailure(v bool) {
	o.BlockAccessOnScanFailure.Set(&v)
}
// SetBlockAccessOnScanFailureNil sets the value for BlockAccessOnScanFailure to be an explicit nil
func (o *AntivirusScanConfig) SetBlockAccessOnScanFailureNil() {
	o.BlockAccessOnScanFailure.Set(nil)
}

// UnsetBlockAccessOnScanFailure ensures that no value is present for BlockAccessOnScanFailure, not even an explicit nil
func (o *AntivirusScanConfig) UnsetBlockAccessOnScanFailure() {
	o.BlockAccessOnScanFailure.Unset()
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusScanConfig) GetIsEnabled() bool {
	if o == nil || o.IsEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsEnabled.Get()
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusScanConfig) GetIsEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsEnabled.Get(), o.IsEnabled.IsSet()
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *AntivirusScanConfig) HasIsEnabled() bool {
	if o != nil && o.IsEnabled.IsSet() {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given NullableBool and assigns it to the IsEnabled field.
func (o *AntivirusScanConfig) SetIsEnabled(v bool) {
	o.IsEnabled.Set(&v)
}
// SetIsEnabledNil sets the value for IsEnabled to be an explicit nil
func (o *AntivirusScanConfig) SetIsEnabledNil() {
	o.IsEnabled.Set(nil)
}

// UnsetIsEnabled ensures that no value is present for IsEnabled, not even an explicit nil
func (o *AntivirusScanConfig) UnsetIsEnabled() {
	o.IsEnabled.Unset()
}

// GetMaximumScanFileSize returns the MaximumScanFileSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusScanConfig) GetMaximumScanFileSize() int64 {
	if o == nil || o.MaximumScanFileSize.Get() == nil {
		var ret int64
		return ret
	}
	return *o.MaximumScanFileSize.Get()
}

// GetMaximumScanFileSizeOk returns a tuple with the MaximumScanFileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusScanConfig) GetMaximumScanFileSizeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaximumScanFileSize.Get(), o.MaximumScanFileSize.IsSet()
}

// HasMaximumScanFileSize returns a boolean if a field has been set.
func (o *AntivirusScanConfig) HasMaximumScanFileSize() bool {
	if o != nil && o.MaximumScanFileSize.IsSet() {
		return true
	}

	return false
}

// SetMaximumScanFileSize gets a reference to the given NullableInt64 and assigns it to the MaximumScanFileSize field.
func (o *AntivirusScanConfig) SetMaximumScanFileSize(v int64) {
	o.MaximumScanFileSize.Set(&v)
}
// SetMaximumScanFileSizeNil sets the value for MaximumScanFileSize to be an explicit nil
func (o *AntivirusScanConfig) SetMaximumScanFileSizeNil() {
	o.MaximumScanFileSize.Set(nil)
}

// UnsetMaximumScanFileSize ensures that no value is present for MaximumScanFileSize, not even an explicit nil
func (o *AntivirusScanConfig) UnsetMaximumScanFileSize() {
	o.MaximumScanFileSize.Unset()
}

// GetScanFilter returns the ScanFilter field value if set, zero value otherwise.
func (o *AntivirusScanConfig) GetScanFilter() FileExtensionFilter {
	if o == nil || o.ScanFilter == nil {
		var ret FileExtensionFilter
		return ret
	}
	return *o.ScanFilter
}

// GetScanFilterOk returns a tuple with the ScanFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntivirusScanConfig) GetScanFilterOk() (*FileExtensionFilter, bool) {
	if o == nil || o.ScanFilter == nil {
		return nil, false
	}
	return o.ScanFilter, true
}

// HasScanFilter returns a boolean if a field has been set.
func (o *AntivirusScanConfig) HasScanFilter() bool {
	if o != nil && o.ScanFilter != nil {
		return true
	}

	return false
}

// SetScanFilter gets a reference to the given FileExtensionFilter and assigns it to the ScanFilter field.
func (o *AntivirusScanConfig) SetScanFilter(v FileExtensionFilter) {
	o.ScanFilter = &v
}

// GetScanOnAccess returns the ScanOnAccess field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusScanConfig) GetScanOnAccess() bool {
	if o == nil || o.ScanOnAccess.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ScanOnAccess.Get()
}

// GetScanOnAccessOk returns a tuple with the ScanOnAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusScanConfig) GetScanOnAccessOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ScanOnAccess.Get(), o.ScanOnAccess.IsSet()
}

// HasScanOnAccess returns a boolean if a field has been set.
func (o *AntivirusScanConfig) HasScanOnAccess() bool {
	if o != nil && o.ScanOnAccess.IsSet() {
		return true
	}

	return false
}

// SetScanOnAccess gets a reference to the given NullableBool and assigns it to the ScanOnAccess field.
func (o *AntivirusScanConfig) SetScanOnAccess(v bool) {
	o.ScanOnAccess.Set(&v)
}
// SetScanOnAccessNil sets the value for ScanOnAccess to be an explicit nil
func (o *AntivirusScanConfig) SetScanOnAccessNil() {
	o.ScanOnAccess.Set(nil)
}

// UnsetScanOnAccess ensures that no value is present for ScanOnAccess, not even an explicit nil
func (o *AntivirusScanConfig) UnsetScanOnAccess() {
	o.ScanOnAccess.Unset()
}

// GetScanOnClose returns the ScanOnClose field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusScanConfig) GetScanOnClose() bool {
	if o == nil || o.ScanOnClose.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ScanOnClose.Get()
}

// GetScanOnCloseOk returns a tuple with the ScanOnClose field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusScanConfig) GetScanOnCloseOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ScanOnClose.Get(), o.ScanOnClose.IsSet()
}

// HasScanOnClose returns a boolean if a field has been set.
func (o *AntivirusScanConfig) HasScanOnClose() bool {
	if o != nil && o.ScanOnClose.IsSet() {
		return true
	}

	return false
}

// SetScanOnClose gets a reference to the given NullableBool and assigns it to the ScanOnClose field.
func (o *AntivirusScanConfig) SetScanOnClose(v bool) {
	o.ScanOnClose.Set(&v)
}
// SetScanOnCloseNil sets the value for ScanOnClose to be an explicit nil
func (o *AntivirusScanConfig) SetScanOnCloseNil() {
	o.ScanOnClose.Set(nil)
}

// UnsetScanOnClose ensures that no value is present for ScanOnClose, not even an explicit nil
func (o *AntivirusScanConfig) UnsetScanOnClose() {
	o.ScanOnClose.Unset()
}

// GetScanTimeoutUsecs returns the ScanTimeoutUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AntivirusScanConfig) GetScanTimeoutUsecs() int32 {
	if o == nil || o.ScanTimeoutUsecs.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ScanTimeoutUsecs.Get()
}

// GetScanTimeoutUsecsOk returns a tuple with the ScanTimeoutUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AntivirusScanConfig) GetScanTimeoutUsecsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ScanTimeoutUsecs.Get(), o.ScanTimeoutUsecs.IsSet()
}

// HasScanTimeoutUsecs returns a boolean if a field has been set.
func (o *AntivirusScanConfig) HasScanTimeoutUsecs() bool {
	if o != nil && o.ScanTimeoutUsecs.IsSet() {
		return true
	}

	return false
}

// SetScanTimeoutUsecs gets a reference to the given NullableInt32 and assigns it to the ScanTimeoutUsecs field.
func (o *AntivirusScanConfig) SetScanTimeoutUsecs(v int32) {
	o.ScanTimeoutUsecs.Set(&v)
}
// SetScanTimeoutUsecsNil sets the value for ScanTimeoutUsecs to be an explicit nil
func (o *AntivirusScanConfig) SetScanTimeoutUsecsNil() {
	o.ScanTimeoutUsecs.Set(nil)
}

// UnsetScanTimeoutUsecs ensures that no value is present for ScanTimeoutUsecs, not even an explicit nil
func (o *AntivirusScanConfig) UnsetScanTimeoutUsecs() {
	o.ScanTimeoutUsecs.Unset()
}

func (o AntivirusScanConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BlockAccessOnScanFailure.IsSet() {
		toSerialize["blockAccessOnScanFailure"] = o.BlockAccessOnScanFailure.Get()
	}
	if o.IsEnabled.IsSet() {
		toSerialize["isEnabled"] = o.IsEnabled.Get()
	}
	if o.MaximumScanFileSize.IsSet() {
		toSerialize["maximumScanFileSize"] = o.MaximumScanFileSize.Get()
	}
	if o.ScanFilter != nil {
		toSerialize["scanFilter"] = o.ScanFilter
	}
	if o.ScanOnAccess.IsSet() {
		toSerialize["scanOnAccess"] = o.ScanOnAccess.Get()
	}
	if o.ScanOnClose.IsSet() {
		toSerialize["scanOnClose"] = o.ScanOnClose.Get()
	}
	if o.ScanTimeoutUsecs.IsSet() {
		toSerialize["scanTimeoutUsecs"] = o.ScanTimeoutUsecs.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAntivirusScanConfig struct {
	value *AntivirusScanConfig
	isSet bool
}

func (v NullableAntivirusScanConfig) Get() *AntivirusScanConfig {
	return v.value
}

func (v *NullableAntivirusScanConfig) Set(val *AntivirusScanConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAntivirusScanConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAntivirusScanConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAntivirusScanConfig(val *AntivirusScanConfig) *NullableAntivirusScanConfig {
	return &NullableAntivirusScanConfig{value: val, isSet: true}
}

func (v NullableAntivirusScanConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAntivirusScanConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


