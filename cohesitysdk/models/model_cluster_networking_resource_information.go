/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ClusterNetworkingResourceInformation Specifies a resource with IP address.
type ClusterNetworkingResourceInformation struct {
	// The endpoints by which the resource is accessible.
	Endpoints []ClusterNetworkingEndpoint `json:"endpoints,omitempty"`
	// The type of the resource.
	Type NullableString `json:"type,omitempty"`
}

// NewClusterNetworkingResourceInformation instantiates a new ClusterNetworkingResourceInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterNetworkingResourceInformation() *ClusterNetworkingResourceInformation {
	this := ClusterNetworkingResourceInformation{}
	return &this
}

// NewClusterNetworkingResourceInformationWithDefaults instantiates a new ClusterNetworkingResourceInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterNetworkingResourceInformationWithDefaults() *ClusterNetworkingResourceInformation {
	this := ClusterNetworkingResourceInformation{}
	return &this
}

// GetEndpoints returns the Endpoints field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterNetworkingResourceInformation) GetEndpoints() []ClusterNetworkingEndpoint {
	if o == nil  {
		var ret []ClusterNetworkingEndpoint
		return ret
	}
	return o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterNetworkingResourceInformation) GetEndpointsOk() (*[]ClusterNetworkingEndpoint, bool) {
	if o == nil || o.Endpoints == nil {
		return nil, false
	}
	return &o.Endpoints, true
}

// HasEndpoints returns a boolean if a field has been set.
func (o *ClusterNetworkingResourceInformation) HasEndpoints() bool {
	if o != nil && o.Endpoints != nil {
		return true
	}

	return false
}

// SetEndpoints gets a reference to the given []ClusterNetworkingEndpoint and assigns it to the Endpoints field.
func (o *ClusterNetworkingResourceInformation) SetEndpoints(v []ClusterNetworkingEndpoint) {
	o.Endpoints = v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterNetworkingResourceInformation) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterNetworkingResourceInformation) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *ClusterNetworkingResourceInformation) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *ClusterNetworkingResourceInformation) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *ClusterNetworkingResourceInformation) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *ClusterNetworkingResourceInformation) UnsetType() {
	o.Type.Unset()
}

func (o ClusterNetworkingResourceInformation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Endpoints != nil {
		toSerialize["endpoints"] = o.Endpoints
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableClusterNetworkingResourceInformation struct {
	value *ClusterNetworkingResourceInformation
	isSet bool
}

func (v NullableClusterNetworkingResourceInformation) Get() *ClusterNetworkingResourceInformation {
	return v.value
}

func (v *NullableClusterNetworkingResourceInformation) Set(val *ClusterNetworkingResourceInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterNetworkingResourceInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterNetworkingResourceInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterNetworkingResourceInformation(val *ClusterNetworkingResourceInformation) *NullableClusterNetworkingResourceInformation {
	return &NullableClusterNetworkingResourceInformation{value: val, isSet: true}
}

func (v NullableClusterNetworkingResourceInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterNetworkingResourceInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


