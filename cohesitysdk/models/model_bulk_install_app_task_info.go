/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// BulkInstallAppTaskInfo Parameters for a bulk install app task.
type BulkInstallAppTaskInfo struct {
	// Job id of the task.
	JobId NullableString `json:"jobId,omitempty"`
	// Number of machines on which task is started.
	NumMachinesFailed NullableInt32 `json:"numMachinesFailed,omitempty"`
	// Number of machines on which task is started.
	NumMachinesPassed NullableInt32 `json:"numMachinesPassed,omitempty"`
	// Number of machines on which task is started.
	NumMachinesTotal NullableInt32 `json:"numMachinesTotal,omitempty"`
	// Application being registered. This param is used to indicate the app for which the job is created. 'oracle' indicates that the job was created for oracle app. 'msSql' indicates that the job was created for msSql app. 'physical' indicates that the job was created for physical machine.
	RegisteringApp NullableString `json:"registeringApp,omitempty"`
	// Current state of the task. This param is used to indicate the state of the job created by the bulk install app. 'started' indicates that the job has been started by the user. 'completed' indicates that the job has completed.
	State NullableString `json:"state,omitempty"`
}

// NewBulkInstallAppTaskInfo instantiates a new BulkInstallAppTaskInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkInstallAppTaskInfo() *BulkInstallAppTaskInfo {
	this := BulkInstallAppTaskInfo{}
	return &this
}

// NewBulkInstallAppTaskInfoWithDefaults instantiates a new BulkInstallAppTaskInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkInstallAppTaskInfoWithDefaults() *BulkInstallAppTaskInfo {
	this := BulkInstallAppTaskInfo{}
	return &this
}

// GetJobId returns the JobId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BulkInstallAppTaskInfo) GetJobId() string {
	if o == nil || o.JobId.Get() == nil {
		var ret string
		return ret
	}
	return *o.JobId.Get()
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BulkInstallAppTaskInfo) GetJobIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobId.Get(), o.JobId.IsSet()
}

// HasJobId returns a boolean if a field has been set.
func (o *BulkInstallAppTaskInfo) HasJobId() bool {
	if o != nil && o.JobId.IsSet() {
		return true
	}

	return false
}

// SetJobId gets a reference to the given NullableString and assigns it to the JobId field.
func (o *BulkInstallAppTaskInfo) SetJobId(v string) {
	o.JobId.Set(&v)
}
// SetJobIdNil sets the value for JobId to be an explicit nil
func (o *BulkInstallAppTaskInfo) SetJobIdNil() {
	o.JobId.Set(nil)
}

// UnsetJobId ensures that no value is present for JobId, not even an explicit nil
func (o *BulkInstallAppTaskInfo) UnsetJobId() {
	o.JobId.Unset()
}

// GetNumMachinesFailed returns the NumMachinesFailed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BulkInstallAppTaskInfo) GetNumMachinesFailed() int32 {
	if o == nil || o.NumMachinesFailed.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NumMachinesFailed.Get()
}

// GetNumMachinesFailedOk returns a tuple with the NumMachinesFailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BulkInstallAppTaskInfo) GetNumMachinesFailedOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumMachinesFailed.Get(), o.NumMachinesFailed.IsSet()
}

// HasNumMachinesFailed returns a boolean if a field has been set.
func (o *BulkInstallAppTaskInfo) HasNumMachinesFailed() bool {
	if o != nil && o.NumMachinesFailed.IsSet() {
		return true
	}

	return false
}

// SetNumMachinesFailed gets a reference to the given NullableInt32 and assigns it to the NumMachinesFailed field.
func (o *BulkInstallAppTaskInfo) SetNumMachinesFailed(v int32) {
	o.NumMachinesFailed.Set(&v)
}
// SetNumMachinesFailedNil sets the value for NumMachinesFailed to be an explicit nil
func (o *BulkInstallAppTaskInfo) SetNumMachinesFailedNil() {
	o.NumMachinesFailed.Set(nil)
}

// UnsetNumMachinesFailed ensures that no value is present for NumMachinesFailed, not even an explicit nil
func (o *BulkInstallAppTaskInfo) UnsetNumMachinesFailed() {
	o.NumMachinesFailed.Unset()
}

// GetNumMachinesPassed returns the NumMachinesPassed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BulkInstallAppTaskInfo) GetNumMachinesPassed() int32 {
	if o == nil || o.NumMachinesPassed.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NumMachinesPassed.Get()
}

// GetNumMachinesPassedOk returns a tuple with the NumMachinesPassed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BulkInstallAppTaskInfo) GetNumMachinesPassedOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumMachinesPassed.Get(), o.NumMachinesPassed.IsSet()
}

// HasNumMachinesPassed returns a boolean if a field has been set.
func (o *BulkInstallAppTaskInfo) HasNumMachinesPassed() bool {
	if o != nil && o.NumMachinesPassed.IsSet() {
		return true
	}

	return false
}

// SetNumMachinesPassed gets a reference to the given NullableInt32 and assigns it to the NumMachinesPassed field.
func (o *BulkInstallAppTaskInfo) SetNumMachinesPassed(v int32) {
	o.NumMachinesPassed.Set(&v)
}
// SetNumMachinesPassedNil sets the value for NumMachinesPassed to be an explicit nil
func (o *BulkInstallAppTaskInfo) SetNumMachinesPassedNil() {
	o.NumMachinesPassed.Set(nil)
}

// UnsetNumMachinesPassed ensures that no value is present for NumMachinesPassed, not even an explicit nil
func (o *BulkInstallAppTaskInfo) UnsetNumMachinesPassed() {
	o.NumMachinesPassed.Unset()
}

// GetNumMachinesTotal returns the NumMachinesTotal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BulkInstallAppTaskInfo) GetNumMachinesTotal() int32 {
	if o == nil || o.NumMachinesTotal.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NumMachinesTotal.Get()
}

// GetNumMachinesTotalOk returns a tuple with the NumMachinesTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BulkInstallAppTaskInfo) GetNumMachinesTotalOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumMachinesTotal.Get(), o.NumMachinesTotal.IsSet()
}

// HasNumMachinesTotal returns a boolean if a field has been set.
func (o *BulkInstallAppTaskInfo) HasNumMachinesTotal() bool {
	if o != nil && o.NumMachinesTotal.IsSet() {
		return true
	}

	return false
}

// SetNumMachinesTotal gets a reference to the given NullableInt32 and assigns it to the NumMachinesTotal field.
func (o *BulkInstallAppTaskInfo) SetNumMachinesTotal(v int32) {
	o.NumMachinesTotal.Set(&v)
}
// SetNumMachinesTotalNil sets the value for NumMachinesTotal to be an explicit nil
func (o *BulkInstallAppTaskInfo) SetNumMachinesTotalNil() {
	o.NumMachinesTotal.Set(nil)
}

// UnsetNumMachinesTotal ensures that no value is present for NumMachinesTotal, not even an explicit nil
func (o *BulkInstallAppTaskInfo) UnsetNumMachinesTotal() {
	o.NumMachinesTotal.Unset()
}

// GetRegisteringApp returns the RegisteringApp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BulkInstallAppTaskInfo) GetRegisteringApp() string {
	if o == nil || o.RegisteringApp.Get() == nil {
		var ret string
		return ret
	}
	return *o.RegisteringApp.Get()
}

// GetRegisteringAppOk returns a tuple with the RegisteringApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BulkInstallAppTaskInfo) GetRegisteringAppOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RegisteringApp.Get(), o.RegisteringApp.IsSet()
}

// HasRegisteringApp returns a boolean if a field has been set.
func (o *BulkInstallAppTaskInfo) HasRegisteringApp() bool {
	if o != nil && o.RegisteringApp.IsSet() {
		return true
	}

	return false
}

// SetRegisteringApp gets a reference to the given NullableString and assigns it to the RegisteringApp field.
func (o *BulkInstallAppTaskInfo) SetRegisteringApp(v string) {
	o.RegisteringApp.Set(&v)
}
// SetRegisteringAppNil sets the value for RegisteringApp to be an explicit nil
func (o *BulkInstallAppTaskInfo) SetRegisteringAppNil() {
	o.RegisteringApp.Set(nil)
}

// UnsetRegisteringApp ensures that no value is present for RegisteringApp, not even an explicit nil
func (o *BulkInstallAppTaskInfo) UnsetRegisteringApp() {
	o.RegisteringApp.Unset()
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BulkInstallAppTaskInfo) GetState() string {
	if o == nil || o.State.Get() == nil {
		var ret string
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BulkInstallAppTaskInfo) GetStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *BulkInstallAppTaskInfo) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableString and assigns it to the State field.
func (o *BulkInstallAppTaskInfo) SetState(v string) {
	o.State.Set(&v)
}
// SetStateNil sets the value for State to be an explicit nil
func (o *BulkInstallAppTaskInfo) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *BulkInstallAppTaskInfo) UnsetState() {
	o.State.Unset()
}

func (o BulkInstallAppTaskInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.JobId.IsSet() {
		toSerialize["jobId"] = o.JobId.Get()
	}
	if o.NumMachinesFailed.IsSet() {
		toSerialize["numMachinesFailed"] = o.NumMachinesFailed.Get()
	}
	if o.NumMachinesPassed.IsSet() {
		toSerialize["numMachinesPassed"] = o.NumMachinesPassed.Get()
	}
	if o.NumMachinesTotal.IsSet() {
		toSerialize["numMachinesTotal"] = o.NumMachinesTotal.Get()
	}
	if o.RegisteringApp.IsSet() {
		toSerialize["registeringApp"] = o.RegisteringApp.Get()
	}
	if o.State.IsSet() {
		toSerialize["state"] = o.State.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableBulkInstallAppTaskInfo struct {
	value *BulkInstallAppTaskInfo
	isSet bool
}

func (v NullableBulkInstallAppTaskInfo) Get() *BulkInstallAppTaskInfo {
	return v.value
}

func (v *NullableBulkInstallAppTaskInfo) Set(val *BulkInstallAppTaskInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkInstallAppTaskInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkInstallAppTaskInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkInstallAppTaskInfo(val *BulkInstallAppTaskInfo) *NullableBulkInstallAppTaskInfo {
	return &NullableBulkInstallAppTaskInfo{value: val, isSet: true}
}

func (v NullableBulkInstallAppTaskInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkInstallAppTaskInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


