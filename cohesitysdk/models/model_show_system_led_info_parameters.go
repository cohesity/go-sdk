/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ShowSystemLedInfoParameters Specifies the local or remote node for which system LED details are requested.
type ShowSystemLedInfoParameters struct {
	// Optional field. If Node IP is not specified, LED info for the current node is displayed.
	NodeIp NullableString `json:"nodeIp,omitempty"`
}

// NewShowSystemLedInfoParameters instantiates a new ShowSystemLedInfoParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShowSystemLedInfoParameters() *ShowSystemLedInfoParameters {
	this := ShowSystemLedInfoParameters{}
	return &this
}

// NewShowSystemLedInfoParametersWithDefaults instantiates a new ShowSystemLedInfoParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShowSystemLedInfoParametersWithDefaults() *ShowSystemLedInfoParameters {
	this := ShowSystemLedInfoParameters{}
	return &this
}

// GetNodeIp returns the NodeIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShowSystemLedInfoParameters) GetNodeIp() string {
	if o == nil || o.NodeIp.Get() == nil {
		var ret string
		return ret
	}
	return *o.NodeIp.Get()
}

// GetNodeIpOk returns a tuple with the NodeIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShowSystemLedInfoParameters) GetNodeIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NodeIp.Get(), o.NodeIp.IsSet()
}

// HasNodeIp returns a boolean if a field has been set.
func (o *ShowSystemLedInfoParameters) HasNodeIp() bool {
	if o != nil && o.NodeIp.IsSet() {
		return true
	}

	return false
}

// SetNodeIp gets a reference to the given NullableString and assigns it to the NodeIp field.
func (o *ShowSystemLedInfoParameters) SetNodeIp(v string) {
	o.NodeIp.Set(&v)
}
// SetNodeIpNil sets the value for NodeIp to be an explicit nil
func (o *ShowSystemLedInfoParameters) SetNodeIpNil() {
	o.NodeIp.Set(nil)
}

// UnsetNodeIp ensures that no value is present for NodeIp, not even an explicit nil
func (o *ShowSystemLedInfoParameters) UnsetNodeIp() {
	o.NodeIp.Unset()
}

func (o ShowSystemLedInfoParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NodeIp.IsSet() {
		toSerialize["nodeIp"] = o.NodeIp.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableShowSystemLedInfoParameters struct {
	value *ShowSystemLedInfoParameters
	isSet bool
}

func (v NullableShowSystemLedInfoParameters) Get() *ShowSystemLedInfoParameters {
	return v.value
}

func (v *NullableShowSystemLedInfoParameters) Set(val *ShowSystemLedInfoParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableShowSystemLedInfoParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableShowSystemLedInfoParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShowSystemLedInfoParameters(val *ShowSystemLedInfoParameters) *NullableShowSystemLedInfoParameters {
	return &NullableShowSystemLedInfoParameters{value: val, isSet: true}
}

func (v NullableShowSystemLedInfoParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShowSystemLedInfoParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


