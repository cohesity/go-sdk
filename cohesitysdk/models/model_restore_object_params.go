/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// RestoreObjectParams struct for RestoreObjectParams
type RestoreObjectParams struct {
	// The action to perform.
	Action NullableInt32 `json:"action,omitempty"`
	DatastoreEntity *EntityProto `json:"datastoreEntity,omitempty"`
	PowerStateConfig *PowerStateConfigProto `json:"powerStateConfig,omitempty"`
	RenameRestoredObjectParam *RenameObjectParamProto `json:"renameRestoredObjectParam,omitempty"`
	ResourcePoolEntity *EntityProto `json:"resourcePoolEntity,omitempty"`
	RestoreParentSource *EntityProto `json:"restoreParentSource,omitempty"`
	RestoredObjectsNetworkConfig *RestoredObjectNetworkConfigProto `json:"restoredObjectsNetworkConfig,omitempty"`
	// Target view into which the objects are to be cloned.
	ViewName NullableString `json:"viewName,omitempty"`
}

// NewRestoreObjectParams instantiates a new RestoreObjectParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreObjectParams() *RestoreObjectParams {
	this := RestoreObjectParams{}
	return &this
}

// NewRestoreObjectParamsWithDefaults instantiates a new RestoreObjectParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreObjectParamsWithDefaults() *RestoreObjectParams {
	this := RestoreObjectParams{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreObjectParams) GetAction() int32 {
	if o == nil || o.Action.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Action.Get()
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreObjectParams) GetActionOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Action.Get(), o.Action.IsSet()
}

// HasAction returns a boolean if a field has been set.
func (o *RestoreObjectParams) HasAction() bool {
	if o != nil && o.Action.IsSet() {
		return true
	}

	return false
}

// SetAction gets a reference to the given NullableInt32 and assigns it to the Action field.
func (o *RestoreObjectParams) SetAction(v int32) {
	o.Action.Set(&v)
}
// SetActionNil sets the value for Action to be an explicit nil
func (o *RestoreObjectParams) SetActionNil() {
	o.Action.Set(nil)
}

// UnsetAction ensures that no value is present for Action, not even an explicit nil
func (o *RestoreObjectParams) UnsetAction() {
	o.Action.Unset()
}

// GetDatastoreEntity returns the DatastoreEntity field value if set, zero value otherwise.
func (o *RestoreObjectParams) GetDatastoreEntity() EntityProto {
	if o == nil || o.DatastoreEntity == nil {
		var ret EntityProto
		return ret
	}
	return *o.DatastoreEntity
}

// GetDatastoreEntityOk returns a tuple with the DatastoreEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreObjectParams) GetDatastoreEntityOk() (*EntityProto, bool) {
	if o == nil || o.DatastoreEntity == nil {
		return nil, false
	}
	return o.DatastoreEntity, true
}

// HasDatastoreEntity returns a boolean if a field has been set.
func (o *RestoreObjectParams) HasDatastoreEntity() bool {
	if o != nil && o.DatastoreEntity != nil {
		return true
	}

	return false
}

// SetDatastoreEntity gets a reference to the given EntityProto and assigns it to the DatastoreEntity field.
func (o *RestoreObjectParams) SetDatastoreEntity(v EntityProto) {
	o.DatastoreEntity = &v
}

// GetPowerStateConfig returns the PowerStateConfig field value if set, zero value otherwise.
func (o *RestoreObjectParams) GetPowerStateConfig() PowerStateConfigProto {
	if o == nil || o.PowerStateConfig == nil {
		var ret PowerStateConfigProto
		return ret
	}
	return *o.PowerStateConfig
}

// GetPowerStateConfigOk returns a tuple with the PowerStateConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreObjectParams) GetPowerStateConfigOk() (*PowerStateConfigProto, bool) {
	if o == nil || o.PowerStateConfig == nil {
		return nil, false
	}
	return o.PowerStateConfig, true
}

// HasPowerStateConfig returns a boolean if a field has been set.
func (o *RestoreObjectParams) HasPowerStateConfig() bool {
	if o != nil && o.PowerStateConfig != nil {
		return true
	}

	return false
}

// SetPowerStateConfig gets a reference to the given PowerStateConfigProto and assigns it to the PowerStateConfig field.
func (o *RestoreObjectParams) SetPowerStateConfig(v PowerStateConfigProto) {
	o.PowerStateConfig = &v
}

// GetRenameRestoredObjectParam returns the RenameRestoredObjectParam field value if set, zero value otherwise.
func (o *RestoreObjectParams) GetRenameRestoredObjectParam() RenameObjectParamProto {
	if o == nil || o.RenameRestoredObjectParam == nil {
		var ret RenameObjectParamProto
		return ret
	}
	return *o.RenameRestoredObjectParam
}

// GetRenameRestoredObjectParamOk returns a tuple with the RenameRestoredObjectParam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreObjectParams) GetRenameRestoredObjectParamOk() (*RenameObjectParamProto, bool) {
	if o == nil || o.RenameRestoredObjectParam == nil {
		return nil, false
	}
	return o.RenameRestoredObjectParam, true
}

// HasRenameRestoredObjectParam returns a boolean if a field has been set.
func (o *RestoreObjectParams) HasRenameRestoredObjectParam() bool {
	if o != nil && o.RenameRestoredObjectParam != nil {
		return true
	}

	return false
}

// SetRenameRestoredObjectParam gets a reference to the given RenameObjectParamProto and assigns it to the RenameRestoredObjectParam field.
func (o *RestoreObjectParams) SetRenameRestoredObjectParam(v RenameObjectParamProto) {
	o.RenameRestoredObjectParam = &v
}

// GetResourcePoolEntity returns the ResourcePoolEntity field value if set, zero value otherwise.
func (o *RestoreObjectParams) GetResourcePoolEntity() EntityProto {
	if o == nil || o.ResourcePoolEntity == nil {
		var ret EntityProto
		return ret
	}
	return *o.ResourcePoolEntity
}

// GetResourcePoolEntityOk returns a tuple with the ResourcePoolEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreObjectParams) GetResourcePoolEntityOk() (*EntityProto, bool) {
	if o == nil || o.ResourcePoolEntity == nil {
		return nil, false
	}
	return o.ResourcePoolEntity, true
}

// HasResourcePoolEntity returns a boolean if a field has been set.
func (o *RestoreObjectParams) HasResourcePoolEntity() bool {
	if o != nil && o.ResourcePoolEntity != nil {
		return true
	}

	return false
}

// SetResourcePoolEntity gets a reference to the given EntityProto and assigns it to the ResourcePoolEntity field.
func (o *RestoreObjectParams) SetResourcePoolEntity(v EntityProto) {
	o.ResourcePoolEntity = &v
}

// GetRestoreParentSource returns the RestoreParentSource field value if set, zero value otherwise.
func (o *RestoreObjectParams) GetRestoreParentSource() EntityProto {
	if o == nil || o.RestoreParentSource == nil {
		var ret EntityProto
		return ret
	}
	return *o.RestoreParentSource
}

// GetRestoreParentSourceOk returns a tuple with the RestoreParentSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreObjectParams) GetRestoreParentSourceOk() (*EntityProto, bool) {
	if o == nil || o.RestoreParentSource == nil {
		return nil, false
	}
	return o.RestoreParentSource, true
}

// HasRestoreParentSource returns a boolean if a field has been set.
func (o *RestoreObjectParams) HasRestoreParentSource() bool {
	if o != nil && o.RestoreParentSource != nil {
		return true
	}

	return false
}

// SetRestoreParentSource gets a reference to the given EntityProto and assigns it to the RestoreParentSource field.
func (o *RestoreObjectParams) SetRestoreParentSource(v EntityProto) {
	o.RestoreParentSource = &v
}

// GetRestoredObjectsNetworkConfig returns the RestoredObjectsNetworkConfig field value if set, zero value otherwise.
func (o *RestoreObjectParams) GetRestoredObjectsNetworkConfig() RestoredObjectNetworkConfigProto {
	if o == nil || o.RestoredObjectsNetworkConfig == nil {
		var ret RestoredObjectNetworkConfigProto
		return ret
	}
	return *o.RestoredObjectsNetworkConfig
}

// GetRestoredObjectsNetworkConfigOk returns a tuple with the RestoredObjectsNetworkConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreObjectParams) GetRestoredObjectsNetworkConfigOk() (*RestoredObjectNetworkConfigProto, bool) {
	if o == nil || o.RestoredObjectsNetworkConfig == nil {
		return nil, false
	}
	return o.RestoredObjectsNetworkConfig, true
}

// HasRestoredObjectsNetworkConfig returns a boolean if a field has been set.
func (o *RestoreObjectParams) HasRestoredObjectsNetworkConfig() bool {
	if o != nil && o.RestoredObjectsNetworkConfig != nil {
		return true
	}

	return false
}

// SetRestoredObjectsNetworkConfig gets a reference to the given RestoredObjectNetworkConfigProto and assigns it to the RestoredObjectsNetworkConfig field.
func (o *RestoreObjectParams) SetRestoredObjectsNetworkConfig(v RestoredObjectNetworkConfigProto) {
	o.RestoredObjectsNetworkConfig = &v
}

// GetViewName returns the ViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreObjectParams) GetViewName() string {
	if o == nil || o.ViewName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ViewName.Get()
}

// GetViewNameOk returns a tuple with the ViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreObjectParams) GetViewNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewName.Get(), o.ViewName.IsSet()
}

// HasViewName returns a boolean if a field has been set.
func (o *RestoreObjectParams) HasViewName() bool {
	if o != nil && o.ViewName.IsSet() {
		return true
	}

	return false
}

// SetViewName gets a reference to the given NullableString and assigns it to the ViewName field.
func (o *RestoreObjectParams) SetViewName(v string) {
	o.ViewName.Set(&v)
}
// SetViewNameNil sets the value for ViewName to be an explicit nil
func (o *RestoreObjectParams) SetViewNameNil() {
	o.ViewName.Set(nil)
}

// UnsetViewName ensures that no value is present for ViewName, not even an explicit nil
func (o *RestoreObjectParams) UnsetViewName() {
	o.ViewName.Unset()
}

func (o RestoreObjectParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action.IsSet() {
		toSerialize["action"] = o.Action.Get()
	}
	if o.DatastoreEntity != nil {
		toSerialize["datastoreEntity"] = o.DatastoreEntity
	}
	if o.PowerStateConfig != nil {
		toSerialize["powerStateConfig"] = o.PowerStateConfig
	}
	if o.RenameRestoredObjectParam != nil {
		toSerialize["renameRestoredObjectParam"] = o.RenameRestoredObjectParam
	}
	if o.ResourcePoolEntity != nil {
		toSerialize["resourcePoolEntity"] = o.ResourcePoolEntity
	}
	if o.RestoreParentSource != nil {
		toSerialize["restoreParentSource"] = o.RestoreParentSource
	}
	if o.RestoredObjectsNetworkConfig != nil {
		toSerialize["restoredObjectsNetworkConfig"] = o.RestoredObjectsNetworkConfig
	}
	if o.ViewName.IsSet() {
		toSerialize["viewName"] = o.ViewName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreObjectParams struct {
	value *RestoreObjectParams
	isSet bool
}

func (v NullableRestoreObjectParams) Get() *RestoreObjectParams {
	return v.value
}

func (v *NullableRestoreObjectParams) Set(val *RestoreObjectParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreObjectParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreObjectParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreObjectParams(val *RestoreObjectParams) *NullableRestoreObjectParams {
	return &NullableRestoreObjectParams{value: val, isSet: true}
}

func (v NullableRestoreObjectParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreObjectParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


