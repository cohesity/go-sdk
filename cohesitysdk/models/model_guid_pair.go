/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// GuidPair Represents the guid pair of an AD Object.
type GuidPair struct {
	// Specifies the guid of an AD object in the Production AD.
	DestGuid NullableString `json:"destGuid,omitempty"`
	// Specifies the guid of an AD object in the Snapshot AD.
	SourceGuid NullableString `json:"sourceGuid,omitempty"`
}

// NewGuidPair instantiates a new GuidPair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuidPair() *GuidPair {
	this := GuidPair{}
	return &this
}

// NewGuidPairWithDefaults instantiates a new GuidPair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuidPairWithDefaults() *GuidPair {
	this := GuidPair{}
	return &this
}

// GetDestGuid returns the DestGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidPair) GetDestGuid() string {
	if o == nil || o.DestGuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.DestGuid.Get()
}

// GetDestGuidOk returns a tuple with the DestGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidPair) GetDestGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DestGuid.Get(), o.DestGuid.IsSet()
}

// HasDestGuid returns a boolean if a field has been set.
func (o *GuidPair) HasDestGuid() bool {
	if o != nil && o.DestGuid.IsSet() {
		return true
	}

	return false
}

// SetDestGuid gets a reference to the given NullableString and assigns it to the DestGuid field.
func (o *GuidPair) SetDestGuid(v string) {
	o.DestGuid.Set(&v)
}
// SetDestGuidNil sets the value for DestGuid to be an explicit nil
func (o *GuidPair) SetDestGuidNil() {
	o.DestGuid.Set(nil)
}

// UnsetDestGuid ensures that no value is present for DestGuid, not even an explicit nil
func (o *GuidPair) UnsetDestGuid() {
	o.DestGuid.Unset()
}

// GetSourceGuid returns the SourceGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidPair) GetSourceGuid() string {
	if o == nil || o.SourceGuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceGuid.Get()
}

// GetSourceGuidOk returns a tuple with the SourceGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidPair) GetSourceGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceGuid.Get(), o.SourceGuid.IsSet()
}

// HasSourceGuid returns a boolean if a field has been set.
func (o *GuidPair) HasSourceGuid() bool {
	if o != nil && o.SourceGuid.IsSet() {
		return true
	}

	return false
}

// SetSourceGuid gets a reference to the given NullableString and assigns it to the SourceGuid field.
func (o *GuidPair) SetSourceGuid(v string) {
	o.SourceGuid.Set(&v)
}
// SetSourceGuidNil sets the value for SourceGuid to be an explicit nil
func (o *GuidPair) SetSourceGuidNil() {
	o.SourceGuid.Set(nil)
}

// UnsetSourceGuid ensures that no value is present for SourceGuid, not even an explicit nil
func (o *GuidPair) UnsetSourceGuid() {
	o.SourceGuid.Unset()
}

func (o GuidPair) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DestGuid.IsSet() {
		toSerialize["destGuid"] = o.DestGuid.Get()
	}
	if o.SourceGuid.IsSet() {
		toSerialize["sourceGuid"] = o.SourceGuid.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGuidPair struct {
	value *GuidPair
	isSet bool
}

func (v NullableGuidPair) Get() *GuidPair {
	return v.value
}

func (v *NullableGuidPair) Set(val *GuidPair) {
	v.value = val
	v.isSet = true
}

func (v NullableGuidPair) IsSet() bool {
	return v.isSet
}

func (v *NullableGuidPair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuidPair(val *GuidPair) *NullableGuidPair {
	return &NullableGuidPair{value: val, isSet: true}
}

func (v NullableGuidPair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuidPair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


