/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// NetworkMappingProto struct for NetworkMappingProto
type NetworkMappingProto struct {
	// This can be set to true to indicate that the attached network should be left in disabled state. This value takes priority over the value in RestoredObjectNetworkConfigProto.
	DisableNetwork NullableBool `json:"disableNetwork,omitempty"`
	// VM's MAC address will be preserved on the new network. This value takes priority over the value in RestoredObjectNetworkConfigProto.
	PreserveMacAddressOnNewNetwork NullableBool `json:"preserveMacAddressOnNewNetwork,omitempty"`
	SourceNetworkEntity *EntityProto `json:"sourceNetworkEntity,omitempty"`
	TargetNetworkEntity *EntityProto `json:"targetNetworkEntity,omitempty"`
}

// NewNetworkMappingProto instantiates a new NetworkMappingProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkMappingProto() *NetworkMappingProto {
	this := NetworkMappingProto{}
	return &this
}

// NewNetworkMappingProtoWithDefaults instantiates a new NetworkMappingProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkMappingProtoWithDefaults() *NetworkMappingProto {
	this := NetworkMappingProto{}
	return &this
}

// GetDisableNetwork returns the DisableNetwork field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkMappingProto) GetDisableNetwork() bool {
	if o == nil || o.DisableNetwork.Get() == nil {
		var ret bool
		return ret
	}
	return *o.DisableNetwork.Get()
}

// GetDisableNetworkOk returns a tuple with the DisableNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkMappingProto) GetDisableNetworkOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisableNetwork.Get(), o.DisableNetwork.IsSet()
}

// HasDisableNetwork returns a boolean if a field has been set.
func (o *NetworkMappingProto) HasDisableNetwork() bool {
	if o != nil && o.DisableNetwork.IsSet() {
		return true
	}

	return false
}

// SetDisableNetwork gets a reference to the given NullableBool and assigns it to the DisableNetwork field.
func (o *NetworkMappingProto) SetDisableNetwork(v bool) {
	o.DisableNetwork.Set(&v)
}
// SetDisableNetworkNil sets the value for DisableNetwork to be an explicit nil
func (o *NetworkMappingProto) SetDisableNetworkNil() {
	o.DisableNetwork.Set(nil)
}

// UnsetDisableNetwork ensures that no value is present for DisableNetwork, not even an explicit nil
func (o *NetworkMappingProto) UnsetDisableNetwork() {
	o.DisableNetwork.Unset()
}

// GetPreserveMacAddressOnNewNetwork returns the PreserveMacAddressOnNewNetwork field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkMappingProto) GetPreserveMacAddressOnNewNetwork() bool {
	if o == nil || o.PreserveMacAddressOnNewNetwork.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PreserveMacAddressOnNewNetwork.Get()
}

// GetPreserveMacAddressOnNewNetworkOk returns a tuple with the PreserveMacAddressOnNewNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkMappingProto) GetPreserveMacAddressOnNewNetworkOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PreserveMacAddressOnNewNetwork.Get(), o.PreserveMacAddressOnNewNetwork.IsSet()
}

// HasPreserveMacAddressOnNewNetwork returns a boolean if a field has been set.
func (o *NetworkMappingProto) HasPreserveMacAddressOnNewNetwork() bool {
	if o != nil && o.PreserveMacAddressOnNewNetwork.IsSet() {
		return true
	}

	return false
}

// SetPreserveMacAddressOnNewNetwork gets a reference to the given NullableBool and assigns it to the PreserveMacAddressOnNewNetwork field.
func (o *NetworkMappingProto) SetPreserveMacAddressOnNewNetwork(v bool) {
	o.PreserveMacAddressOnNewNetwork.Set(&v)
}
// SetPreserveMacAddressOnNewNetworkNil sets the value for PreserveMacAddressOnNewNetwork to be an explicit nil
func (o *NetworkMappingProto) SetPreserveMacAddressOnNewNetworkNil() {
	o.PreserveMacAddressOnNewNetwork.Set(nil)
}

// UnsetPreserveMacAddressOnNewNetwork ensures that no value is present for PreserveMacAddressOnNewNetwork, not even an explicit nil
func (o *NetworkMappingProto) UnsetPreserveMacAddressOnNewNetwork() {
	o.PreserveMacAddressOnNewNetwork.Unset()
}

// GetSourceNetworkEntity returns the SourceNetworkEntity field value if set, zero value otherwise.
func (o *NetworkMappingProto) GetSourceNetworkEntity() EntityProto {
	if o == nil || o.SourceNetworkEntity == nil {
		var ret EntityProto
		return ret
	}
	return *o.SourceNetworkEntity
}

// GetSourceNetworkEntityOk returns a tuple with the SourceNetworkEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkMappingProto) GetSourceNetworkEntityOk() (*EntityProto, bool) {
	if o == nil || o.SourceNetworkEntity == nil {
		return nil, false
	}
	return o.SourceNetworkEntity, true
}

// HasSourceNetworkEntity returns a boolean if a field has been set.
func (o *NetworkMappingProto) HasSourceNetworkEntity() bool {
	if o != nil && o.SourceNetworkEntity != nil {
		return true
	}

	return false
}

// SetSourceNetworkEntity gets a reference to the given EntityProto and assigns it to the SourceNetworkEntity field.
func (o *NetworkMappingProto) SetSourceNetworkEntity(v EntityProto) {
	o.SourceNetworkEntity = &v
}

// GetTargetNetworkEntity returns the TargetNetworkEntity field value if set, zero value otherwise.
func (o *NetworkMappingProto) GetTargetNetworkEntity() EntityProto {
	if o == nil || o.TargetNetworkEntity == nil {
		var ret EntityProto
		return ret
	}
	return *o.TargetNetworkEntity
}

// GetTargetNetworkEntityOk returns a tuple with the TargetNetworkEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkMappingProto) GetTargetNetworkEntityOk() (*EntityProto, bool) {
	if o == nil || o.TargetNetworkEntity == nil {
		return nil, false
	}
	return o.TargetNetworkEntity, true
}

// HasTargetNetworkEntity returns a boolean if a field has been set.
func (o *NetworkMappingProto) HasTargetNetworkEntity() bool {
	if o != nil && o.TargetNetworkEntity != nil {
		return true
	}

	return false
}

// SetTargetNetworkEntity gets a reference to the given EntityProto and assigns it to the TargetNetworkEntity field.
func (o *NetworkMappingProto) SetTargetNetworkEntity(v EntityProto) {
	o.TargetNetworkEntity = &v
}

func (o NetworkMappingProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisableNetwork.IsSet() {
		toSerialize["disableNetwork"] = o.DisableNetwork.Get()
	}
	if o.PreserveMacAddressOnNewNetwork.IsSet() {
		toSerialize["preserveMacAddressOnNewNetwork"] = o.PreserveMacAddressOnNewNetwork.Get()
	}
	if o.SourceNetworkEntity != nil {
		toSerialize["sourceNetworkEntity"] = o.SourceNetworkEntity
	}
	if o.TargetNetworkEntity != nil {
		toSerialize["targetNetworkEntity"] = o.TargetNetworkEntity
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkMappingProto struct {
	value *NetworkMappingProto
	isSet bool
}

func (v NullableNetworkMappingProto) Get() *NetworkMappingProto {
	return v.value
}

func (v *NullableNetworkMappingProto) Set(val *NetworkMappingProto) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkMappingProto) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkMappingProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkMappingProto(val *NetworkMappingProto) *NullableNetworkMappingProto {
	return &NullableNetworkMappingProto{value: val, isSet: true}
}

func (v NullableNetworkMappingProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkMappingProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


