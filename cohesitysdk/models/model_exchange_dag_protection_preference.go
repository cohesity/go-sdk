/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ExchangeDAGProtectionPreference Specifies the information about the preference order while choosing between which database copy of the database which is part of DAG should be protected.
type ExchangeDAGProtectionPreference struct {
	// Specifies the preference order of the exchange servers from which passive database copies should be protected. The preference order is descending which indicates that passive database copy in the first server in the list gets the highest preference.
	PassiveCopyPreferenceServerGuidList []string `json:"passiveCopyPreferenceServerGuidList,omitempty"`
	// Specifies that only passive database copies should be protected if this is set to true. If this is set to false, both active and passive database copies can be protected.
	PassiveOnly NullableBool `json:"passiveOnly,omitempty"`
	// Specifies to use the user specified preference order of exchange servers from which the passive database copies should be protected if this is set to true.  Every copy of an Exchange database in a DAG is assigned an activation preference number. This number is used by the system as part of the passive database activation process. If this bool flag is set to false, the reverse order of activation is used while choosing between passive copies.
	UseUserSpecifiedPassivePreferenceOrder NullableBool `json:"useUserSpecifiedPassivePreferenceOrder,omitempty"`
}

// NewExchangeDAGProtectionPreference instantiates a new ExchangeDAGProtectionPreference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExchangeDAGProtectionPreference() *ExchangeDAGProtectionPreference {
	this := ExchangeDAGProtectionPreference{}
	return &this
}

// NewExchangeDAGProtectionPreferenceWithDefaults instantiates a new ExchangeDAGProtectionPreference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExchangeDAGProtectionPreferenceWithDefaults() *ExchangeDAGProtectionPreference {
	this := ExchangeDAGProtectionPreference{}
	return &this
}

// GetPassiveCopyPreferenceServerGuidList returns the PassiveCopyPreferenceServerGuidList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExchangeDAGProtectionPreference) GetPassiveCopyPreferenceServerGuidList() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.PassiveCopyPreferenceServerGuidList
}

// GetPassiveCopyPreferenceServerGuidListOk returns a tuple with the PassiveCopyPreferenceServerGuidList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExchangeDAGProtectionPreference) GetPassiveCopyPreferenceServerGuidListOk() (*[]string, bool) {
	if o == nil || o.PassiveCopyPreferenceServerGuidList == nil {
		return nil, false
	}
	return &o.PassiveCopyPreferenceServerGuidList, true
}

// HasPassiveCopyPreferenceServerGuidList returns a boolean if a field has been set.
func (o *ExchangeDAGProtectionPreference) HasPassiveCopyPreferenceServerGuidList() bool {
	if o != nil && o.PassiveCopyPreferenceServerGuidList != nil {
		return true
	}

	return false
}

// SetPassiveCopyPreferenceServerGuidList gets a reference to the given []string and assigns it to the PassiveCopyPreferenceServerGuidList field.
func (o *ExchangeDAGProtectionPreference) SetPassiveCopyPreferenceServerGuidList(v []string) {
	o.PassiveCopyPreferenceServerGuidList = v
}

// GetPassiveOnly returns the PassiveOnly field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExchangeDAGProtectionPreference) GetPassiveOnly() bool {
	if o == nil || o.PassiveOnly.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PassiveOnly.Get()
}

// GetPassiveOnlyOk returns a tuple with the PassiveOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExchangeDAGProtectionPreference) GetPassiveOnlyOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PassiveOnly.Get(), o.PassiveOnly.IsSet()
}

// HasPassiveOnly returns a boolean if a field has been set.
func (o *ExchangeDAGProtectionPreference) HasPassiveOnly() bool {
	if o != nil && o.PassiveOnly.IsSet() {
		return true
	}

	return false
}

// SetPassiveOnly gets a reference to the given NullableBool and assigns it to the PassiveOnly field.
func (o *ExchangeDAGProtectionPreference) SetPassiveOnly(v bool) {
	o.PassiveOnly.Set(&v)
}
// SetPassiveOnlyNil sets the value for PassiveOnly to be an explicit nil
func (o *ExchangeDAGProtectionPreference) SetPassiveOnlyNil() {
	o.PassiveOnly.Set(nil)
}

// UnsetPassiveOnly ensures that no value is present for PassiveOnly, not even an explicit nil
func (o *ExchangeDAGProtectionPreference) UnsetPassiveOnly() {
	o.PassiveOnly.Unset()
}

// GetUseUserSpecifiedPassivePreferenceOrder returns the UseUserSpecifiedPassivePreferenceOrder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExchangeDAGProtectionPreference) GetUseUserSpecifiedPassivePreferenceOrder() bool {
	if o == nil || o.UseUserSpecifiedPassivePreferenceOrder.Get() == nil {
		var ret bool
		return ret
	}
	return *o.UseUserSpecifiedPassivePreferenceOrder.Get()
}

// GetUseUserSpecifiedPassivePreferenceOrderOk returns a tuple with the UseUserSpecifiedPassivePreferenceOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExchangeDAGProtectionPreference) GetUseUserSpecifiedPassivePreferenceOrderOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UseUserSpecifiedPassivePreferenceOrder.Get(), o.UseUserSpecifiedPassivePreferenceOrder.IsSet()
}

// HasUseUserSpecifiedPassivePreferenceOrder returns a boolean if a field has been set.
func (o *ExchangeDAGProtectionPreference) HasUseUserSpecifiedPassivePreferenceOrder() bool {
	if o != nil && o.UseUserSpecifiedPassivePreferenceOrder.IsSet() {
		return true
	}

	return false
}

// SetUseUserSpecifiedPassivePreferenceOrder gets a reference to the given NullableBool and assigns it to the UseUserSpecifiedPassivePreferenceOrder field.
func (o *ExchangeDAGProtectionPreference) SetUseUserSpecifiedPassivePreferenceOrder(v bool) {
	o.UseUserSpecifiedPassivePreferenceOrder.Set(&v)
}
// SetUseUserSpecifiedPassivePreferenceOrderNil sets the value for UseUserSpecifiedPassivePreferenceOrder to be an explicit nil
func (o *ExchangeDAGProtectionPreference) SetUseUserSpecifiedPassivePreferenceOrderNil() {
	o.UseUserSpecifiedPassivePreferenceOrder.Set(nil)
}

// UnsetUseUserSpecifiedPassivePreferenceOrder ensures that no value is present for UseUserSpecifiedPassivePreferenceOrder, not even an explicit nil
func (o *ExchangeDAGProtectionPreference) UnsetUseUserSpecifiedPassivePreferenceOrder() {
	o.UseUserSpecifiedPassivePreferenceOrder.Unset()
}

func (o ExchangeDAGProtectionPreference) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PassiveCopyPreferenceServerGuidList != nil {
		toSerialize["passiveCopyPreferenceServerGuidList"] = o.PassiveCopyPreferenceServerGuidList
	}
	if o.PassiveOnly.IsSet() {
		toSerialize["passiveOnly"] = o.PassiveOnly.Get()
	}
	if o.UseUserSpecifiedPassivePreferenceOrder.IsSet() {
		toSerialize["useUserSpecifiedPassivePreferenceOrder"] = o.UseUserSpecifiedPassivePreferenceOrder.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableExchangeDAGProtectionPreference struct {
	value *ExchangeDAGProtectionPreference
	isSet bool
}

func (v NullableExchangeDAGProtectionPreference) Get() *ExchangeDAGProtectionPreference {
	return v.value
}

func (v *NullableExchangeDAGProtectionPreference) Set(val *ExchangeDAGProtectionPreference) {
	v.value = val
	v.isSet = true
}

func (v NullableExchangeDAGProtectionPreference) IsSet() bool {
	return v.isSet
}

func (v *NullableExchangeDAGProtectionPreference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExchangeDAGProtectionPreference(val *ExchangeDAGProtectionPreference) *NullableExchangeDAGProtectionPreference {
	return &NullableExchangeDAGProtectionPreference{value: val, isSet: true}
}

func (v NullableExchangeDAGProtectionPreference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExchangeDAGProtectionPreference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


