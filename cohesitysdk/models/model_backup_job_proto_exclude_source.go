/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// BackupJobProtoExcludeSource struct for BackupJobProtoExcludeSource
type BackupJobProtoExcludeSource struct {
	// An intersection of leaf-level entities will be obtained after expanding the following entities.
	Entities []EntityProto `json:"entities,omitempty"`
}

// NewBackupJobProtoExcludeSource instantiates a new BackupJobProtoExcludeSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupJobProtoExcludeSource() *BackupJobProtoExcludeSource {
	this := BackupJobProtoExcludeSource{}
	return &this
}

// NewBackupJobProtoExcludeSourceWithDefaults instantiates a new BackupJobProtoExcludeSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupJobProtoExcludeSourceWithDefaults() *BackupJobProtoExcludeSource {
	this := BackupJobProtoExcludeSource{}
	return &this
}

// GetEntities returns the Entities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProtoExcludeSource) GetEntities() []EntityProto {
	if o == nil  {
		var ret []EntityProto
		return ret
	}
	return o.Entities
}

// GetEntitiesOk returns a tuple with the Entities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProtoExcludeSource) GetEntitiesOk() (*[]EntityProto, bool) {
	if o == nil || o.Entities == nil {
		return nil, false
	}
	return &o.Entities, true
}

// HasEntities returns a boolean if a field has been set.
func (o *BackupJobProtoExcludeSource) HasEntities() bool {
	if o != nil && o.Entities != nil {
		return true
	}

	return false
}

// SetEntities gets a reference to the given []EntityProto and assigns it to the Entities field.
func (o *BackupJobProtoExcludeSource) SetEntities(v []EntityProto) {
	o.Entities = v
}

func (o BackupJobProtoExcludeSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Entities != nil {
		toSerialize["entities"] = o.Entities
	}
	return json.Marshal(toSerialize)
}

type NullableBackupJobProtoExcludeSource struct {
	value *BackupJobProtoExcludeSource
	isSet bool
}

func (v NullableBackupJobProtoExcludeSource) Get() *BackupJobProtoExcludeSource {
	return v.value
}

func (v *NullableBackupJobProtoExcludeSource) Set(val *BackupJobProtoExcludeSource) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupJobProtoExcludeSource) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupJobProtoExcludeSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupJobProtoExcludeSource(val *BackupJobProtoExcludeSource) *NullableBackupJobProtoExcludeSource {
	return &NullableBackupJobProtoExcludeSource{value: val, isSet: true}
}

func (v NullableBackupJobProtoExcludeSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupJobProtoExcludeSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


