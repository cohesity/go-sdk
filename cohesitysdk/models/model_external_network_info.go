/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ExternalNetworkInfo This is used to display the list of external networks, from which one can potentially be selected for an app instance.
type ExternalNetworkInfo struct {
	// Name of axon network corresponding to this external network. Used for internal purposes only.
	AxonNetworkName NullableString `json:"axonNetworkName,omitempty"`
	// VLAN id of the network.
	VlanId NullableInt32 `json:"vlanId,omitempty"`
	// Display name for the UI to select the external network.
	VlanNetworkName NullableString `json:"vlanNetworkName,omitempty"`
}

// NewExternalNetworkInfo instantiates a new ExternalNetworkInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalNetworkInfo() *ExternalNetworkInfo {
	this := ExternalNetworkInfo{}
	return &this
}

// NewExternalNetworkInfoWithDefaults instantiates a new ExternalNetworkInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalNetworkInfoWithDefaults() *ExternalNetworkInfo {
	this := ExternalNetworkInfo{}
	return &this
}

// GetAxonNetworkName returns the AxonNetworkName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalNetworkInfo) GetAxonNetworkName() string {
	if o == nil || o.AxonNetworkName.Get() == nil {
		var ret string
		return ret
	}
	return *o.AxonNetworkName.Get()
}

// GetAxonNetworkNameOk returns a tuple with the AxonNetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalNetworkInfo) GetAxonNetworkNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AxonNetworkName.Get(), o.AxonNetworkName.IsSet()
}

// HasAxonNetworkName returns a boolean if a field has been set.
func (o *ExternalNetworkInfo) HasAxonNetworkName() bool {
	if o != nil && o.AxonNetworkName.IsSet() {
		return true
	}

	return false
}

// SetAxonNetworkName gets a reference to the given NullableString and assigns it to the AxonNetworkName field.
func (o *ExternalNetworkInfo) SetAxonNetworkName(v string) {
	o.AxonNetworkName.Set(&v)
}
// SetAxonNetworkNameNil sets the value for AxonNetworkName to be an explicit nil
func (o *ExternalNetworkInfo) SetAxonNetworkNameNil() {
	o.AxonNetworkName.Set(nil)
}

// UnsetAxonNetworkName ensures that no value is present for AxonNetworkName, not even an explicit nil
func (o *ExternalNetworkInfo) UnsetAxonNetworkName() {
	o.AxonNetworkName.Unset()
}

// GetVlanId returns the VlanId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalNetworkInfo) GetVlanId() int32 {
	if o == nil || o.VlanId.Get() == nil {
		var ret int32
		return ret
	}
	return *o.VlanId.Get()
}

// GetVlanIdOk returns a tuple with the VlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalNetworkInfo) GetVlanIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VlanId.Get(), o.VlanId.IsSet()
}

// HasVlanId returns a boolean if a field has been set.
func (o *ExternalNetworkInfo) HasVlanId() bool {
	if o != nil && o.VlanId.IsSet() {
		return true
	}

	return false
}

// SetVlanId gets a reference to the given NullableInt32 and assigns it to the VlanId field.
func (o *ExternalNetworkInfo) SetVlanId(v int32) {
	o.VlanId.Set(&v)
}
// SetVlanIdNil sets the value for VlanId to be an explicit nil
func (o *ExternalNetworkInfo) SetVlanIdNil() {
	o.VlanId.Set(nil)
}

// UnsetVlanId ensures that no value is present for VlanId, not even an explicit nil
func (o *ExternalNetworkInfo) UnsetVlanId() {
	o.VlanId.Unset()
}

// GetVlanNetworkName returns the VlanNetworkName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalNetworkInfo) GetVlanNetworkName() string {
	if o == nil || o.VlanNetworkName.Get() == nil {
		var ret string
		return ret
	}
	return *o.VlanNetworkName.Get()
}

// GetVlanNetworkNameOk returns a tuple with the VlanNetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalNetworkInfo) GetVlanNetworkNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VlanNetworkName.Get(), o.VlanNetworkName.IsSet()
}

// HasVlanNetworkName returns a boolean if a field has been set.
func (o *ExternalNetworkInfo) HasVlanNetworkName() bool {
	if o != nil && o.VlanNetworkName.IsSet() {
		return true
	}

	return false
}

// SetVlanNetworkName gets a reference to the given NullableString and assigns it to the VlanNetworkName field.
func (o *ExternalNetworkInfo) SetVlanNetworkName(v string) {
	o.VlanNetworkName.Set(&v)
}
// SetVlanNetworkNameNil sets the value for VlanNetworkName to be an explicit nil
func (o *ExternalNetworkInfo) SetVlanNetworkNameNil() {
	o.VlanNetworkName.Set(nil)
}

// UnsetVlanNetworkName ensures that no value is present for VlanNetworkName, not even an explicit nil
func (o *ExternalNetworkInfo) UnsetVlanNetworkName() {
	o.VlanNetworkName.Unset()
}

func (o ExternalNetworkInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AxonNetworkName.IsSet() {
		toSerialize["axonNetworkName"] = o.AxonNetworkName.Get()
	}
	if o.VlanId.IsSet() {
		toSerialize["vlanId"] = o.VlanId.Get()
	}
	if o.VlanNetworkName.IsSet() {
		toSerialize["vlanNetworkName"] = o.VlanNetworkName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableExternalNetworkInfo struct {
	value *ExternalNetworkInfo
	isSet bool
}

func (v NullableExternalNetworkInfo) Get() *ExternalNetworkInfo {
	return v.value
}

func (v *NullableExternalNetworkInfo) Set(val *ExternalNetworkInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalNetworkInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalNetworkInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalNetworkInfo(val *ExternalNetworkInfo) *NullableExternalNetworkInfo {
	return &NullableExternalNetworkInfo{value: val, isSet: true}
}

func (v NullableExternalNetworkInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalNetworkInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


