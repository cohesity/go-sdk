/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// IsilonMountPoint Specifies information about a mount point in an Isilon OneFs Cluster.
type IsilonMountPoint struct {
	// Specifies the name of access zone.
	AccessZoneName NullableString `json:"accessZoneName,omitempty"`
	NfsMountPoint *IsilonNfsMountPoint `json:"nfsMountPoint,omitempty"`
	// Specifies the path of the access zone in ifs. This should include the leading \"/ifs/\".
	Path NullableString `json:"path,omitempty"`
	// List of Protocols on Isilon.  Specifies the list of protocols enabled on Isilon OneFs file system. 'kNfs' indicates NFS exports in an Isilon Cluster. 'kSmb' indicates CIFS/SMB Shares in an Isilon Cluster.
	Protocols []string `json:"protocols,omitempty"`
	// Specifies information about an SMB share. This field is set if the file system supports protocol type 'kSmb'.
	SmbMountPoints []IsilonSmbMountPoint `json:"smbMountPoints,omitempty"`
}

// NewIsilonMountPoint instantiates a new IsilonMountPoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIsilonMountPoint() *IsilonMountPoint {
	this := IsilonMountPoint{}
	return &this
}

// NewIsilonMountPointWithDefaults instantiates a new IsilonMountPoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIsilonMountPointWithDefaults() *IsilonMountPoint {
	this := IsilonMountPoint{}
	return &this
}

// GetAccessZoneName returns the AccessZoneName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IsilonMountPoint) GetAccessZoneName() string {
	if o == nil || o.AccessZoneName.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccessZoneName.Get()
}

// GetAccessZoneNameOk returns a tuple with the AccessZoneName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IsilonMountPoint) GetAccessZoneNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccessZoneName.Get(), o.AccessZoneName.IsSet()
}

// HasAccessZoneName returns a boolean if a field has been set.
func (o *IsilonMountPoint) HasAccessZoneName() bool {
	if o != nil && o.AccessZoneName.IsSet() {
		return true
	}

	return false
}

// SetAccessZoneName gets a reference to the given NullableString and assigns it to the AccessZoneName field.
func (o *IsilonMountPoint) SetAccessZoneName(v string) {
	o.AccessZoneName.Set(&v)
}
// SetAccessZoneNameNil sets the value for AccessZoneName to be an explicit nil
func (o *IsilonMountPoint) SetAccessZoneNameNil() {
	o.AccessZoneName.Set(nil)
}

// UnsetAccessZoneName ensures that no value is present for AccessZoneName, not even an explicit nil
func (o *IsilonMountPoint) UnsetAccessZoneName() {
	o.AccessZoneName.Unset()
}

// GetNfsMountPoint returns the NfsMountPoint field value if set, zero value otherwise.
func (o *IsilonMountPoint) GetNfsMountPoint() IsilonNfsMountPoint {
	if o == nil || o.NfsMountPoint == nil {
		var ret IsilonNfsMountPoint
		return ret
	}
	return *o.NfsMountPoint
}

// GetNfsMountPointOk returns a tuple with the NfsMountPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IsilonMountPoint) GetNfsMountPointOk() (*IsilonNfsMountPoint, bool) {
	if o == nil || o.NfsMountPoint == nil {
		return nil, false
	}
	return o.NfsMountPoint, true
}

// HasNfsMountPoint returns a boolean if a field has been set.
func (o *IsilonMountPoint) HasNfsMountPoint() bool {
	if o != nil && o.NfsMountPoint != nil {
		return true
	}

	return false
}

// SetNfsMountPoint gets a reference to the given IsilonNfsMountPoint and assigns it to the NfsMountPoint field.
func (o *IsilonMountPoint) SetNfsMountPoint(v IsilonNfsMountPoint) {
	o.NfsMountPoint = &v
}

// GetPath returns the Path field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IsilonMountPoint) GetPath() string {
	if o == nil || o.Path.Get() == nil {
		var ret string
		return ret
	}
	return *o.Path.Get()
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IsilonMountPoint) GetPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Path.Get(), o.Path.IsSet()
}

// HasPath returns a boolean if a field has been set.
func (o *IsilonMountPoint) HasPath() bool {
	if o != nil && o.Path.IsSet() {
		return true
	}

	return false
}

// SetPath gets a reference to the given NullableString and assigns it to the Path field.
func (o *IsilonMountPoint) SetPath(v string) {
	o.Path.Set(&v)
}
// SetPathNil sets the value for Path to be an explicit nil
func (o *IsilonMountPoint) SetPathNil() {
	o.Path.Set(nil)
}

// UnsetPath ensures that no value is present for Path, not even an explicit nil
func (o *IsilonMountPoint) UnsetPath() {
	o.Path.Unset()
}

// GetProtocols returns the Protocols field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IsilonMountPoint) GetProtocols() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Protocols
}

// GetProtocolsOk returns a tuple with the Protocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IsilonMountPoint) GetProtocolsOk() (*[]string, bool) {
	if o == nil || o.Protocols == nil {
		return nil, false
	}
	return &o.Protocols, true
}

// HasProtocols returns a boolean if a field has been set.
func (o *IsilonMountPoint) HasProtocols() bool {
	if o != nil && o.Protocols != nil {
		return true
	}

	return false
}

// SetProtocols gets a reference to the given []string and assigns it to the Protocols field.
func (o *IsilonMountPoint) SetProtocols(v []string) {
	o.Protocols = v
}

// GetSmbMountPoints returns the SmbMountPoints field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IsilonMountPoint) GetSmbMountPoints() []IsilonSmbMountPoint {
	if o == nil  {
		var ret []IsilonSmbMountPoint
		return ret
	}
	return o.SmbMountPoints
}

// GetSmbMountPointsOk returns a tuple with the SmbMountPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IsilonMountPoint) GetSmbMountPointsOk() (*[]IsilonSmbMountPoint, bool) {
	if o == nil || o.SmbMountPoints == nil {
		return nil, false
	}
	return &o.SmbMountPoints, true
}

// HasSmbMountPoints returns a boolean if a field has been set.
func (o *IsilonMountPoint) HasSmbMountPoints() bool {
	if o != nil && o.SmbMountPoints != nil {
		return true
	}

	return false
}

// SetSmbMountPoints gets a reference to the given []IsilonSmbMountPoint and assigns it to the SmbMountPoints field.
func (o *IsilonMountPoint) SetSmbMountPoints(v []IsilonSmbMountPoint) {
	o.SmbMountPoints = v
}

func (o IsilonMountPoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessZoneName.IsSet() {
		toSerialize["accessZoneName"] = o.AccessZoneName.Get()
	}
	if o.NfsMountPoint != nil {
		toSerialize["nfsMountPoint"] = o.NfsMountPoint
	}
	if o.Path.IsSet() {
		toSerialize["path"] = o.Path.Get()
	}
	if o.Protocols != nil {
		toSerialize["protocols"] = o.Protocols
	}
	if o.SmbMountPoints != nil {
		toSerialize["smbMountPoints"] = o.SmbMountPoints
	}
	return json.Marshal(toSerialize)
}

type NullableIsilonMountPoint struct {
	value *IsilonMountPoint
	isSet bool
}

func (v NullableIsilonMountPoint) Get() *IsilonMountPoint {
	return v.value
}

func (v *NullableIsilonMountPoint) Set(val *IsilonMountPoint) {
	v.value = val
	v.isSet = true
}

func (v NullableIsilonMountPoint) IsSet() bool {
	return v.isSet
}

func (v *NullableIsilonMountPoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIsilonMountPoint(val *IsilonMountPoint) *NullableIsilonMountPoint {
	return &NullableIsilonMountPoint{value: val, isSet: true}
}

func (v NullableIsilonMountPoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIsilonMountPoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


