/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// VaultProviderStatsInfo Specifies the stats for each vault.
type VaultProviderStatsInfo struct {
	// Specifies the relative change of size of entities on the vault.
	ChangeRate NullableInt64 `json:"changeRate,omitempty"`
	// Specifies the cluster id.
	ClusterId NullableInt64 `json:"clusterId,omitempty"`
	// Specifies the cluster incarnation id.
	ClusterIncarnationId NullableInt64 `json:"clusterIncarnationId,omitempty"`
	// Specifies the cluster name.
	ClusterName NullableString `json:"clusterName,omitempty"`
	// Specifies the average read bandwidth over the last 24 hours.
	ReadBandwidth NullableInt64 `json:"readBandwidth,omitempty"`
	// Specifies the stats by environments.
	StatsByEnv *[]VaultProviderStatsByEnv `json:"statsByEnv,omitempty"`
	// Specifies the cloud vendor type.
	VaultGroup NullableString `json:"vaultGroup,omitempty"`
	// Specifies the Vault id.
	VaultId NullableInt64 `json:"vaultId,omitempty"`
	// Specifies the External Target type.
	VaultType NullableString `json:"vaultType,omitempty"`
	// Specifies the Vault name.
	Vaultname NullableString `json:"vaultname,omitempty"`
	// Specifies the average write bandwidth over the last 24 hours.
	WriteBandwidth NullableInt64 `json:"writeBandwidth,omitempty"`
}

// NewVaultProviderStatsInfo instantiates a new VaultProviderStatsInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVaultProviderStatsInfo() *VaultProviderStatsInfo {
	this := VaultProviderStatsInfo{}
	return &this
}

// NewVaultProviderStatsInfoWithDefaults instantiates a new VaultProviderStatsInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVaultProviderStatsInfoWithDefaults() *VaultProviderStatsInfo {
	this := VaultProviderStatsInfo{}
	return &this
}

// GetChangeRate returns the ChangeRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VaultProviderStatsInfo) GetChangeRate() int64 {
	if o == nil || o.ChangeRate.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ChangeRate.Get()
}

// GetChangeRateOk returns a tuple with the ChangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VaultProviderStatsInfo) GetChangeRateOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ChangeRate.Get(), o.ChangeRate.IsSet()
}

// HasChangeRate returns a boolean if a field has been set.
func (o *VaultProviderStatsInfo) HasChangeRate() bool {
	if o != nil && o.ChangeRate.IsSet() {
		return true
	}

	return false
}

// SetChangeRate gets a reference to the given NullableInt64 and assigns it to the ChangeRate field.
func (o *VaultProviderStatsInfo) SetChangeRate(v int64) {
	o.ChangeRate.Set(&v)
}
// SetChangeRateNil sets the value for ChangeRate to be an explicit nil
func (o *VaultProviderStatsInfo) SetChangeRateNil() {
	o.ChangeRate.Set(nil)
}

// UnsetChangeRate ensures that no value is present for ChangeRate, not even an explicit nil
func (o *VaultProviderStatsInfo) UnsetChangeRate() {
	o.ChangeRate.Unset()
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VaultProviderStatsInfo) GetClusterId() int64 {
	if o == nil || o.ClusterId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ClusterId.Get()
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VaultProviderStatsInfo) GetClusterIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterId.Get(), o.ClusterId.IsSet()
}

// HasClusterId returns a boolean if a field has been set.
func (o *VaultProviderStatsInfo) HasClusterId() bool {
	if o != nil && o.ClusterId.IsSet() {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given NullableInt64 and assigns it to the ClusterId field.
func (o *VaultProviderStatsInfo) SetClusterId(v int64) {
	o.ClusterId.Set(&v)
}
// SetClusterIdNil sets the value for ClusterId to be an explicit nil
func (o *VaultProviderStatsInfo) SetClusterIdNil() {
	o.ClusterId.Set(nil)
}

// UnsetClusterId ensures that no value is present for ClusterId, not even an explicit nil
func (o *VaultProviderStatsInfo) UnsetClusterId() {
	o.ClusterId.Unset()
}

// GetClusterIncarnationId returns the ClusterIncarnationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VaultProviderStatsInfo) GetClusterIncarnationId() int64 {
	if o == nil || o.ClusterIncarnationId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ClusterIncarnationId.Get()
}

// GetClusterIncarnationIdOk returns a tuple with the ClusterIncarnationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VaultProviderStatsInfo) GetClusterIncarnationIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterIncarnationId.Get(), o.ClusterIncarnationId.IsSet()
}

// HasClusterIncarnationId returns a boolean if a field has been set.
func (o *VaultProviderStatsInfo) HasClusterIncarnationId() bool {
	if o != nil && o.ClusterIncarnationId.IsSet() {
		return true
	}

	return false
}

// SetClusterIncarnationId gets a reference to the given NullableInt64 and assigns it to the ClusterIncarnationId field.
func (o *VaultProviderStatsInfo) SetClusterIncarnationId(v int64) {
	o.ClusterIncarnationId.Set(&v)
}
// SetClusterIncarnationIdNil sets the value for ClusterIncarnationId to be an explicit nil
func (o *VaultProviderStatsInfo) SetClusterIncarnationIdNil() {
	o.ClusterIncarnationId.Set(nil)
}

// UnsetClusterIncarnationId ensures that no value is present for ClusterIncarnationId, not even an explicit nil
func (o *VaultProviderStatsInfo) UnsetClusterIncarnationId() {
	o.ClusterIncarnationId.Unset()
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VaultProviderStatsInfo) GetClusterName() string {
	if o == nil || o.ClusterName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClusterName.Get()
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VaultProviderStatsInfo) GetClusterNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterName.Get(), o.ClusterName.IsSet()
}

// HasClusterName returns a boolean if a field has been set.
func (o *VaultProviderStatsInfo) HasClusterName() bool {
	if o != nil && o.ClusterName.IsSet() {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given NullableString and assigns it to the ClusterName field.
func (o *VaultProviderStatsInfo) SetClusterName(v string) {
	o.ClusterName.Set(&v)
}
// SetClusterNameNil sets the value for ClusterName to be an explicit nil
func (o *VaultProviderStatsInfo) SetClusterNameNil() {
	o.ClusterName.Set(nil)
}

// UnsetClusterName ensures that no value is present for ClusterName, not even an explicit nil
func (o *VaultProviderStatsInfo) UnsetClusterName() {
	o.ClusterName.Unset()
}

// GetReadBandwidth returns the ReadBandwidth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VaultProviderStatsInfo) GetReadBandwidth() int64 {
	if o == nil || o.ReadBandwidth.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ReadBandwidth.Get()
}

// GetReadBandwidthOk returns a tuple with the ReadBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VaultProviderStatsInfo) GetReadBandwidthOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReadBandwidth.Get(), o.ReadBandwidth.IsSet()
}

// HasReadBandwidth returns a boolean if a field has been set.
func (o *VaultProviderStatsInfo) HasReadBandwidth() bool {
	if o != nil && o.ReadBandwidth.IsSet() {
		return true
	}

	return false
}

// SetReadBandwidth gets a reference to the given NullableInt64 and assigns it to the ReadBandwidth field.
func (o *VaultProviderStatsInfo) SetReadBandwidth(v int64) {
	o.ReadBandwidth.Set(&v)
}
// SetReadBandwidthNil sets the value for ReadBandwidth to be an explicit nil
func (o *VaultProviderStatsInfo) SetReadBandwidthNil() {
	o.ReadBandwidth.Set(nil)
}

// UnsetReadBandwidth ensures that no value is present for ReadBandwidth, not even an explicit nil
func (o *VaultProviderStatsInfo) UnsetReadBandwidth() {
	o.ReadBandwidth.Unset()
}

// GetStatsByEnv returns the StatsByEnv field value if set, zero value otherwise.
func (o *VaultProviderStatsInfo) GetStatsByEnv() []VaultProviderStatsByEnv {
	if o == nil || o.StatsByEnv == nil {
		var ret []VaultProviderStatsByEnv
		return ret
	}
	return *o.StatsByEnv
}

// GetStatsByEnvOk returns a tuple with the StatsByEnv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultProviderStatsInfo) GetStatsByEnvOk() (*[]VaultProviderStatsByEnv, bool) {
	if o == nil || o.StatsByEnv == nil {
		return nil, false
	}
	return o.StatsByEnv, true
}

// HasStatsByEnv returns a boolean if a field has been set.
func (o *VaultProviderStatsInfo) HasStatsByEnv() bool {
	if o != nil && o.StatsByEnv != nil {
		return true
	}

	return false
}

// SetStatsByEnv gets a reference to the given []VaultProviderStatsByEnv and assigns it to the StatsByEnv field.
func (o *VaultProviderStatsInfo) SetStatsByEnv(v []VaultProviderStatsByEnv) {
	o.StatsByEnv = &v
}

// GetVaultGroup returns the VaultGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VaultProviderStatsInfo) GetVaultGroup() string {
	if o == nil || o.VaultGroup.Get() == nil {
		var ret string
		return ret
	}
	return *o.VaultGroup.Get()
}

// GetVaultGroupOk returns a tuple with the VaultGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VaultProviderStatsInfo) GetVaultGroupOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VaultGroup.Get(), o.VaultGroup.IsSet()
}

// HasVaultGroup returns a boolean if a field has been set.
func (o *VaultProviderStatsInfo) HasVaultGroup() bool {
	if o != nil && o.VaultGroup.IsSet() {
		return true
	}

	return false
}

// SetVaultGroup gets a reference to the given NullableString and assigns it to the VaultGroup field.
func (o *VaultProviderStatsInfo) SetVaultGroup(v string) {
	o.VaultGroup.Set(&v)
}
// SetVaultGroupNil sets the value for VaultGroup to be an explicit nil
func (o *VaultProviderStatsInfo) SetVaultGroupNil() {
	o.VaultGroup.Set(nil)
}

// UnsetVaultGroup ensures that no value is present for VaultGroup, not even an explicit nil
func (o *VaultProviderStatsInfo) UnsetVaultGroup() {
	o.VaultGroup.Unset()
}

// GetVaultId returns the VaultId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VaultProviderStatsInfo) GetVaultId() int64 {
	if o == nil || o.VaultId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.VaultId.Get()
}

// GetVaultIdOk returns a tuple with the VaultId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VaultProviderStatsInfo) GetVaultIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VaultId.Get(), o.VaultId.IsSet()
}

// HasVaultId returns a boolean if a field has been set.
func (o *VaultProviderStatsInfo) HasVaultId() bool {
	if o != nil && o.VaultId.IsSet() {
		return true
	}

	return false
}

// SetVaultId gets a reference to the given NullableInt64 and assigns it to the VaultId field.
func (o *VaultProviderStatsInfo) SetVaultId(v int64) {
	o.VaultId.Set(&v)
}
// SetVaultIdNil sets the value for VaultId to be an explicit nil
func (o *VaultProviderStatsInfo) SetVaultIdNil() {
	o.VaultId.Set(nil)
}

// UnsetVaultId ensures that no value is present for VaultId, not even an explicit nil
func (o *VaultProviderStatsInfo) UnsetVaultId() {
	o.VaultId.Unset()
}

// GetVaultType returns the VaultType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VaultProviderStatsInfo) GetVaultType() string {
	if o == nil || o.VaultType.Get() == nil {
		var ret string
		return ret
	}
	return *o.VaultType.Get()
}

// GetVaultTypeOk returns a tuple with the VaultType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VaultProviderStatsInfo) GetVaultTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VaultType.Get(), o.VaultType.IsSet()
}

// HasVaultType returns a boolean if a field has been set.
func (o *VaultProviderStatsInfo) HasVaultType() bool {
	if o != nil && o.VaultType.IsSet() {
		return true
	}

	return false
}

// SetVaultType gets a reference to the given NullableString and assigns it to the VaultType field.
func (o *VaultProviderStatsInfo) SetVaultType(v string) {
	o.VaultType.Set(&v)
}
// SetVaultTypeNil sets the value for VaultType to be an explicit nil
func (o *VaultProviderStatsInfo) SetVaultTypeNil() {
	o.VaultType.Set(nil)
}

// UnsetVaultType ensures that no value is present for VaultType, not even an explicit nil
func (o *VaultProviderStatsInfo) UnsetVaultType() {
	o.VaultType.Unset()
}

// GetVaultname returns the Vaultname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VaultProviderStatsInfo) GetVaultname() string {
	if o == nil || o.Vaultname.Get() == nil {
		var ret string
		return ret
	}
	return *o.Vaultname.Get()
}

// GetVaultnameOk returns a tuple with the Vaultname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VaultProviderStatsInfo) GetVaultnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Vaultname.Get(), o.Vaultname.IsSet()
}

// HasVaultname returns a boolean if a field has been set.
func (o *VaultProviderStatsInfo) HasVaultname() bool {
	if o != nil && o.Vaultname.IsSet() {
		return true
	}

	return false
}

// SetVaultname gets a reference to the given NullableString and assigns it to the Vaultname field.
func (o *VaultProviderStatsInfo) SetVaultname(v string) {
	o.Vaultname.Set(&v)
}
// SetVaultnameNil sets the value for Vaultname to be an explicit nil
func (o *VaultProviderStatsInfo) SetVaultnameNil() {
	o.Vaultname.Set(nil)
}

// UnsetVaultname ensures that no value is present for Vaultname, not even an explicit nil
func (o *VaultProviderStatsInfo) UnsetVaultname() {
	o.Vaultname.Unset()
}

// GetWriteBandwidth returns the WriteBandwidth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VaultProviderStatsInfo) GetWriteBandwidth() int64 {
	if o == nil || o.WriteBandwidth.Get() == nil {
		var ret int64
		return ret
	}
	return *o.WriteBandwidth.Get()
}

// GetWriteBandwidthOk returns a tuple with the WriteBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VaultProviderStatsInfo) GetWriteBandwidthOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WriteBandwidth.Get(), o.WriteBandwidth.IsSet()
}

// HasWriteBandwidth returns a boolean if a field has been set.
func (o *VaultProviderStatsInfo) HasWriteBandwidth() bool {
	if o != nil && o.WriteBandwidth.IsSet() {
		return true
	}

	return false
}

// SetWriteBandwidth gets a reference to the given NullableInt64 and assigns it to the WriteBandwidth field.
func (o *VaultProviderStatsInfo) SetWriteBandwidth(v int64) {
	o.WriteBandwidth.Set(&v)
}
// SetWriteBandwidthNil sets the value for WriteBandwidth to be an explicit nil
func (o *VaultProviderStatsInfo) SetWriteBandwidthNil() {
	o.WriteBandwidth.Set(nil)
}

// UnsetWriteBandwidth ensures that no value is present for WriteBandwidth, not even an explicit nil
func (o *VaultProviderStatsInfo) UnsetWriteBandwidth() {
	o.WriteBandwidth.Unset()
}

func (o VaultProviderStatsInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChangeRate.IsSet() {
		toSerialize["changeRate"] = o.ChangeRate.Get()
	}
	if o.ClusterId.IsSet() {
		toSerialize["clusterId"] = o.ClusterId.Get()
	}
	if o.ClusterIncarnationId.IsSet() {
		toSerialize["clusterIncarnationId"] = o.ClusterIncarnationId.Get()
	}
	if o.ClusterName.IsSet() {
		toSerialize["clusterName"] = o.ClusterName.Get()
	}
	if o.ReadBandwidth.IsSet() {
		toSerialize["readBandwidth"] = o.ReadBandwidth.Get()
	}
	if o.StatsByEnv != nil {
		toSerialize["statsByEnv"] = o.StatsByEnv
	}
	if o.VaultGroup.IsSet() {
		toSerialize["vaultGroup"] = o.VaultGroup.Get()
	}
	if o.VaultId.IsSet() {
		toSerialize["vaultId"] = o.VaultId.Get()
	}
	if o.VaultType.IsSet() {
		toSerialize["vaultType"] = o.VaultType.Get()
	}
	if o.Vaultname.IsSet() {
		toSerialize["vaultname"] = o.Vaultname.Get()
	}
	if o.WriteBandwidth.IsSet() {
		toSerialize["writeBandwidth"] = o.WriteBandwidth.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableVaultProviderStatsInfo struct {
	value *VaultProviderStatsInfo
	isSet bool
}

func (v NullableVaultProviderStatsInfo) Get() *VaultProviderStatsInfo {
	return v.value
}

func (v *NullableVaultProviderStatsInfo) Set(val *VaultProviderStatsInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVaultProviderStatsInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVaultProviderStatsInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVaultProviderStatsInfo(val *VaultProviderStatsInfo) *NullableVaultProviderStatsInfo {
	return &NullableVaultProviderStatsInfo{value: val, isSet: true}
}

func (v NullableVaultProviderStatsInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVaultProviderStatsInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


