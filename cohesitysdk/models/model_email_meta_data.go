/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// EmailMetaData Specifies details about the emails and the folder containing emails.
type EmailMetaData struct {
	// AllUnderHierarchy specifies if logs of all the tenants under the hierarchy of tenant with id TenantId should be returned.
	AllUnderHierarchy NullableBool `json:"allUnderHierarchy,omitempty"`
	// Specifies the email addresses of the bcc recipients.
	BccRecipientAddresses []string `json:"bccRecipientAddresses,omitempty"`
	// Specifies the email addresses of the cc recipients.
	CcRecipientAddresses []string `json:"ccRecipientAddresses,omitempty"`
	// Specifies the domain Ids in which mailboxes are registered.
	DomainIds []int64 `json:"domainIds,omitempty"`
	// Specifies the subject of the email.
	EmailSubject NullableString `json:"emailSubject,omitempty"`
	// Specifes the Parent Folder key.
	FolderKey NullableInt64 `json:"folderKey,omitempty"`
	// Specifies the parent folder name of the email.
	FolderName NullableString `json:"folderName,omitempty"`
	// Specifies whether the emails have any attachments.
	HasAttachments NullableBool `json:"hasAttachments,omitempty"`
	// Specifies the Key(unique within mailbox) for Outlook item such as Email. This key is not indexed but used for identifying the item while restore.
	ItemKey NullableString `json:"itemKey,omitempty"`
	// Specifies the mailbox Ids which contains the emails/folders.
	MailboxIds []int64 `json:"mailboxIds,omitempty"`
	// Specifies the protection job Ids which have backed up mailbox(es) continaing emails/folders.
	ProtectionJobIds []int64 `json:"protectionJobIds,omitempty"`
	// Specifies the unix end time for querying on email's received time.
	ReceivedEndTime NullableInt64 `json:"receivedEndTime,omitempty"`
	// Specifies the unix start time for querying on email's received time.
	ReceivedStartTime NullableInt64 `json:"receivedStartTime,omitempty"`
	// Specifies the unix time when the email was received.
	ReceivedTimeSeconds NullableInt64 `json:"receivedTimeSeconds,omitempty"`
	// Specifies the email addresses of the recipients.
	RecipientAddresses []string `json:"recipientAddresses,omitempty"`
	// Specifies the email address of the sender.
	SenderAddress NullableString `json:"senderAddress,omitempty"`
	// Specifies the unix time when the email was sent.
	SentTimeSeconds NullableInt64 `json:"sentTimeSeconds,omitempty"`
	// Specifies whether the query result should include only Email folders.
	ShowOnlyEmailFolders NullableBool `json:"showOnlyEmailFolders,omitempty"`
	// TenantId specifies the tenant whose action resulted in the audit log.
	TenantId NullableString `json:"tenantId,omitempty"`
}

// NewEmailMetaData instantiates a new EmailMetaData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailMetaData() *EmailMetaData {
	this := EmailMetaData{}
	return &this
}

// NewEmailMetaDataWithDefaults instantiates a new EmailMetaData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailMetaDataWithDefaults() *EmailMetaData {
	this := EmailMetaData{}
	return &this
}

// GetAllUnderHierarchy returns the AllUnderHierarchy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetAllUnderHierarchy() bool {
	if o == nil || o.AllUnderHierarchy.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AllUnderHierarchy.Get()
}

// GetAllUnderHierarchyOk returns a tuple with the AllUnderHierarchy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetAllUnderHierarchyOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AllUnderHierarchy.Get(), o.AllUnderHierarchy.IsSet()
}

// HasAllUnderHierarchy returns a boolean if a field has been set.
func (o *EmailMetaData) HasAllUnderHierarchy() bool {
	if o != nil && o.AllUnderHierarchy.IsSet() {
		return true
	}

	return false
}

// SetAllUnderHierarchy gets a reference to the given NullableBool and assigns it to the AllUnderHierarchy field.
func (o *EmailMetaData) SetAllUnderHierarchy(v bool) {
	o.AllUnderHierarchy.Set(&v)
}
// SetAllUnderHierarchyNil sets the value for AllUnderHierarchy to be an explicit nil
func (o *EmailMetaData) SetAllUnderHierarchyNil() {
	o.AllUnderHierarchy.Set(nil)
}

// UnsetAllUnderHierarchy ensures that no value is present for AllUnderHierarchy, not even an explicit nil
func (o *EmailMetaData) UnsetAllUnderHierarchy() {
	o.AllUnderHierarchy.Unset()
}

// GetBccRecipientAddresses returns the BccRecipientAddresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetBccRecipientAddresses() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.BccRecipientAddresses
}

// GetBccRecipientAddressesOk returns a tuple with the BccRecipientAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetBccRecipientAddressesOk() (*[]string, bool) {
	if o == nil || o.BccRecipientAddresses == nil {
		return nil, false
	}
	return &o.BccRecipientAddresses, true
}

// HasBccRecipientAddresses returns a boolean if a field has been set.
func (o *EmailMetaData) HasBccRecipientAddresses() bool {
	if o != nil && o.BccRecipientAddresses != nil {
		return true
	}

	return false
}

// SetBccRecipientAddresses gets a reference to the given []string and assigns it to the BccRecipientAddresses field.
func (o *EmailMetaData) SetBccRecipientAddresses(v []string) {
	o.BccRecipientAddresses = v
}

// GetCcRecipientAddresses returns the CcRecipientAddresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetCcRecipientAddresses() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.CcRecipientAddresses
}

// GetCcRecipientAddressesOk returns a tuple with the CcRecipientAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetCcRecipientAddressesOk() (*[]string, bool) {
	if o == nil || o.CcRecipientAddresses == nil {
		return nil, false
	}
	return &o.CcRecipientAddresses, true
}

// HasCcRecipientAddresses returns a boolean if a field has been set.
func (o *EmailMetaData) HasCcRecipientAddresses() bool {
	if o != nil && o.CcRecipientAddresses != nil {
		return true
	}

	return false
}

// SetCcRecipientAddresses gets a reference to the given []string and assigns it to the CcRecipientAddresses field.
func (o *EmailMetaData) SetCcRecipientAddresses(v []string) {
	o.CcRecipientAddresses = v
}

// GetDomainIds returns the DomainIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetDomainIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.DomainIds
}

// GetDomainIdsOk returns a tuple with the DomainIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetDomainIdsOk() (*[]int64, bool) {
	if o == nil || o.DomainIds == nil {
		return nil, false
	}
	return &o.DomainIds, true
}

// HasDomainIds returns a boolean if a field has been set.
func (o *EmailMetaData) HasDomainIds() bool {
	if o != nil && o.DomainIds != nil {
		return true
	}

	return false
}

// SetDomainIds gets a reference to the given []int64 and assigns it to the DomainIds field.
func (o *EmailMetaData) SetDomainIds(v []int64) {
	o.DomainIds = v
}

// GetEmailSubject returns the EmailSubject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetEmailSubject() string {
	if o == nil || o.EmailSubject.Get() == nil {
		var ret string
		return ret
	}
	return *o.EmailSubject.Get()
}

// GetEmailSubjectOk returns a tuple with the EmailSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetEmailSubjectOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EmailSubject.Get(), o.EmailSubject.IsSet()
}

// HasEmailSubject returns a boolean if a field has been set.
func (o *EmailMetaData) HasEmailSubject() bool {
	if o != nil && o.EmailSubject.IsSet() {
		return true
	}

	return false
}

// SetEmailSubject gets a reference to the given NullableString and assigns it to the EmailSubject field.
func (o *EmailMetaData) SetEmailSubject(v string) {
	o.EmailSubject.Set(&v)
}
// SetEmailSubjectNil sets the value for EmailSubject to be an explicit nil
func (o *EmailMetaData) SetEmailSubjectNil() {
	o.EmailSubject.Set(nil)
}

// UnsetEmailSubject ensures that no value is present for EmailSubject, not even an explicit nil
func (o *EmailMetaData) UnsetEmailSubject() {
	o.EmailSubject.Unset()
}

// GetFolderKey returns the FolderKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetFolderKey() int64 {
	if o == nil || o.FolderKey.Get() == nil {
		var ret int64
		return ret
	}
	return *o.FolderKey.Get()
}

// GetFolderKeyOk returns a tuple with the FolderKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetFolderKeyOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FolderKey.Get(), o.FolderKey.IsSet()
}

// HasFolderKey returns a boolean if a field has been set.
func (o *EmailMetaData) HasFolderKey() bool {
	if o != nil && o.FolderKey.IsSet() {
		return true
	}

	return false
}

// SetFolderKey gets a reference to the given NullableInt64 and assigns it to the FolderKey field.
func (o *EmailMetaData) SetFolderKey(v int64) {
	o.FolderKey.Set(&v)
}
// SetFolderKeyNil sets the value for FolderKey to be an explicit nil
func (o *EmailMetaData) SetFolderKeyNil() {
	o.FolderKey.Set(nil)
}

// UnsetFolderKey ensures that no value is present for FolderKey, not even an explicit nil
func (o *EmailMetaData) UnsetFolderKey() {
	o.FolderKey.Unset()
}

// GetFolderName returns the FolderName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetFolderName() string {
	if o == nil || o.FolderName.Get() == nil {
		var ret string
		return ret
	}
	return *o.FolderName.Get()
}

// GetFolderNameOk returns a tuple with the FolderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetFolderNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FolderName.Get(), o.FolderName.IsSet()
}

// HasFolderName returns a boolean if a field has been set.
func (o *EmailMetaData) HasFolderName() bool {
	if o != nil && o.FolderName.IsSet() {
		return true
	}

	return false
}

// SetFolderName gets a reference to the given NullableString and assigns it to the FolderName field.
func (o *EmailMetaData) SetFolderName(v string) {
	o.FolderName.Set(&v)
}
// SetFolderNameNil sets the value for FolderName to be an explicit nil
func (o *EmailMetaData) SetFolderNameNil() {
	o.FolderName.Set(nil)
}

// UnsetFolderName ensures that no value is present for FolderName, not even an explicit nil
func (o *EmailMetaData) UnsetFolderName() {
	o.FolderName.Unset()
}

// GetHasAttachments returns the HasAttachments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetHasAttachments() bool {
	if o == nil || o.HasAttachments.Get() == nil {
		var ret bool
		return ret
	}
	return *o.HasAttachments.Get()
}

// GetHasAttachmentsOk returns a tuple with the HasAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetHasAttachmentsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HasAttachments.Get(), o.HasAttachments.IsSet()
}

// HasHasAttachments returns a boolean if a field has been set.
func (o *EmailMetaData) HasHasAttachments() bool {
	if o != nil && o.HasAttachments.IsSet() {
		return true
	}

	return false
}

// SetHasAttachments gets a reference to the given NullableBool and assigns it to the HasAttachments field.
func (o *EmailMetaData) SetHasAttachments(v bool) {
	o.HasAttachments.Set(&v)
}
// SetHasAttachmentsNil sets the value for HasAttachments to be an explicit nil
func (o *EmailMetaData) SetHasAttachmentsNil() {
	o.HasAttachments.Set(nil)
}

// UnsetHasAttachments ensures that no value is present for HasAttachments, not even an explicit nil
func (o *EmailMetaData) UnsetHasAttachments() {
	o.HasAttachments.Unset()
}

// GetItemKey returns the ItemKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetItemKey() string {
	if o == nil || o.ItemKey.Get() == nil {
		var ret string
		return ret
	}
	return *o.ItemKey.Get()
}

// GetItemKeyOk returns a tuple with the ItemKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetItemKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ItemKey.Get(), o.ItemKey.IsSet()
}

// HasItemKey returns a boolean if a field has been set.
func (o *EmailMetaData) HasItemKey() bool {
	if o != nil && o.ItemKey.IsSet() {
		return true
	}

	return false
}

// SetItemKey gets a reference to the given NullableString and assigns it to the ItemKey field.
func (o *EmailMetaData) SetItemKey(v string) {
	o.ItemKey.Set(&v)
}
// SetItemKeyNil sets the value for ItemKey to be an explicit nil
func (o *EmailMetaData) SetItemKeyNil() {
	o.ItemKey.Set(nil)
}

// UnsetItemKey ensures that no value is present for ItemKey, not even an explicit nil
func (o *EmailMetaData) UnsetItemKey() {
	o.ItemKey.Unset()
}

// GetMailboxIds returns the MailboxIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetMailboxIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.MailboxIds
}

// GetMailboxIdsOk returns a tuple with the MailboxIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetMailboxIdsOk() (*[]int64, bool) {
	if o == nil || o.MailboxIds == nil {
		return nil, false
	}
	return &o.MailboxIds, true
}

// HasMailboxIds returns a boolean if a field has been set.
func (o *EmailMetaData) HasMailboxIds() bool {
	if o != nil && o.MailboxIds != nil {
		return true
	}

	return false
}

// SetMailboxIds gets a reference to the given []int64 and assigns it to the MailboxIds field.
func (o *EmailMetaData) SetMailboxIds(v []int64) {
	o.MailboxIds = v
}

// GetProtectionJobIds returns the ProtectionJobIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetProtectionJobIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.ProtectionJobIds
}

// GetProtectionJobIdsOk returns a tuple with the ProtectionJobIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetProtectionJobIdsOk() (*[]int64, bool) {
	if o == nil || o.ProtectionJobIds == nil {
		return nil, false
	}
	return &o.ProtectionJobIds, true
}

// HasProtectionJobIds returns a boolean if a field has been set.
func (o *EmailMetaData) HasProtectionJobIds() bool {
	if o != nil && o.ProtectionJobIds != nil {
		return true
	}

	return false
}

// SetProtectionJobIds gets a reference to the given []int64 and assigns it to the ProtectionJobIds field.
func (o *EmailMetaData) SetProtectionJobIds(v []int64) {
	o.ProtectionJobIds = v
}

// GetReceivedEndTime returns the ReceivedEndTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetReceivedEndTime() int64 {
	if o == nil || o.ReceivedEndTime.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ReceivedEndTime.Get()
}

// GetReceivedEndTimeOk returns a tuple with the ReceivedEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetReceivedEndTimeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReceivedEndTime.Get(), o.ReceivedEndTime.IsSet()
}

// HasReceivedEndTime returns a boolean if a field has been set.
func (o *EmailMetaData) HasReceivedEndTime() bool {
	if o != nil && o.ReceivedEndTime.IsSet() {
		return true
	}

	return false
}

// SetReceivedEndTime gets a reference to the given NullableInt64 and assigns it to the ReceivedEndTime field.
func (o *EmailMetaData) SetReceivedEndTime(v int64) {
	o.ReceivedEndTime.Set(&v)
}
// SetReceivedEndTimeNil sets the value for ReceivedEndTime to be an explicit nil
func (o *EmailMetaData) SetReceivedEndTimeNil() {
	o.ReceivedEndTime.Set(nil)
}

// UnsetReceivedEndTime ensures that no value is present for ReceivedEndTime, not even an explicit nil
func (o *EmailMetaData) UnsetReceivedEndTime() {
	o.ReceivedEndTime.Unset()
}

// GetReceivedStartTime returns the ReceivedStartTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetReceivedStartTime() int64 {
	if o == nil || o.ReceivedStartTime.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ReceivedStartTime.Get()
}

// GetReceivedStartTimeOk returns a tuple with the ReceivedStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetReceivedStartTimeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReceivedStartTime.Get(), o.ReceivedStartTime.IsSet()
}

// HasReceivedStartTime returns a boolean if a field has been set.
func (o *EmailMetaData) HasReceivedStartTime() bool {
	if o != nil && o.ReceivedStartTime.IsSet() {
		return true
	}

	return false
}

// SetReceivedStartTime gets a reference to the given NullableInt64 and assigns it to the ReceivedStartTime field.
func (o *EmailMetaData) SetReceivedStartTime(v int64) {
	o.ReceivedStartTime.Set(&v)
}
// SetReceivedStartTimeNil sets the value for ReceivedStartTime to be an explicit nil
func (o *EmailMetaData) SetReceivedStartTimeNil() {
	o.ReceivedStartTime.Set(nil)
}

// UnsetReceivedStartTime ensures that no value is present for ReceivedStartTime, not even an explicit nil
func (o *EmailMetaData) UnsetReceivedStartTime() {
	o.ReceivedStartTime.Unset()
}

// GetReceivedTimeSeconds returns the ReceivedTimeSeconds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetReceivedTimeSeconds() int64 {
	if o == nil || o.ReceivedTimeSeconds.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ReceivedTimeSeconds.Get()
}

// GetReceivedTimeSecondsOk returns a tuple with the ReceivedTimeSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetReceivedTimeSecondsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReceivedTimeSeconds.Get(), o.ReceivedTimeSeconds.IsSet()
}

// HasReceivedTimeSeconds returns a boolean if a field has been set.
func (o *EmailMetaData) HasReceivedTimeSeconds() bool {
	if o != nil && o.ReceivedTimeSeconds.IsSet() {
		return true
	}

	return false
}

// SetReceivedTimeSeconds gets a reference to the given NullableInt64 and assigns it to the ReceivedTimeSeconds field.
func (o *EmailMetaData) SetReceivedTimeSeconds(v int64) {
	o.ReceivedTimeSeconds.Set(&v)
}
// SetReceivedTimeSecondsNil sets the value for ReceivedTimeSeconds to be an explicit nil
func (o *EmailMetaData) SetReceivedTimeSecondsNil() {
	o.ReceivedTimeSeconds.Set(nil)
}

// UnsetReceivedTimeSeconds ensures that no value is present for ReceivedTimeSeconds, not even an explicit nil
func (o *EmailMetaData) UnsetReceivedTimeSeconds() {
	o.ReceivedTimeSeconds.Unset()
}

// GetRecipientAddresses returns the RecipientAddresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetRecipientAddresses() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.RecipientAddresses
}

// GetRecipientAddressesOk returns a tuple with the RecipientAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetRecipientAddressesOk() (*[]string, bool) {
	if o == nil || o.RecipientAddresses == nil {
		return nil, false
	}
	return &o.RecipientAddresses, true
}

// HasRecipientAddresses returns a boolean if a field has been set.
func (o *EmailMetaData) HasRecipientAddresses() bool {
	if o != nil && o.RecipientAddresses != nil {
		return true
	}

	return false
}

// SetRecipientAddresses gets a reference to the given []string and assigns it to the RecipientAddresses field.
func (o *EmailMetaData) SetRecipientAddresses(v []string) {
	o.RecipientAddresses = v
}

// GetSenderAddress returns the SenderAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetSenderAddress() string {
	if o == nil || o.SenderAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.SenderAddress.Get()
}

// GetSenderAddressOk returns a tuple with the SenderAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetSenderAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SenderAddress.Get(), o.SenderAddress.IsSet()
}

// HasSenderAddress returns a boolean if a field has been set.
func (o *EmailMetaData) HasSenderAddress() bool {
	if o != nil && o.SenderAddress.IsSet() {
		return true
	}

	return false
}

// SetSenderAddress gets a reference to the given NullableString and assigns it to the SenderAddress field.
func (o *EmailMetaData) SetSenderAddress(v string) {
	o.SenderAddress.Set(&v)
}
// SetSenderAddressNil sets the value for SenderAddress to be an explicit nil
func (o *EmailMetaData) SetSenderAddressNil() {
	o.SenderAddress.Set(nil)
}

// UnsetSenderAddress ensures that no value is present for SenderAddress, not even an explicit nil
func (o *EmailMetaData) UnsetSenderAddress() {
	o.SenderAddress.Unset()
}

// GetSentTimeSeconds returns the SentTimeSeconds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetSentTimeSeconds() int64 {
	if o == nil || o.SentTimeSeconds.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SentTimeSeconds.Get()
}

// GetSentTimeSecondsOk returns a tuple with the SentTimeSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetSentTimeSecondsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SentTimeSeconds.Get(), o.SentTimeSeconds.IsSet()
}

// HasSentTimeSeconds returns a boolean if a field has been set.
func (o *EmailMetaData) HasSentTimeSeconds() bool {
	if o != nil && o.SentTimeSeconds.IsSet() {
		return true
	}

	return false
}

// SetSentTimeSeconds gets a reference to the given NullableInt64 and assigns it to the SentTimeSeconds field.
func (o *EmailMetaData) SetSentTimeSeconds(v int64) {
	o.SentTimeSeconds.Set(&v)
}
// SetSentTimeSecondsNil sets the value for SentTimeSeconds to be an explicit nil
func (o *EmailMetaData) SetSentTimeSecondsNil() {
	o.SentTimeSeconds.Set(nil)
}

// UnsetSentTimeSeconds ensures that no value is present for SentTimeSeconds, not even an explicit nil
func (o *EmailMetaData) UnsetSentTimeSeconds() {
	o.SentTimeSeconds.Unset()
}

// GetShowOnlyEmailFolders returns the ShowOnlyEmailFolders field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetShowOnlyEmailFolders() bool {
	if o == nil || o.ShowOnlyEmailFolders.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ShowOnlyEmailFolders.Get()
}

// GetShowOnlyEmailFoldersOk returns a tuple with the ShowOnlyEmailFolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetShowOnlyEmailFoldersOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ShowOnlyEmailFolders.Get(), o.ShowOnlyEmailFolders.IsSet()
}

// HasShowOnlyEmailFolders returns a boolean if a field has been set.
func (o *EmailMetaData) HasShowOnlyEmailFolders() bool {
	if o != nil && o.ShowOnlyEmailFolders.IsSet() {
		return true
	}

	return false
}

// SetShowOnlyEmailFolders gets a reference to the given NullableBool and assigns it to the ShowOnlyEmailFolders field.
func (o *EmailMetaData) SetShowOnlyEmailFolders(v bool) {
	o.ShowOnlyEmailFolders.Set(&v)
}
// SetShowOnlyEmailFoldersNil sets the value for ShowOnlyEmailFolders to be an explicit nil
func (o *EmailMetaData) SetShowOnlyEmailFoldersNil() {
	o.ShowOnlyEmailFolders.Set(nil)
}

// UnsetShowOnlyEmailFolders ensures that no value is present for ShowOnlyEmailFolders, not even an explicit nil
func (o *EmailMetaData) UnsetShowOnlyEmailFolders() {
	o.ShowOnlyEmailFolders.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailMetaData) GetTenantId() string {
	if o == nil || o.TenantId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailMetaData) GetTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *EmailMetaData) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *EmailMetaData) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *EmailMetaData) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *EmailMetaData) UnsetTenantId() {
	o.TenantId.Unset()
}

func (o EmailMetaData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllUnderHierarchy.IsSet() {
		toSerialize["allUnderHierarchy"] = o.AllUnderHierarchy.Get()
	}
	if o.BccRecipientAddresses != nil {
		toSerialize["bccRecipientAddresses"] = o.BccRecipientAddresses
	}
	if o.CcRecipientAddresses != nil {
		toSerialize["ccRecipientAddresses"] = o.CcRecipientAddresses
	}
	if o.DomainIds != nil {
		toSerialize["domainIds"] = o.DomainIds
	}
	if o.EmailSubject.IsSet() {
		toSerialize["emailSubject"] = o.EmailSubject.Get()
	}
	if o.FolderKey.IsSet() {
		toSerialize["folderKey"] = o.FolderKey.Get()
	}
	if o.FolderName.IsSet() {
		toSerialize["folderName"] = o.FolderName.Get()
	}
	if o.HasAttachments.IsSet() {
		toSerialize["hasAttachments"] = o.HasAttachments.Get()
	}
	if o.ItemKey.IsSet() {
		toSerialize["itemKey"] = o.ItemKey.Get()
	}
	if o.MailboxIds != nil {
		toSerialize["mailboxIds"] = o.MailboxIds
	}
	if o.ProtectionJobIds != nil {
		toSerialize["protectionJobIds"] = o.ProtectionJobIds
	}
	if o.ReceivedEndTime.IsSet() {
		toSerialize["receivedEndTime"] = o.ReceivedEndTime.Get()
	}
	if o.ReceivedStartTime.IsSet() {
		toSerialize["receivedStartTime"] = o.ReceivedStartTime.Get()
	}
	if o.ReceivedTimeSeconds.IsSet() {
		toSerialize["receivedTimeSeconds"] = o.ReceivedTimeSeconds.Get()
	}
	if o.RecipientAddresses != nil {
		toSerialize["recipientAddresses"] = o.RecipientAddresses
	}
	if o.SenderAddress.IsSet() {
		toSerialize["senderAddress"] = o.SenderAddress.Get()
	}
	if o.SentTimeSeconds.IsSet() {
		toSerialize["sentTimeSeconds"] = o.SentTimeSeconds.Get()
	}
	if o.ShowOnlyEmailFolders.IsSet() {
		toSerialize["showOnlyEmailFolders"] = o.ShowOnlyEmailFolders.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableEmailMetaData struct {
	value *EmailMetaData
	isSet bool
}

func (v NullableEmailMetaData) Get() *EmailMetaData {
	return v.value
}

func (v *NullableEmailMetaData) Set(val *EmailMetaData) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailMetaData) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailMetaData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailMetaData(val *EmailMetaData) *NullableEmailMetaData {
	return &NullableEmailMetaData{value: val, isSet: true}
}

func (v NullableEmailMetaData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailMetaData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


