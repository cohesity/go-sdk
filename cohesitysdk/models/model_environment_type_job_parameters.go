/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// EnvironmentTypeJobParameters Specifies additional parameters that are common to all Protection Sources in a Protection Job created for a particular environment type.
type EnvironmentTypeJobParameters struct {
	AwsSnapshotParameters *AwsSnapshotManagerParameters `json:"awsSnapshotParameters,omitempty"`
	ExchangeParameters *ExchangeEnvJobParameters `json:"exchangeParameters,omitempty"`
	HypervParameters *HypervEnvJobParameters `json:"hypervParameters,omitempty"`
	NasParameters *NasEnvJobParameters `json:"nasParameters,omitempty"`
	Office365Parameters *Office365EnvJobParameters `json:"office365Parameters,omitempty"`
	OracleParameters *OracleEnvJobParameters `json:"oracleParameters,omitempty"`
	PhysicalParameters *PhysicalEnvJobParameters `json:"physicalParameters,omitempty"`
	PureParameters *SanEnvJobParameters `json:"pureParameters,omitempty"`
	SqlParameters *SqlEnvJobParameters `json:"sqlParameters,omitempty"`
	VmwareParameters *VmwareEnvJobParameters `json:"vmwareParameters,omitempty"`
}

// NewEnvironmentTypeJobParameters instantiates a new EnvironmentTypeJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentTypeJobParameters() *EnvironmentTypeJobParameters {
	this := EnvironmentTypeJobParameters{}
	return &this
}

// NewEnvironmentTypeJobParametersWithDefaults instantiates a new EnvironmentTypeJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentTypeJobParametersWithDefaults() *EnvironmentTypeJobParameters {
	this := EnvironmentTypeJobParameters{}
	return &this
}

// GetAwsSnapshotParameters returns the AwsSnapshotParameters field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParameters) GetAwsSnapshotParameters() AwsSnapshotManagerParameters {
	if o == nil || o.AwsSnapshotParameters == nil {
		var ret AwsSnapshotManagerParameters
		return ret
	}
	return *o.AwsSnapshotParameters
}

// GetAwsSnapshotParametersOk returns a tuple with the AwsSnapshotParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParameters) GetAwsSnapshotParametersOk() (*AwsSnapshotManagerParameters, bool) {
	if o == nil || o.AwsSnapshotParameters == nil {
		return nil, false
	}
	return o.AwsSnapshotParameters, true
}

// HasAwsSnapshotParameters returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParameters) HasAwsSnapshotParameters() bool {
	if o != nil && o.AwsSnapshotParameters != nil {
		return true
	}

	return false
}

// SetAwsSnapshotParameters gets a reference to the given AwsSnapshotManagerParameters and assigns it to the AwsSnapshotParameters field.
func (o *EnvironmentTypeJobParameters) SetAwsSnapshotParameters(v AwsSnapshotManagerParameters) {
	o.AwsSnapshotParameters = &v
}

// GetExchangeParameters returns the ExchangeParameters field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParameters) GetExchangeParameters() ExchangeEnvJobParameters {
	if o == nil || o.ExchangeParameters == nil {
		var ret ExchangeEnvJobParameters
		return ret
	}
	return *o.ExchangeParameters
}

// GetExchangeParametersOk returns a tuple with the ExchangeParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParameters) GetExchangeParametersOk() (*ExchangeEnvJobParameters, bool) {
	if o == nil || o.ExchangeParameters == nil {
		return nil, false
	}
	return o.ExchangeParameters, true
}

// HasExchangeParameters returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParameters) HasExchangeParameters() bool {
	if o != nil && o.ExchangeParameters != nil {
		return true
	}

	return false
}

// SetExchangeParameters gets a reference to the given ExchangeEnvJobParameters and assigns it to the ExchangeParameters field.
func (o *EnvironmentTypeJobParameters) SetExchangeParameters(v ExchangeEnvJobParameters) {
	o.ExchangeParameters = &v
}

// GetHypervParameters returns the HypervParameters field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParameters) GetHypervParameters() HypervEnvJobParameters {
	if o == nil || o.HypervParameters == nil {
		var ret HypervEnvJobParameters
		return ret
	}
	return *o.HypervParameters
}

// GetHypervParametersOk returns a tuple with the HypervParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParameters) GetHypervParametersOk() (*HypervEnvJobParameters, bool) {
	if o == nil || o.HypervParameters == nil {
		return nil, false
	}
	return o.HypervParameters, true
}

// HasHypervParameters returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParameters) HasHypervParameters() bool {
	if o != nil && o.HypervParameters != nil {
		return true
	}

	return false
}

// SetHypervParameters gets a reference to the given HypervEnvJobParameters and assigns it to the HypervParameters field.
func (o *EnvironmentTypeJobParameters) SetHypervParameters(v HypervEnvJobParameters) {
	o.HypervParameters = &v
}

// GetNasParameters returns the NasParameters field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParameters) GetNasParameters() NasEnvJobParameters {
	if o == nil || o.NasParameters == nil {
		var ret NasEnvJobParameters
		return ret
	}
	return *o.NasParameters
}

// GetNasParametersOk returns a tuple with the NasParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParameters) GetNasParametersOk() (*NasEnvJobParameters, bool) {
	if o == nil || o.NasParameters == nil {
		return nil, false
	}
	return o.NasParameters, true
}

// HasNasParameters returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParameters) HasNasParameters() bool {
	if o != nil && o.NasParameters != nil {
		return true
	}

	return false
}

// SetNasParameters gets a reference to the given NasEnvJobParameters and assigns it to the NasParameters field.
func (o *EnvironmentTypeJobParameters) SetNasParameters(v NasEnvJobParameters) {
	o.NasParameters = &v
}

// GetOffice365Parameters returns the Office365Parameters field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParameters) GetOffice365Parameters() Office365EnvJobParameters {
	if o == nil || o.Office365Parameters == nil {
		var ret Office365EnvJobParameters
		return ret
	}
	return *o.Office365Parameters
}

// GetOffice365ParametersOk returns a tuple with the Office365Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParameters) GetOffice365ParametersOk() (*Office365EnvJobParameters, bool) {
	if o == nil || o.Office365Parameters == nil {
		return nil, false
	}
	return o.Office365Parameters, true
}

// HasOffice365Parameters returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParameters) HasOffice365Parameters() bool {
	if o != nil && o.Office365Parameters != nil {
		return true
	}

	return false
}

// SetOffice365Parameters gets a reference to the given Office365EnvJobParameters and assigns it to the Office365Parameters field.
func (o *EnvironmentTypeJobParameters) SetOffice365Parameters(v Office365EnvJobParameters) {
	o.Office365Parameters = &v
}

// GetOracleParameters returns the OracleParameters field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParameters) GetOracleParameters() OracleEnvJobParameters {
	if o == nil || o.OracleParameters == nil {
		var ret OracleEnvJobParameters
		return ret
	}
	return *o.OracleParameters
}

// GetOracleParametersOk returns a tuple with the OracleParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParameters) GetOracleParametersOk() (*OracleEnvJobParameters, bool) {
	if o == nil || o.OracleParameters == nil {
		return nil, false
	}
	return o.OracleParameters, true
}

// HasOracleParameters returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParameters) HasOracleParameters() bool {
	if o != nil && o.OracleParameters != nil {
		return true
	}

	return false
}

// SetOracleParameters gets a reference to the given OracleEnvJobParameters and assigns it to the OracleParameters field.
func (o *EnvironmentTypeJobParameters) SetOracleParameters(v OracleEnvJobParameters) {
	o.OracleParameters = &v
}

// GetPhysicalParameters returns the PhysicalParameters field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParameters) GetPhysicalParameters() PhysicalEnvJobParameters {
	if o == nil || o.PhysicalParameters == nil {
		var ret PhysicalEnvJobParameters
		return ret
	}
	return *o.PhysicalParameters
}

// GetPhysicalParametersOk returns a tuple with the PhysicalParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParameters) GetPhysicalParametersOk() (*PhysicalEnvJobParameters, bool) {
	if o == nil || o.PhysicalParameters == nil {
		return nil, false
	}
	return o.PhysicalParameters, true
}

// HasPhysicalParameters returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParameters) HasPhysicalParameters() bool {
	if o != nil && o.PhysicalParameters != nil {
		return true
	}

	return false
}

// SetPhysicalParameters gets a reference to the given PhysicalEnvJobParameters and assigns it to the PhysicalParameters field.
func (o *EnvironmentTypeJobParameters) SetPhysicalParameters(v PhysicalEnvJobParameters) {
	o.PhysicalParameters = &v
}

// GetPureParameters returns the PureParameters field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParameters) GetPureParameters() SanEnvJobParameters {
	if o == nil || o.PureParameters == nil {
		var ret SanEnvJobParameters
		return ret
	}
	return *o.PureParameters
}

// GetPureParametersOk returns a tuple with the PureParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParameters) GetPureParametersOk() (*SanEnvJobParameters, bool) {
	if o == nil || o.PureParameters == nil {
		return nil, false
	}
	return o.PureParameters, true
}

// HasPureParameters returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParameters) HasPureParameters() bool {
	if o != nil && o.PureParameters != nil {
		return true
	}

	return false
}

// SetPureParameters gets a reference to the given SanEnvJobParameters and assigns it to the PureParameters field.
func (o *EnvironmentTypeJobParameters) SetPureParameters(v SanEnvJobParameters) {
	o.PureParameters = &v
}

// GetSqlParameters returns the SqlParameters field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParameters) GetSqlParameters() SqlEnvJobParameters {
	if o == nil || o.SqlParameters == nil {
		var ret SqlEnvJobParameters
		return ret
	}
	return *o.SqlParameters
}

// GetSqlParametersOk returns a tuple with the SqlParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParameters) GetSqlParametersOk() (*SqlEnvJobParameters, bool) {
	if o == nil || o.SqlParameters == nil {
		return nil, false
	}
	return o.SqlParameters, true
}

// HasSqlParameters returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParameters) HasSqlParameters() bool {
	if o != nil && o.SqlParameters != nil {
		return true
	}

	return false
}

// SetSqlParameters gets a reference to the given SqlEnvJobParameters and assigns it to the SqlParameters field.
func (o *EnvironmentTypeJobParameters) SetSqlParameters(v SqlEnvJobParameters) {
	o.SqlParameters = &v
}

// GetVmwareParameters returns the VmwareParameters field value if set, zero value otherwise.
func (o *EnvironmentTypeJobParameters) GetVmwareParameters() VmwareEnvJobParameters {
	if o == nil || o.VmwareParameters == nil {
		var ret VmwareEnvJobParameters
		return ret
	}
	return *o.VmwareParameters
}

// GetVmwareParametersOk returns a tuple with the VmwareParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentTypeJobParameters) GetVmwareParametersOk() (*VmwareEnvJobParameters, bool) {
	if o == nil || o.VmwareParameters == nil {
		return nil, false
	}
	return o.VmwareParameters, true
}

// HasVmwareParameters returns a boolean if a field has been set.
func (o *EnvironmentTypeJobParameters) HasVmwareParameters() bool {
	if o != nil && o.VmwareParameters != nil {
		return true
	}

	return false
}

// SetVmwareParameters gets a reference to the given VmwareEnvJobParameters and assigns it to the VmwareParameters field.
func (o *EnvironmentTypeJobParameters) SetVmwareParameters(v VmwareEnvJobParameters) {
	o.VmwareParameters = &v
}

func (o EnvironmentTypeJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AwsSnapshotParameters != nil {
		toSerialize["awsSnapshotParameters"] = o.AwsSnapshotParameters
	}
	if o.ExchangeParameters != nil {
		toSerialize["exchangeParameters"] = o.ExchangeParameters
	}
	if o.HypervParameters != nil {
		toSerialize["hypervParameters"] = o.HypervParameters
	}
	if o.NasParameters != nil {
		toSerialize["nasParameters"] = o.NasParameters
	}
	if o.Office365Parameters != nil {
		toSerialize["office365Parameters"] = o.Office365Parameters
	}
	if o.OracleParameters != nil {
		toSerialize["oracleParameters"] = o.OracleParameters
	}
	if o.PhysicalParameters != nil {
		toSerialize["physicalParameters"] = o.PhysicalParameters
	}
	if o.PureParameters != nil {
		toSerialize["pureParameters"] = o.PureParameters
	}
	if o.SqlParameters != nil {
		toSerialize["sqlParameters"] = o.SqlParameters
	}
	if o.VmwareParameters != nil {
		toSerialize["vmwareParameters"] = o.VmwareParameters
	}
	return json.Marshal(toSerialize)
}

type NullableEnvironmentTypeJobParameters struct {
	value *EnvironmentTypeJobParameters
	isSet bool
}

func (v NullableEnvironmentTypeJobParameters) Get() *EnvironmentTypeJobParameters {
	return v.value
}

func (v *NullableEnvironmentTypeJobParameters) Set(val *EnvironmentTypeJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentTypeJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentTypeJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentTypeJobParameters(val *EnvironmentTypeJobParameters) *NullableEnvironmentTypeJobParameters {
	return &NullableEnvironmentTypeJobParameters{value: val, isSet: true}
}

func (v NullableEnvironmentTypeJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentTypeJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


