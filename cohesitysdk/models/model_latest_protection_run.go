/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// LatestProtectionRun Specifies the information about the latest Protection Run.
type LatestProtectionRun struct {
	BackupRun *SourceBackupStatus `json:"backupRun,omitempty"`
	// Specifies the event id which caused last update on this object.
	ChangeEventId NullableInt64 `json:"changeEventId,omitempty"`
	CopyRun *CopyRun `json:"copyRun,omitempty"`
	// Specifies job run id of the latest successful Protection Job Run.
	JobRunId NullableInt64 `json:"jobRunId,omitempty"`
	ProtectionJobRunUid *RunUid `json:"protectionJobRunUid,omitempty"`
	// Specifies the cluster id in case of local or replication snapshots and name of location in case of archival snapshots.
	SnapshotTarget NullableString `json:"snapshotTarget,omitempty"`
	// Specifies the snapshot target type of the latest snapshot.
	SnapshotTargetType NullableInt32 `json:"snapshotTargetType,omitempty"`
	// Specifies the task status of the Protection Job Run in the final attempt.
	TaskStatus NullableInt32 `json:"taskStatus,omitempty"`
	// Specifies the unique id of the Protection Source for which a snapshot is taken.
	Uuid NullableString `json:"uuid,omitempty"`
}

// NewLatestProtectionRun instantiates a new LatestProtectionRun object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLatestProtectionRun() *LatestProtectionRun {
	this := LatestProtectionRun{}
	return &this
}

// NewLatestProtectionRunWithDefaults instantiates a new LatestProtectionRun object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLatestProtectionRunWithDefaults() *LatestProtectionRun {
	this := LatestProtectionRun{}
	return &this
}

// GetBackupRun returns the BackupRun field value if set, zero value otherwise.
func (o *LatestProtectionRun) GetBackupRun() SourceBackupStatus {
	if o == nil || o.BackupRun == nil {
		var ret SourceBackupStatus
		return ret
	}
	return *o.BackupRun
}

// GetBackupRunOk returns a tuple with the BackupRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestProtectionRun) GetBackupRunOk() (*SourceBackupStatus, bool) {
	if o == nil || o.BackupRun == nil {
		return nil, false
	}
	return o.BackupRun, true
}

// HasBackupRun returns a boolean if a field has been set.
func (o *LatestProtectionRun) HasBackupRun() bool {
	if o != nil && o.BackupRun != nil {
		return true
	}

	return false
}

// SetBackupRun gets a reference to the given SourceBackupStatus and assigns it to the BackupRun field.
func (o *LatestProtectionRun) SetBackupRun(v SourceBackupStatus) {
	o.BackupRun = &v
}

// GetChangeEventId returns the ChangeEventId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestProtectionRun) GetChangeEventId() int64 {
	if o == nil || o.ChangeEventId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ChangeEventId.Get()
}

// GetChangeEventIdOk returns a tuple with the ChangeEventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestProtectionRun) GetChangeEventIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ChangeEventId.Get(), o.ChangeEventId.IsSet()
}

// HasChangeEventId returns a boolean if a field has been set.
func (o *LatestProtectionRun) HasChangeEventId() bool {
	if o != nil && o.ChangeEventId.IsSet() {
		return true
	}

	return false
}

// SetChangeEventId gets a reference to the given NullableInt64 and assigns it to the ChangeEventId field.
func (o *LatestProtectionRun) SetChangeEventId(v int64) {
	o.ChangeEventId.Set(&v)
}
// SetChangeEventIdNil sets the value for ChangeEventId to be an explicit nil
func (o *LatestProtectionRun) SetChangeEventIdNil() {
	o.ChangeEventId.Set(nil)
}

// UnsetChangeEventId ensures that no value is present for ChangeEventId, not even an explicit nil
func (o *LatestProtectionRun) UnsetChangeEventId() {
	o.ChangeEventId.Unset()
}

// GetCopyRun returns the CopyRun field value if set, zero value otherwise.
func (o *LatestProtectionRun) GetCopyRun() CopyRun {
	if o == nil || o.CopyRun == nil {
		var ret CopyRun
		return ret
	}
	return *o.CopyRun
}

// GetCopyRunOk returns a tuple with the CopyRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestProtectionRun) GetCopyRunOk() (*CopyRun, bool) {
	if o == nil || o.CopyRun == nil {
		return nil, false
	}
	return o.CopyRun, true
}

// HasCopyRun returns a boolean if a field has been set.
func (o *LatestProtectionRun) HasCopyRun() bool {
	if o != nil && o.CopyRun != nil {
		return true
	}

	return false
}

// SetCopyRun gets a reference to the given CopyRun and assigns it to the CopyRun field.
func (o *LatestProtectionRun) SetCopyRun(v CopyRun) {
	o.CopyRun = &v
}

// GetJobRunId returns the JobRunId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestProtectionRun) GetJobRunId() int64 {
	if o == nil || o.JobRunId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.JobRunId.Get()
}

// GetJobRunIdOk returns a tuple with the JobRunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestProtectionRun) GetJobRunIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobRunId.Get(), o.JobRunId.IsSet()
}

// HasJobRunId returns a boolean if a field has been set.
func (o *LatestProtectionRun) HasJobRunId() bool {
	if o != nil && o.JobRunId.IsSet() {
		return true
	}

	return false
}

// SetJobRunId gets a reference to the given NullableInt64 and assigns it to the JobRunId field.
func (o *LatestProtectionRun) SetJobRunId(v int64) {
	o.JobRunId.Set(&v)
}
// SetJobRunIdNil sets the value for JobRunId to be an explicit nil
func (o *LatestProtectionRun) SetJobRunIdNil() {
	o.JobRunId.Set(nil)
}

// UnsetJobRunId ensures that no value is present for JobRunId, not even an explicit nil
func (o *LatestProtectionRun) UnsetJobRunId() {
	o.JobRunId.Unset()
}

// GetProtectionJobRunUid returns the ProtectionJobRunUid field value if set, zero value otherwise.
func (o *LatestProtectionRun) GetProtectionJobRunUid() RunUid {
	if o == nil || o.ProtectionJobRunUid == nil {
		var ret RunUid
		return ret
	}
	return *o.ProtectionJobRunUid
}

// GetProtectionJobRunUidOk returns a tuple with the ProtectionJobRunUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestProtectionRun) GetProtectionJobRunUidOk() (*RunUid, bool) {
	if o == nil || o.ProtectionJobRunUid == nil {
		return nil, false
	}
	return o.ProtectionJobRunUid, true
}

// HasProtectionJobRunUid returns a boolean if a field has been set.
func (o *LatestProtectionRun) HasProtectionJobRunUid() bool {
	if o != nil && o.ProtectionJobRunUid != nil {
		return true
	}

	return false
}

// SetProtectionJobRunUid gets a reference to the given RunUid and assigns it to the ProtectionJobRunUid field.
func (o *LatestProtectionRun) SetProtectionJobRunUid(v RunUid) {
	o.ProtectionJobRunUid = &v
}

// GetSnapshotTarget returns the SnapshotTarget field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestProtectionRun) GetSnapshotTarget() string {
	if o == nil || o.SnapshotTarget.Get() == nil {
		var ret string
		return ret
	}
	return *o.SnapshotTarget.Get()
}

// GetSnapshotTargetOk returns a tuple with the SnapshotTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestProtectionRun) GetSnapshotTargetOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SnapshotTarget.Get(), o.SnapshotTarget.IsSet()
}

// HasSnapshotTarget returns a boolean if a field has been set.
func (o *LatestProtectionRun) HasSnapshotTarget() bool {
	if o != nil && o.SnapshotTarget.IsSet() {
		return true
	}

	return false
}

// SetSnapshotTarget gets a reference to the given NullableString and assigns it to the SnapshotTarget field.
func (o *LatestProtectionRun) SetSnapshotTarget(v string) {
	o.SnapshotTarget.Set(&v)
}
// SetSnapshotTargetNil sets the value for SnapshotTarget to be an explicit nil
func (o *LatestProtectionRun) SetSnapshotTargetNil() {
	o.SnapshotTarget.Set(nil)
}

// UnsetSnapshotTarget ensures that no value is present for SnapshotTarget, not even an explicit nil
func (o *LatestProtectionRun) UnsetSnapshotTarget() {
	o.SnapshotTarget.Unset()
}

// GetSnapshotTargetType returns the SnapshotTargetType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestProtectionRun) GetSnapshotTargetType() int32 {
	if o == nil || o.SnapshotTargetType.Get() == nil {
		var ret int32
		return ret
	}
	return *o.SnapshotTargetType.Get()
}

// GetSnapshotTargetTypeOk returns a tuple with the SnapshotTargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestProtectionRun) GetSnapshotTargetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SnapshotTargetType.Get(), o.SnapshotTargetType.IsSet()
}

// HasSnapshotTargetType returns a boolean if a field has been set.
func (o *LatestProtectionRun) HasSnapshotTargetType() bool {
	if o != nil && o.SnapshotTargetType.IsSet() {
		return true
	}

	return false
}

// SetSnapshotTargetType gets a reference to the given NullableInt32 and assigns it to the SnapshotTargetType field.
func (o *LatestProtectionRun) SetSnapshotTargetType(v int32) {
	o.SnapshotTargetType.Set(&v)
}
// SetSnapshotTargetTypeNil sets the value for SnapshotTargetType to be an explicit nil
func (o *LatestProtectionRun) SetSnapshotTargetTypeNil() {
	o.SnapshotTargetType.Set(nil)
}

// UnsetSnapshotTargetType ensures that no value is present for SnapshotTargetType, not even an explicit nil
func (o *LatestProtectionRun) UnsetSnapshotTargetType() {
	o.SnapshotTargetType.Unset()
}

// GetTaskStatus returns the TaskStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestProtectionRun) GetTaskStatus() int32 {
	if o == nil || o.TaskStatus.Get() == nil {
		var ret int32
		return ret
	}
	return *o.TaskStatus.Get()
}

// GetTaskStatusOk returns a tuple with the TaskStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestProtectionRun) GetTaskStatusOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TaskStatus.Get(), o.TaskStatus.IsSet()
}

// HasTaskStatus returns a boolean if a field has been set.
func (o *LatestProtectionRun) HasTaskStatus() bool {
	if o != nil && o.TaskStatus.IsSet() {
		return true
	}

	return false
}

// SetTaskStatus gets a reference to the given NullableInt32 and assigns it to the TaskStatus field.
func (o *LatestProtectionRun) SetTaskStatus(v int32) {
	o.TaskStatus.Set(&v)
}
// SetTaskStatusNil sets the value for TaskStatus to be an explicit nil
func (o *LatestProtectionRun) SetTaskStatusNil() {
	o.TaskStatus.Set(nil)
}

// UnsetTaskStatus ensures that no value is present for TaskStatus, not even an explicit nil
func (o *LatestProtectionRun) UnsetTaskStatus() {
	o.TaskStatus.Unset()
}

// GetUuid returns the Uuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestProtectionRun) GetUuid() string {
	if o == nil || o.Uuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uuid.Get()
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestProtectionRun) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Uuid.Get(), o.Uuid.IsSet()
}

// HasUuid returns a boolean if a field has been set.
func (o *LatestProtectionRun) HasUuid() bool {
	if o != nil && o.Uuid.IsSet() {
		return true
	}

	return false
}

// SetUuid gets a reference to the given NullableString and assigns it to the Uuid field.
func (o *LatestProtectionRun) SetUuid(v string) {
	o.Uuid.Set(&v)
}
// SetUuidNil sets the value for Uuid to be an explicit nil
func (o *LatestProtectionRun) SetUuidNil() {
	o.Uuid.Set(nil)
}

// UnsetUuid ensures that no value is present for Uuid, not even an explicit nil
func (o *LatestProtectionRun) UnsetUuid() {
	o.Uuid.Unset()
}

func (o LatestProtectionRun) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BackupRun != nil {
		toSerialize["backupRun"] = o.BackupRun
	}
	if o.ChangeEventId.IsSet() {
		toSerialize["changeEventId"] = o.ChangeEventId.Get()
	}
	if o.CopyRun != nil {
		toSerialize["copyRun"] = o.CopyRun
	}
	if o.JobRunId.IsSet() {
		toSerialize["jobRunId"] = o.JobRunId.Get()
	}
	if o.ProtectionJobRunUid != nil {
		toSerialize["protectionJobRunUid"] = o.ProtectionJobRunUid
	}
	if o.SnapshotTarget.IsSet() {
		toSerialize["snapshotTarget"] = o.SnapshotTarget.Get()
	}
	if o.SnapshotTargetType.IsSet() {
		toSerialize["snapshotTargetType"] = o.SnapshotTargetType.Get()
	}
	if o.TaskStatus.IsSet() {
		toSerialize["taskStatus"] = o.TaskStatus.Get()
	}
	if o.Uuid.IsSet() {
		toSerialize["uuid"] = o.Uuid.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableLatestProtectionRun struct {
	value *LatestProtectionRun
	isSet bool
}

func (v NullableLatestProtectionRun) Get() *LatestProtectionRun {
	return v.value
}

func (v *NullableLatestProtectionRun) Set(val *LatestProtectionRun) {
	v.value = val
	v.isSet = true
}

func (v NullableLatestProtectionRun) IsSet() bool {
	return v.isSet
}

func (v *NullableLatestProtectionRun) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLatestProtectionRun(val *LatestProtectionRun) *NullableLatestProtectionRun {
	return &NullableLatestProtectionRun{value: val, isSet: true}
}

func (v NullableLatestProtectionRun) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLatestProtectionRun) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


