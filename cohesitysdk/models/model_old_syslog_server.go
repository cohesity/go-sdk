/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// OldSyslogServer Specifies the syslog servers configuration to upload Cluster audit logs and filer audit logs.
type OldSyslogServer struct {
	// Specifies the IP address or hostname of the syslog server.
	Address NullableString `json:"address"`
	// Specifies if cohesity alert should be sent to syslog server If 'true', alert audting message are sent to the server. If 'false', alert auditng message are not sent to the server.(default)
	IsAlertAuditingEnabled NullableBool `json:"isAlertAuditingEnabled,omitempty"`
	// Specifies if Cluster audit logs should be sent to this syslog server. If 'true', Cluster audit logs are sent to the syslog server. (default) If 'false', Cluster audit logs are not sent to the syslog server. Either cluster audit logs or filer audit logs should be enabled.
	IsClusterAuditingEnabled NullableBool `json:"isClusterAuditingEnabled,omitempty"`
	// Specifies if dataprotection  logs should be sent to syslog server If 'true', dataprotection  logs are sent to the server. If 'false', dataprotection  logs are not sent to the server.(default)
	IsDataProtectionEnabled NullableBool `json:"isDataProtectionEnabled,omitempty"`
	// Specifies if filer audit logs should be sent to this syslog server. If 'true', filer audit logs are sent to the syslog server. (default) If 'false', filer audit logs are not sent to the syslog server. Either cluster audit logs or filer audit logs should be enabled.
	IsFilerAuditingEnabled NullableBool `json:"isFilerAuditingEnabled,omitempty"`
	// Specifies if ssh login logs should be sent to syslog server If 'true', ssh login logs are sent to the server. If 'false', ssh login logs are not sent to the server.(default)
	IsSshLogEnabled NullableBool `json:"isSshLogEnabled,omitempty"`
	// Specifies a unique name for the syslog server on the Cluster.
	Name NullableString `json:"name,omitempty"`
	// Specifies the port where the syslog server listens.
	Port NullableInt32 `json:"port"`
	// Specifies the protocol used to send the logs.
	Protocol NullableInt32 `json:"protocol"`
}

// NewOldSyslogServer instantiates a new OldSyslogServer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOldSyslogServer(address NullableString, port NullableInt32, protocol NullableInt32) *OldSyslogServer {
	this := OldSyslogServer{}
	this.Address = address
	this.Port = port
	this.Protocol = protocol
	return &this
}

// NewOldSyslogServerWithDefaults instantiates a new OldSyslogServer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOldSyslogServerWithDefaults() *OldSyslogServer {
	this := OldSyslogServer{}
	return &this
}

// GetAddress returns the Address field value
// If the value is explicit nil, the zero value for string will be returned
func (o *OldSyslogServer) GetAddress() string {
	if o == nil || o.Address.Get() == nil {
		var ret string
		return ret
	}

	return *o.Address.Get()
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OldSyslogServer) GetAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Address.Get(), o.Address.IsSet()
}

// SetAddress sets field value
func (o *OldSyslogServer) SetAddress(v string) {
	o.Address.Set(&v)
}

// GetIsAlertAuditingEnabled returns the IsAlertAuditingEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OldSyslogServer) GetIsAlertAuditingEnabled() bool {
	if o == nil || o.IsAlertAuditingEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsAlertAuditingEnabled.Get()
}

// GetIsAlertAuditingEnabledOk returns a tuple with the IsAlertAuditingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OldSyslogServer) GetIsAlertAuditingEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsAlertAuditingEnabled.Get(), o.IsAlertAuditingEnabled.IsSet()
}

// HasIsAlertAuditingEnabled returns a boolean if a field has been set.
func (o *OldSyslogServer) HasIsAlertAuditingEnabled() bool {
	if o != nil && o.IsAlertAuditingEnabled.IsSet() {
		return true
	}

	return false
}

// SetIsAlertAuditingEnabled gets a reference to the given NullableBool and assigns it to the IsAlertAuditingEnabled field.
func (o *OldSyslogServer) SetIsAlertAuditingEnabled(v bool) {
	o.IsAlertAuditingEnabled.Set(&v)
}
// SetIsAlertAuditingEnabledNil sets the value for IsAlertAuditingEnabled to be an explicit nil
func (o *OldSyslogServer) SetIsAlertAuditingEnabledNil() {
	o.IsAlertAuditingEnabled.Set(nil)
}

// UnsetIsAlertAuditingEnabled ensures that no value is present for IsAlertAuditingEnabled, not even an explicit nil
func (o *OldSyslogServer) UnsetIsAlertAuditingEnabled() {
	o.IsAlertAuditingEnabled.Unset()
}

// GetIsClusterAuditingEnabled returns the IsClusterAuditingEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OldSyslogServer) GetIsClusterAuditingEnabled() bool {
	if o == nil || o.IsClusterAuditingEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsClusterAuditingEnabled.Get()
}

// GetIsClusterAuditingEnabledOk returns a tuple with the IsClusterAuditingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OldSyslogServer) GetIsClusterAuditingEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsClusterAuditingEnabled.Get(), o.IsClusterAuditingEnabled.IsSet()
}

// HasIsClusterAuditingEnabled returns a boolean if a field has been set.
func (o *OldSyslogServer) HasIsClusterAuditingEnabled() bool {
	if o != nil && o.IsClusterAuditingEnabled.IsSet() {
		return true
	}

	return false
}

// SetIsClusterAuditingEnabled gets a reference to the given NullableBool and assigns it to the IsClusterAuditingEnabled field.
func (o *OldSyslogServer) SetIsClusterAuditingEnabled(v bool) {
	o.IsClusterAuditingEnabled.Set(&v)
}
// SetIsClusterAuditingEnabledNil sets the value for IsClusterAuditingEnabled to be an explicit nil
func (o *OldSyslogServer) SetIsClusterAuditingEnabledNil() {
	o.IsClusterAuditingEnabled.Set(nil)
}

// UnsetIsClusterAuditingEnabled ensures that no value is present for IsClusterAuditingEnabled, not even an explicit nil
func (o *OldSyslogServer) UnsetIsClusterAuditingEnabled() {
	o.IsClusterAuditingEnabled.Unset()
}

// GetIsDataProtectionEnabled returns the IsDataProtectionEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OldSyslogServer) GetIsDataProtectionEnabled() bool {
	if o == nil || o.IsDataProtectionEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsDataProtectionEnabled.Get()
}

// GetIsDataProtectionEnabledOk returns a tuple with the IsDataProtectionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OldSyslogServer) GetIsDataProtectionEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsDataProtectionEnabled.Get(), o.IsDataProtectionEnabled.IsSet()
}

// HasIsDataProtectionEnabled returns a boolean if a field has been set.
func (o *OldSyslogServer) HasIsDataProtectionEnabled() bool {
	if o != nil && o.IsDataProtectionEnabled.IsSet() {
		return true
	}

	return false
}

// SetIsDataProtectionEnabled gets a reference to the given NullableBool and assigns it to the IsDataProtectionEnabled field.
func (o *OldSyslogServer) SetIsDataProtectionEnabled(v bool) {
	o.IsDataProtectionEnabled.Set(&v)
}
// SetIsDataProtectionEnabledNil sets the value for IsDataProtectionEnabled to be an explicit nil
func (o *OldSyslogServer) SetIsDataProtectionEnabledNil() {
	o.IsDataProtectionEnabled.Set(nil)
}

// UnsetIsDataProtectionEnabled ensures that no value is present for IsDataProtectionEnabled, not even an explicit nil
func (o *OldSyslogServer) UnsetIsDataProtectionEnabled() {
	o.IsDataProtectionEnabled.Unset()
}

// GetIsFilerAuditingEnabled returns the IsFilerAuditingEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OldSyslogServer) GetIsFilerAuditingEnabled() bool {
	if o == nil || o.IsFilerAuditingEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsFilerAuditingEnabled.Get()
}

// GetIsFilerAuditingEnabledOk returns a tuple with the IsFilerAuditingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OldSyslogServer) GetIsFilerAuditingEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsFilerAuditingEnabled.Get(), o.IsFilerAuditingEnabled.IsSet()
}

// HasIsFilerAuditingEnabled returns a boolean if a field has been set.
func (o *OldSyslogServer) HasIsFilerAuditingEnabled() bool {
	if o != nil && o.IsFilerAuditingEnabled.IsSet() {
		return true
	}

	return false
}

// SetIsFilerAuditingEnabled gets a reference to the given NullableBool and assigns it to the IsFilerAuditingEnabled field.
func (o *OldSyslogServer) SetIsFilerAuditingEnabled(v bool) {
	o.IsFilerAuditingEnabled.Set(&v)
}
// SetIsFilerAuditingEnabledNil sets the value for IsFilerAuditingEnabled to be an explicit nil
func (o *OldSyslogServer) SetIsFilerAuditingEnabledNil() {
	o.IsFilerAuditingEnabled.Set(nil)
}

// UnsetIsFilerAuditingEnabled ensures that no value is present for IsFilerAuditingEnabled, not even an explicit nil
func (o *OldSyslogServer) UnsetIsFilerAuditingEnabled() {
	o.IsFilerAuditingEnabled.Unset()
}

// GetIsSshLogEnabled returns the IsSshLogEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OldSyslogServer) GetIsSshLogEnabled() bool {
	if o == nil || o.IsSshLogEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsSshLogEnabled.Get()
}

// GetIsSshLogEnabledOk returns a tuple with the IsSshLogEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OldSyslogServer) GetIsSshLogEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsSshLogEnabled.Get(), o.IsSshLogEnabled.IsSet()
}

// HasIsSshLogEnabled returns a boolean if a field has been set.
func (o *OldSyslogServer) HasIsSshLogEnabled() bool {
	if o != nil && o.IsSshLogEnabled.IsSet() {
		return true
	}

	return false
}

// SetIsSshLogEnabled gets a reference to the given NullableBool and assigns it to the IsSshLogEnabled field.
func (o *OldSyslogServer) SetIsSshLogEnabled(v bool) {
	o.IsSshLogEnabled.Set(&v)
}
// SetIsSshLogEnabledNil sets the value for IsSshLogEnabled to be an explicit nil
func (o *OldSyslogServer) SetIsSshLogEnabledNil() {
	o.IsSshLogEnabled.Set(nil)
}

// UnsetIsSshLogEnabled ensures that no value is present for IsSshLogEnabled, not even an explicit nil
func (o *OldSyslogServer) UnsetIsSshLogEnabled() {
	o.IsSshLogEnabled.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OldSyslogServer) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OldSyslogServer) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *OldSyslogServer) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *OldSyslogServer) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *OldSyslogServer) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *OldSyslogServer) UnsetName() {
	o.Name.Unset()
}

// GetPort returns the Port field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *OldSyslogServer) GetPort() int32 {
	if o == nil || o.Port.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Port.Get()
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OldSyslogServer) GetPortOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Port.Get(), o.Port.IsSet()
}

// SetPort sets field value
func (o *OldSyslogServer) SetPort(v int32) {
	o.Port.Set(&v)
}

// GetProtocol returns the Protocol field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *OldSyslogServer) GetProtocol() int32 {
	if o == nil || o.Protocol.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Protocol.Get()
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OldSyslogServer) GetProtocolOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Protocol.Get(), o.Protocol.IsSet()
}

// SetProtocol sets field value
func (o *OldSyslogServer) SetProtocol(v int32) {
	o.Protocol.Set(&v)
}

func (o OldSyslogServer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address.Get()
	}
	if o.IsAlertAuditingEnabled.IsSet() {
		toSerialize["isAlertAuditingEnabled"] = o.IsAlertAuditingEnabled.Get()
	}
	if o.IsClusterAuditingEnabled.IsSet() {
		toSerialize["isClusterAuditingEnabled"] = o.IsClusterAuditingEnabled.Get()
	}
	if o.IsDataProtectionEnabled.IsSet() {
		toSerialize["isDataProtectionEnabled"] = o.IsDataProtectionEnabled.Get()
	}
	if o.IsFilerAuditingEnabled.IsSet() {
		toSerialize["isFilerAuditingEnabled"] = o.IsFilerAuditingEnabled.Get()
	}
	if o.IsSshLogEnabled.IsSet() {
		toSerialize["isSshLogEnabled"] = o.IsSshLogEnabled.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if true {
		toSerialize["port"] = o.Port.Get()
	}
	if true {
		toSerialize["protocol"] = o.Protocol.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOldSyslogServer struct {
	value *OldSyslogServer
	isSet bool
}

func (v NullableOldSyslogServer) Get() *OldSyslogServer {
	return v.value
}

func (v *NullableOldSyslogServer) Set(val *OldSyslogServer) {
	v.value = val
	v.isSet = true
}

func (v NullableOldSyslogServer) IsSet() bool {
	return v.isSet
}

func (v *NullableOldSyslogServer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOldSyslogServer(val *OldSyslogServer) *NullableOldSyslogServer {
	return &NullableOldSyslogServer{value: val, isSet: true}
}

func (v NullableOldSyslogServer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOldSyslogServer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


