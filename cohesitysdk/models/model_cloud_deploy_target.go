/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// CloudDeployTarget Message that specifies the details about CloudDeploy target where backup snapshots may be converted and stored.
type CloudDeployTarget struct {
	DeployVmsToCloudParams *DeployVMsToCloudParams `json:"deployVmsToCloudParams,omitempty"`
	TargetEntity *EntityProto `json:"targetEntity,omitempty"`
	// The type of the CloudDeploy target.
	Type NullableInt32 `json:"type,omitempty"`
}

// NewCloudDeployTarget instantiates a new CloudDeployTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudDeployTarget() *CloudDeployTarget {
	this := CloudDeployTarget{}
	return &this
}

// NewCloudDeployTargetWithDefaults instantiates a new CloudDeployTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudDeployTargetWithDefaults() *CloudDeployTarget {
	this := CloudDeployTarget{}
	return &this
}

// GetDeployVmsToCloudParams returns the DeployVmsToCloudParams field value if set, zero value otherwise.
func (o *CloudDeployTarget) GetDeployVmsToCloudParams() DeployVMsToCloudParams {
	if o == nil || o.DeployVmsToCloudParams == nil {
		var ret DeployVMsToCloudParams
		return ret
	}
	return *o.DeployVmsToCloudParams
}

// GetDeployVmsToCloudParamsOk returns a tuple with the DeployVmsToCloudParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudDeployTarget) GetDeployVmsToCloudParamsOk() (*DeployVMsToCloudParams, bool) {
	if o == nil || o.DeployVmsToCloudParams == nil {
		return nil, false
	}
	return o.DeployVmsToCloudParams, true
}

// HasDeployVmsToCloudParams returns a boolean if a field has been set.
func (o *CloudDeployTarget) HasDeployVmsToCloudParams() bool {
	if o != nil && o.DeployVmsToCloudParams != nil {
		return true
	}

	return false
}

// SetDeployVmsToCloudParams gets a reference to the given DeployVMsToCloudParams and assigns it to the DeployVmsToCloudParams field.
func (o *CloudDeployTarget) SetDeployVmsToCloudParams(v DeployVMsToCloudParams) {
	o.DeployVmsToCloudParams = &v
}

// GetTargetEntity returns the TargetEntity field value if set, zero value otherwise.
func (o *CloudDeployTarget) GetTargetEntity() EntityProto {
	if o == nil || o.TargetEntity == nil {
		var ret EntityProto
		return ret
	}
	return *o.TargetEntity
}

// GetTargetEntityOk returns a tuple with the TargetEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudDeployTarget) GetTargetEntityOk() (*EntityProto, bool) {
	if o == nil || o.TargetEntity == nil {
		return nil, false
	}
	return o.TargetEntity, true
}

// HasTargetEntity returns a boolean if a field has been set.
func (o *CloudDeployTarget) HasTargetEntity() bool {
	if o != nil && o.TargetEntity != nil {
		return true
	}

	return false
}

// SetTargetEntity gets a reference to the given EntityProto and assigns it to the TargetEntity field.
func (o *CloudDeployTarget) SetTargetEntity(v EntityProto) {
	o.TargetEntity = &v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudDeployTarget) GetType() int32 {
	if o == nil || o.Type.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudDeployTarget) GetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *CloudDeployTarget) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableInt32 and assigns it to the Type field.
func (o *CloudDeployTarget) SetType(v int32) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *CloudDeployTarget) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *CloudDeployTarget) UnsetType() {
	o.Type.Unset()
}

func (o CloudDeployTarget) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeployVmsToCloudParams != nil {
		toSerialize["deployVmsToCloudParams"] = o.DeployVmsToCloudParams
	}
	if o.TargetEntity != nil {
		toSerialize["targetEntity"] = o.TargetEntity
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCloudDeployTarget struct {
	value *CloudDeployTarget
	isSet bool
}

func (v NullableCloudDeployTarget) Get() *CloudDeployTarget {
	return v.value
}

func (v *NullableCloudDeployTarget) Set(val *CloudDeployTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudDeployTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudDeployTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudDeployTarget(val *CloudDeployTarget) *NullableCloudDeployTarget {
	return &NullableCloudDeployTarget{value: val, isSet: true}
}

func (v NullableCloudDeployTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudDeployTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


