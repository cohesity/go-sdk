/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ExchangeBackupJobParams Message to capture additional backup job params specific to Exchange.
type ExchangeBackupJobParams struct {
	// Whether the backups should be copy-only. If this is set to true, then Exchange server will not truncate logs after backup.
	IsCopyOnlyFull NullableBool `json:"isCopyOnlyFull,omitempty"`
}

// NewExchangeBackupJobParams instantiates a new ExchangeBackupJobParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExchangeBackupJobParams() *ExchangeBackupJobParams {
	this := ExchangeBackupJobParams{}
	return &this
}

// NewExchangeBackupJobParamsWithDefaults instantiates a new ExchangeBackupJobParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExchangeBackupJobParamsWithDefaults() *ExchangeBackupJobParams {
	this := ExchangeBackupJobParams{}
	return &this
}

// GetIsCopyOnlyFull returns the IsCopyOnlyFull field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExchangeBackupJobParams) GetIsCopyOnlyFull() bool {
	if o == nil || o.IsCopyOnlyFull.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsCopyOnlyFull.Get()
}

// GetIsCopyOnlyFullOk returns a tuple with the IsCopyOnlyFull field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExchangeBackupJobParams) GetIsCopyOnlyFullOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsCopyOnlyFull.Get(), o.IsCopyOnlyFull.IsSet()
}

// HasIsCopyOnlyFull returns a boolean if a field has been set.
func (o *ExchangeBackupJobParams) HasIsCopyOnlyFull() bool {
	if o != nil && o.IsCopyOnlyFull.IsSet() {
		return true
	}

	return false
}

// SetIsCopyOnlyFull gets a reference to the given NullableBool and assigns it to the IsCopyOnlyFull field.
func (o *ExchangeBackupJobParams) SetIsCopyOnlyFull(v bool) {
	o.IsCopyOnlyFull.Set(&v)
}
// SetIsCopyOnlyFullNil sets the value for IsCopyOnlyFull to be an explicit nil
func (o *ExchangeBackupJobParams) SetIsCopyOnlyFullNil() {
	o.IsCopyOnlyFull.Set(nil)
}

// UnsetIsCopyOnlyFull ensures that no value is present for IsCopyOnlyFull, not even an explicit nil
func (o *ExchangeBackupJobParams) UnsetIsCopyOnlyFull() {
	o.IsCopyOnlyFull.Unset()
}

func (o ExchangeBackupJobParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsCopyOnlyFull.IsSet() {
		toSerialize["isCopyOnlyFull"] = o.IsCopyOnlyFull.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableExchangeBackupJobParams struct {
	value *ExchangeBackupJobParams
	isSet bool
}

func (v NullableExchangeBackupJobParams) Get() *ExchangeBackupJobParams {
	return v.value
}

func (v *NullableExchangeBackupJobParams) Set(val *ExchangeBackupJobParams) {
	v.value = val
	v.isSet = true
}

func (v NullableExchangeBackupJobParams) IsSet() bool {
	return v.isSet
}

func (v *NullableExchangeBackupJobParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExchangeBackupJobParams(val *ExchangeBackupJobParams) *NullableExchangeBackupJobParams {
	return &NullableExchangeBackupJobParams{value: val, isSet: true}
}

func (v NullableExchangeBackupJobParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExchangeBackupJobParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


