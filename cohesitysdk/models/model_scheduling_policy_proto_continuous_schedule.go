/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// SchedulingPolicyProtoContinuousSchedule struct for SchedulingPolicyProtoContinuousSchedule
type SchedulingPolicyProtoContinuousSchedule struct {
	// If this field is set, backups will be performed periodically every 'interval_mins' number of minutes. NOTE: This is the interval between the start time of two successive backups.
	BackupIntervalMins NullableInt64 `json:"backupIntervalMins,omitempty"`
}

// NewSchedulingPolicyProtoContinuousSchedule instantiates a new SchedulingPolicyProtoContinuousSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedulingPolicyProtoContinuousSchedule() *SchedulingPolicyProtoContinuousSchedule {
	this := SchedulingPolicyProtoContinuousSchedule{}
	return &this
}

// NewSchedulingPolicyProtoContinuousScheduleWithDefaults instantiates a new SchedulingPolicyProtoContinuousSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedulingPolicyProtoContinuousScheduleWithDefaults() *SchedulingPolicyProtoContinuousSchedule {
	this := SchedulingPolicyProtoContinuousSchedule{}
	return &this
}

// GetBackupIntervalMins returns the BackupIntervalMins field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulingPolicyProtoContinuousSchedule) GetBackupIntervalMins() int64 {
	if o == nil || o.BackupIntervalMins.Get() == nil {
		var ret int64
		return ret
	}
	return *o.BackupIntervalMins.Get()
}

// GetBackupIntervalMinsOk returns a tuple with the BackupIntervalMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulingPolicyProtoContinuousSchedule) GetBackupIntervalMinsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BackupIntervalMins.Get(), o.BackupIntervalMins.IsSet()
}

// HasBackupIntervalMins returns a boolean if a field has been set.
func (o *SchedulingPolicyProtoContinuousSchedule) HasBackupIntervalMins() bool {
	if o != nil && o.BackupIntervalMins.IsSet() {
		return true
	}

	return false
}

// SetBackupIntervalMins gets a reference to the given NullableInt64 and assigns it to the BackupIntervalMins field.
func (o *SchedulingPolicyProtoContinuousSchedule) SetBackupIntervalMins(v int64) {
	o.BackupIntervalMins.Set(&v)
}
// SetBackupIntervalMinsNil sets the value for BackupIntervalMins to be an explicit nil
func (o *SchedulingPolicyProtoContinuousSchedule) SetBackupIntervalMinsNil() {
	o.BackupIntervalMins.Set(nil)
}

// UnsetBackupIntervalMins ensures that no value is present for BackupIntervalMins, not even an explicit nil
func (o *SchedulingPolicyProtoContinuousSchedule) UnsetBackupIntervalMins() {
	o.BackupIntervalMins.Unset()
}

func (o SchedulingPolicyProtoContinuousSchedule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BackupIntervalMins.IsSet() {
		toSerialize["backupIntervalMins"] = o.BackupIntervalMins.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSchedulingPolicyProtoContinuousSchedule struct {
	value *SchedulingPolicyProtoContinuousSchedule
	isSet bool
}

func (v NullableSchedulingPolicyProtoContinuousSchedule) Get() *SchedulingPolicyProtoContinuousSchedule {
	return v.value
}

func (v *NullableSchedulingPolicyProtoContinuousSchedule) Set(val *SchedulingPolicyProtoContinuousSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedulingPolicyProtoContinuousSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedulingPolicyProtoContinuousSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedulingPolicyProtoContinuousSchedule(val *SchedulingPolicyProtoContinuousSchedule) *NullableSchedulingPolicyProtoContinuousSchedule {
	return &NullableSchedulingPolicyProtoContinuousSchedule{value: val, isSet: true}
}

func (v NullableSchedulingPolicyProtoContinuousSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedulingPolicyProtoContinuousSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


