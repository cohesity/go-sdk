/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// SnapshotTargetPolicyProto Message that specifies the policy for copying backup snapshots to a target. This message also specifies the retention policy that should be applied to the snapshots after they have been copied to the specified target.
type SnapshotTargetPolicyProto struct {
	// If this is false, then only snapshots from the first completely successful run in the given time granularity will be considered for being copied. If this is true, then snapshots from the first partially successful run will also be eligible to be copied.
	CopyPartiallySuccessfulRun NullableBool `json:"copyPartiallySuccessfulRun,omitempty"`
	GranularityBucket *GranularityBucket `json:"granularityBucket,omitempty"`
	// This id uniquely identifies this entry in the ProtectionPolicyProto.  If this message is from global policy, this id is generated by Helios. Otherwise, it is generated by Iris. Magneto uses this for merging linked policies with its parent global policy.
	Id NullableString `json:"id,omitempty"`
	// Specifies how to determine the expiration time for snapshots copied due to this policy. The snapshots will be marked as expiring (i.e., eligible to be garbage collected) in 'num_days_to_keep' days from when the snapshots were created.
	NumDaysToKeep NullableInt64 `json:"numDaysToKeep,omitempty"`
	RetentionPolicy *RetentionPolicyProto `json:"retentionPolicy,omitempty"`
	SnapshotTarget *SnapshotTarget `json:"snapshotTarget,omitempty"`
}

// NewSnapshotTargetPolicyProto instantiates a new SnapshotTargetPolicyProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotTargetPolicyProto() *SnapshotTargetPolicyProto {
	this := SnapshotTargetPolicyProto{}
	return &this
}

// NewSnapshotTargetPolicyProtoWithDefaults instantiates a new SnapshotTargetPolicyProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotTargetPolicyProtoWithDefaults() *SnapshotTargetPolicyProto {
	this := SnapshotTargetPolicyProto{}
	return &this
}

// GetCopyPartiallySuccessfulRun returns the CopyPartiallySuccessfulRun field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotTargetPolicyProto) GetCopyPartiallySuccessfulRun() bool {
	if o == nil || o.CopyPartiallySuccessfulRun.Get() == nil {
		var ret bool
		return ret
	}
	return *o.CopyPartiallySuccessfulRun.Get()
}

// GetCopyPartiallySuccessfulRunOk returns a tuple with the CopyPartiallySuccessfulRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotTargetPolicyProto) GetCopyPartiallySuccessfulRunOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CopyPartiallySuccessfulRun.Get(), o.CopyPartiallySuccessfulRun.IsSet()
}

// HasCopyPartiallySuccessfulRun returns a boolean if a field has been set.
func (o *SnapshotTargetPolicyProto) HasCopyPartiallySuccessfulRun() bool {
	if o != nil && o.CopyPartiallySuccessfulRun.IsSet() {
		return true
	}

	return false
}

// SetCopyPartiallySuccessfulRun gets a reference to the given NullableBool and assigns it to the CopyPartiallySuccessfulRun field.
func (o *SnapshotTargetPolicyProto) SetCopyPartiallySuccessfulRun(v bool) {
	o.CopyPartiallySuccessfulRun.Set(&v)
}
// SetCopyPartiallySuccessfulRunNil sets the value for CopyPartiallySuccessfulRun to be an explicit nil
func (o *SnapshotTargetPolicyProto) SetCopyPartiallySuccessfulRunNil() {
	o.CopyPartiallySuccessfulRun.Set(nil)
}

// UnsetCopyPartiallySuccessfulRun ensures that no value is present for CopyPartiallySuccessfulRun, not even an explicit nil
func (o *SnapshotTargetPolicyProto) UnsetCopyPartiallySuccessfulRun() {
	o.CopyPartiallySuccessfulRun.Unset()
}

// GetGranularityBucket returns the GranularityBucket field value if set, zero value otherwise.
func (o *SnapshotTargetPolicyProto) GetGranularityBucket() GranularityBucket {
	if o == nil || o.GranularityBucket == nil {
		var ret GranularityBucket
		return ret
	}
	return *o.GranularityBucket
}

// GetGranularityBucketOk returns a tuple with the GranularityBucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotTargetPolicyProto) GetGranularityBucketOk() (*GranularityBucket, bool) {
	if o == nil || o.GranularityBucket == nil {
		return nil, false
	}
	return o.GranularityBucket, true
}

// HasGranularityBucket returns a boolean if a field has been set.
func (o *SnapshotTargetPolicyProto) HasGranularityBucket() bool {
	if o != nil && o.GranularityBucket != nil {
		return true
	}

	return false
}

// SetGranularityBucket gets a reference to the given GranularityBucket and assigns it to the GranularityBucket field.
func (o *SnapshotTargetPolicyProto) SetGranularityBucket(v GranularityBucket) {
	o.GranularityBucket = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotTargetPolicyProto) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotTargetPolicyProto) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *SnapshotTargetPolicyProto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *SnapshotTargetPolicyProto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *SnapshotTargetPolicyProto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *SnapshotTargetPolicyProto) UnsetId() {
	o.Id.Unset()
}

// GetNumDaysToKeep returns the NumDaysToKeep field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotTargetPolicyProto) GetNumDaysToKeep() int64 {
	if o == nil || o.NumDaysToKeep.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumDaysToKeep.Get()
}

// GetNumDaysToKeepOk returns a tuple with the NumDaysToKeep field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotTargetPolicyProto) GetNumDaysToKeepOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumDaysToKeep.Get(), o.NumDaysToKeep.IsSet()
}

// HasNumDaysToKeep returns a boolean if a field has been set.
func (o *SnapshotTargetPolicyProto) HasNumDaysToKeep() bool {
	if o != nil && o.NumDaysToKeep.IsSet() {
		return true
	}

	return false
}

// SetNumDaysToKeep gets a reference to the given NullableInt64 and assigns it to the NumDaysToKeep field.
func (o *SnapshotTargetPolicyProto) SetNumDaysToKeep(v int64) {
	o.NumDaysToKeep.Set(&v)
}
// SetNumDaysToKeepNil sets the value for NumDaysToKeep to be an explicit nil
func (o *SnapshotTargetPolicyProto) SetNumDaysToKeepNil() {
	o.NumDaysToKeep.Set(nil)
}

// UnsetNumDaysToKeep ensures that no value is present for NumDaysToKeep, not even an explicit nil
func (o *SnapshotTargetPolicyProto) UnsetNumDaysToKeep() {
	o.NumDaysToKeep.Unset()
}

// GetRetentionPolicy returns the RetentionPolicy field value if set, zero value otherwise.
func (o *SnapshotTargetPolicyProto) GetRetentionPolicy() RetentionPolicyProto {
	if o == nil || o.RetentionPolicy == nil {
		var ret RetentionPolicyProto
		return ret
	}
	return *o.RetentionPolicy
}

// GetRetentionPolicyOk returns a tuple with the RetentionPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotTargetPolicyProto) GetRetentionPolicyOk() (*RetentionPolicyProto, bool) {
	if o == nil || o.RetentionPolicy == nil {
		return nil, false
	}
	return o.RetentionPolicy, true
}

// HasRetentionPolicy returns a boolean if a field has been set.
func (o *SnapshotTargetPolicyProto) HasRetentionPolicy() bool {
	if o != nil && o.RetentionPolicy != nil {
		return true
	}

	return false
}

// SetRetentionPolicy gets a reference to the given RetentionPolicyProto and assigns it to the RetentionPolicy field.
func (o *SnapshotTargetPolicyProto) SetRetentionPolicy(v RetentionPolicyProto) {
	o.RetentionPolicy = &v
}

// GetSnapshotTarget returns the SnapshotTarget field value if set, zero value otherwise.
func (o *SnapshotTargetPolicyProto) GetSnapshotTarget() SnapshotTarget {
	if o == nil || o.SnapshotTarget == nil {
		var ret SnapshotTarget
		return ret
	}
	return *o.SnapshotTarget
}

// GetSnapshotTargetOk returns a tuple with the SnapshotTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotTargetPolicyProto) GetSnapshotTargetOk() (*SnapshotTarget, bool) {
	if o == nil || o.SnapshotTarget == nil {
		return nil, false
	}
	return o.SnapshotTarget, true
}

// HasSnapshotTarget returns a boolean if a field has been set.
func (o *SnapshotTargetPolicyProto) HasSnapshotTarget() bool {
	if o != nil && o.SnapshotTarget != nil {
		return true
	}

	return false
}

// SetSnapshotTarget gets a reference to the given SnapshotTarget and assigns it to the SnapshotTarget field.
func (o *SnapshotTargetPolicyProto) SetSnapshotTarget(v SnapshotTarget) {
	o.SnapshotTarget = &v
}

func (o SnapshotTargetPolicyProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CopyPartiallySuccessfulRun.IsSet() {
		toSerialize["copyPartiallySuccessfulRun"] = o.CopyPartiallySuccessfulRun.Get()
	}
	if o.GranularityBucket != nil {
		toSerialize["granularityBucket"] = o.GranularityBucket
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.NumDaysToKeep.IsSet() {
		toSerialize["numDaysToKeep"] = o.NumDaysToKeep.Get()
	}
	if o.RetentionPolicy != nil {
		toSerialize["retentionPolicy"] = o.RetentionPolicy
	}
	if o.SnapshotTarget != nil {
		toSerialize["snapshotTarget"] = o.SnapshotTarget
	}
	return json.Marshal(toSerialize)
}

type NullableSnapshotTargetPolicyProto struct {
	value *SnapshotTargetPolicyProto
	isSet bool
}

func (v NullableSnapshotTargetPolicyProto) Get() *SnapshotTargetPolicyProto {
	return v.value
}

func (v *NullableSnapshotTargetPolicyProto) Set(val *SnapshotTargetPolicyProto) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotTargetPolicyProto) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotTargetPolicyProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotTargetPolicyProto(val *SnapshotTargetPolicyProto) *NullableSnapshotTargetPolicyProto {
	return &NullableSnapshotTargetPolicyProto{value: val, isSet: true}
}

func (v NullableSnapshotTargetPolicyProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotTargetPolicyProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


