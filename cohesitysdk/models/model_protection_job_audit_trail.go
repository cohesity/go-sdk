/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ProtectionJobAuditTrail Specifies the fields for Protection job audit Response.
type ProtectionJobAuditTrail struct {
	After *ProtectionJob `json:"after,omitempty"`
	Before *ProtectionJob `json:"before,omitempty"`
	// Specifies the list of changed values in a Protection Job. kProtectionJobName implies that protection job has change in the name field kProtectionJobDescription implies that protection job has change in the description field. kProtectionJobSources implies that protection job has change in the source field. kProtectionJobSchedule implies that protection job has change in the schedule field. kProtectionJobFullSchedule implies that protection job has change in the full schedule field. kProtectionJobRetrySettings implies that protection job has change in the retry settings. kProtectionJobRetentionPolicy implies that protection job has change in the retention policy. kProtectionJobIndexingPolicy implies that protection job has change in the indexing policy. kProtectionJobAlertingPolicy implies that protection job has change in the alerting policy. kProtectionJobPriority implies that protection job has change in the alerting policy. kProtectionJobQuiesce implies that protection job has change in the Quiesce. kProtectionJobSla implies that protection job has change in the SLA settings. kProtectionJobPolicyId implies that protection job has change in the poilcy Id settings. kProtectionJobTimezone implies that protection job has change in the timezone settings. kProtectionJobFutureRunsPaused implies that protection job has change in the future run settings. kProtectionJobFutureRunsResumed implies that protection job has change in the future run resume settings. kSnapshotTargetPolicy implies that protection job has change in the snapshot target policy settings. kProtectionJobQOS implies that protection job has change in QOS settings. kProtectionJobInvalidField implies that the changed field is invalid.
	Changes []string `json:"changes,omitempty"`
}

// NewProtectionJobAuditTrail instantiates a new ProtectionJobAuditTrail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionJobAuditTrail() *ProtectionJobAuditTrail {
	this := ProtectionJobAuditTrail{}
	return &this
}

// NewProtectionJobAuditTrailWithDefaults instantiates a new ProtectionJobAuditTrail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionJobAuditTrailWithDefaults() *ProtectionJobAuditTrail {
	this := ProtectionJobAuditTrail{}
	return &this
}

// GetAfter returns the After field value if set, zero value otherwise.
func (o *ProtectionJobAuditTrail) GetAfter() ProtectionJob {
	if o == nil || o.After == nil {
		var ret ProtectionJob
		return ret
	}
	return *o.After
}

// GetAfterOk returns a tuple with the After field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionJobAuditTrail) GetAfterOk() (*ProtectionJob, bool) {
	if o == nil || o.After == nil {
		return nil, false
	}
	return o.After, true
}

// HasAfter returns a boolean if a field has been set.
func (o *ProtectionJobAuditTrail) HasAfter() bool {
	if o != nil && o.After != nil {
		return true
	}

	return false
}

// SetAfter gets a reference to the given ProtectionJob and assigns it to the After field.
func (o *ProtectionJobAuditTrail) SetAfter(v ProtectionJob) {
	o.After = &v
}

// GetBefore returns the Before field value if set, zero value otherwise.
func (o *ProtectionJobAuditTrail) GetBefore() ProtectionJob {
	if o == nil || o.Before == nil {
		var ret ProtectionJob
		return ret
	}
	return *o.Before
}

// GetBeforeOk returns a tuple with the Before field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionJobAuditTrail) GetBeforeOk() (*ProtectionJob, bool) {
	if o == nil || o.Before == nil {
		return nil, false
	}
	return o.Before, true
}

// HasBefore returns a boolean if a field has been set.
func (o *ProtectionJobAuditTrail) HasBefore() bool {
	if o != nil && o.Before != nil {
		return true
	}

	return false
}

// SetBefore gets a reference to the given ProtectionJob and assigns it to the Before field.
func (o *ProtectionJobAuditTrail) SetBefore(v ProtectionJob) {
	o.Before = &v
}

// GetChanges returns the Changes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJobAuditTrail) GetChanges() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Changes
}

// GetChangesOk returns a tuple with the Changes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJobAuditTrail) GetChangesOk() (*[]string, bool) {
	if o == nil || o.Changes == nil {
		return nil, false
	}
	return &o.Changes, true
}

// HasChanges returns a boolean if a field has been set.
func (o *ProtectionJobAuditTrail) HasChanges() bool {
	if o != nil && o.Changes != nil {
		return true
	}

	return false
}

// SetChanges gets a reference to the given []string and assigns it to the Changes field.
func (o *ProtectionJobAuditTrail) SetChanges(v []string) {
	o.Changes = v
}

func (o ProtectionJobAuditTrail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.After != nil {
		toSerialize["after"] = o.After
	}
	if o.Before != nil {
		toSerialize["before"] = o.Before
	}
	if o.Changes != nil {
		toSerialize["changes"] = o.Changes
	}
	return json.Marshal(toSerialize)
}

type NullableProtectionJobAuditTrail struct {
	value *ProtectionJobAuditTrail
	isSet bool
}

func (v NullableProtectionJobAuditTrail) Get() *ProtectionJobAuditTrail {
	return v.value
}

func (v *NullableProtectionJobAuditTrail) Set(val *ProtectionJobAuditTrail) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionJobAuditTrail) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionJobAuditTrail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionJobAuditTrail(val *ProtectionJobAuditTrail) *NullableProtectionJobAuditTrail {
	return &NullableProtectionJobAuditTrail{value: val, isSet: true}
}

func (v NullableProtectionJobAuditTrail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionJobAuditTrail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


