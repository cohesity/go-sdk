/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// RestoreTaskAdditionalParams Message to encapsulate the additional parameters associated with a restore task.
type RestoreTaskAdditionalParams struct {
	PostScript *RemoteScriptProto `json:"postScript,omitempty"`
	PreScript *RemoteScriptProto `json:"preScript,omitempty"`
}

// NewRestoreTaskAdditionalParams instantiates a new RestoreTaskAdditionalParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreTaskAdditionalParams() *RestoreTaskAdditionalParams {
	this := RestoreTaskAdditionalParams{}
	return &this
}

// NewRestoreTaskAdditionalParamsWithDefaults instantiates a new RestoreTaskAdditionalParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreTaskAdditionalParamsWithDefaults() *RestoreTaskAdditionalParams {
	this := RestoreTaskAdditionalParams{}
	return &this
}

// GetPostScript returns the PostScript field value if set, zero value otherwise.
func (o *RestoreTaskAdditionalParams) GetPostScript() RemoteScriptProto {
	if o == nil || o.PostScript == nil {
		var ret RemoteScriptProto
		return ret
	}
	return *o.PostScript
}

// GetPostScriptOk returns a tuple with the PostScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreTaskAdditionalParams) GetPostScriptOk() (*RemoteScriptProto, bool) {
	if o == nil || o.PostScript == nil {
		return nil, false
	}
	return o.PostScript, true
}

// HasPostScript returns a boolean if a field has been set.
func (o *RestoreTaskAdditionalParams) HasPostScript() bool {
	if o != nil && o.PostScript != nil {
		return true
	}

	return false
}

// SetPostScript gets a reference to the given RemoteScriptProto and assigns it to the PostScript field.
func (o *RestoreTaskAdditionalParams) SetPostScript(v RemoteScriptProto) {
	o.PostScript = &v
}

// GetPreScript returns the PreScript field value if set, zero value otherwise.
func (o *RestoreTaskAdditionalParams) GetPreScript() RemoteScriptProto {
	if o == nil || o.PreScript == nil {
		var ret RemoteScriptProto
		return ret
	}
	return *o.PreScript
}

// GetPreScriptOk returns a tuple with the PreScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreTaskAdditionalParams) GetPreScriptOk() (*RemoteScriptProto, bool) {
	if o == nil || o.PreScript == nil {
		return nil, false
	}
	return o.PreScript, true
}

// HasPreScript returns a boolean if a field has been set.
func (o *RestoreTaskAdditionalParams) HasPreScript() bool {
	if o != nil && o.PreScript != nil {
		return true
	}

	return false
}

// SetPreScript gets a reference to the given RemoteScriptProto and assigns it to the PreScript field.
func (o *RestoreTaskAdditionalParams) SetPreScript(v RemoteScriptProto) {
	o.PreScript = &v
}

func (o RestoreTaskAdditionalParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PostScript != nil {
		toSerialize["postScript"] = o.PostScript
	}
	if o.PreScript != nil {
		toSerialize["preScript"] = o.PreScript
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreTaskAdditionalParams struct {
	value *RestoreTaskAdditionalParams
	isSet bool
}

func (v NullableRestoreTaskAdditionalParams) Get() *RestoreTaskAdditionalParams {
	return v.value
}

func (v *NullableRestoreTaskAdditionalParams) Set(val *RestoreTaskAdditionalParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreTaskAdditionalParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreTaskAdditionalParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreTaskAdditionalParams(val *RestoreTaskAdditionalParams) *NullableRestoreTaskAdditionalParams {
	return &NullableRestoreTaskAdditionalParams{value: val, isSet: true}
}

func (v NullableRestoreTaskAdditionalParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreTaskAdditionalParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


