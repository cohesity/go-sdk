/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// RetrieveArchiveTaskStateProtoDownloadFilesInfo Information required for Icebox when downloading files from an archived entity. This proto is specifically just for the current temporary solution for downloading a single from an archive, where we let icebox download the file for us. In the future once the new Yoda APIs for downloading files from archive stub views are ready, we will just discard this proto and make field 20 reserved.
type RetrieveArchiveTaskStateProtoDownloadFilesInfo struct {
	// The file paths to be retrieved from the archive. For example, if the file paths are /foo/bar and /foo2/bar and target_dir_path is \"downloaded_files\". The retrieved files will have the full path structure maintained in target_dir_path such as downloaded_files/foo/bar and /downloaded_files/foo2/bar.
	FilePathVec []string `json:"filePathVec,omitempty"`
	MagnetoInstanceId *MagnetoInstanceId `json:"magnetoInstanceId,omitempty"`
	ObjectId *MagnetoObjectId `json:"objectId,omitempty"`
	// Ask Icebox to only create the stub view and skip restoring files in the stub view.
	SkipRestoreInStubView NullableBool `json:"skipRestoreInStubView,omitempty"`
	// Path to the directory under which the downloaded files will be placed.
	TargetDirPath NullableString `json:"targetDirPath,omitempty"`
	// Target view name where the downloaded files will be placed.
	TargetViewName NullableString `json:"targetViewName,omitempty"`
}

// NewRetrieveArchiveTaskStateProtoDownloadFilesInfo instantiates a new RetrieveArchiveTaskStateProtoDownloadFilesInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetrieveArchiveTaskStateProtoDownloadFilesInfo() *RetrieveArchiveTaskStateProtoDownloadFilesInfo {
	this := RetrieveArchiveTaskStateProtoDownloadFilesInfo{}
	return &this
}

// NewRetrieveArchiveTaskStateProtoDownloadFilesInfoWithDefaults instantiates a new RetrieveArchiveTaskStateProtoDownloadFilesInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetrieveArchiveTaskStateProtoDownloadFilesInfoWithDefaults() *RetrieveArchiveTaskStateProtoDownloadFilesInfo {
	this := RetrieveArchiveTaskStateProtoDownloadFilesInfo{}
	return &this
}

// GetFilePathVec returns the FilePathVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) GetFilePathVec() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.FilePathVec
}

// GetFilePathVecOk returns a tuple with the FilePathVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) GetFilePathVecOk() (*[]string, bool) {
	if o == nil || o.FilePathVec == nil {
		return nil, false
	}
	return &o.FilePathVec, true
}

// HasFilePathVec returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) HasFilePathVec() bool {
	if o != nil && o.FilePathVec != nil {
		return true
	}

	return false
}

// SetFilePathVec gets a reference to the given []string and assigns it to the FilePathVec field.
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) SetFilePathVec(v []string) {
	o.FilePathVec = v
}

// GetMagnetoInstanceId returns the MagnetoInstanceId field value if set, zero value otherwise.
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) GetMagnetoInstanceId() MagnetoInstanceId {
	if o == nil || o.MagnetoInstanceId == nil {
		var ret MagnetoInstanceId
		return ret
	}
	return *o.MagnetoInstanceId
}

// GetMagnetoInstanceIdOk returns a tuple with the MagnetoInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) GetMagnetoInstanceIdOk() (*MagnetoInstanceId, bool) {
	if o == nil || o.MagnetoInstanceId == nil {
		return nil, false
	}
	return o.MagnetoInstanceId, true
}

// HasMagnetoInstanceId returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) HasMagnetoInstanceId() bool {
	if o != nil && o.MagnetoInstanceId != nil {
		return true
	}

	return false
}

// SetMagnetoInstanceId gets a reference to the given MagnetoInstanceId and assigns it to the MagnetoInstanceId field.
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) SetMagnetoInstanceId(v MagnetoInstanceId) {
	o.MagnetoInstanceId = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) GetObjectId() MagnetoObjectId {
	if o == nil || o.ObjectId == nil {
		var ret MagnetoObjectId
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) GetObjectIdOk() (*MagnetoObjectId, bool) {
	if o == nil || o.ObjectId == nil {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) HasObjectId() bool {
	if o != nil && o.ObjectId != nil {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given MagnetoObjectId and assigns it to the ObjectId field.
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) SetObjectId(v MagnetoObjectId) {
	o.ObjectId = &v
}

// GetSkipRestoreInStubView returns the SkipRestoreInStubView field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) GetSkipRestoreInStubView() bool {
	if o == nil || o.SkipRestoreInStubView.Get() == nil {
		var ret bool
		return ret
	}
	return *o.SkipRestoreInStubView.Get()
}

// GetSkipRestoreInStubViewOk returns a tuple with the SkipRestoreInStubView field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) GetSkipRestoreInStubViewOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SkipRestoreInStubView.Get(), o.SkipRestoreInStubView.IsSet()
}

// HasSkipRestoreInStubView returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) HasSkipRestoreInStubView() bool {
	if o != nil && o.SkipRestoreInStubView.IsSet() {
		return true
	}

	return false
}

// SetSkipRestoreInStubView gets a reference to the given NullableBool and assigns it to the SkipRestoreInStubView field.
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) SetSkipRestoreInStubView(v bool) {
	o.SkipRestoreInStubView.Set(&v)
}
// SetSkipRestoreInStubViewNil sets the value for SkipRestoreInStubView to be an explicit nil
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) SetSkipRestoreInStubViewNil() {
	o.SkipRestoreInStubView.Set(nil)
}

// UnsetSkipRestoreInStubView ensures that no value is present for SkipRestoreInStubView, not even an explicit nil
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) UnsetSkipRestoreInStubView() {
	o.SkipRestoreInStubView.Unset()
}

// GetTargetDirPath returns the TargetDirPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) GetTargetDirPath() string {
	if o == nil || o.TargetDirPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.TargetDirPath.Get()
}

// GetTargetDirPathOk returns a tuple with the TargetDirPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) GetTargetDirPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetDirPath.Get(), o.TargetDirPath.IsSet()
}

// HasTargetDirPath returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) HasTargetDirPath() bool {
	if o != nil && o.TargetDirPath.IsSet() {
		return true
	}

	return false
}

// SetTargetDirPath gets a reference to the given NullableString and assigns it to the TargetDirPath field.
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) SetTargetDirPath(v string) {
	o.TargetDirPath.Set(&v)
}
// SetTargetDirPathNil sets the value for TargetDirPath to be an explicit nil
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) SetTargetDirPathNil() {
	o.TargetDirPath.Set(nil)
}

// UnsetTargetDirPath ensures that no value is present for TargetDirPath, not even an explicit nil
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) UnsetTargetDirPath() {
	o.TargetDirPath.Unset()
}

// GetTargetViewName returns the TargetViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) GetTargetViewName() string {
	if o == nil || o.TargetViewName.Get() == nil {
		var ret string
		return ret
	}
	return *o.TargetViewName.Get()
}

// GetTargetViewNameOk returns a tuple with the TargetViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) GetTargetViewNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetViewName.Get(), o.TargetViewName.IsSet()
}

// HasTargetViewName returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) HasTargetViewName() bool {
	if o != nil && o.TargetViewName.IsSet() {
		return true
	}

	return false
}

// SetTargetViewName gets a reference to the given NullableString and assigns it to the TargetViewName field.
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) SetTargetViewName(v string) {
	o.TargetViewName.Set(&v)
}
// SetTargetViewNameNil sets the value for TargetViewName to be an explicit nil
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) SetTargetViewNameNil() {
	o.TargetViewName.Set(nil)
}

// UnsetTargetViewName ensures that no value is present for TargetViewName, not even an explicit nil
func (o *RetrieveArchiveTaskStateProtoDownloadFilesInfo) UnsetTargetViewName() {
	o.TargetViewName.Unset()
}

func (o RetrieveArchiveTaskStateProtoDownloadFilesInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FilePathVec != nil {
		toSerialize["filePathVec"] = o.FilePathVec
	}
	if o.MagnetoInstanceId != nil {
		toSerialize["magnetoInstanceId"] = o.MagnetoInstanceId
	}
	if o.ObjectId != nil {
		toSerialize["objectId"] = o.ObjectId
	}
	if o.SkipRestoreInStubView.IsSet() {
		toSerialize["skipRestoreInStubView"] = o.SkipRestoreInStubView.Get()
	}
	if o.TargetDirPath.IsSet() {
		toSerialize["targetDirPath"] = o.TargetDirPath.Get()
	}
	if o.TargetViewName.IsSet() {
		toSerialize["targetViewName"] = o.TargetViewName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRetrieveArchiveTaskStateProtoDownloadFilesInfo struct {
	value *RetrieveArchiveTaskStateProtoDownloadFilesInfo
	isSet bool
}

func (v NullableRetrieveArchiveTaskStateProtoDownloadFilesInfo) Get() *RetrieveArchiveTaskStateProtoDownloadFilesInfo {
	return v.value
}

func (v *NullableRetrieveArchiveTaskStateProtoDownloadFilesInfo) Set(val *RetrieveArchiveTaskStateProtoDownloadFilesInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRetrieveArchiveTaskStateProtoDownloadFilesInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRetrieveArchiveTaskStateProtoDownloadFilesInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetrieveArchiveTaskStateProtoDownloadFilesInfo(val *RetrieveArchiveTaskStateProtoDownloadFilesInfo) *NullableRetrieveArchiveTaskStateProtoDownloadFilesInfo {
	return &NullableRetrieveArchiveTaskStateProtoDownloadFilesInfo{value: val, isSet: true}
}

func (v NullableRetrieveArchiveTaskStateProtoDownloadFilesInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetrieveArchiveTaskStateProtoDownloadFilesInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


