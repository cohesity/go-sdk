/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// UuidConfigProto struct for UuidConfigProto
type UuidConfigProto struct {
	PreserveUuid NullableBool `json:"preserveUuid,omitempty"`
}

// NewUuidConfigProto instantiates a new UuidConfigProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUuidConfigProto() *UuidConfigProto {
	this := UuidConfigProto{}
	return &this
}

// NewUuidConfigProtoWithDefaults instantiates a new UuidConfigProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUuidConfigProtoWithDefaults() *UuidConfigProto {
	this := UuidConfigProto{}
	return &this
}

// GetPreserveUuid returns the PreserveUuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UuidConfigProto) GetPreserveUuid() bool {
	if o == nil || o.PreserveUuid.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PreserveUuid.Get()
}

// GetPreserveUuidOk returns a tuple with the PreserveUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UuidConfigProto) GetPreserveUuidOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PreserveUuid.Get(), o.PreserveUuid.IsSet()
}

// HasPreserveUuid returns a boolean if a field has been set.
func (o *UuidConfigProto) HasPreserveUuid() bool {
	if o != nil && o.PreserveUuid.IsSet() {
		return true
	}

	return false
}

// SetPreserveUuid gets a reference to the given NullableBool and assigns it to the PreserveUuid field.
func (o *UuidConfigProto) SetPreserveUuid(v bool) {
	o.PreserveUuid.Set(&v)
}
// SetPreserveUuidNil sets the value for PreserveUuid to be an explicit nil
func (o *UuidConfigProto) SetPreserveUuidNil() {
	o.PreserveUuid.Set(nil)
}

// UnsetPreserveUuid ensures that no value is present for PreserveUuid, not even an explicit nil
func (o *UuidConfigProto) UnsetPreserveUuid() {
	o.PreserveUuid.Unset()
}

func (o UuidConfigProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PreserveUuid.IsSet() {
		toSerialize["preserveUuid"] = o.PreserveUuid.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUuidConfigProto struct {
	value *UuidConfigProto
	isSet bool
}

func (v NullableUuidConfigProto) Get() *UuidConfigProto {
	return v.value
}

func (v *NullableUuidConfigProto) Set(val *UuidConfigProto) {
	v.value = val
	v.isSet = true
}

func (v NullableUuidConfigProto) IsSet() bool {
	return v.isSet
}

func (v *NullableUuidConfigProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUuidConfigProto(val *UuidConfigProto) *NullableUuidConfigProto {
	return &NullableUuidConfigProto{value: val, isSet: true}
}

func (v NullableUuidConfigProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUuidConfigProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


