/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ProtectObjectParameters Specifies the parameters to protect an object.
type ProtectObjectParameters struct {
	// Specifies the environment type of the Protection Source object. Supported environment types such as 'kView', 'kSQL', 'kVMware', etc. NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter. 'kVMware' indicates the VMware Protection Source environment. 'kHyperV' indicates the HyperV Protection Source environment. 'kSQL' indicates the SQL Protection Source environment. 'kView' indicates the View Protection Source environment. 'kPuppeteer' indicates the Cohesity's Remote Adapter. 'kPhysical' indicates the physical Protection Source environment. 'kPure' indicates the Pure Storage Protection Source environment. 'Nimble' indicates the Nimble Storage Protection Source environment. 'kAzure' indicates the Microsoft's Azure Protection Source environment. 'kNetapp' indicates the Netapp Protection Source environment. 'kAgent' indicates the Agent Protection Source environment. 'kGenericNas' indicates the Generic Network Attached Storage Protection Source environment. 'kAcropolis' indicates the Acropolis Protection Source environment. 'kPhsicalFiles' indicates the Physical Files Protection Source environment. 'kIsilon' indicates the Dell EMC's Isilon Protection Source environment. 'kGPFS' indicates IBM's GPFS Protection Source environment. 'kKVM' indicates the KVM Protection Source environment. 'kAWS' indicates the AWS Protection Source environment. 'kExchange' indicates the Exchange Protection Source environment. 'kHyperVVSS' indicates the HyperV VSS Protection Source environment. 'kOracle' indicates the Oracle Protection Source environment. 'kGCP' indicates the Google Cloud Platform Protection Source environment. 'kFlashBlade' indicates the Flash Blade Protection Source environment. 'kAWSNative' indicates the AWS Native Protection Source environment. 'kO365' indicates the Office 365 Protection Source environment. 'kO365Outlook' indicates Office 365 outlook Protection Source environment. 'kHyperFlex' indicates the Hyper Flex Protection Source environment. 'kGCPNative' indicates the GCP Native Protection Source environment. 'kAzureNative' indicates the Azure Native Protection Source environment. 'kKubernetes' indicates a Kubernetes Protection Source environment. 'kElastifile' indicates Elastifile Protection Source environment. 'kAD' indicates Active Directory Protection Source environment. 'kRDSSnapshotManager' indicates AWS RDS Protection Source environment. 'kCassandra' indicates Cassandra Protection Source environment. 'kMongoDB' indicates MongoDB Protection Source environment. 'kCouchbase' indicates Couchbase Protection Source environment. 'kHdfs' indicates Hdfs Protection Source environment. 'kHive' indicates Hive Protection Source environment. 'kHBase' indicates HBase Protection Source environment.
	ProtectionSourceEnvironment NullableString `json:"protectionSourceEnvironment,omitempty"`
	// Specifies the ids of the Protection Sources to protect.
	ProtectionSourceIds []int64 `json:"protectionSourceIds"`
	// Specifies the Rpo policy id.
	RpoPolicyId NullableString `json:"rpoPolicyId"`
}

// NewProtectObjectParameters instantiates a new ProtectObjectParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectObjectParameters(protectionSourceIds []int64, rpoPolicyId NullableString) *ProtectObjectParameters {
	this := ProtectObjectParameters{}
	this.ProtectionSourceIds = protectionSourceIds
	this.RpoPolicyId = rpoPolicyId
	return &this
}

// NewProtectObjectParametersWithDefaults instantiates a new ProtectObjectParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectObjectParametersWithDefaults() *ProtectObjectParameters {
	this := ProtectObjectParameters{}
	return &this
}

// GetProtectionSourceEnvironment returns the ProtectionSourceEnvironment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectObjectParameters) GetProtectionSourceEnvironment() string {
	if o == nil || o.ProtectionSourceEnvironment.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProtectionSourceEnvironment.Get()
}

// GetProtectionSourceEnvironmentOk returns a tuple with the ProtectionSourceEnvironment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectObjectParameters) GetProtectionSourceEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionSourceEnvironment.Get(), o.ProtectionSourceEnvironment.IsSet()
}

// HasProtectionSourceEnvironment returns a boolean if a field has been set.
func (o *ProtectObjectParameters) HasProtectionSourceEnvironment() bool {
	if o != nil && o.ProtectionSourceEnvironment.IsSet() {
		return true
	}

	return false
}

// SetProtectionSourceEnvironment gets a reference to the given NullableString and assigns it to the ProtectionSourceEnvironment field.
func (o *ProtectObjectParameters) SetProtectionSourceEnvironment(v string) {
	o.ProtectionSourceEnvironment.Set(&v)
}
// SetProtectionSourceEnvironmentNil sets the value for ProtectionSourceEnvironment to be an explicit nil
func (o *ProtectObjectParameters) SetProtectionSourceEnvironmentNil() {
	o.ProtectionSourceEnvironment.Set(nil)
}

// UnsetProtectionSourceEnvironment ensures that no value is present for ProtectionSourceEnvironment, not even an explicit nil
func (o *ProtectObjectParameters) UnsetProtectionSourceEnvironment() {
	o.ProtectionSourceEnvironment.Unset()
}

// GetProtectionSourceIds returns the ProtectionSourceIds field value
// If the value is explicit nil, the zero value for []int64 will be returned
func (o *ProtectObjectParameters) GetProtectionSourceIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.ProtectionSourceIds
}

// GetProtectionSourceIdsOk returns a tuple with the ProtectionSourceIds field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectObjectParameters) GetProtectionSourceIdsOk() (*[]int64, bool) {
	if o == nil || o.ProtectionSourceIds == nil {
		return nil, false
	}
	return &o.ProtectionSourceIds, true
}

// SetProtectionSourceIds sets field value
func (o *ProtectObjectParameters) SetProtectionSourceIds(v []int64) {
	o.ProtectionSourceIds = v
}

// GetRpoPolicyId returns the RpoPolicyId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProtectObjectParameters) GetRpoPolicyId() string {
	if o == nil || o.RpoPolicyId.Get() == nil {
		var ret string
		return ret
	}

	return *o.RpoPolicyId.Get()
}

// GetRpoPolicyIdOk returns a tuple with the RpoPolicyId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectObjectParameters) GetRpoPolicyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RpoPolicyId.Get(), o.RpoPolicyId.IsSet()
}

// SetRpoPolicyId sets field value
func (o *ProtectObjectParameters) SetRpoPolicyId(v string) {
	o.RpoPolicyId.Set(&v)
}

func (o ProtectObjectParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProtectionSourceEnvironment.IsSet() {
		toSerialize["protectionSourceEnvironment"] = o.ProtectionSourceEnvironment.Get()
	}
	if o.ProtectionSourceIds != nil {
		toSerialize["protectionSourceIds"] = o.ProtectionSourceIds
	}
	if true {
		toSerialize["rpoPolicyId"] = o.RpoPolicyId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProtectObjectParameters struct {
	value *ProtectObjectParameters
	isSet bool
}

func (v NullableProtectObjectParameters) Get() *ProtectObjectParameters {
	return v.value
}

func (v *NullableProtectObjectParameters) Set(val *ProtectObjectParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectObjectParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectObjectParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectObjectParameters(val *ProtectObjectParameters) *NullableProtectObjectParameters {
	return &NullableProtectObjectParameters{value: val, isSet: true}
}

func (v NullableProtectObjectParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectObjectParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


