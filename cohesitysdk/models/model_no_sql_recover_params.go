/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// NoSqlRecoverParams struct for NoSqlRecoverParams
type NoSqlRecoverParams struct {
	RestoreObjects []NoSqlRestoreObject `json:"restoreObjects,omitempty"`
}

// NewNoSqlRecoverParams instantiates a new NoSqlRecoverParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNoSqlRecoverParams() *NoSqlRecoverParams {
	this := NoSqlRecoverParams{}
	return &this
}

// NewNoSqlRecoverParamsWithDefaults instantiates a new NoSqlRecoverParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNoSqlRecoverParamsWithDefaults() *NoSqlRecoverParams {
	this := NoSqlRecoverParams{}
	return &this
}

// GetRestoreObjects returns the RestoreObjects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NoSqlRecoverParams) GetRestoreObjects() []NoSqlRestoreObject {
	if o == nil  {
		var ret []NoSqlRestoreObject
		return ret
	}
	return o.RestoreObjects
}

// GetRestoreObjectsOk returns a tuple with the RestoreObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NoSqlRecoverParams) GetRestoreObjectsOk() (*[]NoSqlRestoreObject, bool) {
	if o == nil || o.RestoreObjects == nil {
		return nil, false
	}
	return &o.RestoreObjects, true
}

// HasRestoreObjects returns a boolean if a field has been set.
func (o *NoSqlRecoverParams) HasRestoreObjects() bool {
	if o != nil && o.RestoreObjects != nil {
		return true
	}

	return false
}

// SetRestoreObjects gets a reference to the given []NoSqlRestoreObject and assigns it to the RestoreObjects field.
func (o *NoSqlRecoverParams) SetRestoreObjects(v []NoSqlRestoreObject) {
	o.RestoreObjects = v
}

func (o NoSqlRecoverParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RestoreObjects != nil {
		toSerialize["restoreObjects"] = o.RestoreObjects
	}
	return json.Marshal(toSerialize)
}

type NullableNoSqlRecoverParams struct {
	value *NoSqlRecoverParams
	isSet bool
}

func (v NullableNoSqlRecoverParams) Get() *NoSqlRecoverParams {
	return v.value
}

func (v *NullableNoSqlRecoverParams) Set(val *NoSqlRecoverParams) {
	v.value = val
	v.isSet = true
}

func (v NullableNoSqlRecoverParams) IsSet() bool {
	return v.isSet
}

func (v *NullableNoSqlRecoverParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNoSqlRecoverParams(val *NoSqlRecoverParams) *NullableNoSqlRecoverParams {
	return &NullableNoSqlRecoverParams{value: val, isSet: true}
}

func (v NullableNoSqlRecoverParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNoSqlRecoverParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


