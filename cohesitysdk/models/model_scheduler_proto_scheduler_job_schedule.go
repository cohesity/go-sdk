/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// SchedulerProtoSchedulerJobSchedule A message which specifies the schedule of execution of the job.
type SchedulerProtoSchedulerJobSchedule struct {
	// The day of the week when schedule should be executed (0-6).
	Day NullableInt32 `json:"day,omitempty"`
	// The hour of the day when schedule should be executed (0-23).
	Hour NullableInt32 `json:"hour,omitempty"`
	// The timezone for the execution of the schedule.
	Timezone NullableString `json:"timezone,omitempty"`
}

// NewSchedulerProtoSchedulerJobSchedule instantiates a new SchedulerProtoSchedulerJobSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedulerProtoSchedulerJobSchedule() *SchedulerProtoSchedulerJobSchedule {
	this := SchedulerProtoSchedulerJobSchedule{}
	return &this
}

// NewSchedulerProtoSchedulerJobScheduleWithDefaults instantiates a new SchedulerProtoSchedulerJobSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedulerProtoSchedulerJobScheduleWithDefaults() *SchedulerProtoSchedulerJobSchedule {
	this := SchedulerProtoSchedulerJobSchedule{}
	return &this
}

// GetDay returns the Day field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobSchedule) GetDay() int32 {
	if o == nil || o.Day.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Day.Get()
}

// GetDayOk returns a tuple with the Day field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobSchedule) GetDayOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Day.Get(), o.Day.IsSet()
}

// HasDay returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobSchedule) HasDay() bool {
	if o != nil && o.Day.IsSet() {
		return true
	}

	return false
}

// SetDay gets a reference to the given NullableInt32 and assigns it to the Day field.
func (o *SchedulerProtoSchedulerJobSchedule) SetDay(v int32) {
	o.Day.Set(&v)
}
// SetDayNil sets the value for Day to be an explicit nil
func (o *SchedulerProtoSchedulerJobSchedule) SetDayNil() {
	o.Day.Set(nil)
}

// UnsetDay ensures that no value is present for Day, not even an explicit nil
func (o *SchedulerProtoSchedulerJobSchedule) UnsetDay() {
	o.Day.Unset()
}

// GetHour returns the Hour field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobSchedule) GetHour() int32 {
	if o == nil || o.Hour.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Hour.Get()
}

// GetHourOk returns a tuple with the Hour field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobSchedule) GetHourOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Hour.Get(), o.Hour.IsSet()
}

// HasHour returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobSchedule) HasHour() bool {
	if o != nil && o.Hour.IsSet() {
		return true
	}

	return false
}

// SetHour gets a reference to the given NullableInt32 and assigns it to the Hour field.
func (o *SchedulerProtoSchedulerJobSchedule) SetHour(v int32) {
	o.Hour.Set(&v)
}
// SetHourNil sets the value for Hour to be an explicit nil
func (o *SchedulerProtoSchedulerJobSchedule) SetHourNil() {
	o.Hour.Set(nil)
}

// UnsetHour ensures that no value is present for Hour, not even an explicit nil
func (o *SchedulerProtoSchedulerJobSchedule) UnsetHour() {
	o.Hour.Unset()
}

// GetTimezone returns the Timezone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobSchedule) GetTimezone() string {
	if o == nil || o.Timezone.Get() == nil {
		var ret string
		return ret
	}
	return *o.Timezone.Get()
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobSchedule) GetTimezoneOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Timezone.Get(), o.Timezone.IsSet()
}

// HasTimezone returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobSchedule) HasTimezone() bool {
	if o != nil && o.Timezone.IsSet() {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given NullableString and assigns it to the Timezone field.
func (o *SchedulerProtoSchedulerJobSchedule) SetTimezone(v string) {
	o.Timezone.Set(&v)
}
// SetTimezoneNil sets the value for Timezone to be an explicit nil
func (o *SchedulerProtoSchedulerJobSchedule) SetTimezoneNil() {
	o.Timezone.Set(nil)
}

// UnsetTimezone ensures that no value is present for Timezone, not even an explicit nil
func (o *SchedulerProtoSchedulerJobSchedule) UnsetTimezone() {
	o.Timezone.Unset()
}

func (o SchedulerProtoSchedulerJobSchedule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Day.IsSet() {
		toSerialize["day"] = o.Day.Get()
	}
	if o.Hour.IsSet() {
		toSerialize["hour"] = o.Hour.Get()
	}
	if o.Timezone.IsSet() {
		toSerialize["timezone"] = o.Timezone.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSchedulerProtoSchedulerJobSchedule struct {
	value *SchedulerProtoSchedulerJobSchedule
	isSet bool
}

func (v NullableSchedulerProtoSchedulerJobSchedule) Get() *SchedulerProtoSchedulerJobSchedule {
	return v.value
}

func (v *NullableSchedulerProtoSchedulerJobSchedule) Set(val *SchedulerProtoSchedulerJobSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedulerProtoSchedulerJobSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedulerProtoSchedulerJobSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedulerProtoSchedulerJobSchedule(val *SchedulerProtoSchedulerJobSchedule) *NullableSchedulerProtoSchedulerJobSchedule {
	return &NullableSchedulerProtoSchedulerJobSchedule{value: val, isSet: true}
}

func (v NullableSchedulerProtoSchedulerJobSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedulerProtoSchedulerJobSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


