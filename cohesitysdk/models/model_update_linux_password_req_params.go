/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// UpdateLinuxPasswordReqParams Specifies the user input parameters.
type UpdateLinuxPasswordReqParams struct {
	// Specifies the current password.
	LinuxCurrentPassword NullableString `json:"linuxCurrentPassword,omitempty"`
	// Specifies the new linux password.
	LinuxPassword NullableString `json:"linuxPassword"`
	// Specifies the linux username for which the password will be updated.
	LinuxUsername NullableString `json:"linuxUsername"`
}

// NewUpdateLinuxPasswordReqParams instantiates a new UpdateLinuxPasswordReqParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLinuxPasswordReqParams(linuxPassword NullableString, linuxUsername NullableString) *UpdateLinuxPasswordReqParams {
	this := UpdateLinuxPasswordReqParams{}
	this.LinuxPassword = linuxPassword
	this.LinuxUsername = linuxUsername
	return &this
}

// NewUpdateLinuxPasswordReqParamsWithDefaults instantiates a new UpdateLinuxPasswordReqParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLinuxPasswordReqParamsWithDefaults() *UpdateLinuxPasswordReqParams {
	this := UpdateLinuxPasswordReqParams{}
	return &this
}

// GetLinuxCurrentPassword returns the LinuxCurrentPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateLinuxPasswordReqParams) GetLinuxCurrentPassword() string {
	if o == nil || o.LinuxCurrentPassword.Get() == nil {
		var ret string
		return ret
	}
	return *o.LinuxCurrentPassword.Get()
}

// GetLinuxCurrentPasswordOk returns a tuple with the LinuxCurrentPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateLinuxPasswordReqParams) GetLinuxCurrentPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LinuxCurrentPassword.Get(), o.LinuxCurrentPassword.IsSet()
}

// HasLinuxCurrentPassword returns a boolean if a field has been set.
func (o *UpdateLinuxPasswordReqParams) HasLinuxCurrentPassword() bool {
	if o != nil && o.LinuxCurrentPassword.IsSet() {
		return true
	}

	return false
}

// SetLinuxCurrentPassword gets a reference to the given NullableString and assigns it to the LinuxCurrentPassword field.
func (o *UpdateLinuxPasswordReqParams) SetLinuxCurrentPassword(v string) {
	o.LinuxCurrentPassword.Set(&v)
}
// SetLinuxCurrentPasswordNil sets the value for LinuxCurrentPassword to be an explicit nil
func (o *UpdateLinuxPasswordReqParams) SetLinuxCurrentPasswordNil() {
	o.LinuxCurrentPassword.Set(nil)
}

// UnsetLinuxCurrentPassword ensures that no value is present for LinuxCurrentPassword, not even an explicit nil
func (o *UpdateLinuxPasswordReqParams) UnsetLinuxCurrentPassword() {
	o.LinuxCurrentPassword.Unset()
}

// GetLinuxPassword returns the LinuxPassword field value
// If the value is explicit nil, the zero value for string will be returned
func (o *UpdateLinuxPasswordReqParams) GetLinuxPassword() string {
	if o == nil || o.LinuxPassword.Get() == nil {
		var ret string
		return ret
	}

	return *o.LinuxPassword.Get()
}

// GetLinuxPasswordOk returns a tuple with the LinuxPassword field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateLinuxPasswordReqParams) GetLinuxPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LinuxPassword.Get(), o.LinuxPassword.IsSet()
}

// SetLinuxPassword sets field value
func (o *UpdateLinuxPasswordReqParams) SetLinuxPassword(v string) {
	o.LinuxPassword.Set(&v)
}

// GetLinuxUsername returns the LinuxUsername field value
// If the value is explicit nil, the zero value for string will be returned
func (o *UpdateLinuxPasswordReqParams) GetLinuxUsername() string {
	if o == nil || o.LinuxUsername.Get() == nil {
		var ret string
		return ret
	}

	return *o.LinuxUsername.Get()
}

// GetLinuxUsernameOk returns a tuple with the LinuxUsername field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateLinuxPasswordReqParams) GetLinuxUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LinuxUsername.Get(), o.LinuxUsername.IsSet()
}

// SetLinuxUsername sets field value
func (o *UpdateLinuxPasswordReqParams) SetLinuxUsername(v string) {
	o.LinuxUsername.Set(&v)
}

func (o UpdateLinuxPasswordReqParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LinuxCurrentPassword.IsSet() {
		toSerialize["linuxCurrentPassword"] = o.LinuxCurrentPassword.Get()
	}
	if true {
		toSerialize["linuxPassword"] = o.LinuxPassword.Get()
	}
	if true {
		toSerialize["linuxUsername"] = o.LinuxUsername.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateLinuxPasswordReqParams struct {
	value *UpdateLinuxPasswordReqParams
	isSet bool
}

func (v NullableUpdateLinuxPasswordReqParams) Get() *UpdateLinuxPasswordReqParams {
	return v.value
}

func (v *NullableUpdateLinuxPasswordReqParams) Set(val *UpdateLinuxPasswordReqParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLinuxPasswordReqParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLinuxPasswordReqParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLinuxPasswordReqParams(val *UpdateLinuxPasswordReqParams) *NullableUpdateLinuxPasswordReqParams {
	return &NullableUpdateLinuxPasswordReqParams{value: val, isSet: true}
}

func (v NullableUpdateLinuxPasswordReqParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLinuxPasswordReqParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


