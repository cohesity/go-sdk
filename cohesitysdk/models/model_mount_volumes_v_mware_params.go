/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// MountVolumesVMwareParams struct for MountVolumesVMwareParams
type MountVolumesVMwareParams struct {
	// Optional setting which will determine if the volumes need to be onlined within the target environment after attaching the disks. NOTE: If this is set to true, then target_entity_credentials must be specified and VMware tools must be installed on the VM.
	BringDisksOnline NullableBool `json:"bringDisksOnline,omitempty"`
	TargetEntityCredentials *Credentials `json:"targetEntityCredentials,omitempty"`
}

// NewMountVolumesVMwareParams instantiates a new MountVolumesVMwareParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMountVolumesVMwareParams() *MountVolumesVMwareParams {
	this := MountVolumesVMwareParams{}
	return &this
}

// NewMountVolumesVMwareParamsWithDefaults instantiates a new MountVolumesVMwareParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMountVolumesVMwareParamsWithDefaults() *MountVolumesVMwareParams {
	this := MountVolumesVMwareParams{}
	return &this
}

// GetBringDisksOnline returns the BringDisksOnline field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MountVolumesVMwareParams) GetBringDisksOnline() bool {
	if o == nil || o.BringDisksOnline.Get() == nil {
		var ret bool
		return ret
	}
	return *o.BringDisksOnline.Get()
}

// GetBringDisksOnlineOk returns a tuple with the BringDisksOnline field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MountVolumesVMwareParams) GetBringDisksOnlineOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BringDisksOnline.Get(), o.BringDisksOnline.IsSet()
}

// HasBringDisksOnline returns a boolean if a field has been set.
func (o *MountVolumesVMwareParams) HasBringDisksOnline() bool {
	if o != nil && o.BringDisksOnline.IsSet() {
		return true
	}

	return false
}

// SetBringDisksOnline gets a reference to the given NullableBool and assigns it to the BringDisksOnline field.
func (o *MountVolumesVMwareParams) SetBringDisksOnline(v bool) {
	o.BringDisksOnline.Set(&v)
}
// SetBringDisksOnlineNil sets the value for BringDisksOnline to be an explicit nil
func (o *MountVolumesVMwareParams) SetBringDisksOnlineNil() {
	o.BringDisksOnline.Set(nil)
}

// UnsetBringDisksOnline ensures that no value is present for BringDisksOnline, not even an explicit nil
func (o *MountVolumesVMwareParams) UnsetBringDisksOnline() {
	o.BringDisksOnline.Unset()
}

// GetTargetEntityCredentials returns the TargetEntityCredentials field value if set, zero value otherwise.
func (o *MountVolumesVMwareParams) GetTargetEntityCredentials() Credentials {
	if o == nil || o.TargetEntityCredentials == nil {
		var ret Credentials
		return ret
	}
	return *o.TargetEntityCredentials
}

// GetTargetEntityCredentialsOk returns a tuple with the TargetEntityCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountVolumesVMwareParams) GetTargetEntityCredentialsOk() (*Credentials, bool) {
	if o == nil || o.TargetEntityCredentials == nil {
		return nil, false
	}
	return o.TargetEntityCredentials, true
}

// HasTargetEntityCredentials returns a boolean if a field has been set.
func (o *MountVolumesVMwareParams) HasTargetEntityCredentials() bool {
	if o != nil && o.TargetEntityCredentials != nil {
		return true
	}

	return false
}

// SetTargetEntityCredentials gets a reference to the given Credentials and assigns it to the TargetEntityCredentials field.
func (o *MountVolumesVMwareParams) SetTargetEntityCredentials(v Credentials) {
	o.TargetEntityCredentials = &v
}

func (o MountVolumesVMwareParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BringDisksOnline.IsSet() {
		toSerialize["bringDisksOnline"] = o.BringDisksOnline.Get()
	}
	if o.TargetEntityCredentials != nil {
		toSerialize["targetEntityCredentials"] = o.TargetEntityCredentials
	}
	return json.Marshal(toSerialize)
}

type NullableMountVolumesVMwareParams struct {
	value *MountVolumesVMwareParams
	isSet bool
}

func (v NullableMountVolumesVMwareParams) Get() *MountVolumesVMwareParams {
	return v.value
}

func (v *NullableMountVolumesVMwareParams) Set(val *MountVolumesVMwareParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMountVolumesVMwareParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMountVolumesVMwareParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMountVolumesVMwareParams(val *MountVolumesVMwareParams) *NullableMountVolumesVMwareParams {
	return &NullableMountVolumesVMwareParams{value: val, isSet: true}
}

func (v NullableMountVolumesVMwareParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMountVolumesVMwareParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


