/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// AttributeRestoreInformation Represents the details about the restore of the AD attribute.
type AttributeRestoreInformation struct {
	// Specifes the error messages corresponding to restore of the attribute.
	ErrorMessage []string `json:"errorMessage,omitempty"`
	// Specifies the name of the attribute of the AD object.
	Name NullableString `json:"name,omitempty"`
}

// NewAttributeRestoreInformation instantiates a new AttributeRestoreInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeRestoreInformation() *AttributeRestoreInformation {
	this := AttributeRestoreInformation{}
	return &this
}

// NewAttributeRestoreInformationWithDefaults instantiates a new AttributeRestoreInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeRestoreInformationWithDefaults() *AttributeRestoreInformation {
	this := AttributeRestoreInformation{}
	return &this
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AttributeRestoreInformation) GetErrorMessage() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AttributeRestoreInformation) GetErrorMessageOk() (*[]string, bool) {
	if o == nil || o.ErrorMessage == nil {
		return nil, false
	}
	return &o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *AttributeRestoreInformation) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage != nil {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given []string and assigns it to the ErrorMessage field.
func (o *AttributeRestoreInformation) SetErrorMessage(v []string) {
	o.ErrorMessage = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AttributeRestoreInformation) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AttributeRestoreInformation) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AttributeRestoreInformation) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AttributeRestoreInformation) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *AttributeRestoreInformation) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AttributeRestoreInformation) UnsetName() {
	o.Name.Unset()
}

func (o AttributeRestoreInformation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorMessage != nil {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAttributeRestoreInformation struct {
	value *AttributeRestoreInformation
	isSet bool
}

func (v NullableAttributeRestoreInformation) Get() *AttributeRestoreInformation {
	return v.value
}

func (v *NullableAttributeRestoreInformation) Set(val *AttributeRestoreInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeRestoreInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeRestoreInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeRestoreInformation(val *AttributeRestoreInformation) *NullableAttributeRestoreInformation {
	return &NullableAttributeRestoreInformation{value: val, isSet: true}
}

func (v NullableAttributeRestoreInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeRestoreInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


