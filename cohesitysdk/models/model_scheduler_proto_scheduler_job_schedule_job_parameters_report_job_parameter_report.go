/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport struct for SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport
type SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport struct {
	// Specifies the report name.
	Name NullableString `json:"name,omitempty"`
	// Specifies the output format of the report.
	OutputFormat NullableString `json:"outputFormat,omitempty"`
	Parameters *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters `json:"parameters,omitempty"`
	// Specifies the subject line for report.
	SubjectLine NullableString `json:"subjectLine,omitempty"`
	// Specifies the report type.
	Type NullableInt32 `json:"type,omitempty"`
}

// NewSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport instantiates a new SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport() *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport {
	this := SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport{}
	return &this
}

// NewSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportWithDefaults instantiates a new SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportWithDefaults() *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport {
	this := SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) UnsetName() {
	o.Name.Unset()
}

// GetOutputFormat returns the OutputFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) GetOutputFormat() string {
	if o == nil || o.OutputFormat.Get() == nil {
		var ret string
		return ret
	}
	return *o.OutputFormat.Get()
}

// GetOutputFormatOk returns a tuple with the OutputFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) GetOutputFormatOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OutputFormat.Get(), o.OutputFormat.IsSet()
}

// HasOutputFormat returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) HasOutputFormat() bool {
	if o != nil && o.OutputFormat.IsSet() {
		return true
	}

	return false
}

// SetOutputFormat gets a reference to the given NullableString and assigns it to the OutputFormat field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) SetOutputFormat(v string) {
	o.OutputFormat.Set(&v)
}
// SetOutputFormatNil sets the value for OutputFormat to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) SetOutputFormatNil() {
	o.OutputFormat.Set(nil)
}

// UnsetOutputFormat ensures that no value is present for OutputFormat, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) UnsetOutputFormat() {
	o.OutputFormat.Unset()
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) GetParameters() SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters {
	if o == nil || o.Parameters == nil {
		var ret SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) GetParametersOk() (*SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters and assigns it to the Parameters field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) SetParameters(v SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) {
	o.Parameters = &v
}

// GetSubjectLine returns the SubjectLine field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) GetSubjectLine() string {
	if o == nil || o.SubjectLine.Get() == nil {
		var ret string
		return ret
	}
	return *o.SubjectLine.Get()
}

// GetSubjectLineOk returns a tuple with the SubjectLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) GetSubjectLineOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubjectLine.Get(), o.SubjectLine.IsSet()
}

// HasSubjectLine returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) HasSubjectLine() bool {
	if o != nil && o.SubjectLine.IsSet() {
		return true
	}

	return false
}

// SetSubjectLine gets a reference to the given NullableString and assigns it to the SubjectLine field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) SetSubjectLine(v string) {
	o.SubjectLine.Set(&v)
}
// SetSubjectLineNil sets the value for SubjectLine to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) SetSubjectLineNil() {
	o.SubjectLine.Set(nil)
}

// UnsetSubjectLine ensures that no value is present for SubjectLine, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) UnsetSubjectLine() {
	o.SubjectLine.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) GetType() int32 {
	if o == nil || o.Type.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) GetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableInt32 and assigns it to the Type field.
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) SetType(v int32) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) UnsetType() {
	o.Type.Unset()
}

func (o SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.OutputFormat.IsSet() {
		toSerialize["outputFormat"] = o.OutputFormat.Get()
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	if o.SubjectLine.IsSet() {
		toSerialize["subjectLine"] = o.SubjectLine.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport struct {
	value *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport
	isSet bool
}

func (v NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) Get() *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport {
	return v.value
}

func (v *NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) Set(val *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport(val *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) *NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport {
	return &NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport{value: val, isSet: true}
}

func (v NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


