/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// AdRestoreParameters Specifies the parameters specific to Application domain controller.
type AdRestoreParameters struct {
	AdOptions *AdRestoreOptions `json:"adOptions,omitempty"`
	Credentials *Credentials `json:"credentials,omitempty"`
	// Specifies the option to mount the AD snapshot database and restore the AD objects in a single restore task. AdOptions must be set if this is set to true.
	MountAndRestore NullableBool `json:"mountAndRestore,omitempty"`
	// Specifies the port on which the AD domain controller's NTDS database will be mounted.
	Port NullableInt32 `json:"port,omitempty"`
}

// NewAdRestoreParameters instantiates a new AdRestoreParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdRestoreParameters() *AdRestoreParameters {
	this := AdRestoreParameters{}
	return &this
}

// NewAdRestoreParametersWithDefaults instantiates a new AdRestoreParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdRestoreParametersWithDefaults() *AdRestoreParameters {
	this := AdRestoreParameters{}
	return &this
}

// GetAdOptions returns the AdOptions field value if set, zero value otherwise.
func (o *AdRestoreParameters) GetAdOptions() AdRestoreOptions {
	if o == nil || o.AdOptions == nil {
		var ret AdRestoreOptions
		return ret
	}
	return *o.AdOptions
}

// GetAdOptionsOk returns a tuple with the AdOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdRestoreParameters) GetAdOptionsOk() (*AdRestoreOptions, bool) {
	if o == nil || o.AdOptions == nil {
		return nil, false
	}
	return o.AdOptions, true
}

// HasAdOptions returns a boolean if a field has been set.
func (o *AdRestoreParameters) HasAdOptions() bool {
	if o != nil && o.AdOptions != nil {
		return true
	}

	return false
}

// SetAdOptions gets a reference to the given AdRestoreOptions and assigns it to the AdOptions field.
func (o *AdRestoreParameters) SetAdOptions(v AdRestoreOptions) {
	o.AdOptions = &v
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *AdRestoreParameters) GetCredentials() Credentials {
	if o == nil || o.Credentials == nil {
		var ret Credentials
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdRestoreParameters) GetCredentialsOk() (*Credentials, bool) {
	if o == nil || o.Credentials == nil {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *AdRestoreParameters) HasCredentials() bool {
	if o != nil && o.Credentials != nil {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given Credentials and assigns it to the Credentials field.
func (o *AdRestoreParameters) SetCredentials(v Credentials) {
	o.Credentials = &v
}

// GetMountAndRestore returns the MountAndRestore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdRestoreParameters) GetMountAndRestore() bool {
	if o == nil || o.MountAndRestore.Get() == nil {
		var ret bool
		return ret
	}
	return *o.MountAndRestore.Get()
}

// GetMountAndRestoreOk returns a tuple with the MountAndRestore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdRestoreParameters) GetMountAndRestoreOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MountAndRestore.Get(), o.MountAndRestore.IsSet()
}

// HasMountAndRestore returns a boolean if a field has been set.
func (o *AdRestoreParameters) HasMountAndRestore() bool {
	if o != nil && o.MountAndRestore.IsSet() {
		return true
	}

	return false
}

// SetMountAndRestore gets a reference to the given NullableBool and assigns it to the MountAndRestore field.
func (o *AdRestoreParameters) SetMountAndRestore(v bool) {
	o.MountAndRestore.Set(&v)
}
// SetMountAndRestoreNil sets the value for MountAndRestore to be an explicit nil
func (o *AdRestoreParameters) SetMountAndRestoreNil() {
	o.MountAndRestore.Set(nil)
}

// UnsetMountAndRestore ensures that no value is present for MountAndRestore, not even an explicit nil
func (o *AdRestoreParameters) UnsetMountAndRestore() {
	o.MountAndRestore.Unset()
}

// GetPort returns the Port field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdRestoreParameters) GetPort() int32 {
	if o == nil || o.Port.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Port.Get()
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdRestoreParameters) GetPortOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Port.Get(), o.Port.IsSet()
}

// HasPort returns a boolean if a field has been set.
func (o *AdRestoreParameters) HasPort() bool {
	if o != nil && o.Port.IsSet() {
		return true
	}

	return false
}

// SetPort gets a reference to the given NullableInt32 and assigns it to the Port field.
func (o *AdRestoreParameters) SetPort(v int32) {
	o.Port.Set(&v)
}
// SetPortNil sets the value for Port to be an explicit nil
func (o *AdRestoreParameters) SetPortNil() {
	o.Port.Set(nil)
}

// UnsetPort ensures that no value is present for Port, not even an explicit nil
func (o *AdRestoreParameters) UnsetPort() {
	o.Port.Unset()
}

func (o AdRestoreParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdOptions != nil {
		toSerialize["adOptions"] = o.AdOptions
	}
	if o.Credentials != nil {
		toSerialize["credentials"] = o.Credentials
	}
	if o.MountAndRestore.IsSet() {
		toSerialize["mountAndRestore"] = o.MountAndRestore.Get()
	}
	if o.Port.IsSet() {
		toSerialize["port"] = o.Port.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAdRestoreParameters struct {
	value *AdRestoreParameters
	isSet bool
}

func (v NullableAdRestoreParameters) Get() *AdRestoreParameters {
	return v.value
}

func (v *NullableAdRestoreParameters) Set(val *AdRestoreParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableAdRestoreParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableAdRestoreParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdRestoreParameters(val *AdRestoreParameters) *NullableAdRestoreParameters {
	return &NullableAdRestoreParameters{value: val, isSet: true}
}

func (v NullableAdRestoreParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdRestoreParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


