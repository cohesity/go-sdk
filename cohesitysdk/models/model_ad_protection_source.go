/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// AdProtectionSource Specifies an object representing an AD entity.
type AdProtectionSource struct {
	DomainController *AdDomainController `json:"domainController,omitempty"`
	// Specifies the domain name corresponding to the domain controller.
	DomainName NullableString `json:"domainName,omitempty"`
	// Specifies the domain name of the AD entity.
	Name NullableString `json:"name,omitempty"`
	// Specifies the entity id of the owner entity.
	OwnerId NullableInt64 `json:"ownerId,omitempty"`
	// Specifies the type of the managed object in AD Protection Source. Specifies the kind of AD protection source. 'kRootContainer' indicates the entity is a root container to an AD domain controller. 'kDomainController' indicates the domain controller hosted in this physical server.
	Type NullableString `json:"type,omitempty"`
	// Specifies the UUID for the AD entity.
	Uuid NullableString `json:"uuid,omitempty"`
}

// NewAdProtectionSource instantiates a new AdProtectionSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdProtectionSource() *AdProtectionSource {
	this := AdProtectionSource{}
	return &this
}

// NewAdProtectionSourceWithDefaults instantiates a new AdProtectionSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdProtectionSourceWithDefaults() *AdProtectionSource {
	this := AdProtectionSource{}
	return &this
}

// GetDomainController returns the DomainController field value if set, zero value otherwise.
func (o *AdProtectionSource) GetDomainController() AdDomainController {
	if o == nil || o.DomainController == nil {
		var ret AdDomainController
		return ret
	}
	return *o.DomainController
}

// GetDomainControllerOk returns a tuple with the DomainController field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdProtectionSource) GetDomainControllerOk() (*AdDomainController, bool) {
	if o == nil || o.DomainController == nil {
		return nil, false
	}
	return o.DomainController, true
}

// HasDomainController returns a boolean if a field has been set.
func (o *AdProtectionSource) HasDomainController() bool {
	if o != nil && o.DomainController != nil {
		return true
	}

	return false
}

// SetDomainController gets a reference to the given AdDomainController and assigns it to the DomainController field.
func (o *AdProtectionSource) SetDomainController(v AdDomainController) {
	o.DomainController = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdProtectionSource) GetDomainName() string {
	if o == nil || o.DomainName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DomainName.Get()
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdProtectionSource) GetDomainNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DomainName.Get(), o.DomainName.IsSet()
}

// HasDomainName returns a boolean if a field has been set.
func (o *AdProtectionSource) HasDomainName() bool {
	if o != nil && o.DomainName.IsSet() {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given NullableString and assigns it to the DomainName field.
func (o *AdProtectionSource) SetDomainName(v string) {
	o.DomainName.Set(&v)
}
// SetDomainNameNil sets the value for DomainName to be an explicit nil
func (o *AdProtectionSource) SetDomainNameNil() {
	o.DomainName.Set(nil)
}

// UnsetDomainName ensures that no value is present for DomainName, not even an explicit nil
func (o *AdProtectionSource) UnsetDomainName() {
	o.DomainName.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdProtectionSource) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdProtectionSource) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AdProtectionSource) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AdProtectionSource) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *AdProtectionSource) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AdProtectionSource) UnsetName() {
	o.Name.Unset()
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdProtectionSource) GetOwnerId() int64 {
	if o == nil || o.OwnerId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.OwnerId.Get()
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdProtectionSource) GetOwnerIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OwnerId.Get(), o.OwnerId.IsSet()
}

// HasOwnerId returns a boolean if a field has been set.
func (o *AdProtectionSource) HasOwnerId() bool {
	if o != nil && o.OwnerId.IsSet() {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given NullableInt64 and assigns it to the OwnerId field.
func (o *AdProtectionSource) SetOwnerId(v int64) {
	o.OwnerId.Set(&v)
}
// SetOwnerIdNil sets the value for OwnerId to be an explicit nil
func (o *AdProtectionSource) SetOwnerIdNil() {
	o.OwnerId.Set(nil)
}

// UnsetOwnerId ensures that no value is present for OwnerId, not even an explicit nil
func (o *AdProtectionSource) UnsetOwnerId() {
	o.OwnerId.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdProtectionSource) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdProtectionSource) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *AdProtectionSource) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *AdProtectionSource) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *AdProtectionSource) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *AdProtectionSource) UnsetType() {
	o.Type.Unset()
}

// GetUuid returns the Uuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdProtectionSource) GetUuid() string {
	if o == nil || o.Uuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uuid.Get()
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdProtectionSource) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Uuid.Get(), o.Uuid.IsSet()
}

// HasUuid returns a boolean if a field has been set.
func (o *AdProtectionSource) HasUuid() bool {
	if o != nil && o.Uuid.IsSet() {
		return true
	}

	return false
}

// SetUuid gets a reference to the given NullableString and assigns it to the Uuid field.
func (o *AdProtectionSource) SetUuid(v string) {
	o.Uuid.Set(&v)
}
// SetUuidNil sets the value for Uuid to be an explicit nil
func (o *AdProtectionSource) SetUuidNil() {
	o.Uuid.Set(nil)
}

// UnsetUuid ensures that no value is present for Uuid, not even an explicit nil
func (o *AdProtectionSource) UnsetUuid() {
	o.Uuid.Unset()
}

func (o AdProtectionSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DomainController != nil {
		toSerialize["domainController"] = o.DomainController
	}
	if o.DomainName.IsSet() {
		toSerialize["domainName"] = o.DomainName.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.OwnerId.IsSet() {
		toSerialize["ownerId"] = o.OwnerId.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.Uuid.IsSet() {
		toSerialize["uuid"] = o.Uuid.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAdProtectionSource struct {
	value *AdProtectionSource
	isSet bool
}

func (v NullableAdProtectionSource) Get() *AdProtectionSource {
	return v.value
}

func (v *NullableAdProtectionSource) Set(val *AdProtectionSource) {
	v.value = val
	v.isSet = true
}

func (v NullableAdProtectionSource) IsSet() bool {
	return v.isSet
}

func (v *NullableAdProtectionSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdProtectionSource(val *AdProtectionSource) *NullableAdProtectionSource {
	return &NullableAdProtectionSource{value: val, isSet: true}
}

func (v NullableAdProtectionSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdProtectionSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


