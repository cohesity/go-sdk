/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// GetAllJobRunsResult Specifies the common result structure of the response of all runs info ( protection, replication, archival etc.).
type GetAllJobRunsResult struct {
	// Specifies the end time of the run.
	EndTimeMsecs NullableInt64 `json:"endTimeMsecs,omitempty"`
	// Specifies the environment type of the job. Supported environment types such as 'kView', 'kSQL', 'kVMware', etc. NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter. 'kVMware' indicates the VMware Protection Source environment. 'kHyperV' indicates the HyperV Protection Source environment. 'kSQL' indicates the SQL Protection Source environment. 'kView' indicates the View Protection Source environment. 'kPuppeteer' indicates the Cohesity's Remote Adapter. 'kPhysical' indicates the physical Protection Source environment. 'kPure' indicates the Pure Storage Protection Source environment. 'Nimble' indicates the Nimble Storage Protection Source environment. 'kAzure' indicates the Microsoft's Azure Protection Source environment. 'kNetapp' indicates the Netapp Protection Source environment. 'kAgent' indicates the Agent Protection Source environment. 'kGenericNas' indicates the Generic Network Attached Storage Protection Source environment. 'kAcropolis' indicates the Acropolis Protection Source environment. 'kPhsicalFiles' indicates the Physical Files Protection Source environment. 'kIsilon' indicates the Dell EMC's Isilon Protection Source environment. 'kGPFS' indicates IBM's GPFS Protection Source environment. 'kKVM' indicates the KVM Protection Source environment. 'kAWS' indicates the AWS Protection Source environment. 'kExchange' indicates the Exchange Protection Source environment. 'kHyperVVSS' indicates the HyperV VSS Protection Source environment. 'kOracle' indicates the Oracle Protection Source environment. 'kGCP' indicates the Google Cloud Platform Protection Source environment. 'kFlashBlade' indicates the Flash Blade Protection Source environment. 'kAWSNative' indicates the AWS Native Protection Source environment. 'kO365' indicates the Office 365 Protection Source environment. 'kO365Outlook' indicates Office 365 outlook Protection Source environment. 'kHyperFlex' indicates the Hyper Flex Protection Source environment. 'kGCPNative' indicates the GCP Native Protection Source environment. 'kAzureNative' indicates the Azure Native Protection Source environment. 'kKubernetes' indicates a Kubernetes Protection Source environment. 'kElastifile' indicates Elastifile Protection Source environment. 'kAD' indicates Active Directory Protection Source environment. 'kRDSSnapshotManager' indicates AWS RDS Protection Source environment. 'kCassandra' indicates Cassandra Protection Source environment. 'kMongoDB' indicates MongoDB Protection Source environment. 'kCouchbase' indicates Couchbase Protection Source environment. 'kHdfs' indicates Hdfs Protection Source environment. 'kHive' indicates Hive Protection Source environment. 'kHBase' indicates HBase Protection Source environment.
	EnvType NullableString `json:"envType,omitempty"`
	// Specifies the job id.
	JobId NullableString `json:"jobId,omitempty"`
	// Specifies the job name.
	JobName NullableString `json:"jobName,omitempty"`
	// Specifies the job run id.
	JobRunId NullableString `json:"jobRunId,omitempty"`
	// Specifies the job type, protection, replication, archival, apollo, indexing etc.
	JobType NullableString `json:"jobType,omitempty"`
	// Specifies the start time of the run.
	StartTimeMsecs NullableInt64 `json:"startTimeMsecs,omitempty"`
	// Specifies the view box id.
	ViewBoxId NullableInt64 `json:"viewBoxId,omitempty"`
}

// NewGetAllJobRunsResult instantiates a new GetAllJobRunsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAllJobRunsResult() *GetAllJobRunsResult {
	this := GetAllJobRunsResult{}
	return &this
}

// NewGetAllJobRunsResultWithDefaults instantiates a new GetAllJobRunsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAllJobRunsResultWithDefaults() *GetAllJobRunsResult {
	this := GetAllJobRunsResult{}
	return &this
}

// GetEndTimeMsecs returns the EndTimeMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAllJobRunsResult) GetEndTimeMsecs() int64 {
	if o == nil || o.EndTimeMsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeMsecs.Get()
}

// GetEndTimeMsecsOk returns a tuple with the EndTimeMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAllJobRunsResult) GetEndTimeMsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeMsecs.Get(), o.EndTimeMsecs.IsSet()
}

// HasEndTimeMsecs returns a boolean if a field has been set.
func (o *GetAllJobRunsResult) HasEndTimeMsecs() bool {
	if o != nil && o.EndTimeMsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeMsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeMsecs field.
func (o *GetAllJobRunsResult) SetEndTimeMsecs(v int64) {
	o.EndTimeMsecs.Set(&v)
}
// SetEndTimeMsecsNil sets the value for EndTimeMsecs to be an explicit nil
func (o *GetAllJobRunsResult) SetEndTimeMsecsNil() {
	o.EndTimeMsecs.Set(nil)
}

// UnsetEndTimeMsecs ensures that no value is present for EndTimeMsecs, not even an explicit nil
func (o *GetAllJobRunsResult) UnsetEndTimeMsecs() {
	o.EndTimeMsecs.Unset()
}

// GetEnvType returns the EnvType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAllJobRunsResult) GetEnvType() string {
	if o == nil || o.EnvType.Get() == nil {
		var ret string
		return ret
	}
	return *o.EnvType.Get()
}

// GetEnvTypeOk returns a tuple with the EnvType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAllJobRunsResult) GetEnvTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EnvType.Get(), o.EnvType.IsSet()
}

// HasEnvType returns a boolean if a field has been set.
func (o *GetAllJobRunsResult) HasEnvType() bool {
	if o != nil && o.EnvType.IsSet() {
		return true
	}

	return false
}

// SetEnvType gets a reference to the given NullableString and assigns it to the EnvType field.
func (o *GetAllJobRunsResult) SetEnvType(v string) {
	o.EnvType.Set(&v)
}
// SetEnvTypeNil sets the value for EnvType to be an explicit nil
func (o *GetAllJobRunsResult) SetEnvTypeNil() {
	o.EnvType.Set(nil)
}

// UnsetEnvType ensures that no value is present for EnvType, not even an explicit nil
func (o *GetAllJobRunsResult) UnsetEnvType() {
	o.EnvType.Unset()
}

// GetJobId returns the JobId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAllJobRunsResult) GetJobId() string {
	if o == nil || o.JobId.Get() == nil {
		var ret string
		return ret
	}
	return *o.JobId.Get()
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAllJobRunsResult) GetJobIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobId.Get(), o.JobId.IsSet()
}

// HasJobId returns a boolean if a field has been set.
func (o *GetAllJobRunsResult) HasJobId() bool {
	if o != nil && o.JobId.IsSet() {
		return true
	}

	return false
}

// SetJobId gets a reference to the given NullableString and assigns it to the JobId field.
func (o *GetAllJobRunsResult) SetJobId(v string) {
	o.JobId.Set(&v)
}
// SetJobIdNil sets the value for JobId to be an explicit nil
func (o *GetAllJobRunsResult) SetJobIdNil() {
	o.JobId.Set(nil)
}

// UnsetJobId ensures that no value is present for JobId, not even an explicit nil
func (o *GetAllJobRunsResult) UnsetJobId() {
	o.JobId.Unset()
}

// GetJobName returns the JobName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAllJobRunsResult) GetJobName() string {
	if o == nil || o.JobName.Get() == nil {
		var ret string
		return ret
	}
	return *o.JobName.Get()
}

// GetJobNameOk returns a tuple with the JobName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAllJobRunsResult) GetJobNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobName.Get(), o.JobName.IsSet()
}

// HasJobName returns a boolean if a field has been set.
func (o *GetAllJobRunsResult) HasJobName() bool {
	if o != nil && o.JobName.IsSet() {
		return true
	}

	return false
}

// SetJobName gets a reference to the given NullableString and assigns it to the JobName field.
func (o *GetAllJobRunsResult) SetJobName(v string) {
	o.JobName.Set(&v)
}
// SetJobNameNil sets the value for JobName to be an explicit nil
func (o *GetAllJobRunsResult) SetJobNameNil() {
	o.JobName.Set(nil)
}

// UnsetJobName ensures that no value is present for JobName, not even an explicit nil
func (o *GetAllJobRunsResult) UnsetJobName() {
	o.JobName.Unset()
}

// GetJobRunId returns the JobRunId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAllJobRunsResult) GetJobRunId() string {
	if o == nil || o.JobRunId.Get() == nil {
		var ret string
		return ret
	}
	return *o.JobRunId.Get()
}

// GetJobRunIdOk returns a tuple with the JobRunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAllJobRunsResult) GetJobRunIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobRunId.Get(), o.JobRunId.IsSet()
}

// HasJobRunId returns a boolean if a field has been set.
func (o *GetAllJobRunsResult) HasJobRunId() bool {
	if o != nil && o.JobRunId.IsSet() {
		return true
	}

	return false
}

// SetJobRunId gets a reference to the given NullableString and assigns it to the JobRunId field.
func (o *GetAllJobRunsResult) SetJobRunId(v string) {
	o.JobRunId.Set(&v)
}
// SetJobRunIdNil sets the value for JobRunId to be an explicit nil
func (o *GetAllJobRunsResult) SetJobRunIdNil() {
	o.JobRunId.Set(nil)
}

// UnsetJobRunId ensures that no value is present for JobRunId, not even an explicit nil
func (o *GetAllJobRunsResult) UnsetJobRunId() {
	o.JobRunId.Unset()
}

// GetJobType returns the JobType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAllJobRunsResult) GetJobType() string {
	if o == nil || o.JobType.Get() == nil {
		var ret string
		return ret
	}
	return *o.JobType.Get()
}

// GetJobTypeOk returns a tuple with the JobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAllJobRunsResult) GetJobTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobType.Get(), o.JobType.IsSet()
}

// HasJobType returns a boolean if a field has been set.
func (o *GetAllJobRunsResult) HasJobType() bool {
	if o != nil && o.JobType.IsSet() {
		return true
	}

	return false
}

// SetJobType gets a reference to the given NullableString and assigns it to the JobType field.
func (o *GetAllJobRunsResult) SetJobType(v string) {
	o.JobType.Set(&v)
}
// SetJobTypeNil sets the value for JobType to be an explicit nil
func (o *GetAllJobRunsResult) SetJobTypeNil() {
	o.JobType.Set(nil)
}

// UnsetJobType ensures that no value is present for JobType, not even an explicit nil
func (o *GetAllJobRunsResult) UnsetJobType() {
	o.JobType.Unset()
}

// GetStartTimeMsecs returns the StartTimeMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAllJobRunsResult) GetStartTimeMsecs() int64 {
	if o == nil || o.StartTimeMsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StartTimeMsecs.Get()
}

// GetStartTimeMsecsOk returns a tuple with the StartTimeMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAllJobRunsResult) GetStartTimeMsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartTimeMsecs.Get(), o.StartTimeMsecs.IsSet()
}

// HasStartTimeMsecs returns a boolean if a field has been set.
func (o *GetAllJobRunsResult) HasStartTimeMsecs() bool {
	if o != nil && o.StartTimeMsecs.IsSet() {
		return true
	}

	return false
}

// SetStartTimeMsecs gets a reference to the given NullableInt64 and assigns it to the StartTimeMsecs field.
func (o *GetAllJobRunsResult) SetStartTimeMsecs(v int64) {
	o.StartTimeMsecs.Set(&v)
}
// SetStartTimeMsecsNil sets the value for StartTimeMsecs to be an explicit nil
func (o *GetAllJobRunsResult) SetStartTimeMsecsNil() {
	o.StartTimeMsecs.Set(nil)
}

// UnsetStartTimeMsecs ensures that no value is present for StartTimeMsecs, not even an explicit nil
func (o *GetAllJobRunsResult) UnsetStartTimeMsecs() {
	o.StartTimeMsecs.Unset()
}

// GetViewBoxId returns the ViewBoxId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAllJobRunsResult) GetViewBoxId() int64 {
	if o == nil || o.ViewBoxId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ViewBoxId.Get()
}

// GetViewBoxIdOk returns a tuple with the ViewBoxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAllJobRunsResult) GetViewBoxIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewBoxId.Get(), o.ViewBoxId.IsSet()
}

// HasViewBoxId returns a boolean if a field has been set.
func (o *GetAllJobRunsResult) HasViewBoxId() bool {
	if o != nil && o.ViewBoxId.IsSet() {
		return true
	}

	return false
}

// SetViewBoxId gets a reference to the given NullableInt64 and assigns it to the ViewBoxId field.
func (o *GetAllJobRunsResult) SetViewBoxId(v int64) {
	o.ViewBoxId.Set(&v)
}
// SetViewBoxIdNil sets the value for ViewBoxId to be an explicit nil
func (o *GetAllJobRunsResult) SetViewBoxIdNil() {
	o.ViewBoxId.Set(nil)
}

// UnsetViewBoxId ensures that no value is present for ViewBoxId, not even an explicit nil
func (o *GetAllJobRunsResult) UnsetViewBoxId() {
	o.ViewBoxId.Unset()
}

func (o GetAllJobRunsResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EndTimeMsecs.IsSet() {
		toSerialize["endTimeMsecs"] = o.EndTimeMsecs.Get()
	}
	if o.EnvType.IsSet() {
		toSerialize["envType"] = o.EnvType.Get()
	}
	if o.JobId.IsSet() {
		toSerialize["jobId"] = o.JobId.Get()
	}
	if o.JobName.IsSet() {
		toSerialize["jobName"] = o.JobName.Get()
	}
	if o.JobRunId.IsSet() {
		toSerialize["jobRunId"] = o.JobRunId.Get()
	}
	if o.JobType.IsSet() {
		toSerialize["jobType"] = o.JobType.Get()
	}
	if o.StartTimeMsecs.IsSet() {
		toSerialize["startTimeMsecs"] = o.StartTimeMsecs.Get()
	}
	if o.ViewBoxId.IsSet() {
		toSerialize["viewBoxId"] = o.ViewBoxId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGetAllJobRunsResult struct {
	value *GetAllJobRunsResult
	isSet bool
}

func (v NullableGetAllJobRunsResult) Get() *GetAllJobRunsResult {
	return v.value
}

func (v *NullableGetAllJobRunsResult) Set(val *GetAllJobRunsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAllJobRunsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAllJobRunsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAllJobRunsResult(val *GetAllJobRunsResult) *NullableGetAllJobRunsResult {
	return &NullableGetAllJobRunsResult{value: val, isSet: true}
}

func (v NullableGetAllJobRunsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAllJobRunsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


