/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// GpfsCluster Specifies information about a GPFS Cluster.
type GpfsCluster struct {
	// Specifies a list of CES(Cluster Export Services) IP addresses of a GPFS Cluster.
	CesAddresses []string `json:"cesAddresses,omitempty"`
	// Specifies a globally unique id of a GPFS Cluster.
	Id NullableInt32 `json:"id,omitempty"`
	// Specifies a primary server of a GPFS Cluster.
	PrimaryServer NullableString `json:"primaryServer,omitempty"`
}

// NewGpfsCluster instantiates a new GpfsCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGpfsCluster() *GpfsCluster {
	this := GpfsCluster{}
	return &this
}

// NewGpfsClusterWithDefaults instantiates a new GpfsCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGpfsClusterWithDefaults() *GpfsCluster {
	this := GpfsCluster{}
	return &this
}

// GetCesAddresses returns the CesAddresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GpfsCluster) GetCesAddresses() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.CesAddresses
}

// GetCesAddressesOk returns a tuple with the CesAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GpfsCluster) GetCesAddressesOk() (*[]string, bool) {
	if o == nil || o.CesAddresses == nil {
		return nil, false
	}
	return &o.CesAddresses, true
}

// HasCesAddresses returns a boolean if a field has been set.
func (o *GpfsCluster) HasCesAddresses() bool {
	if o != nil && o.CesAddresses != nil {
		return true
	}

	return false
}

// SetCesAddresses gets a reference to the given []string and assigns it to the CesAddresses field.
func (o *GpfsCluster) SetCesAddresses(v []string) {
	o.CesAddresses = v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GpfsCluster) GetId() int32 {
	if o == nil || o.Id.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GpfsCluster) GetIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *GpfsCluster) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt32 and assigns it to the Id field.
func (o *GpfsCluster) SetId(v int32) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *GpfsCluster) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *GpfsCluster) UnsetId() {
	o.Id.Unset()
}

// GetPrimaryServer returns the PrimaryServer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GpfsCluster) GetPrimaryServer() string {
	if o == nil || o.PrimaryServer.Get() == nil {
		var ret string
		return ret
	}
	return *o.PrimaryServer.Get()
}

// GetPrimaryServerOk returns a tuple with the PrimaryServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GpfsCluster) GetPrimaryServerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PrimaryServer.Get(), o.PrimaryServer.IsSet()
}

// HasPrimaryServer returns a boolean if a field has been set.
func (o *GpfsCluster) HasPrimaryServer() bool {
	if o != nil && o.PrimaryServer.IsSet() {
		return true
	}

	return false
}

// SetPrimaryServer gets a reference to the given NullableString and assigns it to the PrimaryServer field.
func (o *GpfsCluster) SetPrimaryServer(v string) {
	o.PrimaryServer.Set(&v)
}
// SetPrimaryServerNil sets the value for PrimaryServer to be an explicit nil
func (o *GpfsCluster) SetPrimaryServerNil() {
	o.PrimaryServer.Set(nil)
}

// UnsetPrimaryServer ensures that no value is present for PrimaryServer, not even an explicit nil
func (o *GpfsCluster) UnsetPrimaryServer() {
	o.PrimaryServer.Unset()
}

func (o GpfsCluster) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CesAddresses != nil {
		toSerialize["cesAddresses"] = o.CesAddresses
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.PrimaryServer.IsSet() {
		toSerialize["primaryServer"] = o.PrimaryServer.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGpfsCluster struct {
	value *GpfsCluster
	isSet bool
}

func (v NullableGpfsCluster) Get() *GpfsCluster {
	return v.value
}

func (v *NullableGpfsCluster) Set(val *GpfsCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableGpfsCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableGpfsCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGpfsCluster(val *GpfsCluster) *NullableGpfsCluster {
	return &NullableGpfsCluster{value: val, isSet: true}
}

func (v NullableGpfsCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGpfsCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


