/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// GetAlertTypesParams Specifies params to get alert types.
type GetAlertTypesParams struct {
	// Specifies a list of Alert Categories to filter alert types by. Specifies the category of an Alert. kDisk - Alerts that are related to Disk. kNode - Alerts that are related to Node. kCluster - Alerts that are related to Cluster. kNodeHealth - Alerts that are related to Node Health. kClusterHealth - Alerts that are related to Cluster Health. kBackupRestore - Alerts that are related to Backup/Restore. kEncryption - Alerts that are related to Encryption. kArchivalRestore - Alerts that are related to Archival/Restore. kRemoteReplication - Alerts that are related to Remote Replication. kQuota - Alerts that are related to Quota. kLicense - Alerts that are related to License. kHeliosProActiveWellness - Alerts that are related to Helios ProActive Wellness. kHeliosAnalyticsJobs - Alerts that are related to Helios Analytics Jobs. kHeliosSignatureJobs - Alerts that are related to Helios Signature Jobs. kSecurity - Alerts that are related to Security. kAppsInfra - Alerts that are related to applications infra. kAntivirus - Alerts that are related to antivirus. kArchivalCopy - Alerts that are related to archival copies.
	AlertCategoryList []string `json:"alertCategoryList,omitempty"`
}

// NewGetAlertTypesParams instantiates a new GetAlertTypesParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAlertTypesParams() *GetAlertTypesParams {
	this := GetAlertTypesParams{}
	return &this
}

// NewGetAlertTypesParamsWithDefaults instantiates a new GetAlertTypesParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAlertTypesParamsWithDefaults() *GetAlertTypesParams {
	this := GetAlertTypesParams{}
	return &this
}

// GetAlertCategoryList returns the AlertCategoryList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAlertTypesParams) GetAlertCategoryList() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.AlertCategoryList
}

// GetAlertCategoryListOk returns a tuple with the AlertCategoryList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAlertTypesParams) GetAlertCategoryListOk() (*[]string, bool) {
	if o == nil || o.AlertCategoryList == nil {
		return nil, false
	}
	return &o.AlertCategoryList, true
}

// HasAlertCategoryList returns a boolean if a field has been set.
func (o *GetAlertTypesParams) HasAlertCategoryList() bool {
	if o != nil && o.AlertCategoryList != nil {
		return true
	}

	return false
}

// SetAlertCategoryList gets a reference to the given []string and assigns it to the AlertCategoryList field.
func (o *GetAlertTypesParams) SetAlertCategoryList(v []string) {
	o.AlertCategoryList = v
}

func (o GetAlertTypesParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AlertCategoryList != nil {
		toSerialize["alertCategoryList"] = o.AlertCategoryList
	}
	return json.Marshal(toSerialize)
}

type NullableGetAlertTypesParams struct {
	value *GetAlertTypesParams
	isSet bool
}

func (v NullableGetAlertTypesParams) Get() *GetAlertTypesParams {
	return v.value
}

func (v *NullableGetAlertTypesParams) Set(val *GetAlertTypesParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAlertTypesParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAlertTypesParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAlertTypesParams(val *GetAlertTypesParams) *NullableGetAlertTypesParams {
	return &NullableGetAlertTypesParams{value: val, isSet: true}
}

func (v NullableGetAlertTypesParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAlertTypesParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


