/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// RetrieveArchiveTaskStateProto Persistent state of a retrieve of an archive task. Only one of either entity_vec or download_files_info needs to be specified in this proto, where entity_vec is for retrieving the whole objects from the archive, and download_files_info is for only downloading the specified files from the archive.
type RetrieveArchiveTaskStateProto struct {
	ArchivalTarget *ArchivalTarget `json:"archivalTarget,omitempty"`
	ArchiveTaskUid *UniversalIdProto `json:"archiveTaskUid,omitempty"`
	// The start time of the backup run whose corresponding archive is being retrieved. This field is just used for logging purposes.
	BackupRunStartTimeUsecs NullableInt64 `json:"backupRunStartTimeUsecs,omitempty"`
	// Whether this retrieval task has a pending cancellation request.
	CancellationRequested NullableBool `json:"cancellationRequested,omitempty"`
	DownloadFilesInfo *RetrieveArchiveTaskStateProtoDownloadFilesInfo `json:"downloadFilesInfo,omitempty"`
	// If the retrieval task has finished, this field contains the end time for the task.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	// Information on the exact set of objects to retrieve from archive. Even if the user wanted to retrieve all objects from the archive, this field will contain all individual leaf-level objects.
	EntityVec []EntityProto `json:"entityVec,omitempty"`
	Error *ErrorProto `json:"error,omitempty"`
	// The full view name (external). This is composed of a Cohesity specific prefix and the user provided view name.
	FullViewNameDEPRECATED NullableString `json:"fullViewName_DEPRECATED,omitempty"`
	JobUid *UniversalIdProto `json:"jobUid,omitempty"`
	// The name of the retrieval task.
	Name NullableString `json:"name,omitempty"`
	// The path of the progress monitor for this task.
	ProgressMonitorTaskPath NullableString `json:"progressMonitorTaskPath,omitempty"`
	RestoreArchiveFilesInfo *RetrieveArchiveTaskStateProtoDownloadFilesInfo `json:"restoreArchiveFilesInfo,omitempty"`
	// For retrieve tasks created after the 2.8 release, this will contain the id of the restore task that created this retrieve task.
	RestoreTaskId NullableInt64 `json:"restoreTaskId,omitempty"`
	RetrievalInfo *RetrieveArchiveInfo `json:"retrievalInfo,omitempty"`
	// The start time for this retrieval task.
	StartTimeUsecs NullableInt64 `json:"startTimeUsecs,omitempty"`
	// The status of this task.
	Status NullableInt32 `json:"status,omitempty"`
	TaskUid *UniversalIdProto `json:"taskUid,omitempty"`
	// The user who requested this retrieval task.
	User NullableString `json:"user,omitempty"`
	VaultRestoreParams *VaultParamsRestoreParams `json:"vaultRestoreParams,omitempty"`
	// The view box id to which 'view_name' belongs to.
	ViewBoxId NullableInt64 `json:"viewBoxId,omitempty"`
	// The view name as provided by the user for this retrieval task. Retrieved snapshots of the entities will be placed in this view.
	ViewNameDEPRECATED NullableString `json:"viewName_DEPRECATED,omitempty"`
}

// NewRetrieveArchiveTaskStateProto instantiates a new RetrieveArchiveTaskStateProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetrieveArchiveTaskStateProto() *RetrieveArchiveTaskStateProto {
	this := RetrieveArchiveTaskStateProto{}
	return &this
}

// NewRetrieveArchiveTaskStateProtoWithDefaults instantiates a new RetrieveArchiveTaskStateProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetrieveArchiveTaskStateProtoWithDefaults() *RetrieveArchiveTaskStateProto {
	this := RetrieveArchiveTaskStateProto{}
	return &this
}

// GetArchivalTarget returns the ArchivalTarget field value if set, zero value otherwise.
func (o *RetrieveArchiveTaskStateProto) GetArchivalTarget() ArchivalTarget {
	if o == nil || o.ArchivalTarget == nil {
		var ret ArchivalTarget
		return ret
	}
	return *o.ArchivalTarget
}

// GetArchivalTargetOk returns a tuple with the ArchivalTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveArchiveTaskStateProto) GetArchivalTargetOk() (*ArchivalTarget, bool) {
	if o == nil || o.ArchivalTarget == nil {
		return nil, false
	}
	return o.ArchivalTarget, true
}

// HasArchivalTarget returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasArchivalTarget() bool {
	if o != nil && o.ArchivalTarget != nil {
		return true
	}

	return false
}

// SetArchivalTarget gets a reference to the given ArchivalTarget and assigns it to the ArchivalTarget field.
func (o *RetrieveArchiveTaskStateProto) SetArchivalTarget(v ArchivalTarget) {
	o.ArchivalTarget = &v
}

// GetArchiveTaskUid returns the ArchiveTaskUid field value if set, zero value otherwise.
func (o *RetrieveArchiveTaskStateProto) GetArchiveTaskUid() UniversalIdProto {
	if o == nil || o.ArchiveTaskUid == nil {
		var ret UniversalIdProto
		return ret
	}
	return *o.ArchiveTaskUid
}

// GetArchiveTaskUidOk returns a tuple with the ArchiveTaskUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveArchiveTaskStateProto) GetArchiveTaskUidOk() (*UniversalIdProto, bool) {
	if o == nil || o.ArchiveTaskUid == nil {
		return nil, false
	}
	return o.ArchiveTaskUid, true
}

// HasArchiveTaskUid returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasArchiveTaskUid() bool {
	if o != nil && o.ArchiveTaskUid != nil {
		return true
	}

	return false
}

// SetArchiveTaskUid gets a reference to the given UniversalIdProto and assigns it to the ArchiveTaskUid field.
func (o *RetrieveArchiveTaskStateProto) SetArchiveTaskUid(v UniversalIdProto) {
	o.ArchiveTaskUid = &v
}

// GetBackupRunStartTimeUsecs returns the BackupRunStartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveArchiveTaskStateProto) GetBackupRunStartTimeUsecs() int64 {
	if o == nil || o.BackupRunStartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.BackupRunStartTimeUsecs.Get()
}

// GetBackupRunStartTimeUsecsOk returns a tuple with the BackupRunStartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveArchiveTaskStateProto) GetBackupRunStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BackupRunStartTimeUsecs.Get(), o.BackupRunStartTimeUsecs.IsSet()
}

// HasBackupRunStartTimeUsecs returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasBackupRunStartTimeUsecs() bool {
	if o != nil && o.BackupRunStartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetBackupRunStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the BackupRunStartTimeUsecs field.
func (o *RetrieveArchiveTaskStateProto) SetBackupRunStartTimeUsecs(v int64) {
	o.BackupRunStartTimeUsecs.Set(&v)
}
// SetBackupRunStartTimeUsecsNil sets the value for BackupRunStartTimeUsecs to be an explicit nil
func (o *RetrieveArchiveTaskStateProto) SetBackupRunStartTimeUsecsNil() {
	o.BackupRunStartTimeUsecs.Set(nil)
}

// UnsetBackupRunStartTimeUsecs ensures that no value is present for BackupRunStartTimeUsecs, not even an explicit nil
func (o *RetrieveArchiveTaskStateProto) UnsetBackupRunStartTimeUsecs() {
	o.BackupRunStartTimeUsecs.Unset()
}

// GetCancellationRequested returns the CancellationRequested field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveArchiveTaskStateProto) GetCancellationRequested() bool {
	if o == nil || o.CancellationRequested.Get() == nil {
		var ret bool
		return ret
	}
	return *o.CancellationRequested.Get()
}

// GetCancellationRequestedOk returns a tuple with the CancellationRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveArchiveTaskStateProto) GetCancellationRequestedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CancellationRequested.Get(), o.CancellationRequested.IsSet()
}

// HasCancellationRequested returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasCancellationRequested() bool {
	if o != nil && o.CancellationRequested.IsSet() {
		return true
	}

	return false
}

// SetCancellationRequested gets a reference to the given NullableBool and assigns it to the CancellationRequested field.
func (o *RetrieveArchiveTaskStateProto) SetCancellationRequested(v bool) {
	o.CancellationRequested.Set(&v)
}
// SetCancellationRequestedNil sets the value for CancellationRequested to be an explicit nil
func (o *RetrieveArchiveTaskStateProto) SetCancellationRequestedNil() {
	o.CancellationRequested.Set(nil)
}

// UnsetCancellationRequested ensures that no value is present for CancellationRequested, not even an explicit nil
func (o *RetrieveArchiveTaskStateProto) UnsetCancellationRequested() {
	o.CancellationRequested.Unset()
}

// GetDownloadFilesInfo returns the DownloadFilesInfo field value if set, zero value otherwise.
func (o *RetrieveArchiveTaskStateProto) GetDownloadFilesInfo() RetrieveArchiveTaskStateProtoDownloadFilesInfo {
	if o == nil || o.DownloadFilesInfo == nil {
		var ret RetrieveArchiveTaskStateProtoDownloadFilesInfo
		return ret
	}
	return *o.DownloadFilesInfo
}

// GetDownloadFilesInfoOk returns a tuple with the DownloadFilesInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveArchiveTaskStateProto) GetDownloadFilesInfoOk() (*RetrieveArchiveTaskStateProtoDownloadFilesInfo, bool) {
	if o == nil || o.DownloadFilesInfo == nil {
		return nil, false
	}
	return o.DownloadFilesInfo, true
}

// HasDownloadFilesInfo returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasDownloadFilesInfo() bool {
	if o != nil && o.DownloadFilesInfo != nil {
		return true
	}

	return false
}

// SetDownloadFilesInfo gets a reference to the given RetrieveArchiveTaskStateProtoDownloadFilesInfo and assigns it to the DownloadFilesInfo field.
func (o *RetrieveArchiveTaskStateProto) SetDownloadFilesInfo(v RetrieveArchiveTaskStateProtoDownloadFilesInfo) {
	o.DownloadFilesInfo = &v
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveArchiveTaskStateProto) GetEndTimeUsecs() int64 {
	if o == nil || o.EndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveArchiveTaskStateProto) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *RetrieveArchiveTaskStateProto) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *RetrieveArchiveTaskStateProto) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *RetrieveArchiveTaskStateProto) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetEntityVec returns the EntityVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveArchiveTaskStateProto) GetEntityVec() []EntityProto {
	if o == nil  {
		var ret []EntityProto
		return ret
	}
	return o.EntityVec
}

// GetEntityVecOk returns a tuple with the EntityVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveArchiveTaskStateProto) GetEntityVecOk() (*[]EntityProto, bool) {
	if o == nil || o.EntityVec == nil {
		return nil, false
	}
	return &o.EntityVec, true
}

// HasEntityVec returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasEntityVec() bool {
	if o != nil && o.EntityVec != nil {
		return true
	}

	return false
}

// SetEntityVec gets a reference to the given []EntityProto and assigns it to the EntityVec field.
func (o *RetrieveArchiveTaskStateProto) SetEntityVec(v []EntityProto) {
	o.EntityVec = v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *RetrieveArchiveTaskStateProto) GetError() ErrorProto {
	if o == nil || o.Error == nil {
		var ret ErrorProto
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveArchiveTaskStateProto) GetErrorOk() (*ErrorProto, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given ErrorProto and assigns it to the Error field.
func (o *RetrieveArchiveTaskStateProto) SetError(v ErrorProto) {
	o.Error = &v
}

// GetFullViewNameDEPRECATED returns the FullViewNameDEPRECATED field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveArchiveTaskStateProto) GetFullViewNameDEPRECATED() string {
	if o == nil || o.FullViewNameDEPRECATED.Get() == nil {
		var ret string
		return ret
	}
	return *o.FullViewNameDEPRECATED.Get()
}

// GetFullViewNameDEPRECATEDOk returns a tuple with the FullViewNameDEPRECATED field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveArchiveTaskStateProto) GetFullViewNameDEPRECATEDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FullViewNameDEPRECATED.Get(), o.FullViewNameDEPRECATED.IsSet()
}

// HasFullViewNameDEPRECATED returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasFullViewNameDEPRECATED() bool {
	if o != nil && o.FullViewNameDEPRECATED.IsSet() {
		return true
	}

	return false
}

// SetFullViewNameDEPRECATED gets a reference to the given NullableString and assigns it to the FullViewNameDEPRECATED field.
func (o *RetrieveArchiveTaskStateProto) SetFullViewNameDEPRECATED(v string) {
	o.FullViewNameDEPRECATED.Set(&v)
}
// SetFullViewNameDEPRECATEDNil sets the value for FullViewNameDEPRECATED to be an explicit nil
func (o *RetrieveArchiveTaskStateProto) SetFullViewNameDEPRECATEDNil() {
	o.FullViewNameDEPRECATED.Set(nil)
}

// UnsetFullViewNameDEPRECATED ensures that no value is present for FullViewNameDEPRECATED, not even an explicit nil
func (o *RetrieveArchiveTaskStateProto) UnsetFullViewNameDEPRECATED() {
	o.FullViewNameDEPRECATED.Unset()
}

// GetJobUid returns the JobUid field value if set, zero value otherwise.
func (o *RetrieveArchiveTaskStateProto) GetJobUid() UniversalIdProto {
	if o == nil || o.JobUid == nil {
		var ret UniversalIdProto
		return ret
	}
	return *o.JobUid
}

// GetJobUidOk returns a tuple with the JobUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveArchiveTaskStateProto) GetJobUidOk() (*UniversalIdProto, bool) {
	if o == nil || o.JobUid == nil {
		return nil, false
	}
	return o.JobUid, true
}

// HasJobUid returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasJobUid() bool {
	if o != nil && o.JobUid != nil {
		return true
	}

	return false
}

// SetJobUid gets a reference to the given UniversalIdProto and assigns it to the JobUid field.
func (o *RetrieveArchiveTaskStateProto) SetJobUid(v UniversalIdProto) {
	o.JobUid = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveArchiveTaskStateProto) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveArchiveTaskStateProto) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *RetrieveArchiveTaskStateProto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *RetrieveArchiveTaskStateProto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *RetrieveArchiveTaskStateProto) UnsetName() {
	o.Name.Unset()
}

// GetProgressMonitorTaskPath returns the ProgressMonitorTaskPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveArchiveTaskStateProto) GetProgressMonitorTaskPath() string {
	if o == nil || o.ProgressMonitorTaskPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProgressMonitorTaskPath.Get()
}

// GetProgressMonitorTaskPathOk returns a tuple with the ProgressMonitorTaskPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveArchiveTaskStateProto) GetProgressMonitorTaskPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProgressMonitorTaskPath.Get(), o.ProgressMonitorTaskPath.IsSet()
}

// HasProgressMonitorTaskPath returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasProgressMonitorTaskPath() bool {
	if o != nil && o.ProgressMonitorTaskPath.IsSet() {
		return true
	}

	return false
}

// SetProgressMonitorTaskPath gets a reference to the given NullableString and assigns it to the ProgressMonitorTaskPath field.
func (o *RetrieveArchiveTaskStateProto) SetProgressMonitorTaskPath(v string) {
	o.ProgressMonitorTaskPath.Set(&v)
}
// SetProgressMonitorTaskPathNil sets the value for ProgressMonitorTaskPath to be an explicit nil
func (o *RetrieveArchiveTaskStateProto) SetProgressMonitorTaskPathNil() {
	o.ProgressMonitorTaskPath.Set(nil)
}

// UnsetProgressMonitorTaskPath ensures that no value is present for ProgressMonitorTaskPath, not even an explicit nil
func (o *RetrieveArchiveTaskStateProto) UnsetProgressMonitorTaskPath() {
	o.ProgressMonitorTaskPath.Unset()
}

// GetRestoreArchiveFilesInfo returns the RestoreArchiveFilesInfo field value if set, zero value otherwise.
func (o *RetrieveArchiveTaskStateProto) GetRestoreArchiveFilesInfo() RetrieveArchiveTaskStateProtoDownloadFilesInfo {
	if o == nil || o.RestoreArchiveFilesInfo == nil {
		var ret RetrieveArchiveTaskStateProtoDownloadFilesInfo
		return ret
	}
	return *o.RestoreArchiveFilesInfo
}

// GetRestoreArchiveFilesInfoOk returns a tuple with the RestoreArchiveFilesInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveArchiveTaskStateProto) GetRestoreArchiveFilesInfoOk() (*RetrieveArchiveTaskStateProtoDownloadFilesInfo, bool) {
	if o == nil || o.RestoreArchiveFilesInfo == nil {
		return nil, false
	}
	return o.RestoreArchiveFilesInfo, true
}

// HasRestoreArchiveFilesInfo returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasRestoreArchiveFilesInfo() bool {
	if o != nil && o.RestoreArchiveFilesInfo != nil {
		return true
	}

	return false
}

// SetRestoreArchiveFilesInfo gets a reference to the given RetrieveArchiveTaskStateProtoDownloadFilesInfo and assigns it to the RestoreArchiveFilesInfo field.
func (o *RetrieveArchiveTaskStateProto) SetRestoreArchiveFilesInfo(v RetrieveArchiveTaskStateProtoDownloadFilesInfo) {
	o.RestoreArchiveFilesInfo = &v
}

// GetRestoreTaskId returns the RestoreTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveArchiveTaskStateProto) GetRestoreTaskId() int64 {
	if o == nil || o.RestoreTaskId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RestoreTaskId.Get()
}

// GetRestoreTaskIdOk returns a tuple with the RestoreTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveArchiveTaskStateProto) GetRestoreTaskIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RestoreTaskId.Get(), o.RestoreTaskId.IsSet()
}

// HasRestoreTaskId returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasRestoreTaskId() bool {
	if o != nil && o.RestoreTaskId.IsSet() {
		return true
	}

	return false
}

// SetRestoreTaskId gets a reference to the given NullableInt64 and assigns it to the RestoreTaskId field.
func (o *RetrieveArchiveTaskStateProto) SetRestoreTaskId(v int64) {
	o.RestoreTaskId.Set(&v)
}
// SetRestoreTaskIdNil sets the value for RestoreTaskId to be an explicit nil
func (o *RetrieveArchiveTaskStateProto) SetRestoreTaskIdNil() {
	o.RestoreTaskId.Set(nil)
}

// UnsetRestoreTaskId ensures that no value is present for RestoreTaskId, not even an explicit nil
func (o *RetrieveArchiveTaskStateProto) UnsetRestoreTaskId() {
	o.RestoreTaskId.Unset()
}

// GetRetrievalInfo returns the RetrievalInfo field value if set, zero value otherwise.
func (o *RetrieveArchiveTaskStateProto) GetRetrievalInfo() RetrieveArchiveInfo {
	if o == nil || o.RetrievalInfo == nil {
		var ret RetrieveArchiveInfo
		return ret
	}
	return *o.RetrievalInfo
}

// GetRetrievalInfoOk returns a tuple with the RetrievalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveArchiveTaskStateProto) GetRetrievalInfoOk() (*RetrieveArchiveInfo, bool) {
	if o == nil || o.RetrievalInfo == nil {
		return nil, false
	}
	return o.RetrievalInfo, true
}

// HasRetrievalInfo returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasRetrievalInfo() bool {
	if o != nil && o.RetrievalInfo != nil {
		return true
	}

	return false
}

// SetRetrievalInfo gets a reference to the given RetrieveArchiveInfo and assigns it to the RetrievalInfo field.
func (o *RetrieveArchiveTaskStateProto) SetRetrievalInfo(v RetrieveArchiveInfo) {
	o.RetrievalInfo = &v
}

// GetStartTimeUsecs returns the StartTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveArchiveTaskStateProto) GetStartTimeUsecs() int64 {
	if o == nil || o.StartTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StartTimeUsecs.Get()
}

// GetStartTimeUsecsOk returns a tuple with the StartTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveArchiveTaskStateProto) GetStartTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartTimeUsecs.Get(), o.StartTimeUsecs.IsSet()
}

// HasStartTimeUsecs returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasStartTimeUsecs() bool {
	if o != nil && o.StartTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetStartTimeUsecs gets a reference to the given NullableInt64 and assigns it to the StartTimeUsecs field.
func (o *RetrieveArchiveTaskStateProto) SetStartTimeUsecs(v int64) {
	o.StartTimeUsecs.Set(&v)
}
// SetStartTimeUsecsNil sets the value for StartTimeUsecs to be an explicit nil
func (o *RetrieveArchiveTaskStateProto) SetStartTimeUsecsNil() {
	o.StartTimeUsecs.Set(nil)
}

// UnsetStartTimeUsecs ensures that no value is present for StartTimeUsecs, not even an explicit nil
func (o *RetrieveArchiveTaskStateProto) UnsetStartTimeUsecs() {
	o.StartTimeUsecs.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveArchiveTaskStateProto) GetStatus() int32 {
	if o == nil || o.Status.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveArchiveTaskStateProto) GetStatusOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableInt32 and assigns it to the Status field.
func (o *RetrieveArchiveTaskStateProto) SetStatus(v int32) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *RetrieveArchiveTaskStateProto) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *RetrieveArchiveTaskStateProto) UnsetStatus() {
	o.Status.Unset()
}

// GetTaskUid returns the TaskUid field value if set, zero value otherwise.
func (o *RetrieveArchiveTaskStateProto) GetTaskUid() UniversalIdProto {
	if o == nil || o.TaskUid == nil {
		var ret UniversalIdProto
		return ret
	}
	return *o.TaskUid
}

// GetTaskUidOk returns a tuple with the TaskUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveArchiveTaskStateProto) GetTaskUidOk() (*UniversalIdProto, bool) {
	if o == nil || o.TaskUid == nil {
		return nil, false
	}
	return o.TaskUid, true
}

// HasTaskUid returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasTaskUid() bool {
	if o != nil && o.TaskUid != nil {
		return true
	}

	return false
}

// SetTaskUid gets a reference to the given UniversalIdProto and assigns it to the TaskUid field.
func (o *RetrieveArchiveTaskStateProto) SetTaskUid(v UniversalIdProto) {
	o.TaskUid = &v
}

// GetUser returns the User field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveArchiveTaskStateProto) GetUser() string {
	if o == nil || o.User.Get() == nil {
		var ret string
		return ret
	}
	return *o.User.Get()
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveArchiveTaskStateProto) GetUserOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.User.Get(), o.User.IsSet()
}

// HasUser returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasUser() bool {
	if o != nil && o.User.IsSet() {
		return true
	}

	return false
}

// SetUser gets a reference to the given NullableString and assigns it to the User field.
func (o *RetrieveArchiveTaskStateProto) SetUser(v string) {
	o.User.Set(&v)
}
// SetUserNil sets the value for User to be an explicit nil
func (o *RetrieveArchiveTaskStateProto) SetUserNil() {
	o.User.Set(nil)
}

// UnsetUser ensures that no value is present for User, not even an explicit nil
func (o *RetrieveArchiveTaskStateProto) UnsetUser() {
	o.User.Unset()
}

// GetVaultRestoreParams returns the VaultRestoreParams field value if set, zero value otherwise.
func (o *RetrieveArchiveTaskStateProto) GetVaultRestoreParams() VaultParamsRestoreParams {
	if o == nil || o.VaultRestoreParams == nil {
		var ret VaultParamsRestoreParams
		return ret
	}
	return *o.VaultRestoreParams
}

// GetVaultRestoreParamsOk returns a tuple with the VaultRestoreParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveArchiveTaskStateProto) GetVaultRestoreParamsOk() (*VaultParamsRestoreParams, bool) {
	if o == nil || o.VaultRestoreParams == nil {
		return nil, false
	}
	return o.VaultRestoreParams, true
}

// HasVaultRestoreParams returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasVaultRestoreParams() bool {
	if o != nil && o.VaultRestoreParams != nil {
		return true
	}

	return false
}

// SetVaultRestoreParams gets a reference to the given VaultParamsRestoreParams and assigns it to the VaultRestoreParams field.
func (o *RetrieveArchiveTaskStateProto) SetVaultRestoreParams(v VaultParamsRestoreParams) {
	o.VaultRestoreParams = &v
}

// GetViewBoxId returns the ViewBoxId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveArchiveTaskStateProto) GetViewBoxId() int64 {
	if o == nil || o.ViewBoxId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ViewBoxId.Get()
}

// GetViewBoxIdOk returns a tuple with the ViewBoxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveArchiveTaskStateProto) GetViewBoxIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewBoxId.Get(), o.ViewBoxId.IsSet()
}

// HasViewBoxId returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasViewBoxId() bool {
	if o != nil && o.ViewBoxId.IsSet() {
		return true
	}

	return false
}

// SetViewBoxId gets a reference to the given NullableInt64 and assigns it to the ViewBoxId field.
func (o *RetrieveArchiveTaskStateProto) SetViewBoxId(v int64) {
	o.ViewBoxId.Set(&v)
}
// SetViewBoxIdNil sets the value for ViewBoxId to be an explicit nil
func (o *RetrieveArchiveTaskStateProto) SetViewBoxIdNil() {
	o.ViewBoxId.Set(nil)
}

// UnsetViewBoxId ensures that no value is present for ViewBoxId, not even an explicit nil
func (o *RetrieveArchiveTaskStateProto) UnsetViewBoxId() {
	o.ViewBoxId.Unset()
}

// GetViewNameDEPRECATED returns the ViewNameDEPRECATED field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveArchiveTaskStateProto) GetViewNameDEPRECATED() string {
	if o == nil || o.ViewNameDEPRECATED.Get() == nil {
		var ret string
		return ret
	}
	return *o.ViewNameDEPRECATED.Get()
}

// GetViewNameDEPRECATEDOk returns a tuple with the ViewNameDEPRECATED field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveArchiveTaskStateProto) GetViewNameDEPRECATEDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewNameDEPRECATED.Get(), o.ViewNameDEPRECATED.IsSet()
}

// HasViewNameDEPRECATED returns a boolean if a field has been set.
func (o *RetrieveArchiveTaskStateProto) HasViewNameDEPRECATED() bool {
	if o != nil && o.ViewNameDEPRECATED.IsSet() {
		return true
	}

	return false
}

// SetViewNameDEPRECATED gets a reference to the given NullableString and assigns it to the ViewNameDEPRECATED field.
func (o *RetrieveArchiveTaskStateProto) SetViewNameDEPRECATED(v string) {
	o.ViewNameDEPRECATED.Set(&v)
}
// SetViewNameDEPRECATEDNil sets the value for ViewNameDEPRECATED to be an explicit nil
func (o *RetrieveArchiveTaskStateProto) SetViewNameDEPRECATEDNil() {
	o.ViewNameDEPRECATED.Set(nil)
}

// UnsetViewNameDEPRECATED ensures that no value is present for ViewNameDEPRECATED, not even an explicit nil
func (o *RetrieveArchiveTaskStateProto) UnsetViewNameDEPRECATED() {
	o.ViewNameDEPRECATED.Unset()
}

func (o RetrieveArchiveTaskStateProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ArchivalTarget != nil {
		toSerialize["archivalTarget"] = o.ArchivalTarget
	}
	if o.ArchiveTaskUid != nil {
		toSerialize["archiveTaskUid"] = o.ArchiveTaskUid
	}
	if o.BackupRunStartTimeUsecs.IsSet() {
		toSerialize["backupRunStartTimeUsecs"] = o.BackupRunStartTimeUsecs.Get()
	}
	if o.CancellationRequested.IsSet() {
		toSerialize["cancellationRequested"] = o.CancellationRequested.Get()
	}
	if o.DownloadFilesInfo != nil {
		toSerialize["downloadFilesInfo"] = o.DownloadFilesInfo
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.EntityVec != nil {
		toSerialize["entityVec"] = o.EntityVec
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.FullViewNameDEPRECATED.IsSet() {
		toSerialize["fullViewName_DEPRECATED"] = o.FullViewNameDEPRECATED.Get()
	}
	if o.JobUid != nil {
		toSerialize["jobUid"] = o.JobUid
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ProgressMonitorTaskPath.IsSet() {
		toSerialize["progressMonitorTaskPath"] = o.ProgressMonitorTaskPath.Get()
	}
	if o.RestoreArchiveFilesInfo != nil {
		toSerialize["restoreArchiveFilesInfo"] = o.RestoreArchiveFilesInfo
	}
	if o.RestoreTaskId.IsSet() {
		toSerialize["restoreTaskId"] = o.RestoreTaskId.Get()
	}
	if o.RetrievalInfo != nil {
		toSerialize["retrievalInfo"] = o.RetrievalInfo
	}
	if o.StartTimeUsecs.IsSet() {
		toSerialize["startTimeUsecs"] = o.StartTimeUsecs.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.TaskUid != nil {
		toSerialize["taskUid"] = o.TaskUid
	}
	if o.User.IsSet() {
		toSerialize["user"] = o.User.Get()
	}
	if o.VaultRestoreParams != nil {
		toSerialize["vaultRestoreParams"] = o.VaultRestoreParams
	}
	if o.ViewBoxId.IsSet() {
		toSerialize["viewBoxId"] = o.ViewBoxId.Get()
	}
	if o.ViewNameDEPRECATED.IsSet() {
		toSerialize["viewName_DEPRECATED"] = o.ViewNameDEPRECATED.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRetrieveArchiveTaskStateProto struct {
	value *RetrieveArchiveTaskStateProto
	isSet bool
}

func (v NullableRetrieveArchiveTaskStateProto) Get() *RetrieveArchiveTaskStateProto {
	return v.value
}

func (v *NullableRetrieveArchiveTaskStateProto) Set(val *RetrieveArchiveTaskStateProto) {
	v.value = val
	v.isSet = true
}

func (v NullableRetrieveArchiveTaskStateProto) IsSet() bool {
	return v.isSet
}

func (v *NullableRetrieveArchiveTaskStateProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetrieveArchiveTaskStateProto(val *RetrieveArchiveTaskStateProto) *NullableRetrieveArchiveTaskStateProto {
	return &NullableRetrieveArchiveTaskStateProto{value: val, isSet: true}
}

func (v NullableRetrieveArchiveTaskStateProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetrieveArchiveTaskStateProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


