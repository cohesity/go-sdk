/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// GetRegistrationInfoResponse Specifies the registration, protection and permission information of all or a subset of the registered Protection Source Trees or Views on the Cohesity Cluster.
type GetRegistrationInfoResponse struct {
	// Specifies the registration, protection and permission information of either all or a subset of registered Protection Sources matching the filter parameters. overrideDescription: true
	RootNodes []ProtectionSourceTreeInfo `json:"rootNodes,omitempty"`
	// Specifies the sum of all the stats of protection of Protection Sources and views selected by the query parameters.
	Stats NullableProtectionSummary `json:"stats,omitempty"`
	// Specifies the breakdown of the stats by environment overrideDescription: true
	StatsByEnv []ProtectionSummaryByEnv `json:"statsByEnv,omitempty"`
}

// NewGetRegistrationInfoResponse instantiates a new GetRegistrationInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRegistrationInfoResponse() *GetRegistrationInfoResponse {
	this := GetRegistrationInfoResponse{}
	return &this
}

// NewGetRegistrationInfoResponseWithDefaults instantiates a new GetRegistrationInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRegistrationInfoResponseWithDefaults() *GetRegistrationInfoResponse {
	this := GetRegistrationInfoResponse{}
	return &this
}

// GetRootNodes returns the RootNodes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetRegistrationInfoResponse) GetRootNodes() []ProtectionSourceTreeInfo {
	if o == nil  {
		var ret []ProtectionSourceTreeInfo
		return ret
	}
	return o.RootNodes
}

// GetRootNodesOk returns a tuple with the RootNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetRegistrationInfoResponse) GetRootNodesOk() (*[]ProtectionSourceTreeInfo, bool) {
	if o == nil || o.RootNodes == nil {
		return nil, false
	}
	return &o.RootNodes, true
}

// HasRootNodes returns a boolean if a field has been set.
func (o *GetRegistrationInfoResponse) HasRootNodes() bool {
	if o != nil && o.RootNodes != nil {
		return true
	}

	return false
}

// SetRootNodes gets a reference to the given []ProtectionSourceTreeInfo and assigns it to the RootNodes field.
func (o *GetRegistrationInfoResponse) SetRootNodes(v []ProtectionSourceTreeInfo) {
	o.RootNodes = v
}

// GetStats returns the Stats field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetRegistrationInfoResponse) GetStats() ProtectionSummary {
	if o == nil || o.Stats.Get() == nil {
		var ret ProtectionSummary
		return ret
	}
	return *o.Stats.Get()
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetRegistrationInfoResponse) GetStatsOk() (*ProtectionSummary, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Stats.Get(), o.Stats.IsSet()
}

// HasStats returns a boolean if a field has been set.
func (o *GetRegistrationInfoResponse) HasStats() bool {
	if o != nil && o.Stats.IsSet() {
		return true
	}

	return false
}

// SetStats gets a reference to the given NullableProtectionSummary and assigns it to the Stats field.
func (o *GetRegistrationInfoResponse) SetStats(v ProtectionSummary) {
	o.Stats.Set(&v)
}
// SetStatsNil sets the value for Stats to be an explicit nil
func (o *GetRegistrationInfoResponse) SetStatsNil() {
	o.Stats.Set(nil)
}

// UnsetStats ensures that no value is present for Stats, not even an explicit nil
func (o *GetRegistrationInfoResponse) UnsetStats() {
	o.Stats.Unset()
}

// GetStatsByEnv returns the StatsByEnv field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetRegistrationInfoResponse) GetStatsByEnv() []ProtectionSummaryByEnv {
	if o == nil  {
		var ret []ProtectionSummaryByEnv
		return ret
	}
	return o.StatsByEnv
}

// GetStatsByEnvOk returns a tuple with the StatsByEnv field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetRegistrationInfoResponse) GetStatsByEnvOk() (*[]ProtectionSummaryByEnv, bool) {
	if o == nil || o.StatsByEnv == nil {
		return nil, false
	}
	return &o.StatsByEnv, true
}

// HasStatsByEnv returns a boolean if a field has been set.
func (o *GetRegistrationInfoResponse) HasStatsByEnv() bool {
	if o != nil && o.StatsByEnv != nil {
		return true
	}

	return false
}

// SetStatsByEnv gets a reference to the given []ProtectionSummaryByEnv and assigns it to the StatsByEnv field.
func (o *GetRegistrationInfoResponse) SetStatsByEnv(v []ProtectionSummaryByEnv) {
	o.StatsByEnv = v
}

func (o GetRegistrationInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RootNodes != nil {
		toSerialize["rootNodes"] = o.RootNodes
	}
	if o.Stats.IsSet() {
		toSerialize["stats"] = o.Stats.Get()
	}
	if o.StatsByEnv != nil {
		toSerialize["statsByEnv"] = o.StatsByEnv
	}
	return json.Marshal(toSerialize)
}

type NullableGetRegistrationInfoResponse struct {
	value *GetRegistrationInfoResponse
	isSet bool
}

func (v NullableGetRegistrationInfoResponse) Get() *GetRegistrationInfoResponse {
	return v.value
}

func (v *NullableGetRegistrationInfoResponse) Set(val *GetRegistrationInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRegistrationInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRegistrationInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRegistrationInfoResponse(val *GetRegistrationInfoResponse) *NullableGetRegistrationInfoResponse {
	return &NullableGetRegistrationInfoResponse{value: val, isSet: true}
}

func (v NullableGetRegistrationInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRegistrationInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


