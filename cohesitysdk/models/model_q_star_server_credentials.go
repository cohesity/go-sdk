/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// QStarServerCredentials Specifies the server credentials to connect to a QStar service to manage the media Vault.
type QStarServerCredentials struct {
	// Specifies the IP address or DNS name of the server where QStar service is running.
	Host NullableString `json:"host,omitempty"`
	// Array of Integral Volume Names.  Specifies a list of existing Integral Volume names available on the QStar server for storing objects.
	IntegralVolumeNames []string `json:"integralVolumeNames,omitempty"`
	// Specifies the password used to access the QStar host.
	Password NullableString `json:"password,omitempty"`
	// Specifies the listening port where QStar WEB API service is running.
	Port NullableInt32 `json:"port,omitempty"`
	// Specifies the sharing protocol type used by QStar to mount the integral volume. See the Cohesity online help for the recommended protocol for your environment.
	ShareType NullableString `json:"shareType,omitempty"`
	// Specifies whether to use http or https to connect to the service. If true, a secure connection (https) is used.
	UseHttps NullableBool `json:"useHttps,omitempty"`
	// Specifies the account name used to access the QStar host.
	Username NullableString `json:"username,omitempty"`
}

// NewQStarServerCredentials instantiates a new QStarServerCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQStarServerCredentials() *QStarServerCredentials {
	this := QStarServerCredentials{}
	return &this
}

// NewQStarServerCredentialsWithDefaults instantiates a new QStarServerCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQStarServerCredentialsWithDefaults() *QStarServerCredentials {
	this := QStarServerCredentials{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QStarServerCredentials) GetHost() string {
	if o == nil || o.Host.Get() == nil {
		var ret string
		return ret
	}
	return *o.Host.Get()
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QStarServerCredentials) GetHostOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Host.Get(), o.Host.IsSet()
}

// HasHost returns a boolean if a field has been set.
func (o *QStarServerCredentials) HasHost() bool {
	if o != nil && o.Host.IsSet() {
		return true
	}

	return false
}

// SetHost gets a reference to the given NullableString and assigns it to the Host field.
func (o *QStarServerCredentials) SetHost(v string) {
	o.Host.Set(&v)
}
// SetHostNil sets the value for Host to be an explicit nil
func (o *QStarServerCredentials) SetHostNil() {
	o.Host.Set(nil)
}

// UnsetHost ensures that no value is present for Host, not even an explicit nil
func (o *QStarServerCredentials) UnsetHost() {
	o.Host.Unset()
}

// GetIntegralVolumeNames returns the IntegralVolumeNames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QStarServerCredentials) GetIntegralVolumeNames() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.IntegralVolumeNames
}

// GetIntegralVolumeNamesOk returns a tuple with the IntegralVolumeNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QStarServerCredentials) GetIntegralVolumeNamesOk() (*[]string, bool) {
	if o == nil || o.IntegralVolumeNames == nil {
		return nil, false
	}
	return &o.IntegralVolumeNames, true
}

// HasIntegralVolumeNames returns a boolean if a field has been set.
func (o *QStarServerCredentials) HasIntegralVolumeNames() bool {
	if o != nil && o.IntegralVolumeNames != nil {
		return true
	}

	return false
}

// SetIntegralVolumeNames gets a reference to the given []string and assigns it to the IntegralVolumeNames field.
func (o *QStarServerCredentials) SetIntegralVolumeNames(v []string) {
	o.IntegralVolumeNames = v
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QStarServerCredentials) GetPassword() string {
	if o == nil || o.Password.Get() == nil {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QStarServerCredentials) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *QStarServerCredentials) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *QStarServerCredentials) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *QStarServerCredentials) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *QStarServerCredentials) UnsetPassword() {
	o.Password.Unset()
}

// GetPort returns the Port field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QStarServerCredentials) GetPort() int32 {
	if o == nil || o.Port.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Port.Get()
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QStarServerCredentials) GetPortOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Port.Get(), o.Port.IsSet()
}

// HasPort returns a boolean if a field has been set.
func (o *QStarServerCredentials) HasPort() bool {
	if o != nil && o.Port.IsSet() {
		return true
	}

	return false
}

// SetPort gets a reference to the given NullableInt32 and assigns it to the Port field.
func (o *QStarServerCredentials) SetPort(v int32) {
	o.Port.Set(&v)
}
// SetPortNil sets the value for Port to be an explicit nil
func (o *QStarServerCredentials) SetPortNil() {
	o.Port.Set(nil)
}

// UnsetPort ensures that no value is present for Port, not even an explicit nil
func (o *QStarServerCredentials) UnsetPort() {
	o.Port.Unset()
}

// GetShareType returns the ShareType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QStarServerCredentials) GetShareType() string {
	if o == nil || o.ShareType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ShareType.Get()
}

// GetShareTypeOk returns a tuple with the ShareType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QStarServerCredentials) GetShareTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ShareType.Get(), o.ShareType.IsSet()
}

// HasShareType returns a boolean if a field has been set.
func (o *QStarServerCredentials) HasShareType() bool {
	if o != nil && o.ShareType.IsSet() {
		return true
	}

	return false
}

// SetShareType gets a reference to the given NullableString and assigns it to the ShareType field.
func (o *QStarServerCredentials) SetShareType(v string) {
	o.ShareType.Set(&v)
}
// SetShareTypeNil sets the value for ShareType to be an explicit nil
func (o *QStarServerCredentials) SetShareTypeNil() {
	o.ShareType.Set(nil)
}

// UnsetShareType ensures that no value is present for ShareType, not even an explicit nil
func (o *QStarServerCredentials) UnsetShareType() {
	o.ShareType.Unset()
}

// GetUseHttps returns the UseHttps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QStarServerCredentials) GetUseHttps() bool {
	if o == nil || o.UseHttps.Get() == nil {
		var ret bool
		return ret
	}
	return *o.UseHttps.Get()
}

// GetUseHttpsOk returns a tuple with the UseHttps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QStarServerCredentials) GetUseHttpsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UseHttps.Get(), o.UseHttps.IsSet()
}

// HasUseHttps returns a boolean if a field has been set.
func (o *QStarServerCredentials) HasUseHttps() bool {
	if o != nil && o.UseHttps.IsSet() {
		return true
	}

	return false
}

// SetUseHttps gets a reference to the given NullableBool and assigns it to the UseHttps field.
func (o *QStarServerCredentials) SetUseHttps(v bool) {
	o.UseHttps.Set(&v)
}
// SetUseHttpsNil sets the value for UseHttps to be an explicit nil
func (o *QStarServerCredentials) SetUseHttpsNil() {
	o.UseHttps.Set(nil)
}

// UnsetUseHttps ensures that no value is present for UseHttps, not even an explicit nil
func (o *QStarServerCredentials) UnsetUseHttps() {
	o.UseHttps.Unset()
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QStarServerCredentials) GetUsername() string {
	if o == nil || o.Username.Get() == nil {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QStarServerCredentials) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *QStarServerCredentials) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *QStarServerCredentials) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *QStarServerCredentials) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *QStarServerCredentials) UnsetUsername() {
	o.Username.Unset()
}

func (o QStarServerCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Host.IsSet() {
		toSerialize["host"] = o.Host.Get()
	}
	if o.IntegralVolumeNames != nil {
		toSerialize["integralVolumeNames"] = o.IntegralVolumeNames
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if o.Port.IsSet() {
		toSerialize["port"] = o.Port.Get()
	}
	if o.ShareType.IsSet() {
		toSerialize["shareType"] = o.ShareType.Get()
	}
	if o.UseHttps.IsSet() {
		toSerialize["useHttps"] = o.UseHttps.Get()
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableQStarServerCredentials struct {
	value *QStarServerCredentials
	isSet bool
}

func (v NullableQStarServerCredentials) Get() *QStarServerCredentials {
	return v.value
}

func (v *NullableQStarServerCredentials) Set(val *QStarServerCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableQStarServerCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableQStarServerCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQStarServerCredentials(val *QStarServerCredentials) *NullableQStarServerCredentials {
	return &NullableQStarServerCredentials{value: val, isSet: true}
}

func (v NullableQStarServerCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQStarServerCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


