/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// GoogleAccountInfo Google Account Information of a Helios BaaS user.
type GoogleAccountInfo struct {
	// Specifies the Account Id assigned by Google.
	AccountId NullableString `json:"accountId,omitempty"`
	// Specifies the User Id assigned by Google.
	UserId NullableString `json:"userId,omitempty"`
}

// NewGoogleAccountInfo instantiates a new GoogleAccountInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoogleAccountInfo() *GoogleAccountInfo {
	this := GoogleAccountInfo{}
	return &this
}

// NewGoogleAccountInfoWithDefaults instantiates a new GoogleAccountInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleAccountInfoWithDefaults() *GoogleAccountInfo {
	this := GoogleAccountInfo{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GoogleAccountInfo) GetAccountId() string {
	if o == nil || o.AccountId.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GoogleAccountInfo) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *GoogleAccountInfo) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *GoogleAccountInfo) SetAccountId(v string) {
	o.AccountId.Set(&v)
}
// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *GoogleAccountInfo) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *GoogleAccountInfo) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GoogleAccountInfo) GetUserId() string {
	if o == nil || o.UserId.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GoogleAccountInfo) GetUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *GoogleAccountInfo) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *GoogleAccountInfo) SetUserId(v string) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *GoogleAccountInfo) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *GoogleAccountInfo) UnsetUserId() {
	o.UserId.Unset()
}

func (o GoogleAccountInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId.IsSet() {
		toSerialize["accountId"] = o.AccountId.Get()
	}
	if o.UserId.IsSet() {
		toSerialize["userId"] = o.UserId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGoogleAccountInfo struct {
	value *GoogleAccountInfo
	isSet bool
}

func (v NullableGoogleAccountInfo) Get() *GoogleAccountInfo {
	return v.value
}

func (v *NullableGoogleAccountInfo) Set(val *GoogleAccountInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableGoogleAccountInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableGoogleAccountInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoogleAccountInfo(val *GoogleAccountInfo) *NullableGoogleAccountInfo {
	return &NullableGoogleAccountInfo{value: val, isSet: true}
}

func (v NullableGoogleAccountInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoogleAccountInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


