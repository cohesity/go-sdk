/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// RestoreSiteParamsSiteOwnerDrive struct for RestoreSiteParamsSiteOwnerDrive
type RestoreSiteParamsSiteOwnerDrive struct {
	// Specify if the entire drive is to be restored. This field should be false if restore_item_vec size > 0.
	IsEntireDriveRequired NullableBool `json:"isEntireDriveRequired,omitempty"`
	// Id of the drive whose items are being restored.
	RestoreDriveId NullableString `json:"restoreDriveId,omitempty"`
	// Specifies the name of the drive whos items are being restored. NOTE: For restore either the drive Id or the name must be populated.
	RestoreDriveName NullableString `json:"restoreDriveName,omitempty"`
	// List of drive paths that need to be restored.
	RestorePathVec []RestoreSiteParamsDriveItem `json:"restorePathVec,omitempty"`
}

// NewRestoreSiteParamsSiteOwnerDrive instantiates a new RestoreSiteParamsSiteOwnerDrive object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreSiteParamsSiteOwnerDrive() *RestoreSiteParamsSiteOwnerDrive {
	this := RestoreSiteParamsSiteOwnerDrive{}
	return &this
}

// NewRestoreSiteParamsSiteOwnerDriveWithDefaults instantiates a new RestoreSiteParamsSiteOwnerDrive object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreSiteParamsSiteOwnerDriveWithDefaults() *RestoreSiteParamsSiteOwnerDrive {
	this := RestoreSiteParamsSiteOwnerDrive{}
	return &this
}

// GetIsEntireDriveRequired returns the IsEntireDriveRequired field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreSiteParamsSiteOwnerDrive) GetIsEntireDriveRequired() bool {
	if o == nil || o.IsEntireDriveRequired.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsEntireDriveRequired.Get()
}

// GetIsEntireDriveRequiredOk returns a tuple with the IsEntireDriveRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreSiteParamsSiteOwnerDrive) GetIsEntireDriveRequiredOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsEntireDriveRequired.Get(), o.IsEntireDriveRequired.IsSet()
}

// HasIsEntireDriveRequired returns a boolean if a field has been set.
func (o *RestoreSiteParamsSiteOwnerDrive) HasIsEntireDriveRequired() bool {
	if o != nil && o.IsEntireDriveRequired.IsSet() {
		return true
	}

	return false
}

// SetIsEntireDriveRequired gets a reference to the given NullableBool and assigns it to the IsEntireDriveRequired field.
func (o *RestoreSiteParamsSiteOwnerDrive) SetIsEntireDriveRequired(v bool) {
	o.IsEntireDriveRequired.Set(&v)
}
// SetIsEntireDriveRequiredNil sets the value for IsEntireDriveRequired to be an explicit nil
func (o *RestoreSiteParamsSiteOwnerDrive) SetIsEntireDriveRequiredNil() {
	o.IsEntireDriveRequired.Set(nil)
}

// UnsetIsEntireDriveRequired ensures that no value is present for IsEntireDriveRequired, not even an explicit nil
func (o *RestoreSiteParamsSiteOwnerDrive) UnsetIsEntireDriveRequired() {
	o.IsEntireDriveRequired.Unset()
}

// GetRestoreDriveId returns the RestoreDriveId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreSiteParamsSiteOwnerDrive) GetRestoreDriveId() string {
	if o == nil || o.RestoreDriveId.Get() == nil {
		var ret string
		return ret
	}
	return *o.RestoreDriveId.Get()
}

// GetRestoreDriveIdOk returns a tuple with the RestoreDriveId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreSiteParamsSiteOwnerDrive) GetRestoreDriveIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RestoreDriveId.Get(), o.RestoreDriveId.IsSet()
}

// HasRestoreDriveId returns a boolean if a field has been set.
func (o *RestoreSiteParamsSiteOwnerDrive) HasRestoreDriveId() bool {
	if o != nil && o.RestoreDriveId.IsSet() {
		return true
	}

	return false
}

// SetRestoreDriveId gets a reference to the given NullableString and assigns it to the RestoreDriveId field.
func (o *RestoreSiteParamsSiteOwnerDrive) SetRestoreDriveId(v string) {
	o.RestoreDriveId.Set(&v)
}
// SetRestoreDriveIdNil sets the value for RestoreDriveId to be an explicit nil
func (o *RestoreSiteParamsSiteOwnerDrive) SetRestoreDriveIdNil() {
	o.RestoreDriveId.Set(nil)
}

// UnsetRestoreDriveId ensures that no value is present for RestoreDriveId, not even an explicit nil
func (o *RestoreSiteParamsSiteOwnerDrive) UnsetRestoreDriveId() {
	o.RestoreDriveId.Unset()
}

// GetRestoreDriveName returns the RestoreDriveName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreSiteParamsSiteOwnerDrive) GetRestoreDriveName() string {
	if o == nil || o.RestoreDriveName.Get() == nil {
		var ret string
		return ret
	}
	return *o.RestoreDriveName.Get()
}

// GetRestoreDriveNameOk returns a tuple with the RestoreDriveName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreSiteParamsSiteOwnerDrive) GetRestoreDriveNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RestoreDriveName.Get(), o.RestoreDriveName.IsSet()
}

// HasRestoreDriveName returns a boolean if a field has been set.
func (o *RestoreSiteParamsSiteOwnerDrive) HasRestoreDriveName() bool {
	if o != nil && o.RestoreDriveName.IsSet() {
		return true
	}

	return false
}

// SetRestoreDriveName gets a reference to the given NullableString and assigns it to the RestoreDriveName field.
func (o *RestoreSiteParamsSiteOwnerDrive) SetRestoreDriveName(v string) {
	o.RestoreDriveName.Set(&v)
}
// SetRestoreDriveNameNil sets the value for RestoreDriveName to be an explicit nil
func (o *RestoreSiteParamsSiteOwnerDrive) SetRestoreDriveNameNil() {
	o.RestoreDriveName.Set(nil)
}

// UnsetRestoreDriveName ensures that no value is present for RestoreDriveName, not even an explicit nil
func (o *RestoreSiteParamsSiteOwnerDrive) UnsetRestoreDriveName() {
	o.RestoreDriveName.Unset()
}

// GetRestorePathVec returns the RestorePathVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreSiteParamsSiteOwnerDrive) GetRestorePathVec() []RestoreSiteParamsDriveItem {
	if o == nil  {
		var ret []RestoreSiteParamsDriveItem
		return ret
	}
	return o.RestorePathVec
}

// GetRestorePathVecOk returns a tuple with the RestorePathVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreSiteParamsSiteOwnerDrive) GetRestorePathVecOk() (*[]RestoreSiteParamsDriveItem, bool) {
	if o == nil || o.RestorePathVec == nil {
		return nil, false
	}
	return &o.RestorePathVec, true
}

// HasRestorePathVec returns a boolean if a field has been set.
func (o *RestoreSiteParamsSiteOwnerDrive) HasRestorePathVec() bool {
	if o != nil && o.RestorePathVec != nil {
		return true
	}

	return false
}

// SetRestorePathVec gets a reference to the given []RestoreSiteParamsDriveItem and assigns it to the RestorePathVec field.
func (o *RestoreSiteParamsSiteOwnerDrive) SetRestorePathVec(v []RestoreSiteParamsDriveItem) {
	o.RestorePathVec = v
}

func (o RestoreSiteParamsSiteOwnerDrive) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsEntireDriveRequired.IsSet() {
		toSerialize["isEntireDriveRequired"] = o.IsEntireDriveRequired.Get()
	}
	if o.RestoreDriveId.IsSet() {
		toSerialize["restoreDriveId"] = o.RestoreDriveId.Get()
	}
	if o.RestoreDriveName.IsSet() {
		toSerialize["restoreDriveName"] = o.RestoreDriveName.Get()
	}
	if o.RestorePathVec != nil {
		toSerialize["restorePathVec"] = o.RestorePathVec
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreSiteParamsSiteOwnerDrive struct {
	value *RestoreSiteParamsSiteOwnerDrive
	isSet bool
}

func (v NullableRestoreSiteParamsSiteOwnerDrive) Get() *RestoreSiteParamsSiteOwnerDrive {
	return v.value
}

func (v *NullableRestoreSiteParamsSiteOwnerDrive) Set(val *RestoreSiteParamsSiteOwnerDrive) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreSiteParamsSiteOwnerDrive) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreSiteParamsSiteOwnerDrive) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreSiteParamsSiteOwnerDrive(val *RestoreSiteParamsSiteOwnerDrive) *NullableRestoreSiteParamsSiteOwnerDrive {
	return &NullableRestoreSiteParamsSiteOwnerDrive{value: val, isSet: true}
}

func (v NullableRestoreSiteParamsSiteOwnerDrive) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreSiteParamsSiteOwnerDrive) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


