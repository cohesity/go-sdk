/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ViewUserQuotaParameters Specifies the params to create and edit a user quota policy in a view.
type ViewUserQuotaParameters struct {
	UserQuotaPolicy *UserQuota `json:"userQuotaPolicy,omitempty"`
	// View name of input view.
	ViewName NullableString `json:"viewName,omitempty"`
}

// NewViewUserQuotaParameters instantiates a new ViewUserQuotaParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewUserQuotaParameters() *ViewUserQuotaParameters {
	this := ViewUserQuotaParameters{}
	return &this
}

// NewViewUserQuotaParametersWithDefaults instantiates a new ViewUserQuotaParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewUserQuotaParametersWithDefaults() *ViewUserQuotaParameters {
	this := ViewUserQuotaParameters{}
	return &this
}

// GetUserQuotaPolicy returns the UserQuotaPolicy field value if set, zero value otherwise.
func (o *ViewUserQuotaParameters) GetUserQuotaPolicy() UserQuota {
	if o == nil || o.UserQuotaPolicy == nil {
		var ret UserQuota
		return ret
	}
	return *o.UserQuotaPolicy
}

// GetUserQuotaPolicyOk returns a tuple with the UserQuotaPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserQuotaParameters) GetUserQuotaPolicyOk() (*UserQuota, bool) {
	if o == nil || o.UserQuotaPolicy == nil {
		return nil, false
	}
	return o.UserQuotaPolicy, true
}

// HasUserQuotaPolicy returns a boolean if a field has been set.
func (o *ViewUserQuotaParameters) HasUserQuotaPolicy() bool {
	if o != nil && o.UserQuotaPolicy != nil {
		return true
	}

	return false
}

// SetUserQuotaPolicy gets a reference to the given UserQuota and assigns it to the UserQuotaPolicy field.
func (o *ViewUserQuotaParameters) SetUserQuotaPolicy(v UserQuota) {
	o.UserQuotaPolicy = &v
}

// GetViewName returns the ViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ViewUserQuotaParameters) GetViewName() string {
	if o == nil || o.ViewName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ViewName.Get()
}

// GetViewNameOk returns a tuple with the ViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ViewUserQuotaParameters) GetViewNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewName.Get(), o.ViewName.IsSet()
}

// HasViewName returns a boolean if a field has been set.
func (o *ViewUserQuotaParameters) HasViewName() bool {
	if o != nil && o.ViewName.IsSet() {
		return true
	}

	return false
}

// SetViewName gets a reference to the given NullableString and assigns it to the ViewName field.
func (o *ViewUserQuotaParameters) SetViewName(v string) {
	o.ViewName.Set(&v)
}
// SetViewNameNil sets the value for ViewName to be an explicit nil
func (o *ViewUserQuotaParameters) SetViewNameNil() {
	o.ViewName.Set(nil)
}

// UnsetViewName ensures that no value is present for ViewName, not even an explicit nil
func (o *ViewUserQuotaParameters) UnsetViewName() {
	o.ViewName.Unset()
}

func (o ViewUserQuotaParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserQuotaPolicy != nil {
		toSerialize["userQuotaPolicy"] = o.UserQuotaPolicy
	}
	if o.ViewName.IsSet() {
		toSerialize["viewName"] = o.ViewName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableViewUserQuotaParameters struct {
	value *ViewUserQuotaParameters
	isSet bool
}

func (v NullableViewUserQuotaParameters) Get() *ViewUserQuotaParameters {
	return v.value
}

func (v *NullableViewUserQuotaParameters) Set(val *ViewUserQuotaParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableViewUserQuotaParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableViewUserQuotaParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewUserQuotaParameters(val *ViewUserQuotaParameters) *NullableViewUserQuotaParameters {
	return &NullableViewUserQuotaParameters{value: val, isSet: true}
}

func (v NullableViewUserQuotaParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewUserQuotaParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


