/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// PatternRequestBody Specifies details about the pattern which has to be saved.
type PatternRequestBody struct {
	// Specifies the data type for which supported patterns can be fetched.
	ApplicationDataType NullableInt32 `json:"applicationDataType"`
	// Specifies AWB Application ID.
	ApplicationId NullableInt64 `json:"applicationId"`
	UserPattern SupportedPattern `json:"userPattern"`
}

// NewPatternRequestBody instantiates a new PatternRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatternRequestBody(applicationDataType NullableInt32, applicationId NullableInt64, userPattern SupportedPattern) *PatternRequestBody {
	this := PatternRequestBody{}
	this.ApplicationDataType = applicationDataType
	this.ApplicationId = applicationId
	this.UserPattern = userPattern
	return &this
}

// NewPatternRequestBodyWithDefaults instantiates a new PatternRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatternRequestBodyWithDefaults() *PatternRequestBody {
	this := PatternRequestBody{}
	return &this
}

// GetApplicationDataType returns the ApplicationDataType field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *PatternRequestBody) GetApplicationDataType() int32 {
	if o == nil || o.ApplicationDataType.Get() == nil {
		var ret int32
		return ret
	}

	return *o.ApplicationDataType.Get()
}

// GetApplicationDataTypeOk returns a tuple with the ApplicationDataType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatternRequestBody) GetApplicationDataTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ApplicationDataType.Get(), o.ApplicationDataType.IsSet()
}

// SetApplicationDataType sets field value
func (o *PatternRequestBody) SetApplicationDataType(v int32) {
	o.ApplicationDataType.Set(&v)
}

// GetApplicationId returns the ApplicationId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *PatternRequestBody) GetApplicationId() int64 {
	if o == nil || o.ApplicationId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.ApplicationId.Get()
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatternRequestBody) GetApplicationIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ApplicationId.Get(), o.ApplicationId.IsSet()
}

// SetApplicationId sets field value
func (o *PatternRequestBody) SetApplicationId(v int64) {
	o.ApplicationId.Set(&v)
}

// GetUserPattern returns the UserPattern field value
func (o *PatternRequestBody) GetUserPattern() SupportedPattern {
	if o == nil {
		var ret SupportedPattern
		return ret
	}

	return o.UserPattern
}

// GetUserPatternOk returns a tuple with the UserPattern field value
// and a boolean to check if the value has been set.
func (o *PatternRequestBody) GetUserPatternOk() (*SupportedPattern, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UserPattern, true
}

// SetUserPattern sets field value
func (o *PatternRequestBody) SetUserPattern(v SupportedPattern) {
	o.UserPattern = v
}

func (o PatternRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["applicationDataType"] = o.ApplicationDataType.Get()
	}
	if true {
		toSerialize["applicationId"] = o.ApplicationId.Get()
	}
	if true {
		toSerialize["userPattern"] = o.UserPattern
	}
	return json.Marshal(toSerialize)
}

type NullablePatternRequestBody struct {
	value *PatternRequestBody
	isSet bool
}

func (v NullablePatternRequestBody) Get() *PatternRequestBody {
	return v.value
}

func (v *NullablePatternRequestBody) Set(val *PatternRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullablePatternRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullablePatternRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatternRequestBody(val *PatternRequestBody) *NullablePatternRequestBody {
	return &NullablePatternRequestBody{value: val, isSet: true}
}

func (v NullablePatternRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatternRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


