/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// UpdateProtectionJobsState struct for UpdateProtectionJobsState
type UpdateProtectionJobsState struct {
	// Specifies a list of Protection Job ids for which updation of state failed.
	FailedJobIds []int64 `json:"failedJobIds,omitempty"`
	// Specifies a list of Protection Job ids for which updation of state is successful.
	SuccessfulJobIds []int64 `json:"successfulJobIds,omitempty"`
}

// NewUpdateProtectionJobsState instantiates a new UpdateProtectionJobsState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProtectionJobsState() *UpdateProtectionJobsState {
	this := UpdateProtectionJobsState{}
	return &this
}

// NewUpdateProtectionJobsStateWithDefaults instantiates a new UpdateProtectionJobsState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProtectionJobsStateWithDefaults() *UpdateProtectionJobsState {
	this := UpdateProtectionJobsState{}
	return &this
}

// GetFailedJobIds returns the FailedJobIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionJobsState) GetFailedJobIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.FailedJobIds
}

// GetFailedJobIdsOk returns a tuple with the FailedJobIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionJobsState) GetFailedJobIdsOk() (*[]int64, bool) {
	if o == nil || o.FailedJobIds == nil {
		return nil, false
	}
	return &o.FailedJobIds, true
}

// HasFailedJobIds returns a boolean if a field has been set.
func (o *UpdateProtectionJobsState) HasFailedJobIds() bool {
	if o != nil && o.FailedJobIds != nil {
		return true
	}

	return false
}

// SetFailedJobIds gets a reference to the given []int64 and assigns it to the FailedJobIds field.
func (o *UpdateProtectionJobsState) SetFailedJobIds(v []int64) {
	o.FailedJobIds = v
}

// GetSuccessfulJobIds returns the SuccessfulJobIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProtectionJobsState) GetSuccessfulJobIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.SuccessfulJobIds
}

// GetSuccessfulJobIdsOk returns a tuple with the SuccessfulJobIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProtectionJobsState) GetSuccessfulJobIdsOk() (*[]int64, bool) {
	if o == nil || o.SuccessfulJobIds == nil {
		return nil, false
	}
	return &o.SuccessfulJobIds, true
}

// HasSuccessfulJobIds returns a boolean if a field has been set.
func (o *UpdateProtectionJobsState) HasSuccessfulJobIds() bool {
	if o != nil && o.SuccessfulJobIds != nil {
		return true
	}

	return false
}

// SetSuccessfulJobIds gets a reference to the given []int64 and assigns it to the SuccessfulJobIds field.
func (o *UpdateProtectionJobsState) SetSuccessfulJobIds(v []int64) {
	o.SuccessfulJobIds = v
}

func (o UpdateProtectionJobsState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FailedJobIds != nil {
		toSerialize["failedJobIds"] = o.FailedJobIds
	}
	if o.SuccessfulJobIds != nil {
		toSerialize["successfulJobIds"] = o.SuccessfulJobIds
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateProtectionJobsState struct {
	value *UpdateProtectionJobsState
	isSet bool
}

func (v NullableUpdateProtectionJobsState) Get() *UpdateProtectionJobsState {
	return v.value
}

func (v *NullableUpdateProtectionJobsState) Set(val *UpdateProtectionJobsState) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProtectionJobsState) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProtectionJobsState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProtectionJobsState(val *UpdateProtectionJobsState) *NullableUpdateProtectionJobsState {
	return &NullableUpdateProtectionJobsState{value: val, isSet: true}
}

func (v NullableUpdateProtectionJobsState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProtectionJobsState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


