/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// AwsSnapshotManagerParameters Protection Job parameters applicable to 'kAWSSnapshotManager' Environment type. Specifies additional job parameters applicable for 'kAWSSnapshotManager' Environment type Protection Sources in a Protection Job.
type AwsSnapshotManagerParameters struct {
	// Specifies the frequency of AMI creation. This should be set if the option to create AMI is set. A value of n creates an AMI from the snapshots after every n runs. eg. n = 2 implies every alternate backup run starting from the first will create an AMI.
	AmiCreationFrequency NullableInt32 `json:"amiCreationFrequency,omitempty"`
	// If true, creates an AMI after taking snapshots of the instance. It should be set only while backing up EC2 instances. CreateAmi creates AMI for the protection job.
	CreateAmi NullableBool `json:"createAmi,omitempty"`
}

// NewAwsSnapshotManagerParameters instantiates a new AwsSnapshotManagerParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsSnapshotManagerParameters() *AwsSnapshotManagerParameters {
	this := AwsSnapshotManagerParameters{}
	return &this
}

// NewAwsSnapshotManagerParametersWithDefaults instantiates a new AwsSnapshotManagerParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsSnapshotManagerParametersWithDefaults() *AwsSnapshotManagerParameters {
	this := AwsSnapshotManagerParameters{}
	return &this
}

// GetAmiCreationFrequency returns the AmiCreationFrequency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsSnapshotManagerParameters) GetAmiCreationFrequency() int32 {
	if o == nil || o.AmiCreationFrequency.Get() == nil {
		var ret int32
		return ret
	}
	return *o.AmiCreationFrequency.Get()
}

// GetAmiCreationFrequencyOk returns a tuple with the AmiCreationFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsSnapshotManagerParameters) GetAmiCreationFrequencyOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AmiCreationFrequency.Get(), o.AmiCreationFrequency.IsSet()
}

// HasAmiCreationFrequency returns a boolean if a field has been set.
func (o *AwsSnapshotManagerParameters) HasAmiCreationFrequency() bool {
	if o != nil && o.AmiCreationFrequency.IsSet() {
		return true
	}

	return false
}

// SetAmiCreationFrequency gets a reference to the given NullableInt32 and assigns it to the AmiCreationFrequency field.
func (o *AwsSnapshotManagerParameters) SetAmiCreationFrequency(v int32) {
	o.AmiCreationFrequency.Set(&v)
}
// SetAmiCreationFrequencyNil sets the value for AmiCreationFrequency to be an explicit nil
func (o *AwsSnapshotManagerParameters) SetAmiCreationFrequencyNil() {
	o.AmiCreationFrequency.Set(nil)
}

// UnsetAmiCreationFrequency ensures that no value is present for AmiCreationFrequency, not even an explicit nil
func (o *AwsSnapshotManagerParameters) UnsetAmiCreationFrequency() {
	o.AmiCreationFrequency.Unset()
}

// GetCreateAmi returns the CreateAmi field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsSnapshotManagerParameters) GetCreateAmi() bool {
	if o == nil || o.CreateAmi.Get() == nil {
		var ret bool
		return ret
	}
	return *o.CreateAmi.Get()
}

// GetCreateAmiOk returns a tuple with the CreateAmi field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsSnapshotManagerParameters) GetCreateAmiOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreateAmi.Get(), o.CreateAmi.IsSet()
}

// HasCreateAmi returns a boolean if a field has been set.
func (o *AwsSnapshotManagerParameters) HasCreateAmi() bool {
	if o != nil && o.CreateAmi.IsSet() {
		return true
	}

	return false
}

// SetCreateAmi gets a reference to the given NullableBool and assigns it to the CreateAmi field.
func (o *AwsSnapshotManagerParameters) SetCreateAmi(v bool) {
	o.CreateAmi.Set(&v)
}
// SetCreateAmiNil sets the value for CreateAmi to be an explicit nil
func (o *AwsSnapshotManagerParameters) SetCreateAmiNil() {
	o.CreateAmi.Set(nil)
}

// UnsetCreateAmi ensures that no value is present for CreateAmi, not even an explicit nil
func (o *AwsSnapshotManagerParameters) UnsetCreateAmi() {
	o.CreateAmi.Unset()
}

func (o AwsSnapshotManagerParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AmiCreationFrequency.IsSet() {
		toSerialize["amiCreationFrequency"] = o.AmiCreationFrequency.Get()
	}
	if o.CreateAmi.IsSet() {
		toSerialize["createAmi"] = o.CreateAmi.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAwsSnapshotManagerParameters struct {
	value *AwsSnapshotManagerParameters
	isSet bool
}

func (v NullableAwsSnapshotManagerParameters) Get() *AwsSnapshotManagerParameters {
	return v.value
}

func (v *NullableAwsSnapshotManagerParameters) Set(val *AwsSnapshotManagerParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsSnapshotManagerParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsSnapshotManagerParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsSnapshotManagerParameters(val *AwsSnapshotManagerParameters) *NullableAwsSnapshotManagerParameters {
	return &NullableAwsSnapshotManagerParameters{value: val, isSet: true}
}

func (v NullableAwsSnapshotManagerParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsSnapshotManagerParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


