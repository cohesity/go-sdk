/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// DeployVmsToCloud Specifies the details about deploying vms to specific clouds where backup may be stored and converted.
type DeployVmsToCloud struct {
	AwsParams *AwsParams `json:"awsParams,omitempty"`
	AzureParams *AzureParams `json:"azureParams,omitempty"`
	FleetParams *FleetParams `json:"fleetParams,omitempty"`
}

// NewDeployVmsToCloud instantiates a new DeployVmsToCloud object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployVmsToCloud() *DeployVmsToCloud {
	this := DeployVmsToCloud{}
	return &this
}

// NewDeployVmsToCloudWithDefaults instantiates a new DeployVmsToCloud object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployVmsToCloudWithDefaults() *DeployVmsToCloud {
	this := DeployVmsToCloud{}
	return &this
}

// GetAwsParams returns the AwsParams field value if set, zero value otherwise.
func (o *DeployVmsToCloud) GetAwsParams() AwsParams {
	if o == nil || o.AwsParams == nil {
		var ret AwsParams
		return ret
	}
	return *o.AwsParams
}

// GetAwsParamsOk returns a tuple with the AwsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVmsToCloud) GetAwsParamsOk() (*AwsParams, bool) {
	if o == nil || o.AwsParams == nil {
		return nil, false
	}
	return o.AwsParams, true
}

// HasAwsParams returns a boolean if a field has been set.
func (o *DeployVmsToCloud) HasAwsParams() bool {
	if o != nil && o.AwsParams != nil {
		return true
	}

	return false
}

// SetAwsParams gets a reference to the given AwsParams and assigns it to the AwsParams field.
func (o *DeployVmsToCloud) SetAwsParams(v AwsParams) {
	o.AwsParams = &v
}

// GetAzureParams returns the AzureParams field value if set, zero value otherwise.
func (o *DeployVmsToCloud) GetAzureParams() AzureParams {
	if o == nil || o.AzureParams == nil {
		var ret AzureParams
		return ret
	}
	return *o.AzureParams
}

// GetAzureParamsOk returns a tuple with the AzureParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVmsToCloud) GetAzureParamsOk() (*AzureParams, bool) {
	if o == nil || o.AzureParams == nil {
		return nil, false
	}
	return o.AzureParams, true
}

// HasAzureParams returns a boolean if a field has been set.
func (o *DeployVmsToCloud) HasAzureParams() bool {
	if o != nil && o.AzureParams != nil {
		return true
	}

	return false
}

// SetAzureParams gets a reference to the given AzureParams and assigns it to the AzureParams field.
func (o *DeployVmsToCloud) SetAzureParams(v AzureParams) {
	o.AzureParams = &v
}

// GetFleetParams returns the FleetParams field value if set, zero value otherwise.
func (o *DeployVmsToCloud) GetFleetParams() FleetParams {
	if o == nil || o.FleetParams == nil {
		var ret FleetParams
		return ret
	}
	return *o.FleetParams
}

// GetFleetParamsOk returns a tuple with the FleetParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVmsToCloud) GetFleetParamsOk() (*FleetParams, bool) {
	if o == nil || o.FleetParams == nil {
		return nil, false
	}
	return o.FleetParams, true
}

// HasFleetParams returns a boolean if a field has been set.
func (o *DeployVmsToCloud) HasFleetParams() bool {
	if o != nil && o.FleetParams != nil {
		return true
	}

	return false
}

// SetFleetParams gets a reference to the given FleetParams and assigns it to the FleetParams field.
func (o *DeployVmsToCloud) SetFleetParams(v FleetParams) {
	o.FleetParams = &v
}

func (o DeployVmsToCloud) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AwsParams != nil {
		toSerialize["awsParams"] = o.AwsParams
	}
	if o.AzureParams != nil {
		toSerialize["azureParams"] = o.AzureParams
	}
	if o.FleetParams != nil {
		toSerialize["fleetParams"] = o.FleetParams
	}
	return json.Marshal(toSerialize)
}

type NullableDeployVmsToCloud struct {
	value *DeployVmsToCloud
	isSet bool
}

func (v NullableDeployVmsToCloud) Get() *DeployVmsToCloud {
	return v.value
}

func (v *NullableDeployVmsToCloud) Set(val *DeployVmsToCloud) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployVmsToCloud) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployVmsToCloud) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployVmsToCloud(val *DeployVmsToCloud) *NullableDeployVmsToCloud {
	return &NullableDeployVmsToCloud{value: val, isSet: true}
}

func (v NullableDeployVmsToCloud) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployVmsToCloud) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


