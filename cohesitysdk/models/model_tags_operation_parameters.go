/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// TagsOperationParameters struct for TagsOperationParameters
type TagsOperationParameters struct {
	// ClusterId is the Id of the cluster used for constructing JobUid.
	ClusterId NullableInt64 `json:"clusterId,omitempty"`
	// ClusterIncarnationId is the incarnation Id of the cluster used for constructing JobUid.
	ClusterIncarnationId NullableInt64 `json:"clusterIncarnationId,omitempty"`
	// DocumentIds are list of documents to be tagged.
	DocumentIds []string `json:"documentIds,omitempty"`
	// EntityId is the Id of the entity where the file resides.
	EntityId NullableInt64 `json:"entityId,omitempty"`
	// JobId is the Id of the job that took the snapshot.
	JobId NullableInt64 `json:"jobId,omitempty"`
	// JobInstanceIds to tag corresponding snapshots.
	JobInstanceIds []int64 `json:"jobInstanceIds,omitempty"`
	// Tags are list of tags that will be operated on to corresponding objects.
	Tags []string `json:"tags,omitempty"`
}

// NewTagsOperationParameters instantiates a new TagsOperationParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagsOperationParameters() *TagsOperationParameters {
	this := TagsOperationParameters{}
	return &this
}

// NewTagsOperationParametersWithDefaults instantiates a new TagsOperationParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagsOperationParametersWithDefaults() *TagsOperationParameters {
	this := TagsOperationParameters{}
	return &this
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TagsOperationParameters) GetClusterId() int64 {
	if o == nil || o.ClusterId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ClusterId.Get()
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TagsOperationParameters) GetClusterIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterId.Get(), o.ClusterId.IsSet()
}

// HasClusterId returns a boolean if a field has been set.
func (o *TagsOperationParameters) HasClusterId() bool {
	if o != nil && o.ClusterId.IsSet() {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given NullableInt64 and assigns it to the ClusterId field.
func (o *TagsOperationParameters) SetClusterId(v int64) {
	o.ClusterId.Set(&v)
}
// SetClusterIdNil sets the value for ClusterId to be an explicit nil
func (o *TagsOperationParameters) SetClusterIdNil() {
	o.ClusterId.Set(nil)
}

// UnsetClusterId ensures that no value is present for ClusterId, not even an explicit nil
func (o *TagsOperationParameters) UnsetClusterId() {
	o.ClusterId.Unset()
}

// GetClusterIncarnationId returns the ClusterIncarnationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TagsOperationParameters) GetClusterIncarnationId() int64 {
	if o == nil || o.ClusterIncarnationId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ClusterIncarnationId.Get()
}

// GetClusterIncarnationIdOk returns a tuple with the ClusterIncarnationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TagsOperationParameters) GetClusterIncarnationIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterIncarnationId.Get(), o.ClusterIncarnationId.IsSet()
}

// HasClusterIncarnationId returns a boolean if a field has been set.
func (o *TagsOperationParameters) HasClusterIncarnationId() bool {
	if o != nil && o.ClusterIncarnationId.IsSet() {
		return true
	}

	return false
}

// SetClusterIncarnationId gets a reference to the given NullableInt64 and assigns it to the ClusterIncarnationId field.
func (o *TagsOperationParameters) SetClusterIncarnationId(v int64) {
	o.ClusterIncarnationId.Set(&v)
}
// SetClusterIncarnationIdNil sets the value for ClusterIncarnationId to be an explicit nil
func (o *TagsOperationParameters) SetClusterIncarnationIdNil() {
	o.ClusterIncarnationId.Set(nil)
}

// UnsetClusterIncarnationId ensures that no value is present for ClusterIncarnationId, not even an explicit nil
func (o *TagsOperationParameters) UnsetClusterIncarnationId() {
	o.ClusterIncarnationId.Unset()
}

// GetDocumentIds returns the DocumentIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TagsOperationParameters) GetDocumentIds() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.DocumentIds
}

// GetDocumentIdsOk returns a tuple with the DocumentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TagsOperationParameters) GetDocumentIdsOk() (*[]string, bool) {
	if o == nil || o.DocumentIds == nil {
		return nil, false
	}
	return &o.DocumentIds, true
}

// HasDocumentIds returns a boolean if a field has been set.
func (o *TagsOperationParameters) HasDocumentIds() bool {
	if o != nil && o.DocumentIds != nil {
		return true
	}

	return false
}

// SetDocumentIds gets a reference to the given []string and assigns it to the DocumentIds field.
func (o *TagsOperationParameters) SetDocumentIds(v []string) {
	o.DocumentIds = v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TagsOperationParameters) GetEntityId() int64 {
	if o == nil || o.EntityId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EntityId.Get()
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TagsOperationParameters) GetEntityIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EntityId.Get(), o.EntityId.IsSet()
}

// HasEntityId returns a boolean if a field has been set.
func (o *TagsOperationParameters) HasEntityId() bool {
	if o != nil && o.EntityId.IsSet() {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given NullableInt64 and assigns it to the EntityId field.
func (o *TagsOperationParameters) SetEntityId(v int64) {
	o.EntityId.Set(&v)
}
// SetEntityIdNil sets the value for EntityId to be an explicit nil
func (o *TagsOperationParameters) SetEntityIdNil() {
	o.EntityId.Set(nil)
}

// UnsetEntityId ensures that no value is present for EntityId, not even an explicit nil
func (o *TagsOperationParameters) UnsetEntityId() {
	o.EntityId.Unset()
}

// GetJobId returns the JobId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TagsOperationParameters) GetJobId() int64 {
	if o == nil || o.JobId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.JobId.Get()
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TagsOperationParameters) GetJobIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobId.Get(), o.JobId.IsSet()
}

// HasJobId returns a boolean if a field has been set.
func (o *TagsOperationParameters) HasJobId() bool {
	if o != nil && o.JobId.IsSet() {
		return true
	}

	return false
}

// SetJobId gets a reference to the given NullableInt64 and assigns it to the JobId field.
func (o *TagsOperationParameters) SetJobId(v int64) {
	o.JobId.Set(&v)
}
// SetJobIdNil sets the value for JobId to be an explicit nil
func (o *TagsOperationParameters) SetJobIdNil() {
	o.JobId.Set(nil)
}

// UnsetJobId ensures that no value is present for JobId, not even an explicit nil
func (o *TagsOperationParameters) UnsetJobId() {
	o.JobId.Unset()
}

// GetJobInstanceIds returns the JobInstanceIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TagsOperationParameters) GetJobInstanceIds() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.JobInstanceIds
}

// GetJobInstanceIdsOk returns a tuple with the JobInstanceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TagsOperationParameters) GetJobInstanceIdsOk() (*[]int64, bool) {
	if o == nil || o.JobInstanceIds == nil {
		return nil, false
	}
	return &o.JobInstanceIds, true
}

// HasJobInstanceIds returns a boolean if a field has been set.
func (o *TagsOperationParameters) HasJobInstanceIds() bool {
	if o != nil && o.JobInstanceIds != nil {
		return true
	}

	return false
}

// SetJobInstanceIds gets a reference to the given []int64 and assigns it to the JobInstanceIds field.
func (o *TagsOperationParameters) SetJobInstanceIds(v []int64) {
	o.JobInstanceIds = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TagsOperationParameters) GetTags() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TagsOperationParameters) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return &o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *TagsOperationParameters) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *TagsOperationParameters) SetTags(v []string) {
	o.Tags = v
}

func (o TagsOperationParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterId.IsSet() {
		toSerialize["clusterId"] = o.ClusterId.Get()
	}
	if o.ClusterIncarnationId.IsSet() {
		toSerialize["clusterIncarnationId"] = o.ClusterIncarnationId.Get()
	}
	if o.DocumentIds != nil {
		toSerialize["documentIds"] = o.DocumentIds
	}
	if o.EntityId.IsSet() {
		toSerialize["entityId"] = o.EntityId.Get()
	}
	if o.JobId.IsSet() {
		toSerialize["jobId"] = o.JobId.Get()
	}
	if o.JobInstanceIds != nil {
		toSerialize["jobInstanceIds"] = o.JobInstanceIds
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableTagsOperationParameters struct {
	value *TagsOperationParameters
	isSet bool
}

func (v NullableTagsOperationParameters) Get() *TagsOperationParameters {
	return v.value
}

func (v *NullableTagsOperationParameters) Set(val *TagsOperationParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableTagsOperationParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableTagsOperationParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagsOperationParameters(val *TagsOperationParameters) *NullableTagsOperationParameters {
	return &NullableTagsOperationParameters{value: val, isSet: true}
}

func (v NullableTagsOperationParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagsOperationParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


