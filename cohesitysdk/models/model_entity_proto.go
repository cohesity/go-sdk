/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// EntityProto Specifies the attributes and the latest statistics about an entity.
type EntityProto struct {
	// Array of Attributes.  List of attributes of an entity.
	AttributeVec []KeyValuePair `json:"attributeVec,omitempty"`
	EntityId *EntityIdentifier `json:"entityId,omitempty"`
	// Array of Metric Statistics.  List of the latest statistics for all metrics defined in the schema that this entity belongs to. If statistics for a metric is not available, then that data point is not returned.
	LatestMetricVec []MetricValue `json:"latestMetricVec,omitempty"`
}

// NewEntityProto instantiates a new EntityProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityProto() *EntityProto {
	this := EntityProto{}
	return &this
}

// NewEntityProtoWithDefaults instantiates a new EntityProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityProtoWithDefaults() *EntityProto {
	this := EntityProto{}
	return &this
}

// GetAttributeVec returns the AttributeVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EntityProto) GetAttributeVec() []KeyValuePair {
	if o == nil  {
		var ret []KeyValuePair
		return ret
	}
	return o.AttributeVec
}

// GetAttributeVecOk returns a tuple with the AttributeVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EntityProto) GetAttributeVecOk() (*[]KeyValuePair, bool) {
	if o == nil || o.AttributeVec == nil {
		return nil, false
	}
	return &o.AttributeVec, true
}

// HasAttributeVec returns a boolean if a field has been set.
func (o *EntityProto) HasAttributeVec() bool {
	if o != nil && o.AttributeVec != nil {
		return true
	}

	return false
}

// SetAttributeVec gets a reference to the given []KeyValuePair and assigns it to the AttributeVec field.
func (o *EntityProto) SetAttributeVec(v []KeyValuePair) {
	o.AttributeVec = v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *EntityProto) GetEntityId() EntityIdentifier {
	if o == nil || o.EntityId == nil {
		var ret EntityIdentifier
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityProto) GetEntityIdOk() (*EntityIdentifier, bool) {
	if o == nil || o.EntityId == nil {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *EntityProto) HasEntityId() bool {
	if o != nil && o.EntityId != nil {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given EntityIdentifier and assigns it to the EntityId field.
func (o *EntityProto) SetEntityId(v EntityIdentifier) {
	o.EntityId = &v
}

// GetLatestMetricVec returns the LatestMetricVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EntityProto) GetLatestMetricVec() []MetricValue {
	if o == nil  {
		var ret []MetricValue
		return ret
	}
	return o.LatestMetricVec
}

// GetLatestMetricVecOk returns a tuple with the LatestMetricVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EntityProto) GetLatestMetricVecOk() (*[]MetricValue, bool) {
	if o == nil || o.LatestMetricVec == nil {
		return nil, false
	}
	return &o.LatestMetricVec, true
}

// HasLatestMetricVec returns a boolean if a field has been set.
func (o *EntityProto) HasLatestMetricVec() bool {
	if o != nil && o.LatestMetricVec != nil {
		return true
	}

	return false
}

// SetLatestMetricVec gets a reference to the given []MetricValue and assigns it to the LatestMetricVec field.
func (o *EntityProto) SetLatestMetricVec(v []MetricValue) {
	o.LatestMetricVec = v
}

func (o EntityProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AttributeVec != nil {
		toSerialize["attributeVec"] = o.AttributeVec
	}
	if o.EntityId != nil {
		toSerialize["entityId"] = o.EntityId
	}
	if o.LatestMetricVec != nil {
		toSerialize["latestMetricVec"] = o.LatestMetricVec
	}
	return json.Marshal(toSerialize)
}

type NullableEntityProto struct {
	value *EntityProto
	isSet bool
}

func (v NullableEntityProto) Get() *EntityProto {
	return v.value
}

func (v *NullableEntityProto) Set(val *EntityProto) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityProto) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityProto(val *EntityProto) *NullableEntityProto {
	return &NullableEntityProto{value: val, isSet: true}
}

func (v NullableEntityProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


