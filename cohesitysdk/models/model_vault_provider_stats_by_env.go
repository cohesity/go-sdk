/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// VaultProviderStatsByEnv Specifies the Vault stats by environments.
type VaultProviderStatsByEnv struct {
	// Specifies the count of the objects of the specified environment.
	Count NullableInt64 `json:"count,omitempty"`
	// Specifies the environment type.
	Environment NullableString `json:"environment,omitempty"`
	// Specifies the size of the entities of the specified environment.
	Size NullableInt64 `json:"size,omitempty"`
}

// NewVaultProviderStatsByEnv instantiates a new VaultProviderStatsByEnv object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVaultProviderStatsByEnv() *VaultProviderStatsByEnv {
	this := VaultProviderStatsByEnv{}
	return &this
}

// NewVaultProviderStatsByEnvWithDefaults instantiates a new VaultProviderStatsByEnv object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVaultProviderStatsByEnvWithDefaults() *VaultProviderStatsByEnv {
	this := VaultProviderStatsByEnv{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VaultProviderStatsByEnv) GetCount() int64 {
	if o == nil || o.Count.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Count.Get()
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VaultProviderStatsByEnv) GetCountOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Count.Get(), o.Count.IsSet()
}

// HasCount returns a boolean if a field has been set.
func (o *VaultProviderStatsByEnv) HasCount() bool {
	if o != nil && o.Count.IsSet() {
		return true
	}

	return false
}

// SetCount gets a reference to the given NullableInt64 and assigns it to the Count field.
func (o *VaultProviderStatsByEnv) SetCount(v int64) {
	o.Count.Set(&v)
}
// SetCountNil sets the value for Count to be an explicit nil
func (o *VaultProviderStatsByEnv) SetCountNil() {
	o.Count.Set(nil)
}

// UnsetCount ensures that no value is present for Count, not even an explicit nil
func (o *VaultProviderStatsByEnv) UnsetCount() {
	o.Count.Unset()
}

// GetEnvironment returns the Environment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VaultProviderStatsByEnv) GetEnvironment() string {
	if o == nil || o.Environment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VaultProviderStatsByEnv) GetEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// HasEnvironment returns a boolean if a field has been set.
func (o *VaultProviderStatsByEnv) HasEnvironment() bool {
	if o != nil && o.Environment.IsSet() {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given NullableString and assigns it to the Environment field.
func (o *VaultProviderStatsByEnv) SetEnvironment(v string) {
	o.Environment.Set(&v)
}
// SetEnvironmentNil sets the value for Environment to be an explicit nil
func (o *VaultProviderStatsByEnv) SetEnvironmentNil() {
	o.Environment.Set(nil)
}

// UnsetEnvironment ensures that no value is present for Environment, not even an explicit nil
func (o *VaultProviderStatsByEnv) UnsetEnvironment() {
	o.Environment.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VaultProviderStatsByEnv) GetSize() int64 {
	if o == nil || o.Size.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VaultProviderStatsByEnv) GetSizeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *VaultProviderStatsByEnv) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt64 and assigns it to the Size field.
func (o *VaultProviderStatsByEnv) SetSize(v int64) {
	o.Size.Set(&v)
}
// SetSizeNil sets the value for Size to be an explicit nil
func (o *VaultProviderStatsByEnv) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *VaultProviderStatsByEnv) UnsetSize() {
	o.Size.Unset()
}

func (o VaultProviderStatsByEnv) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Count.IsSet() {
		toSerialize["count"] = o.Count.Get()
	}
	if o.Environment.IsSet() {
		toSerialize["environment"] = o.Environment.Get()
	}
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableVaultProviderStatsByEnv struct {
	value *VaultProviderStatsByEnv
	isSet bool
}

func (v NullableVaultProviderStatsByEnv) Get() *VaultProviderStatsByEnv {
	return v.value
}

func (v *NullableVaultProviderStatsByEnv) Set(val *VaultProviderStatsByEnv) {
	v.value = val
	v.isSet = true
}

func (v NullableVaultProviderStatsByEnv) IsSet() bool {
	return v.isSet
}

func (v *NullableVaultProviderStatsByEnv) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVaultProviderStatsByEnv(val *VaultProviderStatsByEnv) *NullableVaultProviderStatsByEnv {
	return &NullableVaultProviderStatsByEnv{value: val, isSet: true}
}

func (v NullableVaultProviderStatsByEnv) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVaultProviderStatsByEnv) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


