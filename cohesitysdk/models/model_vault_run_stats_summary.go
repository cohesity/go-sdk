/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// VaultRunStatsSummary Specifies the stats by run type for each vault run.
type VaultRunStatsSummary struct {
	// Specifies the time series for the failed runs that ended in the given time frame.
	FailureTimeSeries *[]VaultRunInfo `json:"failureTimeSeries,omitempty"`
	// Specifies the number of runs that ended in failure during the given time frame.
	NumFailedRuns NullableInt64 `json:"numFailedRuns,omitempty"`
	// Specifies the number of runs that were currently in progress at the time that the API call was made.
	NumInProgressRuns NullableInt64 `json:"numInProgressRuns,omitempty"`
	// Specifies the number of runs that were currently queued at the time that the API call was made.
	NumQueuedRuns NullableInt64 `json:"numQueuedRuns,omitempty"`
	// Specifies the number of runs that ended in success during the given time frame.
	NumSuccessfulRuns NullableInt64 `json:"numSuccessfulRuns,omitempty"`
	// Specifies the time series for the successful runs that ended in the given time frame.
	SuccessTimeSeries *[]VaultRunInfo `json:"successTimeSeries,omitempty"`
}

// NewVaultRunStatsSummary instantiates a new VaultRunStatsSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVaultRunStatsSummary() *VaultRunStatsSummary {
	this := VaultRunStatsSummary{}
	return &this
}

// NewVaultRunStatsSummaryWithDefaults instantiates a new VaultRunStatsSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVaultRunStatsSummaryWithDefaults() *VaultRunStatsSummary {
	this := VaultRunStatsSummary{}
	return &this
}

// GetFailureTimeSeries returns the FailureTimeSeries field value if set, zero value otherwise.
func (o *VaultRunStatsSummary) GetFailureTimeSeries() []VaultRunInfo {
	if o == nil || o.FailureTimeSeries == nil {
		var ret []VaultRunInfo
		return ret
	}
	return *o.FailureTimeSeries
}

// GetFailureTimeSeriesOk returns a tuple with the FailureTimeSeries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultRunStatsSummary) GetFailureTimeSeriesOk() (*[]VaultRunInfo, bool) {
	if o == nil || o.FailureTimeSeries == nil {
		return nil, false
	}
	return o.FailureTimeSeries, true
}

// HasFailureTimeSeries returns a boolean if a field has been set.
func (o *VaultRunStatsSummary) HasFailureTimeSeries() bool {
	if o != nil && o.FailureTimeSeries != nil {
		return true
	}

	return false
}

// SetFailureTimeSeries gets a reference to the given []VaultRunInfo and assigns it to the FailureTimeSeries field.
func (o *VaultRunStatsSummary) SetFailureTimeSeries(v []VaultRunInfo) {
	o.FailureTimeSeries = &v
}

// GetNumFailedRuns returns the NumFailedRuns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VaultRunStatsSummary) GetNumFailedRuns() int64 {
	if o == nil || o.NumFailedRuns.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumFailedRuns.Get()
}

// GetNumFailedRunsOk returns a tuple with the NumFailedRuns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VaultRunStatsSummary) GetNumFailedRunsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumFailedRuns.Get(), o.NumFailedRuns.IsSet()
}

// HasNumFailedRuns returns a boolean if a field has been set.
func (o *VaultRunStatsSummary) HasNumFailedRuns() bool {
	if o != nil && o.NumFailedRuns.IsSet() {
		return true
	}

	return false
}

// SetNumFailedRuns gets a reference to the given NullableInt64 and assigns it to the NumFailedRuns field.
func (o *VaultRunStatsSummary) SetNumFailedRuns(v int64) {
	o.NumFailedRuns.Set(&v)
}
// SetNumFailedRunsNil sets the value for NumFailedRuns to be an explicit nil
func (o *VaultRunStatsSummary) SetNumFailedRunsNil() {
	o.NumFailedRuns.Set(nil)
}

// UnsetNumFailedRuns ensures that no value is present for NumFailedRuns, not even an explicit nil
func (o *VaultRunStatsSummary) UnsetNumFailedRuns() {
	o.NumFailedRuns.Unset()
}

// GetNumInProgressRuns returns the NumInProgressRuns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VaultRunStatsSummary) GetNumInProgressRuns() int64 {
	if o == nil || o.NumInProgressRuns.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumInProgressRuns.Get()
}

// GetNumInProgressRunsOk returns a tuple with the NumInProgressRuns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VaultRunStatsSummary) GetNumInProgressRunsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumInProgressRuns.Get(), o.NumInProgressRuns.IsSet()
}

// HasNumInProgressRuns returns a boolean if a field has been set.
func (o *VaultRunStatsSummary) HasNumInProgressRuns() bool {
	if o != nil && o.NumInProgressRuns.IsSet() {
		return true
	}

	return false
}

// SetNumInProgressRuns gets a reference to the given NullableInt64 and assigns it to the NumInProgressRuns field.
func (o *VaultRunStatsSummary) SetNumInProgressRuns(v int64) {
	o.NumInProgressRuns.Set(&v)
}
// SetNumInProgressRunsNil sets the value for NumInProgressRuns to be an explicit nil
func (o *VaultRunStatsSummary) SetNumInProgressRunsNil() {
	o.NumInProgressRuns.Set(nil)
}

// UnsetNumInProgressRuns ensures that no value is present for NumInProgressRuns, not even an explicit nil
func (o *VaultRunStatsSummary) UnsetNumInProgressRuns() {
	o.NumInProgressRuns.Unset()
}

// GetNumQueuedRuns returns the NumQueuedRuns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VaultRunStatsSummary) GetNumQueuedRuns() int64 {
	if o == nil || o.NumQueuedRuns.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumQueuedRuns.Get()
}

// GetNumQueuedRunsOk returns a tuple with the NumQueuedRuns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VaultRunStatsSummary) GetNumQueuedRunsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumQueuedRuns.Get(), o.NumQueuedRuns.IsSet()
}

// HasNumQueuedRuns returns a boolean if a field has been set.
func (o *VaultRunStatsSummary) HasNumQueuedRuns() bool {
	if o != nil && o.NumQueuedRuns.IsSet() {
		return true
	}

	return false
}

// SetNumQueuedRuns gets a reference to the given NullableInt64 and assigns it to the NumQueuedRuns field.
func (o *VaultRunStatsSummary) SetNumQueuedRuns(v int64) {
	o.NumQueuedRuns.Set(&v)
}
// SetNumQueuedRunsNil sets the value for NumQueuedRuns to be an explicit nil
func (o *VaultRunStatsSummary) SetNumQueuedRunsNil() {
	o.NumQueuedRuns.Set(nil)
}

// UnsetNumQueuedRuns ensures that no value is present for NumQueuedRuns, not even an explicit nil
func (o *VaultRunStatsSummary) UnsetNumQueuedRuns() {
	o.NumQueuedRuns.Unset()
}

// GetNumSuccessfulRuns returns the NumSuccessfulRuns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VaultRunStatsSummary) GetNumSuccessfulRuns() int64 {
	if o == nil || o.NumSuccessfulRuns.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumSuccessfulRuns.Get()
}

// GetNumSuccessfulRunsOk returns a tuple with the NumSuccessfulRuns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VaultRunStatsSummary) GetNumSuccessfulRunsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumSuccessfulRuns.Get(), o.NumSuccessfulRuns.IsSet()
}

// HasNumSuccessfulRuns returns a boolean if a field has been set.
func (o *VaultRunStatsSummary) HasNumSuccessfulRuns() bool {
	if o != nil && o.NumSuccessfulRuns.IsSet() {
		return true
	}

	return false
}

// SetNumSuccessfulRuns gets a reference to the given NullableInt64 and assigns it to the NumSuccessfulRuns field.
func (o *VaultRunStatsSummary) SetNumSuccessfulRuns(v int64) {
	o.NumSuccessfulRuns.Set(&v)
}
// SetNumSuccessfulRunsNil sets the value for NumSuccessfulRuns to be an explicit nil
func (o *VaultRunStatsSummary) SetNumSuccessfulRunsNil() {
	o.NumSuccessfulRuns.Set(nil)
}

// UnsetNumSuccessfulRuns ensures that no value is present for NumSuccessfulRuns, not even an explicit nil
func (o *VaultRunStatsSummary) UnsetNumSuccessfulRuns() {
	o.NumSuccessfulRuns.Unset()
}

// GetSuccessTimeSeries returns the SuccessTimeSeries field value if set, zero value otherwise.
func (o *VaultRunStatsSummary) GetSuccessTimeSeries() []VaultRunInfo {
	if o == nil || o.SuccessTimeSeries == nil {
		var ret []VaultRunInfo
		return ret
	}
	return *o.SuccessTimeSeries
}

// GetSuccessTimeSeriesOk returns a tuple with the SuccessTimeSeries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultRunStatsSummary) GetSuccessTimeSeriesOk() (*[]VaultRunInfo, bool) {
	if o == nil || o.SuccessTimeSeries == nil {
		return nil, false
	}
	return o.SuccessTimeSeries, true
}

// HasSuccessTimeSeries returns a boolean if a field has been set.
func (o *VaultRunStatsSummary) HasSuccessTimeSeries() bool {
	if o != nil && o.SuccessTimeSeries != nil {
		return true
	}

	return false
}

// SetSuccessTimeSeries gets a reference to the given []VaultRunInfo and assigns it to the SuccessTimeSeries field.
func (o *VaultRunStatsSummary) SetSuccessTimeSeries(v []VaultRunInfo) {
	o.SuccessTimeSeries = &v
}

func (o VaultRunStatsSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FailureTimeSeries != nil {
		toSerialize["failureTimeSeries"] = o.FailureTimeSeries
	}
	if o.NumFailedRuns.IsSet() {
		toSerialize["numFailedRuns"] = o.NumFailedRuns.Get()
	}
	if o.NumInProgressRuns.IsSet() {
		toSerialize["numInProgressRuns"] = o.NumInProgressRuns.Get()
	}
	if o.NumQueuedRuns.IsSet() {
		toSerialize["numQueuedRuns"] = o.NumQueuedRuns.Get()
	}
	if o.NumSuccessfulRuns.IsSet() {
		toSerialize["numSuccessfulRuns"] = o.NumSuccessfulRuns.Get()
	}
	if o.SuccessTimeSeries != nil {
		toSerialize["successTimeSeries"] = o.SuccessTimeSeries
	}
	return json.Marshal(toSerialize)
}

type NullableVaultRunStatsSummary struct {
	value *VaultRunStatsSummary
	isSet bool
}

func (v NullableVaultRunStatsSummary) Get() *VaultRunStatsSummary {
	return v.value
}

func (v *NullableVaultRunStatsSummary) Set(val *VaultRunStatsSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVaultRunStatsSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVaultRunStatsSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVaultRunStatsSummary(val *VaultRunStatsSummary) *NullableVaultRunStatsSummary {
	return &NullableVaultRunStatsSummary{value: val, isSet: true}
}

func (v NullableVaultRunStatsSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVaultRunStatsSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


