/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ProtectionJobSummaryStats Specifies statistics about a Protection Job.
type ProtectionJobSummaryStats struct {
	// Specifies the average run time of all successful Protection Runs. It is specified as a Unix epoch Timestamp (in microseconds).
	AverageRunTimeUsecs NullableInt64 `json:"averageRunTimeUsecs,omitempty"`
	// Specifies the time taken for a fastest successful Protection Run so far. It is specified as a Unix epoch Timestamp (in microseconds).
	FastestRunTimeUsecs NullableInt64 `json:"fastestRunTimeUsecs,omitempty"`
	// Specifies the number of runs that were cancelled.
	NumCanceledRuns NullableInt64 `json:"numCanceledRuns,omitempty"`
	// Specifies the number of runs that failed to finish.
	NumFailedRuns NullableInt64 `json:"numFailedRuns,omitempty"`
	// Specifies the number of runs having SLA violations.
	NumSlaViolations NullableInt64 `json:"numSlaViolations,omitempty"`
	// Specifies the number of runs that finished successfully.
	NumSuccessfulRuns NullableInt64 `json:"numSuccessfulRuns,omitempty"`
	// Specifies the time taken for a slowest successful Protection Run so far. It is specified as a Unix epoch Timestamp (in microseconds).
	SlowestRunTimeUsecs NullableInt64 `json:"slowestRunTimeUsecs,omitempty"`
	// Specifies the total amount of data read from the source (so far).
	TotalBytesReadFromSource NullableInt64 `json:"totalBytesReadFromSource,omitempty"`
	// Specifies the size of the source object (such as a VM) protected by this task on the primary storage after the snapshot is taken. The logical size of the data on the source if the data is fully hydrated or expanded and not reduced by change-block tracking, compression and deduplication.
	TotalLogicalBackupSizeBytes NullableInt64 `json:"totalLogicalBackupSizeBytes,omitempty"`
	// Specifies the total amount of physical space used on the Cohesity Cluster to store the protected object after being reduced by change-block tracking, compression and deduplication. For example, if the logical backup size is 1GB, but only 1MB was used on the Cohesity Cluster to store it, this field be equal to 1MB.
	TotalPhysicalBackupSizeBytes NullableInt64 `json:"totalPhysicalBackupSizeBytes,omitempty"`
}

// NewProtectionJobSummaryStats instantiates a new ProtectionJobSummaryStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionJobSummaryStats() *ProtectionJobSummaryStats {
	this := ProtectionJobSummaryStats{}
	return &this
}

// NewProtectionJobSummaryStatsWithDefaults instantiates a new ProtectionJobSummaryStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionJobSummaryStatsWithDefaults() *ProtectionJobSummaryStats {
	this := ProtectionJobSummaryStats{}
	return &this
}

// GetAverageRunTimeUsecs returns the AverageRunTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJobSummaryStats) GetAverageRunTimeUsecs() int64 {
	if o == nil || o.AverageRunTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AverageRunTimeUsecs.Get()
}

// GetAverageRunTimeUsecsOk returns a tuple with the AverageRunTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJobSummaryStats) GetAverageRunTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AverageRunTimeUsecs.Get(), o.AverageRunTimeUsecs.IsSet()
}

// HasAverageRunTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionJobSummaryStats) HasAverageRunTimeUsecs() bool {
	if o != nil && o.AverageRunTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetAverageRunTimeUsecs gets a reference to the given NullableInt64 and assigns it to the AverageRunTimeUsecs field.
func (o *ProtectionJobSummaryStats) SetAverageRunTimeUsecs(v int64) {
	o.AverageRunTimeUsecs.Set(&v)
}
// SetAverageRunTimeUsecsNil sets the value for AverageRunTimeUsecs to be an explicit nil
func (o *ProtectionJobSummaryStats) SetAverageRunTimeUsecsNil() {
	o.AverageRunTimeUsecs.Set(nil)
}

// UnsetAverageRunTimeUsecs ensures that no value is present for AverageRunTimeUsecs, not even an explicit nil
func (o *ProtectionJobSummaryStats) UnsetAverageRunTimeUsecs() {
	o.AverageRunTimeUsecs.Unset()
}

// GetFastestRunTimeUsecs returns the FastestRunTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJobSummaryStats) GetFastestRunTimeUsecs() int64 {
	if o == nil || o.FastestRunTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.FastestRunTimeUsecs.Get()
}

// GetFastestRunTimeUsecsOk returns a tuple with the FastestRunTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJobSummaryStats) GetFastestRunTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FastestRunTimeUsecs.Get(), o.FastestRunTimeUsecs.IsSet()
}

// HasFastestRunTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionJobSummaryStats) HasFastestRunTimeUsecs() bool {
	if o != nil && o.FastestRunTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetFastestRunTimeUsecs gets a reference to the given NullableInt64 and assigns it to the FastestRunTimeUsecs field.
func (o *ProtectionJobSummaryStats) SetFastestRunTimeUsecs(v int64) {
	o.FastestRunTimeUsecs.Set(&v)
}
// SetFastestRunTimeUsecsNil sets the value for FastestRunTimeUsecs to be an explicit nil
func (o *ProtectionJobSummaryStats) SetFastestRunTimeUsecsNil() {
	o.FastestRunTimeUsecs.Set(nil)
}

// UnsetFastestRunTimeUsecs ensures that no value is present for FastestRunTimeUsecs, not even an explicit nil
func (o *ProtectionJobSummaryStats) UnsetFastestRunTimeUsecs() {
	o.FastestRunTimeUsecs.Unset()
}

// GetNumCanceledRuns returns the NumCanceledRuns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJobSummaryStats) GetNumCanceledRuns() int64 {
	if o == nil || o.NumCanceledRuns.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumCanceledRuns.Get()
}

// GetNumCanceledRunsOk returns a tuple with the NumCanceledRuns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJobSummaryStats) GetNumCanceledRunsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumCanceledRuns.Get(), o.NumCanceledRuns.IsSet()
}

// HasNumCanceledRuns returns a boolean if a field has been set.
func (o *ProtectionJobSummaryStats) HasNumCanceledRuns() bool {
	if o != nil && o.NumCanceledRuns.IsSet() {
		return true
	}

	return false
}

// SetNumCanceledRuns gets a reference to the given NullableInt64 and assigns it to the NumCanceledRuns field.
func (o *ProtectionJobSummaryStats) SetNumCanceledRuns(v int64) {
	o.NumCanceledRuns.Set(&v)
}
// SetNumCanceledRunsNil sets the value for NumCanceledRuns to be an explicit nil
func (o *ProtectionJobSummaryStats) SetNumCanceledRunsNil() {
	o.NumCanceledRuns.Set(nil)
}

// UnsetNumCanceledRuns ensures that no value is present for NumCanceledRuns, not even an explicit nil
func (o *ProtectionJobSummaryStats) UnsetNumCanceledRuns() {
	o.NumCanceledRuns.Unset()
}

// GetNumFailedRuns returns the NumFailedRuns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJobSummaryStats) GetNumFailedRuns() int64 {
	if o == nil || o.NumFailedRuns.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumFailedRuns.Get()
}

// GetNumFailedRunsOk returns a tuple with the NumFailedRuns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJobSummaryStats) GetNumFailedRunsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumFailedRuns.Get(), o.NumFailedRuns.IsSet()
}

// HasNumFailedRuns returns a boolean if a field has been set.
func (o *ProtectionJobSummaryStats) HasNumFailedRuns() bool {
	if o != nil && o.NumFailedRuns.IsSet() {
		return true
	}

	return false
}

// SetNumFailedRuns gets a reference to the given NullableInt64 and assigns it to the NumFailedRuns field.
func (o *ProtectionJobSummaryStats) SetNumFailedRuns(v int64) {
	o.NumFailedRuns.Set(&v)
}
// SetNumFailedRunsNil sets the value for NumFailedRuns to be an explicit nil
func (o *ProtectionJobSummaryStats) SetNumFailedRunsNil() {
	o.NumFailedRuns.Set(nil)
}

// UnsetNumFailedRuns ensures that no value is present for NumFailedRuns, not even an explicit nil
func (o *ProtectionJobSummaryStats) UnsetNumFailedRuns() {
	o.NumFailedRuns.Unset()
}

// GetNumSlaViolations returns the NumSlaViolations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJobSummaryStats) GetNumSlaViolations() int64 {
	if o == nil || o.NumSlaViolations.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumSlaViolations.Get()
}

// GetNumSlaViolationsOk returns a tuple with the NumSlaViolations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJobSummaryStats) GetNumSlaViolationsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumSlaViolations.Get(), o.NumSlaViolations.IsSet()
}

// HasNumSlaViolations returns a boolean if a field has been set.
func (o *ProtectionJobSummaryStats) HasNumSlaViolations() bool {
	if o != nil && o.NumSlaViolations.IsSet() {
		return true
	}

	return false
}

// SetNumSlaViolations gets a reference to the given NullableInt64 and assigns it to the NumSlaViolations field.
func (o *ProtectionJobSummaryStats) SetNumSlaViolations(v int64) {
	o.NumSlaViolations.Set(&v)
}
// SetNumSlaViolationsNil sets the value for NumSlaViolations to be an explicit nil
func (o *ProtectionJobSummaryStats) SetNumSlaViolationsNil() {
	o.NumSlaViolations.Set(nil)
}

// UnsetNumSlaViolations ensures that no value is present for NumSlaViolations, not even an explicit nil
func (o *ProtectionJobSummaryStats) UnsetNumSlaViolations() {
	o.NumSlaViolations.Unset()
}

// GetNumSuccessfulRuns returns the NumSuccessfulRuns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJobSummaryStats) GetNumSuccessfulRuns() int64 {
	if o == nil || o.NumSuccessfulRuns.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumSuccessfulRuns.Get()
}

// GetNumSuccessfulRunsOk returns a tuple with the NumSuccessfulRuns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJobSummaryStats) GetNumSuccessfulRunsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumSuccessfulRuns.Get(), o.NumSuccessfulRuns.IsSet()
}

// HasNumSuccessfulRuns returns a boolean if a field has been set.
func (o *ProtectionJobSummaryStats) HasNumSuccessfulRuns() bool {
	if o != nil && o.NumSuccessfulRuns.IsSet() {
		return true
	}

	return false
}

// SetNumSuccessfulRuns gets a reference to the given NullableInt64 and assigns it to the NumSuccessfulRuns field.
func (o *ProtectionJobSummaryStats) SetNumSuccessfulRuns(v int64) {
	o.NumSuccessfulRuns.Set(&v)
}
// SetNumSuccessfulRunsNil sets the value for NumSuccessfulRuns to be an explicit nil
func (o *ProtectionJobSummaryStats) SetNumSuccessfulRunsNil() {
	o.NumSuccessfulRuns.Set(nil)
}

// UnsetNumSuccessfulRuns ensures that no value is present for NumSuccessfulRuns, not even an explicit nil
func (o *ProtectionJobSummaryStats) UnsetNumSuccessfulRuns() {
	o.NumSuccessfulRuns.Unset()
}

// GetSlowestRunTimeUsecs returns the SlowestRunTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJobSummaryStats) GetSlowestRunTimeUsecs() int64 {
	if o == nil || o.SlowestRunTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SlowestRunTimeUsecs.Get()
}

// GetSlowestRunTimeUsecsOk returns a tuple with the SlowestRunTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJobSummaryStats) GetSlowestRunTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SlowestRunTimeUsecs.Get(), o.SlowestRunTimeUsecs.IsSet()
}

// HasSlowestRunTimeUsecs returns a boolean if a field has been set.
func (o *ProtectionJobSummaryStats) HasSlowestRunTimeUsecs() bool {
	if o != nil && o.SlowestRunTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetSlowestRunTimeUsecs gets a reference to the given NullableInt64 and assigns it to the SlowestRunTimeUsecs field.
func (o *ProtectionJobSummaryStats) SetSlowestRunTimeUsecs(v int64) {
	o.SlowestRunTimeUsecs.Set(&v)
}
// SetSlowestRunTimeUsecsNil sets the value for SlowestRunTimeUsecs to be an explicit nil
func (o *ProtectionJobSummaryStats) SetSlowestRunTimeUsecsNil() {
	o.SlowestRunTimeUsecs.Set(nil)
}

// UnsetSlowestRunTimeUsecs ensures that no value is present for SlowestRunTimeUsecs, not even an explicit nil
func (o *ProtectionJobSummaryStats) UnsetSlowestRunTimeUsecs() {
	o.SlowestRunTimeUsecs.Unset()
}

// GetTotalBytesReadFromSource returns the TotalBytesReadFromSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJobSummaryStats) GetTotalBytesReadFromSource() int64 {
	if o == nil || o.TotalBytesReadFromSource.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalBytesReadFromSource.Get()
}

// GetTotalBytesReadFromSourceOk returns a tuple with the TotalBytesReadFromSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJobSummaryStats) GetTotalBytesReadFromSourceOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalBytesReadFromSource.Get(), o.TotalBytesReadFromSource.IsSet()
}

// HasTotalBytesReadFromSource returns a boolean if a field has been set.
func (o *ProtectionJobSummaryStats) HasTotalBytesReadFromSource() bool {
	if o != nil && o.TotalBytesReadFromSource.IsSet() {
		return true
	}

	return false
}

// SetTotalBytesReadFromSource gets a reference to the given NullableInt64 and assigns it to the TotalBytesReadFromSource field.
func (o *ProtectionJobSummaryStats) SetTotalBytesReadFromSource(v int64) {
	o.TotalBytesReadFromSource.Set(&v)
}
// SetTotalBytesReadFromSourceNil sets the value for TotalBytesReadFromSource to be an explicit nil
func (o *ProtectionJobSummaryStats) SetTotalBytesReadFromSourceNil() {
	o.TotalBytesReadFromSource.Set(nil)
}

// UnsetTotalBytesReadFromSource ensures that no value is present for TotalBytesReadFromSource, not even an explicit nil
func (o *ProtectionJobSummaryStats) UnsetTotalBytesReadFromSource() {
	o.TotalBytesReadFromSource.Unset()
}

// GetTotalLogicalBackupSizeBytes returns the TotalLogicalBackupSizeBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJobSummaryStats) GetTotalLogicalBackupSizeBytes() int64 {
	if o == nil || o.TotalLogicalBackupSizeBytes.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalLogicalBackupSizeBytes.Get()
}

// GetTotalLogicalBackupSizeBytesOk returns a tuple with the TotalLogicalBackupSizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJobSummaryStats) GetTotalLogicalBackupSizeBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalLogicalBackupSizeBytes.Get(), o.TotalLogicalBackupSizeBytes.IsSet()
}

// HasTotalLogicalBackupSizeBytes returns a boolean if a field has been set.
func (o *ProtectionJobSummaryStats) HasTotalLogicalBackupSizeBytes() bool {
	if o != nil && o.TotalLogicalBackupSizeBytes.IsSet() {
		return true
	}

	return false
}

// SetTotalLogicalBackupSizeBytes gets a reference to the given NullableInt64 and assigns it to the TotalLogicalBackupSizeBytes field.
func (o *ProtectionJobSummaryStats) SetTotalLogicalBackupSizeBytes(v int64) {
	o.TotalLogicalBackupSizeBytes.Set(&v)
}
// SetTotalLogicalBackupSizeBytesNil sets the value for TotalLogicalBackupSizeBytes to be an explicit nil
func (o *ProtectionJobSummaryStats) SetTotalLogicalBackupSizeBytesNil() {
	o.TotalLogicalBackupSizeBytes.Set(nil)
}

// UnsetTotalLogicalBackupSizeBytes ensures that no value is present for TotalLogicalBackupSizeBytes, not even an explicit nil
func (o *ProtectionJobSummaryStats) UnsetTotalLogicalBackupSizeBytes() {
	o.TotalLogicalBackupSizeBytes.Unset()
}

// GetTotalPhysicalBackupSizeBytes returns the TotalPhysicalBackupSizeBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectionJobSummaryStats) GetTotalPhysicalBackupSizeBytes() int64 {
	if o == nil || o.TotalPhysicalBackupSizeBytes.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalPhysicalBackupSizeBytes.Get()
}

// GetTotalPhysicalBackupSizeBytesOk returns a tuple with the TotalPhysicalBackupSizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectionJobSummaryStats) GetTotalPhysicalBackupSizeBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalPhysicalBackupSizeBytes.Get(), o.TotalPhysicalBackupSizeBytes.IsSet()
}

// HasTotalPhysicalBackupSizeBytes returns a boolean if a field has been set.
func (o *ProtectionJobSummaryStats) HasTotalPhysicalBackupSizeBytes() bool {
	if o != nil && o.TotalPhysicalBackupSizeBytes.IsSet() {
		return true
	}

	return false
}

// SetTotalPhysicalBackupSizeBytes gets a reference to the given NullableInt64 and assigns it to the TotalPhysicalBackupSizeBytes field.
func (o *ProtectionJobSummaryStats) SetTotalPhysicalBackupSizeBytes(v int64) {
	o.TotalPhysicalBackupSizeBytes.Set(&v)
}
// SetTotalPhysicalBackupSizeBytesNil sets the value for TotalPhysicalBackupSizeBytes to be an explicit nil
func (o *ProtectionJobSummaryStats) SetTotalPhysicalBackupSizeBytesNil() {
	o.TotalPhysicalBackupSizeBytes.Set(nil)
}

// UnsetTotalPhysicalBackupSizeBytes ensures that no value is present for TotalPhysicalBackupSizeBytes, not even an explicit nil
func (o *ProtectionJobSummaryStats) UnsetTotalPhysicalBackupSizeBytes() {
	o.TotalPhysicalBackupSizeBytes.Unset()
}

func (o ProtectionJobSummaryStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AverageRunTimeUsecs.IsSet() {
		toSerialize["averageRunTimeUsecs"] = o.AverageRunTimeUsecs.Get()
	}
	if o.FastestRunTimeUsecs.IsSet() {
		toSerialize["fastestRunTimeUsecs"] = o.FastestRunTimeUsecs.Get()
	}
	if o.NumCanceledRuns.IsSet() {
		toSerialize["numCanceledRuns"] = o.NumCanceledRuns.Get()
	}
	if o.NumFailedRuns.IsSet() {
		toSerialize["numFailedRuns"] = o.NumFailedRuns.Get()
	}
	if o.NumSlaViolations.IsSet() {
		toSerialize["numSlaViolations"] = o.NumSlaViolations.Get()
	}
	if o.NumSuccessfulRuns.IsSet() {
		toSerialize["numSuccessfulRuns"] = o.NumSuccessfulRuns.Get()
	}
	if o.SlowestRunTimeUsecs.IsSet() {
		toSerialize["slowestRunTimeUsecs"] = o.SlowestRunTimeUsecs.Get()
	}
	if o.TotalBytesReadFromSource.IsSet() {
		toSerialize["totalBytesReadFromSource"] = o.TotalBytesReadFromSource.Get()
	}
	if o.TotalLogicalBackupSizeBytes.IsSet() {
		toSerialize["totalLogicalBackupSizeBytes"] = o.TotalLogicalBackupSizeBytes.Get()
	}
	if o.TotalPhysicalBackupSizeBytes.IsSet() {
		toSerialize["totalPhysicalBackupSizeBytes"] = o.TotalPhysicalBackupSizeBytes.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProtectionJobSummaryStats struct {
	value *ProtectionJobSummaryStats
	isSet bool
}

func (v NullableProtectionJobSummaryStats) Get() *ProtectionJobSummaryStats {
	return v.value
}

func (v *NullableProtectionJobSummaryStats) Set(val *ProtectionJobSummaryStats) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionJobSummaryStats) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionJobSummaryStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionJobSummaryStats(val *ProtectionJobSummaryStats) *NullableProtectionJobSummaryStats {
	return &NullableProtectionJobSummaryStats{value: val, isSet: true}
}

func (v NullableProtectionJobSummaryStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionJobSummaryStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


