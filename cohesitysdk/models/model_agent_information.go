/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// AgentInformation Specifies information about the Agent software running on the server or the Virtual Machine.
type AgentInformation struct {
	// Specifies the version if Cristie BMR product is installed on the host.
	CbmrVersion NullableString `json:"cbmrVersion,omitempty"`
	// Specifies the host type where the agent is running. This is only set for persistent agents. 'kLinux' indicates the Linux operating system. 'kWindows' indicates the Microsoft Windows operating system. 'kAix' indicates the IBM AIX operating system. 'kSolaris' indicates the Oracle Solaris operating system. 'kSapHana' indicates the Sap Hana database system developed by SAP SE. 'kOther' indicates the other types of operating system.
	HostType NullableString `json:"hostType,omitempty"`
	// Specifies the agent's id.
	Id NullableInt64 `json:"id,omitempty"`
	// Specifies the agent's name.
	Name NullableString `json:"name,omitempty"`
	// Specifies whether oracle multi node multi channel is supported or not.
	OracleMultiNodeChannelSupported NullableBool `json:"oracleMultiNodeChannelSupported,omitempty"`
	RegistrationInfo *RegisteredSourceInfo `json:"registrationInfo,omitempty"`
	// Specifies whether source side dedup is enabled or not.
	SourceSideDedupEnabled NullableBool `json:"sourceSideDedupEnabled,omitempty"`
	// Specifies the agent status. Specifies the status of the agent running on a physical source. 'kUnknown' indicates the Agent is not known. No attempt to connect to the Agent has occurred. 'kUnreachable' indicates the Agent is not reachable. 'kHealthy' indicates the Agent is healthy. 'kDegraded' indicates the Agent is running but in a degraded state.
	Status NullableString `json:"status,omitempty"`
	// Specifies additional details about the agent status.
	StatusMessage NullableString `json:"statusMessage,omitempty"`
	// Specifies the upgradability of the agent running on the physical server. Specifies the upgradability of the agent running on the physical server. 'kUpgradable' indicates the Agent can be upgraded to the agent software version on the cluster. 'kCurrent' indicates the Agent is running the latest version. 'kUnknown' indicates the Agent's version is not known. 'kNonUpgradableInvalidVersion' indicates the Agent's version is invalid. 'kNonUpgradableAgentIsNewer' indicates the Agent's version is newer than the agent software version the cluster. 'kNonUpgradableAgentIsOld' indicates the Agent's version is too old that does not support upgrades.
	Upgradability NullableString `json:"upgradability,omitempty"`
	// Specifies the status of the upgrade of the agent on a physical server. Specifies the status of the upgrade of the agent on a physical server. 'kIdle' indicates there is no agent upgrade in progress. 'kAccepted' indicates the Agent upgrade is accepted. 'kStarted' indicates the Agent upgrade is in progress. 'kFinished' indicates the Agent upgrade is completed.
	UpgradeStatus NullableString `json:"upgradeStatus,omitempty"`
	// Specifies detailed message about the agent upgrade failure. This field is not set for successful upgrade.
	UpgradeStatusMessage NullableString `json:"upgradeStatusMessage,omitempty"`
	// Specifies the version of the Agent software.
	Version NullableString `json:"version,omitempty"`
}

// NewAgentInformation instantiates a new AgentInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentInformation() *AgentInformation {
	this := AgentInformation{}
	return &this
}

// NewAgentInformationWithDefaults instantiates a new AgentInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentInformationWithDefaults() *AgentInformation {
	this := AgentInformation{}
	return &this
}

// GetCbmrVersion returns the CbmrVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentInformation) GetCbmrVersion() string {
	if o == nil || o.CbmrVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.CbmrVersion.Get()
}

// GetCbmrVersionOk returns a tuple with the CbmrVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentInformation) GetCbmrVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CbmrVersion.Get(), o.CbmrVersion.IsSet()
}

// HasCbmrVersion returns a boolean if a field has been set.
func (o *AgentInformation) HasCbmrVersion() bool {
	if o != nil && o.CbmrVersion.IsSet() {
		return true
	}

	return false
}

// SetCbmrVersion gets a reference to the given NullableString and assigns it to the CbmrVersion field.
func (o *AgentInformation) SetCbmrVersion(v string) {
	o.CbmrVersion.Set(&v)
}
// SetCbmrVersionNil sets the value for CbmrVersion to be an explicit nil
func (o *AgentInformation) SetCbmrVersionNil() {
	o.CbmrVersion.Set(nil)
}

// UnsetCbmrVersion ensures that no value is present for CbmrVersion, not even an explicit nil
func (o *AgentInformation) UnsetCbmrVersion() {
	o.CbmrVersion.Unset()
}

// GetHostType returns the HostType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentInformation) GetHostType() string {
	if o == nil || o.HostType.Get() == nil {
		var ret string
		return ret
	}
	return *o.HostType.Get()
}

// GetHostTypeOk returns a tuple with the HostType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentInformation) GetHostTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HostType.Get(), o.HostType.IsSet()
}

// HasHostType returns a boolean if a field has been set.
func (o *AgentInformation) HasHostType() bool {
	if o != nil && o.HostType.IsSet() {
		return true
	}

	return false
}

// SetHostType gets a reference to the given NullableString and assigns it to the HostType field.
func (o *AgentInformation) SetHostType(v string) {
	o.HostType.Set(&v)
}
// SetHostTypeNil sets the value for HostType to be an explicit nil
func (o *AgentInformation) SetHostTypeNil() {
	o.HostType.Set(nil)
}

// UnsetHostType ensures that no value is present for HostType, not even an explicit nil
func (o *AgentInformation) UnsetHostType() {
	o.HostType.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentInformation) GetId() int64 {
	if o == nil || o.Id.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentInformation) GetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *AgentInformation) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt64 and assigns it to the Id field.
func (o *AgentInformation) SetId(v int64) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *AgentInformation) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *AgentInformation) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentInformation) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentInformation) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AgentInformation) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AgentInformation) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *AgentInformation) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AgentInformation) UnsetName() {
	o.Name.Unset()
}

// GetOracleMultiNodeChannelSupported returns the OracleMultiNodeChannelSupported field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentInformation) GetOracleMultiNodeChannelSupported() bool {
	if o == nil || o.OracleMultiNodeChannelSupported.Get() == nil {
		var ret bool
		return ret
	}
	return *o.OracleMultiNodeChannelSupported.Get()
}

// GetOracleMultiNodeChannelSupportedOk returns a tuple with the OracleMultiNodeChannelSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentInformation) GetOracleMultiNodeChannelSupportedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OracleMultiNodeChannelSupported.Get(), o.OracleMultiNodeChannelSupported.IsSet()
}

// HasOracleMultiNodeChannelSupported returns a boolean if a field has been set.
func (o *AgentInformation) HasOracleMultiNodeChannelSupported() bool {
	if o != nil && o.OracleMultiNodeChannelSupported.IsSet() {
		return true
	}

	return false
}

// SetOracleMultiNodeChannelSupported gets a reference to the given NullableBool and assigns it to the OracleMultiNodeChannelSupported field.
func (o *AgentInformation) SetOracleMultiNodeChannelSupported(v bool) {
	o.OracleMultiNodeChannelSupported.Set(&v)
}
// SetOracleMultiNodeChannelSupportedNil sets the value for OracleMultiNodeChannelSupported to be an explicit nil
func (o *AgentInformation) SetOracleMultiNodeChannelSupportedNil() {
	o.OracleMultiNodeChannelSupported.Set(nil)
}

// UnsetOracleMultiNodeChannelSupported ensures that no value is present for OracleMultiNodeChannelSupported, not even an explicit nil
func (o *AgentInformation) UnsetOracleMultiNodeChannelSupported() {
	o.OracleMultiNodeChannelSupported.Unset()
}

// GetRegistrationInfo returns the RegistrationInfo field value if set, zero value otherwise.
func (o *AgentInformation) GetRegistrationInfo() RegisteredSourceInfo {
	if o == nil || o.RegistrationInfo == nil {
		var ret RegisteredSourceInfo
		return ret
	}
	return *o.RegistrationInfo
}

// GetRegistrationInfoOk returns a tuple with the RegistrationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentInformation) GetRegistrationInfoOk() (*RegisteredSourceInfo, bool) {
	if o == nil || o.RegistrationInfo == nil {
		return nil, false
	}
	return o.RegistrationInfo, true
}

// HasRegistrationInfo returns a boolean if a field has been set.
func (o *AgentInformation) HasRegistrationInfo() bool {
	if o != nil && o.RegistrationInfo != nil {
		return true
	}

	return false
}

// SetRegistrationInfo gets a reference to the given RegisteredSourceInfo and assigns it to the RegistrationInfo field.
func (o *AgentInformation) SetRegistrationInfo(v RegisteredSourceInfo) {
	o.RegistrationInfo = &v
}

// GetSourceSideDedupEnabled returns the SourceSideDedupEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentInformation) GetSourceSideDedupEnabled() bool {
	if o == nil || o.SourceSideDedupEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.SourceSideDedupEnabled.Get()
}

// GetSourceSideDedupEnabledOk returns a tuple with the SourceSideDedupEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentInformation) GetSourceSideDedupEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceSideDedupEnabled.Get(), o.SourceSideDedupEnabled.IsSet()
}

// HasSourceSideDedupEnabled returns a boolean if a field has been set.
func (o *AgentInformation) HasSourceSideDedupEnabled() bool {
	if o != nil && o.SourceSideDedupEnabled.IsSet() {
		return true
	}

	return false
}

// SetSourceSideDedupEnabled gets a reference to the given NullableBool and assigns it to the SourceSideDedupEnabled field.
func (o *AgentInformation) SetSourceSideDedupEnabled(v bool) {
	o.SourceSideDedupEnabled.Set(&v)
}
// SetSourceSideDedupEnabledNil sets the value for SourceSideDedupEnabled to be an explicit nil
func (o *AgentInformation) SetSourceSideDedupEnabledNil() {
	o.SourceSideDedupEnabled.Set(nil)
}

// UnsetSourceSideDedupEnabled ensures that no value is present for SourceSideDedupEnabled, not even an explicit nil
func (o *AgentInformation) UnsetSourceSideDedupEnabled() {
	o.SourceSideDedupEnabled.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentInformation) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentInformation) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *AgentInformation) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *AgentInformation) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *AgentInformation) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *AgentInformation) UnsetStatus() {
	o.Status.Unset()
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentInformation) GetStatusMessage() string {
	if o == nil || o.StatusMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.StatusMessage.Get()
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentInformation) GetStatusMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StatusMessage.Get(), o.StatusMessage.IsSet()
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *AgentInformation) HasStatusMessage() bool {
	if o != nil && o.StatusMessage.IsSet() {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given NullableString and assigns it to the StatusMessage field.
func (o *AgentInformation) SetStatusMessage(v string) {
	o.StatusMessage.Set(&v)
}
// SetStatusMessageNil sets the value for StatusMessage to be an explicit nil
func (o *AgentInformation) SetStatusMessageNil() {
	o.StatusMessage.Set(nil)
}

// UnsetStatusMessage ensures that no value is present for StatusMessage, not even an explicit nil
func (o *AgentInformation) UnsetStatusMessage() {
	o.StatusMessage.Unset()
}

// GetUpgradability returns the Upgradability field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentInformation) GetUpgradability() string {
	if o == nil || o.Upgradability.Get() == nil {
		var ret string
		return ret
	}
	return *o.Upgradability.Get()
}

// GetUpgradabilityOk returns a tuple with the Upgradability field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentInformation) GetUpgradabilityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Upgradability.Get(), o.Upgradability.IsSet()
}

// HasUpgradability returns a boolean if a field has been set.
func (o *AgentInformation) HasUpgradability() bool {
	if o != nil && o.Upgradability.IsSet() {
		return true
	}

	return false
}

// SetUpgradability gets a reference to the given NullableString and assigns it to the Upgradability field.
func (o *AgentInformation) SetUpgradability(v string) {
	o.Upgradability.Set(&v)
}
// SetUpgradabilityNil sets the value for Upgradability to be an explicit nil
func (o *AgentInformation) SetUpgradabilityNil() {
	o.Upgradability.Set(nil)
}

// UnsetUpgradability ensures that no value is present for Upgradability, not even an explicit nil
func (o *AgentInformation) UnsetUpgradability() {
	o.Upgradability.Unset()
}

// GetUpgradeStatus returns the UpgradeStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentInformation) GetUpgradeStatus() string {
	if o == nil || o.UpgradeStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.UpgradeStatus.Get()
}

// GetUpgradeStatusOk returns a tuple with the UpgradeStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentInformation) GetUpgradeStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpgradeStatus.Get(), o.UpgradeStatus.IsSet()
}

// HasUpgradeStatus returns a boolean if a field has been set.
func (o *AgentInformation) HasUpgradeStatus() bool {
	if o != nil && o.UpgradeStatus.IsSet() {
		return true
	}

	return false
}

// SetUpgradeStatus gets a reference to the given NullableString and assigns it to the UpgradeStatus field.
func (o *AgentInformation) SetUpgradeStatus(v string) {
	o.UpgradeStatus.Set(&v)
}
// SetUpgradeStatusNil sets the value for UpgradeStatus to be an explicit nil
func (o *AgentInformation) SetUpgradeStatusNil() {
	o.UpgradeStatus.Set(nil)
}

// UnsetUpgradeStatus ensures that no value is present for UpgradeStatus, not even an explicit nil
func (o *AgentInformation) UnsetUpgradeStatus() {
	o.UpgradeStatus.Unset()
}

// GetUpgradeStatusMessage returns the UpgradeStatusMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentInformation) GetUpgradeStatusMessage() string {
	if o == nil || o.UpgradeStatusMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.UpgradeStatusMessage.Get()
}

// GetUpgradeStatusMessageOk returns a tuple with the UpgradeStatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentInformation) GetUpgradeStatusMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpgradeStatusMessage.Get(), o.UpgradeStatusMessage.IsSet()
}

// HasUpgradeStatusMessage returns a boolean if a field has been set.
func (o *AgentInformation) HasUpgradeStatusMessage() bool {
	if o != nil && o.UpgradeStatusMessage.IsSet() {
		return true
	}

	return false
}

// SetUpgradeStatusMessage gets a reference to the given NullableString and assigns it to the UpgradeStatusMessage field.
func (o *AgentInformation) SetUpgradeStatusMessage(v string) {
	o.UpgradeStatusMessage.Set(&v)
}
// SetUpgradeStatusMessageNil sets the value for UpgradeStatusMessage to be an explicit nil
func (o *AgentInformation) SetUpgradeStatusMessageNil() {
	o.UpgradeStatusMessage.Set(nil)
}

// UnsetUpgradeStatusMessage ensures that no value is present for UpgradeStatusMessage, not even an explicit nil
func (o *AgentInformation) UnsetUpgradeStatusMessage() {
	o.UpgradeStatusMessage.Unset()
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentInformation) GetVersion() string {
	if o == nil || o.Version.Get() == nil {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentInformation) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *AgentInformation) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *AgentInformation) SetVersion(v string) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *AgentInformation) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *AgentInformation) UnsetVersion() {
	o.Version.Unset()
}

func (o AgentInformation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CbmrVersion.IsSet() {
		toSerialize["cbmrVersion"] = o.CbmrVersion.Get()
	}
	if o.HostType.IsSet() {
		toSerialize["hostType"] = o.HostType.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.OracleMultiNodeChannelSupported.IsSet() {
		toSerialize["oracleMultiNodeChannelSupported"] = o.OracleMultiNodeChannelSupported.Get()
	}
	if o.RegistrationInfo != nil {
		toSerialize["registrationInfo"] = o.RegistrationInfo
	}
	if o.SourceSideDedupEnabled.IsSet() {
		toSerialize["sourceSideDedupEnabled"] = o.SourceSideDedupEnabled.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.StatusMessage.IsSet() {
		toSerialize["statusMessage"] = o.StatusMessage.Get()
	}
	if o.Upgradability.IsSet() {
		toSerialize["upgradability"] = o.Upgradability.Get()
	}
	if o.UpgradeStatus.IsSet() {
		toSerialize["upgradeStatus"] = o.UpgradeStatus.Get()
	}
	if o.UpgradeStatusMessage.IsSet() {
		toSerialize["upgradeStatusMessage"] = o.UpgradeStatusMessage.Get()
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAgentInformation struct {
	value *AgentInformation
	isSet bool
}

func (v NullableAgentInformation) Get() *AgentInformation {
	return v.value
}

func (v *NullableAgentInformation) Set(val *AgentInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentInformation(val *AgentInformation) *NullableAgentInformation {
	return &NullableAgentInformation{value: val, isSet: true}
}

func (v NullableAgentInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


