/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// HiveBackupJobParams Contains any additional hive environment specific backup params at the job level.
type HiveBackupJobParams struct {
	HdfsConnectParams *HdfsConnectParams `json:"hdfsConnectParams,omitempty"`
}

// NewHiveBackupJobParams instantiates a new HiveBackupJobParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHiveBackupJobParams() *HiveBackupJobParams {
	this := HiveBackupJobParams{}
	return &this
}

// NewHiveBackupJobParamsWithDefaults instantiates a new HiveBackupJobParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHiveBackupJobParamsWithDefaults() *HiveBackupJobParams {
	this := HiveBackupJobParams{}
	return &this
}

// GetHdfsConnectParams returns the HdfsConnectParams field value if set, zero value otherwise.
func (o *HiveBackupJobParams) GetHdfsConnectParams() HdfsConnectParams {
	if o == nil || o.HdfsConnectParams == nil {
		var ret HdfsConnectParams
		return ret
	}
	return *o.HdfsConnectParams
}

// GetHdfsConnectParamsOk returns a tuple with the HdfsConnectParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HiveBackupJobParams) GetHdfsConnectParamsOk() (*HdfsConnectParams, bool) {
	if o == nil || o.HdfsConnectParams == nil {
		return nil, false
	}
	return o.HdfsConnectParams, true
}

// HasHdfsConnectParams returns a boolean if a field has been set.
func (o *HiveBackupJobParams) HasHdfsConnectParams() bool {
	if o != nil && o.HdfsConnectParams != nil {
		return true
	}

	return false
}

// SetHdfsConnectParams gets a reference to the given HdfsConnectParams and assigns it to the HdfsConnectParams field.
func (o *HiveBackupJobParams) SetHdfsConnectParams(v HdfsConnectParams) {
	o.HdfsConnectParams = &v
}

func (o HiveBackupJobParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HdfsConnectParams != nil {
		toSerialize["hdfsConnectParams"] = o.HdfsConnectParams
	}
	return json.Marshal(toSerialize)
}

type NullableHiveBackupJobParams struct {
	value *HiveBackupJobParams
	isSet bool
}

func (v NullableHiveBackupJobParams) Get() *HiveBackupJobParams {
	return v.value
}

func (v *NullableHiveBackupJobParams) Set(val *HiveBackupJobParams) {
	v.value = val
	v.isSet = true
}

func (v NullableHiveBackupJobParams) IsSet() bool {
	return v.isSet
}

func (v *NullableHiveBackupJobParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHiveBackupJobParams(val *HiveBackupJobParams) *NullableHiveBackupJobParams {
	return &NullableHiveBackupJobParams{value: val, isSet: true}
}

func (v NullableHiveBackupJobParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHiveBackupJobParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


