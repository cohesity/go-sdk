/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// AuditLogsTile Audit logs for Dashboard.
type AuditLogsTile struct {
	// Array of Cluster Audit Logs.  Specifies a list of Cluster audit logs that match the specified filter criteria up to the limit specified in pageCount.
	ClusterAuditLogs []ClusterAuditLog `json:"clusterAuditLogs,omitempty"`
	// Specifies the total number of logs that match the specified filter criteria. (This number might be larger than the size of the Cluster Audit Logs array.) This count is provided to indicate if additional requests must be made to get the full result.
	TotalCount NullableInt64 `json:"totalCount,omitempty"`
}

// NewAuditLogsTile instantiates a new AuditLogsTile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogsTile() *AuditLogsTile {
	this := AuditLogsTile{}
	return &this
}

// NewAuditLogsTileWithDefaults instantiates a new AuditLogsTile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogsTileWithDefaults() *AuditLogsTile {
	this := AuditLogsTile{}
	return &this
}

// GetClusterAuditLogs returns the ClusterAuditLogs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuditLogsTile) GetClusterAuditLogs() []ClusterAuditLog {
	if o == nil  {
		var ret []ClusterAuditLog
		return ret
	}
	return o.ClusterAuditLogs
}

// GetClusterAuditLogsOk returns a tuple with the ClusterAuditLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuditLogsTile) GetClusterAuditLogsOk() (*[]ClusterAuditLog, bool) {
	if o == nil || o.ClusterAuditLogs == nil {
		return nil, false
	}
	return &o.ClusterAuditLogs, true
}

// HasClusterAuditLogs returns a boolean if a field has been set.
func (o *AuditLogsTile) HasClusterAuditLogs() bool {
	if o != nil && o.ClusterAuditLogs != nil {
		return true
	}

	return false
}

// SetClusterAuditLogs gets a reference to the given []ClusterAuditLog and assigns it to the ClusterAuditLogs field.
func (o *AuditLogsTile) SetClusterAuditLogs(v []ClusterAuditLog) {
	o.ClusterAuditLogs = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuditLogsTile) GetTotalCount() int64 {
	if o == nil || o.TotalCount.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalCount.Get()
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuditLogsTile) GetTotalCountOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalCount.Get(), o.TotalCount.IsSet()
}

// HasTotalCount returns a boolean if a field has been set.
func (o *AuditLogsTile) HasTotalCount() bool {
	if o != nil && o.TotalCount.IsSet() {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given NullableInt64 and assigns it to the TotalCount field.
func (o *AuditLogsTile) SetTotalCount(v int64) {
	o.TotalCount.Set(&v)
}
// SetTotalCountNil sets the value for TotalCount to be an explicit nil
func (o *AuditLogsTile) SetTotalCountNil() {
	o.TotalCount.Set(nil)
}

// UnsetTotalCount ensures that no value is present for TotalCount, not even an explicit nil
func (o *AuditLogsTile) UnsetTotalCount() {
	o.TotalCount.Unset()
}

func (o AuditLogsTile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterAuditLogs != nil {
		toSerialize["clusterAuditLogs"] = o.ClusterAuditLogs
	}
	if o.TotalCount.IsSet() {
		toSerialize["totalCount"] = o.TotalCount.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAuditLogsTile struct {
	value *AuditLogsTile
	isSet bool
}

func (v NullableAuditLogsTile) Get() *AuditLogsTile {
	return v.value
}

func (v *NullableAuditLogsTile) Set(val *AuditLogsTile) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogsTile) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogsTile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogsTile(val *AuditLogsTile) *NullableAuditLogsTile {
	return &NullableAuditLogsTile{value: val, isSet: true}
}

func (v NullableAuditLogsTile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogsTile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


