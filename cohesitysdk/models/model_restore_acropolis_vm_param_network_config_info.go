/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// RestoreAcropolisVMParamNetworkConfigInfo Proto to define the network configuration to be applied to the restored VM.
type RestoreAcropolisVMParamNetworkConfigInfo struct {
	// Network state to be applied to the restored VM.
	NetworkStateChange NullableInt32 `json:"networkStateChange,omitempty"`
	// This field is applicable only if the network_state_change is set to 'kAttachNewNetwork'.
	NicVec []RestoreAcropolisVMParamNetworkConfigInfoNICSpec `json:"nicVec,omitempty"`
}

// NewRestoreAcropolisVMParamNetworkConfigInfo instantiates a new RestoreAcropolisVMParamNetworkConfigInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreAcropolisVMParamNetworkConfigInfo() *RestoreAcropolisVMParamNetworkConfigInfo {
	this := RestoreAcropolisVMParamNetworkConfigInfo{}
	return &this
}

// NewRestoreAcropolisVMParamNetworkConfigInfoWithDefaults instantiates a new RestoreAcropolisVMParamNetworkConfigInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreAcropolisVMParamNetworkConfigInfoWithDefaults() *RestoreAcropolisVMParamNetworkConfigInfo {
	this := RestoreAcropolisVMParamNetworkConfigInfo{}
	return &this
}

// GetNetworkStateChange returns the NetworkStateChange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreAcropolisVMParamNetworkConfigInfo) GetNetworkStateChange() int32 {
	if o == nil || o.NetworkStateChange.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NetworkStateChange.Get()
}

// GetNetworkStateChangeOk returns a tuple with the NetworkStateChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreAcropolisVMParamNetworkConfigInfo) GetNetworkStateChangeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkStateChange.Get(), o.NetworkStateChange.IsSet()
}

// HasNetworkStateChange returns a boolean if a field has been set.
func (o *RestoreAcropolisVMParamNetworkConfigInfo) HasNetworkStateChange() bool {
	if o != nil && o.NetworkStateChange.IsSet() {
		return true
	}

	return false
}

// SetNetworkStateChange gets a reference to the given NullableInt32 and assigns it to the NetworkStateChange field.
func (o *RestoreAcropolisVMParamNetworkConfigInfo) SetNetworkStateChange(v int32) {
	o.NetworkStateChange.Set(&v)
}
// SetNetworkStateChangeNil sets the value for NetworkStateChange to be an explicit nil
func (o *RestoreAcropolisVMParamNetworkConfigInfo) SetNetworkStateChangeNil() {
	o.NetworkStateChange.Set(nil)
}

// UnsetNetworkStateChange ensures that no value is present for NetworkStateChange, not even an explicit nil
func (o *RestoreAcropolisVMParamNetworkConfigInfo) UnsetNetworkStateChange() {
	o.NetworkStateChange.Unset()
}

// GetNicVec returns the NicVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreAcropolisVMParamNetworkConfigInfo) GetNicVec() []RestoreAcropolisVMParamNetworkConfigInfoNICSpec {
	if o == nil  {
		var ret []RestoreAcropolisVMParamNetworkConfigInfoNICSpec
		return ret
	}
	return o.NicVec
}

// GetNicVecOk returns a tuple with the NicVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreAcropolisVMParamNetworkConfigInfo) GetNicVecOk() (*[]RestoreAcropolisVMParamNetworkConfigInfoNICSpec, bool) {
	if o == nil || o.NicVec == nil {
		return nil, false
	}
	return &o.NicVec, true
}

// HasNicVec returns a boolean if a field has been set.
func (o *RestoreAcropolisVMParamNetworkConfigInfo) HasNicVec() bool {
	if o != nil && o.NicVec != nil {
		return true
	}

	return false
}

// SetNicVec gets a reference to the given []RestoreAcropolisVMParamNetworkConfigInfoNICSpec and assigns it to the NicVec field.
func (o *RestoreAcropolisVMParamNetworkConfigInfo) SetNicVec(v []RestoreAcropolisVMParamNetworkConfigInfoNICSpec) {
	o.NicVec = v
}

func (o RestoreAcropolisVMParamNetworkConfigInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkStateChange.IsSet() {
		toSerialize["networkStateChange"] = o.NetworkStateChange.Get()
	}
	if o.NicVec != nil {
		toSerialize["nicVec"] = o.NicVec
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreAcropolisVMParamNetworkConfigInfo struct {
	value *RestoreAcropolisVMParamNetworkConfigInfo
	isSet bool
}

func (v NullableRestoreAcropolisVMParamNetworkConfigInfo) Get() *RestoreAcropolisVMParamNetworkConfigInfo {
	return v.value
}

func (v *NullableRestoreAcropolisVMParamNetworkConfigInfo) Set(val *RestoreAcropolisVMParamNetworkConfigInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreAcropolisVMParamNetworkConfigInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreAcropolisVMParamNetworkConfigInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreAcropolisVMParamNetworkConfigInfo(val *RestoreAcropolisVMParamNetworkConfigInfo) *NullableRestoreAcropolisVMParamNetworkConfigInfo {
	return &NullableRestoreAcropolisVMParamNetworkConfigInfo{value: val, isSet: true}
}

func (v NullableRestoreAcropolisVMParamNetworkConfigInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreAcropolisVMParamNetworkConfigInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


