/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// MountVolumeResultDetails Specifies the result of mounting an individual mount volume in a Restore Task.
type MountVolumeResultDetails struct {
	// Specifies the cause of the mount failure if the mounting of a volume failed.
	MountError NullableRequestError `json:"mountError,omitempty"`
	// Specifies the mount point where the volume is mounted. NOTE: This field may not be populated for VM environments if the onlining of disks is not requested or there was any issue during onlining.
	MountPoint NullableString `json:"mountPoint,omitempty"`
	// Specifies the name of the original volume.
	VolumeName NullableString `json:"volumeName,omitempty"`
}

// NewMountVolumeResultDetails instantiates a new MountVolumeResultDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMountVolumeResultDetails() *MountVolumeResultDetails {
	this := MountVolumeResultDetails{}
	return &this
}

// NewMountVolumeResultDetailsWithDefaults instantiates a new MountVolumeResultDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMountVolumeResultDetailsWithDefaults() *MountVolumeResultDetails {
	this := MountVolumeResultDetails{}
	return &this
}

// GetMountError returns the MountError field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MountVolumeResultDetails) GetMountError() RequestError {
	if o == nil || o.MountError.Get() == nil {
		var ret RequestError
		return ret
	}
	return *o.MountError.Get()
}

// GetMountErrorOk returns a tuple with the MountError field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MountVolumeResultDetails) GetMountErrorOk() (*RequestError, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MountError.Get(), o.MountError.IsSet()
}

// HasMountError returns a boolean if a field has been set.
func (o *MountVolumeResultDetails) HasMountError() bool {
	if o != nil && o.MountError.IsSet() {
		return true
	}

	return false
}

// SetMountError gets a reference to the given NullableRequestError and assigns it to the MountError field.
func (o *MountVolumeResultDetails) SetMountError(v RequestError) {
	o.MountError.Set(&v)
}
// SetMountErrorNil sets the value for MountError to be an explicit nil
func (o *MountVolumeResultDetails) SetMountErrorNil() {
	o.MountError.Set(nil)
}

// UnsetMountError ensures that no value is present for MountError, not even an explicit nil
func (o *MountVolumeResultDetails) UnsetMountError() {
	o.MountError.Unset()
}

// GetMountPoint returns the MountPoint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MountVolumeResultDetails) GetMountPoint() string {
	if o == nil || o.MountPoint.Get() == nil {
		var ret string
		return ret
	}
	return *o.MountPoint.Get()
}

// GetMountPointOk returns a tuple with the MountPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MountVolumeResultDetails) GetMountPointOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MountPoint.Get(), o.MountPoint.IsSet()
}

// HasMountPoint returns a boolean if a field has been set.
func (o *MountVolumeResultDetails) HasMountPoint() bool {
	if o != nil && o.MountPoint.IsSet() {
		return true
	}

	return false
}

// SetMountPoint gets a reference to the given NullableString and assigns it to the MountPoint field.
func (o *MountVolumeResultDetails) SetMountPoint(v string) {
	o.MountPoint.Set(&v)
}
// SetMountPointNil sets the value for MountPoint to be an explicit nil
func (o *MountVolumeResultDetails) SetMountPointNil() {
	o.MountPoint.Set(nil)
}

// UnsetMountPoint ensures that no value is present for MountPoint, not even an explicit nil
func (o *MountVolumeResultDetails) UnsetMountPoint() {
	o.MountPoint.Unset()
}

// GetVolumeName returns the VolumeName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MountVolumeResultDetails) GetVolumeName() string {
	if o == nil || o.VolumeName.Get() == nil {
		var ret string
		return ret
	}
	return *o.VolumeName.Get()
}

// GetVolumeNameOk returns a tuple with the VolumeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MountVolumeResultDetails) GetVolumeNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VolumeName.Get(), o.VolumeName.IsSet()
}

// HasVolumeName returns a boolean if a field has been set.
func (o *MountVolumeResultDetails) HasVolumeName() bool {
	if o != nil && o.VolumeName.IsSet() {
		return true
	}

	return false
}

// SetVolumeName gets a reference to the given NullableString and assigns it to the VolumeName field.
func (o *MountVolumeResultDetails) SetVolumeName(v string) {
	o.VolumeName.Set(&v)
}
// SetVolumeNameNil sets the value for VolumeName to be an explicit nil
func (o *MountVolumeResultDetails) SetVolumeNameNil() {
	o.VolumeName.Set(nil)
}

// UnsetVolumeName ensures that no value is present for VolumeName, not even an explicit nil
func (o *MountVolumeResultDetails) UnsetVolumeName() {
	o.VolumeName.Unset()
}

func (o MountVolumeResultDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MountError.IsSet() {
		toSerialize["mountError"] = o.MountError.Get()
	}
	if o.MountPoint.IsSet() {
		toSerialize["mountPoint"] = o.MountPoint.Get()
	}
	if o.VolumeName.IsSet() {
		toSerialize["volumeName"] = o.VolumeName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMountVolumeResultDetails struct {
	value *MountVolumeResultDetails
	isSet bool
}

func (v NullableMountVolumeResultDetails) Get() *MountVolumeResultDetails {
	return v.value
}

func (v *NullableMountVolumeResultDetails) Set(val *MountVolumeResultDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableMountVolumeResultDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableMountVolumeResultDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMountVolumeResultDetails(val *MountVolumeResultDetails) *NullableMountVolumeResultDetails {
	return &NullableMountVolumeResultDetails{value: val, isSet: true}
}

func (v NullableMountVolumeResultDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMountVolumeResultDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


