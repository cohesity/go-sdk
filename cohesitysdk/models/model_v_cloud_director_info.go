/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// VCloudDirectorInfo struct for VCloudDirectorInfo
type VCloudDirectorInfo struct {
	// vCenter endpoint.
	Endpoint NullableString `json:"endpoint,omitempty"`
	// vCenter name.
	Name NullableString `json:"name,omitempty"`
}

// NewVCloudDirectorInfo instantiates a new VCloudDirectorInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVCloudDirectorInfo() *VCloudDirectorInfo {
	this := VCloudDirectorInfo{}
	return &this
}

// NewVCloudDirectorInfoWithDefaults instantiates a new VCloudDirectorInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVCloudDirectorInfoWithDefaults() *VCloudDirectorInfo {
	this := VCloudDirectorInfo{}
	return &this
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VCloudDirectorInfo) GetEndpoint() string {
	if o == nil || o.Endpoint.Get() == nil {
		var ret string
		return ret
	}
	return *o.Endpoint.Get()
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VCloudDirectorInfo) GetEndpointOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Endpoint.Get(), o.Endpoint.IsSet()
}

// HasEndpoint returns a boolean if a field has been set.
func (o *VCloudDirectorInfo) HasEndpoint() bool {
	if o != nil && o.Endpoint.IsSet() {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given NullableString and assigns it to the Endpoint field.
func (o *VCloudDirectorInfo) SetEndpoint(v string) {
	o.Endpoint.Set(&v)
}
// SetEndpointNil sets the value for Endpoint to be an explicit nil
func (o *VCloudDirectorInfo) SetEndpointNil() {
	o.Endpoint.Set(nil)
}

// UnsetEndpoint ensures that no value is present for Endpoint, not even an explicit nil
func (o *VCloudDirectorInfo) UnsetEndpoint() {
	o.Endpoint.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VCloudDirectorInfo) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VCloudDirectorInfo) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *VCloudDirectorInfo) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *VCloudDirectorInfo) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *VCloudDirectorInfo) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *VCloudDirectorInfo) UnsetName() {
	o.Name.Unset()
}

func (o VCloudDirectorInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Endpoint.IsSet() {
		toSerialize["endpoint"] = o.Endpoint.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableVCloudDirectorInfo struct {
	value *VCloudDirectorInfo
	isSet bool
}

func (v NullableVCloudDirectorInfo) Get() *VCloudDirectorInfo {
	return v.value
}

func (v *NullableVCloudDirectorInfo) Set(val *VCloudDirectorInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVCloudDirectorInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVCloudDirectorInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVCloudDirectorInfo(val *VCloudDirectorInfo) *NullableVCloudDirectorInfo {
	return &NullableVCloudDirectorInfo{value: val, isSet: true}
}

func (v NullableVCloudDirectorInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVCloudDirectorInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


