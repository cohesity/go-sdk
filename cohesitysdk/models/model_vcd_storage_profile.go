/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// VcdStorageProfile Specifies a storage profile for use while recovering to a VMware VCD.
type VcdStorageProfile struct {
	// Specifies the name of the storage profile.
	Name NullableString `json:"name,omitempty"`
	// Specifies the UUID of the storage profile as identified by the VCD.
	Uuid NullableString `json:"uuid,omitempty"`
}

// NewVcdStorageProfile instantiates a new VcdStorageProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcdStorageProfile() *VcdStorageProfile {
	this := VcdStorageProfile{}
	return &this
}

// NewVcdStorageProfileWithDefaults instantiates a new VcdStorageProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcdStorageProfileWithDefaults() *VcdStorageProfile {
	this := VcdStorageProfile{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VcdStorageProfile) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VcdStorageProfile) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *VcdStorageProfile) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *VcdStorageProfile) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *VcdStorageProfile) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *VcdStorageProfile) UnsetName() {
	o.Name.Unset()
}

// GetUuid returns the Uuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VcdStorageProfile) GetUuid() string {
	if o == nil || o.Uuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uuid.Get()
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VcdStorageProfile) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Uuid.Get(), o.Uuid.IsSet()
}

// HasUuid returns a boolean if a field has been set.
func (o *VcdStorageProfile) HasUuid() bool {
	if o != nil && o.Uuid.IsSet() {
		return true
	}

	return false
}

// SetUuid gets a reference to the given NullableString and assigns it to the Uuid field.
func (o *VcdStorageProfile) SetUuid(v string) {
	o.Uuid.Set(&v)
}
// SetUuidNil sets the value for Uuid to be an explicit nil
func (o *VcdStorageProfile) SetUuidNil() {
	o.Uuid.Set(nil)
}

// UnsetUuid ensures that no value is present for Uuid, not even an explicit nil
func (o *VcdStorageProfile) UnsetUuid() {
	o.Uuid.Unset()
}

func (o VcdStorageProfile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Uuid.IsSet() {
		toSerialize["uuid"] = o.Uuid.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableVcdStorageProfile struct {
	value *VcdStorageProfile
	isSet bool
}

func (v NullableVcdStorageProfile) Get() *VcdStorageProfile {
	return v.value
}

func (v *NullableVcdStorageProfile) Set(val *VcdStorageProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableVcdStorageProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableVcdStorageProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcdStorageProfile(val *VcdStorageProfile) *NullableVcdStorageProfile {
	return &NullableVcdStorageProfile{value: val, isSet: true}
}

func (v NullableVcdStorageProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcdStorageProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


