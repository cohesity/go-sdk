/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// RestorePointsForTimeRange Specifies the info returned by Magneto RestorePointsForTimeRange API.
type RestorePointsForTimeRange struct {
	// Specifies the info related to the recovery object.
	FullSnapshotInfo []FullSnapshotInfo `json:"fullSnapshotInfo,omitempty"`
	// Specifies the time ranges of the restore object between full snapshots.
	TimeRanges []TimeRangeSettings `json:"timeRanges,omitempty"`
}

// NewRestorePointsForTimeRange instantiates a new RestorePointsForTimeRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestorePointsForTimeRange() *RestorePointsForTimeRange {
	this := RestorePointsForTimeRange{}
	return &this
}

// NewRestorePointsForTimeRangeWithDefaults instantiates a new RestorePointsForTimeRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestorePointsForTimeRangeWithDefaults() *RestorePointsForTimeRange {
	this := RestorePointsForTimeRange{}
	return &this
}

// GetFullSnapshotInfo returns the FullSnapshotInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestorePointsForTimeRange) GetFullSnapshotInfo() []FullSnapshotInfo {
	if o == nil  {
		var ret []FullSnapshotInfo
		return ret
	}
	return o.FullSnapshotInfo
}

// GetFullSnapshotInfoOk returns a tuple with the FullSnapshotInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestorePointsForTimeRange) GetFullSnapshotInfoOk() (*[]FullSnapshotInfo, bool) {
	if o == nil || o.FullSnapshotInfo == nil {
		return nil, false
	}
	return &o.FullSnapshotInfo, true
}

// HasFullSnapshotInfo returns a boolean if a field has been set.
func (o *RestorePointsForTimeRange) HasFullSnapshotInfo() bool {
	if o != nil && o.FullSnapshotInfo != nil {
		return true
	}

	return false
}

// SetFullSnapshotInfo gets a reference to the given []FullSnapshotInfo and assigns it to the FullSnapshotInfo field.
func (o *RestorePointsForTimeRange) SetFullSnapshotInfo(v []FullSnapshotInfo) {
	o.FullSnapshotInfo = v
}

// GetTimeRanges returns the TimeRanges field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestorePointsForTimeRange) GetTimeRanges() []TimeRangeSettings {
	if o == nil  {
		var ret []TimeRangeSettings
		return ret
	}
	return o.TimeRanges
}

// GetTimeRangesOk returns a tuple with the TimeRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestorePointsForTimeRange) GetTimeRangesOk() (*[]TimeRangeSettings, bool) {
	if o == nil || o.TimeRanges == nil {
		return nil, false
	}
	return &o.TimeRanges, true
}

// HasTimeRanges returns a boolean if a field has been set.
func (o *RestorePointsForTimeRange) HasTimeRanges() bool {
	if o != nil && o.TimeRanges != nil {
		return true
	}

	return false
}

// SetTimeRanges gets a reference to the given []TimeRangeSettings and assigns it to the TimeRanges field.
func (o *RestorePointsForTimeRange) SetTimeRanges(v []TimeRangeSettings) {
	o.TimeRanges = v
}

func (o RestorePointsForTimeRange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FullSnapshotInfo != nil {
		toSerialize["fullSnapshotInfo"] = o.FullSnapshotInfo
	}
	if o.TimeRanges != nil {
		toSerialize["timeRanges"] = o.TimeRanges
	}
	return json.Marshal(toSerialize)
}

type NullableRestorePointsForTimeRange struct {
	value *RestorePointsForTimeRange
	isSet bool
}

func (v NullableRestorePointsForTimeRange) Get() *RestorePointsForTimeRange {
	return v.value
}

func (v *NullableRestorePointsForTimeRange) Set(val *RestorePointsForTimeRange) {
	v.value = val
	v.isSet = true
}

func (v NullableRestorePointsForTimeRange) IsSet() bool {
	return v.isSet
}

func (v *NullableRestorePointsForTimeRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestorePointsForTimeRange(val *RestorePointsForTimeRange) *NullableRestorePointsForTimeRange {
	return &NullableRestorePointsForTimeRange{value: val, isSet: true}
}

func (v NullableRestorePointsForTimeRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestorePointsForTimeRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


