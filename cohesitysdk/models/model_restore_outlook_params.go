/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// RestoreOutlookParams struct for RestoreOutlookParams
type RestoreOutlookParams struct {
	// In a RestoreJob , user will provide the list of mailboxes to be restored. Provision is there for restoring full AND partial mailbox recovery.
	MailboxVec []RestoreOutlookParamsMailbox `json:"mailboxVec,omitempty"`
	TargetFolderPath NullableString `json:"targetFolderPath,omitempty"`
	TargetMailbox *EntityProto `json:"targetMailbox,omitempty"`
}

// NewRestoreOutlookParams instantiates a new RestoreOutlookParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreOutlookParams() *RestoreOutlookParams {
	this := RestoreOutlookParams{}
	return &this
}

// NewRestoreOutlookParamsWithDefaults instantiates a new RestoreOutlookParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreOutlookParamsWithDefaults() *RestoreOutlookParams {
	this := RestoreOutlookParams{}
	return &this
}

// GetMailboxVec returns the MailboxVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreOutlookParams) GetMailboxVec() []RestoreOutlookParamsMailbox {
	if o == nil  {
		var ret []RestoreOutlookParamsMailbox
		return ret
	}
	return o.MailboxVec
}

// GetMailboxVecOk returns a tuple with the MailboxVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreOutlookParams) GetMailboxVecOk() (*[]RestoreOutlookParamsMailbox, bool) {
	if o == nil || o.MailboxVec == nil {
		return nil, false
	}
	return &o.MailboxVec, true
}

// HasMailboxVec returns a boolean if a field has been set.
func (o *RestoreOutlookParams) HasMailboxVec() bool {
	if o != nil && o.MailboxVec != nil {
		return true
	}

	return false
}

// SetMailboxVec gets a reference to the given []RestoreOutlookParamsMailbox and assigns it to the MailboxVec field.
func (o *RestoreOutlookParams) SetMailboxVec(v []RestoreOutlookParamsMailbox) {
	o.MailboxVec = v
}

// GetTargetFolderPath returns the TargetFolderPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreOutlookParams) GetTargetFolderPath() string {
	if o == nil || o.TargetFolderPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.TargetFolderPath.Get()
}

// GetTargetFolderPathOk returns a tuple with the TargetFolderPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreOutlookParams) GetTargetFolderPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetFolderPath.Get(), o.TargetFolderPath.IsSet()
}

// HasTargetFolderPath returns a boolean if a field has been set.
func (o *RestoreOutlookParams) HasTargetFolderPath() bool {
	if o != nil && o.TargetFolderPath.IsSet() {
		return true
	}

	return false
}

// SetTargetFolderPath gets a reference to the given NullableString and assigns it to the TargetFolderPath field.
func (o *RestoreOutlookParams) SetTargetFolderPath(v string) {
	o.TargetFolderPath.Set(&v)
}
// SetTargetFolderPathNil sets the value for TargetFolderPath to be an explicit nil
func (o *RestoreOutlookParams) SetTargetFolderPathNil() {
	o.TargetFolderPath.Set(nil)
}

// UnsetTargetFolderPath ensures that no value is present for TargetFolderPath, not even an explicit nil
func (o *RestoreOutlookParams) UnsetTargetFolderPath() {
	o.TargetFolderPath.Unset()
}

// GetTargetMailbox returns the TargetMailbox field value if set, zero value otherwise.
func (o *RestoreOutlookParams) GetTargetMailbox() EntityProto {
	if o == nil || o.TargetMailbox == nil {
		var ret EntityProto
		return ret
	}
	return *o.TargetMailbox
}

// GetTargetMailboxOk returns a tuple with the TargetMailbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreOutlookParams) GetTargetMailboxOk() (*EntityProto, bool) {
	if o == nil || o.TargetMailbox == nil {
		return nil, false
	}
	return o.TargetMailbox, true
}

// HasTargetMailbox returns a boolean if a field has been set.
func (o *RestoreOutlookParams) HasTargetMailbox() bool {
	if o != nil && o.TargetMailbox != nil {
		return true
	}

	return false
}

// SetTargetMailbox gets a reference to the given EntityProto and assigns it to the TargetMailbox field.
func (o *RestoreOutlookParams) SetTargetMailbox(v EntityProto) {
	o.TargetMailbox = &v
}

func (o RestoreOutlookParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MailboxVec != nil {
		toSerialize["mailboxVec"] = o.MailboxVec
	}
	if o.TargetFolderPath.IsSet() {
		toSerialize["targetFolderPath"] = o.TargetFolderPath.Get()
	}
	if o.TargetMailbox != nil {
		toSerialize["targetMailbox"] = o.TargetMailbox
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreOutlookParams struct {
	value *RestoreOutlookParams
	isSet bool
}

func (v NullableRestoreOutlookParams) Get() *RestoreOutlookParams {
	return v.value
}

func (v *NullableRestoreOutlookParams) Set(val *RestoreOutlookParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreOutlookParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreOutlookParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreOutlookParams(val *RestoreOutlookParams) *NullableRestoreOutlookParams {
	return &NullableRestoreOutlookParams{value: val, isSet: true}
}

func (v NullableRestoreOutlookParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreOutlookParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


