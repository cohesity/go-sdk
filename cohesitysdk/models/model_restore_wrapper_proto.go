/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// RestoreWrapperProto If this message is a checkpoint record in WAL-logging or if this message is used to send restore task info back to the user, it will contain the info of the restore job/task and the list of all destroy tasks (only when the record is for a restore task of type clone) associated with it. If this message is delta record, it will contain the state mutation for one of individual restore job, restore task and individual destroy task.
type RestoreWrapperProto struct {
	// For a restore task of type 'Clone', this field contains the info of the destroy task(s).
	DestroyClonedTaskStateVec []DestroyClonedTaskStateProto `json:"destroyClonedTaskStateVec,omitempty"`
	OwnerRestoreWrapperProto *RestoreWrapperProto `json:"ownerRestoreWrapperProto,omitempty"`
	// Contains information of the refresh tasks for a clone
	PerformRefreshTaskStateVec []PerformRestoreTaskStateProto `json:"performRefreshTaskStateVec,omitempty"`
	PerformRestoreJobState *PerformRestoreJobStateProto `json:"performRestoreJobState,omitempty"`
	PerformRestoreTaskState *PerformRestoreTaskStateProto `json:"performRestoreTaskState,omitempty"`
	// If this restore has sub tasks, the following field will get populated with the wrapper proto of all of its sub-tasks.  Note that this field is only populated for Iris in response to 'GetRestoreTasksArg' RPC. It is not persisted in Magneto's WAL.  List of environments that use this field: kSQL : Used for multi-stage SQL restore that supports a hot-standy.
	RestoreSubTaskWrapperProtoVec []map[string]interface{} `json:"restoreSubTaskWrapperProtoVec,omitempty"`
}

// NewRestoreWrapperProto instantiates a new RestoreWrapperProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreWrapperProto() *RestoreWrapperProto {
	this := RestoreWrapperProto{}
	return &this
}

// NewRestoreWrapperProtoWithDefaults instantiates a new RestoreWrapperProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreWrapperProtoWithDefaults() *RestoreWrapperProto {
	this := RestoreWrapperProto{}
	return &this
}

// GetDestroyClonedTaskStateVec returns the DestroyClonedTaskStateVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreWrapperProto) GetDestroyClonedTaskStateVec() []DestroyClonedTaskStateProto {
	if o == nil  {
		var ret []DestroyClonedTaskStateProto
		return ret
	}
	return o.DestroyClonedTaskStateVec
}

// GetDestroyClonedTaskStateVecOk returns a tuple with the DestroyClonedTaskStateVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreWrapperProto) GetDestroyClonedTaskStateVecOk() (*[]DestroyClonedTaskStateProto, bool) {
	if o == nil || o.DestroyClonedTaskStateVec == nil {
		return nil, false
	}
	return &o.DestroyClonedTaskStateVec, true
}

// HasDestroyClonedTaskStateVec returns a boolean if a field has been set.
func (o *RestoreWrapperProto) HasDestroyClonedTaskStateVec() bool {
	if o != nil && o.DestroyClonedTaskStateVec != nil {
		return true
	}

	return false
}

// SetDestroyClonedTaskStateVec gets a reference to the given []DestroyClonedTaskStateProto and assigns it to the DestroyClonedTaskStateVec field.
func (o *RestoreWrapperProto) SetDestroyClonedTaskStateVec(v []DestroyClonedTaskStateProto) {
	o.DestroyClonedTaskStateVec = v
}

// GetOwnerRestoreWrapperProto returns the OwnerRestoreWrapperProto field value if set, zero value otherwise.
func (o *RestoreWrapperProto) GetOwnerRestoreWrapperProto() RestoreWrapperProto {
	if o == nil || o.OwnerRestoreWrapperProto == nil {
		var ret RestoreWrapperProto
		return ret
	}
	return *o.OwnerRestoreWrapperProto
}

// GetOwnerRestoreWrapperProtoOk returns a tuple with the OwnerRestoreWrapperProto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreWrapperProto) GetOwnerRestoreWrapperProtoOk() (*RestoreWrapperProto, bool) {
	if o == nil || o.OwnerRestoreWrapperProto == nil {
		return nil, false
	}
	return o.OwnerRestoreWrapperProto, true
}

// HasOwnerRestoreWrapperProto returns a boolean if a field has been set.
func (o *RestoreWrapperProto) HasOwnerRestoreWrapperProto() bool {
	if o != nil && o.OwnerRestoreWrapperProto != nil {
		return true
	}

	return false
}

// SetOwnerRestoreWrapperProto gets a reference to the given RestoreWrapperProto and assigns it to the OwnerRestoreWrapperProto field.
func (o *RestoreWrapperProto) SetOwnerRestoreWrapperProto(v RestoreWrapperProto) {
	o.OwnerRestoreWrapperProto = &v
}

// GetPerformRefreshTaskStateVec returns the PerformRefreshTaskStateVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreWrapperProto) GetPerformRefreshTaskStateVec() []PerformRestoreTaskStateProto {
	if o == nil  {
		var ret []PerformRestoreTaskStateProto
		return ret
	}
	return o.PerformRefreshTaskStateVec
}

// GetPerformRefreshTaskStateVecOk returns a tuple with the PerformRefreshTaskStateVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreWrapperProto) GetPerformRefreshTaskStateVecOk() (*[]PerformRestoreTaskStateProto, bool) {
	if o == nil || o.PerformRefreshTaskStateVec == nil {
		return nil, false
	}
	return &o.PerformRefreshTaskStateVec, true
}

// HasPerformRefreshTaskStateVec returns a boolean if a field has been set.
func (o *RestoreWrapperProto) HasPerformRefreshTaskStateVec() bool {
	if o != nil && o.PerformRefreshTaskStateVec != nil {
		return true
	}

	return false
}

// SetPerformRefreshTaskStateVec gets a reference to the given []PerformRestoreTaskStateProto and assigns it to the PerformRefreshTaskStateVec field.
func (o *RestoreWrapperProto) SetPerformRefreshTaskStateVec(v []PerformRestoreTaskStateProto) {
	o.PerformRefreshTaskStateVec = v
}

// GetPerformRestoreJobState returns the PerformRestoreJobState field value if set, zero value otherwise.
func (o *RestoreWrapperProto) GetPerformRestoreJobState() PerformRestoreJobStateProto {
	if o == nil || o.PerformRestoreJobState == nil {
		var ret PerformRestoreJobStateProto
		return ret
	}
	return *o.PerformRestoreJobState
}

// GetPerformRestoreJobStateOk returns a tuple with the PerformRestoreJobState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreWrapperProto) GetPerformRestoreJobStateOk() (*PerformRestoreJobStateProto, bool) {
	if o == nil || o.PerformRestoreJobState == nil {
		return nil, false
	}
	return o.PerformRestoreJobState, true
}

// HasPerformRestoreJobState returns a boolean if a field has been set.
func (o *RestoreWrapperProto) HasPerformRestoreJobState() bool {
	if o != nil && o.PerformRestoreJobState != nil {
		return true
	}

	return false
}

// SetPerformRestoreJobState gets a reference to the given PerformRestoreJobStateProto and assigns it to the PerformRestoreJobState field.
func (o *RestoreWrapperProto) SetPerformRestoreJobState(v PerformRestoreJobStateProto) {
	o.PerformRestoreJobState = &v
}

// GetPerformRestoreTaskState returns the PerformRestoreTaskState field value if set, zero value otherwise.
func (o *RestoreWrapperProto) GetPerformRestoreTaskState() PerformRestoreTaskStateProto {
	if o == nil || o.PerformRestoreTaskState == nil {
		var ret PerformRestoreTaskStateProto
		return ret
	}
	return *o.PerformRestoreTaskState
}

// GetPerformRestoreTaskStateOk returns a tuple with the PerformRestoreTaskState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreWrapperProto) GetPerformRestoreTaskStateOk() (*PerformRestoreTaskStateProto, bool) {
	if o == nil || o.PerformRestoreTaskState == nil {
		return nil, false
	}
	return o.PerformRestoreTaskState, true
}

// HasPerformRestoreTaskState returns a boolean if a field has been set.
func (o *RestoreWrapperProto) HasPerformRestoreTaskState() bool {
	if o != nil && o.PerformRestoreTaskState != nil {
		return true
	}

	return false
}

// SetPerformRestoreTaskState gets a reference to the given PerformRestoreTaskStateProto and assigns it to the PerformRestoreTaskState field.
func (o *RestoreWrapperProto) SetPerformRestoreTaskState(v PerformRestoreTaskStateProto) {
	o.PerformRestoreTaskState = &v
}

// GetRestoreSubTaskWrapperProtoVec returns the RestoreSubTaskWrapperProtoVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreWrapperProto) GetRestoreSubTaskWrapperProtoVec() []map[string]interface{} {
	if o == nil  {
		var ret []map[string]interface{}
		return ret
	}
	return o.RestoreSubTaskWrapperProtoVec
}

// GetRestoreSubTaskWrapperProtoVecOk returns a tuple with the RestoreSubTaskWrapperProtoVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreWrapperProto) GetRestoreSubTaskWrapperProtoVecOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.RestoreSubTaskWrapperProtoVec == nil {
		return nil, false
	}
	return &o.RestoreSubTaskWrapperProtoVec, true
}

// HasRestoreSubTaskWrapperProtoVec returns a boolean if a field has been set.
func (o *RestoreWrapperProto) HasRestoreSubTaskWrapperProtoVec() bool {
	if o != nil && o.RestoreSubTaskWrapperProtoVec != nil {
		return true
	}

	return false
}

// SetRestoreSubTaskWrapperProtoVec gets a reference to the given []map[string]interface{} and assigns it to the RestoreSubTaskWrapperProtoVec field.
func (o *RestoreWrapperProto) SetRestoreSubTaskWrapperProtoVec(v []map[string]interface{}) {
	o.RestoreSubTaskWrapperProtoVec = v
}

func (o RestoreWrapperProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DestroyClonedTaskStateVec != nil {
		toSerialize["destroyClonedTaskStateVec"] = o.DestroyClonedTaskStateVec
	}
	if o.OwnerRestoreWrapperProto != nil {
		toSerialize["ownerRestoreWrapperProto"] = o.OwnerRestoreWrapperProto
	}
	if o.PerformRefreshTaskStateVec != nil {
		toSerialize["performRefreshTaskStateVec"] = o.PerformRefreshTaskStateVec
	}
	if o.PerformRestoreJobState != nil {
		toSerialize["performRestoreJobState"] = o.PerformRestoreJobState
	}
	if o.PerformRestoreTaskState != nil {
		toSerialize["performRestoreTaskState"] = o.PerformRestoreTaskState
	}
	if o.RestoreSubTaskWrapperProtoVec != nil {
		toSerialize["restoreSubTaskWrapperProtoVec"] = o.RestoreSubTaskWrapperProtoVec
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreWrapperProto struct {
	value *RestoreWrapperProto
	isSet bool
}

func (v NullableRestoreWrapperProto) Get() *RestoreWrapperProto {
	return v.value
}

func (v *NullableRestoreWrapperProto) Set(val *RestoreWrapperProto) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreWrapperProto) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreWrapperProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreWrapperProto(val *RestoreWrapperProto) *NullableRestoreWrapperProto {
	return &NullableRestoreWrapperProto{value: val, isSet: true}
}

func (v NullableRestoreWrapperProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreWrapperProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


