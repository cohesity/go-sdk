/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// MapReduceInstanceWrapper MapReduceInstanceWrapper is the struct containing the map reduce instance information along with the output file path information required to download the results set.
type MapReduceInstanceWrapper struct {
	// LogPath is the path of the log files for the MR instance run.
	LogPath NullableString `json:"logPath,omitempty"`
	MrInstance *MapReduceInstance `json:"mrInstance,omitempty"`
	// OutputFilePathList is the list containing the output files path suffix that Yoda uses to build the full path of the MR instance run output files.
	OutputFilePathList []string `json:"outputFilePathList,omitempty"`
}

// NewMapReduceInstanceWrapper instantiates a new MapReduceInstanceWrapper object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMapReduceInstanceWrapper() *MapReduceInstanceWrapper {
	this := MapReduceInstanceWrapper{}
	return &this
}

// NewMapReduceInstanceWrapperWithDefaults instantiates a new MapReduceInstanceWrapper object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMapReduceInstanceWrapperWithDefaults() *MapReduceInstanceWrapper {
	this := MapReduceInstanceWrapper{}
	return &this
}

// GetLogPath returns the LogPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceWrapper) GetLogPath() string {
	if o == nil || o.LogPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.LogPath.Get()
}

// GetLogPathOk returns a tuple with the LogPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceWrapper) GetLogPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LogPath.Get(), o.LogPath.IsSet()
}

// HasLogPath returns a boolean if a field has been set.
func (o *MapReduceInstanceWrapper) HasLogPath() bool {
	if o != nil && o.LogPath.IsSet() {
		return true
	}

	return false
}

// SetLogPath gets a reference to the given NullableString and assigns it to the LogPath field.
func (o *MapReduceInstanceWrapper) SetLogPath(v string) {
	o.LogPath.Set(&v)
}
// SetLogPathNil sets the value for LogPath to be an explicit nil
func (o *MapReduceInstanceWrapper) SetLogPathNil() {
	o.LogPath.Set(nil)
}

// UnsetLogPath ensures that no value is present for LogPath, not even an explicit nil
func (o *MapReduceInstanceWrapper) UnsetLogPath() {
	o.LogPath.Unset()
}

// GetMrInstance returns the MrInstance field value if set, zero value otherwise.
func (o *MapReduceInstanceWrapper) GetMrInstance() MapReduceInstance {
	if o == nil || o.MrInstance == nil {
		var ret MapReduceInstance
		return ret
	}
	return *o.MrInstance
}

// GetMrInstanceOk returns a tuple with the MrInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MapReduceInstanceWrapper) GetMrInstanceOk() (*MapReduceInstance, bool) {
	if o == nil || o.MrInstance == nil {
		return nil, false
	}
	return o.MrInstance, true
}

// HasMrInstance returns a boolean if a field has been set.
func (o *MapReduceInstanceWrapper) HasMrInstance() bool {
	if o != nil && o.MrInstance != nil {
		return true
	}

	return false
}

// SetMrInstance gets a reference to the given MapReduceInstance and assigns it to the MrInstance field.
func (o *MapReduceInstanceWrapper) SetMrInstance(v MapReduceInstance) {
	o.MrInstance = &v
}

// GetOutputFilePathList returns the OutputFilePathList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInstanceWrapper) GetOutputFilePathList() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.OutputFilePathList
}

// GetOutputFilePathListOk returns a tuple with the OutputFilePathList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInstanceWrapper) GetOutputFilePathListOk() (*[]string, bool) {
	if o == nil || o.OutputFilePathList == nil {
		return nil, false
	}
	return &o.OutputFilePathList, true
}

// HasOutputFilePathList returns a boolean if a field has been set.
func (o *MapReduceInstanceWrapper) HasOutputFilePathList() bool {
	if o != nil && o.OutputFilePathList != nil {
		return true
	}

	return false
}

// SetOutputFilePathList gets a reference to the given []string and assigns it to the OutputFilePathList field.
func (o *MapReduceInstanceWrapper) SetOutputFilePathList(v []string) {
	o.OutputFilePathList = v
}

func (o MapReduceInstanceWrapper) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LogPath.IsSet() {
		toSerialize["logPath"] = o.LogPath.Get()
	}
	if o.MrInstance != nil {
		toSerialize["mrInstance"] = o.MrInstance
	}
	if o.OutputFilePathList != nil {
		toSerialize["outputFilePathList"] = o.OutputFilePathList
	}
	return json.Marshal(toSerialize)
}

type NullableMapReduceInstanceWrapper struct {
	value *MapReduceInstanceWrapper
	isSet bool
}

func (v NullableMapReduceInstanceWrapper) Get() *MapReduceInstanceWrapper {
	return v.value
}

func (v *NullableMapReduceInstanceWrapper) Set(val *MapReduceInstanceWrapper) {
	v.value = val
	v.isSet = true
}

func (v NullableMapReduceInstanceWrapper) IsSet() bool {
	return v.isSet
}

func (v *NullableMapReduceInstanceWrapper) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMapReduceInstanceWrapper(val *MapReduceInstanceWrapper) *NullableMapReduceInstanceWrapper {
	return &NullableMapReduceInstanceWrapper{value: val, isSet: true}
}

func (v NullableMapReduceInstanceWrapper) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMapReduceInstanceWrapper) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


