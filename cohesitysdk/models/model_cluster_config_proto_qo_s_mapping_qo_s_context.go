/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ClusterConfigProtoQoSMappingQoSContext QoSContext captures the properties that are relevant for QoS in a request. If a new field is added to QoSContext, cluster_config.h should be changed to enhance the hasher (QoSContextHash) and comparator (QoSContextEqual) for QoSContext.
type ClusterConfigProtoQoSMappingQoSContext struct {
	// Component from which request is coming.
	Component NullableInt32 `json:"component,omitempty"`
	// Priority of a request.
	Priority NullableInt32 `json:"priority,omitempty"`
	Type NullableInt32 `json:"type,omitempty"`
	// View box id of a request.
	ViewBoxId NullableInt64 `json:"viewBoxId,omitempty"`
	// View id of a request.
	ViewId NullableInt64 `json:"viewId,omitempty"`
}

// NewClusterConfigProtoQoSMappingQoSContext instantiates a new ClusterConfigProtoQoSMappingQoSContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterConfigProtoQoSMappingQoSContext() *ClusterConfigProtoQoSMappingQoSContext {
	this := ClusterConfigProtoQoSMappingQoSContext{}
	return &this
}

// NewClusterConfigProtoQoSMappingQoSContextWithDefaults instantiates a new ClusterConfigProtoQoSMappingQoSContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterConfigProtoQoSMappingQoSContextWithDefaults() *ClusterConfigProtoQoSMappingQoSContext {
	this := ClusterConfigProtoQoSMappingQoSContext{}
	return &this
}

// GetComponent returns the Component field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterConfigProtoQoSMappingQoSContext) GetComponent() int32 {
	if o == nil || o.Component.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Component.Get()
}

// GetComponentOk returns a tuple with the Component field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterConfigProtoQoSMappingQoSContext) GetComponentOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Component.Get(), o.Component.IsSet()
}

// HasComponent returns a boolean if a field has been set.
func (o *ClusterConfigProtoQoSMappingQoSContext) HasComponent() bool {
	if o != nil && o.Component.IsSet() {
		return true
	}

	return false
}

// SetComponent gets a reference to the given NullableInt32 and assigns it to the Component field.
func (o *ClusterConfigProtoQoSMappingQoSContext) SetComponent(v int32) {
	o.Component.Set(&v)
}
// SetComponentNil sets the value for Component to be an explicit nil
func (o *ClusterConfigProtoQoSMappingQoSContext) SetComponentNil() {
	o.Component.Set(nil)
}

// UnsetComponent ensures that no value is present for Component, not even an explicit nil
func (o *ClusterConfigProtoQoSMappingQoSContext) UnsetComponent() {
	o.Component.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterConfigProtoQoSMappingQoSContext) GetPriority() int32 {
	if o == nil || o.Priority.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterConfigProtoQoSMappingQoSContext) GetPriorityOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *ClusterConfigProtoQoSMappingQoSContext) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableInt32 and assigns it to the Priority field.
func (o *ClusterConfigProtoQoSMappingQoSContext) SetPriority(v int32) {
	o.Priority.Set(&v)
}
// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *ClusterConfigProtoQoSMappingQoSContext) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *ClusterConfigProtoQoSMappingQoSContext) UnsetPriority() {
	o.Priority.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterConfigProtoQoSMappingQoSContext) GetType() int32 {
	if o == nil || o.Type.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterConfigProtoQoSMappingQoSContext) GetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *ClusterConfigProtoQoSMappingQoSContext) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableInt32 and assigns it to the Type field.
func (o *ClusterConfigProtoQoSMappingQoSContext) SetType(v int32) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *ClusterConfigProtoQoSMappingQoSContext) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *ClusterConfigProtoQoSMappingQoSContext) UnsetType() {
	o.Type.Unset()
}

// GetViewBoxId returns the ViewBoxId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterConfigProtoQoSMappingQoSContext) GetViewBoxId() int64 {
	if o == nil || o.ViewBoxId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ViewBoxId.Get()
}

// GetViewBoxIdOk returns a tuple with the ViewBoxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterConfigProtoQoSMappingQoSContext) GetViewBoxIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewBoxId.Get(), o.ViewBoxId.IsSet()
}

// HasViewBoxId returns a boolean if a field has been set.
func (o *ClusterConfigProtoQoSMappingQoSContext) HasViewBoxId() bool {
	if o != nil && o.ViewBoxId.IsSet() {
		return true
	}

	return false
}

// SetViewBoxId gets a reference to the given NullableInt64 and assigns it to the ViewBoxId field.
func (o *ClusterConfigProtoQoSMappingQoSContext) SetViewBoxId(v int64) {
	o.ViewBoxId.Set(&v)
}
// SetViewBoxIdNil sets the value for ViewBoxId to be an explicit nil
func (o *ClusterConfigProtoQoSMappingQoSContext) SetViewBoxIdNil() {
	o.ViewBoxId.Set(nil)
}

// UnsetViewBoxId ensures that no value is present for ViewBoxId, not even an explicit nil
func (o *ClusterConfigProtoQoSMappingQoSContext) UnsetViewBoxId() {
	o.ViewBoxId.Unset()
}

// GetViewId returns the ViewId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterConfigProtoQoSMappingQoSContext) GetViewId() int64 {
	if o == nil || o.ViewId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ViewId.Get()
}

// GetViewIdOk returns a tuple with the ViewId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterConfigProtoQoSMappingQoSContext) GetViewIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewId.Get(), o.ViewId.IsSet()
}

// HasViewId returns a boolean if a field has been set.
func (o *ClusterConfigProtoQoSMappingQoSContext) HasViewId() bool {
	if o != nil && o.ViewId.IsSet() {
		return true
	}

	return false
}

// SetViewId gets a reference to the given NullableInt64 and assigns it to the ViewId field.
func (o *ClusterConfigProtoQoSMappingQoSContext) SetViewId(v int64) {
	o.ViewId.Set(&v)
}
// SetViewIdNil sets the value for ViewId to be an explicit nil
func (o *ClusterConfigProtoQoSMappingQoSContext) SetViewIdNil() {
	o.ViewId.Set(nil)
}

// UnsetViewId ensures that no value is present for ViewId, not even an explicit nil
func (o *ClusterConfigProtoQoSMappingQoSContext) UnsetViewId() {
	o.ViewId.Unset()
}

func (o ClusterConfigProtoQoSMappingQoSContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Component.IsSet() {
		toSerialize["component"] = o.Component.Get()
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.ViewBoxId.IsSet() {
		toSerialize["viewBoxId"] = o.ViewBoxId.Get()
	}
	if o.ViewId.IsSet() {
		toSerialize["viewId"] = o.ViewId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableClusterConfigProtoQoSMappingQoSContext struct {
	value *ClusterConfigProtoQoSMappingQoSContext
	isSet bool
}

func (v NullableClusterConfigProtoQoSMappingQoSContext) Get() *ClusterConfigProtoQoSMappingQoSContext {
	return v.value
}

func (v *NullableClusterConfigProtoQoSMappingQoSContext) Set(val *ClusterConfigProtoQoSMappingQoSContext) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterConfigProtoQoSMappingQoSContext) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterConfigProtoQoSMappingQoSContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterConfigProtoQoSMappingQoSContext(val *ClusterConfigProtoQoSMappingQoSContext) *NullableClusterConfigProtoQoSMappingQoSContext {
	return &NullableClusterConfigProtoQoSMappingQoSContext{value: val, isSet: true}
}

func (v NullableClusterConfigProtoQoSMappingQoSContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterConfigProtoQoSMappingQoSContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


