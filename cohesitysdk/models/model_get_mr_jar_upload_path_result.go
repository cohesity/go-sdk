/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// GetMRJarUploadPathResult User can upload jar files containing mappers and reducers. Iris will upload these jar files in Yoda's internal view. Yoda will mount its internal view and send Iris the mount point.
type GetMRJarUploadPathResult struct {
	Error *ErrorProto `json:"error,omitempty"`
	// Path where Jars can be uploaded by Iris.
	JarUploadPath NullableString `json:"jarUploadPath,omitempty"`
}

// NewGetMRJarUploadPathResult instantiates a new GetMRJarUploadPathResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMRJarUploadPathResult() *GetMRJarUploadPathResult {
	this := GetMRJarUploadPathResult{}
	return &this
}

// NewGetMRJarUploadPathResultWithDefaults instantiates a new GetMRJarUploadPathResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMRJarUploadPathResultWithDefaults() *GetMRJarUploadPathResult {
	this := GetMRJarUploadPathResult{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *GetMRJarUploadPathResult) GetError() ErrorProto {
	if o == nil || o.Error == nil {
		var ret ErrorProto
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMRJarUploadPathResult) GetErrorOk() (*ErrorProto, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *GetMRJarUploadPathResult) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given ErrorProto and assigns it to the Error field.
func (o *GetMRJarUploadPathResult) SetError(v ErrorProto) {
	o.Error = &v
}

// GetJarUploadPath returns the JarUploadPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMRJarUploadPathResult) GetJarUploadPath() string {
	if o == nil || o.JarUploadPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.JarUploadPath.Get()
}

// GetJarUploadPathOk returns a tuple with the JarUploadPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMRJarUploadPathResult) GetJarUploadPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JarUploadPath.Get(), o.JarUploadPath.IsSet()
}

// HasJarUploadPath returns a boolean if a field has been set.
func (o *GetMRJarUploadPathResult) HasJarUploadPath() bool {
	if o != nil && o.JarUploadPath.IsSet() {
		return true
	}

	return false
}

// SetJarUploadPath gets a reference to the given NullableString and assigns it to the JarUploadPath field.
func (o *GetMRJarUploadPathResult) SetJarUploadPath(v string) {
	o.JarUploadPath.Set(&v)
}
// SetJarUploadPathNil sets the value for JarUploadPath to be an explicit nil
func (o *GetMRJarUploadPathResult) SetJarUploadPathNil() {
	o.JarUploadPath.Set(nil)
}

// UnsetJarUploadPath ensures that no value is present for JarUploadPath, not even an explicit nil
func (o *GetMRJarUploadPathResult) UnsetJarUploadPath() {
	o.JarUploadPath.Unset()
}

func (o GetMRJarUploadPathResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.JarUploadPath.IsSet() {
		toSerialize["jarUploadPath"] = o.JarUploadPath.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGetMRJarUploadPathResult struct {
	value *GetMRJarUploadPathResult
	isSet bool
}

func (v NullableGetMRJarUploadPathResult) Get() *GetMRJarUploadPathResult {
	return v.value
}

func (v *NullableGetMRJarUploadPathResult) Set(val *GetMRJarUploadPathResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMRJarUploadPathResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMRJarUploadPathResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMRJarUploadPathResult(val *GetMRJarUploadPathResult) *NullableGetMRJarUploadPathResult {
	return &NullableGetMRJarUploadPathResult{value: val, isSet: true}
}

func (v NullableGetMRJarUploadPathResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMRJarUploadPathResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


