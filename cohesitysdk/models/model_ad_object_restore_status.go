/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ADObjectRestoreStatus struct for ADObjectRestoreStatus
type ADObjectRestoreStatus struct {
	// Destination guid string of the AD object that is newly created on production AD corresponding to 'source_guid'. If the object was restored from production AD recycle Bin, this value can be empty or set to same value as 'source_guid'. If this value is non-empty and is different from source_guid, implying production AD object is a new object created in production AD as part of restore.
	DestGuid NullableString `json:"destGuid,omitempty"`
	// Object result flags of type ADObjectFlags.
	ObjectFlags NullableInt32 `json:"objectFlags,omitempty"`
	// AD object attribute(property) restore status vector.
	PropertyStatusVec []ADObjectRestoreStatusADAttributeRestoreStatus `json:"propertyStatusVec,omitempty"`
	// Source guid of AD object that was restored. This will not be empty. This is populated from the source of request argument.
	SourceGuid NullableString `json:"sourceGuid,omitempty"`
	Status *ErrorProto `json:"status,omitempty"`
	// Time taken in milliseconds to restore the individual object or attribute update. If this object restore was part of a batch, it shows the time taken once the operation was dispatched to AD for the object. This time can be useful in answering why some objects took long time to restore. Note that this time is not the elapsed time when the request was made from Magneto.
	TimetakenMs NullableInt32 `json:"timetakenMs,omitempty"`
}

// NewADObjectRestoreStatus instantiates a new ADObjectRestoreStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADObjectRestoreStatus() *ADObjectRestoreStatus {
	this := ADObjectRestoreStatus{}
	return &this
}

// NewADObjectRestoreStatusWithDefaults instantiates a new ADObjectRestoreStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADObjectRestoreStatusWithDefaults() *ADObjectRestoreStatus {
	this := ADObjectRestoreStatus{}
	return &this
}

// GetDestGuid returns the DestGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ADObjectRestoreStatus) GetDestGuid() string {
	if o == nil || o.DestGuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.DestGuid.Get()
}

// GetDestGuidOk returns a tuple with the DestGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ADObjectRestoreStatus) GetDestGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DestGuid.Get(), o.DestGuid.IsSet()
}

// HasDestGuid returns a boolean if a field has been set.
func (o *ADObjectRestoreStatus) HasDestGuid() bool {
	if o != nil && o.DestGuid.IsSet() {
		return true
	}

	return false
}

// SetDestGuid gets a reference to the given NullableString and assigns it to the DestGuid field.
func (o *ADObjectRestoreStatus) SetDestGuid(v string) {
	o.DestGuid.Set(&v)
}
// SetDestGuidNil sets the value for DestGuid to be an explicit nil
func (o *ADObjectRestoreStatus) SetDestGuidNil() {
	o.DestGuid.Set(nil)
}

// UnsetDestGuid ensures that no value is present for DestGuid, not even an explicit nil
func (o *ADObjectRestoreStatus) UnsetDestGuid() {
	o.DestGuid.Unset()
}

// GetObjectFlags returns the ObjectFlags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ADObjectRestoreStatus) GetObjectFlags() int32 {
	if o == nil || o.ObjectFlags.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ObjectFlags.Get()
}

// GetObjectFlagsOk returns a tuple with the ObjectFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ADObjectRestoreStatus) GetObjectFlagsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ObjectFlags.Get(), o.ObjectFlags.IsSet()
}

// HasObjectFlags returns a boolean if a field has been set.
func (o *ADObjectRestoreStatus) HasObjectFlags() bool {
	if o != nil && o.ObjectFlags.IsSet() {
		return true
	}

	return false
}

// SetObjectFlags gets a reference to the given NullableInt32 and assigns it to the ObjectFlags field.
func (o *ADObjectRestoreStatus) SetObjectFlags(v int32) {
	o.ObjectFlags.Set(&v)
}
// SetObjectFlagsNil sets the value for ObjectFlags to be an explicit nil
func (o *ADObjectRestoreStatus) SetObjectFlagsNil() {
	o.ObjectFlags.Set(nil)
}

// UnsetObjectFlags ensures that no value is present for ObjectFlags, not even an explicit nil
func (o *ADObjectRestoreStatus) UnsetObjectFlags() {
	o.ObjectFlags.Unset()
}

// GetPropertyStatusVec returns the PropertyStatusVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ADObjectRestoreStatus) GetPropertyStatusVec() []ADObjectRestoreStatusADAttributeRestoreStatus {
	if o == nil  {
		var ret []ADObjectRestoreStatusADAttributeRestoreStatus
		return ret
	}
	return o.PropertyStatusVec
}

// GetPropertyStatusVecOk returns a tuple with the PropertyStatusVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ADObjectRestoreStatus) GetPropertyStatusVecOk() (*[]ADObjectRestoreStatusADAttributeRestoreStatus, bool) {
	if o == nil || o.PropertyStatusVec == nil {
		return nil, false
	}
	return &o.PropertyStatusVec, true
}

// HasPropertyStatusVec returns a boolean if a field has been set.
func (o *ADObjectRestoreStatus) HasPropertyStatusVec() bool {
	if o != nil && o.PropertyStatusVec != nil {
		return true
	}

	return false
}

// SetPropertyStatusVec gets a reference to the given []ADObjectRestoreStatusADAttributeRestoreStatus and assigns it to the PropertyStatusVec field.
func (o *ADObjectRestoreStatus) SetPropertyStatusVec(v []ADObjectRestoreStatusADAttributeRestoreStatus) {
	o.PropertyStatusVec = v
}

// GetSourceGuid returns the SourceGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ADObjectRestoreStatus) GetSourceGuid() string {
	if o == nil || o.SourceGuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceGuid.Get()
}

// GetSourceGuidOk returns a tuple with the SourceGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ADObjectRestoreStatus) GetSourceGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceGuid.Get(), o.SourceGuid.IsSet()
}

// HasSourceGuid returns a boolean if a field has been set.
func (o *ADObjectRestoreStatus) HasSourceGuid() bool {
	if o != nil && o.SourceGuid.IsSet() {
		return true
	}

	return false
}

// SetSourceGuid gets a reference to the given NullableString and assigns it to the SourceGuid field.
func (o *ADObjectRestoreStatus) SetSourceGuid(v string) {
	o.SourceGuid.Set(&v)
}
// SetSourceGuidNil sets the value for SourceGuid to be an explicit nil
func (o *ADObjectRestoreStatus) SetSourceGuidNil() {
	o.SourceGuid.Set(nil)
}

// UnsetSourceGuid ensures that no value is present for SourceGuid, not even an explicit nil
func (o *ADObjectRestoreStatus) UnsetSourceGuid() {
	o.SourceGuid.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ADObjectRestoreStatus) GetStatus() ErrorProto {
	if o == nil || o.Status == nil {
		var ret ErrorProto
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADObjectRestoreStatus) GetStatusOk() (*ErrorProto, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ADObjectRestoreStatus) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ErrorProto and assigns it to the Status field.
func (o *ADObjectRestoreStatus) SetStatus(v ErrorProto) {
	o.Status = &v
}

// GetTimetakenMs returns the TimetakenMs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ADObjectRestoreStatus) GetTimetakenMs() int32 {
	if o == nil || o.TimetakenMs.Get() == nil {
		var ret int32
		return ret
	}
	return *o.TimetakenMs.Get()
}

// GetTimetakenMsOk returns a tuple with the TimetakenMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ADObjectRestoreStatus) GetTimetakenMsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TimetakenMs.Get(), o.TimetakenMs.IsSet()
}

// HasTimetakenMs returns a boolean if a field has been set.
func (o *ADObjectRestoreStatus) HasTimetakenMs() bool {
	if o != nil && o.TimetakenMs.IsSet() {
		return true
	}

	return false
}

// SetTimetakenMs gets a reference to the given NullableInt32 and assigns it to the TimetakenMs field.
func (o *ADObjectRestoreStatus) SetTimetakenMs(v int32) {
	o.TimetakenMs.Set(&v)
}
// SetTimetakenMsNil sets the value for TimetakenMs to be an explicit nil
func (o *ADObjectRestoreStatus) SetTimetakenMsNil() {
	o.TimetakenMs.Set(nil)
}

// UnsetTimetakenMs ensures that no value is present for TimetakenMs, not even an explicit nil
func (o *ADObjectRestoreStatus) UnsetTimetakenMs() {
	o.TimetakenMs.Unset()
}

func (o ADObjectRestoreStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DestGuid.IsSet() {
		toSerialize["destGuid"] = o.DestGuid.Get()
	}
	if o.ObjectFlags.IsSet() {
		toSerialize["objectFlags"] = o.ObjectFlags.Get()
	}
	if o.PropertyStatusVec != nil {
		toSerialize["propertyStatusVec"] = o.PropertyStatusVec
	}
	if o.SourceGuid.IsSet() {
		toSerialize["sourceGuid"] = o.SourceGuid.Get()
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.TimetakenMs.IsSet() {
		toSerialize["timetakenMs"] = o.TimetakenMs.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableADObjectRestoreStatus struct {
	value *ADObjectRestoreStatus
	isSet bool
}

func (v NullableADObjectRestoreStatus) Get() *ADObjectRestoreStatus {
	return v.value
}

func (v *NullableADObjectRestoreStatus) Set(val *ADObjectRestoreStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableADObjectRestoreStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableADObjectRestoreStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADObjectRestoreStatus(val *ADObjectRestoreStatus) *NullableADObjectRestoreStatus {
	return &NullableADObjectRestoreStatus{value: val, isSet: true}
}

func (v NullableADObjectRestoreStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADObjectRestoreStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


