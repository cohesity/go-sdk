/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// GdprCopyTask CopyTask defines the copy tasks of a job.
type GdprCopyTask struct {
	// Specifies the job with which this copy task is tied to. Note: this is only used for internal aggregation.
	JobId NullableInt64 `json:"JobId,omitempty"`
	// Specifies the cloud deploy target type. For example 'kAzure','kAWS', 'kGCP'
	CloudTargetType NullableString `json:"cloudTargetType,omitempty"`
	// Specifies the expiry of the copy task.
	ExpiryTimeUsecs NullableInt64 `json:"expiryTimeUsecs,omitempty"`
	// Specifies the id for the target.
	TargetId NullableInt64 `json:"targetId,omitempty"`
	// Specifies the target of the replication or archival tasks.
	TargetName NullableString `json:"targetName,omitempty"`
	// Specifies the total number of snapshots.
	TotalSnapshots NullableInt64 `json:"totalSnapshots,omitempty"`
	// Specifies details about the Copy Run of a Job Run. A Copy task copies snapshots resulted from a backup run to an external target which could be 'kLocal', 'kArchival', or 'kRemote'.
	Type NullableString `json:"type,omitempty"`
}

// NewGdprCopyTask instantiates a new GdprCopyTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGdprCopyTask() *GdprCopyTask {
	this := GdprCopyTask{}
	return &this
}

// NewGdprCopyTaskWithDefaults instantiates a new GdprCopyTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGdprCopyTaskWithDefaults() *GdprCopyTask {
	this := GdprCopyTask{}
	return &this
}

// GetJobId returns the JobId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GdprCopyTask) GetJobId() int64 {
	if o == nil || o.JobId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.JobId.Get()
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GdprCopyTask) GetJobIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobId.Get(), o.JobId.IsSet()
}

// HasJobId returns a boolean if a field has been set.
func (o *GdprCopyTask) HasJobId() bool {
	if o != nil && o.JobId.IsSet() {
		return true
	}

	return false
}

// SetJobId gets a reference to the given NullableInt64 and assigns it to the JobId field.
func (o *GdprCopyTask) SetJobId(v int64) {
	o.JobId.Set(&v)
}
// SetJobIdNil sets the value for JobId to be an explicit nil
func (o *GdprCopyTask) SetJobIdNil() {
	o.JobId.Set(nil)
}

// UnsetJobId ensures that no value is present for JobId, not even an explicit nil
func (o *GdprCopyTask) UnsetJobId() {
	o.JobId.Unset()
}

// GetCloudTargetType returns the CloudTargetType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GdprCopyTask) GetCloudTargetType() string {
	if o == nil || o.CloudTargetType.Get() == nil {
		var ret string
		return ret
	}
	return *o.CloudTargetType.Get()
}

// GetCloudTargetTypeOk returns a tuple with the CloudTargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GdprCopyTask) GetCloudTargetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CloudTargetType.Get(), o.CloudTargetType.IsSet()
}

// HasCloudTargetType returns a boolean if a field has been set.
func (o *GdprCopyTask) HasCloudTargetType() bool {
	if o != nil && o.CloudTargetType.IsSet() {
		return true
	}

	return false
}

// SetCloudTargetType gets a reference to the given NullableString and assigns it to the CloudTargetType field.
func (o *GdprCopyTask) SetCloudTargetType(v string) {
	o.CloudTargetType.Set(&v)
}
// SetCloudTargetTypeNil sets the value for CloudTargetType to be an explicit nil
func (o *GdprCopyTask) SetCloudTargetTypeNil() {
	o.CloudTargetType.Set(nil)
}

// UnsetCloudTargetType ensures that no value is present for CloudTargetType, not even an explicit nil
func (o *GdprCopyTask) UnsetCloudTargetType() {
	o.CloudTargetType.Unset()
}

// GetExpiryTimeUsecs returns the ExpiryTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GdprCopyTask) GetExpiryTimeUsecs() int64 {
	if o == nil || o.ExpiryTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ExpiryTimeUsecs.Get()
}

// GetExpiryTimeUsecsOk returns a tuple with the ExpiryTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GdprCopyTask) GetExpiryTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExpiryTimeUsecs.Get(), o.ExpiryTimeUsecs.IsSet()
}

// HasExpiryTimeUsecs returns a boolean if a field has been set.
func (o *GdprCopyTask) HasExpiryTimeUsecs() bool {
	if o != nil && o.ExpiryTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetExpiryTimeUsecs gets a reference to the given NullableInt64 and assigns it to the ExpiryTimeUsecs field.
func (o *GdprCopyTask) SetExpiryTimeUsecs(v int64) {
	o.ExpiryTimeUsecs.Set(&v)
}
// SetExpiryTimeUsecsNil sets the value for ExpiryTimeUsecs to be an explicit nil
func (o *GdprCopyTask) SetExpiryTimeUsecsNil() {
	o.ExpiryTimeUsecs.Set(nil)
}

// UnsetExpiryTimeUsecs ensures that no value is present for ExpiryTimeUsecs, not even an explicit nil
func (o *GdprCopyTask) UnsetExpiryTimeUsecs() {
	o.ExpiryTimeUsecs.Unset()
}

// GetTargetId returns the TargetId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GdprCopyTask) GetTargetId() int64 {
	if o == nil || o.TargetId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TargetId.Get()
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GdprCopyTask) GetTargetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetId.Get(), o.TargetId.IsSet()
}

// HasTargetId returns a boolean if a field has been set.
func (o *GdprCopyTask) HasTargetId() bool {
	if o != nil && o.TargetId.IsSet() {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given NullableInt64 and assigns it to the TargetId field.
func (o *GdprCopyTask) SetTargetId(v int64) {
	o.TargetId.Set(&v)
}
// SetTargetIdNil sets the value for TargetId to be an explicit nil
func (o *GdprCopyTask) SetTargetIdNil() {
	o.TargetId.Set(nil)
}

// UnsetTargetId ensures that no value is present for TargetId, not even an explicit nil
func (o *GdprCopyTask) UnsetTargetId() {
	o.TargetId.Unset()
}

// GetTargetName returns the TargetName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GdprCopyTask) GetTargetName() string {
	if o == nil || o.TargetName.Get() == nil {
		var ret string
		return ret
	}
	return *o.TargetName.Get()
}

// GetTargetNameOk returns a tuple with the TargetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GdprCopyTask) GetTargetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetName.Get(), o.TargetName.IsSet()
}

// HasTargetName returns a boolean if a field has been set.
func (o *GdprCopyTask) HasTargetName() bool {
	if o != nil && o.TargetName.IsSet() {
		return true
	}

	return false
}

// SetTargetName gets a reference to the given NullableString and assigns it to the TargetName field.
func (o *GdprCopyTask) SetTargetName(v string) {
	o.TargetName.Set(&v)
}
// SetTargetNameNil sets the value for TargetName to be an explicit nil
func (o *GdprCopyTask) SetTargetNameNil() {
	o.TargetName.Set(nil)
}

// UnsetTargetName ensures that no value is present for TargetName, not even an explicit nil
func (o *GdprCopyTask) UnsetTargetName() {
	o.TargetName.Unset()
}

// GetTotalSnapshots returns the TotalSnapshots field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GdprCopyTask) GetTotalSnapshots() int64 {
	if o == nil || o.TotalSnapshots.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TotalSnapshots.Get()
}

// GetTotalSnapshotsOk returns a tuple with the TotalSnapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GdprCopyTask) GetTotalSnapshotsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalSnapshots.Get(), o.TotalSnapshots.IsSet()
}

// HasTotalSnapshots returns a boolean if a field has been set.
func (o *GdprCopyTask) HasTotalSnapshots() bool {
	if o != nil && o.TotalSnapshots.IsSet() {
		return true
	}

	return false
}

// SetTotalSnapshots gets a reference to the given NullableInt64 and assigns it to the TotalSnapshots field.
func (o *GdprCopyTask) SetTotalSnapshots(v int64) {
	o.TotalSnapshots.Set(&v)
}
// SetTotalSnapshotsNil sets the value for TotalSnapshots to be an explicit nil
func (o *GdprCopyTask) SetTotalSnapshotsNil() {
	o.TotalSnapshots.Set(nil)
}

// UnsetTotalSnapshots ensures that no value is present for TotalSnapshots, not even an explicit nil
func (o *GdprCopyTask) UnsetTotalSnapshots() {
	o.TotalSnapshots.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GdprCopyTask) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GdprCopyTask) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *GdprCopyTask) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *GdprCopyTask) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *GdprCopyTask) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *GdprCopyTask) UnsetType() {
	o.Type.Unset()
}

func (o GdprCopyTask) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.JobId.IsSet() {
		toSerialize["JobId"] = o.JobId.Get()
	}
	if o.CloudTargetType.IsSet() {
		toSerialize["cloudTargetType"] = o.CloudTargetType.Get()
	}
	if o.ExpiryTimeUsecs.IsSet() {
		toSerialize["expiryTimeUsecs"] = o.ExpiryTimeUsecs.Get()
	}
	if o.TargetId.IsSet() {
		toSerialize["targetId"] = o.TargetId.Get()
	}
	if o.TargetName.IsSet() {
		toSerialize["targetName"] = o.TargetName.Get()
	}
	if o.TotalSnapshots.IsSet() {
		toSerialize["totalSnapshots"] = o.TotalSnapshots.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGdprCopyTask struct {
	value *GdprCopyTask
	isSet bool
}

func (v NullableGdprCopyTask) Get() *GdprCopyTask {
	return v.value
}

func (v *NullableGdprCopyTask) Set(val *GdprCopyTask) {
	v.value = val
	v.isSet = true
}

func (v NullableGdprCopyTask) IsSet() bool {
	return v.isSet
}

func (v *NullableGdprCopyTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGdprCopyTask(val *GdprCopyTask) *NullableGdprCopyTask {
	return &NullableGdprCopyTask{value: val, isSet: true}
}

func (v NullableGdprCopyTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGdprCopyTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


