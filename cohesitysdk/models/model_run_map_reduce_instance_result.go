/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// RunMapReduceInstanceResult struct for RunMapReduceInstanceResult
type RunMapReduceInstanceResult struct {
	Error *ErrorProto `json:"error,omitempty"`
	// Return the ID of instance.
	MapReduceInstanceId NullableInt64 `json:"mapReduceInstanceId,omitempty"`
}

// NewRunMapReduceInstanceResult instantiates a new RunMapReduceInstanceResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunMapReduceInstanceResult() *RunMapReduceInstanceResult {
	this := RunMapReduceInstanceResult{}
	return &this
}

// NewRunMapReduceInstanceResultWithDefaults instantiates a new RunMapReduceInstanceResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunMapReduceInstanceResultWithDefaults() *RunMapReduceInstanceResult {
	this := RunMapReduceInstanceResult{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *RunMapReduceInstanceResult) GetError() ErrorProto {
	if o == nil || o.Error == nil {
		var ret ErrorProto
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunMapReduceInstanceResult) GetErrorOk() (*ErrorProto, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *RunMapReduceInstanceResult) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given ErrorProto and assigns it to the Error field.
func (o *RunMapReduceInstanceResult) SetError(v ErrorProto) {
	o.Error = &v
}

// GetMapReduceInstanceId returns the MapReduceInstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunMapReduceInstanceResult) GetMapReduceInstanceId() int64 {
	if o == nil || o.MapReduceInstanceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.MapReduceInstanceId.Get()
}

// GetMapReduceInstanceIdOk returns a tuple with the MapReduceInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunMapReduceInstanceResult) GetMapReduceInstanceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MapReduceInstanceId.Get(), o.MapReduceInstanceId.IsSet()
}

// HasMapReduceInstanceId returns a boolean if a field has been set.
func (o *RunMapReduceInstanceResult) HasMapReduceInstanceId() bool {
	if o != nil && o.MapReduceInstanceId.IsSet() {
		return true
	}

	return false
}

// SetMapReduceInstanceId gets a reference to the given NullableInt64 and assigns it to the MapReduceInstanceId field.
func (o *RunMapReduceInstanceResult) SetMapReduceInstanceId(v int64) {
	o.MapReduceInstanceId.Set(&v)
}
// SetMapReduceInstanceIdNil sets the value for MapReduceInstanceId to be an explicit nil
func (o *RunMapReduceInstanceResult) SetMapReduceInstanceIdNil() {
	o.MapReduceInstanceId.Set(nil)
}

// UnsetMapReduceInstanceId ensures that no value is present for MapReduceInstanceId, not even an explicit nil
func (o *RunMapReduceInstanceResult) UnsetMapReduceInstanceId() {
	o.MapReduceInstanceId.Unset()
}

func (o RunMapReduceInstanceResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.MapReduceInstanceId.IsSet() {
		toSerialize["mapReduceInstanceId"] = o.MapReduceInstanceId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRunMapReduceInstanceResult struct {
	value *RunMapReduceInstanceResult
	isSet bool
}

func (v NullableRunMapReduceInstanceResult) Get() *RunMapReduceInstanceResult {
	return v.value
}

func (v *NullableRunMapReduceInstanceResult) Set(val *RunMapReduceInstanceResult) {
	v.value = val
	v.isSet = true
}

func (v NullableRunMapReduceInstanceResult) IsSet() bool {
	return v.isSet
}

func (v *NullableRunMapReduceInstanceResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunMapReduceInstanceResult(val *RunMapReduceInstanceResult) *NullableRunMapReduceInstanceResult {
	return &NullableRunMapReduceInstanceResult{value: val, isSet: true}
}

func (v NullableRunMapReduceInstanceResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunMapReduceInstanceResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


