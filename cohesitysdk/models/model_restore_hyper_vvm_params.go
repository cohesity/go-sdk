/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// RestoreHyperVVMParams struct for RestoreHyperVVMParams
type RestoreHyperVVMParams struct {
	// Whether to perform copy recovery.
	CopyRecovery NullableBool `json:"copyRecovery,omitempty"`
	DatastoreEntity *EntityProto `json:"datastoreEntity,omitempty"`
	PowerStateConfig *PowerStateConfigProto `json:"powerStateConfig,omitempty"`
	RenameRestoredObjectParam *RenameObjectParamProto `json:"renameRestoredObjectParam,omitempty"`
	ResourceEntity *EntityProto `json:"resourceEntity,omitempty"`
	RestoredObjectsNetworkConfig *RestoredObjectNetworkConfigProto `json:"restoredObjectsNetworkConfig,omitempty"`
	UuidConfig *UuidConfigProto `json:"uuidConfig,omitempty"`
}

// NewRestoreHyperVVMParams instantiates a new RestoreHyperVVMParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreHyperVVMParams() *RestoreHyperVVMParams {
	this := RestoreHyperVVMParams{}
	return &this
}

// NewRestoreHyperVVMParamsWithDefaults instantiates a new RestoreHyperVVMParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreHyperVVMParamsWithDefaults() *RestoreHyperVVMParams {
	this := RestoreHyperVVMParams{}
	return &this
}

// GetCopyRecovery returns the CopyRecovery field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreHyperVVMParams) GetCopyRecovery() bool {
	if o == nil || o.CopyRecovery.Get() == nil {
		var ret bool
		return ret
	}
	return *o.CopyRecovery.Get()
}

// GetCopyRecoveryOk returns a tuple with the CopyRecovery field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreHyperVVMParams) GetCopyRecoveryOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CopyRecovery.Get(), o.CopyRecovery.IsSet()
}

// HasCopyRecovery returns a boolean if a field has been set.
func (o *RestoreHyperVVMParams) HasCopyRecovery() bool {
	if o != nil && o.CopyRecovery.IsSet() {
		return true
	}

	return false
}

// SetCopyRecovery gets a reference to the given NullableBool and assigns it to the CopyRecovery field.
func (o *RestoreHyperVVMParams) SetCopyRecovery(v bool) {
	o.CopyRecovery.Set(&v)
}
// SetCopyRecoveryNil sets the value for CopyRecovery to be an explicit nil
func (o *RestoreHyperVVMParams) SetCopyRecoveryNil() {
	o.CopyRecovery.Set(nil)
}

// UnsetCopyRecovery ensures that no value is present for CopyRecovery, not even an explicit nil
func (o *RestoreHyperVVMParams) UnsetCopyRecovery() {
	o.CopyRecovery.Unset()
}

// GetDatastoreEntity returns the DatastoreEntity field value if set, zero value otherwise.
func (o *RestoreHyperVVMParams) GetDatastoreEntity() EntityProto {
	if o == nil || o.DatastoreEntity == nil {
		var ret EntityProto
		return ret
	}
	return *o.DatastoreEntity
}

// GetDatastoreEntityOk returns a tuple with the DatastoreEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreHyperVVMParams) GetDatastoreEntityOk() (*EntityProto, bool) {
	if o == nil || o.DatastoreEntity == nil {
		return nil, false
	}
	return o.DatastoreEntity, true
}

// HasDatastoreEntity returns a boolean if a field has been set.
func (o *RestoreHyperVVMParams) HasDatastoreEntity() bool {
	if o != nil && o.DatastoreEntity != nil {
		return true
	}

	return false
}

// SetDatastoreEntity gets a reference to the given EntityProto and assigns it to the DatastoreEntity field.
func (o *RestoreHyperVVMParams) SetDatastoreEntity(v EntityProto) {
	o.DatastoreEntity = &v
}

// GetPowerStateConfig returns the PowerStateConfig field value if set, zero value otherwise.
func (o *RestoreHyperVVMParams) GetPowerStateConfig() PowerStateConfigProto {
	if o == nil || o.PowerStateConfig == nil {
		var ret PowerStateConfigProto
		return ret
	}
	return *o.PowerStateConfig
}

// GetPowerStateConfigOk returns a tuple with the PowerStateConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreHyperVVMParams) GetPowerStateConfigOk() (*PowerStateConfigProto, bool) {
	if o == nil || o.PowerStateConfig == nil {
		return nil, false
	}
	return o.PowerStateConfig, true
}

// HasPowerStateConfig returns a boolean if a field has been set.
func (o *RestoreHyperVVMParams) HasPowerStateConfig() bool {
	if o != nil && o.PowerStateConfig != nil {
		return true
	}

	return false
}

// SetPowerStateConfig gets a reference to the given PowerStateConfigProto and assigns it to the PowerStateConfig field.
func (o *RestoreHyperVVMParams) SetPowerStateConfig(v PowerStateConfigProto) {
	o.PowerStateConfig = &v
}

// GetRenameRestoredObjectParam returns the RenameRestoredObjectParam field value if set, zero value otherwise.
func (o *RestoreHyperVVMParams) GetRenameRestoredObjectParam() RenameObjectParamProto {
	if o == nil || o.RenameRestoredObjectParam == nil {
		var ret RenameObjectParamProto
		return ret
	}
	return *o.RenameRestoredObjectParam
}

// GetRenameRestoredObjectParamOk returns a tuple with the RenameRestoredObjectParam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreHyperVVMParams) GetRenameRestoredObjectParamOk() (*RenameObjectParamProto, bool) {
	if o == nil || o.RenameRestoredObjectParam == nil {
		return nil, false
	}
	return o.RenameRestoredObjectParam, true
}

// HasRenameRestoredObjectParam returns a boolean if a field has been set.
func (o *RestoreHyperVVMParams) HasRenameRestoredObjectParam() bool {
	if o != nil && o.RenameRestoredObjectParam != nil {
		return true
	}

	return false
}

// SetRenameRestoredObjectParam gets a reference to the given RenameObjectParamProto and assigns it to the RenameRestoredObjectParam field.
func (o *RestoreHyperVVMParams) SetRenameRestoredObjectParam(v RenameObjectParamProto) {
	o.RenameRestoredObjectParam = &v
}

// GetResourceEntity returns the ResourceEntity field value if set, zero value otherwise.
func (o *RestoreHyperVVMParams) GetResourceEntity() EntityProto {
	if o == nil || o.ResourceEntity == nil {
		var ret EntityProto
		return ret
	}
	return *o.ResourceEntity
}

// GetResourceEntityOk returns a tuple with the ResourceEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreHyperVVMParams) GetResourceEntityOk() (*EntityProto, bool) {
	if o == nil || o.ResourceEntity == nil {
		return nil, false
	}
	return o.ResourceEntity, true
}

// HasResourceEntity returns a boolean if a field has been set.
func (o *RestoreHyperVVMParams) HasResourceEntity() bool {
	if o != nil && o.ResourceEntity != nil {
		return true
	}

	return false
}

// SetResourceEntity gets a reference to the given EntityProto and assigns it to the ResourceEntity field.
func (o *RestoreHyperVVMParams) SetResourceEntity(v EntityProto) {
	o.ResourceEntity = &v
}

// GetRestoredObjectsNetworkConfig returns the RestoredObjectsNetworkConfig field value if set, zero value otherwise.
func (o *RestoreHyperVVMParams) GetRestoredObjectsNetworkConfig() RestoredObjectNetworkConfigProto {
	if o == nil || o.RestoredObjectsNetworkConfig == nil {
		var ret RestoredObjectNetworkConfigProto
		return ret
	}
	return *o.RestoredObjectsNetworkConfig
}

// GetRestoredObjectsNetworkConfigOk returns a tuple with the RestoredObjectsNetworkConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreHyperVVMParams) GetRestoredObjectsNetworkConfigOk() (*RestoredObjectNetworkConfigProto, bool) {
	if o == nil || o.RestoredObjectsNetworkConfig == nil {
		return nil, false
	}
	return o.RestoredObjectsNetworkConfig, true
}

// HasRestoredObjectsNetworkConfig returns a boolean if a field has been set.
func (o *RestoreHyperVVMParams) HasRestoredObjectsNetworkConfig() bool {
	if o != nil && o.RestoredObjectsNetworkConfig != nil {
		return true
	}

	return false
}

// SetRestoredObjectsNetworkConfig gets a reference to the given RestoredObjectNetworkConfigProto and assigns it to the RestoredObjectsNetworkConfig field.
func (o *RestoreHyperVVMParams) SetRestoredObjectsNetworkConfig(v RestoredObjectNetworkConfigProto) {
	o.RestoredObjectsNetworkConfig = &v
}

// GetUuidConfig returns the UuidConfig field value if set, zero value otherwise.
func (o *RestoreHyperVVMParams) GetUuidConfig() UuidConfigProto {
	if o == nil || o.UuidConfig == nil {
		var ret UuidConfigProto
		return ret
	}
	return *o.UuidConfig
}

// GetUuidConfigOk returns a tuple with the UuidConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreHyperVVMParams) GetUuidConfigOk() (*UuidConfigProto, bool) {
	if o == nil || o.UuidConfig == nil {
		return nil, false
	}
	return o.UuidConfig, true
}

// HasUuidConfig returns a boolean if a field has been set.
func (o *RestoreHyperVVMParams) HasUuidConfig() bool {
	if o != nil && o.UuidConfig != nil {
		return true
	}

	return false
}

// SetUuidConfig gets a reference to the given UuidConfigProto and assigns it to the UuidConfig field.
func (o *RestoreHyperVVMParams) SetUuidConfig(v UuidConfigProto) {
	o.UuidConfig = &v
}

func (o RestoreHyperVVMParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CopyRecovery.IsSet() {
		toSerialize["copyRecovery"] = o.CopyRecovery.Get()
	}
	if o.DatastoreEntity != nil {
		toSerialize["datastoreEntity"] = o.DatastoreEntity
	}
	if o.PowerStateConfig != nil {
		toSerialize["powerStateConfig"] = o.PowerStateConfig
	}
	if o.RenameRestoredObjectParam != nil {
		toSerialize["renameRestoredObjectParam"] = o.RenameRestoredObjectParam
	}
	if o.ResourceEntity != nil {
		toSerialize["resourceEntity"] = o.ResourceEntity
	}
	if o.RestoredObjectsNetworkConfig != nil {
		toSerialize["restoredObjectsNetworkConfig"] = o.RestoredObjectsNetworkConfig
	}
	if o.UuidConfig != nil {
		toSerialize["uuidConfig"] = o.UuidConfig
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreHyperVVMParams struct {
	value *RestoreHyperVVMParams
	isSet bool
}

func (v NullableRestoreHyperVVMParams) Get() *RestoreHyperVVMParams {
	return v.value
}

func (v *NullableRestoreHyperVVMParams) Set(val *RestoreHyperVVMParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreHyperVVMParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreHyperVVMParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreHyperVVMParams(val *RestoreHyperVVMParams) *NullableRestoreHyperVVMParams {
	return &NullableRestoreHyperVVMParams{value: val, isSet: true}
}

func (v NullableRestoreHyperVVMParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreHyperVVMParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


