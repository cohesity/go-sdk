/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// TenantUserUpdateParameters Specifies user update details about a tenant.
type TenantUserUpdateParameters struct {
	// Specifies the array of Sid of the users.
	Sids []string `json:"sids,omitempty"`
	// Specifies the unique id of the tenant.
	TenantId NullableString `json:"tenantId,omitempty"`
}

// NewTenantUserUpdateParameters instantiates a new TenantUserUpdateParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantUserUpdateParameters() *TenantUserUpdateParameters {
	this := TenantUserUpdateParameters{}
	return &this
}

// NewTenantUserUpdateParametersWithDefaults instantiates a new TenantUserUpdateParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantUserUpdateParametersWithDefaults() *TenantUserUpdateParameters {
	this := TenantUserUpdateParameters{}
	return &this
}

// GetSids returns the Sids field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUserUpdateParameters) GetSids() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Sids
}

// GetSidsOk returns a tuple with the Sids field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUserUpdateParameters) GetSidsOk() (*[]string, bool) {
	if o == nil || o.Sids == nil {
		return nil, false
	}
	return &o.Sids, true
}

// HasSids returns a boolean if a field has been set.
func (o *TenantUserUpdateParameters) HasSids() bool {
	if o != nil && o.Sids != nil {
		return true
	}

	return false
}

// SetSids gets a reference to the given []string and assigns it to the Sids field.
func (o *TenantUserUpdateParameters) SetSids(v []string) {
	o.Sids = v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUserUpdateParameters) GetTenantId() string {
	if o == nil || o.TenantId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUserUpdateParameters) GetTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *TenantUserUpdateParameters) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *TenantUserUpdateParameters) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *TenantUserUpdateParameters) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *TenantUserUpdateParameters) UnsetTenantId() {
	o.TenantId.Unset()
}

func (o TenantUserUpdateParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Sids != nil {
		toSerialize["sids"] = o.Sids
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTenantUserUpdateParameters struct {
	value *TenantUserUpdateParameters
	isSet bool
}

func (v NullableTenantUserUpdateParameters) Get() *TenantUserUpdateParameters {
	return v.value
}

func (v *NullableTenantUserUpdateParameters) Set(val *TenantUserUpdateParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantUserUpdateParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantUserUpdateParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantUserUpdateParameters(val *TenantUserUpdateParameters) *NullableTenantUserUpdateParameters {
	return &NullableTenantUserUpdateParameters{value: val, isSet: true}
}

func (v NullableTenantUserUpdateParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantUserUpdateParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


