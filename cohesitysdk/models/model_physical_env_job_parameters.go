/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// PhysicalEnvJobParameters Protection Job parameters applicable to 'kPhysical' Environment type. Specifies job parameters applicable for all 'kPhysical' Environment type Protection Sources in a Protection Job.
type PhysicalEnvJobParameters struct {
	FilePathFilters *FilePathFilter `json:"filePathFilters,omitempty"`
	// If true, performs an incremental backup after server restarts. Otherwise a full backup is done. NOTE: This is applicable only to Windows servers. If not set, default value is false.
	IncrementalSnapshotUponRestart NullableBool `json:"incrementalSnapshotUponRestart,omitempty"`
}

// NewPhysicalEnvJobParameters instantiates a new PhysicalEnvJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhysicalEnvJobParameters() *PhysicalEnvJobParameters {
	this := PhysicalEnvJobParameters{}
	return &this
}

// NewPhysicalEnvJobParametersWithDefaults instantiates a new PhysicalEnvJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhysicalEnvJobParametersWithDefaults() *PhysicalEnvJobParameters {
	this := PhysicalEnvJobParameters{}
	return &this
}

// GetFilePathFilters returns the FilePathFilters field value if set, zero value otherwise.
func (o *PhysicalEnvJobParameters) GetFilePathFilters() FilePathFilter {
	if o == nil || o.FilePathFilters == nil {
		var ret FilePathFilter
		return ret
	}
	return *o.FilePathFilters
}

// GetFilePathFiltersOk returns a tuple with the FilePathFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhysicalEnvJobParameters) GetFilePathFiltersOk() (*FilePathFilter, bool) {
	if o == nil || o.FilePathFilters == nil {
		return nil, false
	}
	return o.FilePathFilters, true
}

// HasFilePathFilters returns a boolean if a field has been set.
func (o *PhysicalEnvJobParameters) HasFilePathFilters() bool {
	if o != nil && o.FilePathFilters != nil {
		return true
	}

	return false
}

// SetFilePathFilters gets a reference to the given FilePathFilter and assigns it to the FilePathFilters field.
func (o *PhysicalEnvJobParameters) SetFilePathFilters(v FilePathFilter) {
	o.FilePathFilters = &v
}

// GetIncrementalSnapshotUponRestart returns the IncrementalSnapshotUponRestart field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhysicalEnvJobParameters) GetIncrementalSnapshotUponRestart() bool {
	if o == nil || o.IncrementalSnapshotUponRestart.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IncrementalSnapshotUponRestart.Get()
}

// GetIncrementalSnapshotUponRestartOk returns a tuple with the IncrementalSnapshotUponRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalEnvJobParameters) GetIncrementalSnapshotUponRestartOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IncrementalSnapshotUponRestart.Get(), o.IncrementalSnapshotUponRestart.IsSet()
}

// HasIncrementalSnapshotUponRestart returns a boolean if a field has been set.
func (o *PhysicalEnvJobParameters) HasIncrementalSnapshotUponRestart() bool {
	if o != nil && o.IncrementalSnapshotUponRestart.IsSet() {
		return true
	}

	return false
}

// SetIncrementalSnapshotUponRestart gets a reference to the given NullableBool and assigns it to the IncrementalSnapshotUponRestart field.
func (o *PhysicalEnvJobParameters) SetIncrementalSnapshotUponRestart(v bool) {
	o.IncrementalSnapshotUponRestart.Set(&v)
}
// SetIncrementalSnapshotUponRestartNil sets the value for IncrementalSnapshotUponRestart to be an explicit nil
func (o *PhysicalEnvJobParameters) SetIncrementalSnapshotUponRestartNil() {
	o.IncrementalSnapshotUponRestart.Set(nil)
}

// UnsetIncrementalSnapshotUponRestart ensures that no value is present for IncrementalSnapshotUponRestart, not even an explicit nil
func (o *PhysicalEnvJobParameters) UnsetIncrementalSnapshotUponRestart() {
	o.IncrementalSnapshotUponRestart.Unset()
}

func (o PhysicalEnvJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FilePathFilters != nil {
		toSerialize["filePathFilters"] = o.FilePathFilters
	}
	if o.IncrementalSnapshotUponRestart.IsSet() {
		toSerialize["incrementalSnapshotUponRestart"] = o.IncrementalSnapshotUponRestart.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePhysicalEnvJobParameters struct {
	value *PhysicalEnvJobParameters
	isSet bool
}

func (v NullablePhysicalEnvJobParameters) Get() *PhysicalEnvJobParameters {
	return v.value
}

func (v *NullablePhysicalEnvJobParameters) Set(val *PhysicalEnvJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullablePhysicalEnvJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullablePhysicalEnvJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhysicalEnvJobParameters(val *PhysicalEnvJobParameters) *NullablePhysicalEnvJobParameters {
	return &NullablePhysicalEnvJobParameters{value: val, isSet: true}
}

func (v NullablePhysicalEnvJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhysicalEnvJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


