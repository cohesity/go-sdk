/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// CassandraBackupJobParams Contains any additional cassandra environment specific backup params at the job level.
type CassandraBackupJobParams struct {
	CassandraAdditionalInfo *CassandraAdditionalParams `json:"cassandraAdditionalInfo,omitempty"`
	// The data centers selected for backup.
	SelectedDataCenterVec []string `json:"selectedDataCenterVec,omitempty"`
}

// NewCassandraBackupJobParams instantiates a new CassandraBackupJobParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCassandraBackupJobParams() *CassandraBackupJobParams {
	this := CassandraBackupJobParams{}
	return &this
}

// NewCassandraBackupJobParamsWithDefaults instantiates a new CassandraBackupJobParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCassandraBackupJobParamsWithDefaults() *CassandraBackupJobParams {
	this := CassandraBackupJobParams{}
	return &this
}

// GetCassandraAdditionalInfo returns the CassandraAdditionalInfo field value if set, zero value otherwise.
func (o *CassandraBackupJobParams) GetCassandraAdditionalInfo() CassandraAdditionalParams {
	if o == nil || o.CassandraAdditionalInfo == nil {
		var ret CassandraAdditionalParams
		return ret
	}
	return *o.CassandraAdditionalInfo
}

// GetCassandraAdditionalInfoOk returns a tuple with the CassandraAdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CassandraBackupJobParams) GetCassandraAdditionalInfoOk() (*CassandraAdditionalParams, bool) {
	if o == nil || o.CassandraAdditionalInfo == nil {
		return nil, false
	}
	return o.CassandraAdditionalInfo, true
}

// HasCassandraAdditionalInfo returns a boolean if a field has been set.
func (o *CassandraBackupJobParams) HasCassandraAdditionalInfo() bool {
	if o != nil && o.CassandraAdditionalInfo != nil {
		return true
	}

	return false
}

// SetCassandraAdditionalInfo gets a reference to the given CassandraAdditionalParams and assigns it to the CassandraAdditionalInfo field.
func (o *CassandraBackupJobParams) SetCassandraAdditionalInfo(v CassandraAdditionalParams) {
	o.CassandraAdditionalInfo = &v
}

// GetSelectedDataCenterVec returns the SelectedDataCenterVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraBackupJobParams) GetSelectedDataCenterVec() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.SelectedDataCenterVec
}

// GetSelectedDataCenterVecOk returns a tuple with the SelectedDataCenterVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraBackupJobParams) GetSelectedDataCenterVecOk() (*[]string, bool) {
	if o == nil || o.SelectedDataCenterVec == nil {
		return nil, false
	}
	return &o.SelectedDataCenterVec, true
}

// HasSelectedDataCenterVec returns a boolean if a field has been set.
func (o *CassandraBackupJobParams) HasSelectedDataCenterVec() bool {
	if o != nil && o.SelectedDataCenterVec != nil {
		return true
	}

	return false
}

// SetSelectedDataCenterVec gets a reference to the given []string and assigns it to the SelectedDataCenterVec field.
func (o *CassandraBackupJobParams) SetSelectedDataCenterVec(v []string) {
	o.SelectedDataCenterVec = v
}

func (o CassandraBackupJobParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CassandraAdditionalInfo != nil {
		toSerialize["cassandraAdditionalInfo"] = o.CassandraAdditionalInfo
	}
	if o.SelectedDataCenterVec != nil {
		toSerialize["selectedDataCenterVec"] = o.SelectedDataCenterVec
	}
	return json.Marshal(toSerialize)
}

type NullableCassandraBackupJobParams struct {
	value *CassandraBackupJobParams
	isSet bool
}

func (v NullableCassandraBackupJobParams) Get() *CassandraBackupJobParams {
	return v.value
}

func (v *NullableCassandraBackupJobParams) Set(val *CassandraBackupJobParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCassandraBackupJobParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCassandraBackupJobParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCassandraBackupJobParams(val *CassandraBackupJobParams) *NullableCassandraBackupJobParams {
	return &NullableCassandraBackupJobParams{value: val, isSet: true}
}

func (v NullableCassandraBackupJobParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCassandraBackupJobParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


