/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// MongoDBRecoverJobParams Contains any additional mongodb environment specific params for the recover job.
type MongoDBRecoverJobParams struct {
	// A suffix that is to be applied to all recovered entities
	Suffix NullableString `json:"suffix,omitempty"`
}

// NewMongoDBRecoverJobParams instantiates a new MongoDBRecoverJobParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMongoDBRecoverJobParams() *MongoDBRecoverJobParams {
	this := MongoDBRecoverJobParams{}
	return &this
}

// NewMongoDBRecoverJobParamsWithDefaults instantiates a new MongoDBRecoverJobParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMongoDBRecoverJobParamsWithDefaults() *MongoDBRecoverJobParams {
	this := MongoDBRecoverJobParams{}
	return &this
}

// GetSuffix returns the Suffix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MongoDBRecoverJobParams) GetSuffix() string {
	if o == nil || o.Suffix.Get() == nil {
		var ret string
		return ret
	}
	return *o.Suffix.Get()
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MongoDBRecoverJobParams) GetSuffixOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Suffix.Get(), o.Suffix.IsSet()
}

// HasSuffix returns a boolean if a field has been set.
func (o *MongoDBRecoverJobParams) HasSuffix() bool {
	if o != nil && o.Suffix.IsSet() {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given NullableString and assigns it to the Suffix field.
func (o *MongoDBRecoverJobParams) SetSuffix(v string) {
	o.Suffix.Set(&v)
}
// SetSuffixNil sets the value for Suffix to be an explicit nil
func (o *MongoDBRecoverJobParams) SetSuffixNil() {
	o.Suffix.Set(nil)
}

// UnsetSuffix ensures that no value is present for Suffix, not even an explicit nil
func (o *MongoDBRecoverJobParams) UnsetSuffix() {
	o.Suffix.Unset()
}

func (o MongoDBRecoverJobParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Suffix.IsSet() {
		toSerialize["suffix"] = o.Suffix.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMongoDBRecoverJobParams struct {
	value *MongoDBRecoverJobParams
	isSet bool
}

func (v NullableMongoDBRecoverJobParams) Get() *MongoDBRecoverJobParams {
	return v.value
}

func (v *NullableMongoDBRecoverJobParams) Set(val *MongoDBRecoverJobParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMongoDBRecoverJobParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMongoDBRecoverJobParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMongoDBRecoverJobParams(val *MongoDBRecoverJobParams) *NullableMongoDBRecoverJobParams {
	return &NullableMongoDBRecoverJobParams{value: val, isSet: true}
}

func (v NullableMongoDBRecoverJobParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMongoDBRecoverJobParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


