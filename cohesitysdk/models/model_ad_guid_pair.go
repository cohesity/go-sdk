/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ADGuidPair struct for ADGuidPair
type ADGuidPair struct {
	// Destination guid in production AD object corresponding to source. If empty, it assumed to be 'source' guid.
	Destination NullableString `json:"destination,omitempty"`
	// Source guid string of an AD object in mounted AD snapshot. This cannot be empty.
	Source NullableString `json:"source,omitempty"`
}

// NewADGuidPair instantiates a new ADGuidPair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADGuidPair() *ADGuidPair {
	this := ADGuidPair{}
	return &this
}

// NewADGuidPairWithDefaults instantiates a new ADGuidPair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADGuidPairWithDefaults() *ADGuidPair {
	this := ADGuidPair{}
	return &this
}

// GetDestination returns the Destination field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ADGuidPair) GetDestination() string {
	if o == nil || o.Destination.Get() == nil {
		var ret string
		return ret
	}
	return *o.Destination.Get()
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ADGuidPair) GetDestinationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Destination.Get(), o.Destination.IsSet()
}

// HasDestination returns a boolean if a field has been set.
func (o *ADGuidPair) HasDestination() bool {
	if o != nil && o.Destination.IsSet() {
		return true
	}

	return false
}

// SetDestination gets a reference to the given NullableString and assigns it to the Destination field.
func (o *ADGuidPair) SetDestination(v string) {
	o.Destination.Set(&v)
}
// SetDestinationNil sets the value for Destination to be an explicit nil
func (o *ADGuidPair) SetDestinationNil() {
	o.Destination.Set(nil)
}

// UnsetDestination ensures that no value is present for Destination, not even an explicit nil
func (o *ADGuidPair) UnsetDestination() {
	o.Destination.Unset()
}

// GetSource returns the Source field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ADGuidPair) GetSource() string {
	if o == nil || o.Source.Get() == nil {
		var ret string
		return ret
	}
	return *o.Source.Get()
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ADGuidPair) GetSourceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Source.Get(), o.Source.IsSet()
}

// HasSource returns a boolean if a field has been set.
func (o *ADGuidPair) HasSource() bool {
	if o != nil && o.Source.IsSet() {
		return true
	}

	return false
}

// SetSource gets a reference to the given NullableString and assigns it to the Source field.
func (o *ADGuidPair) SetSource(v string) {
	o.Source.Set(&v)
}
// SetSourceNil sets the value for Source to be an explicit nil
func (o *ADGuidPair) SetSourceNil() {
	o.Source.Set(nil)
}

// UnsetSource ensures that no value is present for Source, not even an explicit nil
func (o *ADGuidPair) UnsetSource() {
	o.Source.Unset()
}

func (o ADGuidPair) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Destination.IsSet() {
		toSerialize["destination"] = o.Destination.Get()
	}
	if o.Source.IsSet() {
		toSerialize["source"] = o.Source.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableADGuidPair struct {
	value *ADGuidPair
	isSet bool
}

func (v NullableADGuidPair) Get() *ADGuidPair {
	return v.value
}

func (v *NullableADGuidPair) Set(val *ADGuidPair) {
	v.value = val
	v.isSet = true
}

func (v NullableADGuidPair) IsSet() bool {
	return v.isSet
}

func (v *NullableADGuidPair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADGuidPair(val *ADGuidPair) *NullableADGuidPair {
	return &NullableADGuidPair{value: val, isSet: true}
}

func (v NullableADGuidPair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADGuidPair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


