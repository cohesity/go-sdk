/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// RestoreObjectDetails Specifies an object to recover or clone or an object to restore files and folders from. A VM object can be recovered or cloned. A View object can be cloned. To specify a particular snapshot, you must specify a jobRunId and a startTimeUsecs. If jobRunId and startTimeUsecs are not specified, the last Job Run of the specified Job is used.
type RestoreObjectDetails struct {
	// Specifies settings about the Archival Target (such as Tape or AWS). This field must be set if the object is being recovered or cloned from an archive or if files or folders are being restored from an archive.
	ArchivalTarget NullableArchivalExternalTarget `json:"archivalTarget,omitempty"`
	// Specifies settings about the Cloud Deploy target. This field must be set if the restore type is kDeployVMs and the object is to be deployed to cloud using a previously converted image.
	CloudDeployTarget NullableCloudDeployTargetDetails `json:"cloudDeployTarget,omitempty"`
	// Specifies the type of the Protection Source. Supported environment types such as 'kView', 'kSQL', 'kVMware', etc. NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter. 'kVMware' indicates the VMware Protection Source environment. 'kHyperV' indicates the HyperV Protection Source environment. 'kSQL' indicates the SQL Protection Source environment. 'kView' indicates the View Protection Source environment. 'kPuppeteer' indicates the Cohesity's Remote Adapter. 'kPhysical' indicates the physical Protection Source environment. 'kPure' indicates the Pure Storage Protection Source environment. 'Nimble' indicates the Nimble Storage Protection Source environment. 'kAzure' indicates the Microsoft's Azure Protection Source environment. 'kNetapp' indicates the Netapp Protection Source environment. 'kAgent' indicates the Agent Protection Source environment. 'kGenericNas' indicates the Generic Network Attached Storage Protection Source environment. 'kAcropolis' indicates the Acropolis Protection Source environment. 'kPhsicalFiles' indicates the Physical Files Protection Source environment. 'kIsilon' indicates the Dell EMC's Isilon Protection Source environment. 'kGPFS' indicates IBM's GPFS Protection Source environment. 'kKVM' indicates the KVM Protection Source environment. 'kAWS' indicates the AWS Protection Source environment. 'kExchange' indicates the Exchange Protection Source environment. 'kHyperVVSS' indicates the HyperV VSS Protection Source environment. 'kOracle' indicates the Oracle Protection Source environment. 'kGCP' indicates the Google Cloud Platform Protection Source environment. 'kFlashBlade' indicates the Flash Blade Protection Source environment. 'kAWSNative' indicates the AWS Native Protection Source environment. 'kO365' indicates the Office 365 Protection Source environment. 'kO365Outlook' indicates Office 365 outlook Protection Source environment. 'kHyperFlex' indicates the Hyper Flex Protection Source environment. 'kGCPNative' indicates the GCP Native Protection Source environment. 'kAzureNative' indicates the Azure Native Protection Source environment. 'kKubernetes' indicates a Kubernetes Protection Source environment. 'kElastifile' indicates Elastifile Protection Source environment. 'kAD' indicates Active Directory Protection Source environment. 'kRDSSnapshotManager' indicates AWS RDS Protection Source environment. 'kCassandra' indicates Cassandra Protection Source environment. 'kMongoDB' indicates MongoDB Protection Source environment. 'kCouchbase' indicates Couchbase Protection Source environment. 'kHdfs' indicates Hdfs Protection Source environment. 'kHive' indicates Hive Protection Source environment. 'kHBase' indicates HBase Protection Source environment.
	Environment NullableString `json:"environment,omitempty"`
	// Protection Job Id.  Specifies id of the Protection Job that backed up the objects to be restored.
	JobId NullableInt64 `json:"jobId,omitempty"`
	// Specifies the id of the Job Run that captured the snapshot.
	JobRunId NullableInt64 `json:"jobRunId,omitempty"`
	// Specifies the universal id of the Protection Job that backed up the objects to recover or clone or the objects that contain the files or folders to recover.
	JobUid NullableUniversalId `json:"jobUid,omitempty"`
	// Specifies the id of the leaf object to recover, clone or recover files/folders from.
	ProtectionSourceId NullableInt64 `json:"protectionSourceId,omitempty"`
	// Specifies the name of the Protection Source.
	SourceName NullableString `json:"sourceName,omitempty"`
	// Specifies the time when the Job Run starts capturing a snapshot. Specified as a Unix epoch Timestamp (in microseconds).
	StartedTimeUsecs NullableInt64 `json:"startedTimeUsecs,omitempty"`
}

// NewRestoreObjectDetails instantiates a new RestoreObjectDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreObjectDetails() *RestoreObjectDetails {
	this := RestoreObjectDetails{}
	return &this
}

// NewRestoreObjectDetailsWithDefaults instantiates a new RestoreObjectDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreObjectDetailsWithDefaults() *RestoreObjectDetails {
	this := RestoreObjectDetails{}
	return &this
}

// GetArchivalTarget returns the ArchivalTarget field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreObjectDetails) GetArchivalTarget() ArchivalExternalTarget {
	if o == nil || o.ArchivalTarget.Get() == nil {
		var ret ArchivalExternalTarget
		return ret
	}
	return *o.ArchivalTarget.Get()
}

// GetArchivalTargetOk returns a tuple with the ArchivalTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreObjectDetails) GetArchivalTargetOk() (*ArchivalExternalTarget, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ArchivalTarget.Get(), o.ArchivalTarget.IsSet()
}

// HasArchivalTarget returns a boolean if a field has been set.
func (o *RestoreObjectDetails) HasArchivalTarget() bool {
	if o != nil && o.ArchivalTarget.IsSet() {
		return true
	}

	return false
}

// SetArchivalTarget gets a reference to the given NullableArchivalExternalTarget and assigns it to the ArchivalTarget field.
func (o *RestoreObjectDetails) SetArchivalTarget(v ArchivalExternalTarget) {
	o.ArchivalTarget.Set(&v)
}
// SetArchivalTargetNil sets the value for ArchivalTarget to be an explicit nil
func (o *RestoreObjectDetails) SetArchivalTargetNil() {
	o.ArchivalTarget.Set(nil)
}

// UnsetArchivalTarget ensures that no value is present for ArchivalTarget, not even an explicit nil
func (o *RestoreObjectDetails) UnsetArchivalTarget() {
	o.ArchivalTarget.Unset()
}

// GetCloudDeployTarget returns the CloudDeployTarget field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreObjectDetails) GetCloudDeployTarget() CloudDeployTargetDetails {
	if o == nil || o.CloudDeployTarget.Get() == nil {
		var ret CloudDeployTargetDetails
		return ret
	}
	return *o.CloudDeployTarget.Get()
}

// GetCloudDeployTargetOk returns a tuple with the CloudDeployTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreObjectDetails) GetCloudDeployTargetOk() (*CloudDeployTargetDetails, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CloudDeployTarget.Get(), o.CloudDeployTarget.IsSet()
}

// HasCloudDeployTarget returns a boolean if a field has been set.
func (o *RestoreObjectDetails) HasCloudDeployTarget() bool {
	if o != nil && o.CloudDeployTarget.IsSet() {
		return true
	}

	return false
}

// SetCloudDeployTarget gets a reference to the given NullableCloudDeployTargetDetails and assigns it to the CloudDeployTarget field.
func (o *RestoreObjectDetails) SetCloudDeployTarget(v CloudDeployTargetDetails) {
	o.CloudDeployTarget.Set(&v)
}
// SetCloudDeployTargetNil sets the value for CloudDeployTarget to be an explicit nil
func (o *RestoreObjectDetails) SetCloudDeployTargetNil() {
	o.CloudDeployTarget.Set(nil)
}

// UnsetCloudDeployTarget ensures that no value is present for CloudDeployTarget, not even an explicit nil
func (o *RestoreObjectDetails) UnsetCloudDeployTarget() {
	o.CloudDeployTarget.Unset()
}

// GetEnvironment returns the Environment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreObjectDetails) GetEnvironment() string {
	if o == nil || o.Environment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreObjectDetails) GetEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// HasEnvironment returns a boolean if a field has been set.
func (o *RestoreObjectDetails) HasEnvironment() bool {
	if o != nil && o.Environment.IsSet() {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given NullableString and assigns it to the Environment field.
func (o *RestoreObjectDetails) SetEnvironment(v string) {
	o.Environment.Set(&v)
}
// SetEnvironmentNil sets the value for Environment to be an explicit nil
func (o *RestoreObjectDetails) SetEnvironmentNil() {
	o.Environment.Set(nil)
}

// UnsetEnvironment ensures that no value is present for Environment, not even an explicit nil
func (o *RestoreObjectDetails) UnsetEnvironment() {
	o.Environment.Unset()
}

// GetJobId returns the JobId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreObjectDetails) GetJobId() int64 {
	if o == nil || o.JobId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.JobId.Get()
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreObjectDetails) GetJobIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobId.Get(), o.JobId.IsSet()
}

// HasJobId returns a boolean if a field has been set.
func (o *RestoreObjectDetails) HasJobId() bool {
	if o != nil && o.JobId.IsSet() {
		return true
	}

	return false
}

// SetJobId gets a reference to the given NullableInt64 and assigns it to the JobId field.
func (o *RestoreObjectDetails) SetJobId(v int64) {
	o.JobId.Set(&v)
}
// SetJobIdNil sets the value for JobId to be an explicit nil
func (o *RestoreObjectDetails) SetJobIdNil() {
	o.JobId.Set(nil)
}

// UnsetJobId ensures that no value is present for JobId, not even an explicit nil
func (o *RestoreObjectDetails) UnsetJobId() {
	o.JobId.Unset()
}

// GetJobRunId returns the JobRunId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreObjectDetails) GetJobRunId() int64 {
	if o == nil || o.JobRunId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.JobRunId.Get()
}

// GetJobRunIdOk returns a tuple with the JobRunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreObjectDetails) GetJobRunIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobRunId.Get(), o.JobRunId.IsSet()
}

// HasJobRunId returns a boolean if a field has been set.
func (o *RestoreObjectDetails) HasJobRunId() bool {
	if o != nil && o.JobRunId.IsSet() {
		return true
	}

	return false
}

// SetJobRunId gets a reference to the given NullableInt64 and assigns it to the JobRunId field.
func (o *RestoreObjectDetails) SetJobRunId(v int64) {
	o.JobRunId.Set(&v)
}
// SetJobRunIdNil sets the value for JobRunId to be an explicit nil
func (o *RestoreObjectDetails) SetJobRunIdNil() {
	o.JobRunId.Set(nil)
}

// UnsetJobRunId ensures that no value is present for JobRunId, not even an explicit nil
func (o *RestoreObjectDetails) UnsetJobRunId() {
	o.JobRunId.Unset()
}

// GetJobUid returns the JobUid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreObjectDetails) GetJobUid() UniversalId {
	if o == nil || o.JobUid.Get() == nil {
		var ret UniversalId
		return ret
	}
	return *o.JobUid.Get()
}

// GetJobUidOk returns a tuple with the JobUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreObjectDetails) GetJobUidOk() (*UniversalId, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobUid.Get(), o.JobUid.IsSet()
}

// HasJobUid returns a boolean if a field has been set.
func (o *RestoreObjectDetails) HasJobUid() bool {
	if o != nil && o.JobUid.IsSet() {
		return true
	}

	return false
}

// SetJobUid gets a reference to the given NullableUniversalId and assigns it to the JobUid field.
func (o *RestoreObjectDetails) SetJobUid(v UniversalId) {
	o.JobUid.Set(&v)
}
// SetJobUidNil sets the value for JobUid to be an explicit nil
func (o *RestoreObjectDetails) SetJobUidNil() {
	o.JobUid.Set(nil)
}

// UnsetJobUid ensures that no value is present for JobUid, not even an explicit nil
func (o *RestoreObjectDetails) UnsetJobUid() {
	o.JobUid.Unset()
}

// GetProtectionSourceId returns the ProtectionSourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreObjectDetails) GetProtectionSourceId() int64 {
	if o == nil || o.ProtectionSourceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ProtectionSourceId.Get()
}

// GetProtectionSourceIdOk returns a tuple with the ProtectionSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreObjectDetails) GetProtectionSourceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectionSourceId.Get(), o.ProtectionSourceId.IsSet()
}

// HasProtectionSourceId returns a boolean if a field has been set.
func (o *RestoreObjectDetails) HasProtectionSourceId() bool {
	if o != nil && o.ProtectionSourceId.IsSet() {
		return true
	}

	return false
}

// SetProtectionSourceId gets a reference to the given NullableInt64 and assigns it to the ProtectionSourceId field.
func (o *RestoreObjectDetails) SetProtectionSourceId(v int64) {
	o.ProtectionSourceId.Set(&v)
}
// SetProtectionSourceIdNil sets the value for ProtectionSourceId to be an explicit nil
func (o *RestoreObjectDetails) SetProtectionSourceIdNil() {
	o.ProtectionSourceId.Set(nil)
}

// UnsetProtectionSourceId ensures that no value is present for ProtectionSourceId, not even an explicit nil
func (o *RestoreObjectDetails) UnsetProtectionSourceId() {
	o.ProtectionSourceId.Unset()
}

// GetSourceName returns the SourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreObjectDetails) GetSourceName() string {
	if o == nil || o.SourceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceName.Get()
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreObjectDetails) GetSourceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceName.Get(), o.SourceName.IsSet()
}

// HasSourceName returns a boolean if a field has been set.
func (o *RestoreObjectDetails) HasSourceName() bool {
	if o != nil && o.SourceName.IsSet() {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given NullableString and assigns it to the SourceName field.
func (o *RestoreObjectDetails) SetSourceName(v string) {
	o.SourceName.Set(&v)
}
// SetSourceNameNil sets the value for SourceName to be an explicit nil
func (o *RestoreObjectDetails) SetSourceNameNil() {
	o.SourceName.Set(nil)
}

// UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil
func (o *RestoreObjectDetails) UnsetSourceName() {
	o.SourceName.Unset()
}

// GetStartedTimeUsecs returns the StartedTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreObjectDetails) GetStartedTimeUsecs() int64 {
	if o == nil || o.StartedTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StartedTimeUsecs.Get()
}

// GetStartedTimeUsecsOk returns a tuple with the StartedTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreObjectDetails) GetStartedTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartedTimeUsecs.Get(), o.StartedTimeUsecs.IsSet()
}

// HasStartedTimeUsecs returns a boolean if a field has been set.
func (o *RestoreObjectDetails) HasStartedTimeUsecs() bool {
	if o != nil && o.StartedTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetStartedTimeUsecs gets a reference to the given NullableInt64 and assigns it to the StartedTimeUsecs field.
func (o *RestoreObjectDetails) SetStartedTimeUsecs(v int64) {
	o.StartedTimeUsecs.Set(&v)
}
// SetStartedTimeUsecsNil sets the value for StartedTimeUsecs to be an explicit nil
func (o *RestoreObjectDetails) SetStartedTimeUsecsNil() {
	o.StartedTimeUsecs.Set(nil)
}

// UnsetStartedTimeUsecs ensures that no value is present for StartedTimeUsecs, not even an explicit nil
func (o *RestoreObjectDetails) UnsetStartedTimeUsecs() {
	o.StartedTimeUsecs.Unset()
}

func (o RestoreObjectDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ArchivalTarget.IsSet() {
		toSerialize["archivalTarget"] = o.ArchivalTarget.Get()
	}
	if o.CloudDeployTarget.IsSet() {
		toSerialize["cloudDeployTarget"] = o.CloudDeployTarget.Get()
	}
	if o.Environment.IsSet() {
		toSerialize["environment"] = o.Environment.Get()
	}
	if o.JobId.IsSet() {
		toSerialize["jobId"] = o.JobId.Get()
	}
	if o.JobRunId.IsSet() {
		toSerialize["jobRunId"] = o.JobRunId.Get()
	}
	if o.JobUid.IsSet() {
		toSerialize["jobUid"] = o.JobUid.Get()
	}
	if o.ProtectionSourceId.IsSet() {
		toSerialize["protectionSourceId"] = o.ProtectionSourceId.Get()
	}
	if o.SourceName.IsSet() {
		toSerialize["sourceName"] = o.SourceName.Get()
	}
	if o.StartedTimeUsecs.IsSet() {
		toSerialize["startedTimeUsecs"] = o.StartedTimeUsecs.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreObjectDetails struct {
	value *RestoreObjectDetails
	isSet bool
}

func (v NullableRestoreObjectDetails) Get() *RestoreObjectDetails {
	return v.value
}

func (v *NullableRestoreObjectDetails) Set(val *RestoreObjectDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreObjectDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreObjectDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreObjectDetails(val *RestoreObjectDetails) *NullableRestoreObjectDetails {
	return &NullableRestoreObjectDetails{value: val, isSet: true}
}

func (v NullableRestoreObjectDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreObjectDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


