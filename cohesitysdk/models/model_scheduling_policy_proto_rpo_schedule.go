/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// SchedulingPolicyProtoRPOSchedule struct for SchedulingPolicyProtoRPOSchedule
type SchedulingPolicyProtoRPOSchedule struct {
	// If this field is set, then at any point, a recovery point should be available not older than the given interval mins.
	RpoIntervalMins NullableInt64 `json:"rpoIntervalMins,omitempty"`
}

// NewSchedulingPolicyProtoRPOSchedule instantiates a new SchedulingPolicyProtoRPOSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedulingPolicyProtoRPOSchedule() *SchedulingPolicyProtoRPOSchedule {
	this := SchedulingPolicyProtoRPOSchedule{}
	return &this
}

// NewSchedulingPolicyProtoRPOScheduleWithDefaults instantiates a new SchedulingPolicyProtoRPOSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedulingPolicyProtoRPOScheduleWithDefaults() *SchedulingPolicyProtoRPOSchedule {
	this := SchedulingPolicyProtoRPOSchedule{}
	return &this
}

// GetRpoIntervalMins returns the RpoIntervalMins field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulingPolicyProtoRPOSchedule) GetRpoIntervalMins() int64 {
	if o == nil || o.RpoIntervalMins.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RpoIntervalMins.Get()
}

// GetRpoIntervalMinsOk returns a tuple with the RpoIntervalMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulingPolicyProtoRPOSchedule) GetRpoIntervalMinsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RpoIntervalMins.Get(), o.RpoIntervalMins.IsSet()
}

// HasRpoIntervalMins returns a boolean if a field has been set.
func (o *SchedulingPolicyProtoRPOSchedule) HasRpoIntervalMins() bool {
	if o != nil && o.RpoIntervalMins.IsSet() {
		return true
	}

	return false
}

// SetRpoIntervalMins gets a reference to the given NullableInt64 and assigns it to the RpoIntervalMins field.
func (o *SchedulingPolicyProtoRPOSchedule) SetRpoIntervalMins(v int64) {
	o.RpoIntervalMins.Set(&v)
}
// SetRpoIntervalMinsNil sets the value for RpoIntervalMins to be an explicit nil
func (o *SchedulingPolicyProtoRPOSchedule) SetRpoIntervalMinsNil() {
	o.RpoIntervalMins.Set(nil)
}

// UnsetRpoIntervalMins ensures that no value is present for RpoIntervalMins, not even an explicit nil
func (o *SchedulingPolicyProtoRPOSchedule) UnsetRpoIntervalMins() {
	o.RpoIntervalMins.Unset()
}

func (o SchedulingPolicyProtoRPOSchedule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RpoIntervalMins.IsSet() {
		toSerialize["rpoIntervalMins"] = o.RpoIntervalMins.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSchedulingPolicyProtoRPOSchedule struct {
	value *SchedulingPolicyProtoRPOSchedule
	isSet bool
}

func (v NullableSchedulingPolicyProtoRPOSchedule) Get() *SchedulingPolicyProtoRPOSchedule {
	return v.value
}

func (v *NullableSchedulingPolicyProtoRPOSchedule) Set(val *SchedulingPolicyProtoRPOSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedulingPolicyProtoRPOSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedulingPolicyProtoRPOSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedulingPolicyProtoRPOSchedule(val *SchedulingPolicyProtoRPOSchedule) *NullableSchedulingPolicyProtoRPOSchedule {
	return &NullableSchedulingPolicyProtoRPOSchedule{value: val, isSet: true}
}

func (v NullableSchedulingPolicyProtoRPOSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedulingPolicyProtoRPOSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


