/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// MapReduceInfoAppProperty AppProperty message encapsulates properties that are same across all run instances of an app.
type MapReduceInfoAppProperty struct {
	// csv_header should be tab separated column names.
	CsvHeader NullableString `json:"csvHeader,omitempty"`
}

// NewMapReduceInfoAppProperty instantiates a new MapReduceInfoAppProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMapReduceInfoAppProperty() *MapReduceInfoAppProperty {
	this := MapReduceInfoAppProperty{}
	return &this
}

// NewMapReduceInfoAppPropertyWithDefaults instantiates a new MapReduceInfoAppProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMapReduceInfoAppPropertyWithDefaults() *MapReduceInfoAppProperty {
	this := MapReduceInfoAppProperty{}
	return &this
}

// GetCsvHeader returns the CsvHeader field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MapReduceInfoAppProperty) GetCsvHeader() string {
	if o == nil || o.CsvHeader.Get() == nil {
		var ret string
		return ret
	}
	return *o.CsvHeader.Get()
}

// GetCsvHeaderOk returns a tuple with the CsvHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MapReduceInfoAppProperty) GetCsvHeaderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CsvHeader.Get(), o.CsvHeader.IsSet()
}

// HasCsvHeader returns a boolean if a field has been set.
func (o *MapReduceInfoAppProperty) HasCsvHeader() bool {
	if o != nil && o.CsvHeader.IsSet() {
		return true
	}

	return false
}

// SetCsvHeader gets a reference to the given NullableString and assigns it to the CsvHeader field.
func (o *MapReduceInfoAppProperty) SetCsvHeader(v string) {
	o.CsvHeader.Set(&v)
}
// SetCsvHeaderNil sets the value for CsvHeader to be an explicit nil
func (o *MapReduceInfoAppProperty) SetCsvHeaderNil() {
	o.CsvHeader.Set(nil)
}

// UnsetCsvHeader ensures that no value is present for CsvHeader, not even an explicit nil
func (o *MapReduceInfoAppProperty) UnsetCsvHeader() {
	o.CsvHeader.Unset()
}

func (o MapReduceInfoAppProperty) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CsvHeader.IsSet() {
		toSerialize["csvHeader"] = o.CsvHeader.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMapReduceInfoAppProperty struct {
	value *MapReduceInfoAppProperty
	isSet bool
}

func (v NullableMapReduceInfoAppProperty) Get() *MapReduceInfoAppProperty {
	return v.value
}

func (v *NullableMapReduceInfoAppProperty) Set(val *MapReduceInfoAppProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableMapReduceInfoAppProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableMapReduceInfoAppProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMapReduceInfoAppProperty(val *MapReduceInfoAppProperty) *NullableMapReduceInfoAppProperty {
	return &NullableMapReduceInfoAppProperty{value: val, isSet: true}
}

func (v NullableMapReduceInfoAppProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMapReduceInfoAppProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


