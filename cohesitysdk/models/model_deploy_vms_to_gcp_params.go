/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// DeployVMsToGCPParams Contains GCP specific information needed to identify various resources when converting and deploying a VM to GCP.
type DeployVMsToGCPParams struct {
	ProjectId *EntityProto `json:"projectId,omitempty"`
	Region *EntityProto `json:"region,omitempty"`
	Subnet *EntityProto `json:"subnet,omitempty"`
	Zone *EntityProto `json:"zone,omitempty"`
}

// NewDeployVMsToGCPParams instantiates a new DeployVMsToGCPParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployVMsToGCPParams() *DeployVMsToGCPParams {
	this := DeployVMsToGCPParams{}
	return &this
}

// NewDeployVMsToGCPParamsWithDefaults instantiates a new DeployVMsToGCPParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployVMsToGCPParamsWithDefaults() *DeployVMsToGCPParams {
	this := DeployVMsToGCPParams{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *DeployVMsToGCPParams) GetProjectId() EntityProto {
	if o == nil || o.ProjectId == nil {
		var ret EntityProto
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToGCPParams) GetProjectIdOk() (*EntityProto, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *DeployVMsToGCPParams) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given EntityProto and assigns it to the ProjectId field.
func (o *DeployVMsToGCPParams) SetProjectId(v EntityProto) {
	o.ProjectId = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *DeployVMsToGCPParams) GetRegion() EntityProto {
	if o == nil || o.Region == nil {
		var ret EntityProto
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToGCPParams) GetRegionOk() (*EntityProto, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *DeployVMsToGCPParams) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given EntityProto and assigns it to the Region field.
func (o *DeployVMsToGCPParams) SetRegion(v EntityProto) {
	o.Region = &v
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *DeployVMsToGCPParams) GetSubnet() EntityProto {
	if o == nil || o.Subnet == nil {
		var ret EntityProto
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToGCPParams) GetSubnetOk() (*EntityProto, bool) {
	if o == nil || o.Subnet == nil {
		return nil, false
	}
	return o.Subnet, true
}

// HasSubnet returns a boolean if a field has been set.
func (o *DeployVMsToGCPParams) HasSubnet() bool {
	if o != nil && o.Subnet != nil {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given EntityProto and assigns it to the Subnet field.
func (o *DeployVMsToGCPParams) SetSubnet(v EntityProto) {
	o.Subnet = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *DeployVMsToGCPParams) GetZone() EntityProto {
	if o == nil || o.Zone == nil {
		var ret EntityProto
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployVMsToGCPParams) GetZoneOk() (*EntityProto, bool) {
	if o == nil || o.Zone == nil {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *DeployVMsToGCPParams) HasZone() bool {
	if o != nil && o.Zone != nil {
		return true
	}

	return false
}

// SetZone gets a reference to the given EntityProto and assigns it to the Zone field.
func (o *DeployVMsToGCPParams) SetZone(v EntityProto) {
	o.Zone = &v
}

func (o DeployVMsToGCPParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.Subnet != nil {
		toSerialize["subnet"] = o.Subnet
	}
	if o.Zone != nil {
		toSerialize["zone"] = o.Zone
	}
	return json.Marshal(toSerialize)
}

type NullableDeployVMsToGCPParams struct {
	value *DeployVMsToGCPParams
	isSet bool
}

func (v NullableDeployVMsToGCPParams) Get() *DeployVMsToGCPParams {
	return v.value
}

func (v *NullableDeployVMsToGCPParams) Set(val *DeployVMsToGCPParams) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployVMsToGCPParams) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployVMsToGCPParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployVMsToGCPParams(val *DeployVMsToGCPParams) *NullableDeployVMsToGCPParams {
	return &NullableDeployVMsToGCPParams{value: val, isSet: true}
}

func (v NullableDeployVMsToGCPParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployVMsToGCPParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


