/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// RestoreOutlookParamsMailbox struct for RestoreOutlookParamsMailbox
type RestoreOutlookParamsMailbox struct {
	// If is_entire_mailbox_required is set to false, user will then specify which particular folders are to be restored.
	FolderVec []RestoreOutlookParamsFolder `json:"folderVec,omitempty"`
	// Specify if the entire mailbox is to be restored.
	IsEntireMailboxRequired NullableBool `json:"isEntireMailboxRequired,omitempty"`
	Object *RestoreObject `json:"object,omitempty"`
}

// NewRestoreOutlookParamsMailbox instantiates a new RestoreOutlookParamsMailbox object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreOutlookParamsMailbox() *RestoreOutlookParamsMailbox {
	this := RestoreOutlookParamsMailbox{}
	return &this
}

// NewRestoreOutlookParamsMailboxWithDefaults instantiates a new RestoreOutlookParamsMailbox object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreOutlookParamsMailboxWithDefaults() *RestoreOutlookParamsMailbox {
	this := RestoreOutlookParamsMailbox{}
	return &this
}

// GetFolderVec returns the FolderVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreOutlookParamsMailbox) GetFolderVec() []RestoreOutlookParamsFolder {
	if o == nil  {
		var ret []RestoreOutlookParamsFolder
		return ret
	}
	return o.FolderVec
}

// GetFolderVecOk returns a tuple with the FolderVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreOutlookParamsMailbox) GetFolderVecOk() (*[]RestoreOutlookParamsFolder, bool) {
	if o == nil || o.FolderVec == nil {
		return nil, false
	}
	return &o.FolderVec, true
}

// HasFolderVec returns a boolean if a field has been set.
func (o *RestoreOutlookParamsMailbox) HasFolderVec() bool {
	if o != nil && o.FolderVec != nil {
		return true
	}

	return false
}

// SetFolderVec gets a reference to the given []RestoreOutlookParamsFolder and assigns it to the FolderVec field.
func (o *RestoreOutlookParamsMailbox) SetFolderVec(v []RestoreOutlookParamsFolder) {
	o.FolderVec = v
}

// GetIsEntireMailboxRequired returns the IsEntireMailboxRequired field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreOutlookParamsMailbox) GetIsEntireMailboxRequired() bool {
	if o == nil || o.IsEntireMailboxRequired.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsEntireMailboxRequired.Get()
}

// GetIsEntireMailboxRequiredOk returns a tuple with the IsEntireMailboxRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreOutlookParamsMailbox) GetIsEntireMailboxRequiredOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsEntireMailboxRequired.Get(), o.IsEntireMailboxRequired.IsSet()
}

// HasIsEntireMailboxRequired returns a boolean if a field has been set.
func (o *RestoreOutlookParamsMailbox) HasIsEntireMailboxRequired() bool {
	if o != nil && o.IsEntireMailboxRequired.IsSet() {
		return true
	}

	return false
}

// SetIsEntireMailboxRequired gets a reference to the given NullableBool and assigns it to the IsEntireMailboxRequired field.
func (o *RestoreOutlookParamsMailbox) SetIsEntireMailboxRequired(v bool) {
	o.IsEntireMailboxRequired.Set(&v)
}
// SetIsEntireMailboxRequiredNil sets the value for IsEntireMailboxRequired to be an explicit nil
func (o *RestoreOutlookParamsMailbox) SetIsEntireMailboxRequiredNil() {
	o.IsEntireMailboxRequired.Set(nil)
}

// UnsetIsEntireMailboxRequired ensures that no value is present for IsEntireMailboxRequired, not even an explicit nil
func (o *RestoreOutlookParamsMailbox) UnsetIsEntireMailboxRequired() {
	o.IsEntireMailboxRequired.Unset()
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *RestoreOutlookParamsMailbox) GetObject() RestoreObject {
	if o == nil || o.Object == nil {
		var ret RestoreObject
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreOutlookParamsMailbox) GetObjectOk() (*RestoreObject, bool) {
	if o == nil || o.Object == nil {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *RestoreOutlookParamsMailbox) HasObject() bool {
	if o != nil && o.Object != nil {
		return true
	}

	return false
}

// SetObject gets a reference to the given RestoreObject and assigns it to the Object field.
func (o *RestoreOutlookParamsMailbox) SetObject(v RestoreObject) {
	o.Object = &v
}

func (o RestoreOutlookParamsMailbox) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FolderVec != nil {
		toSerialize["folderVec"] = o.FolderVec
	}
	if o.IsEntireMailboxRequired.IsSet() {
		toSerialize["isEntireMailboxRequired"] = o.IsEntireMailboxRequired.Get()
	}
	if o.Object != nil {
		toSerialize["object"] = o.Object
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreOutlookParamsMailbox struct {
	value *RestoreOutlookParamsMailbox
	isSet bool
}

func (v NullableRestoreOutlookParamsMailbox) Get() *RestoreOutlookParamsMailbox {
	return v.value
}

func (v *NullableRestoreOutlookParamsMailbox) Set(val *RestoreOutlookParamsMailbox) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreOutlookParamsMailbox) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreOutlookParamsMailbox) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreOutlookParamsMailbox(val *RestoreOutlookParamsMailbox) *NullableRestoreOutlookParamsMailbox {
	return &NullableRestoreOutlookParamsMailbox{value: val, isSet: true}
}

func (v NullableRestoreOutlookParamsMailbox) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreOutlookParamsMailbox) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


