/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// SchedulerProto Specifies the scheduler structure which holds the various schedule jobs.
type SchedulerProto struct {
	// The array of the various scheduler jobs.
	SchedulerJobs []SchedulerProtoSchedulerJob `json:"schedulerJobs,omitempty"`
}

// NewSchedulerProto instantiates a new SchedulerProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedulerProto() *SchedulerProto {
	this := SchedulerProto{}
	return &this
}

// NewSchedulerProtoWithDefaults instantiates a new SchedulerProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedulerProtoWithDefaults() *SchedulerProto {
	this := SchedulerProto{}
	return &this
}

// GetSchedulerJobs returns the SchedulerJobs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SchedulerProto) GetSchedulerJobs() []SchedulerProtoSchedulerJob {
	if o == nil  {
		var ret []SchedulerProtoSchedulerJob
		return ret
	}
	return o.SchedulerJobs
}

// GetSchedulerJobsOk returns a tuple with the SchedulerJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SchedulerProto) GetSchedulerJobsOk() (*[]SchedulerProtoSchedulerJob, bool) {
	if o == nil || o.SchedulerJobs == nil {
		return nil, false
	}
	return &o.SchedulerJobs, true
}

// HasSchedulerJobs returns a boolean if a field has been set.
func (o *SchedulerProto) HasSchedulerJobs() bool {
	if o != nil && o.SchedulerJobs != nil {
		return true
	}

	return false
}

// SetSchedulerJobs gets a reference to the given []SchedulerProtoSchedulerJob and assigns it to the SchedulerJobs field.
func (o *SchedulerProto) SetSchedulerJobs(v []SchedulerProtoSchedulerJob) {
	o.SchedulerJobs = v
}

func (o SchedulerProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SchedulerJobs != nil {
		toSerialize["schedulerJobs"] = o.SchedulerJobs
	}
	return json.Marshal(toSerialize)
}

type NullableSchedulerProto struct {
	value *SchedulerProto
	isSet bool
}

func (v NullableSchedulerProto) Get() *SchedulerProto {
	return v.value
}

func (v *NullableSchedulerProto) Set(val *SchedulerProto) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedulerProto) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedulerProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedulerProto(val *SchedulerProto) *NullableSchedulerProto {
	return &NullableSchedulerProto{value: val, isSet: true}
}

func (v NullableSchedulerProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedulerProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


