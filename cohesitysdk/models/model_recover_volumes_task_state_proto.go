/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// RecoverVolumesTaskStateProto struct for RecoverVolumesTaskStateProto
type RecoverVolumesTaskStateProto struct {
	Params *RecoverVolumesParams `json:"params,omitempty"`
	// Contains high-level per-volume information. This data is here because Iris cannot see into protobuf extensions yet needs to display per-subtask progress.
	TaskResultVec []RecoverVolumesTaskStateProtoTaskResult `json:"taskResultVec,omitempty"`
}

// NewRecoverVolumesTaskStateProto instantiates a new RecoverVolumesTaskStateProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverVolumesTaskStateProto() *RecoverVolumesTaskStateProto {
	this := RecoverVolumesTaskStateProto{}
	return &this
}

// NewRecoverVolumesTaskStateProtoWithDefaults instantiates a new RecoverVolumesTaskStateProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverVolumesTaskStateProtoWithDefaults() *RecoverVolumesTaskStateProto {
	this := RecoverVolumesTaskStateProto{}
	return &this
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *RecoverVolumesTaskStateProto) GetParams() RecoverVolumesParams {
	if o == nil || o.Params == nil {
		var ret RecoverVolumesParams
		return ret
	}
	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverVolumesTaskStateProto) GetParamsOk() (*RecoverVolumesParams, bool) {
	if o == nil || o.Params == nil {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *RecoverVolumesTaskStateProto) HasParams() bool {
	if o != nil && o.Params != nil {
		return true
	}

	return false
}

// SetParams gets a reference to the given RecoverVolumesParams and assigns it to the Params field.
func (o *RecoverVolumesTaskStateProto) SetParams(v RecoverVolumesParams) {
	o.Params = &v
}

// GetTaskResultVec returns the TaskResultVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoverVolumesTaskStateProto) GetTaskResultVec() []RecoverVolumesTaskStateProtoTaskResult {
	if o == nil  {
		var ret []RecoverVolumesTaskStateProtoTaskResult
		return ret
	}
	return o.TaskResultVec
}

// GetTaskResultVecOk returns a tuple with the TaskResultVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoverVolumesTaskStateProto) GetTaskResultVecOk() (*[]RecoverVolumesTaskStateProtoTaskResult, bool) {
	if o == nil || o.TaskResultVec == nil {
		return nil, false
	}
	return &o.TaskResultVec, true
}

// HasTaskResultVec returns a boolean if a field has been set.
func (o *RecoverVolumesTaskStateProto) HasTaskResultVec() bool {
	if o != nil && o.TaskResultVec != nil {
		return true
	}

	return false
}

// SetTaskResultVec gets a reference to the given []RecoverVolumesTaskStateProtoTaskResult and assigns it to the TaskResultVec field.
func (o *RecoverVolumesTaskStateProto) SetTaskResultVec(v []RecoverVolumesTaskStateProtoTaskResult) {
	o.TaskResultVec = v
}

func (o RecoverVolumesTaskStateProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Params != nil {
		toSerialize["params"] = o.Params
	}
	if o.TaskResultVec != nil {
		toSerialize["taskResultVec"] = o.TaskResultVec
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverVolumesTaskStateProto struct {
	value *RecoverVolumesTaskStateProto
	isSet bool
}

func (v NullableRecoverVolumesTaskStateProto) Get() *RecoverVolumesTaskStateProto {
	return v.value
}

func (v *NullableRecoverVolumesTaskStateProto) Set(val *RecoverVolumesTaskStateProto) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverVolumesTaskStateProto) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverVolumesTaskStateProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverVolumesTaskStateProto(val *RecoverVolumesTaskStateProto) *NullableRecoverVolumesTaskStateProto {
	return &NullableRecoverVolumesTaskStateProto{value: val, isSet: true}
}

func (v NullableRecoverVolumesTaskStateProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverVolumesTaskStateProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


