/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// LinuxSupportUserSudoAccessResult Specifies the result returned after a successful request to enable/disable the linux 'support' user sudo access.
type LinuxSupportUserSudoAccessResult struct {
	// Date format is in MM/DD/YYYY HH:MM:SS
	Result NullableString `json:"result,omitempty"`
}

// NewLinuxSupportUserSudoAccessResult instantiates a new LinuxSupportUserSudoAccessResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinuxSupportUserSudoAccessResult() *LinuxSupportUserSudoAccessResult {
	this := LinuxSupportUserSudoAccessResult{}
	return &this
}

// NewLinuxSupportUserSudoAccessResultWithDefaults instantiates a new LinuxSupportUserSudoAccessResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinuxSupportUserSudoAccessResultWithDefaults() *LinuxSupportUserSudoAccessResult {
	this := LinuxSupportUserSudoAccessResult{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LinuxSupportUserSudoAccessResult) GetResult() string {
	if o == nil || o.Result.Get() == nil {
		var ret string
		return ret
	}
	return *o.Result.Get()
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinuxSupportUserSudoAccessResult) GetResultOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Result.Get(), o.Result.IsSet()
}

// HasResult returns a boolean if a field has been set.
func (o *LinuxSupportUserSudoAccessResult) HasResult() bool {
	if o != nil && o.Result.IsSet() {
		return true
	}

	return false
}

// SetResult gets a reference to the given NullableString and assigns it to the Result field.
func (o *LinuxSupportUserSudoAccessResult) SetResult(v string) {
	o.Result.Set(&v)
}
// SetResultNil sets the value for Result to be an explicit nil
func (o *LinuxSupportUserSudoAccessResult) SetResultNil() {
	o.Result.Set(nil)
}

// UnsetResult ensures that no value is present for Result, not even an explicit nil
func (o *LinuxSupportUserSudoAccessResult) UnsetResult() {
	o.Result.Unset()
}

func (o LinuxSupportUserSudoAccessResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Result.IsSet() {
		toSerialize["result"] = o.Result.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableLinuxSupportUserSudoAccessResult struct {
	value *LinuxSupportUserSudoAccessResult
	isSet bool
}

func (v NullableLinuxSupportUserSudoAccessResult) Get() *LinuxSupportUserSudoAccessResult {
	return v.value
}

func (v *NullableLinuxSupportUserSudoAccessResult) Set(val *LinuxSupportUserSudoAccessResult) {
	v.value = val
	v.isSet = true
}

func (v NullableLinuxSupportUserSudoAccessResult) IsSet() bool {
	return v.isSet
}

func (v *NullableLinuxSupportUserSudoAccessResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinuxSupportUserSudoAccessResult(val *LinuxSupportUserSudoAccessResult) *NullableLinuxSupportUserSudoAccessResult {
	return &NullableLinuxSupportUserSudoAccessResult{value: val, isSet: true}
}

func (v NullableLinuxSupportUserSudoAccessResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinuxSupportUserSudoAccessResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


