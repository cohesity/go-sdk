/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// RestoreOutlookParamsFolder This will be set in case of partial mailbox recovery.
type RestoreOutlookParamsFolder struct {
	// The Unique ID of the folder.
	FolderId NullableString `json:"folderId,omitempty"`
	// The Unique key of the folder.
	FolderKey NullableInt64 `json:"folderKey,omitempty"`
	// Specify if the entire folder is to be restored.
	IsEntireFolderRequired NullableBool `json:"isEntireFolderRequired,omitempty"`
	// If is_entire_folder_required is set to false, user will then specify which particular items are to be restored.
	ItemIdVec []string `json:"itemIdVec,omitempty"`
}

// NewRestoreOutlookParamsFolder instantiates a new RestoreOutlookParamsFolder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreOutlookParamsFolder() *RestoreOutlookParamsFolder {
	this := RestoreOutlookParamsFolder{}
	return &this
}

// NewRestoreOutlookParamsFolderWithDefaults instantiates a new RestoreOutlookParamsFolder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreOutlookParamsFolderWithDefaults() *RestoreOutlookParamsFolder {
	this := RestoreOutlookParamsFolder{}
	return &this
}

// GetFolderId returns the FolderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreOutlookParamsFolder) GetFolderId() string {
	if o == nil || o.FolderId.Get() == nil {
		var ret string
		return ret
	}
	return *o.FolderId.Get()
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreOutlookParamsFolder) GetFolderIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FolderId.Get(), o.FolderId.IsSet()
}

// HasFolderId returns a boolean if a field has been set.
func (o *RestoreOutlookParamsFolder) HasFolderId() bool {
	if o != nil && o.FolderId.IsSet() {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given NullableString and assigns it to the FolderId field.
func (o *RestoreOutlookParamsFolder) SetFolderId(v string) {
	o.FolderId.Set(&v)
}
// SetFolderIdNil sets the value for FolderId to be an explicit nil
func (o *RestoreOutlookParamsFolder) SetFolderIdNil() {
	o.FolderId.Set(nil)
}

// UnsetFolderId ensures that no value is present for FolderId, not even an explicit nil
func (o *RestoreOutlookParamsFolder) UnsetFolderId() {
	o.FolderId.Unset()
}

// GetFolderKey returns the FolderKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreOutlookParamsFolder) GetFolderKey() int64 {
	if o == nil || o.FolderKey.Get() == nil {
		var ret int64
		return ret
	}
	return *o.FolderKey.Get()
}

// GetFolderKeyOk returns a tuple with the FolderKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreOutlookParamsFolder) GetFolderKeyOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FolderKey.Get(), o.FolderKey.IsSet()
}

// HasFolderKey returns a boolean if a field has been set.
func (o *RestoreOutlookParamsFolder) HasFolderKey() bool {
	if o != nil && o.FolderKey.IsSet() {
		return true
	}

	return false
}

// SetFolderKey gets a reference to the given NullableInt64 and assigns it to the FolderKey field.
func (o *RestoreOutlookParamsFolder) SetFolderKey(v int64) {
	o.FolderKey.Set(&v)
}
// SetFolderKeyNil sets the value for FolderKey to be an explicit nil
func (o *RestoreOutlookParamsFolder) SetFolderKeyNil() {
	o.FolderKey.Set(nil)
}

// UnsetFolderKey ensures that no value is present for FolderKey, not even an explicit nil
func (o *RestoreOutlookParamsFolder) UnsetFolderKey() {
	o.FolderKey.Unset()
}

// GetIsEntireFolderRequired returns the IsEntireFolderRequired field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreOutlookParamsFolder) GetIsEntireFolderRequired() bool {
	if o == nil || o.IsEntireFolderRequired.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsEntireFolderRequired.Get()
}

// GetIsEntireFolderRequiredOk returns a tuple with the IsEntireFolderRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreOutlookParamsFolder) GetIsEntireFolderRequiredOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsEntireFolderRequired.Get(), o.IsEntireFolderRequired.IsSet()
}

// HasIsEntireFolderRequired returns a boolean if a field has been set.
func (o *RestoreOutlookParamsFolder) HasIsEntireFolderRequired() bool {
	if o != nil && o.IsEntireFolderRequired.IsSet() {
		return true
	}

	return false
}

// SetIsEntireFolderRequired gets a reference to the given NullableBool and assigns it to the IsEntireFolderRequired field.
func (o *RestoreOutlookParamsFolder) SetIsEntireFolderRequired(v bool) {
	o.IsEntireFolderRequired.Set(&v)
}
// SetIsEntireFolderRequiredNil sets the value for IsEntireFolderRequired to be an explicit nil
func (o *RestoreOutlookParamsFolder) SetIsEntireFolderRequiredNil() {
	o.IsEntireFolderRequired.Set(nil)
}

// UnsetIsEntireFolderRequired ensures that no value is present for IsEntireFolderRequired, not even an explicit nil
func (o *RestoreOutlookParamsFolder) UnsetIsEntireFolderRequired() {
	o.IsEntireFolderRequired.Unset()
}

// GetItemIdVec returns the ItemIdVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreOutlookParamsFolder) GetItemIdVec() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.ItemIdVec
}

// GetItemIdVecOk returns a tuple with the ItemIdVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreOutlookParamsFolder) GetItemIdVecOk() (*[]string, bool) {
	if o == nil || o.ItemIdVec == nil {
		return nil, false
	}
	return &o.ItemIdVec, true
}

// HasItemIdVec returns a boolean if a field has been set.
func (o *RestoreOutlookParamsFolder) HasItemIdVec() bool {
	if o != nil && o.ItemIdVec != nil {
		return true
	}

	return false
}

// SetItemIdVec gets a reference to the given []string and assigns it to the ItemIdVec field.
func (o *RestoreOutlookParamsFolder) SetItemIdVec(v []string) {
	o.ItemIdVec = v
}

func (o RestoreOutlookParamsFolder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FolderId.IsSet() {
		toSerialize["folderId"] = o.FolderId.Get()
	}
	if o.FolderKey.IsSet() {
		toSerialize["folderKey"] = o.FolderKey.Get()
	}
	if o.IsEntireFolderRequired.IsSet() {
		toSerialize["isEntireFolderRequired"] = o.IsEntireFolderRequired.Get()
	}
	if o.ItemIdVec != nil {
		toSerialize["itemIdVec"] = o.ItemIdVec
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreOutlookParamsFolder struct {
	value *RestoreOutlookParamsFolder
	isSet bool
}

func (v NullableRestoreOutlookParamsFolder) Get() *RestoreOutlookParamsFolder {
	return v.value
}

func (v *NullableRestoreOutlookParamsFolder) Set(val *RestoreOutlookParamsFolder) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreOutlookParamsFolder) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreOutlookParamsFolder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreOutlookParamsFolder(val *RestoreOutlookParamsFolder) *NullableRestoreOutlookParamsFolder {
	return &NullableRestoreOutlookParamsFolder{value: val, isSet: true}
}

func (v NullableRestoreOutlookParamsFolder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreOutlookParamsFolder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


