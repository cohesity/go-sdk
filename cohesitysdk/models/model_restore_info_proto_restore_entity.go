/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// RestoreInfoProtoRestoreEntity struct for RestoreInfoProtoRestoreEntity
type RestoreInfoProtoRestoreEntity struct {
	Entity *EntityProto `json:"entity,omitempty"`
	Error *ErrorProto `json:"error,omitempty"`
	// The path relative to the root path of the restore task progress monitor of the progress monitor for this entity.
	ProgressMonitorTaskPath NullableString `json:"progressMonitorTaskPath,omitempty"`
	// Iris-facing task state. This field is stamped during the export.
	PublicStatus NullableInt32 `json:"publicStatus,omitempty"`
	// All the paths that the entity's files were restored to. Each path is relative to the destination view.
	RelativeRestorePaths []string `json:"relativeRestorePaths,omitempty"`
	ResourcePoolEntity *EntityProto `json:"resourcePoolEntity,omitempty"`
	RestoredEntity *EntityProto `json:"restoredEntity,omitempty"`
	// The restore status of the entity.
	Status NullableInt32 `json:"status,omitempty"`
	// Optional warnings if any.
	Warnings []ErrorProto `json:"warnings,omitempty"`
}

// NewRestoreInfoProtoRestoreEntity instantiates a new RestoreInfoProtoRestoreEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreInfoProtoRestoreEntity() *RestoreInfoProtoRestoreEntity {
	this := RestoreInfoProtoRestoreEntity{}
	return &this
}

// NewRestoreInfoProtoRestoreEntityWithDefaults instantiates a new RestoreInfoProtoRestoreEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreInfoProtoRestoreEntityWithDefaults() *RestoreInfoProtoRestoreEntity {
	this := RestoreInfoProtoRestoreEntity{}
	return &this
}

// GetEntity returns the Entity field value if set, zero value otherwise.
func (o *RestoreInfoProtoRestoreEntity) GetEntity() EntityProto {
	if o == nil || o.Entity == nil {
		var ret EntityProto
		return ret
	}
	return *o.Entity
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreInfoProtoRestoreEntity) GetEntityOk() (*EntityProto, bool) {
	if o == nil || o.Entity == nil {
		return nil, false
	}
	return o.Entity, true
}

// HasEntity returns a boolean if a field has been set.
func (o *RestoreInfoProtoRestoreEntity) HasEntity() bool {
	if o != nil && o.Entity != nil {
		return true
	}

	return false
}

// SetEntity gets a reference to the given EntityProto and assigns it to the Entity field.
func (o *RestoreInfoProtoRestoreEntity) SetEntity(v EntityProto) {
	o.Entity = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *RestoreInfoProtoRestoreEntity) GetError() ErrorProto {
	if o == nil || o.Error == nil {
		var ret ErrorProto
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreInfoProtoRestoreEntity) GetErrorOk() (*ErrorProto, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *RestoreInfoProtoRestoreEntity) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given ErrorProto and assigns it to the Error field.
func (o *RestoreInfoProtoRestoreEntity) SetError(v ErrorProto) {
	o.Error = &v
}

// GetProgressMonitorTaskPath returns the ProgressMonitorTaskPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreInfoProtoRestoreEntity) GetProgressMonitorTaskPath() string {
	if o == nil || o.ProgressMonitorTaskPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProgressMonitorTaskPath.Get()
}

// GetProgressMonitorTaskPathOk returns a tuple with the ProgressMonitorTaskPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreInfoProtoRestoreEntity) GetProgressMonitorTaskPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProgressMonitorTaskPath.Get(), o.ProgressMonitorTaskPath.IsSet()
}

// HasProgressMonitorTaskPath returns a boolean if a field has been set.
func (o *RestoreInfoProtoRestoreEntity) HasProgressMonitorTaskPath() bool {
	if o != nil && o.ProgressMonitorTaskPath.IsSet() {
		return true
	}

	return false
}

// SetProgressMonitorTaskPath gets a reference to the given NullableString and assigns it to the ProgressMonitorTaskPath field.
func (o *RestoreInfoProtoRestoreEntity) SetProgressMonitorTaskPath(v string) {
	o.ProgressMonitorTaskPath.Set(&v)
}
// SetProgressMonitorTaskPathNil sets the value for ProgressMonitorTaskPath to be an explicit nil
func (o *RestoreInfoProtoRestoreEntity) SetProgressMonitorTaskPathNil() {
	o.ProgressMonitorTaskPath.Set(nil)
}

// UnsetProgressMonitorTaskPath ensures that no value is present for ProgressMonitorTaskPath, not even an explicit nil
func (o *RestoreInfoProtoRestoreEntity) UnsetProgressMonitorTaskPath() {
	o.ProgressMonitorTaskPath.Unset()
}

// GetPublicStatus returns the PublicStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreInfoProtoRestoreEntity) GetPublicStatus() int32 {
	if o == nil || o.PublicStatus.Get() == nil {
		var ret int32
		return ret
	}
	return *o.PublicStatus.Get()
}

// GetPublicStatusOk returns a tuple with the PublicStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreInfoProtoRestoreEntity) GetPublicStatusOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PublicStatus.Get(), o.PublicStatus.IsSet()
}

// HasPublicStatus returns a boolean if a field has been set.
func (o *RestoreInfoProtoRestoreEntity) HasPublicStatus() bool {
	if o != nil && o.PublicStatus.IsSet() {
		return true
	}

	return false
}

// SetPublicStatus gets a reference to the given NullableInt32 and assigns it to the PublicStatus field.
func (o *RestoreInfoProtoRestoreEntity) SetPublicStatus(v int32) {
	o.PublicStatus.Set(&v)
}
// SetPublicStatusNil sets the value for PublicStatus to be an explicit nil
func (o *RestoreInfoProtoRestoreEntity) SetPublicStatusNil() {
	o.PublicStatus.Set(nil)
}

// UnsetPublicStatus ensures that no value is present for PublicStatus, not even an explicit nil
func (o *RestoreInfoProtoRestoreEntity) UnsetPublicStatus() {
	o.PublicStatus.Unset()
}

// GetRelativeRestorePaths returns the RelativeRestorePaths field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreInfoProtoRestoreEntity) GetRelativeRestorePaths() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.RelativeRestorePaths
}

// GetRelativeRestorePathsOk returns a tuple with the RelativeRestorePaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreInfoProtoRestoreEntity) GetRelativeRestorePathsOk() (*[]string, bool) {
	if o == nil || o.RelativeRestorePaths == nil {
		return nil, false
	}
	return &o.RelativeRestorePaths, true
}

// HasRelativeRestorePaths returns a boolean if a field has been set.
func (o *RestoreInfoProtoRestoreEntity) HasRelativeRestorePaths() bool {
	if o != nil && o.RelativeRestorePaths != nil {
		return true
	}

	return false
}

// SetRelativeRestorePaths gets a reference to the given []string and assigns it to the RelativeRestorePaths field.
func (o *RestoreInfoProtoRestoreEntity) SetRelativeRestorePaths(v []string) {
	o.RelativeRestorePaths = v
}

// GetResourcePoolEntity returns the ResourcePoolEntity field value if set, zero value otherwise.
func (o *RestoreInfoProtoRestoreEntity) GetResourcePoolEntity() EntityProto {
	if o == nil || o.ResourcePoolEntity == nil {
		var ret EntityProto
		return ret
	}
	return *o.ResourcePoolEntity
}

// GetResourcePoolEntityOk returns a tuple with the ResourcePoolEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreInfoProtoRestoreEntity) GetResourcePoolEntityOk() (*EntityProto, bool) {
	if o == nil || o.ResourcePoolEntity == nil {
		return nil, false
	}
	return o.ResourcePoolEntity, true
}

// HasResourcePoolEntity returns a boolean if a field has been set.
func (o *RestoreInfoProtoRestoreEntity) HasResourcePoolEntity() bool {
	if o != nil && o.ResourcePoolEntity != nil {
		return true
	}

	return false
}

// SetResourcePoolEntity gets a reference to the given EntityProto and assigns it to the ResourcePoolEntity field.
func (o *RestoreInfoProtoRestoreEntity) SetResourcePoolEntity(v EntityProto) {
	o.ResourcePoolEntity = &v
}

// GetRestoredEntity returns the RestoredEntity field value if set, zero value otherwise.
func (o *RestoreInfoProtoRestoreEntity) GetRestoredEntity() EntityProto {
	if o == nil || o.RestoredEntity == nil {
		var ret EntityProto
		return ret
	}
	return *o.RestoredEntity
}

// GetRestoredEntityOk returns a tuple with the RestoredEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreInfoProtoRestoreEntity) GetRestoredEntityOk() (*EntityProto, bool) {
	if o == nil || o.RestoredEntity == nil {
		return nil, false
	}
	return o.RestoredEntity, true
}

// HasRestoredEntity returns a boolean if a field has been set.
func (o *RestoreInfoProtoRestoreEntity) HasRestoredEntity() bool {
	if o != nil && o.RestoredEntity != nil {
		return true
	}

	return false
}

// SetRestoredEntity gets a reference to the given EntityProto and assigns it to the RestoredEntity field.
func (o *RestoreInfoProtoRestoreEntity) SetRestoredEntity(v EntityProto) {
	o.RestoredEntity = &v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreInfoProtoRestoreEntity) GetStatus() int32 {
	if o == nil || o.Status.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreInfoProtoRestoreEntity) GetStatusOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *RestoreInfoProtoRestoreEntity) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableInt32 and assigns it to the Status field.
func (o *RestoreInfoProtoRestoreEntity) SetStatus(v int32) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *RestoreInfoProtoRestoreEntity) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *RestoreInfoProtoRestoreEntity) UnsetStatus() {
	o.Status.Unset()
}

// GetWarnings returns the Warnings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreInfoProtoRestoreEntity) GetWarnings() []ErrorProto {
	if o == nil  {
		var ret []ErrorProto
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreInfoProtoRestoreEntity) GetWarningsOk() (*[]ErrorProto, bool) {
	if o == nil || o.Warnings == nil {
		return nil, false
	}
	return &o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *RestoreInfoProtoRestoreEntity) HasWarnings() bool {
	if o != nil && o.Warnings != nil {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []ErrorProto and assigns it to the Warnings field.
func (o *RestoreInfoProtoRestoreEntity) SetWarnings(v []ErrorProto) {
	o.Warnings = v
}

func (o RestoreInfoProtoRestoreEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Entity != nil {
		toSerialize["entity"] = o.Entity
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.ProgressMonitorTaskPath.IsSet() {
		toSerialize["progressMonitorTaskPath"] = o.ProgressMonitorTaskPath.Get()
	}
	if o.PublicStatus.IsSet() {
		toSerialize["publicStatus"] = o.PublicStatus.Get()
	}
	if o.RelativeRestorePaths != nil {
		toSerialize["relativeRestorePaths"] = o.RelativeRestorePaths
	}
	if o.ResourcePoolEntity != nil {
		toSerialize["resourcePoolEntity"] = o.ResourcePoolEntity
	}
	if o.RestoredEntity != nil {
		toSerialize["restoredEntity"] = o.RestoredEntity
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreInfoProtoRestoreEntity struct {
	value *RestoreInfoProtoRestoreEntity
	isSet bool
}

func (v NullableRestoreInfoProtoRestoreEntity) Get() *RestoreInfoProtoRestoreEntity {
	return v.value
}

func (v *NullableRestoreInfoProtoRestoreEntity) Set(val *RestoreInfoProtoRestoreEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreInfoProtoRestoreEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreInfoProtoRestoreEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreInfoProtoRestoreEntity(val *RestoreInfoProtoRestoreEntity) *NullableRestoreInfoProtoRestoreEntity {
	return &NullableRestoreInfoProtoRestoreEntity{value: val, isSet: true}
}

func (v NullableRestoreInfoProtoRestoreEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreInfoProtoRestoreEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


