/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// BackupJobProto struct for BackupJobProto
type BackupJobProto struct {
	// This field determines whether a backup run should be aborted when it hits an exclusion window (assuming that it was started earlier when it was not in an exclusion window).
	AbortInExclusionWindow NullableBool `json:"abortInExclusionWindow,omitempty"`
	AlertingPolicy *AlertingPolicyProto `json:"alertingPolicy,omitempty"`
	// The backup QoS principal to use for the backup job.
	BackupQosPrincipal NullableInt32 `json:"backupQosPrincipal,omitempty"`
	// This contains additional backup params that are applicable to sources that are captured as part of the backup job. NOTE: The sources could point to higher level entities (such as a \"Cluster\" in VMware environment), but the source params captured here will not be for the matching higher level entity, but instead be for leaf-level entities (such as VMs).
	BackupSourceParams []BackupSourceParams `json:"backupSourceParams,omitempty"`
	// Whether to continue backing up on quiesce failure.
	ContinueOnQuiesceFailure NullableBool `json:"continueOnQuiesceFailure,omitempty"`
	// If set to false, a remote view will not be created. If set to true and: 1) Remote view name is not provided by the user, a remote view is created with the same name as source view name. 2) Remote view name is provided by the user, a remote view is created with the given name.
	CreateRemoteView NullableBool `json:"createRemoteView,omitempty"`
	// List of source ids for which source side dedup is disabled from the backup job.
	DedupDisabledSourceIdVec []int64 `json:"dedupDisabledSourceIdVec,omitempty"`
	// Determines if the job (and associated backups) should be deleted. Once a job has been deleted, its status cannot be changed.
	DeletionStatus NullableInt32 `json:"deletionStatus,omitempty"`
	// Job description (as entered by the user).
	Description NullableString `json:"description,omitempty"`
	DrToCloudParams *BackupJobProtoDRToCloudParams `json:"drToCloudParams,omitempty"`
	EhParentSource *EntityProto `json:"ehParentSource,omitempty"`
	// The time (in usecs) after which no backup for the job should be scheduled.
	EndTimeUsecs NullableInt64 `json:"endTimeUsecs,omitempty"`
	EnvBackupParams *EnvBackupParams `json:"envBackupParams,omitempty"`
	// The list of sources to exclude from backups. These can have non-leaf-level entities, but it's up to the creator to ensure that a child of these sources hasn't been explicitly added to 'sources'.
	ExcludeSources []BackupJobProtoExcludeSource `json:"excludeSources,omitempty"`
	// The list of sources to exclude from backups. These can have non-leaf-level entities, but it's up to the creator to ensure that a child of these sources hasn't been explicitly added to 'sources'.
	ExcludeSourcesDEPRECATED []EntityProto `json:"excludeSources_DEPRECATED,omitempty"`
	// Do not run backups in these time-ranges.
	ExclusionRanges []BackupJobProtoExclusionTimeRange `json:"exclusionRanges,omitempty"`
	FullBackupJobPolicy *JobPolicyProto `json:"fullBackupJobPolicy,omitempty"`
	// Same as 'sla_time_mins' above, but applies to full backups. NOTE: This value is considered only for full backups that are excepted i.e either scheduled or the first full backup and not for full backups that happen as a result of incremental backup failure.
	FullBackupSlaTimeMins NullableInt64 `json:"fullBackupSlaTimeMins,omitempty"`
	GlobalIncludeExclude *PhysicalFileBackupParamsGlobalIncludeExclude `json:"globalIncludeExclude,omitempty"`
	IndexingPolicy *IndexingPolicyProto `json:"indexingPolicy,omitempty"`
	// Whether the backup job is active or not. Details about what an active job is can be found here: https://goo.gl/1mLvS3.
	IsActive NullableBool `json:"isActive,omitempty"`
	// Indicates if Magneto should continue taking source snapshots even if there is a pending run.
	IsContinuousSnapshottingEnabled NullableBool `json:"isContinuousSnapshottingEnabled,omitempty"`
	// Tracks whether the backup job has actually been deleted.
	IsDeleted NullableBool `json:"isDeleted,omitempty"`
	// This field is set to true if this is a direct archive backup job.
	IsDirectArchiveEnabled NullableBool `json:"isDirectArchiveEnabled,omitempty"`
	// This field is set to true if native format should be used for archiving. Applicable for only direct archive jobs.
	IsDirectArchiveNativeFormatEnabled NullableBool `json:"isDirectArchiveNativeFormatEnabled,omitempty"`
	// Whether the backup job is paused. New backup runs are not scheduled for the paused backup job. Active run of a backup job (if any) is not impacted.
	IsPaused NullableBool `json:"isPaused,omitempty"`
	// Whether the backup job is an RPO policy job. These jobs are hidden from the user, and are created internally to have a backup schedule for the given source.
	IsRpoJob NullableBool `json:"isRpoJob,omitempty"`
	// Time when this job was first created.
	JobCreationTimeUsecs NullableInt64 `json:"jobCreationTimeUsecs,omitempty"`
	// A unique id for locally created jobs. This should only be used to identify jobs created on the local cluster. When Iris communicates with Magneto, Iris can continue to use this job_id field, which will always be assumed to refer to locally created jobs.  For remotely created jobs, the 'job_uid' field should be used. The only time Iris should ever need to refer to a remote job is when restoring an object from a remote snapshot. In all such cases, Iris should use the job_uid field.
	JobId NullableInt64 `json:"jobId,omitempty"`
	JobPolicy *JobPolicyProto `json:"jobPolicy,omitempty"`
	JobUid *UniversalIdProto `json:"jobUid,omitempty"`
	// Time when this job description was last updated.
	LastModificationTimeUsecs NullableInt64 `json:"lastModificationTimeUsecs,omitempty"`
	// Time when the job was last paused or unpaused.
	LastPauseModificationTimeUsecs NullableInt64 `json:"lastPauseModificationTimeUsecs,omitempty"`
	// Last reason for pausing the backup job. Capturing the reason will help in resuming only the jobs that were paused because of a reason once the reason for pausing is not applicable.
	LastPauseReason NullableInt32 `json:"lastPauseReason,omitempty"`
	// The user who modified the job most recently.
	LastUpdatedUsername NullableString `json:"lastUpdatedUsername,omitempty"`
	// This is set to true by the user in order to backup the objects via a dedicated storage area network (SAN), as opposed to transport via LAN or management network. NOTE: Not all adapters support this method. Currently only VMware.
	LeverageSanTransport NullableBool `json:"leverageSanTransport,omitempty"`
	// Whether to leverage the storage array based snapshots for this backup job. To leverage storage snapshots, the storage array has to be registered as a source. If storage based snapshots can not be taken, job will fallback to the default backup method. NOTE: This will be set for Pure snapshots.
	LeverageStorageSnapshots NullableBool `json:"leverageStorageSnapshots,omitempty"`
	// This is set to true by the user if hyperflex snapshots are requested NOTE: If this is set to true, then leverage_storage_snapshots above should be false.
	LeverageStorageSnapshotsForHyperflex NullableBool `json:"leverageStorageSnapshotsForHyperflex,omitempty"`
	LogBackupJobPolicy *JobPolicyProto `json:"logBackupJobPolicy,omitempty"`
	// Determines the maximum number of source snapshots allowed for a given entity in the job. This is only applicable if 'is_continuous_snapshotting_enabled' is set to true.
	MaxAllowedSourceSnapshots NullableInt32 `json:"maxAllowedSourceSnapshots,omitempty"`
	// The name of this backup job. This must be unique across all jobs.
	Name NullableString `json:"name,omitempty"`
	// Specifies how many recent snapshots of each backed up entity to retain on the primary environment. If not specified, then snapshots will not be be deleted from the primary environment. NOTE: This is only applicable for certain environments like kPure.
	NumSnapshotsToKeepOnPrimary NullableInt64 `json:"numSnapshotsToKeepOnPrimary,omitempty"`
	ParentSource *EntityProto `json:"parentSource,omitempty"`
	// Whether or not to perform source side dedup.
	PerformSourceSideDedup NullableBool `json:"performSourceSideDedup,omitempty"`
	// Epoch time in milliseconds when the policy was last applied to this job. This field will be used to determine whether a policy has changed after it was applied to a particular job.
	PolicyAppliedTimeMsecs NullableInt64 `json:"policyAppliedTimeMsecs,omitempty"`
	// Id of the policy being applied to the backup job. It is expected to be of the form \"cluster_id:cluster_instance_id:local_identifier\".
	PolicyId NullableString `json:"policyId,omitempty"`
	// The name of the policy referred to by policy_uid. This field can be stale and should not be relied upon for the latest name.
	PolicyName NullableString `json:"policyName,omitempty"`
	PostBackupScript *BackupJobPreOrPostScript `json:"postBackupScript,omitempty"`
	PreScript *BackupJobPreOrPostScript `json:"preScript,omitempty"`
	PrimaryJobUid *UniversalIdProto `json:"primaryJobUid,omitempty"`
	// The priority for the job. This is used at admission time - all admitted jobs are treated equally. This is also used to determine the Madrox replication priority.
	Priority NullableInt32 `json:"priority,omitempty"`
	// Whether to take app-consistent snapshots by quiescing apps and the filesystem before taking a backup.
	Quiesce NullableBool `json:"quiesce,omitempty"`
	// The globally unique ids of all remote jobs that are linked to this job (because of incoming replications). This field will only be populated for locally created jobs. This field is populated only for the local(stub) job during incoming replications. In the most common case of one cluster replicating to another, this field will only have one entry (which is the id of the job on Tx side) and matches the primary_job_uid. This will have multiple entries in the following situation: A->B, A->C replication. The backup is failed over to B, and B now starts replicating to C. In this case, the stub job at C will have two entries. One is the job id from cluster A, and another is the local(stub) job uid from B. Also note that since the job originated from A, primary_job_uid for all the replicated instances of this job across multiple clusters will remain the same (which is equal to the job id from the original cluster A).
	RemoteJobUids []UniversalIdProto `json:"remoteJobUids,omitempty"`
	// A human readable name of the remote view. A remote view is created with name overwriting the latest snapshot.
	RemoteViewName NullableString `json:"remoteViewName,omitempty"`
	// The features that are strictly required to be supported by the cluster of the backup job. This is currently used in the following cases: 1. Tx cluster looks at the Rx cluster's supported features and replicates the backup job only if all the features captured here are supported. 2. When performing remote restore of a backup job from an archival, this job will be retrieved only if the cluster supports all the features listed here.
	RequiredFeatureVec []string `json:"requiredFeatureVec,omitempty"`
	// If specified, this variable determines the amount of time (after backup has started) in which backup is expected to finish for this job. An SLA violation is counted against this job if the amount of time taken exceeds this amount.
	SlaTimeMins NullableInt64 `json:"slaTimeMins,omitempty"`
	SourceFilters *SourceFilters `json:"sourceFilters,omitempty"`
	// The list of sources that should be backed up. A source in this list could be a descendant of another source in the list (this will be used when specifying override backup schedules).
	Sources []BackupJobProtoBackupSource `json:"sources,omitempty"`
	StartTime *Time `json:"startTime,omitempty"`
	StubbingPolicy *StubbingPolicyProto `json:"stubbingPolicy,omitempty"`
	// Tags associated with the job. User can specify tags/keywords that can indexed by Yoda and can be later searched in UI. For example, user can create a 'kPuppeteer' job to backup Oracle DB for 'payroll' department. User can specify following tags: 'payroll', 'Oracle_DB'.
	TagVec []string `json:"tagVec,omitempty"`
	// Timezone of the backup job. All time fields (i.e., TimeOfDay) in this backup job are stored wrt to this timezone.  The time zones have unique names of the form \"Area/Location\", e.g. \"America/New_York\". We are using \"America/Los_Angeles\" as a default value so as to be backward compatible with pre-2.7 code.
	Timezone NullableString `json:"timezone,omitempty"`
	// Whether to truncate logs after a backup run. This is currently only relevant for full or incremental backups in a SQL environment.
	TruncateLogs NullableBool `json:"truncateLogs,omitempty"`
	// The type of environment this backup job corresponds to.
	Type NullableInt32 `json:"type,omitempty"`
	UserInfo *UserInformation `json:"userInfo,omitempty"`
	// The view box to which data will be written.
	ViewBoxId NullableInt64 `json:"viewBoxId,omitempty"`
}

// NewBackupJobProto instantiates a new BackupJobProto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupJobProto() *BackupJobProto {
	this := BackupJobProto{}
	return &this
}

// NewBackupJobProtoWithDefaults instantiates a new BackupJobProto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupJobProtoWithDefaults() *BackupJobProto {
	this := BackupJobProto{}
	return &this
}

// GetAbortInExclusionWindow returns the AbortInExclusionWindow field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetAbortInExclusionWindow() bool {
	if o == nil || o.AbortInExclusionWindow.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AbortInExclusionWindow.Get()
}

// GetAbortInExclusionWindowOk returns a tuple with the AbortInExclusionWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetAbortInExclusionWindowOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AbortInExclusionWindow.Get(), o.AbortInExclusionWindow.IsSet()
}

// HasAbortInExclusionWindow returns a boolean if a field has been set.
func (o *BackupJobProto) HasAbortInExclusionWindow() bool {
	if o != nil && o.AbortInExclusionWindow.IsSet() {
		return true
	}

	return false
}

// SetAbortInExclusionWindow gets a reference to the given NullableBool and assigns it to the AbortInExclusionWindow field.
func (o *BackupJobProto) SetAbortInExclusionWindow(v bool) {
	o.AbortInExclusionWindow.Set(&v)
}
// SetAbortInExclusionWindowNil sets the value for AbortInExclusionWindow to be an explicit nil
func (o *BackupJobProto) SetAbortInExclusionWindowNil() {
	o.AbortInExclusionWindow.Set(nil)
}

// UnsetAbortInExclusionWindow ensures that no value is present for AbortInExclusionWindow, not even an explicit nil
func (o *BackupJobProto) UnsetAbortInExclusionWindow() {
	o.AbortInExclusionWindow.Unset()
}

// GetAlertingPolicy returns the AlertingPolicy field value if set, zero value otherwise.
func (o *BackupJobProto) GetAlertingPolicy() AlertingPolicyProto {
	if o == nil || o.AlertingPolicy == nil {
		var ret AlertingPolicyProto
		return ret
	}
	return *o.AlertingPolicy
}

// GetAlertingPolicyOk returns a tuple with the AlertingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetAlertingPolicyOk() (*AlertingPolicyProto, bool) {
	if o == nil || o.AlertingPolicy == nil {
		return nil, false
	}
	return o.AlertingPolicy, true
}

// HasAlertingPolicy returns a boolean if a field has been set.
func (o *BackupJobProto) HasAlertingPolicy() bool {
	if o != nil && o.AlertingPolicy != nil {
		return true
	}

	return false
}

// SetAlertingPolicy gets a reference to the given AlertingPolicyProto and assigns it to the AlertingPolicy field.
func (o *BackupJobProto) SetAlertingPolicy(v AlertingPolicyProto) {
	o.AlertingPolicy = &v
}

// GetBackupQosPrincipal returns the BackupQosPrincipal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetBackupQosPrincipal() int32 {
	if o == nil || o.BackupQosPrincipal.Get() == nil {
		var ret int32
		return ret
	}
	return *o.BackupQosPrincipal.Get()
}

// GetBackupQosPrincipalOk returns a tuple with the BackupQosPrincipal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetBackupQosPrincipalOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BackupQosPrincipal.Get(), o.BackupQosPrincipal.IsSet()
}

// HasBackupQosPrincipal returns a boolean if a field has been set.
func (o *BackupJobProto) HasBackupQosPrincipal() bool {
	if o != nil && o.BackupQosPrincipal.IsSet() {
		return true
	}

	return false
}

// SetBackupQosPrincipal gets a reference to the given NullableInt32 and assigns it to the BackupQosPrincipal field.
func (o *BackupJobProto) SetBackupQosPrincipal(v int32) {
	o.BackupQosPrincipal.Set(&v)
}
// SetBackupQosPrincipalNil sets the value for BackupQosPrincipal to be an explicit nil
func (o *BackupJobProto) SetBackupQosPrincipalNil() {
	o.BackupQosPrincipal.Set(nil)
}

// UnsetBackupQosPrincipal ensures that no value is present for BackupQosPrincipal, not even an explicit nil
func (o *BackupJobProto) UnsetBackupQosPrincipal() {
	o.BackupQosPrincipal.Unset()
}

// GetBackupSourceParams returns the BackupSourceParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetBackupSourceParams() []BackupSourceParams {
	if o == nil  {
		var ret []BackupSourceParams
		return ret
	}
	return o.BackupSourceParams
}

// GetBackupSourceParamsOk returns a tuple with the BackupSourceParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetBackupSourceParamsOk() (*[]BackupSourceParams, bool) {
	if o == nil || o.BackupSourceParams == nil {
		return nil, false
	}
	return &o.BackupSourceParams, true
}

// HasBackupSourceParams returns a boolean if a field has been set.
func (o *BackupJobProto) HasBackupSourceParams() bool {
	if o != nil && o.BackupSourceParams != nil {
		return true
	}

	return false
}

// SetBackupSourceParams gets a reference to the given []BackupSourceParams and assigns it to the BackupSourceParams field.
func (o *BackupJobProto) SetBackupSourceParams(v []BackupSourceParams) {
	o.BackupSourceParams = v
}

// GetContinueOnQuiesceFailure returns the ContinueOnQuiesceFailure field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetContinueOnQuiesceFailure() bool {
	if o == nil || o.ContinueOnQuiesceFailure.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ContinueOnQuiesceFailure.Get()
}

// GetContinueOnQuiesceFailureOk returns a tuple with the ContinueOnQuiesceFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetContinueOnQuiesceFailureOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ContinueOnQuiesceFailure.Get(), o.ContinueOnQuiesceFailure.IsSet()
}

// HasContinueOnQuiesceFailure returns a boolean if a field has been set.
func (o *BackupJobProto) HasContinueOnQuiesceFailure() bool {
	if o != nil && o.ContinueOnQuiesceFailure.IsSet() {
		return true
	}

	return false
}

// SetContinueOnQuiesceFailure gets a reference to the given NullableBool and assigns it to the ContinueOnQuiesceFailure field.
func (o *BackupJobProto) SetContinueOnQuiesceFailure(v bool) {
	o.ContinueOnQuiesceFailure.Set(&v)
}
// SetContinueOnQuiesceFailureNil sets the value for ContinueOnQuiesceFailure to be an explicit nil
func (o *BackupJobProto) SetContinueOnQuiesceFailureNil() {
	o.ContinueOnQuiesceFailure.Set(nil)
}

// UnsetContinueOnQuiesceFailure ensures that no value is present for ContinueOnQuiesceFailure, not even an explicit nil
func (o *BackupJobProto) UnsetContinueOnQuiesceFailure() {
	o.ContinueOnQuiesceFailure.Unset()
}

// GetCreateRemoteView returns the CreateRemoteView field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetCreateRemoteView() bool {
	if o == nil || o.CreateRemoteView.Get() == nil {
		var ret bool
		return ret
	}
	return *o.CreateRemoteView.Get()
}

// GetCreateRemoteViewOk returns a tuple with the CreateRemoteView field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetCreateRemoteViewOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreateRemoteView.Get(), o.CreateRemoteView.IsSet()
}

// HasCreateRemoteView returns a boolean if a field has been set.
func (o *BackupJobProto) HasCreateRemoteView() bool {
	if o != nil && o.CreateRemoteView.IsSet() {
		return true
	}

	return false
}

// SetCreateRemoteView gets a reference to the given NullableBool and assigns it to the CreateRemoteView field.
func (o *BackupJobProto) SetCreateRemoteView(v bool) {
	o.CreateRemoteView.Set(&v)
}
// SetCreateRemoteViewNil sets the value for CreateRemoteView to be an explicit nil
func (o *BackupJobProto) SetCreateRemoteViewNil() {
	o.CreateRemoteView.Set(nil)
}

// UnsetCreateRemoteView ensures that no value is present for CreateRemoteView, not even an explicit nil
func (o *BackupJobProto) UnsetCreateRemoteView() {
	o.CreateRemoteView.Unset()
}

// GetDedupDisabledSourceIdVec returns the DedupDisabledSourceIdVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetDedupDisabledSourceIdVec() []int64 {
	if o == nil  {
		var ret []int64
		return ret
	}
	return o.DedupDisabledSourceIdVec
}

// GetDedupDisabledSourceIdVecOk returns a tuple with the DedupDisabledSourceIdVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetDedupDisabledSourceIdVecOk() (*[]int64, bool) {
	if o == nil || o.DedupDisabledSourceIdVec == nil {
		return nil, false
	}
	return &o.DedupDisabledSourceIdVec, true
}

// HasDedupDisabledSourceIdVec returns a boolean if a field has been set.
func (o *BackupJobProto) HasDedupDisabledSourceIdVec() bool {
	if o != nil && o.DedupDisabledSourceIdVec != nil {
		return true
	}

	return false
}

// SetDedupDisabledSourceIdVec gets a reference to the given []int64 and assigns it to the DedupDisabledSourceIdVec field.
func (o *BackupJobProto) SetDedupDisabledSourceIdVec(v []int64) {
	o.DedupDisabledSourceIdVec = v
}

// GetDeletionStatus returns the DeletionStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetDeletionStatus() int32 {
	if o == nil || o.DeletionStatus.Get() == nil {
		var ret int32
		return ret
	}
	return *o.DeletionStatus.Get()
}

// GetDeletionStatusOk returns a tuple with the DeletionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetDeletionStatusOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeletionStatus.Get(), o.DeletionStatus.IsSet()
}

// HasDeletionStatus returns a boolean if a field has been set.
func (o *BackupJobProto) HasDeletionStatus() bool {
	if o != nil && o.DeletionStatus.IsSet() {
		return true
	}

	return false
}

// SetDeletionStatus gets a reference to the given NullableInt32 and assigns it to the DeletionStatus field.
func (o *BackupJobProto) SetDeletionStatus(v int32) {
	o.DeletionStatus.Set(&v)
}
// SetDeletionStatusNil sets the value for DeletionStatus to be an explicit nil
func (o *BackupJobProto) SetDeletionStatusNil() {
	o.DeletionStatus.Set(nil)
}

// UnsetDeletionStatus ensures that no value is present for DeletionStatus, not even an explicit nil
func (o *BackupJobProto) UnsetDeletionStatus() {
	o.DeletionStatus.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *BackupJobProto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *BackupJobProto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *BackupJobProto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *BackupJobProto) UnsetDescription() {
	o.Description.Unset()
}

// GetDrToCloudParams returns the DrToCloudParams field value if set, zero value otherwise.
func (o *BackupJobProto) GetDrToCloudParams() BackupJobProtoDRToCloudParams {
	if o == nil || o.DrToCloudParams == nil {
		var ret BackupJobProtoDRToCloudParams
		return ret
	}
	return *o.DrToCloudParams
}

// GetDrToCloudParamsOk returns a tuple with the DrToCloudParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetDrToCloudParamsOk() (*BackupJobProtoDRToCloudParams, bool) {
	if o == nil || o.DrToCloudParams == nil {
		return nil, false
	}
	return o.DrToCloudParams, true
}

// HasDrToCloudParams returns a boolean if a field has been set.
func (o *BackupJobProto) HasDrToCloudParams() bool {
	if o != nil && o.DrToCloudParams != nil {
		return true
	}

	return false
}

// SetDrToCloudParams gets a reference to the given BackupJobProtoDRToCloudParams and assigns it to the DrToCloudParams field.
func (o *BackupJobProto) SetDrToCloudParams(v BackupJobProtoDRToCloudParams) {
	o.DrToCloudParams = &v
}

// GetEhParentSource returns the EhParentSource field value if set, zero value otherwise.
func (o *BackupJobProto) GetEhParentSource() EntityProto {
	if o == nil || o.EhParentSource == nil {
		var ret EntityProto
		return ret
	}
	return *o.EhParentSource
}

// GetEhParentSourceOk returns a tuple with the EhParentSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetEhParentSourceOk() (*EntityProto, bool) {
	if o == nil || o.EhParentSource == nil {
		return nil, false
	}
	return o.EhParentSource, true
}

// HasEhParentSource returns a boolean if a field has been set.
func (o *BackupJobProto) HasEhParentSource() bool {
	if o != nil && o.EhParentSource != nil {
		return true
	}

	return false
}

// SetEhParentSource gets a reference to the given EntityProto and assigns it to the EhParentSource field.
func (o *BackupJobProto) SetEhParentSource(v EntityProto) {
	o.EhParentSource = &v
}

// GetEndTimeUsecs returns the EndTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetEndTimeUsecs() int64 {
	if o == nil || o.EndTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.EndTimeUsecs.Get()
}

// GetEndTimeUsecsOk returns a tuple with the EndTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetEndTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndTimeUsecs.Get(), o.EndTimeUsecs.IsSet()
}

// HasEndTimeUsecs returns a boolean if a field has been set.
func (o *BackupJobProto) HasEndTimeUsecs() bool {
	if o != nil && o.EndTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetEndTimeUsecs gets a reference to the given NullableInt64 and assigns it to the EndTimeUsecs field.
func (o *BackupJobProto) SetEndTimeUsecs(v int64) {
	o.EndTimeUsecs.Set(&v)
}
// SetEndTimeUsecsNil sets the value for EndTimeUsecs to be an explicit nil
func (o *BackupJobProto) SetEndTimeUsecsNil() {
	o.EndTimeUsecs.Set(nil)
}

// UnsetEndTimeUsecs ensures that no value is present for EndTimeUsecs, not even an explicit nil
func (o *BackupJobProto) UnsetEndTimeUsecs() {
	o.EndTimeUsecs.Unset()
}

// GetEnvBackupParams returns the EnvBackupParams field value if set, zero value otherwise.
func (o *BackupJobProto) GetEnvBackupParams() EnvBackupParams {
	if o == nil || o.EnvBackupParams == nil {
		var ret EnvBackupParams
		return ret
	}
	return *o.EnvBackupParams
}

// GetEnvBackupParamsOk returns a tuple with the EnvBackupParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetEnvBackupParamsOk() (*EnvBackupParams, bool) {
	if o == nil || o.EnvBackupParams == nil {
		return nil, false
	}
	return o.EnvBackupParams, true
}

// HasEnvBackupParams returns a boolean if a field has been set.
func (o *BackupJobProto) HasEnvBackupParams() bool {
	if o != nil && o.EnvBackupParams != nil {
		return true
	}

	return false
}

// SetEnvBackupParams gets a reference to the given EnvBackupParams and assigns it to the EnvBackupParams field.
func (o *BackupJobProto) SetEnvBackupParams(v EnvBackupParams) {
	o.EnvBackupParams = &v
}

// GetExcludeSources returns the ExcludeSources field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetExcludeSources() []BackupJobProtoExcludeSource {
	if o == nil  {
		var ret []BackupJobProtoExcludeSource
		return ret
	}
	return o.ExcludeSources
}

// GetExcludeSourcesOk returns a tuple with the ExcludeSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetExcludeSourcesOk() (*[]BackupJobProtoExcludeSource, bool) {
	if o == nil || o.ExcludeSources == nil {
		return nil, false
	}
	return &o.ExcludeSources, true
}

// HasExcludeSources returns a boolean if a field has been set.
func (o *BackupJobProto) HasExcludeSources() bool {
	if o != nil && o.ExcludeSources != nil {
		return true
	}

	return false
}

// SetExcludeSources gets a reference to the given []BackupJobProtoExcludeSource and assigns it to the ExcludeSources field.
func (o *BackupJobProto) SetExcludeSources(v []BackupJobProtoExcludeSource) {
	o.ExcludeSources = v
}

// GetExcludeSourcesDEPRECATED returns the ExcludeSourcesDEPRECATED field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetExcludeSourcesDEPRECATED() []EntityProto {
	if o == nil  {
		var ret []EntityProto
		return ret
	}
	return o.ExcludeSourcesDEPRECATED
}

// GetExcludeSourcesDEPRECATEDOk returns a tuple with the ExcludeSourcesDEPRECATED field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetExcludeSourcesDEPRECATEDOk() (*[]EntityProto, bool) {
	if o == nil || o.ExcludeSourcesDEPRECATED == nil {
		return nil, false
	}
	return &o.ExcludeSourcesDEPRECATED, true
}

// HasExcludeSourcesDEPRECATED returns a boolean if a field has been set.
func (o *BackupJobProto) HasExcludeSourcesDEPRECATED() bool {
	if o != nil && o.ExcludeSourcesDEPRECATED != nil {
		return true
	}

	return false
}

// SetExcludeSourcesDEPRECATED gets a reference to the given []EntityProto and assigns it to the ExcludeSourcesDEPRECATED field.
func (o *BackupJobProto) SetExcludeSourcesDEPRECATED(v []EntityProto) {
	o.ExcludeSourcesDEPRECATED = v
}

// GetExclusionRanges returns the ExclusionRanges field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetExclusionRanges() []BackupJobProtoExclusionTimeRange {
	if o == nil  {
		var ret []BackupJobProtoExclusionTimeRange
		return ret
	}
	return o.ExclusionRanges
}

// GetExclusionRangesOk returns a tuple with the ExclusionRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetExclusionRangesOk() (*[]BackupJobProtoExclusionTimeRange, bool) {
	if o == nil || o.ExclusionRanges == nil {
		return nil, false
	}
	return &o.ExclusionRanges, true
}

// HasExclusionRanges returns a boolean if a field has been set.
func (o *BackupJobProto) HasExclusionRanges() bool {
	if o != nil && o.ExclusionRanges != nil {
		return true
	}

	return false
}

// SetExclusionRanges gets a reference to the given []BackupJobProtoExclusionTimeRange and assigns it to the ExclusionRanges field.
func (o *BackupJobProto) SetExclusionRanges(v []BackupJobProtoExclusionTimeRange) {
	o.ExclusionRanges = v
}

// GetFullBackupJobPolicy returns the FullBackupJobPolicy field value if set, zero value otherwise.
func (o *BackupJobProto) GetFullBackupJobPolicy() JobPolicyProto {
	if o == nil || o.FullBackupJobPolicy == nil {
		var ret JobPolicyProto
		return ret
	}
	return *o.FullBackupJobPolicy
}

// GetFullBackupJobPolicyOk returns a tuple with the FullBackupJobPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetFullBackupJobPolicyOk() (*JobPolicyProto, bool) {
	if o == nil || o.FullBackupJobPolicy == nil {
		return nil, false
	}
	return o.FullBackupJobPolicy, true
}

// HasFullBackupJobPolicy returns a boolean if a field has been set.
func (o *BackupJobProto) HasFullBackupJobPolicy() bool {
	if o != nil && o.FullBackupJobPolicy != nil {
		return true
	}

	return false
}

// SetFullBackupJobPolicy gets a reference to the given JobPolicyProto and assigns it to the FullBackupJobPolicy field.
func (o *BackupJobProto) SetFullBackupJobPolicy(v JobPolicyProto) {
	o.FullBackupJobPolicy = &v
}

// GetFullBackupSlaTimeMins returns the FullBackupSlaTimeMins field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetFullBackupSlaTimeMins() int64 {
	if o == nil || o.FullBackupSlaTimeMins.Get() == nil {
		var ret int64
		return ret
	}
	return *o.FullBackupSlaTimeMins.Get()
}

// GetFullBackupSlaTimeMinsOk returns a tuple with the FullBackupSlaTimeMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetFullBackupSlaTimeMinsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FullBackupSlaTimeMins.Get(), o.FullBackupSlaTimeMins.IsSet()
}

// HasFullBackupSlaTimeMins returns a boolean if a field has been set.
func (o *BackupJobProto) HasFullBackupSlaTimeMins() bool {
	if o != nil && o.FullBackupSlaTimeMins.IsSet() {
		return true
	}

	return false
}

// SetFullBackupSlaTimeMins gets a reference to the given NullableInt64 and assigns it to the FullBackupSlaTimeMins field.
func (o *BackupJobProto) SetFullBackupSlaTimeMins(v int64) {
	o.FullBackupSlaTimeMins.Set(&v)
}
// SetFullBackupSlaTimeMinsNil sets the value for FullBackupSlaTimeMins to be an explicit nil
func (o *BackupJobProto) SetFullBackupSlaTimeMinsNil() {
	o.FullBackupSlaTimeMins.Set(nil)
}

// UnsetFullBackupSlaTimeMins ensures that no value is present for FullBackupSlaTimeMins, not even an explicit nil
func (o *BackupJobProto) UnsetFullBackupSlaTimeMins() {
	o.FullBackupSlaTimeMins.Unset()
}

// GetGlobalIncludeExclude returns the GlobalIncludeExclude field value if set, zero value otherwise.
func (o *BackupJobProto) GetGlobalIncludeExclude() PhysicalFileBackupParamsGlobalIncludeExclude {
	if o == nil || o.GlobalIncludeExclude == nil {
		var ret PhysicalFileBackupParamsGlobalIncludeExclude
		return ret
	}
	return *o.GlobalIncludeExclude
}

// GetGlobalIncludeExcludeOk returns a tuple with the GlobalIncludeExclude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetGlobalIncludeExcludeOk() (*PhysicalFileBackupParamsGlobalIncludeExclude, bool) {
	if o == nil || o.GlobalIncludeExclude == nil {
		return nil, false
	}
	return o.GlobalIncludeExclude, true
}

// HasGlobalIncludeExclude returns a boolean if a field has been set.
func (o *BackupJobProto) HasGlobalIncludeExclude() bool {
	if o != nil && o.GlobalIncludeExclude != nil {
		return true
	}

	return false
}

// SetGlobalIncludeExclude gets a reference to the given PhysicalFileBackupParamsGlobalIncludeExclude and assigns it to the GlobalIncludeExclude field.
func (o *BackupJobProto) SetGlobalIncludeExclude(v PhysicalFileBackupParamsGlobalIncludeExclude) {
	o.GlobalIncludeExclude = &v
}

// GetIndexingPolicy returns the IndexingPolicy field value if set, zero value otherwise.
func (o *BackupJobProto) GetIndexingPolicy() IndexingPolicyProto {
	if o == nil || o.IndexingPolicy == nil {
		var ret IndexingPolicyProto
		return ret
	}
	return *o.IndexingPolicy
}

// GetIndexingPolicyOk returns a tuple with the IndexingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetIndexingPolicyOk() (*IndexingPolicyProto, bool) {
	if o == nil || o.IndexingPolicy == nil {
		return nil, false
	}
	return o.IndexingPolicy, true
}

// HasIndexingPolicy returns a boolean if a field has been set.
func (o *BackupJobProto) HasIndexingPolicy() bool {
	if o != nil && o.IndexingPolicy != nil {
		return true
	}

	return false
}

// SetIndexingPolicy gets a reference to the given IndexingPolicyProto and assigns it to the IndexingPolicy field.
func (o *BackupJobProto) SetIndexingPolicy(v IndexingPolicyProto) {
	o.IndexingPolicy = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetIsActive() bool {
	if o == nil || o.IsActive.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsActive.Get()
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetIsActiveOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsActive.Get(), o.IsActive.IsSet()
}

// HasIsActive returns a boolean if a field has been set.
func (o *BackupJobProto) HasIsActive() bool {
	if o != nil && o.IsActive.IsSet() {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given NullableBool and assigns it to the IsActive field.
func (o *BackupJobProto) SetIsActive(v bool) {
	o.IsActive.Set(&v)
}
// SetIsActiveNil sets the value for IsActive to be an explicit nil
func (o *BackupJobProto) SetIsActiveNil() {
	o.IsActive.Set(nil)
}

// UnsetIsActive ensures that no value is present for IsActive, not even an explicit nil
func (o *BackupJobProto) UnsetIsActive() {
	o.IsActive.Unset()
}

// GetIsContinuousSnapshottingEnabled returns the IsContinuousSnapshottingEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetIsContinuousSnapshottingEnabled() bool {
	if o == nil || o.IsContinuousSnapshottingEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsContinuousSnapshottingEnabled.Get()
}

// GetIsContinuousSnapshottingEnabledOk returns a tuple with the IsContinuousSnapshottingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetIsContinuousSnapshottingEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsContinuousSnapshottingEnabled.Get(), o.IsContinuousSnapshottingEnabled.IsSet()
}

// HasIsContinuousSnapshottingEnabled returns a boolean if a field has been set.
func (o *BackupJobProto) HasIsContinuousSnapshottingEnabled() bool {
	if o != nil && o.IsContinuousSnapshottingEnabled.IsSet() {
		return true
	}

	return false
}

// SetIsContinuousSnapshottingEnabled gets a reference to the given NullableBool and assigns it to the IsContinuousSnapshottingEnabled field.
func (o *BackupJobProto) SetIsContinuousSnapshottingEnabled(v bool) {
	o.IsContinuousSnapshottingEnabled.Set(&v)
}
// SetIsContinuousSnapshottingEnabledNil sets the value for IsContinuousSnapshottingEnabled to be an explicit nil
func (o *BackupJobProto) SetIsContinuousSnapshottingEnabledNil() {
	o.IsContinuousSnapshottingEnabled.Set(nil)
}

// UnsetIsContinuousSnapshottingEnabled ensures that no value is present for IsContinuousSnapshottingEnabled, not even an explicit nil
func (o *BackupJobProto) UnsetIsContinuousSnapshottingEnabled() {
	o.IsContinuousSnapshottingEnabled.Unset()
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetIsDeleted() bool {
	if o == nil || o.IsDeleted.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsDeleted.Get()
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetIsDeletedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsDeleted.Get(), o.IsDeleted.IsSet()
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *BackupJobProto) HasIsDeleted() bool {
	if o != nil && o.IsDeleted.IsSet() {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given NullableBool and assigns it to the IsDeleted field.
func (o *BackupJobProto) SetIsDeleted(v bool) {
	o.IsDeleted.Set(&v)
}
// SetIsDeletedNil sets the value for IsDeleted to be an explicit nil
func (o *BackupJobProto) SetIsDeletedNil() {
	o.IsDeleted.Set(nil)
}

// UnsetIsDeleted ensures that no value is present for IsDeleted, not even an explicit nil
func (o *BackupJobProto) UnsetIsDeleted() {
	o.IsDeleted.Unset()
}

// GetIsDirectArchiveEnabled returns the IsDirectArchiveEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetIsDirectArchiveEnabled() bool {
	if o == nil || o.IsDirectArchiveEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsDirectArchiveEnabled.Get()
}

// GetIsDirectArchiveEnabledOk returns a tuple with the IsDirectArchiveEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetIsDirectArchiveEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsDirectArchiveEnabled.Get(), o.IsDirectArchiveEnabled.IsSet()
}

// HasIsDirectArchiveEnabled returns a boolean if a field has been set.
func (o *BackupJobProto) HasIsDirectArchiveEnabled() bool {
	if o != nil && o.IsDirectArchiveEnabled.IsSet() {
		return true
	}

	return false
}

// SetIsDirectArchiveEnabled gets a reference to the given NullableBool and assigns it to the IsDirectArchiveEnabled field.
func (o *BackupJobProto) SetIsDirectArchiveEnabled(v bool) {
	o.IsDirectArchiveEnabled.Set(&v)
}
// SetIsDirectArchiveEnabledNil sets the value for IsDirectArchiveEnabled to be an explicit nil
func (o *BackupJobProto) SetIsDirectArchiveEnabledNil() {
	o.IsDirectArchiveEnabled.Set(nil)
}

// UnsetIsDirectArchiveEnabled ensures that no value is present for IsDirectArchiveEnabled, not even an explicit nil
func (o *BackupJobProto) UnsetIsDirectArchiveEnabled() {
	o.IsDirectArchiveEnabled.Unset()
}

// GetIsDirectArchiveNativeFormatEnabled returns the IsDirectArchiveNativeFormatEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetIsDirectArchiveNativeFormatEnabled() bool {
	if o == nil || o.IsDirectArchiveNativeFormatEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsDirectArchiveNativeFormatEnabled.Get()
}

// GetIsDirectArchiveNativeFormatEnabledOk returns a tuple with the IsDirectArchiveNativeFormatEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetIsDirectArchiveNativeFormatEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsDirectArchiveNativeFormatEnabled.Get(), o.IsDirectArchiveNativeFormatEnabled.IsSet()
}

// HasIsDirectArchiveNativeFormatEnabled returns a boolean if a field has been set.
func (o *BackupJobProto) HasIsDirectArchiveNativeFormatEnabled() bool {
	if o != nil && o.IsDirectArchiveNativeFormatEnabled.IsSet() {
		return true
	}

	return false
}

// SetIsDirectArchiveNativeFormatEnabled gets a reference to the given NullableBool and assigns it to the IsDirectArchiveNativeFormatEnabled field.
func (o *BackupJobProto) SetIsDirectArchiveNativeFormatEnabled(v bool) {
	o.IsDirectArchiveNativeFormatEnabled.Set(&v)
}
// SetIsDirectArchiveNativeFormatEnabledNil sets the value for IsDirectArchiveNativeFormatEnabled to be an explicit nil
func (o *BackupJobProto) SetIsDirectArchiveNativeFormatEnabledNil() {
	o.IsDirectArchiveNativeFormatEnabled.Set(nil)
}

// UnsetIsDirectArchiveNativeFormatEnabled ensures that no value is present for IsDirectArchiveNativeFormatEnabled, not even an explicit nil
func (o *BackupJobProto) UnsetIsDirectArchiveNativeFormatEnabled() {
	o.IsDirectArchiveNativeFormatEnabled.Unset()
}

// GetIsPaused returns the IsPaused field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetIsPaused() bool {
	if o == nil || o.IsPaused.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsPaused.Get()
}

// GetIsPausedOk returns a tuple with the IsPaused field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetIsPausedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsPaused.Get(), o.IsPaused.IsSet()
}

// HasIsPaused returns a boolean if a field has been set.
func (o *BackupJobProto) HasIsPaused() bool {
	if o != nil && o.IsPaused.IsSet() {
		return true
	}

	return false
}

// SetIsPaused gets a reference to the given NullableBool and assigns it to the IsPaused field.
func (o *BackupJobProto) SetIsPaused(v bool) {
	o.IsPaused.Set(&v)
}
// SetIsPausedNil sets the value for IsPaused to be an explicit nil
func (o *BackupJobProto) SetIsPausedNil() {
	o.IsPaused.Set(nil)
}

// UnsetIsPaused ensures that no value is present for IsPaused, not even an explicit nil
func (o *BackupJobProto) UnsetIsPaused() {
	o.IsPaused.Unset()
}

// GetIsRpoJob returns the IsRpoJob field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetIsRpoJob() bool {
	if o == nil || o.IsRpoJob.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsRpoJob.Get()
}

// GetIsRpoJobOk returns a tuple with the IsRpoJob field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetIsRpoJobOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsRpoJob.Get(), o.IsRpoJob.IsSet()
}

// HasIsRpoJob returns a boolean if a field has been set.
func (o *BackupJobProto) HasIsRpoJob() bool {
	if o != nil && o.IsRpoJob.IsSet() {
		return true
	}

	return false
}

// SetIsRpoJob gets a reference to the given NullableBool and assigns it to the IsRpoJob field.
func (o *BackupJobProto) SetIsRpoJob(v bool) {
	o.IsRpoJob.Set(&v)
}
// SetIsRpoJobNil sets the value for IsRpoJob to be an explicit nil
func (o *BackupJobProto) SetIsRpoJobNil() {
	o.IsRpoJob.Set(nil)
}

// UnsetIsRpoJob ensures that no value is present for IsRpoJob, not even an explicit nil
func (o *BackupJobProto) UnsetIsRpoJob() {
	o.IsRpoJob.Unset()
}

// GetJobCreationTimeUsecs returns the JobCreationTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetJobCreationTimeUsecs() int64 {
	if o == nil || o.JobCreationTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.JobCreationTimeUsecs.Get()
}

// GetJobCreationTimeUsecsOk returns a tuple with the JobCreationTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetJobCreationTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobCreationTimeUsecs.Get(), o.JobCreationTimeUsecs.IsSet()
}

// HasJobCreationTimeUsecs returns a boolean if a field has been set.
func (o *BackupJobProto) HasJobCreationTimeUsecs() bool {
	if o != nil && o.JobCreationTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetJobCreationTimeUsecs gets a reference to the given NullableInt64 and assigns it to the JobCreationTimeUsecs field.
func (o *BackupJobProto) SetJobCreationTimeUsecs(v int64) {
	o.JobCreationTimeUsecs.Set(&v)
}
// SetJobCreationTimeUsecsNil sets the value for JobCreationTimeUsecs to be an explicit nil
func (o *BackupJobProto) SetJobCreationTimeUsecsNil() {
	o.JobCreationTimeUsecs.Set(nil)
}

// UnsetJobCreationTimeUsecs ensures that no value is present for JobCreationTimeUsecs, not even an explicit nil
func (o *BackupJobProto) UnsetJobCreationTimeUsecs() {
	o.JobCreationTimeUsecs.Unset()
}

// GetJobId returns the JobId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetJobId() int64 {
	if o == nil || o.JobId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.JobId.Get()
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetJobIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobId.Get(), o.JobId.IsSet()
}

// HasJobId returns a boolean if a field has been set.
func (o *BackupJobProto) HasJobId() bool {
	if o != nil && o.JobId.IsSet() {
		return true
	}

	return false
}

// SetJobId gets a reference to the given NullableInt64 and assigns it to the JobId field.
func (o *BackupJobProto) SetJobId(v int64) {
	o.JobId.Set(&v)
}
// SetJobIdNil sets the value for JobId to be an explicit nil
func (o *BackupJobProto) SetJobIdNil() {
	o.JobId.Set(nil)
}

// UnsetJobId ensures that no value is present for JobId, not even an explicit nil
func (o *BackupJobProto) UnsetJobId() {
	o.JobId.Unset()
}

// GetJobPolicy returns the JobPolicy field value if set, zero value otherwise.
func (o *BackupJobProto) GetJobPolicy() JobPolicyProto {
	if o == nil || o.JobPolicy == nil {
		var ret JobPolicyProto
		return ret
	}
	return *o.JobPolicy
}

// GetJobPolicyOk returns a tuple with the JobPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetJobPolicyOk() (*JobPolicyProto, bool) {
	if o == nil || o.JobPolicy == nil {
		return nil, false
	}
	return o.JobPolicy, true
}

// HasJobPolicy returns a boolean if a field has been set.
func (o *BackupJobProto) HasJobPolicy() bool {
	if o != nil && o.JobPolicy != nil {
		return true
	}

	return false
}

// SetJobPolicy gets a reference to the given JobPolicyProto and assigns it to the JobPolicy field.
func (o *BackupJobProto) SetJobPolicy(v JobPolicyProto) {
	o.JobPolicy = &v
}

// GetJobUid returns the JobUid field value if set, zero value otherwise.
func (o *BackupJobProto) GetJobUid() UniversalIdProto {
	if o == nil || o.JobUid == nil {
		var ret UniversalIdProto
		return ret
	}
	return *o.JobUid
}

// GetJobUidOk returns a tuple with the JobUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetJobUidOk() (*UniversalIdProto, bool) {
	if o == nil || o.JobUid == nil {
		return nil, false
	}
	return o.JobUid, true
}

// HasJobUid returns a boolean if a field has been set.
func (o *BackupJobProto) HasJobUid() bool {
	if o != nil && o.JobUid != nil {
		return true
	}

	return false
}

// SetJobUid gets a reference to the given UniversalIdProto and assigns it to the JobUid field.
func (o *BackupJobProto) SetJobUid(v UniversalIdProto) {
	o.JobUid = &v
}

// GetLastModificationTimeUsecs returns the LastModificationTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetLastModificationTimeUsecs() int64 {
	if o == nil || o.LastModificationTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.LastModificationTimeUsecs.Get()
}

// GetLastModificationTimeUsecsOk returns a tuple with the LastModificationTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetLastModificationTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastModificationTimeUsecs.Get(), o.LastModificationTimeUsecs.IsSet()
}

// HasLastModificationTimeUsecs returns a boolean if a field has been set.
func (o *BackupJobProto) HasLastModificationTimeUsecs() bool {
	if o != nil && o.LastModificationTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetLastModificationTimeUsecs gets a reference to the given NullableInt64 and assigns it to the LastModificationTimeUsecs field.
func (o *BackupJobProto) SetLastModificationTimeUsecs(v int64) {
	o.LastModificationTimeUsecs.Set(&v)
}
// SetLastModificationTimeUsecsNil sets the value for LastModificationTimeUsecs to be an explicit nil
func (o *BackupJobProto) SetLastModificationTimeUsecsNil() {
	o.LastModificationTimeUsecs.Set(nil)
}

// UnsetLastModificationTimeUsecs ensures that no value is present for LastModificationTimeUsecs, not even an explicit nil
func (o *BackupJobProto) UnsetLastModificationTimeUsecs() {
	o.LastModificationTimeUsecs.Unset()
}

// GetLastPauseModificationTimeUsecs returns the LastPauseModificationTimeUsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetLastPauseModificationTimeUsecs() int64 {
	if o == nil || o.LastPauseModificationTimeUsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.LastPauseModificationTimeUsecs.Get()
}

// GetLastPauseModificationTimeUsecsOk returns a tuple with the LastPauseModificationTimeUsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetLastPauseModificationTimeUsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastPauseModificationTimeUsecs.Get(), o.LastPauseModificationTimeUsecs.IsSet()
}

// HasLastPauseModificationTimeUsecs returns a boolean if a field has been set.
func (o *BackupJobProto) HasLastPauseModificationTimeUsecs() bool {
	if o != nil && o.LastPauseModificationTimeUsecs.IsSet() {
		return true
	}

	return false
}

// SetLastPauseModificationTimeUsecs gets a reference to the given NullableInt64 and assigns it to the LastPauseModificationTimeUsecs field.
func (o *BackupJobProto) SetLastPauseModificationTimeUsecs(v int64) {
	o.LastPauseModificationTimeUsecs.Set(&v)
}
// SetLastPauseModificationTimeUsecsNil sets the value for LastPauseModificationTimeUsecs to be an explicit nil
func (o *BackupJobProto) SetLastPauseModificationTimeUsecsNil() {
	o.LastPauseModificationTimeUsecs.Set(nil)
}

// UnsetLastPauseModificationTimeUsecs ensures that no value is present for LastPauseModificationTimeUsecs, not even an explicit nil
func (o *BackupJobProto) UnsetLastPauseModificationTimeUsecs() {
	o.LastPauseModificationTimeUsecs.Unset()
}

// GetLastPauseReason returns the LastPauseReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetLastPauseReason() int32 {
	if o == nil || o.LastPauseReason.Get() == nil {
		var ret int32
		return ret
	}
	return *o.LastPauseReason.Get()
}

// GetLastPauseReasonOk returns a tuple with the LastPauseReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetLastPauseReasonOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastPauseReason.Get(), o.LastPauseReason.IsSet()
}

// HasLastPauseReason returns a boolean if a field has been set.
func (o *BackupJobProto) HasLastPauseReason() bool {
	if o != nil && o.LastPauseReason.IsSet() {
		return true
	}

	return false
}

// SetLastPauseReason gets a reference to the given NullableInt32 and assigns it to the LastPauseReason field.
func (o *BackupJobProto) SetLastPauseReason(v int32) {
	o.LastPauseReason.Set(&v)
}
// SetLastPauseReasonNil sets the value for LastPauseReason to be an explicit nil
func (o *BackupJobProto) SetLastPauseReasonNil() {
	o.LastPauseReason.Set(nil)
}

// UnsetLastPauseReason ensures that no value is present for LastPauseReason, not even an explicit nil
func (o *BackupJobProto) UnsetLastPauseReason() {
	o.LastPauseReason.Unset()
}

// GetLastUpdatedUsername returns the LastUpdatedUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetLastUpdatedUsername() string {
	if o == nil || o.LastUpdatedUsername.Get() == nil {
		var ret string
		return ret
	}
	return *o.LastUpdatedUsername.Get()
}

// GetLastUpdatedUsernameOk returns a tuple with the LastUpdatedUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetLastUpdatedUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastUpdatedUsername.Get(), o.LastUpdatedUsername.IsSet()
}

// HasLastUpdatedUsername returns a boolean if a field has been set.
func (o *BackupJobProto) HasLastUpdatedUsername() bool {
	if o != nil && o.LastUpdatedUsername.IsSet() {
		return true
	}

	return false
}

// SetLastUpdatedUsername gets a reference to the given NullableString and assigns it to the LastUpdatedUsername field.
func (o *BackupJobProto) SetLastUpdatedUsername(v string) {
	o.LastUpdatedUsername.Set(&v)
}
// SetLastUpdatedUsernameNil sets the value for LastUpdatedUsername to be an explicit nil
func (o *BackupJobProto) SetLastUpdatedUsernameNil() {
	o.LastUpdatedUsername.Set(nil)
}

// UnsetLastUpdatedUsername ensures that no value is present for LastUpdatedUsername, not even an explicit nil
func (o *BackupJobProto) UnsetLastUpdatedUsername() {
	o.LastUpdatedUsername.Unset()
}

// GetLeverageSanTransport returns the LeverageSanTransport field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetLeverageSanTransport() bool {
	if o == nil || o.LeverageSanTransport.Get() == nil {
		var ret bool
		return ret
	}
	return *o.LeverageSanTransport.Get()
}

// GetLeverageSanTransportOk returns a tuple with the LeverageSanTransport field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetLeverageSanTransportOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LeverageSanTransport.Get(), o.LeverageSanTransport.IsSet()
}

// HasLeverageSanTransport returns a boolean if a field has been set.
func (o *BackupJobProto) HasLeverageSanTransport() bool {
	if o != nil && o.LeverageSanTransport.IsSet() {
		return true
	}

	return false
}

// SetLeverageSanTransport gets a reference to the given NullableBool and assigns it to the LeverageSanTransport field.
func (o *BackupJobProto) SetLeverageSanTransport(v bool) {
	o.LeverageSanTransport.Set(&v)
}
// SetLeverageSanTransportNil sets the value for LeverageSanTransport to be an explicit nil
func (o *BackupJobProto) SetLeverageSanTransportNil() {
	o.LeverageSanTransport.Set(nil)
}

// UnsetLeverageSanTransport ensures that no value is present for LeverageSanTransport, not even an explicit nil
func (o *BackupJobProto) UnsetLeverageSanTransport() {
	o.LeverageSanTransport.Unset()
}

// GetLeverageStorageSnapshots returns the LeverageStorageSnapshots field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetLeverageStorageSnapshots() bool {
	if o == nil || o.LeverageStorageSnapshots.Get() == nil {
		var ret bool
		return ret
	}
	return *o.LeverageStorageSnapshots.Get()
}

// GetLeverageStorageSnapshotsOk returns a tuple with the LeverageStorageSnapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetLeverageStorageSnapshotsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LeverageStorageSnapshots.Get(), o.LeverageStorageSnapshots.IsSet()
}

// HasLeverageStorageSnapshots returns a boolean if a field has been set.
func (o *BackupJobProto) HasLeverageStorageSnapshots() bool {
	if o != nil && o.LeverageStorageSnapshots.IsSet() {
		return true
	}

	return false
}

// SetLeverageStorageSnapshots gets a reference to the given NullableBool and assigns it to the LeverageStorageSnapshots field.
func (o *BackupJobProto) SetLeverageStorageSnapshots(v bool) {
	o.LeverageStorageSnapshots.Set(&v)
}
// SetLeverageStorageSnapshotsNil sets the value for LeverageStorageSnapshots to be an explicit nil
func (o *BackupJobProto) SetLeverageStorageSnapshotsNil() {
	o.LeverageStorageSnapshots.Set(nil)
}

// UnsetLeverageStorageSnapshots ensures that no value is present for LeverageStorageSnapshots, not even an explicit nil
func (o *BackupJobProto) UnsetLeverageStorageSnapshots() {
	o.LeverageStorageSnapshots.Unset()
}

// GetLeverageStorageSnapshotsForHyperflex returns the LeverageStorageSnapshotsForHyperflex field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetLeverageStorageSnapshotsForHyperflex() bool {
	if o == nil || o.LeverageStorageSnapshotsForHyperflex.Get() == nil {
		var ret bool
		return ret
	}
	return *o.LeverageStorageSnapshotsForHyperflex.Get()
}

// GetLeverageStorageSnapshotsForHyperflexOk returns a tuple with the LeverageStorageSnapshotsForHyperflex field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetLeverageStorageSnapshotsForHyperflexOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LeverageStorageSnapshotsForHyperflex.Get(), o.LeverageStorageSnapshotsForHyperflex.IsSet()
}

// HasLeverageStorageSnapshotsForHyperflex returns a boolean if a field has been set.
func (o *BackupJobProto) HasLeverageStorageSnapshotsForHyperflex() bool {
	if o != nil && o.LeverageStorageSnapshotsForHyperflex.IsSet() {
		return true
	}

	return false
}

// SetLeverageStorageSnapshotsForHyperflex gets a reference to the given NullableBool and assigns it to the LeverageStorageSnapshotsForHyperflex field.
func (o *BackupJobProto) SetLeverageStorageSnapshotsForHyperflex(v bool) {
	o.LeverageStorageSnapshotsForHyperflex.Set(&v)
}
// SetLeverageStorageSnapshotsForHyperflexNil sets the value for LeverageStorageSnapshotsForHyperflex to be an explicit nil
func (o *BackupJobProto) SetLeverageStorageSnapshotsForHyperflexNil() {
	o.LeverageStorageSnapshotsForHyperflex.Set(nil)
}

// UnsetLeverageStorageSnapshotsForHyperflex ensures that no value is present for LeverageStorageSnapshotsForHyperflex, not even an explicit nil
func (o *BackupJobProto) UnsetLeverageStorageSnapshotsForHyperflex() {
	o.LeverageStorageSnapshotsForHyperflex.Unset()
}

// GetLogBackupJobPolicy returns the LogBackupJobPolicy field value if set, zero value otherwise.
func (o *BackupJobProto) GetLogBackupJobPolicy() JobPolicyProto {
	if o == nil || o.LogBackupJobPolicy == nil {
		var ret JobPolicyProto
		return ret
	}
	return *o.LogBackupJobPolicy
}

// GetLogBackupJobPolicyOk returns a tuple with the LogBackupJobPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetLogBackupJobPolicyOk() (*JobPolicyProto, bool) {
	if o == nil || o.LogBackupJobPolicy == nil {
		return nil, false
	}
	return o.LogBackupJobPolicy, true
}

// HasLogBackupJobPolicy returns a boolean if a field has been set.
func (o *BackupJobProto) HasLogBackupJobPolicy() bool {
	if o != nil && o.LogBackupJobPolicy != nil {
		return true
	}

	return false
}

// SetLogBackupJobPolicy gets a reference to the given JobPolicyProto and assigns it to the LogBackupJobPolicy field.
func (o *BackupJobProto) SetLogBackupJobPolicy(v JobPolicyProto) {
	o.LogBackupJobPolicy = &v
}

// GetMaxAllowedSourceSnapshots returns the MaxAllowedSourceSnapshots field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetMaxAllowedSourceSnapshots() int32 {
	if o == nil || o.MaxAllowedSourceSnapshots.Get() == nil {
		var ret int32
		return ret
	}
	return *o.MaxAllowedSourceSnapshots.Get()
}

// GetMaxAllowedSourceSnapshotsOk returns a tuple with the MaxAllowedSourceSnapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetMaxAllowedSourceSnapshotsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxAllowedSourceSnapshots.Get(), o.MaxAllowedSourceSnapshots.IsSet()
}

// HasMaxAllowedSourceSnapshots returns a boolean if a field has been set.
func (o *BackupJobProto) HasMaxAllowedSourceSnapshots() bool {
	if o != nil && o.MaxAllowedSourceSnapshots.IsSet() {
		return true
	}

	return false
}

// SetMaxAllowedSourceSnapshots gets a reference to the given NullableInt32 and assigns it to the MaxAllowedSourceSnapshots field.
func (o *BackupJobProto) SetMaxAllowedSourceSnapshots(v int32) {
	o.MaxAllowedSourceSnapshots.Set(&v)
}
// SetMaxAllowedSourceSnapshotsNil sets the value for MaxAllowedSourceSnapshots to be an explicit nil
func (o *BackupJobProto) SetMaxAllowedSourceSnapshotsNil() {
	o.MaxAllowedSourceSnapshots.Set(nil)
}

// UnsetMaxAllowedSourceSnapshots ensures that no value is present for MaxAllowedSourceSnapshots, not even an explicit nil
func (o *BackupJobProto) UnsetMaxAllowedSourceSnapshots() {
	o.MaxAllowedSourceSnapshots.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *BackupJobProto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *BackupJobProto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *BackupJobProto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *BackupJobProto) UnsetName() {
	o.Name.Unset()
}

// GetNumSnapshotsToKeepOnPrimary returns the NumSnapshotsToKeepOnPrimary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetNumSnapshotsToKeepOnPrimary() int64 {
	if o == nil || o.NumSnapshotsToKeepOnPrimary.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumSnapshotsToKeepOnPrimary.Get()
}

// GetNumSnapshotsToKeepOnPrimaryOk returns a tuple with the NumSnapshotsToKeepOnPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetNumSnapshotsToKeepOnPrimaryOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumSnapshotsToKeepOnPrimary.Get(), o.NumSnapshotsToKeepOnPrimary.IsSet()
}

// HasNumSnapshotsToKeepOnPrimary returns a boolean if a field has been set.
func (o *BackupJobProto) HasNumSnapshotsToKeepOnPrimary() bool {
	if o != nil && o.NumSnapshotsToKeepOnPrimary.IsSet() {
		return true
	}

	return false
}

// SetNumSnapshotsToKeepOnPrimary gets a reference to the given NullableInt64 and assigns it to the NumSnapshotsToKeepOnPrimary field.
func (o *BackupJobProto) SetNumSnapshotsToKeepOnPrimary(v int64) {
	o.NumSnapshotsToKeepOnPrimary.Set(&v)
}
// SetNumSnapshotsToKeepOnPrimaryNil sets the value for NumSnapshotsToKeepOnPrimary to be an explicit nil
func (o *BackupJobProto) SetNumSnapshotsToKeepOnPrimaryNil() {
	o.NumSnapshotsToKeepOnPrimary.Set(nil)
}

// UnsetNumSnapshotsToKeepOnPrimary ensures that no value is present for NumSnapshotsToKeepOnPrimary, not even an explicit nil
func (o *BackupJobProto) UnsetNumSnapshotsToKeepOnPrimary() {
	o.NumSnapshotsToKeepOnPrimary.Unset()
}

// GetParentSource returns the ParentSource field value if set, zero value otherwise.
func (o *BackupJobProto) GetParentSource() EntityProto {
	if o == nil || o.ParentSource == nil {
		var ret EntityProto
		return ret
	}
	return *o.ParentSource
}

// GetParentSourceOk returns a tuple with the ParentSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetParentSourceOk() (*EntityProto, bool) {
	if o == nil || o.ParentSource == nil {
		return nil, false
	}
	return o.ParentSource, true
}

// HasParentSource returns a boolean if a field has been set.
func (o *BackupJobProto) HasParentSource() bool {
	if o != nil && o.ParentSource != nil {
		return true
	}

	return false
}

// SetParentSource gets a reference to the given EntityProto and assigns it to the ParentSource field.
func (o *BackupJobProto) SetParentSource(v EntityProto) {
	o.ParentSource = &v
}

// GetPerformSourceSideDedup returns the PerformSourceSideDedup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetPerformSourceSideDedup() bool {
	if o == nil || o.PerformSourceSideDedup.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PerformSourceSideDedup.Get()
}

// GetPerformSourceSideDedupOk returns a tuple with the PerformSourceSideDedup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetPerformSourceSideDedupOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PerformSourceSideDedup.Get(), o.PerformSourceSideDedup.IsSet()
}

// HasPerformSourceSideDedup returns a boolean if a field has been set.
func (o *BackupJobProto) HasPerformSourceSideDedup() bool {
	if o != nil && o.PerformSourceSideDedup.IsSet() {
		return true
	}

	return false
}

// SetPerformSourceSideDedup gets a reference to the given NullableBool and assigns it to the PerformSourceSideDedup field.
func (o *BackupJobProto) SetPerformSourceSideDedup(v bool) {
	o.PerformSourceSideDedup.Set(&v)
}
// SetPerformSourceSideDedupNil sets the value for PerformSourceSideDedup to be an explicit nil
func (o *BackupJobProto) SetPerformSourceSideDedupNil() {
	o.PerformSourceSideDedup.Set(nil)
}

// UnsetPerformSourceSideDedup ensures that no value is present for PerformSourceSideDedup, not even an explicit nil
func (o *BackupJobProto) UnsetPerformSourceSideDedup() {
	o.PerformSourceSideDedup.Unset()
}

// GetPolicyAppliedTimeMsecs returns the PolicyAppliedTimeMsecs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetPolicyAppliedTimeMsecs() int64 {
	if o == nil || o.PolicyAppliedTimeMsecs.Get() == nil {
		var ret int64
		return ret
	}
	return *o.PolicyAppliedTimeMsecs.Get()
}

// GetPolicyAppliedTimeMsecsOk returns a tuple with the PolicyAppliedTimeMsecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetPolicyAppliedTimeMsecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PolicyAppliedTimeMsecs.Get(), o.PolicyAppliedTimeMsecs.IsSet()
}

// HasPolicyAppliedTimeMsecs returns a boolean if a field has been set.
func (o *BackupJobProto) HasPolicyAppliedTimeMsecs() bool {
	if o != nil && o.PolicyAppliedTimeMsecs.IsSet() {
		return true
	}

	return false
}

// SetPolicyAppliedTimeMsecs gets a reference to the given NullableInt64 and assigns it to the PolicyAppliedTimeMsecs field.
func (o *BackupJobProto) SetPolicyAppliedTimeMsecs(v int64) {
	o.PolicyAppliedTimeMsecs.Set(&v)
}
// SetPolicyAppliedTimeMsecsNil sets the value for PolicyAppliedTimeMsecs to be an explicit nil
func (o *BackupJobProto) SetPolicyAppliedTimeMsecsNil() {
	o.PolicyAppliedTimeMsecs.Set(nil)
}

// UnsetPolicyAppliedTimeMsecs ensures that no value is present for PolicyAppliedTimeMsecs, not even an explicit nil
func (o *BackupJobProto) UnsetPolicyAppliedTimeMsecs() {
	o.PolicyAppliedTimeMsecs.Unset()
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetPolicyId() string {
	if o == nil || o.PolicyId.Get() == nil {
		var ret string
		return ret
	}
	return *o.PolicyId.Get()
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetPolicyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PolicyId.Get(), o.PolicyId.IsSet()
}

// HasPolicyId returns a boolean if a field has been set.
func (o *BackupJobProto) HasPolicyId() bool {
	if o != nil && o.PolicyId.IsSet() {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given NullableString and assigns it to the PolicyId field.
func (o *BackupJobProto) SetPolicyId(v string) {
	o.PolicyId.Set(&v)
}
// SetPolicyIdNil sets the value for PolicyId to be an explicit nil
func (o *BackupJobProto) SetPolicyIdNil() {
	o.PolicyId.Set(nil)
}

// UnsetPolicyId ensures that no value is present for PolicyId, not even an explicit nil
func (o *BackupJobProto) UnsetPolicyId() {
	o.PolicyId.Unset()
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetPolicyName() string {
	if o == nil || o.PolicyName.Get() == nil {
		var ret string
		return ret
	}
	return *o.PolicyName.Get()
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetPolicyNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PolicyName.Get(), o.PolicyName.IsSet()
}

// HasPolicyName returns a boolean if a field has been set.
func (o *BackupJobProto) HasPolicyName() bool {
	if o != nil && o.PolicyName.IsSet() {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given NullableString and assigns it to the PolicyName field.
func (o *BackupJobProto) SetPolicyName(v string) {
	o.PolicyName.Set(&v)
}
// SetPolicyNameNil sets the value for PolicyName to be an explicit nil
func (o *BackupJobProto) SetPolicyNameNil() {
	o.PolicyName.Set(nil)
}

// UnsetPolicyName ensures that no value is present for PolicyName, not even an explicit nil
func (o *BackupJobProto) UnsetPolicyName() {
	o.PolicyName.Unset()
}

// GetPostBackupScript returns the PostBackupScript field value if set, zero value otherwise.
func (o *BackupJobProto) GetPostBackupScript() BackupJobPreOrPostScript {
	if o == nil || o.PostBackupScript == nil {
		var ret BackupJobPreOrPostScript
		return ret
	}
	return *o.PostBackupScript
}

// GetPostBackupScriptOk returns a tuple with the PostBackupScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetPostBackupScriptOk() (*BackupJobPreOrPostScript, bool) {
	if o == nil || o.PostBackupScript == nil {
		return nil, false
	}
	return o.PostBackupScript, true
}

// HasPostBackupScript returns a boolean if a field has been set.
func (o *BackupJobProto) HasPostBackupScript() bool {
	if o != nil && o.PostBackupScript != nil {
		return true
	}

	return false
}

// SetPostBackupScript gets a reference to the given BackupJobPreOrPostScript and assigns it to the PostBackupScript field.
func (o *BackupJobProto) SetPostBackupScript(v BackupJobPreOrPostScript) {
	o.PostBackupScript = &v
}

// GetPreScript returns the PreScript field value if set, zero value otherwise.
func (o *BackupJobProto) GetPreScript() BackupJobPreOrPostScript {
	if o == nil || o.PreScript == nil {
		var ret BackupJobPreOrPostScript
		return ret
	}
	return *o.PreScript
}

// GetPreScriptOk returns a tuple with the PreScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetPreScriptOk() (*BackupJobPreOrPostScript, bool) {
	if o == nil || o.PreScript == nil {
		return nil, false
	}
	return o.PreScript, true
}

// HasPreScript returns a boolean if a field has been set.
func (o *BackupJobProto) HasPreScript() bool {
	if o != nil && o.PreScript != nil {
		return true
	}

	return false
}

// SetPreScript gets a reference to the given BackupJobPreOrPostScript and assigns it to the PreScript field.
func (o *BackupJobProto) SetPreScript(v BackupJobPreOrPostScript) {
	o.PreScript = &v
}

// GetPrimaryJobUid returns the PrimaryJobUid field value if set, zero value otherwise.
func (o *BackupJobProto) GetPrimaryJobUid() UniversalIdProto {
	if o == nil || o.PrimaryJobUid == nil {
		var ret UniversalIdProto
		return ret
	}
	return *o.PrimaryJobUid
}

// GetPrimaryJobUidOk returns a tuple with the PrimaryJobUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetPrimaryJobUidOk() (*UniversalIdProto, bool) {
	if o == nil || o.PrimaryJobUid == nil {
		return nil, false
	}
	return o.PrimaryJobUid, true
}

// HasPrimaryJobUid returns a boolean if a field has been set.
func (o *BackupJobProto) HasPrimaryJobUid() bool {
	if o != nil && o.PrimaryJobUid != nil {
		return true
	}

	return false
}

// SetPrimaryJobUid gets a reference to the given UniversalIdProto and assigns it to the PrimaryJobUid field.
func (o *BackupJobProto) SetPrimaryJobUid(v UniversalIdProto) {
	o.PrimaryJobUid = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetPriority() int32 {
	if o == nil || o.Priority.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetPriorityOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *BackupJobProto) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableInt32 and assigns it to the Priority field.
func (o *BackupJobProto) SetPriority(v int32) {
	o.Priority.Set(&v)
}
// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *BackupJobProto) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *BackupJobProto) UnsetPriority() {
	o.Priority.Unset()
}

// GetQuiesce returns the Quiesce field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetQuiesce() bool {
	if o == nil || o.Quiesce.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Quiesce.Get()
}

// GetQuiesceOk returns a tuple with the Quiesce field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetQuiesceOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Quiesce.Get(), o.Quiesce.IsSet()
}

// HasQuiesce returns a boolean if a field has been set.
func (o *BackupJobProto) HasQuiesce() bool {
	if o != nil && o.Quiesce.IsSet() {
		return true
	}

	return false
}

// SetQuiesce gets a reference to the given NullableBool and assigns it to the Quiesce field.
func (o *BackupJobProto) SetQuiesce(v bool) {
	o.Quiesce.Set(&v)
}
// SetQuiesceNil sets the value for Quiesce to be an explicit nil
func (o *BackupJobProto) SetQuiesceNil() {
	o.Quiesce.Set(nil)
}

// UnsetQuiesce ensures that no value is present for Quiesce, not even an explicit nil
func (o *BackupJobProto) UnsetQuiesce() {
	o.Quiesce.Unset()
}

// GetRemoteJobUids returns the RemoteJobUids field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetRemoteJobUids() []UniversalIdProto {
	if o == nil  {
		var ret []UniversalIdProto
		return ret
	}
	return o.RemoteJobUids
}

// GetRemoteJobUidsOk returns a tuple with the RemoteJobUids field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetRemoteJobUidsOk() (*[]UniversalIdProto, bool) {
	if o == nil || o.RemoteJobUids == nil {
		return nil, false
	}
	return &o.RemoteJobUids, true
}

// HasRemoteJobUids returns a boolean if a field has been set.
func (o *BackupJobProto) HasRemoteJobUids() bool {
	if o != nil && o.RemoteJobUids != nil {
		return true
	}

	return false
}

// SetRemoteJobUids gets a reference to the given []UniversalIdProto and assigns it to the RemoteJobUids field.
func (o *BackupJobProto) SetRemoteJobUids(v []UniversalIdProto) {
	o.RemoteJobUids = v
}

// GetRemoteViewName returns the RemoteViewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetRemoteViewName() string {
	if o == nil || o.RemoteViewName.Get() == nil {
		var ret string
		return ret
	}
	return *o.RemoteViewName.Get()
}

// GetRemoteViewNameOk returns a tuple with the RemoteViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetRemoteViewNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RemoteViewName.Get(), o.RemoteViewName.IsSet()
}

// HasRemoteViewName returns a boolean if a field has been set.
func (o *BackupJobProto) HasRemoteViewName() bool {
	if o != nil && o.RemoteViewName.IsSet() {
		return true
	}

	return false
}

// SetRemoteViewName gets a reference to the given NullableString and assigns it to the RemoteViewName field.
func (o *BackupJobProto) SetRemoteViewName(v string) {
	o.RemoteViewName.Set(&v)
}
// SetRemoteViewNameNil sets the value for RemoteViewName to be an explicit nil
func (o *BackupJobProto) SetRemoteViewNameNil() {
	o.RemoteViewName.Set(nil)
}

// UnsetRemoteViewName ensures that no value is present for RemoteViewName, not even an explicit nil
func (o *BackupJobProto) UnsetRemoteViewName() {
	o.RemoteViewName.Unset()
}

// GetRequiredFeatureVec returns the RequiredFeatureVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetRequiredFeatureVec() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.RequiredFeatureVec
}

// GetRequiredFeatureVecOk returns a tuple with the RequiredFeatureVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetRequiredFeatureVecOk() (*[]string, bool) {
	if o == nil || o.RequiredFeatureVec == nil {
		return nil, false
	}
	return &o.RequiredFeatureVec, true
}

// HasRequiredFeatureVec returns a boolean if a field has been set.
func (o *BackupJobProto) HasRequiredFeatureVec() bool {
	if o != nil && o.RequiredFeatureVec != nil {
		return true
	}

	return false
}

// SetRequiredFeatureVec gets a reference to the given []string and assigns it to the RequiredFeatureVec field.
func (o *BackupJobProto) SetRequiredFeatureVec(v []string) {
	o.RequiredFeatureVec = v
}

// GetSlaTimeMins returns the SlaTimeMins field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetSlaTimeMins() int64 {
	if o == nil || o.SlaTimeMins.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SlaTimeMins.Get()
}

// GetSlaTimeMinsOk returns a tuple with the SlaTimeMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetSlaTimeMinsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SlaTimeMins.Get(), o.SlaTimeMins.IsSet()
}

// HasSlaTimeMins returns a boolean if a field has been set.
func (o *BackupJobProto) HasSlaTimeMins() bool {
	if o != nil && o.SlaTimeMins.IsSet() {
		return true
	}

	return false
}

// SetSlaTimeMins gets a reference to the given NullableInt64 and assigns it to the SlaTimeMins field.
func (o *BackupJobProto) SetSlaTimeMins(v int64) {
	o.SlaTimeMins.Set(&v)
}
// SetSlaTimeMinsNil sets the value for SlaTimeMins to be an explicit nil
func (o *BackupJobProto) SetSlaTimeMinsNil() {
	o.SlaTimeMins.Set(nil)
}

// UnsetSlaTimeMins ensures that no value is present for SlaTimeMins, not even an explicit nil
func (o *BackupJobProto) UnsetSlaTimeMins() {
	o.SlaTimeMins.Unset()
}

// GetSourceFilters returns the SourceFilters field value if set, zero value otherwise.
func (o *BackupJobProto) GetSourceFilters() SourceFilters {
	if o == nil || o.SourceFilters == nil {
		var ret SourceFilters
		return ret
	}
	return *o.SourceFilters
}

// GetSourceFiltersOk returns a tuple with the SourceFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetSourceFiltersOk() (*SourceFilters, bool) {
	if o == nil || o.SourceFilters == nil {
		return nil, false
	}
	return o.SourceFilters, true
}

// HasSourceFilters returns a boolean if a field has been set.
func (o *BackupJobProto) HasSourceFilters() bool {
	if o != nil && o.SourceFilters != nil {
		return true
	}

	return false
}

// SetSourceFilters gets a reference to the given SourceFilters and assigns it to the SourceFilters field.
func (o *BackupJobProto) SetSourceFilters(v SourceFilters) {
	o.SourceFilters = &v
}

// GetSources returns the Sources field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetSources() []BackupJobProtoBackupSource {
	if o == nil  {
		var ret []BackupJobProtoBackupSource
		return ret
	}
	return o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetSourcesOk() (*[]BackupJobProtoBackupSource, bool) {
	if o == nil || o.Sources == nil {
		return nil, false
	}
	return &o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *BackupJobProto) HasSources() bool {
	if o != nil && o.Sources != nil {
		return true
	}

	return false
}

// SetSources gets a reference to the given []BackupJobProtoBackupSource and assigns it to the Sources field.
func (o *BackupJobProto) SetSources(v []BackupJobProtoBackupSource) {
	o.Sources = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *BackupJobProto) GetStartTime() Time {
	if o == nil || o.StartTime == nil {
		var ret Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetStartTimeOk() (*Time, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *BackupJobProto) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given Time and assigns it to the StartTime field.
func (o *BackupJobProto) SetStartTime(v Time) {
	o.StartTime = &v
}

// GetStubbingPolicy returns the StubbingPolicy field value if set, zero value otherwise.
func (o *BackupJobProto) GetStubbingPolicy() StubbingPolicyProto {
	if o == nil || o.StubbingPolicy == nil {
		var ret StubbingPolicyProto
		return ret
	}
	return *o.StubbingPolicy
}

// GetStubbingPolicyOk returns a tuple with the StubbingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetStubbingPolicyOk() (*StubbingPolicyProto, bool) {
	if o == nil || o.StubbingPolicy == nil {
		return nil, false
	}
	return o.StubbingPolicy, true
}

// HasStubbingPolicy returns a boolean if a field has been set.
func (o *BackupJobProto) HasStubbingPolicy() bool {
	if o != nil && o.StubbingPolicy != nil {
		return true
	}

	return false
}

// SetStubbingPolicy gets a reference to the given StubbingPolicyProto and assigns it to the StubbingPolicy field.
func (o *BackupJobProto) SetStubbingPolicy(v StubbingPolicyProto) {
	o.StubbingPolicy = &v
}

// GetTagVec returns the TagVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetTagVec() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.TagVec
}

// GetTagVecOk returns a tuple with the TagVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetTagVecOk() (*[]string, bool) {
	if o == nil || o.TagVec == nil {
		return nil, false
	}
	return &o.TagVec, true
}

// HasTagVec returns a boolean if a field has been set.
func (o *BackupJobProto) HasTagVec() bool {
	if o != nil && o.TagVec != nil {
		return true
	}

	return false
}

// SetTagVec gets a reference to the given []string and assigns it to the TagVec field.
func (o *BackupJobProto) SetTagVec(v []string) {
	o.TagVec = v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetTimezone() string {
	if o == nil || o.Timezone.Get() == nil {
		var ret string
		return ret
	}
	return *o.Timezone.Get()
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetTimezoneOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Timezone.Get(), o.Timezone.IsSet()
}

// HasTimezone returns a boolean if a field has been set.
func (o *BackupJobProto) HasTimezone() bool {
	if o != nil && o.Timezone.IsSet() {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given NullableString and assigns it to the Timezone field.
func (o *BackupJobProto) SetTimezone(v string) {
	o.Timezone.Set(&v)
}
// SetTimezoneNil sets the value for Timezone to be an explicit nil
func (o *BackupJobProto) SetTimezoneNil() {
	o.Timezone.Set(nil)
}

// UnsetTimezone ensures that no value is present for Timezone, not even an explicit nil
func (o *BackupJobProto) UnsetTimezone() {
	o.Timezone.Unset()
}

// GetTruncateLogs returns the TruncateLogs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetTruncateLogs() bool {
	if o == nil || o.TruncateLogs.Get() == nil {
		var ret bool
		return ret
	}
	return *o.TruncateLogs.Get()
}

// GetTruncateLogsOk returns a tuple with the TruncateLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetTruncateLogsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TruncateLogs.Get(), o.TruncateLogs.IsSet()
}

// HasTruncateLogs returns a boolean if a field has been set.
func (o *BackupJobProto) HasTruncateLogs() bool {
	if o != nil && o.TruncateLogs.IsSet() {
		return true
	}

	return false
}

// SetTruncateLogs gets a reference to the given NullableBool and assigns it to the TruncateLogs field.
func (o *BackupJobProto) SetTruncateLogs(v bool) {
	o.TruncateLogs.Set(&v)
}
// SetTruncateLogsNil sets the value for TruncateLogs to be an explicit nil
func (o *BackupJobProto) SetTruncateLogsNil() {
	o.TruncateLogs.Set(nil)
}

// UnsetTruncateLogs ensures that no value is present for TruncateLogs, not even an explicit nil
func (o *BackupJobProto) UnsetTruncateLogs() {
	o.TruncateLogs.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetType() int32 {
	if o == nil || o.Type.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *BackupJobProto) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableInt32 and assigns it to the Type field.
func (o *BackupJobProto) SetType(v int32) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *BackupJobProto) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *BackupJobProto) UnsetType() {
	o.Type.Unset()
}

// GetUserInfo returns the UserInfo field value if set, zero value otherwise.
func (o *BackupJobProto) GetUserInfo() UserInformation {
	if o == nil || o.UserInfo == nil {
		var ret UserInformation
		return ret
	}
	return *o.UserInfo
}

// GetUserInfoOk returns a tuple with the UserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobProto) GetUserInfoOk() (*UserInformation, bool) {
	if o == nil || o.UserInfo == nil {
		return nil, false
	}
	return o.UserInfo, true
}

// HasUserInfo returns a boolean if a field has been set.
func (o *BackupJobProto) HasUserInfo() bool {
	if o != nil && o.UserInfo != nil {
		return true
	}

	return false
}

// SetUserInfo gets a reference to the given UserInformation and assigns it to the UserInfo field.
func (o *BackupJobProto) SetUserInfo(v UserInformation) {
	o.UserInfo = &v
}

// GetViewBoxId returns the ViewBoxId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupJobProto) GetViewBoxId() int64 {
	if o == nil || o.ViewBoxId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ViewBoxId.Get()
}

// GetViewBoxIdOk returns a tuple with the ViewBoxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupJobProto) GetViewBoxIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewBoxId.Get(), o.ViewBoxId.IsSet()
}

// HasViewBoxId returns a boolean if a field has been set.
func (o *BackupJobProto) HasViewBoxId() bool {
	if o != nil && o.ViewBoxId.IsSet() {
		return true
	}

	return false
}

// SetViewBoxId gets a reference to the given NullableInt64 and assigns it to the ViewBoxId field.
func (o *BackupJobProto) SetViewBoxId(v int64) {
	o.ViewBoxId.Set(&v)
}
// SetViewBoxIdNil sets the value for ViewBoxId to be an explicit nil
func (o *BackupJobProto) SetViewBoxIdNil() {
	o.ViewBoxId.Set(nil)
}

// UnsetViewBoxId ensures that no value is present for ViewBoxId, not even an explicit nil
func (o *BackupJobProto) UnsetViewBoxId() {
	o.ViewBoxId.Unset()
}

func (o BackupJobProto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AbortInExclusionWindow.IsSet() {
		toSerialize["abortInExclusionWindow"] = o.AbortInExclusionWindow.Get()
	}
	if o.AlertingPolicy != nil {
		toSerialize["alertingPolicy"] = o.AlertingPolicy
	}
	if o.BackupQosPrincipal.IsSet() {
		toSerialize["backupQosPrincipal"] = o.BackupQosPrincipal.Get()
	}
	if o.BackupSourceParams != nil {
		toSerialize["backupSourceParams"] = o.BackupSourceParams
	}
	if o.ContinueOnQuiesceFailure.IsSet() {
		toSerialize["continueOnQuiesceFailure"] = o.ContinueOnQuiesceFailure.Get()
	}
	if o.CreateRemoteView.IsSet() {
		toSerialize["createRemoteView"] = o.CreateRemoteView.Get()
	}
	if o.DedupDisabledSourceIdVec != nil {
		toSerialize["dedupDisabledSourceIdVec"] = o.DedupDisabledSourceIdVec
	}
	if o.DeletionStatus.IsSet() {
		toSerialize["deletionStatus"] = o.DeletionStatus.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DrToCloudParams != nil {
		toSerialize["drToCloudParams"] = o.DrToCloudParams
	}
	if o.EhParentSource != nil {
		toSerialize["ehParentSource"] = o.EhParentSource
	}
	if o.EndTimeUsecs.IsSet() {
		toSerialize["endTimeUsecs"] = o.EndTimeUsecs.Get()
	}
	if o.EnvBackupParams != nil {
		toSerialize["envBackupParams"] = o.EnvBackupParams
	}
	if o.ExcludeSources != nil {
		toSerialize["excludeSources"] = o.ExcludeSources
	}
	if o.ExcludeSourcesDEPRECATED != nil {
		toSerialize["excludeSources_DEPRECATED"] = o.ExcludeSourcesDEPRECATED
	}
	if o.ExclusionRanges != nil {
		toSerialize["exclusionRanges"] = o.ExclusionRanges
	}
	if o.FullBackupJobPolicy != nil {
		toSerialize["fullBackupJobPolicy"] = o.FullBackupJobPolicy
	}
	if o.FullBackupSlaTimeMins.IsSet() {
		toSerialize["fullBackupSlaTimeMins"] = o.FullBackupSlaTimeMins.Get()
	}
	if o.GlobalIncludeExclude != nil {
		toSerialize["globalIncludeExclude"] = o.GlobalIncludeExclude
	}
	if o.IndexingPolicy != nil {
		toSerialize["indexingPolicy"] = o.IndexingPolicy
	}
	if o.IsActive.IsSet() {
		toSerialize["isActive"] = o.IsActive.Get()
	}
	if o.IsContinuousSnapshottingEnabled.IsSet() {
		toSerialize["isContinuousSnapshottingEnabled"] = o.IsContinuousSnapshottingEnabled.Get()
	}
	if o.IsDeleted.IsSet() {
		toSerialize["isDeleted"] = o.IsDeleted.Get()
	}
	if o.IsDirectArchiveEnabled.IsSet() {
		toSerialize["isDirectArchiveEnabled"] = o.IsDirectArchiveEnabled.Get()
	}
	if o.IsDirectArchiveNativeFormatEnabled.IsSet() {
		toSerialize["isDirectArchiveNativeFormatEnabled"] = o.IsDirectArchiveNativeFormatEnabled.Get()
	}
	if o.IsPaused.IsSet() {
		toSerialize["isPaused"] = o.IsPaused.Get()
	}
	if o.IsRpoJob.IsSet() {
		toSerialize["isRpoJob"] = o.IsRpoJob.Get()
	}
	if o.JobCreationTimeUsecs.IsSet() {
		toSerialize["jobCreationTimeUsecs"] = o.JobCreationTimeUsecs.Get()
	}
	if o.JobId.IsSet() {
		toSerialize["jobId"] = o.JobId.Get()
	}
	if o.JobPolicy != nil {
		toSerialize["jobPolicy"] = o.JobPolicy
	}
	if o.JobUid != nil {
		toSerialize["jobUid"] = o.JobUid
	}
	if o.LastModificationTimeUsecs.IsSet() {
		toSerialize["lastModificationTimeUsecs"] = o.LastModificationTimeUsecs.Get()
	}
	if o.LastPauseModificationTimeUsecs.IsSet() {
		toSerialize["lastPauseModificationTimeUsecs"] = o.LastPauseModificationTimeUsecs.Get()
	}
	if o.LastPauseReason.IsSet() {
		toSerialize["lastPauseReason"] = o.LastPauseReason.Get()
	}
	if o.LastUpdatedUsername.IsSet() {
		toSerialize["lastUpdatedUsername"] = o.LastUpdatedUsername.Get()
	}
	if o.LeverageSanTransport.IsSet() {
		toSerialize["leverageSanTransport"] = o.LeverageSanTransport.Get()
	}
	if o.LeverageStorageSnapshots.IsSet() {
		toSerialize["leverageStorageSnapshots"] = o.LeverageStorageSnapshots.Get()
	}
	if o.LeverageStorageSnapshotsForHyperflex.IsSet() {
		toSerialize["leverageStorageSnapshotsForHyperflex"] = o.LeverageStorageSnapshotsForHyperflex.Get()
	}
	if o.LogBackupJobPolicy != nil {
		toSerialize["logBackupJobPolicy"] = o.LogBackupJobPolicy
	}
	if o.MaxAllowedSourceSnapshots.IsSet() {
		toSerialize["maxAllowedSourceSnapshots"] = o.MaxAllowedSourceSnapshots.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.NumSnapshotsToKeepOnPrimary.IsSet() {
		toSerialize["numSnapshotsToKeepOnPrimary"] = o.NumSnapshotsToKeepOnPrimary.Get()
	}
	if o.ParentSource != nil {
		toSerialize["parentSource"] = o.ParentSource
	}
	if o.PerformSourceSideDedup.IsSet() {
		toSerialize["performSourceSideDedup"] = o.PerformSourceSideDedup.Get()
	}
	if o.PolicyAppliedTimeMsecs.IsSet() {
		toSerialize["policyAppliedTimeMsecs"] = o.PolicyAppliedTimeMsecs.Get()
	}
	if o.PolicyId.IsSet() {
		toSerialize["policyId"] = o.PolicyId.Get()
	}
	if o.PolicyName.IsSet() {
		toSerialize["policyName"] = o.PolicyName.Get()
	}
	if o.PostBackupScript != nil {
		toSerialize["postBackupScript"] = o.PostBackupScript
	}
	if o.PreScript != nil {
		toSerialize["preScript"] = o.PreScript
	}
	if o.PrimaryJobUid != nil {
		toSerialize["primaryJobUid"] = o.PrimaryJobUid
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	if o.Quiesce.IsSet() {
		toSerialize["quiesce"] = o.Quiesce.Get()
	}
	if o.RemoteJobUids != nil {
		toSerialize["remoteJobUids"] = o.RemoteJobUids
	}
	if o.RemoteViewName.IsSet() {
		toSerialize["remoteViewName"] = o.RemoteViewName.Get()
	}
	if o.RequiredFeatureVec != nil {
		toSerialize["requiredFeatureVec"] = o.RequiredFeatureVec
	}
	if o.SlaTimeMins.IsSet() {
		toSerialize["slaTimeMins"] = o.SlaTimeMins.Get()
	}
	if o.SourceFilters != nil {
		toSerialize["sourceFilters"] = o.SourceFilters
	}
	if o.Sources != nil {
		toSerialize["sources"] = o.Sources
	}
	if o.StartTime != nil {
		toSerialize["startTime"] = o.StartTime
	}
	if o.StubbingPolicy != nil {
		toSerialize["stubbingPolicy"] = o.StubbingPolicy
	}
	if o.TagVec != nil {
		toSerialize["tagVec"] = o.TagVec
	}
	if o.Timezone.IsSet() {
		toSerialize["timezone"] = o.Timezone.Get()
	}
	if o.TruncateLogs.IsSet() {
		toSerialize["truncateLogs"] = o.TruncateLogs.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.UserInfo != nil {
		toSerialize["userInfo"] = o.UserInfo
	}
	if o.ViewBoxId.IsSet() {
		toSerialize["viewBoxId"] = o.ViewBoxId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableBackupJobProto struct {
	value *BackupJobProto
	isSet bool
}

func (v NullableBackupJobProto) Get() *BackupJobProto {
	return v.value
}

func (v *NullableBackupJobProto) Set(val *BackupJobProto) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupJobProto) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupJobProto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupJobProto(val *BackupJobProto) *NullableBackupJobProto {
	return &NullableBackupJobProto{value: val, isSet: true}
}

func (v NullableBackupJobProto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupJobProto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


