/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// package cohesitysdk
package models

import (
	"encoding/json"
	. "github.com/cohesity/go-sdk/cohesitysdk/utils"
)

var _ = NullableBool{}

// ActiveAlertsStats Specifies the active alert statistics details.
type ActiveAlertsStats struct {
	// Specifies the count of active critical Alerts excluding alerts that belong to other bucket.
	NumCriticalAlerts NullableInt64 `json:"numCriticalAlerts,omitempty"`
	// Specifies the count of active critical alerts categories.
	NumCriticalAlertsCategories NullableInt64 `json:"numCriticalAlertsCategories,omitempty"`
	// Specifies the count of active hardware Alerts.
	NumHardwareAlerts NullableInt64 `json:"numHardwareAlerts,omitempty"`
	// Specifies the count of active hardware critical Alerts.
	NumHardwareCriticalAlerts NullableInt64 `json:"numHardwareCriticalAlerts,omitempty"`
	// Specifies the count of active hardware info Alerts.
	NumHardwareInfoAlerts NullableInt64 `json:"numHardwareInfoAlerts,omitempty"`
	// Specifies the count of active hardware warning Alerts.
	NumHardwareWarningAlerts NullableInt64 `json:"numHardwareWarningAlerts,omitempty"`
	// Specifies the count of active info Alerts excluding alerts that belong to other bucket.
	NumInfoAlerts NullableInt64 `json:"numInfoAlerts,omitempty"`
	// Specifies the count of active info alerts categories.
	NumInfoAlertsCategories NullableInt64 `json:"numInfoAlertsCategories,omitempty"`
	// Specifies the count of active Alerts of other bucket
	NumOtherAlerts NullableInt64 `json:"numOtherAlerts,omitempty"`
	// Specifies the count of active other critical Alerts.
	NumOtherCriticalAlerts NullableInt64 `json:"numOtherCriticalAlerts,omitempty"`
	// Specifies the count of active other info Alerts.
	NumOtherInfoAlerts NullableInt64 `json:"numOtherInfoAlerts,omitempty"`
	// Specifies the count of active other warning Alerts.
	NumOtherWarningAlerts NullableInt64 `json:"numOtherWarningAlerts,omitempty"`
	// Specifies the count of active service Alerts.
	NumServiceAlerts NullableInt64 `json:"numServiceAlerts,omitempty"`
	// Specifies the count of active service critical Alerts.
	NumServiceCriticalAlerts NullableInt64 `json:"numServiceCriticalAlerts,omitempty"`
	// Specifies the count of active service info Alerts.
	NumServiceInfoAlerts NullableInt64 `json:"numServiceInfoAlerts,omitempty"`
	// Specifies the count of active service warning Alerts.
	NumServiceWarningAlerts NullableInt64 `json:"numServiceWarningAlerts,omitempty"`
	// Specifies the count of active software Alerts.
	NumSoftwareAlerts NullableInt64 `json:"numSoftwareAlerts,omitempty"`
	// Specifies the count of active software critical Alerts.
	NumSoftwareCriticalAlerts NullableInt64 `json:"numSoftwareCriticalAlerts,omitempty"`
	// Specifies the count of active software info Alerts.
	NumSoftwareInfoAlerts NullableInt64 `json:"numSoftwareInfoAlerts,omitempty"`
	// Specifies the count of active software warning Alerts.
	NumSoftwareWarningAlerts NullableInt64 `json:"numSoftwareWarningAlerts,omitempty"`
	// Specifies the count of active warning Alerts excluding alerts that belong to other bucket.
	NumWarningAlerts NullableInt64 `json:"numWarningAlerts,omitempty"`
	// Specifies the count of active warning alerts categories.
	NumWarningAlertsCategories NullableInt64 `json:"numWarningAlertsCategories,omitempty"`
}

// NewActiveAlertsStats instantiates a new ActiveAlertsStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActiveAlertsStats() *ActiveAlertsStats {
	this := ActiveAlertsStats{}
	return &this
}

// NewActiveAlertsStatsWithDefaults instantiates a new ActiveAlertsStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActiveAlertsStatsWithDefaults() *ActiveAlertsStats {
	this := ActiveAlertsStats{}
	return &this
}

// GetNumCriticalAlerts returns the NumCriticalAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumCriticalAlerts() int64 {
	if o == nil || o.NumCriticalAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumCriticalAlerts.Get()
}

// GetNumCriticalAlertsOk returns a tuple with the NumCriticalAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumCriticalAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumCriticalAlerts.Get(), o.NumCriticalAlerts.IsSet()
}

// HasNumCriticalAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumCriticalAlerts() bool {
	if o != nil && o.NumCriticalAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumCriticalAlerts gets a reference to the given NullableInt64 and assigns it to the NumCriticalAlerts field.
func (o *ActiveAlertsStats) SetNumCriticalAlerts(v int64) {
	o.NumCriticalAlerts.Set(&v)
}
// SetNumCriticalAlertsNil sets the value for NumCriticalAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumCriticalAlertsNil() {
	o.NumCriticalAlerts.Set(nil)
}

// UnsetNumCriticalAlerts ensures that no value is present for NumCriticalAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumCriticalAlerts() {
	o.NumCriticalAlerts.Unset()
}

// GetNumCriticalAlertsCategories returns the NumCriticalAlertsCategories field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumCriticalAlertsCategories() int64 {
	if o == nil || o.NumCriticalAlertsCategories.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumCriticalAlertsCategories.Get()
}

// GetNumCriticalAlertsCategoriesOk returns a tuple with the NumCriticalAlertsCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumCriticalAlertsCategoriesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumCriticalAlertsCategories.Get(), o.NumCriticalAlertsCategories.IsSet()
}

// HasNumCriticalAlertsCategories returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumCriticalAlertsCategories() bool {
	if o != nil && o.NumCriticalAlertsCategories.IsSet() {
		return true
	}

	return false
}

// SetNumCriticalAlertsCategories gets a reference to the given NullableInt64 and assigns it to the NumCriticalAlertsCategories field.
func (o *ActiveAlertsStats) SetNumCriticalAlertsCategories(v int64) {
	o.NumCriticalAlertsCategories.Set(&v)
}
// SetNumCriticalAlertsCategoriesNil sets the value for NumCriticalAlertsCategories to be an explicit nil
func (o *ActiveAlertsStats) SetNumCriticalAlertsCategoriesNil() {
	o.NumCriticalAlertsCategories.Set(nil)
}

// UnsetNumCriticalAlertsCategories ensures that no value is present for NumCriticalAlertsCategories, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumCriticalAlertsCategories() {
	o.NumCriticalAlertsCategories.Unset()
}

// GetNumHardwareAlerts returns the NumHardwareAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumHardwareAlerts() int64 {
	if o == nil || o.NumHardwareAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumHardwareAlerts.Get()
}

// GetNumHardwareAlertsOk returns a tuple with the NumHardwareAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumHardwareAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumHardwareAlerts.Get(), o.NumHardwareAlerts.IsSet()
}

// HasNumHardwareAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumHardwareAlerts() bool {
	if o != nil && o.NumHardwareAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumHardwareAlerts gets a reference to the given NullableInt64 and assigns it to the NumHardwareAlerts field.
func (o *ActiveAlertsStats) SetNumHardwareAlerts(v int64) {
	o.NumHardwareAlerts.Set(&v)
}
// SetNumHardwareAlertsNil sets the value for NumHardwareAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumHardwareAlertsNil() {
	o.NumHardwareAlerts.Set(nil)
}

// UnsetNumHardwareAlerts ensures that no value is present for NumHardwareAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumHardwareAlerts() {
	o.NumHardwareAlerts.Unset()
}

// GetNumHardwareCriticalAlerts returns the NumHardwareCriticalAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumHardwareCriticalAlerts() int64 {
	if o == nil || o.NumHardwareCriticalAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumHardwareCriticalAlerts.Get()
}

// GetNumHardwareCriticalAlertsOk returns a tuple with the NumHardwareCriticalAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumHardwareCriticalAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumHardwareCriticalAlerts.Get(), o.NumHardwareCriticalAlerts.IsSet()
}

// HasNumHardwareCriticalAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumHardwareCriticalAlerts() bool {
	if o != nil && o.NumHardwareCriticalAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumHardwareCriticalAlerts gets a reference to the given NullableInt64 and assigns it to the NumHardwareCriticalAlerts field.
func (o *ActiveAlertsStats) SetNumHardwareCriticalAlerts(v int64) {
	o.NumHardwareCriticalAlerts.Set(&v)
}
// SetNumHardwareCriticalAlertsNil sets the value for NumHardwareCriticalAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumHardwareCriticalAlertsNil() {
	o.NumHardwareCriticalAlerts.Set(nil)
}

// UnsetNumHardwareCriticalAlerts ensures that no value is present for NumHardwareCriticalAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumHardwareCriticalAlerts() {
	o.NumHardwareCriticalAlerts.Unset()
}

// GetNumHardwareInfoAlerts returns the NumHardwareInfoAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumHardwareInfoAlerts() int64 {
	if o == nil || o.NumHardwareInfoAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumHardwareInfoAlerts.Get()
}

// GetNumHardwareInfoAlertsOk returns a tuple with the NumHardwareInfoAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumHardwareInfoAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumHardwareInfoAlerts.Get(), o.NumHardwareInfoAlerts.IsSet()
}

// HasNumHardwareInfoAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumHardwareInfoAlerts() bool {
	if o != nil && o.NumHardwareInfoAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumHardwareInfoAlerts gets a reference to the given NullableInt64 and assigns it to the NumHardwareInfoAlerts field.
func (o *ActiveAlertsStats) SetNumHardwareInfoAlerts(v int64) {
	o.NumHardwareInfoAlerts.Set(&v)
}
// SetNumHardwareInfoAlertsNil sets the value for NumHardwareInfoAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumHardwareInfoAlertsNil() {
	o.NumHardwareInfoAlerts.Set(nil)
}

// UnsetNumHardwareInfoAlerts ensures that no value is present for NumHardwareInfoAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumHardwareInfoAlerts() {
	o.NumHardwareInfoAlerts.Unset()
}

// GetNumHardwareWarningAlerts returns the NumHardwareWarningAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumHardwareWarningAlerts() int64 {
	if o == nil || o.NumHardwareWarningAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumHardwareWarningAlerts.Get()
}

// GetNumHardwareWarningAlertsOk returns a tuple with the NumHardwareWarningAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumHardwareWarningAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumHardwareWarningAlerts.Get(), o.NumHardwareWarningAlerts.IsSet()
}

// HasNumHardwareWarningAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumHardwareWarningAlerts() bool {
	if o != nil && o.NumHardwareWarningAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumHardwareWarningAlerts gets a reference to the given NullableInt64 and assigns it to the NumHardwareWarningAlerts field.
func (o *ActiveAlertsStats) SetNumHardwareWarningAlerts(v int64) {
	o.NumHardwareWarningAlerts.Set(&v)
}
// SetNumHardwareWarningAlertsNil sets the value for NumHardwareWarningAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumHardwareWarningAlertsNil() {
	o.NumHardwareWarningAlerts.Set(nil)
}

// UnsetNumHardwareWarningAlerts ensures that no value is present for NumHardwareWarningAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumHardwareWarningAlerts() {
	o.NumHardwareWarningAlerts.Unset()
}

// GetNumInfoAlerts returns the NumInfoAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumInfoAlerts() int64 {
	if o == nil || o.NumInfoAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumInfoAlerts.Get()
}

// GetNumInfoAlertsOk returns a tuple with the NumInfoAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumInfoAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumInfoAlerts.Get(), o.NumInfoAlerts.IsSet()
}

// HasNumInfoAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumInfoAlerts() bool {
	if o != nil && o.NumInfoAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumInfoAlerts gets a reference to the given NullableInt64 and assigns it to the NumInfoAlerts field.
func (o *ActiveAlertsStats) SetNumInfoAlerts(v int64) {
	o.NumInfoAlerts.Set(&v)
}
// SetNumInfoAlertsNil sets the value for NumInfoAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumInfoAlertsNil() {
	o.NumInfoAlerts.Set(nil)
}

// UnsetNumInfoAlerts ensures that no value is present for NumInfoAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumInfoAlerts() {
	o.NumInfoAlerts.Unset()
}

// GetNumInfoAlertsCategories returns the NumInfoAlertsCategories field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumInfoAlertsCategories() int64 {
	if o == nil || o.NumInfoAlertsCategories.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumInfoAlertsCategories.Get()
}

// GetNumInfoAlertsCategoriesOk returns a tuple with the NumInfoAlertsCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumInfoAlertsCategoriesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumInfoAlertsCategories.Get(), o.NumInfoAlertsCategories.IsSet()
}

// HasNumInfoAlertsCategories returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumInfoAlertsCategories() bool {
	if o != nil && o.NumInfoAlertsCategories.IsSet() {
		return true
	}

	return false
}

// SetNumInfoAlertsCategories gets a reference to the given NullableInt64 and assigns it to the NumInfoAlertsCategories field.
func (o *ActiveAlertsStats) SetNumInfoAlertsCategories(v int64) {
	o.NumInfoAlertsCategories.Set(&v)
}
// SetNumInfoAlertsCategoriesNil sets the value for NumInfoAlertsCategories to be an explicit nil
func (o *ActiveAlertsStats) SetNumInfoAlertsCategoriesNil() {
	o.NumInfoAlertsCategories.Set(nil)
}

// UnsetNumInfoAlertsCategories ensures that no value is present for NumInfoAlertsCategories, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumInfoAlertsCategories() {
	o.NumInfoAlertsCategories.Unset()
}

// GetNumOtherAlerts returns the NumOtherAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumOtherAlerts() int64 {
	if o == nil || o.NumOtherAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumOtherAlerts.Get()
}

// GetNumOtherAlertsOk returns a tuple with the NumOtherAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumOtherAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumOtherAlerts.Get(), o.NumOtherAlerts.IsSet()
}

// HasNumOtherAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumOtherAlerts() bool {
	if o != nil && o.NumOtherAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumOtherAlerts gets a reference to the given NullableInt64 and assigns it to the NumOtherAlerts field.
func (o *ActiveAlertsStats) SetNumOtherAlerts(v int64) {
	o.NumOtherAlerts.Set(&v)
}
// SetNumOtherAlertsNil sets the value for NumOtherAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumOtherAlertsNil() {
	o.NumOtherAlerts.Set(nil)
}

// UnsetNumOtherAlerts ensures that no value is present for NumOtherAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumOtherAlerts() {
	o.NumOtherAlerts.Unset()
}

// GetNumOtherCriticalAlerts returns the NumOtherCriticalAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumOtherCriticalAlerts() int64 {
	if o == nil || o.NumOtherCriticalAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumOtherCriticalAlerts.Get()
}

// GetNumOtherCriticalAlertsOk returns a tuple with the NumOtherCriticalAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumOtherCriticalAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumOtherCriticalAlerts.Get(), o.NumOtherCriticalAlerts.IsSet()
}

// HasNumOtherCriticalAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumOtherCriticalAlerts() bool {
	if o != nil && o.NumOtherCriticalAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumOtherCriticalAlerts gets a reference to the given NullableInt64 and assigns it to the NumOtherCriticalAlerts field.
func (o *ActiveAlertsStats) SetNumOtherCriticalAlerts(v int64) {
	o.NumOtherCriticalAlerts.Set(&v)
}
// SetNumOtherCriticalAlertsNil sets the value for NumOtherCriticalAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumOtherCriticalAlertsNil() {
	o.NumOtherCriticalAlerts.Set(nil)
}

// UnsetNumOtherCriticalAlerts ensures that no value is present for NumOtherCriticalAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumOtherCriticalAlerts() {
	o.NumOtherCriticalAlerts.Unset()
}

// GetNumOtherInfoAlerts returns the NumOtherInfoAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumOtherInfoAlerts() int64 {
	if o == nil || o.NumOtherInfoAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumOtherInfoAlerts.Get()
}

// GetNumOtherInfoAlertsOk returns a tuple with the NumOtherInfoAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumOtherInfoAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumOtherInfoAlerts.Get(), o.NumOtherInfoAlerts.IsSet()
}

// HasNumOtherInfoAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumOtherInfoAlerts() bool {
	if o != nil && o.NumOtherInfoAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumOtherInfoAlerts gets a reference to the given NullableInt64 and assigns it to the NumOtherInfoAlerts field.
func (o *ActiveAlertsStats) SetNumOtherInfoAlerts(v int64) {
	o.NumOtherInfoAlerts.Set(&v)
}
// SetNumOtherInfoAlertsNil sets the value for NumOtherInfoAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumOtherInfoAlertsNil() {
	o.NumOtherInfoAlerts.Set(nil)
}

// UnsetNumOtherInfoAlerts ensures that no value is present for NumOtherInfoAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumOtherInfoAlerts() {
	o.NumOtherInfoAlerts.Unset()
}

// GetNumOtherWarningAlerts returns the NumOtherWarningAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumOtherWarningAlerts() int64 {
	if o == nil || o.NumOtherWarningAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumOtherWarningAlerts.Get()
}

// GetNumOtherWarningAlertsOk returns a tuple with the NumOtherWarningAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumOtherWarningAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumOtherWarningAlerts.Get(), o.NumOtherWarningAlerts.IsSet()
}

// HasNumOtherWarningAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumOtherWarningAlerts() bool {
	if o != nil && o.NumOtherWarningAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumOtherWarningAlerts gets a reference to the given NullableInt64 and assigns it to the NumOtherWarningAlerts field.
func (o *ActiveAlertsStats) SetNumOtherWarningAlerts(v int64) {
	o.NumOtherWarningAlerts.Set(&v)
}
// SetNumOtherWarningAlertsNil sets the value for NumOtherWarningAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumOtherWarningAlertsNil() {
	o.NumOtherWarningAlerts.Set(nil)
}

// UnsetNumOtherWarningAlerts ensures that no value is present for NumOtherWarningAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumOtherWarningAlerts() {
	o.NumOtherWarningAlerts.Unset()
}

// GetNumServiceAlerts returns the NumServiceAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumServiceAlerts() int64 {
	if o == nil || o.NumServiceAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumServiceAlerts.Get()
}

// GetNumServiceAlertsOk returns a tuple with the NumServiceAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumServiceAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumServiceAlerts.Get(), o.NumServiceAlerts.IsSet()
}

// HasNumServiceAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumServiceAlerts() bool {
	if o != nil && o.NumServiceAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumServiceAlerts gets a reference to the given NullableInt64 and assigns it to the NumServiceAlerts field.
func (o *ActiveAlertsStats) SetNumServiceAlerts(v int64) {
	o.NumServiceAlerts.Set(&v)
}
// SetNumServiceAlertsNil sets the value for NumServiceAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumServiceAlertsNil() {
	o.NumServiceAlerts.Set(nil)
}

// UnsetNumServiceAlerts ensures that no value is present for NumServiceAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumServiceAlerts() {
	o.NumServiceAlerts.Unset()
}

// GetNumServiceCriticalAlerts returns the NumServiceCriticalAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumServiceCriticalAlerts() int64 {
	if o == nil || o.NumServiceCriticalAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumServiceCriticalAlerts.Get()
}

// GetNumServiceCriticalAlertsOk returns a tuple with the NumServiceCriticalAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumServiceCriticalAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumServiceCriticalAlerts.Get(), o.NumServiceCriticalAlerts.IsSet()
}

// HasNumServiceCriticalAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumServiceCriticalAlerts() bool {
	if o != nil && o.NumServiceCriticalAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumServiceCriticalAlerts gets a reference to the given NullableInt64 and assigns it to the NumServiceCriticalAlerts field.
func (o *ActiveAlertsStats) SetNumServiceCriticalAlerts(v int64) {
	o.NumServiceCriticalAlerts.Set(&v)
}
// SetNumServiceCriticalAlertsNil sets the value for NumServiceCriticalAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumServiceCriticalAlertsNil() {
	o.NumServiceCriticalAlerts.Set(nil)
}

// UnsetNumServiceCriticalAlerts ensures that no value is present for NumServiceCriticalAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumServiceCriticalAlerts() {
	o.NumServiceCriticalAlerts.Unset()
}

// GetNumServiceInfoAlerts returns the NumServiceInfoAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumServiceInfoAlerts() int64 {
	if o == nil || o.NumServiceInfoAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumServiceInfoAlerts.Get()
}

// GetNumServiceInfoAlertsOk returns a tuple with the NumServiceInfoAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumServiceInfoAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumServiceInfoAlerts.Get(), o.NumServiceInfoAlerts.IsSet()
}

// HasNumServiceInfoAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumServiceInfoAlerts() bool {
	if o != nil && o.NumServiceInfoAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumServiceInfoAlerts gets a reference to the given NullableInt64 and assigns it to the NumServiceInfoAlerts field.
func (o *ActiveAlertsStats) SetNumServiceInfoAlerts(v int64) {
	o.NumServiceInfoAlerts.Set(&v)
}
// SetNumServiceInfoAlertsNil sets the value for NumServiceInfoAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumServiceInfoAlertsNil() {
	o.NumServiceInfoAlerts.Set(nil)
}

// UnsetNumServiceInfoAlerts ensures that no value is present for NumServiceInfoAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumServiceInfoAlerts() {
	o.NumServiceInfoAlerts.Unset()
}

// GetNumServiceWarningAlerts returns the NumServiceWarningAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumServiceWarningAlerts() int64 {
	if o == nil || o.NumServiceWarningAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumServiceWarningAlerts.Get()
}

// GetNumServiceWarningAlertsOk returns a tuple with the NumServiceWarningAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumServiceWarningAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumServiceWarningAlerts.Get(), o.NumServiceWarningAlerts.IsSet()
}

// HasNumServiceWarningAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumServiceWarningAlerts() bool {
	if o != nil && o.NumServiceWarningAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumServiceWarningAlerts gets a reference to the given NullableInt64 and assigns it to the NumServiceWarningAlerts field.
func (o *ActiveAlertsStats) SetNumServiceWarningAlerts(v int64) {
	o.NumServiceWarningAlerts.Set(&v)
}
// SetNumServiceWarningAlertsNil sets the value for NumServiceWarningAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumServiceWarningAlertsNil() {
	o.NumServiceWarningAlerts.Set(nil)
}

// UnsetNumServiceWarningAlerts ensures that no value is present for NumServiceWarningAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumServiceWarningAlerts() {
	o.NumServiceWarningAlerts.Unset()
}

// GetNumSoftwareAlerts returns the NumSoftwareAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumSoftwareAlerts() int64 {
	if o == nil || o.NumSoftwareAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumSoftwareAlerts.Get()
}

// GetNumSoftwareAlertsOk returns a tuple with the NumSoftwareAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumSoftwareAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumSoftwareAlerts.Get(), o.NumSoftwareAlerts.IsSet()
}

// HasNumSoftwareAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumSoftwareAlerts() bool {
	if o != nil && o.NumSoftwareAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumSoftwareAlerts gets a reference to the given NullableInt64 and assigns it to the NumSoftwareAlerts field.
func (o *ActiveAlertsStats) SetNumSoftwareAlerts(v int64) {
	o.NumSoftwareAlerts.Set(&v)
}
// SetNumSoftwareAlertsNil sets the value for NumSoftwareAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumSoftwareAlertsNil() {
	o.NumSoftwareAlerts.Set(nil)
}

// UnsetNumSoftwareAlerts ensures that no value is present for NumSoftwareAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumSoftwareAlerts() {
	o.NumSoftwareAlerts.Unset()
}

// GetNumSoftwareCriticalAlerts returns the NumSoftwareCriticalAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumSoftwareCriticalAlerts() int64 {
	if o == nil || o.NumSoftwareCriticalAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumSoftwareCriticalAlerts.Get()
}

// GetNumSoftwareCriticalAlertsOk returns a tuple with the NumSoftwareCriticalAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumSoftwareCriticalAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumSoftwareCriticalAlerts.Get(), o.NumSoftwareCriticalAlerts.IsSet()
}

// HasNumSoftwareCriticalAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumSoftwareCriticalAlerts() bool {
	if o != nil && o.NumSoftwareCriticalAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumSoftwareCriticalAlerts gets a reference to the given NullableInt64 and assigns it to the NumSoftwareCriticalAlerts field.
func (o *ActiveAlertsStats) SetNumSoftwareCriticalAlerts(v int64) {
	o.NumSoftwareCriticalAlerts.Set(&v)
}
// SetNumSoftwareCriticalAlertsNil sets the value for NumSoftwareCriticalAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumSoftwareCriticalAlertsNil() {
	o.NumSoftwareCriticalAlerts.Set(nil)
}

// UnsetNumSoftwareCriticalAlerts ensures that no value is present for NumSoftwareCriticalAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumSoftwareCriticalAlerts() {
	o.NumSoftwareCriticalAlerts.Unset()
}

// GetNumSoftwareInfoAlerts returns the NumSoftwareInfoAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumSoftwareInfoAlerts() int64 {
	if o == nil || o.NumSoftwareInfoAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumSoftwareInfoAlerts.Get()
}

// GetNumSoftwareInfoAlertsOk returns a tuple with the NumSoftwareInfoAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumSoftwareInfoAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumSoftwareInfoAlerts.Get(), o.NumSoftwareInfoAlerts.IsSet()
}

// HasNumSoftwareInfoAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumSoftwareInfoAlerts() bool {
	if o != nil && o.NumSoftwareInfoAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumSoftwareInfoAlerts gets a reference to the given NullableInt64 and assigns it to the NumSoftwareInfoAlerts field.
func (o *ActiveAlertsStats) SetNumSoftwareInfoAlerts(v int64) {
	o.NumSoftwareInfoAlerts.Set(&v)
}
// SetNumSoftwareInfoAlertsNil sets the value for NumSoftwareInfoAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumSoftwareInfoAlertsNil() {
	o.NumSoftwareInfoAlerts.Set(nil)
}

// UnsetNumSoftwareInfoAlerts ensures that no value is present for NumSoftwareInfoAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumSoftwareInfoAlerts() {
	o.NumSoftwareInfoAlerts.Unset()
}

// GetNumSoftwareWarningAlerts returns the NumSoftwareWarningAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumSoftwareWarningAlerts() int64 {
	if o == nil || o.NumSoftwareWarningAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumSoftwareWarningAlerts.Get()
}

// GetNumSoftwareWarningAlertsOk returns a tuple with the NumSoftwareWarningAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumSoftwareWarningAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumSoftwareWarningAlerts.Get(), o.NumSoftwareWarningAlerts.IsSet()
}

// HasNumSoftwareWarningAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumSoftwareWarningAlerts() bool {
	if o != nil && o.NumSoftwareWarningAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumSoftwareWarningAlerts gets a reference to the given NullableInt64 and assigns it to the NumSoftwareWarningAlerts field.
func (o *ActiveAlertsStats) SetNumSoftwareWarningAlerts(v int64) {
	o.NumSoftwareWarningAlerts.Set(&v)
}
// SetNumSoftwareWarningAlertsNil sets the value for NumSoftwareWarningAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumSoftwareWarningAlertsNil() {
	o.NumSoftwareWarningAlerts.Set(nil)
}

// UnsetNumSoftwareWarningAlerts ensures that no value is present for NumSoftwareWarningAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumSoftwareWarningAlerts() {
	o.NumSoftwareWarningAlerts.Unset()
}

// GetNumWarningAlerts returns the NumWarningAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumWarningAlerts() int64 {
	if o == nil || o.NumWarningAlerts.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumWarningAlerts.Get()
}

// GetNumWarningAlertsOk returns a tuple with the NumWarningAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumWarningAlertsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumWarningAlerts.Get(), o.NumWarningAlerts.IsSet()
}

// HasNumWarningAlerts returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumWarningAlerts() bool {
	if o != nil && o.NumWarningAlerts.IsSet() {
		return true
	}

	return false
}

// SetNumWarningAlerts gets a reference to the given NullableInt64 and assigns it to the NumWarningAlerts field.
func (o *ActiveAlertsStats) SetNumWarningAlerts(v int64) {
	o.NumWarningAlerts.Set(&v)
}
// SetNumWarningAlertsNil sets the value for NumWarningAlerts to be an explicit nil
func (o *ActiveAlertsStats) SetNumWarningAlertsNil() {
	o.NumWarningAlerts.Set(nil)
}

// UnsetNumWarningAlerts ensures that no value is present for NumWarningAlerts, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumWarningAlerts() {
	o.NumWarningAlerts.Unset()
}

// GetNumWarningAlertsCategories returns the NumWarningAlertsCategories field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveAlertsStats) GetNumWarningAlertsCategories() int64 {
	if o == nil || o.NumWarningAlertsCategories.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NumWarningAlertsCategories.Get()
}

// GetNumWarningAlertsCategoriesOk returns a tuple with the NumWarningAlertsCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveAlertsStats) GetNumWarningAlertsCategoriesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumWarningAlertsCategories.Get(), o.NumWarningAlertsCategories.IsSet()
}

// HasNumWarningAlertsCategories returns a boolean if a field has been set.
func (o *ActiveAlertsStats) HasNumWarningAlertsCategories() bool {
	if o != nil && o.NumWarningAlertsCategories.IsSet() {
		return true
	}

	return false
}

// SetNumWarningAlertsCategories gets a reference to the given NullableInt64 and assigns it to the NumWarningAlertsCategories field.
func (o *ActiveAlertsStats) SetNumWarningAlertsCategories(v int64) {
	o.NumWarningAlertsCategories.Set(&v)
}
// SetNumWarningAlertsCategoriesNil sets the value for NumWarningAlertsCategories to be an explicit nil
func (o *ActiveAlertsStats) SetNumWarningAlertsCategoriesNil() {
	o.NumWarningAlertsCategories.Set(nil)
}

// UnsetNumWarningAlertsCategories ensures that no value is present for NumWarningAlertsCategories, not even an explicit nil
func (o *ActiveAlertsStats) UnsetNumWarningAlertsCategories() {
	o.NumWarningAlertsCategories.Unset()
}

func (o ActiveAlertsStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NumCriticalAlerts.IsSet() {
		toSerialize["numCriticalAlerts"] = o.NumCriticalAlerts.Get()
	}
	if o.NumCriticalAlertsCategories.IsSet() {
		toSerialize["numCriticalAlertsCategories"] = o.NumCriticalAlertsCategories.Get()
	}
	if o.NumHardwareAlerts.IsSet() {
		toSerialize["numHardwareAlerts"] = o.NumHardwareAlerts.Get()
	}
	if o.NumHardwareCriticalAlerts.IsSet() {
		toSerialize["numHardwareCriticalAlerts"] = o.NumHardwareCriticalAlerts.Get()
	}
	if o.NumHardwareInfoAlerts.IsSet() {
		toSerialize["numHardwareInfoAlerts"] = o.NumHardwareInfoAlerts.Get()
	}
	if o.NumHardwareWarningAlerts.IsSet() {
		toSerialize["numHardwareWarningAlerts"] = o.NumHardwareWarningAlerts.Get()
	}
	if o.NumInfoAlerts.IsSet() {
		toSerialize["numInfoAlerts"] = o.NumInfoAlerts.Get()
	}
	if o.NumInfoAlertsCategories.IsSet() {
		toSerialize["numInfoAlertsCategories"] = o.NumInfoAlertsCategories.Get()
	}
	if o.NumOtherAlerts.IsSet() {
		toSerialize["numOtherAlerts"] = o.NumOtherAlerts.Get()
	}
	if o.NumOtherCriticalAlerts.IsSet() {
		toSerialize["numOtherCriticalAlerts"] = o.NumOtherCriticalAlerts.Get()
	}
	if o.NumOtherInfoAlerts.IsSet() {
		toSerialize["numOtherInfoAlerts"] = o.NumOtherInfoAlerts.Get()
	}
	if o.NumOtherWarningAlerts.IsSet() {
		toSerialize["numOtherWarningAlerts"] = o.NumOtherWarningAlerts.Get()
	}
	if o.NumServiceAlerts.IsSet() {
		toSerialize["numServiceAlerts"] = o.NumServiceAlerts.Get()
	}
	if o.NumServiceCriticalAlerts.IsSet() {
		toSerialize["numServiceCriticalAlerts"] = o.NumServiceCriticalAlerts.Get()
	}
	if o.NumServiceInfoAlerts.IsSet() {
		toSerialize["numServiceInfoAlerts"] = o.NumServiceInfoAlerts.Get()
	}
	if o.NumServiceWarningAlerts.IsSet() {
		toSerialize["numServiceWarningAlerts"] = o.NumServiceWarningAlerts.Get()
	}
	if o.NumSoftwareAlerts.IsSet() {
		toSerialize["numSoftwareAlerts"] = o.NumSoftwareAlerts.Get()
	}
	if o.NumSoftwareCriticalAlerts.IsSet() {
		toSerialize["numSoftwareCriticalAlerts"] = o.NumSoftwareCriticalAlerts.Get()
	}
	if o.NumSoftwareInfoAlerts.IsSet() {
		toSerialize["numSoftwareInfoAlerts"] = o.NumSoftwareInfoAlerts.Get()
	}
	if o.NumSoftwareWarningAlerts.IsSet() {
		toSerialize["numSoftwareWarningAlerts"] = o.NumSoftwareWarningAlerts.Get()
	}
	if o.NumWarningAlerts.IsSet() {
		toSerialize["numWarningAlerts"] = o.NumWarningAlerts.Get()
	}
	if o.NumWarningAlertsCategories.IsSet() {
		toSerialize["numWarningAlertsCategories"] = o.NumWarningAlertsCategories.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableActiveAlertsStats struct {
	value *ActiveAlertsStats
	isSet bool
}

func (v NullableActiveAlertsStats) Get() *ActiveAlertsStats {
	return v.value
}

func (v *NullableActiveAlertsStats) Set(val *ActiveAlertsStats) {
	v.value = val
	v.isSet = true
}

func (v NullableActiveAlertsStats) IsSet() bool {
	return v.isSet
}

func (v *NullableActiveAlertsStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActiveAlertsStats(val *ActiveAlertsStats) *NullableActiveAlertsStats {
	return &NullableActiveAlertsStats{value: val, isSet: true}
}

func (v NullableActiveAlertsStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActiveAlertsStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


