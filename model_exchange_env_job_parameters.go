/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ExchangeEnvJobParameters Specifies job parameters applicable for the Exchange Protection Jobs.
type ExchangeEnvJobParameters struct {
	// Specifies whether the backups should be copy-only.
	BackupsCopyOnly NullableBool `json:"backupsCopyOnly,omitempty"`
}

// NewExchangeEnvJobParameters instantiates a new ExchangeEnvJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExchangeEnvJobParameters() *ExchangeEnvJobParameters {
	this := ExchangeEnvJobParameters{}
	return &this
}

// NewExchangeEnvJobParametersWithDefaults instantiates a new ExchangeEnvJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExchangeEnvJobParametersWithDefaults() *ExchangeEnvJobParameters {
	this := ExchangeEnvJobParameters{}
	return &this
}

// GetBackupsCopyOnly returns the BackupsCopyOnly field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExchangeEnvJobParameters) GetBackupsCopyOnly() bool {
	if o == nil || o.BackupsCopyOnly.Get() == nil {
		var ret bool
		return ret
	}
	return *o.BackupsCopyOnly.Get()
}

// GetBackupsCopyOnlyOk returns a tuple with the BackupsCopyOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExchangeEnvJobParameters) GetBackupsCopyOnlyOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BackupsCopyOnly.Get(), o.BackupsCopyOnly.IsSet()
}

// HasBackupsCopyOnly returns a boolean if a field has been set.
func (o *ExchangeEnvJobParameters) HasBackupsCopyOnly() bool {
	if o != nil && o.BackupsCopyOnly.IsSet() {
		return true
	}

	return false
}

// SetBackupsCopyOnly gets a reference to the given NullableBool and assigns it to the BackupsCopyOnly field.
func (o *ExchangeEnvJobParameters) SetBackupsCopyOnly(v bool) {
	o.BackupsCopyOnly.Set(&v)
}
// SetBackupsCopyOnlyNil sets the value for BackupsCopyOnly to be an explicit nil
func (o *ExchangeEnvJobParameters) SetBackupsCopyOnlyNil() {
	o.BackupsCopyOnly.Set(nil)
}

// UnsetBackupsCopyOnly ensures that no value is present for BackupsCopyOnly, not even an explicit nil
func (o *ExchangeEnvJobParameters) UnsetBackupsCopyOnly() {
	o.BackupsCopyOnly.Unset()
}

func (o ExchangeEnvJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BackupsCopyOnly.IsSet() {
		toSerialize["backupsCopyOnly"] = o.BackupsCopyOnly.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableExchangeEnvJobParameters struct {
	value *ExchangeEnvJobParameters
	isSet bool
}

func (v NullableExchangeEnvJobParameters) Get() *ExchangeEnvJobParameters {
	return v.value
}

func (v *NullableExchangeEnvJobParameters) Set(val *ExchangeEnvJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableExchangeEnvJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableExchangeEnvJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExchangeEnvJobParameters(val *ExchangeEnvJobParameters) *NullableExchangeEnvJobParameters {
	return &NullableExchangeEnvJobParameters{value: val, isSet: true}
}

func (v NullableExchangeEnvJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExchangeEnvJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


