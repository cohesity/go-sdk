/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// CassandraRecoverJobParams Contains any additional cassandra environment specific params for the recover job.
type CassandraRecoverJobParams struct {
	CassandraAdditionalInfo *CassandraAdditionalParams `json:"cassandraAdditionalInfo,omitempty"`
	// Cassandra source version
	CassandraSourceVersion NullableString `json:"cassandraSourceVersion,omitempty"`
	// The data centers selected for recovery.
	SelectedDataCenterVec []string `json:"selectedDataCenterVec,omitempty"`
	// Cassandra staging directory
	StagingDirectoryVec []string `json:"stagingDirectoryVec,omitempty"`
	// A suffix that is to be applied to all recovered entities TODO (faizan.khan) : Remove this.
	Suffix NullableString `json:"suffix,omitempty"`
}

// NewCassandraRecoverJobParams instantiates a new CassandraRecoverJobParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCassandraRecoverJobParams() *CassandraRecoverJobParams {
	this := CassandraRecoverJobParams{}
	return &this
}

// NewCassandraRecoverJobParamsWithDefaults instantiates a new CassandraRecoverJobParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCassandraRecoverJobParamsWithDefaults() *CassandraRecoverJobParams {
	this := CassandraRecoverJobParams{}
	return &this
}

// GetCassandraAdditionalInfo returns the CassandraAdditionalInfo field value if set, zero value otherwise.
func (o *CassandraRecoverJobParams) GetCassandraAdditionalInfo() CassandraAdditionalParams {
	if o == nil || o.CassandraAdditionalInfo == nil {
		var ret CassandraAdditionalParams
		return ret
	}
	return *o.CassandraAdditionalInfo
}

// GetCassandraAdditionalInfoOk returns a tuple with the CassandraAdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CassandraRecoverJobParams) GetCassandraAdditionalInfoOk() (*CassandraAdditionalParams, bool) {
	if o == nil || o.CassandraAdditionalInfo == nil {
		return nil, false
	}
	return o.CassandraAdditionalInfo, true
}

// HasCassandraAdditionalInfo returns a boolean if a field has been set.
func (o *CassandraRecoverJobParams) HasCassandraAdditionalInfo() bool {
	if o != nil && o.CassandraAdditionalInfo != nil {
		return true
	}

	return false
}

// SetCassandraAdditionalInfo gets a reference to the given CassandraAdditionalParams and assigns it to the CassandraAdditionalInfo field.
func (o *CassandraRecoverJobParams) SetCassandraAdditionalInfo(v CassandraAdditionalParams) {
	o.CassandraAdditionalInfo = &v
}

// GetCassandraSourceVersion returns the CassandraSourceVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraRecoverJobParams) GetCassandraSourceVersion() string {
	if o == nil || o.CassandraSourceVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.CassandraSourceVersion.Get()
}

// GetCassandraSourceVersionOk returns a tuple with the CassandraSourceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraRecoverJobParams) GetCassandraSourceVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CassandraSourceVersion.Get(), o.CassandraSourceVersion.IsSet()
}

// HasCassandraSourceVersion returns a boolean if a field has been set.
func (o *CassandraRecoverJobParams) HasCassandraSourceVersion() bool {
	if o != nil && o.CassandraSourceVersion.IsSet() {
		return true
	}

	return false
}

// SetCassandraSourceVersion gets a reference to the given NullableString and assigns it to the CassandraSourceVersion field.
func (o *CassandraRecoverJobParams) SetCassandraSourceVersion(v string) {
	o.CassandraSourceVersion.Set(&v)
}
// SetCassandraSourceVersionNil sets the value for CassandraSourceVersion to be an explicit nil
func (o *CassandraRecoverJobParams) SetCassandraSourceVersionNil() {
	o.CassandraSourceVersion.Set(nil)
}

// UnsetCassandraSourceVersion ensures that no value is present for CassandraSourceVersion, not even an explicit nil
func (o *CassandraRecoverJobParams) UnsetCassandraSourceVersion() {
	o.CassandraSourceVersion.Unset()
}

// GetSelectedDataCenterVec returns the SelectedDataCenterVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraRecoverJobParams) GetSelectedDataCenterVec() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.SelectedDataCenterVec
}

// GetSelectedDataCenterVecOk returns a tuple with the SelectedDataCenterVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraRecoverJobParams) GetSelectedDataCenterVecOk() (*[]string, bool) {
	if o == nil || o.SelectedDataCenterVec == nil {
		return nil, false
	}
	return &o.SelectedDataCenterVec, true
}

// HasSelectedDataCenterVec returns a boolean if a field has been set.
func (o *CassandraRecoverJobParams) HasSelectedDataCenterVec() bool {
	if o != nil && o.SelectedDataCenterVec != nil {
		return true
	}

	return false
}

// SetSelectedDataCenterVec gets a reference to the given []string and assigns it to the SelectedDataCenterVec field.
func (o *CassandraRecoverJobParams) SetSelectedDataCenterVec(v []string) {
	o.SelectedDataCenterVec = v
}

// GetStagingDirectoryVec returns the StagingDirectoryVec field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraRecoverJobParams) GetStagingDirectoryVec() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.StagingDirectoryVec
}

// GetStagingDirectoryVecOk returns a tuple with the StagingDirectoryVec field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraRecoverJobParams) GetStagingDirectoryVecOk() (*[]string, bool) {
	if o == nil || o.StagingDirectoryVec == nil {
		return nil, false
	}
	return &o.StagingDirectoryVec, true
}

// HasStagingDirectoryVec returns a boolean if a field has been set.
func (o *CassandraRecoverJobParams) HasStagingDirectoryVec() bool {
	if o != nil && o.StagingDirectoryVec != nil {
		return true
	}

	return false
}

// SetStagingDirectoryVec gets a reference to the given []string and assigns it to the StagingDirectoryVec field.
func (o *CassandraRecoverJobParams) SetStagingDirectoryVec(v []string) {
	o.StagingDirectoryVec = v
}

// GetSuffix returns the Suffix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CassandraRecoverJobParams) GetSuffix() string {
	if o == nil || o.Suffix.Get() == nil {
		var ret string
		return ret
	}
	return *o.Suffix.Get()
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CassandraRecoverJobParams) GetSuffixOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Suffix.Get(), o.Suffix.IsSet()
}

// HasSuffix returns a boolean if a field has been set.
func (o *CassandraRecoverJobParams) HasSuffix() bool {
	if o != nil && o.Suffix.IsSet() {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given NullableString and assigns it to the Suffix field.
func (o *CassandraRecoverJobParams) SetSuffix(v string) {
	o.Suffix.Set(&v)
}
// SetSuffixNil sets the value for Suffix to be an explicit nil
func (o *CassandraRecoverJobParams) SetSuffixNil() {
	o.Suffix.Set(nil)
}

// UnsetSuffix ensures that no value is present for Suffix, not even an explicit nil
func (o *CassandraRecoverJobParams) UnsetSuffix() {
	o.Suffix.Unset()
}

func (o CassandraRecoverJobParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CassandraAdditionalInfo != nil {
		toSerialize["cassandraAdditionalInfo"] = o.CassandraAdditionalInfo
	}
	if o.CassandraSourceVersion.IsSet() {
		toSerialize["cassandraSourceVersion"] = o.CassandraSourceVersion.Get()
	}
	if o.SelectedDataCenterVec != nil {
		toSerialize["selectedDataCenterVec"] = o.SelectedDataCenterVec
	}
	if o.StagingDirectoryVec != nil {
		toSerialize["stagingDirectoryVec"] = o.StagingDirectoryVec
	}
	if o.Suffix.IsSet() {
		toSerialize["suffix"] = o.Suffix.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCassandraRecoverJobParams struct {
	value *CassandraRecoverJobParams
	isSet bool
}

func (v NullableCassandraRecoverJobParams) Get() *CassandraRecoverJobParams {
	return v.value
}

func (v *NullableCassandraRecoverJobParams) Set(val *CassandraRecoverJobParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCassandraRecoverJobParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCassandraRecoverJobParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCassandraRecoverJobParams(val *CassandraRecoverJobParams) *NullableCassandraRecoverJobParams {
	return &NullableCassandraRecoverJobParams{value: val, isSet: true}
}

func (v NullableCassandraRecoverJobParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCassandraRecoverJobParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


