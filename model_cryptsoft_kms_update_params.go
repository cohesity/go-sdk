/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// CryptsoftKmsUpdateParams struct for CryptsoftKmsUpdateParams
type CryptsoftKmsUpdateParams struct {
	// Specifies the CA certificate in PEM format.
	CaCertificate NullableString `json:"caCertificate,omitempty"`
	// Specifies the client certificate. It is in PEM format.
	ClientCertificate NullableString `json:"clientCertificate,omitempty"`
	// Specifies the client private key.
	ClientKey NullableString `json:"clientKey,omitempty"`
	// Specifies protocol version used to communicate with the KMS.
	KmipProtocolVersion NullableString `json:"kmipProtocolVersion,omitempty"`
}

// NewCryptsoftKmsUpdateParams instantiates a new CryptsoftKmsUpdateParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCryptsoftKmsUpdateParams() *CryptsoftKmsUpdateParams {
	this := CryptsoftKmsUpdateParams{}
	return &this
}

// NewCryptsoftKmsUpdateParamsWithDefaults instantiates a new CryptsoftKmsUpdateParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCryptsoftKmsUpdateParamsWithDefaults() *CryptsoftKmsUpdateParams {
	this := CryptsoftKmsUpdateParams{}
	return &this
}

// GetCaCertificate returns the CaCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CryptsoftKmsUpdateParams) GetCaCertificate() string {
	if o == nil || o.CaCertificate.Get() == nil {
		var ret string
		return ret
	}
	return *o.CaCertificate.Get()
}

// GetCaCertificateOk returns a tuple with the CaCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CryptsoftKmsUpdateParams) GetCaCertificateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CaCertificate.Get(), o.CaCertificate.IsSet()
}

// HasCaCertificate returns a boolean if a field has been set.
func (o *CryptsoftKmsUpdateParams) HasCaCertificate() bool {
	if o != nil && o.CaCertificate.IsSet() {
		return true
	}

	return false
}

// SetCaCertificate gets a reference to the given NullableString and assigns it to the CaCertificate field.
func (o *CryptsoftKmsUpdateParams) SetCaCertificate(v string) {
	o.CaCertificate.Set(&v)
}
// SetCaCertificateNil sets the value for CaCertificate to be an explicit nil
func (o *CryptsoftKmsUpdateParams) SetCaCertificateNil() {
	o.CaCertificate.Set(nil)
}

// UnsetCaCertificate ensures that no value is present for CaCertificate, not even an explicit nil
func (o *CryptsoftKmsUpdateParams) UnsetCaCertificate() {
	o.CaCertificate.Unset()
}

// GetClientCertificate returns the ClientCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CryptsoftKmsUpdateParams) GetClientCertificate() string {
	if o == nil || o.ClientCertificate.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClientCertificate.Get()
}

// GetClientCertificateOk returns a tuple with the ClientCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CryptsoftKmsUpdateParams) GetClientCertificateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClientCertificate.Get(), o.ClientCertificate.IsSet()
}

// HasClientCertificate returns a boolean if a field has been set.
func (o *CryptsoftKmsUpdateParams) HasClientCertificate() bool {
	if o != nil && o.ClientCertificate.IsSet() {
		return true
	}

	return false
}

// SetClientCertificate gets a reference to the given NullableString and assigns it to the ClientCertificate field.
func (o *CryptsoftKmsUpdateParams) SetClientCertificate(v string) {
	o.ClientCertificate.Set(&v)
}
// SetClientCertificateNil sets the value for ClientCertificate to be an explicit nil
func (o *CryptsoftKmsUpdateParams) SetClientCertificateNil() {
	o.ClientCertificate.Set(nil)
}

// UnsetClientCertificate ensures that no value is present for ClientCertificate, not even an explicit nil
func (o *CryptsoftKmsUpdateParams) UnsetClientCertificate() {
	o.ClientCertificate.Unset()
}

// GetClientKey returns the ClientKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CryptsoftKmsUpdateParams) GetClientKey() string {
	if o == nil || o.ClientKey.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClientKey.Get()
}

// GetClientKeyOk returns a tuple with the ClientKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CryptsoftKmsUpdateParams) GetClientKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClientKey.Get(), o.ClientKey.IsSet()
}

// HasClientKey returns a boolean if a field has been set.
func (o *CryptsoftKmsUpdateParams) HasClientKey() bool {
	if o != nil && o.ClientKey.IsSet() {
		return true
	}

	return false
}

// SetClientKey gets a reference to the given NullableString and assigns it to the ClientKey field.
func (o *CryptsoftKmsUpdateParams) SetClientKey(v string) {
	o.ClientKey.Set(&v)
}
// SetClientKeyNil sets the value for ClientKey to be an explicit nil
func (o *CryptsoftKmsUpdateParams) SetClientKeyNil() {
	o.ClientKey.Set(nil)
}

// UnsetClientKey ensures that no value is present for ClientKey, not even an explicit nil
func (o *CryptsoftKmsUpdateParams) UnsetClientKey() {
	o.ClientKey.Unset()
}

// GetKmipProtocolVersion returns the KmipProtocolVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CryptsoftKmsUpdateParams) GetKmipProtocolVersion() string {
	if o == nil || o.KmipProtocolVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.KmipProtocolVersion.Get()
}

// GetKmipProtocolVersionOk returns a tuple with the KmipProtocolVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CryptsoftKmsUpdateParams) GetKmipProtocolVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.KmipProtocolVersion.Get(), o.KmipProtocolVersion.IsSet()
}

// HasKmipProtocolVersion returns a boolean if a field has been set.
func (o *CryptsoftKmsUpdateParams) HasKmipProtocolVersion() bool {
	if o != nil && o.KmipProtocolVersion.IsSet() {
		return true
	}

	return false
}

// SetKmipProtocolVersion gets a reference to the given NullableString and assigns it to the KmipProtocolVersion field.
func (o *CryptsoftKmsUpdateParams) SetKmipProtocolVersion(v string) {
	o.KmipProtocolVersion.Set(&v)
}
// SetKmipProtocolVersionNil sets the value for KmipProtocolVersion to be an explicit nil
func (o *CryptsoftKmsUpdateParams) SetKmipProtocolVersionNil() {
	o.KmipProtocolVersion.Set(nil)
}

// UnsetKmipProtocolVersion ensures that no value is present for KmipProtocolVersion, not even an explicit nil
func (o *CryptsoftKmsUpdateParams) UnsetKmipProtocolVersion() {
	o.KmipProtocolVersion.Unset()
}

func (o CryptsoftKmsUpdateParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CaCertificate.IsSet() {
		toSerialize["caCertificate"] = o.CaCertificate.Get()
	}
	if o.ClientCertificate.IsSet() {
		toSerialize["clientCertificate"] = o.ClientCertificate.Get()
	}
	if o.ClientKey.IsSet() {
		toSerialize["clientKey"] = o.ClientKey.Get()
	}
	if o.KmipProtocolVersion.IsSet() {
		toSerialize["kmipProtocolVersion"] = o.KmipProtocolVersion.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCryptsoftKmsUpdateParams struct {
	value *CryptsoftKmsUpdateParams
	isSet bool
}

func (v NullableCryptsoftKmsUpdateParams) Get() *CryptsoftKmsUpdateParams {
	return v.value
}

func (v *NullableCryptsoftKmsUpdateParams) Set(val *CryptsoftKmsUpdateParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCryptsoftKmsUpdateParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCryptsoftKmsUpdateParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCryptsoftKmsUpdateParams(val *CryptsoftKmsUpdateParams) *NullableCryptsoftKmsUpdateParams {
	return &NullableCryptsoftKmsUpdateParams{value: val, isSet: true}
}

func (v NullableCryptsoftKmsUpdateParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCryptsoftKmsUpdateParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


