/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// FleetParams Specifies various resources when deploying a VM to Fleet instances.
type FleetParams struct {
	FleetNetworkParams *FleetNetworkParams `json:"fleetNetworkParams,omitempty"`
	// Specifies the subnet type of the fleet. Specifies the type of the fleet subnet. 'kCluster' implies same subnet as of Cluster, valid only for Cloud Edition cluster. 'kSourceVM' implies same subnet as of source vm. 'kCustom' implies the custome subnet.
	FleetSubnetType NullableString `json:"fleetSubnetType,omitempty"`
	// Specifies the tag information for the fleet.
	FleetTags []FleetTag `json:"fleetTags,omitempty"`
}

// NewFleetParams instantiates a new FleetParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetParams() *FleetParams {
	this := FleetParams{}
	return &this
}

// NewFleetParamsWithDefaults instantiates a new FleetParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetParamsWithDefaults() *FleetParams {
	this := FleetParams{}
	return &this
}

// GetFleetNetworkParams returns the FleetNetworkParams field value if set, zero value otherwise.
func (o *FleetParams) GetFleetNetworkParams() FleetNetworkParams {
	if o == nil || o.FleetNetworkParams == nil {
		var ret FleetNetworkParams
		return ret
	}
	return *o.FleetNetworkParams
}

// GetFleetNetworkParamsOk returns a tuple with the FleetNetworkParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetParams) GetFleetNetworkParamsOk() (*FleetNetworkParams, bool) {
	if o == nil || o.FleetNetworkParams == nil {
		return nil, false
	}
	return o.FleetNetworkParams, true
}

// HasFleetNetworkParams returns a boolean if a field has been set.
func (o *FleetParams) HasFleetNetworkParams() bool {
	if o != nil && o.FleetNetworkParams != nil {
		return true
	}

	return false
}

// SetFleetNetworkParams gets a reference to the given FleetNetworkParams and assigns it to the FleetNetworkParams field.
func (o *FleetParams) SetFleetNetworkParams(v FleetNetworkParams) {
	o.FleetNetworkParams = &v
}

// GetFleetSubnetType returns the FleetSubnetType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FleetParams) GetFleetSubnetType() string {
	if o == nil || o.FleetSubnetType.Get() == nil {
		var ret string
		return ret
	}
	return *o.FleetSubnetType.Get()
}

// GetFleetSubnetTypeOk returns a tuple with the FleetSubnetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FleetParams) GetFleetSubnetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FleetSubnetType.Get(), o.FleetSubnetType.IsSet()
}

// HasFleetSubnetType returns a boolean if a field has been set.
func (o *FleetParams) HasFleetSubnetType() bool {
	if o != nil && o.FleetSubnetType.IsSet() {
		return true
	}

	return false
}

// SetFleetSubnetType gets a reference to the given NullableString and assigns it to the FleetSubnetType field.
func (o *FleetParams) SetFleetSubnetType(v string) {
	o.FleetSubnetType.Set(&v)
}
// SetFleetSubnetTypeNil sets the value for FleetSubnetType to be an explicit nil
func (o *FleetParams) SetFleetSubnetTypeNil() {
	o.FleetSubnetType.Set(nil)
}

// UnsetFleetSubnetType ensures that no value is present for FleetSubnetType, not even an explicit nil
func (o *FleetParams) UnsetFleetSubnetType() {
	o.FleetSubnetType.Unset()
}

// GetFleetTags returns the FleetTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FleetParams) GetFleetTags() []FleetTag {
	if o == nil  {
		var ret []FleetTag
		return ret
	}
	return o.FleetTags
}

// GetFleetTagsOk returns a tuple with the FleetTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FleetParams) GetFleetTagsOk() (*[]FleetTag, bool) {
	if o == nil || o.FleetTags == nil {
		return nil, false
	}
	return &o.FleetTags, true
}

// HasFleetTags returns a boolean if a field has been set.
func (o *FleetParams) HasFleetTags() bool {
	if o != nil && o.FleetTags != nil {
		return true
	}

	return false
}

// SetFleetTags gets a reference to the given []FleetTag and assigns it to the FleetTags field.
func (o *FleetParams) SetFleetTags(v []FleetTag) {
	o.FleetTags = v
}

func (o FleetParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FleetNetworkParams != nil {
		toSerialize["fleetNetworkParams"] = o.FleetNetworkParams
	}
	if o.FleetSubnetType.IsSet() {
		toSerialize["fleetSubnetType"] = o.FleetSubnetType.Get()
	}
	if o.FleetTags != nil {
		toSerialize["fleetTags"] = o.FleetTags
	}
	return json.Marshal(toSerialize)
}

type NullableFleetParams struct {
	value *FleetParams
	isSet bool
}

func (v NullableFleetParams) Get() *FleetParams {
	return v.value
}

func (v *NullableFleetParams) Set(val *FleetParams) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetParams) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetParams(val *FleetParams) *NullableFleetParams {
	return &NullableFleetParams{value: val, isSet: true}
}

func (v NullableFleetParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


