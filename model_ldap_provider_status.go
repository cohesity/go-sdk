/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// LdapProviderStatus LDAP provider status struct.
type LdapProviderStatus struct {
	// Specifies the connection status message of an LDAP provider.
	StatusMessage NullableString `json:"statusMessage,omitempty"`
}

// NewLdapProviderStatus instantiates a new LdapProviderStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLdapProviderStatus() *LdapProviderStatus {
	this := LdapProviderStatus{}
	return &this
}

// NewLdapProviderStatusWithDefaults instantiates a new LdapProviderStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLdapProviderStatusWithDefaults() *LdapProviderStatus {
	this := LdapProviderStatus{}
	return &this
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LdapProviderStatus) GetStatusMessage() string {
	if o == nil || o.StatusMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.StatusMessage.Get()
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LdapProviderStatus) GetStatusMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StatusMessage.Get(), o.StatusMessage.IsSet()
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *LdapProviderStatus) HasStatusMessage() bool {
	if o != nil && o.StatusMessage.IsSet() {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given NullableString and assigns it to the StatusMessage field.
func (o *LdapProviderStatus) SetStatusMessage(v string) {
	o.StatusMessage.Set(&v)
}
// SetStatusMessageNil sets the value for StatusMessage to be an explicit nil
func (o *LdapProviderStatus) SetStatusMessageNil() {
	o.StatusMessage.Set(nil)
}

// UnsetStatusMessage ensures that no value is present for StatusMessage, not even an explicit nil
func (o *LdapProviderStatus) UnsetStatusMessage() {
	o.StatusMessage.Unset()
}

func (o LdapProviderStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StatusMessage.IsSet() {
		toSerialize["statusMessage"] = o.StatusMessage.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableLdapProviderStatus struct {
	value *LdapProviderStatus
	isSet bool
}

func (v NullableLdapProviderStatus) Get() *LdapProviderStatus {
	return v.value
}

func (v *NullableLdapProviderStatus) Set(val *LdapProviderStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableLdapProviderStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableLdapProviderStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLdapProviderStatus(val *LdapProviderStatus) *NullableLdapProviderStatus {
	return &NullableLdapProviderStatus{value: val, isSet: true}
}

func (v NullableLdapProviderStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLdapProviderStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


