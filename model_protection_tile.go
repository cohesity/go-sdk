/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ProtectionTile Protection information and statistics.
type ProtectionTile struct {
	LastDayArchival *ProtectionStats `json:"lastDayArchival,omitempty"`
	LastDayBackup *ProtectionStats `json:"lastDayBackup,omitempty"`
	LastDayReplicationIn *ProtectionStats `json:"lastDayReplicationIn,omitempty"`
	LastDayReplicationOut *ProtectionStats `json:"lastDayReplicationOut,omitempty"`
}

// NewProtectionTile instantiates a new ProtectionTile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionTile() *ProtectionTile {
	this := ProtectionTile{}
	return &this
}

// NewProtectionTileWithDefaults instantiates a new ProtectionTile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionTileWithDefaults() *ProtectionTile {
	this := ProtectionTile{}
	return &this
}

// GetLastDayArchival returns the LastDayArchival field value if set, zero value otherwise.
func (o *ProtectionTile) GetLastDayArchival() ProtectionStats {
	if o == nil || o.LastDayArchival == nil {
		var ret ProtectionStats
		return ret
	}
	return *o.LastDayArchival
}

// GetLastDayArchivalOk returns a tuple with the LastDayArchival field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionTile) GetLastDayArchivalOk() (*ProtectionStats, bool) {
	if o == nil || o.LastDayArchival == nil {
		return nil, false
	}
	return o.LastDayArchival, true
}

// HasLastDayArchival returns a boolean if a field has been set.
func (o *ProtectionTile) HasLastDayArchival() bool {
	if o != nil && o.LastDayArchival != nil {
		return true
	}

	return false
}

// SetLastDayArchival gets a reference to the given ProtectionStats and assigns it to the LastDayArchival field.
func (o *ProtectionTile) SetLastDayArchival(v ProtectionStats) {
	o.LastDayArchival = &v
}

// GetLastDayBackup returns the LastDayBackup field value if set, zero value otherwise.
func (o *ProtectionTile) GetLastDayBackup() ProtectionStats {
	if o == nil || o.LastDayBackup == nil {
		var ret ProtectionStats
		return ret
	}
	return *o.LastDayBackup
}

// GetLastDayBackupOk returns a tuple with the LastDayBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionTile) GetLastDayBackupOk() (*ProtectionStats, bool) {
	if o == nil || o.LastDayBackup == nil {
		return nil, false
	}
	return o.LastDayBackup, true
}

// HasLastDayBackup returns a boolean if a field has been set.
func (o *ProtectionTile) HasLastDayBackup() bool {
	if o != nil && o.LastDayBackup != nil {
		return true
	}

	return false
}

// SetLastDayBackup gets a reference to the given ProtectionStats and assigns it to the LastDayBackup field.
func (o *ProtectionTile) SetLastDayBackup(v ProtectionStats) {
	o.LastDayBackup = &v
}

// GetLastDayReplicationIn returns the LastDayReplicationIn field value if set, zero value otherwise.
func (o *ProtectionTile) GetLastDayReplicationIn() ProtectionStats {
	if o == nil || o.LastDayReplicationIn == nil {
		var ret ProtectionStats
		return ret
	}
	return *o.LastDayReplicationIn
}

// GetLastDayReplicationInOk returns a tuple with the LastDayReplicationIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionTile) GetLastDayReplicationInOk() (*ProtectionStats, bool) {
	if o == nil || o.LastDayReplicationIn == nil {
		return nil, false
	}
	return o.LastDayReplicationIn, true
}

// HasLastDayReplicationIn returns a boolean if a field has been set.
func (o *ProtectionTile) HasLastDayReplicationIn() bool {
	if o != nil && o.LastDayReplicationIn != nil {
		return true
	}

	return false
}

// SetLastDayReplicationIn gets a reference to the given ProtectionStats and assigns it to the LastDayReplicationIn field.
func (o *ProtectionTile) SetLastDayReplicationIn(v ProtectionStats) {
	o.LastDayReplicationIn = &v
}

// GetLastDayReplicationOut returns the LastDayReplicationOut field value if set, zero value otherwise.
func (o *ProtectionTile) GetLastDayReplicationOut() ProtectionStats {
	if o == nil || o.LastDayReplicationOut == nil {
		var ret ProtectionStats
		return ret
	}
	return *o.LastDayReplicationOut
}

// GetLastDayReplicationOutOk returns a tuple with the LastDayReplicationOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionTile) GetLastDayReplicationOutOk() (*ProtectionStats, bool) {
	if o == nil || o.LastDayReplicationOut == nil {
		return nil, false
	}
	return o.LastDayReplicationOut, true
}

// HasLastDayReplicationOut returns a boolean if a field has been set.
func (o *ProtectionTile) HasLastDayReplicationOut() bool {
	if o != nil && o.LastDayReplicationOut != nil {
		return true
	}

	return false
}

// SetLastDayReplicationOut gets a reference to the given ProtectionStats and assigns it to the LastDayReplicationOut field.
func (o *ProtectionTile) SetLastDayReplicationOut(v ProtectionStats) {
	o.LastDayReplicationOut = &v
}

func (o ProtectionTile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LastDayArchival != nil {
		toSerialize["lastDayArchival"] = o.LastDayArchival
	}
	if o.LastDayBackup != nil {
		toSerialize["lastDayBackup"] = o.LastDayBackup
	}
	if o.LastDayReplicationIn != nil {
		toSerialize["lastDayReplicationIn"] = o.LastDayReplicationIn
	}
	if o.LastDayReplicationOut != nil {
		toSerialize["lastDayReplicationOut"] = o.LastDayReplicationOut
	}
	return json.Marshal(toSerialize)
}

type NullableProtectionTile struct {
	value *ProtectionTile
	isSet bool
}

func (v NullableProtectionTile) Get() *ProtectionTile {
	return v.value
}

func (v *NullableProtectionTile) Set(val *ProtectionTile) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionTile) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionTile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionTile(val *ProtectionTile) *NullableProtectionTile {
	return &NullableProtectionTile{value: val, isSet: true}
}

func (v NullableProtectionTile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionTile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


