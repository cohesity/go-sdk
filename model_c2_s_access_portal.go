/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// C2SAccessPortal Specifies information required to connect to CAP to get AWS credentials. C2SAccessPortal(CAP) is AWS commercial cloud service access portal.
type C2SAccessPortal struct {
	// Name of the agency.
	Agency NullableString `json:"agency,omitempty"`
	// The base url of C2S CAP server.
	BaseUrl NullableString `json:"baseUrl,omitempty"`
	// Encrypted password of the client private key.
	ClientCertificatePassword NullableString `json:"clientCertificatePassword,omitempty"`
	// Name of the mission.
	Mission NullableString `json:"mission,omitempty"`
	// Role type.
	Role NullableString `json:"role,omitempty"`
}

// NewC2SAccessPortal instantiates a new C2SAccessPortal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC2SAccessPortal() *C2SAccessPortal {
	this := C2SAccessPortal{}
	return &this
}

// NewC2SAccessPortalWithDefaults instantiates a new C2SAccessPortal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC2SAccessPortalWithDefaults() *C2SAccessPortal {
	this := C2SAccessPortal{}
	return &this
}

// GetAgency returns the Agency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C2SAccessPortal) GetAgency() string {
	if o == nil || o.Agency.Get() == nil {
		var ret string
		return ret
	}
	return *o.Agency.Get()
}

// GetAgencyOk returns a tuple with the Agency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C2SAccessPortal) GetAgencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Agency.Get(), o.Agency.IsSet()
}

// HasAgency returns a boolean if a field has been set.
func (o *C2SAccessPortal) HasAgency() bool {
	if o != nil && o.Agency.IsSet() {
		return true
	}

	return false
}

// SetAgency gets a reference to the given NullableString and assigns it to the Agency field.
func (o *C2SAccessPortal) SetAgency(v string) {
	o.Agency.Set(&v)
}
// SetAgencyNil sets the value for Agency to be an explicit nil
func (o *C2SAccessPortal) SetAgencyNil() {
	o.Agency.Set(nil)
}

// UnsetAgency ensures that no value is present for Agency, not even an explicit nil
func (o *C2SAccessPortal) UnsetAgency() {
	o.Agency.Unset()
}

// GetBaseUrl returns the BaseUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C2SAccessPortal) GetBaseUrl() string {
	if o == nil || o.BaseUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.BaseUrl.Get()
}

// GetBaseUrlOk returns a tuple with the BaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C2SAccessPortal) GetBaseUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BaseUrl.Get(), o.BaseUrl.IsSet()
}

// HasBaseUrl returns a boolean if a field has been set.
func (o *C2SAccessPortal) HasBaseUrl() bool {
	if o != nil && o.BaseUrl.IsSet() {
		return true
	}

	return false
}

// SetBaseUrl gets a reference to the given NullableString and assigns it to the BaseUrl field.
func (o *C2SAccessPortal) SetBaseUrl(v string) {
	o.BaseUrl.Set(&v)
}
// SetBaseUrlNil sets the value for BaseUrl to be an explicit nil
func (o *C2SAccessPortal) SetBaseUrlNil() {
	o.BaseUrl.Set(nil)
}

// UnsetBaseUrl ensures that no value is present for BaseUrl, not even an explicit nil
func (o *C2SAccessPortal) UnsetBaseUrl() {
	o.BaseUrl.Unset()
}

// GetClientCertificatePassword returns the ClientCertificatePassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C2SAccessPortal) GetClientCertificatePassword() string {
	if o == nil || o.ClientCertificatePassword.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClientCertificatePassword.Get()
}

// GetClientCertificatePasswordOk returns a tuple with the ClientCertificatePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C2SAccessPortal) GetClientCertificatePasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClientCertificatePassword.Get(), o.ClientCertificatePassword.IsSet()
}

// HasClientCertificatePassword returns a boolean if a field has been set.
func (o *C2SAccessPortal) HasClientCertificatePassword() bool {
	if o != nil && o.ClientCertificatePassword.IsSet() {
		return true
	}

	return false
}

// SetClientCertificatePassword gets a reference to the given NullableString and assigns it to the ClientCertificatePassword field.
func (o *C2SAccessPortal) SetClientCertificatePassword(v string) {
	o.ClientCertificatePassword.Set(&v)
}
// SetClientCertificatePasswordNil sets the value for ClientCertificatePassword to be an explicit nil
func (o *C2SAccessPortal) SetClientCertificatePasswordNil() {
	o.ClientCertificatePassword.Set(nil)
}

// UnsetClientCertificatePassword ensures that no value is present for ClientCertificatePassword, not even an explicit nil
func (o *C2SAccessPortal) UnsetClientCertificatePassword() {
	o.ClientCertificatePassword.Unset()
}

// GetMission returns the Mission field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C2SAccessPortal) GetMission() string {
	if o == nil || o.Mission.Get() == nil {
		var ret string
		return ret
	}
	return *o.Mission.Get()
}

// GetMissionOk returns a tuple with the Mission field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C2SAccessPortal) GetMissionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Mission.Get(), o.Mission.IsSet()
}

// HasMission returns a boolean if a field has been set.
func (o *C2SAccessPortal) HasMission() bool {
	if o != nil && o.Mission.IsSet() {
		return true
	}

	return false
}

// SetMission gets a reference to the given NullableString and assigns it to the Mission field.
func (o *C2SAccessPortal) SetMission(v string) {
	o.Mission.Set(&v)
}
// SetMissionNil sets the value for Mission to be an explicit nil
func (o *C2SAccessPortal) SetMissionNil() {
	o.Mission.Set(nil)
}

// UnsetMission ensures that no value is present for Mission, not even an explicit nil
func (o *C2SAccessPortal) UnsetMission() {
	o.Mission.Unset()
}

// GetRole returns the Role field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C2SAccessPortal) GetRole() string {
	if o == nil || o.Role.Get() == nil {
		var ret string
		return ret
	}
	return *o.Role.Get()
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C2SAccessPortal) GetRoleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Role.Get(), o.Role.IsSet()
}

// HasRole returns a boolean if a field has been set.
func (o *C2SAccessPortal) HasRole() bool {
	if o != nil && o.Role.IsSet() {
		return true
	}

	return false
}

// SetRole gets a reference to the given NullableString and assigns it to the Role field.
func (o *C2SAccessPortal) SetRole(v string) {
	o.Role.Set(&v)
}
// SetRoleNil sets the value for Role to be an explicit nil
func (o *C2SAccessPortal) SetRoleNil() {
	o.Role.Set(nil)
}

// UnsetRole ensures that no value is present for Role, not even an explicit nil
func (o *C2SAccessPortal) UnsetRole() {
	o.Role.Unset()
}

func (o C2SAccessPortal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Agency.IsSet() {
		toSerialize["agency"] = o.Agency.Get()
	}
	if o.BaseUrl.IsSet() {
		toSerialize["baseUrl"] = o.BaseUrl.Get()
	}
	if o.ClientCertificatePassword.IsSet() {
		toSerialize["clientCertificatePassword"] = o.ClientCertificatePassword.Get()
	}
	if o.Mission.IsSet() {
		toSerialize["mission"] = o.Mission.Get()
	}
	if o.Role.IsSet() {
		toSerialize["role"] = o.Role.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableC2SAccessPortal struct {
	value *C2SAccessPortal
	isSet bool
}

func (v NullableC2SAccessPortal) Get() *C2SAccessPortal {
	return v.value
}

func (v *NullableC2SAccessPortal) Set(val *C2SAccessPortal) {
	v.value = val
	v.isSet = true
}

func (v NullableC2SAccessPortal) IsSet() bool {
	return v.isSet
}

func (v *NullableC2SAccessPortal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC2SAccessPortal(val *C2SAccessPortal) *NullableC2SAccessPortal {
	return &NullableC2SAccessPortal{value: val, isSet: true}
}

func (v NullableC2SAccessPortal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC2SAccessPortal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


