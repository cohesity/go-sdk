/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// KvmProtectionSource Specifies a Protection Source in KVM environment.
type KvmProtectionSource struct {
	// Specifies a message when the agent cannot be reached.
	AgentError NullableString `json:"agentError,omitempty"`
	// Specifies the ID of the Agent with which this KVM entity is associated when the entity represents a Delegate host or KVM host.
	AgentId NullableInt64 `json:"agentId,omitempty"`
	// Specifies the cluster ID for 'kCluster' objects.
	ClusterId NullableString `json:"clusterId,omitempty"`
	// Specifies the ID of the 'kDatacenter' objects.
	DatacenterId NullableString `json:"datacenterId,omitempty"`
	// Specifies a description about the Protection Source.
	Description NullableString `json:"description,omitempty"`
	// Specifies the name of the KVM entity.
	Name NullableString `json:"name,omitempty"`
	// Specifies the network ID to which Vnic is attached.
	NetworkId NullableString `json:"networkId,omitempty"`
	// Specifies the type of KVM Protection Source entities such as 'kDatacenter', 'kCluster', 'kVirtualMachine', etc. Specifies the type of an KVM source entity. 'kOVirtManager' indicates the root entity registered with Cohesity cluster. 'kStandaloneHost' indicates a host registered with Cohesity cluster. 'kDatacenter' indicates a KVM datacenter managed by the OVirt manager. 'kCluster' indicates a KVM cluster managed by the OVirt manager. 'kHost' indicates a host within the KVM environment. 'kVirtualMachine' indicates a virtual machine in the KVM enironment. 'kNetwork' represents a network used by the virtual machine entity. 'kStorageDomain' represents a storage domain in the KVM environment. 'kVNicProfile' represents a VNic profile.
	Type NullableString `json:"type,omitempty"`
	// Specifies the UUID of the Object. This is unique within the KVM environment.
	Uuid NullableString `json:"uuid,omitempty"`
}

// NewKvmProtectionSource instantiates a new KvmProtectionSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKvmProtectionSource() *KvmProtectionSource {
	this := KvmProtectionSource{}
	return &this
}

// NewKvmProtectionSourceWithDefaults instantiates a new KvmProtectionSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKvmProtectionSourceWithDefaults() *KvmProtectionSource {
	this := KvmProtectionSource{}
	return &this
}

// GetAgentError returns the AgentError field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KvmProtectionSource) GetAgentError() string {
	if o == nil || o.AgentError.Get() == nil {
		var ret string
		return ret
	}
	return *o.AgentError.Get()
}

// GetAgentErrorOk returns a tuple with the AgentError field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KvmProtectionSource) GetAgentErrorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AgentError.Get(), o.AgentError.IsSet()
}

// HasAgentError returns a boolean if a field has been set.
func (o *KvmProtectionSource) HasAgentError() bool {
	if o != nil && o.AgentError.IsSet() {
		return true
	}

	return false
}

// SetAgentError gets a reference to the given NullableString and assigns it to the AgentError field.
func (o *KvmProtectionSource) SetAgentError(v string) {
	o.AgentError.Set(&v)
}
// SetAgentErrorNil sets the value for AgentError to be an explicit nil
func (o *KvmProtectionSource) SetAgentErrorNil() {
	o.AgentError.Set(nil)
}

// UnsetAgentError ensures that no value is present for AgentError, not even an explicit nil
func (o *KvmProtectionSource) UnsetAgentError() {
	o.AgentError.Unset()
}

// GetAgentId returns the AgentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KvmProtectionSource) GetAgentId() int64 {
	if o == nil || o.AgentId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AgentId.Get()
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KvmProtectionSource) GetAgentIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AgentId.Get(), o.AgentId.IsSet()
}

// HasAgentId returns a boolean if a field has been set.
func (o *KvmProtectionSource) HasAgentId() bool {
	if o != nil && o.AgentId.IsSet() {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given NullableInt64 and assigns it to the AgentId field.
func (o *KvmProtectionSource) SetAgentId(v int64) {
	o.AgentId.Set(&v)
}
// SetAgentIdNil sets the value for AgentId to be an explicit nil
func (o *KvmProtectionSource) SetAgentIdNil() {
	o.AgentId.Set(nil)
}

// UnsetAgentId ensures that no value is present for AgentId, not even an explicit nil
func (o *KvmProtectionSource) UnsetAgentId() {
	o.AgentId.Unset()
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KvmProtectionSource) GetClusterId() string {
	if o == nil || o.ClusterId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClusterId.Get()
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KvmProtectionSource) GetClusterIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterId.Get(), o.ClusterId.IsSet()
}

// HasClusterId returns a boolean if a field has been set.
func (o *KvmProtectionSource) HasClusterId() bool {
	if o != nil && o.ClusterId.IsSet() {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given NullableString and assigns it to the ClusterId field.
func (o *KvmProtectionSource) SetClusterId(v string) {
	o.ClusterId.Set(&v)
}
// SetClusterIdNil sets the value for ClusterId to be an explicit nil
func (o *KvmProtectionSource) SetClusterIdNil() {
	o.ClusterId.Set(nil)
}

// UnsetClusterId ensures that no value is present for ClusterId, not even an explicit nil
func (o *KvmProtectionSource) UnsetClusterId() {
	o.ClusterId.Unset()
}

// GetDatacenterId returns the DatacenterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KvmProtectionSource) GetDatacenterId() string {
	if o == nil || o.DatacenterId.Get() == nil {
		var ret string
		return ret
	}
	return *o.DatacenterId.Get()
}

// GetDatacenterIdOk returns a tuple with the DatacenterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KvmProtectionSource) GetDatacenterIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DatacenterId.Get(), o.DatacenterId.IsSet()
}

// HasDatacenterId returns a boolean if a field has been set.
func (o *KvmProtectionSource) HasDatacenterId() bool {
	if o != nil && o.DatacenterId.IsSet() {
		return true
	}

	return false
}

// SetDatacenterId gets a reference to the given NullableString and assigns it to the DatacenterId field.
func (o *KvmProtectionSource) SetDatacenterId(v string) {
	o.DatacenterId.Set(&v)
}
// SetDatacenterIdNil sets the value for DatacenterId to be an explicit nil
func (o *KvmProtectionSource) SetDatacenterIdNil() {
	o.DatacenterId.Set(nil)
}

// UnsetDatacenterId ensures that no value is present for DatacenterId, not even an explicit nil
func (o *KvmProtectionSource) UnsetDatacenterId() {
	o.DatacenterId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KvmProtectionSource) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KvmProtectionSource) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *KvmProtectionSource) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *KvmProtectionSource) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *KvmProtectionSource) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *KvmProtectionSource) UnsetDescription() {
	o.Description.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KvmProtectionSource) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KvmProtectionSource) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *KvmProtectionSource) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *KvmProtectionSource) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *KvmProtectionSource) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *KvmProtectionSource) UnsetName() {
	o.Name.Unset()
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KvmProtectionSource) GetNetworkId() string {
	if o == nil || o.NetworkId.Get() == nil {
		var ret string
		return ret
	}
	return *o.NetworkId.Get()
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KvmProtectionSource) GetNetworkIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkId.Get(), o.NetworkId.IsSet()
}

// HasNetworkId returns a boolean if a field has been set.
func (o *KvmProtectionSource) HasNetworkId() bool {
	if o != nil && o.NetworkId.IsSet() {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given NullableString and assigns it to the NetworkId field.
func (o *KvmProtectionSource) SetNetworkId(v string) {
	o.NetworkId.Set(&v)
}
// SetNetworkIdNil sets the value for NetworkId to be an explicit nil
func (o *KvmProtectionSource) SetNetworkIdNil() {
	o.NetworkId.Set(nil)
}

// UnsetNetworkId ensures that no value is present for NetworkId, not even an explicit nil
func (o *KvmProtectionSource) UnsetNetworkId() {
	o.NetworkId.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KvmProtectionSource) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KvmProtectionSource) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *KvmProtectionSource) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *KvmProtectionSource) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *KvmProtectionSource) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *KvmProtectionSource) UnsetType() {
	o.Type.Unset()
}

// GetUuid returns the Uuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KvmProtectionSource) GetUuid() string {
	if o == nil || o.Uuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uuid.Get()
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KvmProtectionSource) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Uuid.Get(), o.Uuid.IsSet()
}

// HasUuid returns a boolean if a field has been set.
func (o *KvmProtectionSource) HasUuid() bool {
	if o != nil && o.Uuid.IsSet() {
		return true
	}

	return false
}

// SetUuid gets a reference to the given NullableString and assigns it to the Uuid field.
func (o *KvmProtectionSource) SetUuid(v string) {
	o.Uuid.Set(&v)
}
// SetUuidNil sets the value for Uuid to be an explicit nil
func (o *KvmProtectionSource) SetUuidNil() {
	o.Uuid.Set(nil)
}

// UnsetUuid ensures that no value is present for Uuid, not even an explicit nil
func (o *KvmProtectionSource) UnsetUuid() {
	o.Uuid.Unset()
}

func (o KvmProtectionSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AgentError.IsSet() {
		toSerialize["agentError"] = o.AgentError.Get()
	}
	if o.AgentId.IsSet() {
		toSerialize["agentId"] = o.AgentId.Get()
	}
	if o.ClusterId.IsSet() {
		toSerialize["clusterId"] = o.ClusterId.Get()
	}
	if o.DatacenterId.IsSet() {
		toSerialize["datacenterId"] = o.DatacenterId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.NetworkId.IsSet() {
		toSerialize["networkId"] = o.NetworkId.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.Uuid.IsSet() {
		toSerialize["uuid"] = o.Uuid.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableKvmProtectionSource struct {
	value *KvmProtectionSource
	isSet bool
}

func (v NullableKvmProtectionSource) Get() *KvmProtectionSource {
	return v.value
}

func (v *NullableKvmProtectionSource) Set(val *KvmProtectionSource) {
	v.value = val
	v.isSet = true
}

func (v NullableKvmProtectionSource) IsSet() bool {
	return v.isSet
}

func (v *NullableKvmProtectionSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKvmProtectionSource(val *KvmProtectionSource) *NullableKvmProtectionSource {
	return &NullableKvmProtectionSource{value: val, isSet: true}
}

func (v NullableKvmProtectionSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKvmProtectionSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


