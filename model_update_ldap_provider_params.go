/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// UpdateLdapProviderParams Specifies the params to update the LDAP provider info.
type UpdateLdapProviderParams struct {
	// Specifies the LDAP provider id which is mapped to an Active Directory
	LdapProviderId NullableInt64 `json:"ldapProviderId,omitempty"`
}

// NewUpdateLdapProviderParams instantiates a new UpdateLdapProviderParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLdapProviderParams() *UpdateLdapProviderParams {
	this := UpdateLdapProviderParams{}
	return &this
}

// NewUpdateLdapProviderParamsWithDefaults instantiates a new UpdateLdapProviderParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLdapProviderParamsWithDefaults() *UpdateLdapProviderParams {
	this := UpdateLdapProviderParams{}
	return &this
}

// GetLdapProviderId returns the LdapProviderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateLdapProviderParams) GetLdapProviderId() int64 {
	if o == nil || o.LdapProviderId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.LdapProviderId.Get()
}

// GetLdapProviderIdOk returns a tuple with the LdapProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateLdapProviderParams) GetLdapProviderIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LdapProviderId.Get(), o.LdapProviderId.IsSet()
}

// HasLdapProviderId returns a boolean if a field has been set.
func (o *UpdateLdapProviderParams) HasLdapProviderId() bool {
	if o != nil && o.LdapProviderId.IsSet() {
		return true
	}

	return false
}

// SetLdapProviderId gets a reference to the given NullableInt64 and assigns it to the LdapProviderId field.
func (o *UpdateLdapProviderParams) SetLdapProviderId(v int64) {
	o.LdapProviderId.Set(&v)
}
// SetLdapProviderIdNil sets the value for LdapProviderId to be an explicit nil
func (o *UpdateLdapProviderParams) SetLdapProviderIdNil() {
	o.LdapProviderId.Set(nil)
}

// UnsetLdapProviderId ensures that no value is present for LdapProviderId, not even an explicit nil
func (o *UpdateLdapProviderParams) UnsetLdapProviderId() {
	o.LdapProviderId.Unset()
}

func (o UpdateLdapProviderParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LdapProviderId.IsSet() {
		toSerialize["ldapProviderId"] = o.LdapProviderId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateLdapProviderParams struct {
	value *UpdateLdapProviderParams
	isSet bool
}

func (v NullableUpdateLdapProviderParams) Get() *UpdateLdapProviderParams {
	return v.value
}

func (v *NullableUpdateLdapProviderParams) Set(val *UpdateLdapProviderParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLdapProviderParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLdapProviderParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLdapProviderParams(val *UpdateLdapProviderParams) *NullableUpdateLdapProviderParams {
	return &NullableUpdateLdapProviderParams{value: val, isSet: true}
}

func (v NullableUpdateLdapProviderParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLdapProviderParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


