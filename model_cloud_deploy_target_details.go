/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// CloudDeployTargetDetails Message that specifies the details about CloudDeploy target where backup snapshots may be converted and stored.
type CloudDeployTargetDetails struct {
	AwsParams *AwsParams `json:"awsParams,omitempty"`
	AzureParams *AzureParams `json:"azureParams,omitempty"`
	GcpParams *GcpParams `json:"gcpParams,omitempty"`
	// Entity corresponding to the cloud deploy target.  Specifies the id field inside the EntityProto.
	Id NullableInt64 `json:"id,omitempty"`
	// Specifies the inner object's name or a human-readable string made off the salient attributes. This is only plumbed when Entity objects are exposed to Iris BE or to Yoda.
	Name NullableString `json:"name,omitempty"`
	// Specifies the type of the CloudDeploy target. 'kAzure' indicates that Azure as a cloud deploy target type. 'kAWS' indicates that AWS as a cloud deploy target type. 'kGCP' indicates that GCP as a cloud deploy target type.
	Type NullableString `json:"type,omitempty"`
}

// NewCloudDeployTargetDetails instantiates a new CloudDeployTargetDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudDeployTargetDetails() *CloudDeployTargetDetails {
	this := CloudDeployTargetDetails{}
	return &this
}

// NewCloudDeployTargetDetailsWithDefaults instantiates a new CloudDeployTargetDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudDeployTargetDetailsWithDefaults() *CloudDeployTargetDetails {
	this := CloudDeployTargetDetails{}
	return &this
}

// GetAwsParams returns the AwsParams field value if set, zero value otherwise.
func (o *CloudDeployTargetDetails) GetAwsParams() AwsParams {
	if o == nil || o.AwsParams == nil {
		var ret AwsParams
		return ret
	}
	return *o.AwsParams
}

// GetAwsParamsOk returns a tuple with the AwsParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudDeployTargetDetails) GetAwsParamsOk() (*AwsParams, bool) {
	if o == nil || o.AwsParams == nil {
		return nil, false
	}
	return o.AwsParams, true
}

// HasAwsParams returns a boolean if a field has been set.
func (o *CloudDeployTargetDetails) HasAwsParams() bool {
	if o != nil && o.AwsParams != nil {
		return true
	}

	return false
}

// SetAwsParams gets a reference to the given AwsParams and assigns it to the AwsParams field.
func (o *CloudDeployTargetDetails) SetAwsParams(v AwsParams) {
	o.AwsParams = &v
}

// GetAzureParams returns the AzureParams field value if set, zero value otherwise.
func (o *CloudDeployTargetDetails) GetAzureParams() AzureParams {
	if o == nil || o.AzureParams == nil {
		var ret AzureParams
		return ret
	}
	return *o.AzureParams
}

// GetAzureParamsOk returns a tuple with the AzureParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudDeployTargetDetails) GetAzureParamsOk() (*AzureParams, bool) {
	if o == nil || o.AzureParams == nil {
		return nil, false
	}
	return o.AzureParams, true
}

// HasAzureParams returns a boolean if a field has been set.
func (o *CloudDeployTargetDetails) HasAzureParams() bool {
	if o != nil && o.AzureParams != nil {
		return true
	}

	return false
}

// SetAzureParams gets a reference to the given AzureParams and assigns it to the AzureParams field.
func (o *CloudDeployTargetDetails) SetAzureParams(v AzureParams) {
	o.AzureParams = &v
}

// GetGcpParams returns the GcpParams field value if set, zero value otherwise.
func (o *CloudDeployTargetDetails) GetGcpParams() GcpParams {
	if o == nil || o.GcpParams == nil {
		var ret GcpParams
		return ret
	}
	return *o.GcpParams
}

// GetGcpParamsOk returns a tuple with the GcpParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudDeployTargetDetails) GetGcpParamsOk() (*GcpParams, bool) {
	if o == nil || o.GcpParams == nil {
		return nil, false
	}
	return o.GcpParams, true
}

// HasGcpParams returns a boolean if a field has been set.
func (o *CloudDeployTargetDetails) HasGcpParams() bool {
	if o != nil && o.GcpParams != nil {
		return true
	}

	return false
}

// SetGcpParams gets a reference to the given GcpParams and assigns it to the GcpParams field.
func (o *CloudDeployTargetDetails) SetGcpParams(v GcpParams) {
	o.GcpParams = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudDeployTargetDetails) GetId() int64 {
	if o == nil || o.Id.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudDeployTargetDetails) GetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CloudDeployTargetDetails) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt64 and assigns it to the Id field.
func (o *CloudDeployTargetDetails) SetId(v int64) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CloudDeployTargetDetails) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CloudDeployTargetDetails) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudDeployTargetDetails) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudDeployTargetDetails) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CloudDeployTargetDetails) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CloudDeployTargetDetails) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CloudDeployTargetDetails) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CloudDeployTargetDetails) UnsetName() {
	o.Name.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudDeployTargetDetails) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudDeployTargetDetails) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *CloudDeployTargetDetails) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *CloudDeployTargetDetails) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *CloudDeployTargetDetails) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *CloudDeployTargetDetails) UnsetType() {
	o.Type.Unset()
}

func (o CloudDeployTargetDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AwsParams != nil {
		toSerialize["awsParams"] = o.AwsParams
	}
	if o.AzureParams != nil {
		toSerialize["azureParams"] = o.AzureParams
	}
	if o.GcpParams != nil {
		toSerialize["gcpParams"] = o.GcpParams
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCloudDeployTargetDetails struct {
	value *CloudDeployTargetDetails
	isSet bool
}

func (v NullableCloudDeployTargetDetails) Get() *CloudDeployTargetDetails {
	return v.value
}

func (v *NullableCloudDeployTargetDetails) Set(val *CloudDeployTargetDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudDeployTargetDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudDeployTargetDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudDeployTargetDetails(val *CloudDeployTargetDetails) *NullableCloudDeployTargetDetails {
	return &NullableCloudDeployTargetDetails{value: val, isSet: true}
}

func (v NullableCloudDeployTargetDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudDeployTargetDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


