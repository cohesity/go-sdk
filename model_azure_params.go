/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// AzureParams Specifies various resources when converting and deploying a VM to Azure.
type AzureParams struct {
	// Specifies the disk type used by the data. 'kPremiumSSD' is disk type backed by SSDs, delivers high performance, low latency disk support for VMs running I/O intensive workloads. 'kStandardSSD' implies disk type that offers more consistent performance and reliability than HDD. 'kStandardHDD' implies disk type backed by HDDs, delivers cost effective storage.
	DataDiskType NullableString `json:"dataDiskType,omitempty"`
	// Specifies Type of VM (e.g. small, medium, large) when cloning the VM in Azure.
	InstanceId NullableInt64 `json:"instanceId,omitempty"`
	// Specifies id of the resource group for the selected virtual network.
	NetworkResourceGroupId NullableInt64 `json:"networkResourceGroupId,omitempty"`
	// Specifies the disk type used by the OS. 'kPremiumSSD' is disk type backed by SSDs, delivers high performance, low latency disk support for VMs running I/O intensive workloads. 'kStandardSSD' implies disk type that offers more consistent performance and reliability than HDD. 'kStandardHDD' implies disk type backed by HDDs, delivers cost effective storage.
	OsDiskType NullableString `json:"osDiskType,omitempty"`
	// Specifies id of the Azure resource group. Its value is globally unique within Azure.
	ResourceGroup NullableInt64 `json:"resourceGroup,omitempty"`
	// Specifies id of the storage account that will contain the storage container within which we will create the blob that will become the VHD disk for the cloned VM.
	StorageAccount NullableInt64 `json:"storageAccount,omitempty"`
	// Specifies id of the storage container within the above storage account.
	StorageContainer NullableInt64 `json:"storageContainer,omitempty"`
	// Specifies id of the resource group for the selected storage account.
	StorageResourceGroupId NullableInt64 `json:"storageResourceGroupId,omitempty"`
	// Specifies Id of the subnet within the above virtual network.
	SubnetId NullableInt64 `json:"subnetId,omitempty"`
	// Specifies the resource group where temporary VM needs to be created.
	TempVmResourceGroupId NullableInt64 `json:"tempVmResourceGroupId,omitempty"`
	// Specifies the Storage account where temporary VM needs to be created.
	TempVmStorageAccountId NullableInt64 `json:"tempVmStorageAccountId,omitempty"`
	// Specifies the Storage container where temporary VM needs to be created.
	TempVmStorageContainerId NullableInt64 `json:"tempVmStorageContainerId,omitempty"`
	// Specifies the Subnet where temporary VM needs to be created.
	TempVmSubnetId NullableInt64 `json:"tempVmSubnetId,omitempty"`
	// Specifies the Virtual network where temporary VM needs to be created.
	TempVmVirtualNetworkId NullableInt64 `json:"tempVmVirtualNetworkId,omitempty"`
	// Specifies Id of the Virtual Network.
	VirtualNetworkId NullableInt64 `json:"virtualNetworkId,omitempty"`
}

// NewAzureParams instantiates a new AzureParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureParams() *AzureParams {
	this := AzureParams{}
	return &this
}

// NewAzureParamsWithDefaults instantiates a new AzureParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureParamsWithDefaults() *AzureParams {
	this := AzureParams{}
	return &this
}

// GetDataDiskType returns the DataDiskType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureParams) GetDataDiskType() string {
	if o == nil || o.DataDiskType.Get() == nil {
		var ret string
		return ret
	}
	return *o.DataDiskType.Get()
}

// GetDataDiskTypeOk returns a tuple with the DataDiskType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureParams) GetDataDiskTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DataDiskType.Get(), o.DataDiskType.IsSet()
}

// HasDataDiskType returns a boolean if a field has been set.
func (o *AzureParams) HasDataDiskType() bool {
	if o != nil && o.DataDiskType.IsSet() {
		return true
	}

	return false
}

// SetDataDiskType gets a reference to the given NullableString and assigns it to the DataDiskType field.
func (o *AzureParams) SetDataDiskType(v string) {
	o.DataDiskType.Set(&v)
}
// SetDataDiskTypeNil sets the value for DataDiskType to be an explicit nil
func (o *AzureParams) SetDataDiskTypeNil() {
	o.DataDiskType.Set(nil)
}

// UnsetDataDiskType ensures that no value is present for DataDiskType, not even an explicit nil
func (o *AzureParams) UnsetDataDiskType() {
	o.DataDiskType.Unset()
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureParams) GetInstanceId() int64 {
	if o == nil || o.InstanceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.InstanceId.Get()
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureParams) GetInstanceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InstanceId.Get(), o.InstanceId.IsSet()
}

// HasInstanceId returns a boolean if a field has been set.
func (o *AzureParams) HasInstanceId() bool {
	if o != nil && o.InstanceId.IsSet() {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given NullableInt64 and assigns it to the InstanceId field.
func (o *AzureParams) SetInstanceId(v int64) {
	o.InstanceId.Set(&v)
}
// SetInstanceIdNil sets the value for InstanceId to be an explicit nil
func (o *AzureParams) SetInstanceIdNil() {
	o.InstanceId.Set(nil)
}

// UnsetInstanceId ensures that no value is present for InstanceId, not even an explicit nil
func (o *AzureParams) UnsetInstanceId() {
	o.InstanceId.Unset()
}

// GetNetworkResourceGroupId returns the NetworkResourceGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureParams) GetNetworkResourceGroupId() int64 {
	if o == nil || o.NetworkResourceGroupId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NetworkResourceGroupId.Get()
}

// GetNetworkResourceGroupIdOk returns a tuple with the NetworkResourceGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureParams) GetNetworkResourceGroupIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkResourceGroupId.Get(), o.NetworkResourceGroupId.IsSet()
}

// HasNetworkResourceGroupId returns a boolean if a field has been set.
func (o *AzureParams) HasNetworkResourceGroupId() bool {
	if o != nil && o.NetworkResourceGroupId.IsSet() {
		return true
	}

	return false
}

// SetNetworkResourceGroupId gets a reference to the given NullableInt64 and assigns it to the NetworkResourceGroupId field.
func (o *AzureParams) SetNetworkResourceGroupId(v int64) {
	o.NetworkResourceGroupId.Set(&v)
}
// SetNetworkResourceGroupIdNil sets the value for NetworkResourceGroupId to be an explicit nil
func (o *AzureParams) SetNetworkResourceGroupIdNil() {
	o.NetworkResourceGroupId.Set(nil)
}

// UnsetNetworkResourceGroupId ensures that no value is present for NetworkResourceGroupId, not even an explicit nil
func (o *AzureParams) UnsetNetworkResourceGroupId() {
	o.NetworkResourceGroupId.Unset()
}

// GetOsDiskType returns the OsDiskType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureParams) GetOsDiskType() string {
	if o == nil || o.OsDiskType.Get() == nil {
		var ret string
		return ret
	}
	return *o.OsDiskType.Get()
}

// GetOsDiskTypeOk returns a tuple with the OsDiskType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureParams) GetOsDiskTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OsDiskType.Get(), o.OsDiskType.IsSet()
}

// HasOsDiskType returns a boolean if a field has been set.
func (o *AzureParams) HasOsDiskType() bool {
	if o != nil && o.OsDiskType.IsSet() {
		return true
	}

	return false
}

// SetOsDiskType gets a reference to the given NullableString and assigns it to the OsDiskType field.
func (o *AzureParams) SetOsDiskType(v string) {
	o.OsDiskType.Set(&v)
}
// SetOsDiskTypeNil sets the value for OsDiskType to be an explicit nil
func (o *AzureParams) SetOsDiskTypeNil() {
	o.OsDiskType.Set(nil)
}

// UnsetOsDiskType ensures that no value is present for OsDiskType, not even an explicit nil
func (o *AzureParams) UnsetOsDiskType() {
	o.OsDiskType.Unset()
}

// GetResourceGroup returns the ResourceGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureParams) GetResourceGroup() int64 {
	if o == nil || o.ResourceGroup.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ResourceGroup.Get()
}

// GetResourceGroupOk returns a tuple with the ResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureParams) GetResourceGroupOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ResourceGroup.Get(), o.ResourceGroup.IsSet()
}

// HasResourceGroup returns a boolean if a field has been set.
func (o *AzureParams) HasResourceGroup() bool {
	if o != nil && o.ResourceGroup.IsSet() {
		return true
	}

	return false
}

// SetResourceGroup gets a reference to the given NullableInt64 and assigns it to the ResourceGroup field.
func (o *AzureParams) SetResourceGroup(v int64) {
	o.ResourceGroup.Set(&v)
}
// SetResourceGroupNil sets the value for ResourceGroup to be an explicit nil
func (o *AzureParams) SetResourceGroupNil() {
	o.ResourceGroup.Set(nil)
}

// UnsetResourceGroup ensures that no value is present for ResourceGroup, not even an explicit nil
func (o *AzureParams) UnsetResourceGroup() {
	o.ResourceGroup.Unset()
}

// GetStorageAccount returns the StorageAccount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureParams) GetStorageAccount() int64 {
	if o == nil || o.StorageAccount.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StorageAccount.Get()
}

// GetStorageAccountOk returns a tuple with the StorageAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureParams) GetStorageAccountOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StorageAccount.Get(), o.StorageAccount.IsSet()
}

// HasStorageAccount returns a boolean if a field has been set.
func (o *AzureParams) HasStorageAccount() bool {
	if o != nil && o.StorageAccount.IsSet() {
		return true
	}

	return false
}

// SetStorageAccount gets a reference to the given NullableInt64 and assigns it to the StorageAccount field.
func (o *AzureParams) SetStorageAccount(v int64) {
	o.StorageAccount.Set(&v)
}
// SetStorageAccountNil sets the value for StorageAccount to be an explicit nil
func (o *AzureParams) SetStorageAccountNil() {
	o.StorageAccount.Set(nil)
}

// UnsetStorageAccount ensures that no value is present for StorageAccount, not even an explicit nil
func (o *AzureParams) UnsetStorageAccount() {
	o.StorageAccount.Unset()
}

// GetStorageContainer returns the StorageContainer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureParams) GetStorageContainer() int64 {
	if o == nil || o.StorageContainer.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StorageContainer.Get()
}

// GetStorageContainerOk returns a tuple with the StorageContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureParams) GetStorageContainerOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StorageContainer.Get(), o.StorageContainer.IsSet()
}

// HasStorageContainer returns a boolean if a field has been set.
func (o *AzureParams) HasStorageContainer() bool {
	if o != nil && o.StorageContainer.IsSet() {
		return true
	}

	return false
}

// SetStorageContainer gets a reference to the given NullableInt64 and assigns it to the StorageContainer field.
func (o *AzureParams) SetStorageContainer(v int64) {
	o.StorageContainer.Set(&v)
}
// SetStorageContainerNil sets the value for StorageContainer to be an explicit nil
func (o *AzureParams) SetStorageContainerNil() {
	o.StorageContainer.Set(nil)
}

// UnsetStorageContainer ensures that no value is present for StorageContainer, not even an explicit nil
func (o *AzureParams) UnsetStorageContainer() {
	o.StorageContainer.Unset()
}

// GetStorageResourceGroupId returns the StorageResourceGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureParams) GetStorageResourceGroupId() int64 {
	if o == nil || o.StorageResourceGroupId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.StorageResourceGroupId.Get()
}

// GetStorageResourceGroupIdOk returns a tuple with the StorageResourceGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureParams) GetStorageResourceGroupIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StorageResourceGroupId.Get(), o.StorageResourceGroupId.IsSet()
}

// HasStorageResourceGroupId returns a boolean if a field has been set.
func (o *AzureParams) HasStorageResourceGroupId() bool {
	if o != nil && o.StorageResourceGroupId.IsSet() {
		return true
	}

	return false
}

// SetStorageResourceGroupId gets a reference to the given NullableInt64 and assigns it to the StorageResourceGroupId field.
func (o *AzureParams) SetStorageResourceGroupId(v int64) {
	o.StorageResourceGroupId.Set(&v)
}
// SetStorageResourceGroupIdNil sets the value for StorageResourceGroupId to be an explicit nil
func (o *AzureParams) SetStorageResourceGroupIdNil() {
	o.StorageResourceGroupId.Set(nil)
}

// UnsetStorageResourceGroupId ensures that no value is present for StorageResourceGroupId, not even an explicit nil
func (o *AzureParams) UnsetStorageResourceGroupId() {
	o.StorageResourceGroupId.Unset()
}

// GetSubnetId returns the SubnetId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureParams) GetSubnetId() int64 {
	if o == nil || o.SubnetId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SubnetId.Get()
}

// GetSubnetIdOk returns a tuple with the SubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureParams) GetSubnetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubnetId.Get(), o.SubnetId.IsSet()
}

// HasSubnetId returns a boolean if a field has been set.
func (o *AzureParams) HasSubnetId() bool {
	if o != nil && o.SubnetId.IsSet() {
		return true
	}

	return false
}

// SetSubnetId gets a reference to the given NullableInt64 and assigns it to the SubnetId field.
func (o *AzureParams) SetSubnetId(v int64) {
	o.SubnetId.Set(&v)
}
// SetSubnetIdNil sets the value for SubnetId to be an explicit nil
func (o *AzureParams) SetSubnetIdNil() {
	o.SubnetId.Set(nil)
}

// UnsetSubnetId ensures that no value is present for SubnetId, not even an explicit nil
func (o *AzureParams) UnsetSubnetId() {
	o.SubnetId.Unset()
}

// GetTempVmResourceGroupId returns the TempVmResourceGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureParams) GetTempVmResourceGroupId() int64 {
	if o == nil || o.TempVmResourceGroupId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TempVmResourceGroupId.Get()
}

// GetTempVmResourceGroupIdOk returns a tuple with the TempVmResourceGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureParams) GetTempVmResourceGroupIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TempVmResourceGroupId.Get(), o.TempVmResourceGroupId.IsSet()
}

// HasTempVmResourceGroupId returns a boolean if a field has been set.
func (o *AzureParams) HasTempVmResourceGroupId() bool {
	if o != nil && o.TempVmResourceGroupId.IsSet() {
		return true
	}

	return false
}

// SetTempVmResourceGroupId gets a reference to the given NullableInt64 and assigns it to the TempVmResourceGroupId field.
func (o *AzureParams) SetTempVmResourceGroupId(v int64) {
	o.TempVmResourceGroupId.Set(&v)
}
// SetTempVmResourceGroupIdNil sets the value for TempVmResourceGroupId to be an explicit nil
func (o *AzureParams) SetTempVmResourceGroupIdNil() {
	o.TempVmResourceGroupId.Set(nil)
}

// UnsetTempVmResourceGroupId ensures that no value is present for TempVmResourceGroupId, not even an explicit nil
func (o *AzureParams) UnsetTempVmResourceGroupId() {
	o.TempVmResourceGroupId.Unset()
}

// GetTempVmStorageAccountId returns the TempVmStorageAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureParams) GetTempVmStorageAccountId() int64 {
	if o == nil || o.TempVmStorageAccountId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TempVmStorageAccountId.Get()
}

// GetTempVmStorageAccountIdOk returns a tuple with the TempVmStorageAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureParams) GetTempVmStorageAccountIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TempVmStorageAccountId.Get(), o.TempVmStorageAccountId.IsSet()
}

// HasTempVmStorageAccountId returns a boolean if a field has been set.
func (o *AzureParams) HasTempVmStorageAccountId() bool {
	if o != nil && o.TempVmStorageAccountId.IsSet() {
		return true
	}

	return false
}

// SetTempVmStorageAccountId gets a reference to the given NullableInt64 and assigns it to the TempVmStorageAccountId field.
func (o *AzureParams) SetTempVmStorageAccountId(v int64) {
	o.TempVmStorageAccountId.Set(&v)
}
// SetTempVmStorageAccountIdNil sets the value for TempVmStorageAccountId to be an explicit nil
func (o *AzureParams) SetTempVmStorageAccountIdNil() {
	o.TempVmStorageAccountId.Set(nil)
}

// UnsetTempVmStorageAccountId ensures that no value is present for TempVmStorageAccountId, not even an explicit nil
func (o *AzureParams) UnsetTempVmStorageAccountId() {
	o.TempVmStorageAccountId.Unset()
}

// GetTempVmStorageContainerId returns the TempVmStorageContainerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureParams) GetTempVmStorageContainerId() int64 {
	if o == nil || o.TempVmStorageContainerId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TempVmStorageContainerId.Get()
}

// GetTempVmStorageContainerIdOk returns a tuple with the TempVmStorageContainerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureParams) GetTempVmStorageContainerIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TempVmStorageContainerId.Get(), o.TempVmStorageContainerId.IsSet()
}

// HasTempVmStorageContainerId returns a boolean if a field has been set.
func (o *AzureParams) HasTempVmStorageContainerId() bool {
	if o != nil && o.TempVmStorageContainerId.IsSet() {
		return true
	}

	return false
}

// SetTempVmStorageContainerId gets a reference to the given NullableInt64 and assigns it to the TempVmStorageContainerId field.
func (o *AzureParams) SetTempVmStorageContainerId(v int64) {
	o.TempVmStorageContainerId.Set(&v)
}
// SetTempVmStorageContainerIdNil sets the value for TempVmStorageContainerId to be an explicit nil
func (o *AzureParams) SetTempVmStorageContainerIdNil() {
	o.TempVmStorageContainerId.Set(nil)
}

// UnsetTempVmStorageContainerId ensures that no value is present for TempVmStorageContainerId, not even an explicit nil
func (o *AzureParams) UnsetTempVmStorageContainerId() {
	o.TempVmStorageContainerId.Unset()
}

// GetTempVmSubnetId returns the TempVmSubnetId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureParams) GetTempVmSubnetId() int64 {
	if o == nil || o.TempVmSubnetId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TempVmSubnetId.Get()
}

// GetTempVmSubnetIdOk returns a tuple with the TempVmSubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureParams) GetTempVmSubnetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TempVmSubnetId.Get(), o.TempVmSubnetId.IsSet()
}

// HasTempVmSubnetId returns a boolean if a field has been set.
func (o *AzureParams) HasTempVmSubnetId() bool {
	if o != nil && o.TempVmSubnetId.IsSet() {
		return true
	}

	return false
}

// SetTempVmSubnetId gets a reference to the given NullableInt64 and assigns it to the TempVmSubnetId field.
func (o *AzureParams) SetTempVmSubnetId(v int64) {
	o.TempVmSubnetId.Set(&v)
}
// SetTempVmSubnetIdNil sets the value for TempVmSubnetId to be an explicit nil
func (o *AzureParams) SetTempVmSubnetIdNil() {
	o.TempVmSubnetId.Set(nil)
}

// UnsetTempVmSubnetId ensures that no value is present for TempVmSubnetId, not even an explicit nil
func (o *AzureParams) UnsetTempVmSubnetId() {
	o.TempVmSubnetId.Unset()
}

// GetTempVmVirtualNetworkId returns the TempVmVirtualNetworkId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureParams) GetTempVmVirtualNetworkId() int64 {
	if o == nil || o.TempVmVirtualNetworkId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TempVmVirtualNetworkId.Get()
}

// GetTempVmVirtualNetworkIdOk returns a tuple with the TempVmVirtualNetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureParams) GetTempVmVirtualNetworkIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TempVmVirtualNetworkId.Get(), o.TempVmVirtualNetworkId.IsSet()
}

// HasTempVmVirtualNetworkId returns a boolean if a field has been set.
func (o *AzureParams) HasTempVmVirtualNetworkId() bool {
	if o != nil && o.TempVmVirtualNetworkId.IsSet() {
		return true
	}

	return false
}

// SetTempVmVirtualNetworkId gets a reference to the given NullableInt64 and assigns it to the TempVmVirtualNetworkId field.
func (o *AzureParams) SetTempVmVirtualNetworkId(v int64) {
	o.TempVmVirtualNetworkId.Set(&v)
}
// SetTempVmVirtualNetworkIdNil sets the value for TempVmVirtualNetworkId to be an explicit nil
func (o *AzureParams) SetTempVmVirtualNetworkIdNil() {
	o.TempVmVirtualNetworkId.Set(nil)
}

// UnsetTempVmVirtualNetworkId ensures that no value is present for TempVmVirtualNetworkId, not even an explicit nil
func (o *AzureParams) UnsetTempVmVirtualNetworkId() {
	o.TempVmVirtualNetworkId.Unset()
}

// GetVirtualNetworkId returns the VirtualNetworkId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureParams) GetVirtualNetworkId() int64 {
	if o == nil || o.VirtualNetworkId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.VirtualNetworkId.Get()
}

// GetVirtualNetworkIdOk returns a tuple with the VirtualNetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureParams) GetVirtualNetworkIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VirtualNetworkId.Get(), o.VirtualNetworkId.IsSet()
}

// HasVirtualNetworkId returns a boolean if a field has been set.
func (o *AzureParams) HasVirtualNetworkId() bool {
	if o != nil && o.VirtualNetworkId.IsSet() {
		return true
	}

	return false
}

// SetVirtualNetworkId gets a reference to the given NullableInt64 and assigns it to the VirtualNetworkId field.
func (o *AzureParams) SetVirtualNetworkId(v int64) {
	o.VirtualNetworkId.Set(&v)
}
// SetVirtualNetworkIdNil sets the value for VirtualNetworkId to be an explicit nil
func (o *AzureParams) SetVirtualNetworkIdNil() {
	o.VirtualNetworkId.Set(nil)
}

// UnsetVirtualNetworkId ensures that no value is present for VirtualNetworkId, not even an explicit nil
func (o *AzureParams) UnsetVirtualNetworkId() {
	o.VirtualNetworkId.Unset()
}

func (o AzureParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DataDiskType.IsSet() {
		toSerialize["dataDiskType"] = o.DataDiskType.Get()
	}
	if o.InstanceId.IsSet() {
		toSerialize["instanceId"] = o.InstanceId.Get()
	}
	if o.NetworkResourceGroupId.IsSet() {
		toSerialize["networkResourceGroupId"] = o.NetworkResourceGroupId.Get()
	}
	if o.OsDiskType.IsSet() {
		toSerialize["osDiskType"] = o.OsDiskType.Get()
	}
	if o.ResourceGroup.IsSet() {
		toSerialize["resourceGroup"] = o.ResourceGroup.Get()
	}
	if o.StorageAccount.IsSet() {
		toSerialize["storageAccount"] = o.StorageAccount.Get()
	}
	if o.StorageContainer.IsSet() {
		toSerialize["storageContainer"] = o.StorageContainer.Get()
	}
	if o.StorageResourceGroupId.IsSet() {
		toSerialize["storageResourceGroupId"] = o.StorageResourceGroupId.Get()
	}
	if o.SubnetId.IsSet() {
		toSerialize["subnetId"] = o.SubnetId.Get()
	}
	if o.TempVmResourceGroupId.IsSet() {
		toSerialize["tempVmResourceGroupId"] = o.TempVmResourceGroupId.Get()
	}
	if o.TempVmStorageAccountId.IsSet() {
		toSerialize["tempVmStorageAccountId"] = o.TempVmStorageAccountId.Get()
	}
	if o.TempVmStorageContainerId.IsSet() {
		toSerialize["tempVmStorageContainerId"] = o.TempVmStorageContainerId.Get()
	}
	if o.TempVmSubnetId.IsSet() {
		toSerialize["tempVmSubnetId"] = o.TempVmSubnetId.Get()
	}
	if o.TempVmVirtualNetworkId.IsSet() {
		toSerialize["tempVmVirtualNetworkId"] = o.TempVmVirtualNetworkId.Get()
	}
	if o.VirtualNetworkId.IsSet() {
		toSerialize["virtualNetworkId"] = o.VirtualNetworkId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAzureParams struct {
	value *AzureParams
	isSet bool
}

func (v NullableAzureParams) Get() *AzureParams {
	return v.value
}

func (v *NullableAzureParams) Set(val *AzureParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureParams(val *AzureParams) *NullableAzureParams {
	return &NullableAzureParams{value: val, isSet: true}
}

func (v NullableAzureParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


