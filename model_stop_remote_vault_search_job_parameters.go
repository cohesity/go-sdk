/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// StopRemoteVaultSearchJobParameters Request to stop a remote Vault search Job.
type StopRemoteVaultSearchJobParameters struct {
	// Specifies the unique id of the Remote Vault search job in progress.
	SearchJobUid NullableUniversalId `json:"searchJobUid,omitempty"`
}

// NewStopRemoteVaultSearchJobParameters instantiates a new StopRemoteVaultSearchJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStopRemoteVaultSearchJobParameters() *StopRemoteVaultSearchJobParameters {
	this := StopRemoteVaultSearchJobParameters{}
	return &this
}

// NewStopRemoteVaultSearchJobParametersWithDefaults instantiates a new StopRemoteVaultSearchJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStopRemoteVaultSearchJobParametersWithDefaults() *StopRemoteVaultSearchJobParameters {
	this := StopRemoteVaultSearchJobParameters{}
	return &this
}

// GetSearchJobUid returns the SearchJobUid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StopRemoteVaultSearchJobParameters) GetSearchJobUid() UniversalId {
	if o == nil || o.SearchJobUid.Get() == nil {
		var ret UniversalId
		return ret
	}
	return *o.SearchJobUid.Get()
}

// GetSearchJobUidOk returns a tuple with the SearchJobUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StopRemoteVaultSearchJobParameters) GetSearchJobUidOk() (*UniversalId, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SearchJobUid.Get(), o.SearchJobUid.IsSet()
}

// HasSearchJobUid returns a boolean if a field has been set.
func (o *StopRemoteVaultSearchJobParameters) HasSearchJobUid() bool {
	if o != nil && o.SearchJobUid.IsSet() {
		return true
	}

	return false
}

// SetSearchJobUid gets a reference to the given NullableUniversalId and assigns it to the SearchJobUid field.
func (o *StopRemoteVaultSearchJobParameters) SetSearchJobUid(v UniversalId) {
	o.SearchJobUid.Set(&v)
}
// SetSearchJobUidNil sets the value for SearchJobUid to be an explicit nil
func (o *StopRemoteVaultSearchJobParameters) SetSearchJobUidNil() {
	o.SearchJobUid.Set(nil)
}

// UnsetSearchJobUid ensures that no value is present for SearchJobUid, not even an explicit nil
func (o *StopRemoteVaultSearchJobParameters) UnsetSearchJobUid() {
	o.SearchJobUid.Unset()
}

func (o StopRemoteVaultSearchJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SearchJobUid.IsSet() {
		toSerialize["searchJobUid"] = o.SearchJobUid.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableStopRemoteVaultSearchJobParameters struct {
	value *StopRemoteVaultSearchJobParameters
	isSet bool
}

func (v NullableStopRemoteVaultSearchJobParameters) Get() *StopRemoteVaultSearchJobParameters {
	return v.value
}

func (v *NullableStopRemoteVaultSearchJobParameters) Set(val *StopRemoteVaultSearchJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableStopRemoteVaultSearchJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableStopRemoteVaultSearchJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStopRemoteVaultSearchJobParameters(val *StopRemoteVaultSearchJobParameters) *NullableStopRemoteVaultSearchJobParameters {
	return &NullableStopRemoteVaultSearchJobParameters{value: val, isSet: true}
}

func (v NullableStopRemoteVaultSearchJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStopRemoteVaultSearchJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


