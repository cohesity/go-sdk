/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// Office365EnvJobParameters Specifies Office365 parameters applicable for all Office365 Environment type Protection Sources in a Protection Job. This encapsulates both OneDrive & Mailbox parameters.
type Office365EnvJobParameters struct {
	OnedriveParameters *OneDriveEnvJobParameters `json:"onedriveParameters,omitempty"`
	OutlookParameters *OutlookEnvJobParameters `json:"outlookParameters,omitempty"`
}

// NewOffice365EnvJobParameters instantiates a new Office365EnvJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOffice365EnvJobParameters() *Office365EnvJobParameters {
	this := Office365EnvJobParameters{}
	return &this
}

// NewOffice365EnvJobParametersWithDefaults instantiates a new Office365EnvJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOffice365EnvJobParametersWithDefaults() *Office365EnvJobParameters {
	this := Office365EnvJobParameters{}
	return &this
}

// GetOnedriveParameters returns the OnedriveParameters field value if set, zero value otherwise.
func (o *Office365EnvJobParameters) GetOnedriveParameters() OneDriveEnvJobParameters {
	if o == nil || o.OnedriveParameters == nil {
		var ret OneDriveEnvJobParameters
		return ret
	}
	return *o.OnedriveParameters
}

// GetOnedriveParametersOk returns a tuple with the OnedriveParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office365EnvJobParameters) GetOnedriveParametersOk() (*OneDriveEnvJobParameters, bool) {
	if o == nil || o.OnedriveParameters == nil {
		return nil, false
	}
	return o.OnedriveParameters, true
}

// HasOnedriveParameters returns a boolean if a field has been set.
func (o *Office365EnvJobParameters) HasOnedriveParameters() bool {
	if o != nil && o.OnedriveParameters != nil {
		return true
	}

	return false
}

// SetOnedriveParameters gets a reference to the given OneDriveEnvJobParameters and assigns it to the OnedriveParameters field.
func (o *Office365EnvJobParameters) SetOnedriveParameters(v OneDriveEnvJobParameters) {
	o.OnedriveParameters = &v
}

// GetOutlookParameters returns the OutlookParameters field value if set, zero value otherwise.
func (o *Office365EnvJobParameters) GetOutlookParameters() OutlookEnvJobParameters {
	if o == nil || o.OutlookParameters == nil {
		var ret OutlookEnvJobParameters
		return ret
	}
	return *o.OutlookParameters
}

// GetOutlookParametersOk returns a tuple with the OutlookParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office365EnvJobParameters) GetOutlookParametersOk() (*OutlookEnvJobParameters, bool) {
	if o == nil || o.OutlookParameters == nil {
		return nil, false
	}
	return o.OutlookParameters, true
}

// HasOutlookParameters returns a boolean if a field has been set.
func (o *Office365EnvJobParameters) HasOutlookParameters() bool {
	if o != nil && o.OutlookParameters != nil {
		return true
	}

	return false
}

// SetOutlookParameters gets a reference to the given OutlookEnvJobParameters and assigns it to the OutlookParameters field.
func (o *Office365EnvJobParameters) SetOutlookParameters(v OutlookEnvJobParameters) {
	o.OutlookParameters = &v
}

func (o Office365EnvJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OnedriveParameters != nil {
		toSerialize["onedriveParameters"] = o.OnedriveParameters
	}
	if o.OutlookParameters != nil {
		toSerialize["outlookParameters"] = o.OutlookParameters
	}
	return json.Marshal(toSerialize)
}

type NullableOffice365EnvJobParameters struct {
	value *Office365EnvJobParameters
	isSet bool
}

func (v NullableOffice365EnvJobParameters) Get() *Office365EnvJobParameters {
	return v.value
}

func (v *NullableOffice365EnvJobParameters) Set(val *Office365EnvJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableOffice365EnvJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableOffice365EnvJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOffice365EnvJobParameters(val *Office365EnvJobParameters) *NullableOffice365EnvJobParameters {
	return &NullableOffice365EnvJobParameters{value: val, isSet: true}
}

func (v NullableOffice365EnvJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOffice365EnvJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


