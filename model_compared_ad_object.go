/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// ComparedADObject Represents the details about an AD object and its properties. The attributes of the AD Object contain the information about whether they are equal on both Snapshot AD and Production AD as well as value of attribute on both Production and Snapshot AD.
type ComparedADObject struct {
	// Specifies the list of AD attributes for the AD object.
	AdAttributes []AdAttribute `json:"adAttributes,omitempty"`
	// Specifies the flags related to this AD Object. 'kEqual' indicates all the attributes of the AD Object on the Snapshot and Production are equal. 'kNotEqual' indicates atleast one of the attribute of the AD Object on the Snapshot and Production AD are not equal. 'kRestorePasswordRequired' indicates the AD Object is of 'User' object class type. when restoring this object from Snapshot AD to Priduction AD, a password is required. 'kMovedOnDestination' indicates the object has moved to another container or OU in production AD compared to AD snapshot. In this case, the distinguishedName will be different for these objects 'kDestinationNotFound' indicates the object corresponding to dest_guid specified is missing from Production AD. Caller should check this flag and empty 'dest_guid' first to find out destination is missing. 'kDisableSupported' indicates the enable and disable is supported on the AD Object. AD Objects of type 'User' and 'Computers' support this operation.
	AdObjectFlags []string `json:"adObjectFlags,omitempty"`
	// Specifies the guid of the object in the Production AD which is equivalent to the one in the Snapshot AD.
	DestinationGuid NullableString `json:"destinationGuid,omitempty"`
	// Specifies the error message while fetching the AD object.
	ErrorMessage NullableString `json:"errorMessage,omitempty"`
	// Specifies the number of attributes of AD Object mismatched on the Snapshot and Production AD.
	MismatchAttrCount NullableInt32 `json:"mismatchAttrCount,omitempty"`
	// Specifies the guid of the AD object in the Snapshot AD.
	SourceGuid NullableString `json:"sourceGuid,omitempty"`
}

// NewComparedADObject instantiates a new ComparedADObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComparedADObject() *ComparedADObject {
	this := ComparedADObject{}
	return &this
}

// NewComparedADObjectWithDefaults instantiates a new ComparedADObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComparedADObjectWithDefaults() *ComparedADObject {
	this := ComparedADObject{}
	return &this
}

// GetAdAttributes returns the AdAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComparedADObject) GetAdAttributes() []AdAttribute {
	if o == nil  {
		var ret []AdAttribute
		return ret
	}
	return o.AdAttributes
}

// GetAdAttributesOk returns a tuple with the AdAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComparedADObject) GetAdAttributesOk() (*[]AdAttribute, bool) {
	if o == nil || o.AdAttributes == nil {
		return nil, false
	}
	return &o.AdAttributes, true
}

// HasAdAttributes returns a boolean if a field has been set.
func (o *ComparedADObject) HasAdAttributes() bool {
	if o != nil && o.AdAttributes != nil {
		return true
	}

	return false
}

// SetAdAttributes gets a reference to the given []AdAttribute and assigns it to the AdAttributes field.
func (o *ComparedADObject) SetAdAttributes(v []AdAttribute) {
	o.AdAttributes = v
}

// GetAdObjectFlags returns the AdObjectFlags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComparedADObject) GetAdObjectFlags() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.AdObjectFlags
}

// GetAdObjectFlagsOk returns a tuple with the AdObjectFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComparedADObject) GetAdObjectFlagsOk() (*[]string, bool) {
	if o == nil || o.AdObjectFlags == nil {
		return nil, false
	}
	return &o.AdObjectFlags, true
}

// HasAdObjectFlags returns a boolean if a field has been set.
func (o *ComparedADObject) HasAdObjectFlags() bool {
	if o != nil && o.AdObjectFlags != nil {
		return true
	}

	return false
}

// SetAdObjectFlags gets a reference to the given []string and assigns it to the AdObjectFlags field.
func (o *ComparedADObject) SetAdObjectFlags(v []string) {
	o.AdObjectFlags = v
}

// GetDestinationGuid returns the DestinationGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComparedADObject) GetDestinationGuid() string {
	if o == nil || o.DestinationGuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.DestinationGuid.Get()
}

// GetDestinationGuidOk returns a tuple with the DestinationGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComparedADObject) GetDestinationGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DestinationGuid.Get(), o.DestinationGuid.IsSet()
}

// HasDestinationGuid returns a boolean if a field has been set.
func (o *ComparedADObject) HasDestinationGuid() bool {
	if o != nil && o.DestinationGuid.IsSet() {
		return true
	}

	return false
}

// SetDestinationGuid gets a reference to the given NullableString and assigns it to the DestinationGuid field.
func (o *ComparedADObject) SetDestinationGuid(v string) {
	o.DestinationGuid.Set(&v)
}
// SetDestinationGuidNil sets the value for DestinationGuid to be an explicit nil
func (o *ComparedADObject) SetDestinationGuidNil() {
	o.DestinationGuid.Set(nil)
}

// UnsetDestinationGuid ensures that no value is present for DestinationGuid, not even an explicit nil
func (o *ComparedADObject) UnsetDestinationGuid() {
	o.DestinationGuid.Unset()
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComparedADObject) GetErrorMessage() string {
	if o == nil || o.ErrorMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComparedADObject) GetErrorMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *ComparedADObject) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *ComparedADObject) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *ComparedADObject) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *ComparedADObject) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetMismatchAttrCount returns the MismatchAttrCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComparedADObject) GetMismatchAttrCount() int32 {
	if o == nil || o.MismatchAttrCount.Get() == nil {
		var ret int32
		return ret
	}
	return *o.MismatchAttrCount.Get()
}

// GetMismatchAttrCountOk returns a tuple with the MismatchAttrCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComparedADObject) GetMismatchAttrCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MismatchAttrCount.Get(), o.MismatchAttrCount.IsSet()
}

// HasMismatchAttrCount returns a boolean if a field has been set.
func (o *ComparedADObject) HasMismatchAttrCount() bool {
	if o != nil && o.MismatchAttrCount.IsSet() {
		return true
	}

	return false
}

// SetMismatchAttrCount gets a reference to the given NullableInt32 and assigns it to the MismatchAttrCount field.
func (o *ComparedADObject) SetMismatchAttrCount(v int32) {
	o.MismatchAttrCount.Set(&v)
}
// SetMismatchAttrCountNil sets the value for MismatchAttrCount to be an explicit nil
func (o *ComparedADObject) SetMismatchAttrCountNil() {
	o.MismatchAttrCount.Set(nil)
}

// UnsetMismatchAttrCount ensures that no value is present for MismatchAttrCount, not even an explicit nil
func (o *ComparedADObject) UnsetMismatchAttrCount() {
	o.MismatchAttrCount.Unset()
}

// GetSourceGuid returns the SourceGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComparedADObject) GetSourceGuid() string {
	if o == nil || o.SourceGuid.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceGuid.Get()
}

// GetSourceGuidOk returns a tuple with the SourceGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComparedADObject) GetSourceGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceGuid.Get(), o.SourceGuid.IsSet()
}

// HasSourceGuid returns a boolean if a field has been set.
func (o *ComparedADObject) HasSourceGuid() bool {
	if o != nil && o.SourceGuid.IsSet() {
		return true
	}

	return false
}

// SetSourceGuid gets a reference to the given NullableString and assigns it to the SourceGuid field.
func (o *ComparedADObject) SetSourceGuid(v string) {
	o.SourceGuid.Set(&v)
}
// SetSourceGuidNil sets the value for SourceGuid to be an explicit nil
func (o *ComparedADObject) SetSourceGuidNil() {
	o.SourceGuid.Set(nil)
}

// UnsetSourceGuid ensures that no value is present for SourceGuid, not even an explicit nil
func (o *ComparedADObject) UnsetSourceGuid() {
	o.SourceGuid.Unset()
}

func (o ComparedADObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdAttributes != nil {
		toSerialize["adAttributes"] = o.AdAttributes
	}
	if o.AdObjectFlags != nil {
		toSerialize["adObjectFlags"] = o.AdObjectFlags
	}
	if o.DestinationGuid.IsSet() {
		toSerialize["destinationGuid"] = o.DestinationGuid.Get()
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["errorMessage"] = o.ErrorMessage.Get()
	}
	if o.MismatchAttrCount.IsSet() {
		toSerialize["mismatchAttrCount"] = o.MismatchAttrCount.Get()
	}
	if o.SourceGuid.IsSet() {
		toSerialize["sourceGuid"] = o.SourceGuid.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableComparedADObject struct {
	value *ComparedADObject
	isSet bool
}

func (v NullableComparedADObject) Get() *ComparedADObject {
	return v.value
}

func (v *NullableComparedADObject) Set(val *ComparedADObject) {
	v.value = val
	v.isSet = true
}

func (v NullableComparedADObject) IsSet() bool {
	return v.isSet
}

func (v *NullableComparedADObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComparedADObject(val *ComparedADObject) *NullableComparedADObject {
	return &NullableComparedADObject{value: val, isSet: true}
}

func (v NullableComparedADObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComparedADObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


