/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// CustomUnixIdAttributes Specifies the custom attributes when mapping type is set to 'kCustomAttributes'. It defines the attribute names to derive the mapping for a user of an Active Directory domain.
type CustomUnixIdAttributes struct {
	// Specifies the custom field name in Active Directory user properties to get the GID.
	GidAttrName NullableString `json:"gidAttrName,omitempty"`
	// Specifies the custom field name in Active Directory user properties to get the UID.
	UidAttrName NullableString `json:"uidAttrName,omitempty"`
}

// NewCustomUnixIdAttributes instantiates a new CustomUnixIdAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomUnixIdAttributes() *CustomUnixIdAttributes {
	this := CustomUnixIdAttributes{}
	return &this
}

// NewCustomUnixIdAttributesWithDefaults instantiates a new CustomUnixIdAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomUnixIdAttributesWithDefaults() *CustomUnixIdAttributes {
	this := CustomUnixIdAttributes{}
	return &this
}

// GetGidAttrName returns the GidAttrName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomUnixIdAttributes) GetGidAttrName() string {
	if o == nil || o.GidAttrName.Get() == nil {
		var ret string
		return ret
	}
	return *o.GidAttrName.Get()
}

// GetGidAttrNameOk returns a tuple with the GidAttrName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomUnixIdAttributes) GetGidAttrNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GidAttrName.Get(), o.GidAttrName.IsSet()
}

// HasGidAttrName returns a boolean if a field has been set.
func (o *CustomUnixIdAttributes) HasGidAttrName() bool {
	if o != nil && o.GidAttrName.IsSet() {
		return true
	}

	return false
}

// SetGidAttrName gets a reference to the given NullableString and assigns it to the GidAttrName field.
func (o *CustomUnixIdAttributes) SetGidAttrName(v string) {
	o.GidAttrName.Set(&v)
}
// SetGidAttrNameNil sets the value for GidAttrName to be an explicit nil
func (o *CustomUnixIdAttributes) SetGidAttrNameNil() {
	o.GidAttrName.Set(nil)
}

// UnsetGidAttrName ensures that no value is present for GidAttrName, not even an explicit nil
func (o *CustomUnixIdAttributes) UnsetGidAttrName() {
	o.GidAttrName.Unset()
}

// GetUidAttrName returns the UidAttrName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomUnixIdAttributes) GetUidAttrName() string {
	if o == nil || o.UidAttrName.Get() == nil {
		var ret string
		return ret
	}
	return *o.UidAttrName.Get()
}

// GetUidAttrNameOk returns a tuple with the UidAttrName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomUnixIdAttributes) GetUidAttrNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UidAttrName.Get(), o.UidAttrName.IsSet()
}

// HasUidAttrName returns a boolean if a field has been set.
func (o *CustomUnixIdAttributes) HasUidAttrName() bool {
	if o != nil && o.UidAttrName.IsSet() {
		return true
	}

	return false
}

// SetUidAttrName gets a reference to the given NullableString and assigns it to the UidAttrName field.
func (o *CustomUnixIdAttributes) SetUidAttrName(v string) {
	o.UidAttrName.Set(&v)
}
// SetUidAttrNameNil sets the value for UidAttrName to be an explicit nil
func (o *CustomUnixIdAttributes) SetUidAttrNameNil() {
	o.UidAttrName.Set(nil)
}

// UnsetUidAttrName ensures that no value is present for UidAttrName, not even an explicit nil
func (o *CustomUnixIdAttributes) UnsetUidAttrName() {
	o.UidAttrName.Unset()
}

func (o CustomUnixIdAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GidAttrName.IsSet() {
		toSerialize["gidAttrName"] = o.GidAttrName.Get()
	}
	if o.UidAttrName.IsSet() {
		toSerialize["uidAttrName"] = o.UidAttrName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCustomUnixIdAttributes struct {
	value *CustomUnixIdAttributes
	isSet bool
}

func (v NullableCustomUnixIdAttributes) Get() *CustomUnixIdAttributes {
	return v.value
}

func (v *NullableCustomUnixIdAttributes) Set(val *CustomUnixIdAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomUnixIdAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomUnixIdAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomUnixIdAttributes(val *CustomUnixIdAttributes) *NullableCustomUnixIdAttributes {
	return &NullableCustomUnixIdAttributes{value: val, isSet: true}
}

func (v NullableCustomUnixIdAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomUnixIdAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


