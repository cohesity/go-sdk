/*
 * Cohesity REST API
 *
 * This API list provides operations for interfacing with the Cohesity Cluster.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesitysdk

import (
	"encoding/json"
)

// RecoveriesTile Recoveries information.
type RecoveriesTile struct {
	// Number of Recoveries in the last 30 days.
	LastMonthNumRecoveries NullableInt32 `json:"lastMonthNumRecoveries,omitempty"`
	// Recoveries by Type in the last month.
	LastMonthRecoveriesByType []RestoreCountByObjectType `json:"lastMonthRecoveriesByType,omitempty"`
	// Bytes recovered in the last 30 days.
	LastMonthRecoverySizeBytes NullableInt64 `json:"lastMonthRecoverySizeBytes,omitempty"`
	// Number of recoveries that are currently running.
	RecoveryNumRunning NullableInt32 `json:"recoveryNumRunning,omitempty"`
}

// NewRecoveriesTile instantiates a new RecoveriesTile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoveriesTile() *RecoveriesTile {
	this := RecoveriesTile{}
	return &this
}

// NewRecoveriesTileWithDefaults instantiates a new RecoveriesTile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoveriesTileWithDefaults() *RecoveriesTile {
	this := RecoveriesTile{}
	return &this
}

// GetLastMonthNumRecoveries returns the LastMonthNumRecoveries field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoveriesTile) GetLastMonthNumRecoveries() int32 {
	if o == nil || o.LastMonthNumRecoveries.Get() == nil {
		var ret int32
		return ret
	}
	return *o.LastMonthNumRecoveries.Get()
}

// GetLastMonthNumRecoveriesOk returns a tuple with the LastMonthNumRecoveries field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoveriesTile) GetLastMonthNumRecoveriesOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastMonthNumRecoveries.Get(), o.LastMonthNumRecoveries.IsSet()
}

// HasLastMonthNumRecoveries returns a boolean if a field has been set.
func (o *RecoveriesTile) HasLastMonthNumRecoveries() bool {
	if o != nil && o.LastMonthNumRecoveries.IsSet() {
		return true
	}

	return false
}

// SetLastMonthNumRecoveries gets a reference to the given NullableInt32 and assigns it to the LastMonthNumRecoveries field.
func (o *RecoveriesTile) SetLastMonthNumRecoveries(v int32) {
	o.LastMonthNumRecoveries.Set(&v)
}
// SetLastMonthNumRecoveriesNil sets the value for LastMonthNumRecoveries to be an explicit nil
func (o *RecoveriesTile) SetLastMonthNumRecoveriesNil() {
	o.LastMonthNumRecoveries.Set(nil)
}

// UnsetLastMonthNumRecoveries ensures that no value is present for LastMonthNumRecoveries, not even an explicit nil
func (o *RecoveriesTile) UnsetLastMonthNumRecoveries() {
	o.LastMonthNumRecoveries.Unset()
}

// GetLastMonthRecoveriesByType returns the LastMonthRecoveriesByType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoveriesTile) GetLastMonthRecoveriesByType() []RestoreCountByObjectType {
	if o == nil  {
		var ret []RestoreCountByObjectType
		return ret
	}
	return o.LastMonthRecoveriesByType
}

// GetLastMonthRecoveriesByTypeOk returns a tuple with the LastMonthRecoveriesByType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoveriesTile) GetLastMonthRecoveriesByTypeOk() (*[]RestoreCountByObjectType, bool) {
	if o == nil || o.LastMonthRecoveriesByType == nil {
		return nil, false
	}
	return &o.LastMonthRecoveriesByType, true
}

// HasLastMonthRecoveriesByType returns a boolean if a field has been set.
func (o *RecoveriesTile) HasLastMonthRecoveriesByType() bool {
	if o != nil && o.LastMonthRecoveriesByType != nil {
		return true
	}

	return false
}

// SetLastMonthRecoveriesByType gets a reference to the given []RestoreCountByObjectType and assigns it to the LastMonthRecoveriesByType field.
func (o *RecoveriesTile) SetLastMonthRecoveriesByType(v []RestoreCountByObjectType) {
	o.LastMonthRecoveriesByType = v
}

// GetLastMonthRecoverySizeBytes returns the LastMonthRecoverySizeBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoveriesTile) GetLastMonthRecoverySizeBytes() int64 {
	if o == nil || o.LastMonthRecoverySizeBytes.Get() == nil {
		var ret int64
		return ret
	}
	return *o.LastMonthRecoverySizeBytes.Get()
}

// GetLastMonthRecoverySizeBytesOk returns a tuple with the LastMonthRecoverySizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoveriesTile) GetLastMonthRecoverySizeBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastMonthRecoverySizeBytes.Get(), o.LastMonthRecoverySizeBytes.IsSet()
}

// HasLastMonthRecoverySizeBytes returns a boolean if a field has been set.
func (o *RecoveriesTile) HasLastMonthRecoverySizeBytes() bool {
	if o != nil && o.LastMonthRecoverySizeBytes.IsSet() {
		return true
	}

	return false
}

// SetLastMonthRecoverySizeBytes gets a reference to the given NullableInt64 and assigns it to the LastMonthRecoverySizeBytes field.
func (o *RecoveriesTile) SetLastMonthRecoverySizeBytes(v int64) {
	o.LastMonthRecoverySizeBytes.Set(&v)
}
// SetLastMonthRecoverySizeBytesNil sets the value for LastMonthRecoverySizeBytes to be an explicit nil
func (o *RecoveriesTile) SetLastMonthRecoverySizeBytesNil() {
	o.LastMonthRecoverySizeBytes.Set(nil)
}

// UnsetLastMonthRecoverySizeBytes ensures that no value is present for LastMonthRecoverySizeBytes, not even an explicit nil
func (o *RecoveriesTile) UnsetLastMonthRecoverySizeBytes() {
	o.LastMonthRecoverySizeBytes.Unset()
}

// GetRecoveryNumRunning returns the RecoveryNumRunning field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecoveriesTile) GetRecoveryNumRunning() int32 {
	if o == nil || o.RecoveryNumRunning.Get() == nil {
		var ret int32
		return ret
	}
	return *o.RecoveryNumRunning.Get()
}

// GetRecoveryNumRunningOk returns a tuple with the RecoveryNumRunning field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecoveriesTile) GetRecoveryNumRunningOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RecoveryNumRunning.Get(), o.RecoveryNumRunning.IsSet()
}

// HasRecoveryNumRunning returns a boolean if a field has been set.
func (o *RecoveriesTile) HasRecoveryNumRunning() bool {
	if o != nil && o.RecoveryNumRunning.IsSet() {
		return true
	}

	return false
}

// SetRecoveryNumRunning gets a reference to the given NullableInt32 and assigns it to the RecoveryNumRunning field.
func (o *RecoveriesTile) SetRecoveryNumRunning(v int32) {
	o.RecoveryNumRunning.Set(&v)
}
// SetRecoveryNumRunningNil sets the value for RecoveryNumRunning to be an explicit nil
func (o *RecoveriesTile) SetRecoveryNumRunningNil() {
	o.RecoveryNumRunning.Set(nil)
}

// UnsetRecoveryNumRunning ensures that no value is present for RecoveryNumRunning, not even an explicit nil
func (o *RecoveriesTile) UnsetRecoveryNumRunning() {
	o.RecoveryNumRunning.Unset()
}

func (o RecoveriesTile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LastMonthNumRecoveries.IsSet() {
		toSerialize["lastMonthNumRecoveries"] = o.LastMonthNumRecoveries.Get()
	}
	if o.LastMonthRecoveriesByType != nil {
		toSerialize["lastMonthRecoveriesByType"] = o.LastMonthRecoveriesByType
	}
	if o.LastMonthRecoverySizeBytes.IsSet() {
		toSerialize["lastMonthRecoverySizeBytes"] = o.LastMonthRecoverySizeBytes.Get()
	}
	if o.RecoveryNumRunning.IsSet() {
		toSerialize["recoveryNumRunning"] = o.RecoveryNumRunning.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRecoveriesTile struct {
	value *RecoveriesTile
	isSet bool
}

func (v NullableRecoveriesTile) Get() *RecoveriesTile {
	return v.value
}

func (v *NullableRecoveriesTile) Set(val *RecoveriesTile) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoveriesTile) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoveriesTile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoveriesTile(val *RecoveriesTile) *NullableRecoveriesTile {
	return &NullableRecoveriesTile{value: val, isSet: true}
}

func (v NullableRecoveriesTile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoveriesTile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


